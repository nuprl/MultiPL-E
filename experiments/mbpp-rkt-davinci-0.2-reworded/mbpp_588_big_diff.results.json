{
  "name": "mbpp_588_big_diff",
  "language": "rkt",
  "prompt": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_588_big_diff.py",
  "prompt_terminology": "reworded",
  "tests": "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
  "stop_tokens": [
    "\n(define ",
    "\n#|",
    "\n;",
    "\n("
  ],
  "results": [
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (if (null? nums)\n      0\n      (- (apply max nums) (apply min nums))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (let ([min (apply min nums)]\n        [max (apply max nums)])\n    (- max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (if (null? nums)\n      0\n      (- (apply max nums) (apply min nums))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (let ([min (apply min nums)]\n        [max (apply max nums)])\n    (- max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (if (null? nums)\n      0\n      (- (apply max nums) (apply min nums))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (if (null? nums)\n      0\n      (- (apply max nums) (apply min nums))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (let ([max (apply max nums)]\n        [min (apply min nums)])\n    (- max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (if (null? nums)\n      0\n      (- (apply max nums) (apply min nums))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (let ([max (apply max nums)]\n        [min (apply min nums)])\n    (- max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (if (null? nums)\n      0\n      (- (apply max nums) (apply min nums))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (let ([big (apply max nums)]\n        [small (apply min nums)])\n    (- big small)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (apply - (apply max nums) (apply min nums)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpy1kjzwga.rkt:12:4\n\napply: contract violation\n  expected: list?\n  given: 1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpy1kjzwga.rkt:13:4\n\napply: contract violation\n  expected: list?\n  given: 4\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpy1kjzwga.rkt:14:4\n\napply: contract violation\n  expected: list?\n  given: 2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (let ((min (apply min nums))\n        (max (apply max nums)))\n    (- max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (let* ([min (apply min nums)]\n         [max (apply max nums)])\n    (- max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (if (null? nums)\n      0\n      (- (apply max nums) (apply min nums))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (let ([max (apply max nums)]\n        [min (apply min nums)])\n    (- max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (let ([max (apply max nums)]\n        [min (apply min nums)])\n    (- max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (if (null? nums)\n      0\n      (- (apply max nums) (apply min nums))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (let ([max (apply max nums)]\n        [min (apply min nums)])\n    (- max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (let ([min (apply min nums)]\n        [max (apply max nums)])\n    (- max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (apply - (apply max nums) (apply min nums)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpy1kjzwga.rkt:12:4\n\napply: contract violation\n  expected: list?\n  given: 1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpy1kjzwga.rkt:13:4\n\napply: contract violation\n  expected: list?\n  given: 4\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpy1kjzwga.rkt:14:4\n\napply: contract violation\n  expected: list?\n  given: 2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (apply - (apply max nums) (apply min nums)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpy1kjzwga.rkt:12:4\n\napply: contract violation\n  expected: list?\n  given: 1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpy1kjzwga.rkt:13:4\n\napply: contract violation\n  expected: list?\n  given: 4\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpy1kjzwga.rkt:14:4\n\napply: contract violation\n  expected: list?\n  given: 2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (let ([max (apply max nums)]\n        [min (apply min nums)])\n    (- max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (let ([min (apply min nums)]\n        [max (apply max nums)])\n    (- max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (if (null? nums)\n      0\n      (- (apply max nums) (apply min nums))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (let ([max (apply max nums)]\n        [min (apply min nums)])\n    (- max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (let ((max (apply max nums))\n        (min (apply min nums)))\n    (- max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123126,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (let ([max (apply max nums)]\n        [min (apply min nums)])\n    (- max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (let ([min (apply min nums)]\n        [max (apply max nums)])\n    (- max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (let ([min (apply min nums)]\n        [max (apply max nums)])\n    (- max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (let ([max (apply max nums)]\n        [min (apply min nums)])\n    (- max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (let ([max (apply max nums)]\n        [min (apply min nums)])\n    (- max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (let ([max (apply max nums)]\n        [min (apply min nums)])\n    (- max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (let ([min (apply min nums)]\n        [max (apply max nums)])\n    (- max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (apply - (apply max nums) (apply min nums)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpy1kjzwga.rkt:12:4\n\napply: contract violation\n  expected: list?\n  given: 1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpy1kjzwga.rkt:13:4\n\napply: contract violation\n  expected: list?\n  given: 4\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpy1kjzwga.rkt:14:4\n\napply: contract violation\n  expected: list?\n  given: 2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (if (null? nums)\n      0\n      (- (apply max nums) (apply min nums))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (let ([max (apply max nums)]\n        [min (apply min nums)])\n    (- max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (apply - (apply max nums) (apply min nums)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpy1kjzwga.rkt:12:4\n\napply: contract violation\n  expected: list?\n  given: 1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpy1kjzwga.rkt:13:4\n\napply: contract violation\n  expected: list?\n  given: 4\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpy1kjzwga.rkt:14:4\n\napply: contract violation\n  expected: list?\n  given: 2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (let ((max (apply max nums))\n        (min (apply min nums)))\n    (- max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123126,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (let ([min (apply min nums)]\n        [max (apply max nums)])\n    (- max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (define (big_diff_helper nums biggest smallest)\n    (cond\n      [(empty? nums) (- biggest smallest)]\n      [(< (first nums) smallest) (big_diff_helper (rest nums) biggest (first nums))]\n      [(> (first nums) biggest) (big_diff_helper (rest nums) (first nums) smallest)]\n      [else (big_diff_helper (rest nums) biggest smallest)]))\n  (big_diff_helper nums (first nums) (first nums)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123126,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (let ([max (apply max nums)]\n        [min (apply min nums)])\n    (- max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (let ([min (apply min nums)]\n        [max (apply max nums)])\n    (- max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (if (null? nums)\n      0\n      (- (apply max nums) (apply min nums))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (apply - (apply max nums) (apply min nums)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpy1kjzwga.rkt:12:4\n\napply: contract violation\n  expected: list?\n  given: 1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpy1kjzwga.rkt:13:4\n\napply: contract violation\n  expected: list?\n  given: 4\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpy1kjzwga.rkt:14:4\n\napply: contract violation\n  expected: list?\n  given: 2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (let ([max (apply max nums)]\n        [min (apply min nums)])\n    (- max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (if (null? nums)\n      0\n      (- (apply max nums) (apply min nums))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (let ([max (apply max nums)]\n        [min (apply min nums)])\n    (- max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (apply - (apply max nums) (apply min nums)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpy1kjzwga.rkt:12:4\n\napply: contract violation\n  expected: list?\n  given: 1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpy1kjzwga.rkt:13:4\n\napply: contract violation\n  expected: list?\n  given: 4\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpy1kjzwga.rkt:14:4\n\napply: contract violation\n  expected: list?\n  given: 2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (cond\n    [(null? nums) 0]\n    [else\n     (let* ([min (apply min nums)]\n            [max (apply max nums)])\n       (- max min))]))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123126,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (let ([big (apply max nums)]\n        [small (apply min nums)])\n    (- big small)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (let ([max (apply max nums)]\n        [min (apply min nums)])\n    (- max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (cond\n    [(empty? nums) 0]\n    [else\n     (let ([max (apply max nums)]\n           [min (apply min nums)])\n       (- max min))]))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123126,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (if (null? nums)\n      0\n      (- (apply max nums) (apply min nums))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (let ([max (apply max nums)]\n        [min (apply min nums)])\n    (- max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (if (null? nums)\n      0\n      (- (apply max nums) (apply min nums))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (let ([min (apply min nums)]\n        [max (apply max nums)])\n    (- max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (let ([max (apply max nums)]\n        [min (apply min nums)])\n    (- max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (let ([max (apply max nums)]\n        [min (apply min nums)])\n    (- max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (let ([min (apply min nums)]\n        [max (apply max nums)])\n    (- max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (apply - (apply max nums) (apply min nums)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpy1kjzwga.rkt:12:4\n\napply: contract violation\n  expected: list?\n  given: 1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpy1kjzwga.rkt:13:4\n\napply: contract violation\n  expected: list?\n  given: 4\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpy1kjzwga.rkt:14:4\n\napply: contract violation\n  expected: list?\n  given: 2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (let ([max (apply max nums)]\n        [min (apply min nums)])\n    (- max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (if (null? nums)\n      0\n      (- (apply max nums) (apply min nums))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (let ([max (apply max nums)]\n        [min (apply min nums)])\n    (- max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (cond\n    [(empty? nums) 0]\n    [else\n     (let ([max (apply max nums)]\n           [min (apply min nums)])\n       (- max min))]))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123126,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (let ([max (apply max nums)]\n        [min (apply min nums)])\n    (- max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (if (null? nums)\n      0\n      (- (apply max nums) (apply min nums))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (let ([biggest (apply max nums)]\n        [smallest (apply min nums)])\n    (- biggest smallest)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123126,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (let ([max (apply max nums)]\n        [min (apply min nums)])\n    (- max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (cond\n    [(empty? nums) 0]\n    [else\n     (let ([big (apply max nums)]\n           [small (apply min nums)])\n       (- big small))]))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123126,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (let ([max (apply max nums)]\n        [min (apply min nums)])\n    (- max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (if (null? nums)\n      0\n      (- (apply max nums) (apply min nums))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (let ([max (apply max nums)]\n        [min (apply min nums)])\n    (- max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (if (null? nums)\n      0\n      (- (apply max nums) (apply min nums))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (cond [(empty? nums) 0]\n        [else (- (apply max nums) (apply min nums))]))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123126,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (let ([max (apply max nums)]\n        [min (apply min nums)])\n    (- max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (let ([max (apply max nums)]\n        [min (apply min nums)])\n    (- max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (apply - (apply max nums) (apply min nums)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpy1kjzwga.rkt:12:4\n\napply: contract violation\n  expected: list?\n  given: 1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpy1kjzwga.rkt:13:4\n\napply: contract violation\n  expected: list?\n  given: 4\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpy1kjzwga.rkt:14:4\n\napply: contract violation\n  expected: list?\n  given: 2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (if (null? nums)\n      0\n      (- (apply max nums) (apply min nums))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (apply - (apply max nums) (apply min nums)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpy1kjzwga.rkt:12:4\n\napply: contract violation\n  expected: list?\n  given: 1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpy1kjzwga.rkt:13:4\n\napply: contract violation\n  expected: list?\n  given: 4\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpy1kjzwga.rkt:14:4\n\napply: contract violation\n  expected: list?\n  given: 2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (let ((min (apply min nums))\n        (max (apply max nums)))\n    (- max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (let ([big (apply max nums)]\n        [small (apply min nums)])\n    (- big small)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (let ([min (apply min nums)]\n        [max (apply max nums)])\n    (- max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (cond\n    [(empty? nums) 0]\n    [else\n     (let ([max (apply max nums)]\n           [min (apply min nums)])\n       (- max min))]))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123126,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (let ([max (apply max nums)]\n        [min (apply min nums)])\n    (- max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (if (null? nums)\n      0\n      (- (apply max nums) (apply min nums))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (apply - (apply max nums) (apply min nums)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpy1kjzwga.rkt:12:4\n\napply: contract violation\n  expected: list?\n  given: 1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpy1kjzwga.rkt:13:4\n\napply: contract violation\n  expected: list?\n  given: 4\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpy1kjzwga.rkt:14:4\n\napply: contract violation\n  expected: list?\n  given: 2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (let ([max (apply max nums)]\n        [min (apply min nums)])\n    (- max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (let ([min (apply min nums)]\n        [max (apply max nums)])\n    (- max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (let ([max (apply max nums)]\n        [min (apply min nums)])\n    (- max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (apply - (apply max nums) (apply min nums)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpy1kjzwga.rkt:12:4\n\napply: contract violation\n  expected: list?\n  given: 1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpy1kjzwga.rkt:13:4\n\napply: contract violation\n  expected: list?\n  given: 4\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpy1kjzwga.rkt:14:4\n\napply: contract violation\n  expected: list?\n  given: 2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (cond\n    [(empty? nums) 0]\n    [else\n     (let ([max (apply max nums)]\n           [min (apply min nums)])\n       (- max min))]))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123126,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (if (null? nums)\n      0\n      (- (apply max nums) (apply min nums))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (cond [(empty? nums) 0]\n        [else (abs (- (apply max nums) (apply min nums)))]))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123126,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (let ([big (apply max nums)]\n        [small (apply min nums)])\n    (- big small)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (cond\n    [(null? nums) 0]\n    [else\n     (let* ([max (apply max nums)]\n            [min (apply min nums)])\n       (- max min))]))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123126,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (if (null? nums)\n      0\n      (- (apply max nums)\n         (apply min nums))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123126,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (let ([max (apply max nums)]\n        [min (apply min nums)])\n    (- max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (apply - (apply max nums) (apply min nums)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpy1kjzwga.rkt:12:4\n\napply: contract violation\n  expected: list?\n  given: 1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpy1kjzwga.rkt:13:4\n\napply: contract violation\n  expected: list?\n  given: 4\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpy1kjzwga.rkt:14:4\n\napply: contract violation\n  expected: list?\n  given: 2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (let ([min (apply min nums)]\n        [max (apply max nums)])\n    (- max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (let ([max (apply max nums)]\n        [min (apply min nums)])\n    (- max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (let ([max (apply max nums)]\n        [min (apply min nums)])\n    (- max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (let ([max (apply max nums)]\n        [min (apply min nums)])\n    (- max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (let* ([min (apply min nums)]\n         [max (apply max nums)])\n    (- max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (apply - (apply max nums) (apply min nums)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpy1kjzwga.rkt:12:4\n\napply: contract violation\n  expected: list?\n  given: 1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpy1kjzwga.rkt:13:4\n\napply: contract violation\n  expected: list?\n  given: 4\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpy1kjzwga.rkt:14:4\n\napply: contract violation\n  expected: list?\n  given: 2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (let ([max (apply max nums)]\n        [min (apply min nums)])\n    (- max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (let ([max (apply max nums)]\n        [min (apply min nums)])\n    (- max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (if (null? nums)\n      0\n      (- (apply max nums) (apply min nums))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (let ([max (apply max nums)]\n        [min (apply min nums)])\n    (- max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (apply - (apply max nums) (apply min nums)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpy1kjzwga.rkt:12:4\n\napply: contract violation\n  expected: list?\n  given: 1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpy1kjzwga.rkt:13:4\n\napply: contract violation\n  expected: list?\n  given: 4\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpy1kjzwga.rkt:14:4\n\napply: contract violation\n  expected: list?\n  given: 2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (if (null? nums)\n      0\n      (- (apply max nums) (apply min nums))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (if (null? nums)\n      0\n      (- (apply max nums) (apply min nums))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (if (null? nums)\n      0\n      (- (apply max nums) (apply min nums))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (let ([min (apply min nums)]\n        [max (apply max nums)])\n    (- max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (cond [(empty? nums) 0]\n        [else (let ([big (apply max nums)]\n                    [small (apply min nums)])\n                (- big small))]))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123126,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (let ([max (apply max nums)]\n        [min (apply min nums)])\n    (- max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (let ([max (apply max nums)]\n        [min (apply min nums)])\n    (- max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (let ([min (apply min nums)]\n        [max (apply max nums)])\n    (- max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (if (null? nums)\n      0\n      (- (apply max nums) (apply min nums))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (apply - (apply max nums) (apply min nums)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpy1kjzwga.rkt:12:4\n\napply: contract violation\n  expected: list?\n  given: 1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpy1kjzwga.rkt:13:4\n\napply: contract violation\n  expected: list?\n  given: 4\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpy1kjzwga.rkt:14:4\n\napply: contract violation\n  expected: list?\n  given: 2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (cond\n    [(empty? nums) 0]\n    [else\n     (let ([max (apply max nums)]\n           [min (apply min nums)])\n       (- max min))]))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123126,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (cond [(empty? nums) 0]\n        [else\n         (let ([max (apply max nums)]\n               [min (apply min nums)])\n           (- max min))]))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123126,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (let ([max (apply max nums)]\n        [min (apply min nums)])\n    (- max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (let ([min (apply min nums)]\n        [max (apply max nums)])\n    (- max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (let ([max (apply max nums)]\n        [min (apply min nums)])\n    (- max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (if (null? nums)\n      0\n      (- (apply max nums) (apply min nums))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (apply - (apply max nums) (apply min nums)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpy1kjzwga.rkt:12:4\n\napply: contract violation\n  expected: list?\n  given: 1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpy1kjzwga.rkt:13:4\n\napply: contract violation\n  expected: list?\n  given: 4\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpy1kjzwga.rkt:14:4\n\napply: contract violation\n  expected: list?\n  given: 2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (let ([max (apply max nums)]\n        [min (apply min nums)])\n    (- max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (let* ([max (apply max nums)]\n         [min (apply min nums)])\n    (- max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123126,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (cond\n    [(empty? nums) 0]\n    [else\n     (- (apply max nums) (apply min nums))]))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123126,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (let ([min (apply min nums)]\n        [max (apply max nums)])\n    (- max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (let ([max (apply max nums)]\n        [min (apply min nums)])\n    (- max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (let ([max (apply max nums)]\n        [min (apply min nums)])\n    (- max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (let ([max (apply max nums)]\n        [min (apply min nums)])\n    (- max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (let ([min (apply min nums)]\n        [max (apply max nums)])\n    (- max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (let ([big (apply max nums)]\n        [small (apply min nums)])\n    (- big small)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (let ([max (apply max nums)]\n        [min (apply min nums)])\n    (- max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (let ([max (apply max nums)]\n        [min (apply min nums)])\n    (- max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (let ([big (apply max nums)]\n        [small (apply min nums)])\n    (- big small)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (let ([min (apply min nums)]\n        [max (apply max nums)])\n    (- max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (let ([max (apply max nums)]\n        [min (apply min nums)])\n    (- max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (cond\n    [(empty? nums) 0]\n    [else\n     (let* ([max (apply max nums)]\n            [min (apply min nums)])\n       (- max min))]))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123126,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (if (null? nums)\n      0\n      (- (apply max nums) (apply min nums))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (cond\n    [(empty? nums) 0]\n    [else\n     (let* ([max (apply max nums)]\n            [min (apply min nums)])\n       (- max min))]))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123126,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (if (null? nums)\n      0\n      (- (apply max nums) (apply min nums))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (let ([max (apply max nums)]\n        [min (apply min nums)])\n    (- max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (let ([max (apply max nums)]\n        [min (apply min nums)])\n    (- max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (let ([max (apply max nums)]\n        [min (apply min nums)])\n    (- max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (let ([max (apply max nums)]\n        [min (apply min nums)])\n    (- max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (let ([max (apply max nums)]\n        [min (apply min nums)])\n    (- max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (if (null? nums)\n      0\n      (- (apply max nums) (apply min nums))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (if (null? nums)\n      0\n      (- (apply max nums) (apply min nums))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (let ([max (apply max nums)]\n        [min (apply min nums)])\n    (- max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (let ((max (apply max nums))\n        (min (apply min nums)))\n    (- max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123126,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (let ([min (apply min nums)]\n        [max (apply max nums)])\n    (- max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (let ([max (apply max nums)]\n        [min (apply min nums)])\n    (- max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (let ([max (apply max nums)]\n        [min (apply min nums)])\n    (- max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (let ([min (apply min nums)]\n        [max (apply max nums)])\n    (- max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (let ([max (apply max nums)]\n        [min (apply min nums)])\n    (- max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (let ([max (apply max nums)]\n        [min (apply min nums)])\n    (- max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (let ([max (apply max nums)]\n        [min (apply min nums)])\n    (- max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (if (null? nums)\n      0\n      (- (apply max nums) (apply min nums))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (let ([min (apply min nums)]\n        [max (apply max nums)])\n    (- max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (let ([max (apply max nums)]\n        [min (apply min nums)])\n    (- max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (if (null? nums)\n      0\n      (- (apply max nums) (apply min nums))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (let ([min (apply min nums)]\n        [max (apply max nums)])\n    (- max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (cond [(empty? nums) 0]\n        [else (max (first nums) (big_diff (rest nums)))]))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123126,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp2ru5rqjw.rkt:13:4\nactual:     4\nexpected:   3\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp2ru5rqjw.rkt:14:4\nactual:     12\nexpected:   8\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp2ru5rqjw.rkt:15:4\nactual:     9\nexpected:   7\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (let ([max (apply max nums)]\n        [min (apply min nums)])\n    (- max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (let ([max (apply max nums)]\n        [min (apply min nums)])\n    (- max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (cond\n    [(empty? nums) 0]\n    [else\n     (let ([big (apply max nums)]\n           [small (apply min nums)])\n       (- big small))]))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123126,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (apply - (apply max nums) (apply min nums)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpy1kjzwga.rkt:12:4\n\napply: contract violation\n  expected: list?\n  given: 1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpy1kjzwga.rkt:13:4\n\napply: contract violation\n  expected: list?\n  given: 4\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpy1kjzwga.rkt:14:4\n\napply: contract violation\n  expected: list?\n  given: 2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (let ([max (apply max nums)]\n        [min (apply min nums)])\n    (- max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (let ([max (apply max nums)]\n        [min (apply min nums)])\n    (- max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (let ([max (apply max nums)]\n        [min (apply min nums)])\n    (- max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (if (null? nums)\n      0\n      (- (apply max nums) (apply min nums))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (let ([max (apply max nums)]\n        [min (apply min nums)])\n    (- max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (apply - (apply max nums) (apply min nums)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpy1kjzwga.rkt:12:4\n\napply: contract violation\n  expected: list?\n  given: 1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpy1kjzwga.rkt:13:4\n\napply: contract violation\n  expected: list?\n  given: 4\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpy1kjzwga.rkt:14:4\n\napply: contract violation\n  expected: list?\n  given: 2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (let ([max (apply max nums)]\n        [min (apply min nums)])\n    (- max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (apply - (apply max nums) (apply min nums)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpy1kjzwga.rkt:12:4\n\napply: contract violation\n  expected: list?\n  given: 1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpy1kjzwga.rkt:13:4\n\napply: contract violation\n  expected: list?\n  given: 4\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpy1kjzwga.rkt:14:4\n\napply: contract violation\n  expected: list?\n  given: 2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (apply - (apply max nums) (apply min nums)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpy1kjzwga.rkt:12:4\n\napply: contract violation\n  expected: list?\n  given: 1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpy1kjzwga.rkt:13:4\n\napply: contract violation\n  expected: list?\n  given: 4\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpy1kjzwga.rkt:14:4\n\napply: contract violation\n  expected: list?\n  given: 2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (if (null? nums)\n      0\n      (- (apply max nums) (apply min nums))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (apply - (apply max nums) (apply min nums)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpy1kjzwga.rkt:12:4\n\napply: contract violation\n  expected: list?\n  given: 1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpy1kjzwga.rkt:13:4\n\napply: contract violation\n  expected: list?\n  given: 4\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpy1kjzwga.rkt:14:4\n\napply: contract violation\n  expected: list?\n  given: 2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (let ([max (apply max nums)]\n        [min (apply min nums)])\n    (- max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (let ([max (apply max nums)]\n        [min (apply min nums)])\n    (- max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (apply - (apply max nums) (apply min nums)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpy1kjzwga.rkt:12:4\n\napply: contract violation\n  expected: list?\n  given: 1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpy1kjzwga.rkt:13:4\n\napply: contract violation\n  expected: list?\n  given: 4\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpy1kjzwga.rkt:14:4\n\napply: contract violation\n  expected: list?\n  given: 2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (let ([max (apply max nums)]\n        [min (apply min nums)])\n    (- max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (let ([max (apply max nums)]\n        [min (apply min nums)])\n    (- max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (let ([max (apply max nums)]\n        [min (apply min nums)])\n    (- max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (let ([max (apply max nums)]\n        [min (apply min nums)])\n    (- max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (if (null? nums)\n      0\n      (- (apply max nums) (apply min nums))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (apply - (apply max nums) (apply min nums)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpy1kjzwga.rkt:12:4\n\napply: contract violation\n  expected: list?\n  given: 1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpy1kjzwga.rkt:13:4\n\napply: contract violation\n  expected: list?\n  given: 4\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpy1kjzwga.rkt:14:4\n\napply: contract violation\n  expected: list?\n  given: 2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (cond\n    [(empty? nums) 0]\n    [else\n     (let ([biggest (apply max nums)]\n           [smallest (apply min nums)])\n       (- biggest smallest))]))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123126,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (apply - (apply max nums) (apply min nums)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpy1kjzwga.rkt:12:4\n\napply: contract violation\n  expected: list?\n  given: 1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpy1kjzwga.rkt:13:4\n\napply: contract violation\n  expected: list?\n  given: 4\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpy1kjzwga.rkt:14:4\n\napply: contract violation\n  expected: list?\n  given: 2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (if (null? nums)\n      0\n      (- (apply max nums)\n         (apply min nums))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123126,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (apply - (apply max nums) (apply min nums)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpy1kjzwga.rkt:12:4\n\napply: contract violation\n  expected: list?\n  given: 1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpy1kjzwga.rkt:13:4\n\napply: contract violation\n  expected: list?\n  given: 4\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpy1kjzwga.rkt:14:4\n\napply: contract violation\n  expected: list?\n  given: 2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (apply - (apply max nums) (apply min nums)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpy1kjzwga.rkt:12:4\n\napply: contract violation\n  expected: list?\n  given: 1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpy1kjzwga.rkt:13:4\n\napply: contract violation\n  expected: list?\n  given: 4\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpy1kjzwga.rkt:14:4\n\napply: contract violation\n  expected: list?\n  given: 2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (let ([max (apply max nums)]\n        [min (apply min nums)])\n    (- max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (let ([min (apply min nums)]\n        [max (apply max nums)])\n    (- max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1665510309,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (cond\n    [(empty? nums) 0]\n    [(= (length nums) 1) (first nums)]\n    [else\n     (let ([max (apply max nums)]\n           [min (apply min nums)])\n       (- max min))]))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123126,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the difference between largest and smallest value in a given list.\n(define (big_diff nums)\n  (cond\n    [(empty? nums) 0]\n    [else\n     (let* ([max (apply max nums)]\n            [min (apply min nums)])\n       (- max min))]))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate big_diff))\n    (check-equal? (candidate (list 1 2 3 4)) 3)\n    (check-equal? (candidate (list 4 5 12)) 8)\n    (check-equal? (candidate (list 9 2 3)) 7)\n))\n\n(test-humaneval)",
      "timestamp": 1666123126,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
{
  "name": "mbpp_305_start_withp",
  "language": "rkt",
  "prompt": "#lang racket\n\n;; Write a function to return two words from a list of words starting with letter 'p'.\n(define (start_withp words)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_305_start_withp.py",
  "prompt_terminology": "reworded",
  "tests": "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate start_withp))\n    (check-equal? (candidate (list \"Python PHP\" \"Java JavaScript\" \"c c++\")) (list \"Python\" \"PHP\"))\n    (check-equal? (candidate (list \"Python Programming\" \"Java Programming\")) (list \"Python\" \"Programming\"))\n    (check-equal? (candidate (list \"Pqrst Pqr\" \"qrstuv\")) (list \"Pqrst\" \"Pqr\"))\n))\n\n(test-humaneval)",
  "stop_tokens": [
    "\n(define ",
    "\n#|",
    "\n;",
    "\n("
  ],
  "completions": [
    "  (filter (lambda (word) (string-prefix? \"p\" word)) words))\n",
    "  (filter (lambda (word) (string-prefix? \"p\" word)) words))\n",
    "  (filter (lambda (word) (string-prefix? \"p\" word)) words))\n",
    "  (filter (lambda (x) (string-prefix? \"p\" x)) words))\n",
    "  (filter (lambda (word) (string-prefix? \"p\" word)) words))\n",
    "  (filter (lambda (word) (string-prefix? \"p\" word)) words))\n",
    "  (filter (lambda (word) (string-prefix? \"p\" word)) words))\n",
    "  (filter (lambda (word) (string-prefix? \"p\" word)) words))\n",
    "  (filter (lambda (word) (string=? (substring word 0 1) \"p\")) words))\n",
    "  (filter (lambda (word) (string-prefix? \"p\" word)) words))\n",
    "  (filter (lambda (word) (string-contains word \"p\")) words))\n",
    "  (filter (lambda (word) (string-prefix? \"p\" word)) words))\n",
    "  (filter (lambda (word) (string-prefix? \"p\" word)) words))\n",
    "  (filter (lambda (word) (string-prefix? \"p\" word)) words))\n",
    "  (filter (lambda (word)\n            (string-prefix? \"p\" word))\n          words))\n",
    "  (filter (lambda (word) (string-prefix? \"p\" word)) words))\n",
    "  (filter (lambda (word) (string-prefix? \"p\" word)) words))\n",
    "  (filter (lambda (word) (string-prefix? \"p\" word)) words))\n",
    "  (filter (lambda (word) (string-prefix? \"p\" word)) words))\n",
    "  (filter (lambda (word) (string-prefix? \"p\" word)) words))\n"
  ]
}
{
  "name": "mbpp_79_word_len",
  "language": "rkt",
  "prompt": "#lang racket\n\n;; Write a rktthon function to check whether the length of the word is odd or not.\n(define (word_len s)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_79_word_len.py",
  "prompt_terminology": "reworded",
  "tests": "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate word_len))\n    (check-equal? (candidate \"Hadoop\") #f)\n    (check-equal? (candidate \"great\") #t)\n    (check-equal? (candidate \"structure\") #t)\n))\n\n(test-humaneval)",
  "stop_tokens": [
    "\n(define ",
    "\n#|",
    "\n;",
    "\n("
  ],
  "completions": [
    "  (if (odd? (string-length s))\n      \"odd\"\n      \"even\"))\n",
    "  (if (odd? (string-length s))\n      (displayln \"odd\")\n      (displayln \"even\")))\n",
    "  (cond\n    [(empty? s) 0]\n    [else (+ 1 (word_len (rest s)))]))\n",
    "  (cond\n    [(empty? s) 0]\n    [else (+ 1 (word_len (rest s)))]))\n",
    "  (if (odd? (string-length s))\n      \"odd\"\n      \"even\"))\n",
    "  (cond\n    [(empty? s) 0]\n    [else (+ 1 (word_len (rest s)))]))\n",
    "  (if (odd? (string-length s))\n      #t\n      #f))\n",
    "  (if (even? (string-length s))\n      \"even\"\n      \"odd\"))\n",
    "  (cond\n    [(empty? s) 0]\n    [else (+ 1 (word_len (rest s)))]))\n",
    "  (if (odd? (string-length s))\n      \"odd\"\n      \"even\"))\n",
    "  (if (odd? (string-length s))\n      #t\n      #f))\n",
    "  (cond\n    [(empty? s) 0]\n    [else (+ 1 (word_len (rest s)))]))\n",
    "  (if (odd? (string-length s))\n      \"odd\"\n      \"even\"))\n",
    "  (if (odd? (string-length s))\n      \"odd\"\n      \"even\"))\n",
    "  (if (odd? (string-length s))\n      \"odd\"\n      \"even\"))\n",
    "  (cond\n    [(empty? s) 0]\n    [else (+ 1 (word_len (rest s)))]))\n",
    "  (cond\n    [(empty? s) 0]\n    [else (+ 1 (word_len (rest s)))]))\n",
    "  (if (odd? (string-length s))\n      \"odd\"\n      \"even\"))\n",
    "  (if (odd? (string-length s))\n      \"odd\"\n      \"even\"))\n",
    "  (if (odd? (string-length s))\n      \"odd\"\n      \"even\"))\n",
    "  (if (odd? (string-length s))\n      \"odd\"\n      \"even\"))\n",
    "  (if (odd? (string-length s))\n      \"odd\"\n      \"even\"))\n",
    "  (cond\n    [(empty? s) 0]\n    [else (+ 1 (word_len (rest s)))]))\n",
    "  (cond\n    [(empty? s) 0]\n    [else (+ 1 (word_len (rest s)))]))\n",
    "  (if (odd? (string-length s))\n      \"odd\"\n      \"even\"))\n",
    "  (cond\n    [(empty? s) 0]\n    [else (+ 1 (word_len (rest s)))]))\n",
    "  (if (odd? (string-length s))\n      \"odd\"\n      \"even\"))\n",
    "  (if (odd? (string-length s))\n      \"odd\"\n      \"even\"))\n",
    "  (if (odd? (string-length s))\n      #t\n      #f))\n",
    "  (if (odd? (string-length s))\n      \"odd\"\n      \"even\"))\n",
    "  (if (odd? (string-length s))\n      \"odd\"\n      \"even\"))\n",
    "  (if (odd? (string-length s))\n      'odd\n      'even))\n",
    "  (if (odd? (string-length s))\n      \"odd\"\n      \"even\"))\n",
    "  (if (odd? (string-length s))\n      (printf \"The length of the word is odd.\")\n      (printf \"The length of the word is even.\")))\n",
    "  (if (odd? (string-length s))\n      #t\n      #f))\n",
    "  (if (odd? (string-length s))\n      (printf \"The length of the word is odd.\\n\")\n      (printf \"The length of the word is even.\\n\")))\n",
    "  (cond\n    [(empty? s) 0]\n    [else (+ 1 (word_len (rest s)))]))\n",
    "  (cond\n    [(string=? s \"\") 0]\n    [else (+ 1 (word_len (substring s 1)))]))\n",
    "  (if (odd? (string-length s))\n      \"odd\"\n      \"even\"))\n",
    "  (if (odd? (string-length s))\n      \"odd\"\n      \"even\"))\n",
    "  (if (odd? (string-length s))\n      \"odd\"\n      \"even\"))\n",
    "  (if (odd? (string-length s))\n      (string-append s \" is odd\")\n      (string-append s \" is even\")))\n",
    "  (if (odd? (string-length s))\n      \"odd\"\n      \"even\"))\n",
    "  (if (odd? (string-length s))\n      \"odd\"\n      \"even\"))\n",
    "  (if (odd? (string-length s))\n      \"odd\"\n      \"even\"))\n",
    "  (if (odd? (string-length s))\n      \"odd\"\n      \"even\"))\n",
    "  (cond\n    [(empty? s) 0]\n    [else (+ 1 (word_len (rest s)))]))\n",
    "  (if (odd? (string-length s))\n      \"odd\"\n      \"even\"))\n",
    "  (cond\n    [(empty? s) 0]\n    [else (+ 1 (word_len (rest s)))]))\n",
    "  (if (odd? (string-length s))\n      \"odd\"\n      \"even\"))\n",
    "  (length s))\n",
    "  (if (odd? (string-length s))\n      \"odd\"\n      \"even\"))\n",
    "  (if (odd? (string-length s))\n      \"odd\"\n      \"even\"))\n",
    "  (if (odd? (string-length s))\n      \"odd\"\n      \"even\"))\n",
    "  (if (odd? (string-length s))\n      \"odd\"\n      \"even\"))\n",
    "  (string-length s))\n",
    "  (cond\n    [(empty? s) 0]\n    [else (+ 1 (word_len (rest s)))]))\n",
    "  (if (odd? (string-length s))\n      #t\n      #f))\n",
    "  (if (odd? (string-length s))\n      #t\n      #f))\n",
    "  (if (odd? (string-length s))\n      (displayln \"Odd\")\n      (displayln \"Even\")))\n",
    "  (if (odd? (string-length s))\n      \"odd\"\n      \"even\"))\n",
    "  (if (odd? (string-length s))\n      (displayln \"odd\")\n      (displayln \"even\")))\n",
    "  (string-length s))\n",
    "  (if (odd? (string-length s))\n      \"odd\"\n      \"even\"))\n",
    "  (if (even? (string-length s))\n      \"even\"\n      \"odd\"))\n",
    "  (if (odd? (string-length s))\n      (printf \"The length of the word is odd\\n\")\n      (printf \"The length of the word is even\\n\")))\n",
    "  (if (odd? (string-length s))\n      \"odd\"\n      \"even\"))\n",
    "  (cond\n    [(empty? s) 0]\n    [else (+ 1 (word_len (rest s)))]))\n",
    "  (if (odd? (string-length s))\n      (printf \"The length of the word is odd\")\n      (printf \"The length of the word is even\")))\n",
    "  (if (odd? (string-length s))\n      \"odd\"\n      \"even\"))\n",
    "  (if (odd? (string-length s))\n      (string-append s \" is odd\")\n      (string-append s \" is even\")))\n",
    "  (if (odd? (string-length s))\n      \"odd\"\n      \"even\"))\n",
    "  (if (odd? (string-length s))\n      \"odd\"\n      \"even\"))\n",
    "  (if (odd? (string-length s))\n      \"odd\"\n      \"even\"))\n",
    "  (if (odd? (string-length s))\n      \"odd\"\n      \"even\"))\n",
    "  (if (odd? (string-length s))\n      \"odd\"\n      \"even\"))\n",
    "  (if (odd? (string-length s))\n      \"odd\"\n      \"even\"))\n",
    "  (if (odd? (string-length s))\n      \"odd\"\n      \"even\"))\n",
    "  (cond\n    [(empty? s) 0]\n    [else (+ 1 (word_len (rest s)))]))\n",
    "  (if (odd? (string-length s))\n      \"odd\"\n      \"even\"))\n",
    "  (if (odd? (string-length s))\n      \"odd\"\n      \"even\"))\n",
    "  (if (equal? (remainder (string-length s) 2) 0)\n      \"even\"\n      \"odd\"))\n",
    "  (if (odd? (string-length s))\n      \"odd\"\n      \"even\"))\n",
    "  (if (= (remainder (string-length s) 2) 0)\n      \"even\"\n      \"odd\"))\n",
    "  (cond\n    [(empty? s) 0]\n    [else (+ 1 (word_len (rest s)))]))\n",
    "  (cond\n    [(empty? s) 0]\n    [else (+ 1 (word_len (rest s)))]))\n",
    "  (if (odd? (string-length s))\n      \"odd\"\n      \"even\"))\n",
    "  (if (odd? (string-length s))\n      \"odd\"\n      \"even\"))\n",
    "  (if (odd? (string-length s))\n      \"odd\"\n      \"even\"))\n",
    "  (string-length s))\n",
    "  (if (odd? (string-length s))\n      \"odd\"\n      \"even\"))\n",
    "  (if (even? (string-length s))\n      \"even\"\n      \"odd\"))\n",
    "  (if (odd? (string-length s))\n      \"odd\"\n      \"even\"))\n",
    "  (if (odd? (string-length s))\n      \"odd\"\n      \"even\"))\n",
    "  (cond\n    [(empty? s) 0]\n    [else (+ 1 (word_len (rest s)))]))\n",
    "  (cond\n    [(empty? s) 0]\n    [else (+ 1 (word_len (rest s)))]))\n",
    "  (if (odd? (string-length s))\n      \"odd\"\n      \"even\"))\n",
    "  (cond\n    [(empty? s) 0]\n    [else (+ 1 (word_len (rest s)))]))\n",
    "  (if (odd? (string-length s))\n      \"odd\"\n      \"even\"))\n",
    "  (if (= (modulo (string-length s) 2) 0)\n      \"even\"\n      \"odd\"))\n",
    "  (if (odd? (string-length s))\n      \"odd\"\n      \"even\"))\n",
    "  (cond\n    [(empty? s) 0]\n    [else (+ 1 (word_len (rest s)))]))\n",
    "  (if (odd? (string-length s))\n      #t\n      #f))\n",
    "  (cond [(empty? s) 0]\n        [else (+ 1 (word_len (rest s)))]))\n",
    "  (cond\n    [(empty? s) 0]\n    [else (+ 1 (word_len (rest s)))]))\n",
    "  (if (= (remainder (string-length s) 2) 0)\n      \"even\"\n      \"odd\"))\n",
    "  (if (odd? (string-length s))\n      \"odd\"\n      \"even\"))\n",
    "  (if (odd? (string-length s))\n      \"odd\"\n      \"even\"))\n",
    "  (cond\n    [(empty? s) 0]\n    [else (+ 1 (word_len (rest s)))]))\n",
    "  (if (odd? (string-length s))\n      \"odd\"\n      \"even\"))\n",
    "  (if (odd? (string-length s))\n      \"odd\"\n      \"even\"))\n",
    "  (if (odd? (string-length s))\n      \"odd\"\n      \"even\"))\n",
    "  (if (odd? (string-length s))\n      (displayln \"odd\")\n      (displayln \"even\")))\n",
    "  (if (odd? (string-length s))\n      \"odd\"\n      \"even\"))\n",
    "  (if (odd? (string-length s))\n      #t\n      #f))\n",
    "  (if (= (modulo (string-length s) 2) 0)\n      \"even\"\n      \"odd\"))\n",
    "  (if (odd? (string-length s))\n      \"odd\"\n      \"even\"))\n",
    "  (if (odd? (string-length s))\n      \"odd\"\n      \"even\"))\n",
    "  (if (odd? (string-length s))\n      \"odd\"\n      \"even\"))\n",
    "  (if (odd? (string-length s))\n      \"odd\"\n      \"even\"))\n",
    "  (if (odd? (string-length s))\n      \"odd\"\n      \"even\"))\n",
    "  (if (odd? (string-length s))\n      \"odd\"\n      \"even\"))\n",
    "  (if (= (modulo (string-length s) 2) 0)\n      \"Even\"\n      \"Odd\"))\n",
    "  (if (odd? (string-length s))\n      \"odd\"\n      \"even\"))\n",
    "  (if (odd? (string-length s))\n      \"odd\"\n      \"even\"))\n",
    "  (if (odd? (string-length s))\n      \"odd\"\n      \"even\"))\n",
    "  (if (odd? (string-length s))\n      \"odd\"\n      \"even\"))\n",
    "  (if (odd? (string-length s))\n      \"odd\"\n      \"even\"))\n",
    "  (cond [(empty? s) 0]\n        [else (+ 1 (word_len (rest s)))]))\n",
    "  (if (odd? (string-length s))\n      \"odd\"\n      \"even\"))\n",
    "  (if (odd? (string-length s))\n      \"odd\"\n      \"even\"))\n",
    "  (string-length s))\n",
    "  (if (odd? (string-length s))\n      \"odd\"\n      \"even\"))\n",
    "  (if (odd? (string-length s))\n      \"odd\"\n      \"even\"))\n",
    "  (if (odd? (string-length s))\n      #t\n      #f))\n",
    "  (string-length s))\n",
    "  (if (odd? (string-length s))\n      \"odd\"\n      \"even\"))\n",
    "  (cond\n    [(empty? s) 0]\n    [else (+ 1 (word_len (rest s)))]))\n",
    "  (if (odd? (string-length s))\n      \"odd\"\n      \"even\"))\n",
    "  (if (odd? (string-length s))\n      \"odd\"\n      \"even\"))\n",
    "  (if (odd? (string-length s))\n      \"odd\"\n      \"even\"))\n",
    "  (if (odd? (string-length s))\n      \"odd\"\n      \"even\"))\n",
    "  (if (odd? (string-length s))\n      (printf \"The length of the word is odd\")\n      (printf \"The length of the word is even\")))\n",
    "  (if (odd? (string-length s))\n      (printf \"The length of the word is odd.\\n\")\n      (printf \"The length of the word is even.\\n\")))\n",
    "  (if (odd? (string-length s))\n      \"odd\"\n      \"even\"))\n",
    "  (if (odd? (string-length s))\n      \"odd\"\n      \"even\"))\n",
    "  (cond\n    [(empty? s) 0]\n    [else (+ 1 (word_len (rest s)))]))\n",
    "  (if (odd? (string-length s))\n      \"odd\"\n      \"even\"))\n",
    "  (cond\n    [(empty? s) 0]\n    [else (+ 1 (word_len (rest s)))]))\n",
    "  (cond\n    [(empty? s) 0]\n    [else (+ 1 (word_len (rest s)))]))\n",
    "  (if (odd? (string-length s))\n      \"odd\"\n      \"even\"))\n",
    "  (cond\n    [(empty? s) 0]\n    [else (+ 1 (word_len (rest s)))]))\n",
    "  (if (odd? (string-length s))\n      #t\n      #f))\n",
    "  (if (odd? (string-length s))\n      \"odd\"\n      \"even\"))\n",
    "  (if (odd? (string-length s))\n      (printf \"The word is odd.\\n\")\n      (printf \"The word is even.\\n\")))\n",
    "  (if (odd? (string-length s))\n      \"odd\"\n      \"even\"))\n",
    "  (cond\n    [(empty? s) 0]\n    [else (+ 1 (word_len (rest s)))]))\n",
    "  (if (odd? (string-length s))\n      \"odd\"\n      \"even\"))\n",
    "  (if (odd? (string-length s))\n      (string-append s \" is odd\")\n      (string-append s \" is even\")))\n",
    "  (cond ((= (modulo (string-length s) 2) 0) \"even\")\n        (else \"odd\")))\n",
    "  (cond [(empty? s) 0]\n        [else (+ 1 (word_len (rest s)))]))\n",
    "  (cond\n    [(empty? s) 0]\n    [else (+ 1 (word_len (rest s)))]))\n",
    "  (cond\n    [(empty? s) 0]\n    [else (+ 1 (word_len (rest s)))]))\n",
    "  (if (odd? (string-length s))\n      (printf \"The word ~a has an odd length.\\n\" s)\n      (printf \"The word ~a has an even length.\\n\" s)))\n",
    "  (string-length s))\n",
    "  (if (odd? (string-length s))\n      \"odd\"\n      \"even\"))\n",
    "  (if (odd? (string-length s))\n      \"odd\"\n      \"even\"))\n",
    "  (if (odd? (string-length s))\n      (displayln \"odd\")\n      (displayln \"even\")))\n",
    "  (string-length s))\n",
    "  (cond\n    [(empty? s) 0]\n    [else (+ 1 (word_len (rest s)))]))\n",
    "  (if (odd? (string-length s))\n      \"odd\"\n      \"even\"))\n",
    "  (if (odd? (string-length s))\n      \"odd\"\n      \"even\"))\n",
    "  (if (odd? (string-length s))\n      \"odd\"\n      \"even\"))\n",
    "  (if (odd? (string-length s))\n      #t\n      #f))\n",
    "  (cond\n    [(empty? s) 0]\n    [else (+ 1 (word_len (rest s)))]))\n",
    "  (cond\n    [(empty? s) 0]\n    [else (+ 1 (word_len (rest s)))]))\n",
    "  (cond\n    [(empty? s) 0]\n    [else (+ 1 (word_len (rest s)))]))\n",
    "  (if (odd? (string-length s))\n      \"odd\"\n      \"even\"))\n",
    "  (if (odd? (string-length s))\n      \"odd\"\n      \"even\"))\n",
    "  (if (even? (string-length s))\n      \"even\"\n      \"odd\"))\n",
    "  (if (odd? (string-length s))\n      \"odd\"\n      \"even\"))\n",
    "  (if (odd? (string-length s))\n      \"odd\"\n      \"even\"))\n",
    "  (if (odd? (string-length s))\n      \"odd\"\n      \"even\"))\n",
    "  (if (odd? (string-length s))\n      \"odd\"\n      \"even\"))\n",
    "  (string-length s))\n",
    "  (if (odd? (string-length s))\n      \"odd\"\n      \"even\"))\n",
    "  (if (odd? (string-length s))\n      \"odd\"\n      \"even\"))\n",
    "  (if (odd? (string-length s))\n      #t\n      #f))\n",
    "  (cond\n    [(empty? s) 0]\n    [else (+ 1 (word_len (rest s)))]))\n",
    "  (if (odd? (string-length s))\n      \"odd\"\n      \"even\"))\n",
    "  (if (odd? (string-length s))\n      \"odd\"\n      \"even\"))\n",
    "  (if (odd? (string-length s))\n      (displayln \"odd\")\n      (displayln \"even\")))\n",
    "  (cond\n    [(empty? s) 0]\n    [else (+ 1 (word_len (rest s)))]))\n",
    "  (if (odd? (string-length s))\n      #t\n      #f))\n",
    "  (if (odd? (string-length s))\n      (printf \"The length of the word is odd.\\n\")\n      (printf \"The length of the word is even.\\n\")))\n",
    "  (if (odd? (string-length s))\n      #t\n      #f))\n",
    "  (cond\n    [(empty? s) 0]\n    [else (+ 1 (word_len (rest s)))]))\n",
    "  (if (odd? (string-length s))\n      #t\n      #f))\n",
    "  (if (odd? (string-length s))\n      \"odd\"\n      \"even\"))\n",
    "  (cond\n    [(empty? s) 0]\n    [else (+ 1 (word_len (rest s)))]))\n"
  ]
}
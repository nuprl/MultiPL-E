{
  "name": "mbpp_639_sample_nam",
  "language": "rkt",
  "prompt": "#lang racket\n\n;; Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n(define (sample_nam sample_names)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_639_sample_nam.py",
  "prompt_terminology": "reworded",
  "tests": "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sample_nam))\n    (check-equal? (candidate (list \"sally\" \"Dylan\" \"rebecca\" \"Diana\" \"Joanne\" \"keith\")) 16)\n    (check-equal? (candidate (list \"php\" \"res\" \"Python\" \"abcd\" \"Java\" \"aaa\")) 10)\n    (check-equal? (candidate (list \"abcd\" \"Python\" \"abba\" \"aba\")) 6)\n))\n\n(test-humaneval)",
  "stop_tokens": [
    "\n(define ",
    "\n#|",
    "\n;",
    "\n("
  ],
  "completions": [
    "  (cond\n    [(empty? sample_names) 0]\n    [(char-lower-case? (string-ref (first sample_names) 0))\n     (sample_nam (rest sample_names))]\n    [else (+ (string-length (first sample_names))\n             (sample_nam (rest sample_names)))]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(char-lower-case? (string-ref (first sample_names) 0))\n     (sample_nam (rest sample_names))]\n    [else (+ (string-length (first sample_names))\n             (sample_nam (rest sample_names)))]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(symbol? (first sample_names))\n     (if (char-lower-case? (symbol->string (first sample_names)) (first sample_names))\n         (sample_nam (rest sample_names))\n         (+ (string-length (symbol->string (first sample_names)))\n            (sample_nam (rest sample_names))))]\n    [else (sample_nam (rest sample_names))]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [else\n     (cond\n       [(char-lower-case? (string-ref (first sample_names) 0))\n        (sample_nam (rest sample_names))]\n       [else\n        (+ (string-length (first sample_names))\n           (sample_nam (rest sample_names)))])]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(char-lower-case? (string-ref (first sample_names) 0))\n     (sample_nam (rest sample_names))]\n    [else (+ (string-length (first sample_names))\n             (sample_nam (rest sample_names)))]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(char-lower-case? (string-ref (first sample_names) 0)) (sample_nam (rest sample_names))]\n    [else (+ (string-length (first sample_names)) (sample_nam (rest sample_names)))]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(char-lower-case? (string-ref (first sample_names) 0))\n     (sample_nam (rest sample_names))]\n    [else (+ (string-length (first sample_names))\n             (sample_nam (rest sample_names)))]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(char-lower-case? (string-ref (first sample_names) 0)) (sample_nam (rest sample_names))]\n    [else (+ (string-length (first sample_names)) (sample_nam (rest sample_names)))]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(char-lower-case? (string-ref (first sample_names) 0)) (sample_nam (rest sample_names))]\n    [else (+ (string-length (first sample_names)) (sample_nam (rest sample_names)))]))\n",
    "  (apply + (map string-length (filter (lambda (x) (char-upper-case? (string-ref x 0))) sample_names))))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(char-lower-case? (string-ref (first sample_names) 0)) (sample_nam (rest sample_names))]\n    [else (+ (string-length (first sample_names)) (sample_nam (rest sample_names)))]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(char-lower-case? (string-ref (first sample_names) 0))\n     (sample_nam (rest sample_names))]\n    [else (+ (string-length (first sample_names))\n             (sample_nam (rest sample_names)))]))\n",
    "  (apply + (map string-length (filter (lambda (x) (char-upcase? (string-ref x 0))) sample_names))))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(char-lower-case? (string-ref (first sample_names) 0))\n     (sample_nam (rest sample_names))]\n    [else (+ (string-length (first sample_names)) (sample_nam (rest sample_names)))]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(char-lower-case? (string-ref (first sample_names) 0))\n     (sample_nam (rest sample_names))]\n    [else (+ (string-length (first sample_names))\n             (sample_nam (rest sample_names)))]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [else\n     (cond\n       [(char-lower-case? (string-ref (first sample_names) 0))\n        (sample_nam (rest sample_names))]\n       [else\n        (+ (string-length (first sample_names))\n           (sample_nam (rest sample_names)))])]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [else\n     (if (char-lower-case? (string-ref (first sample_names) 0))\n         (sample_nam (rest sample_names))\n         (+ (string-length (first sample_names)) (sample_nam (rest sample_names))))]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [else\n     (if (char-lower-case? (string-ref (first sample_names) 0))\n         (sample_nam (rest sample_names))\n         (+ (string-length (first sample_names)) (sample_nam (rest sample_names))))]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [else\n     (cond\n       [(char-lower-case? (string-ref (first sample_names) 0))\n        (sample_nam (rest sample_names))]\n       [else\n        (+ (string-length (first sample_names))\n           (sample_nam (rest sample_names)))])]))\n",
    "  (define (sum_names sample_names)\n    (if (null? sample_names)\n        0\n        (+ (string-length (car sample_names))\n           (sum_names (cdr sample_names)))))\n  (define (remove_lower sample_names)\n    (if (null? sample_names)\n        '()\n        (if (char-lower-case? (string-ref (car sample_names) 0))\n            (remove_lower (cdr sample_names))\n            (cons (car sample_names) (remove_lower (cdr sample_names))))))\n  (sum_names (remove_lower sample_names)))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [else\n     (cond\n       [(char-lower-case? (string-ref (first sample_names) 0))\n        (sample_nam (rest sample_names))]\n       [else\n        (+ (string-length (first sample_names))\n           (sample_nam (rest sample_names)))])]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(char-lower-case? (string-ref (first sample_names) 0))\n     (sample_nam (rest sample_names))]\n    [else\n     (+ (string-length (first sample_names))\n        (sample_nam (rest sample_names)))]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(char-lower-case? (string-ref (first sample_names) 0))\n     (sample_nam (rest sample_names))]\n    [else (+ (string-length (first sample_names))\n             (sample_nam (rest sample_names)))]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [else\n     (cond\n       [(char-lower-case? (string-ref (first sample_names) 0)) (sample_nam (rest sample_names))]\n       [else (+ (string-length (first sample_names)) (sample_nam (rest sample_names)))]\n       )]\n     )\n  )\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(char-lower-case? (string-ref (first sample_names) 0))\n     (sample_nam (rest sample_names))]\n    [else (+ (string-length (first sample_names))\n             (sample_nam (rest sample_names)))]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(symbol? (first sample_names))\n     (+ (string-length (symbol->string (first sample_names)))\n        (sample_nam (rest sample_names)))]\n    [else (sample_nam (rest sample_names))]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(char-lower-case? (string-ref (first sample_names) 0))\n     (sample_nam (rest sample_names))]\n    [else (+ (string-length (first sample_names))\n             (sample_nam (rest sample_names)))]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(char-lower-case? (string-ref (first sample_names) 0))\n     (sample_nam (rest sample_names))]\n    [else (+ (string-length (first sample_names))\n             (sample_nam (rest sample_names)))]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(char-lower-case? (string-ref (first sample_names) 0))\n     (sample_nam (rest sample_names))]\n    [else (+ (string-length (first sample_names))\n             (sample_nam (rest sample_names)))]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(symbol? (first sample_names)) (+ (string-length (symbol->string (first sample_names))) (sample_nam (rest sample_names)))]\n    [else (sample_nam (rest sample_names))]))\n",
    "  (cond [(empty? sample_names) 0]\n        [(char-lower-case? (string-ref (first sample_names) 0))\n         (sample_nam (rest sample_names))]\n        [else (+ (string-length (first sample_names))\n                 (sample_nam (rest sample_names)))]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(char-lower-case? (string-ref (first sample_names) 0))\n     (sample_nam (rest sample_names))]\n    [else (+ (string-length (first sample_names))\n             (sample_nam (rest sample_names)))]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(char-lower-case? (string-ref (first sample_names) 0))\n     (sample_nam (rest sample_names))]\n    [else (+ (string-length (first sample_names)) (sample_nam (rest sample_names)))]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [else\n     (if (char-lower-case? (string-ref (first sample_names) 0))\n         (sample_nam (rest sample_names))\n         (+ (string-length (first sample_names))\n            (sample_nam (rest sample_names))))]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(char-lower-case? (string-ref (first sample_names) 0)) (sample_nam (rest sample_names))]\n    [else (+ (string-length (first sample_names)) (sample_nam (rest sample_names)))]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(char-lower-case? (string-ref (first sample_names) 0)) (sample_nam (rest sample_names))]\n    [else (+ (string-length (first sample_names)) (sample_nam (rest sample_names)))]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(char-lower-case? (string-ref (first sample_names) 0)) (sample_nam (rest sample_names))]\n    [else (+ (string-length (first sample_names)) (sample_nam (rest sample_names)))]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(char-lower-case? (string-ref (first sample_names) 0)) (sample_nam (rest sample_names))]\n    [else (+ (string-length (first sample_names)) (sample_nam (rest sample_names)))]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(char-lower-case? (string-ref (first sample_names) 0))\n     (sample_nam (rest sample_names))]\n    [else (+ (string-length (first sample_names))\n             (sample_nam (rest sample_names)))]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(char-lower-case? (string-ref (first sample_names) 0))\n     (sample_nam (rest sample_names))]\n    [else (+ (string-length (first sample_names))\n             (sample_nam (rest sample_names)))]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(char-lower-case? (string-ref (first sample_names) 0))\n     (sample_nam (rest sample_names))]\n    [else (+ (string-length (first sample_names))\n             (sample_nam (rest sample_names)))]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(char-lower-case? (string-ref (first sample_names) 0)) (sample_nam (rest sample_names))]\n    [else (+ (string-length (first sample_names)) (sample_nam (rest sample_names)))]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(char-lower-case? (string-ref (first sample_names) 0))\n     (sample_nam (rest sample_names))]\n    [else (+ (string-length (first sample_names))\n             (sample_nam (rest sample_names)))]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(char-lower-case? (string-ref (first sample_names) 0))\n     (sample_nam (rest sample_names))]\n    [else (+ (string-length (first sample_names))\n             (sample_nam (rest sample_names)))]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(char-lower-case? (string-ref (first sample_names) 0))\n     (sample_nam (rest sample_names))]\n    [else (+ (string-length (first sample_names))\n             (sample_nam (rest sample_names)))]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [else\n     (cond\n       [(char-lower-case? (string-ref (first sample_names) 0))\n        (sample_nam (rest sample_names))]\n       [else\n        (+ (string-length (first sample_names))\n           (sample_nam (rest sample_names)))])]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(char-lower-case? (string-ref (first sample_names) 0))\n     (sample_nam (rest sample_names))]\n    [else (+ (string-length (first sample_names))\n             (sample_nam (rest sample_names)))]))\n",
    "  (apply + (map string-length (filter (lambda (x) (char-upper-case? (string-ref x 0))) sample_names))))\n",
    "  (cond\n    [(null? sample_names) 0]\n    [(char-lower-case? (string-ref (car sample_names) 0))\n     (sample_nam (cdr sample_names))]\n    [else (+ (string-length (car sample_names))\n             (sample_nam (cdr sample_names)))]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(char-lower-case? (string-ref (first sample_names) 0))\n     (sample_nam (rest sample_names))]\n    [else (+ (string-length (first sample_names))\n             (sample_nam (rest sample_names)))]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(char-lower-case? (string-ref (first sample_names) 0))\n     (sample_nam (rest sample_names))]\n    [else (+ (string-length (first sample_names))\n             (sample_nam (rest sample_names)))]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(char-lower-case? (string-ref (first sample_names) 0)) (sample_nam (rest sample_names))]\n    [else (+ (string-length (first sample_names)) (sample_nam (rest sample_names)))]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(char-lower-case? (string-ref (first sample_names) 0))\n     (sample_nam (rest sample_names))]\n    [else (+ (string-length (first sample_names))\n             (sample_nam (rest sample_names)))]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [else\n     (cond\n       [(char-lower-case? (string-ref (first sample_names) 0))\n        (sample_nam (rest sample_names))]\n       [else\n        (+ (string-length (first sample_names))\n           (sample_nam (rest sample_names)))])]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(char-lower-case? (string-ref (first sample_names) 0)) (sample_nam (rest sample_names))]\n    [else (+ (string-length (first sample_names)) (sample_nam (rest sample_names)))]))\n",
    "  (apply + (map string-length (filter (lambda (x) (char-upcase? (string-ref x 0))) sample_names))))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(char-lower-case? (string-ref (first sample_names) 0)) (sample_nam (rest sample_names))]\n    [else (+ (string-length (first sample_names)) (sample_nam (rest sample_names)))]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(char-lower-case? (string-ref (first sample_names) 0))\n     (sample_nam (rest sample_names))]\n    [else (+ (string-length (first sample_names))\n             (sample_nam (rest sample_names)))]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(char-lower-case? (string-ref (first sample_names) 0))\n     (sample_nam (rest sample_names))]\n    [else (+ (string-length (first sample_names))\n             (sample_nam (rest sample_names)))]))\n",
    "  (apply + (map string-length (filter (lambda (x) (char-upper-case? (string-ref x 0))) sample_names))))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(char-lower-case? (string-ref (first sample_names) 0))\n     (sample_nam (rest sample_names))]\n    [else (+ (string-length (first sample_names))\n             (sample_nam (rest sample_names)))]))\n",
    "  (cond [(empty? sample_names) 0]\n        [else (+ (string-length (first sample_names))\n                 (sample_nam (rest sample_names)))]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(char-lower-case? (string-ref (first sample_names) 0))\n     (sample_nam (rest sample_names))]\n    [else\n     (+ (string-length (first sample_names))\n        (sample_nam (rest sample_names)))]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(char-lower-case? (string-ref (first sample_names) 0))\n     (sample_nam (rest sample_names))]\n    [else (+ (string-length (first sample_names))\n             (sample_nam (rest sample_names)))]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(char-lower-case? (string-ref (first sample_names) 0))\n     (sample_nam (rest sample_names))]\n    [else (+ (string-length (first sample_names))\n             (sample_nam (rest sample_names)))]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(char-lower-case? (string-ref (first sample_names) 0))\n     (sample_nam (rest sample_names))]\n    [else (+ (string-length (first sample_names))\n             (sample_nam (rest sample_names)))]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(char-lower-case? (string-ref (first sample_names) 0))\n     (sample_nam (rest sample_names))]\n    [else (+ (string-length (first sample_names))\n             (sample_nam (rest sample_names)))]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(char-lower-case? (string-ref (first sample_names) 0)) (sample_nam (rest sample_names))]\n    [else (+ (string-length (first sample_names)) (sample_nam (rest sample_names)))]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(symbol? (first sample_names)) (+ (string-length (symbol->string (first sample_names))) (sample_nam (rest sample_names)))]\n    [else (sample_nam (rest sample_names))]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(char-lower-case? (string-ref (first sample_names) 0))\n     (sample_nam (rest sample_names))]\n    [else (+ (string-length (first sample_names))\n             (sample_nam (rest sample_names)))]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(char-lower-case? (string-ref (first sample_names) 0))\n     (sample_nam (rest sample_names))]\n    [else (+ (string-length (first sample_names))\n             (sample_nam (rest sample_names)))]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(string-ci&lt;? (first sample_names) \"a\") (sample_nam (rest sample_names))]\n    [else (+ (string-length (first sample_names)) (sample_nam (rest sample_names)))]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(char-lower-case? (string-ref (first sample_names) 0))\n     (sample_nam (rest sample_names))]\n    [else (+ (string-length (first sample_names))\n             (sample_nam (rest sample_names)))]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(char-lower-case? (string-ref (first sample_names) 0))\n     (sample_nam (rest sample_names))]\n    [else (+ (string-length (first sample_names))\n             (sample_nam (rest sample_names)))]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(char-lower-case? (string-ref (first sample_names) 0))\n     (sample_nam (rest sample_names))]\n    [else (+ (string-length (first sample_names))\n             (sample_nam (rest sample_names)))]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(char-lower-case? (string-ref (first sample_names) 0))\n     (sample_nam (rest sample_names))]\n    [else (+ (string-length (first sample_names))\n             (sample_nam (rest sample_names)))]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(char-lower-case? (string-ref (first sample_names) 0)) (sample_nam (rest sample_names))]\n    [else (+ (string-length (first sample_names)) (sample_nam (rest sample_names)))]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(char-lower-case? (string-ref (first sample_names) 0))\n     (sample_nam (rest sample_names))]\n    [else (+ (string-length (first sample_names))\n             (sample_nam (rest sample_names)))]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(char-lower-case? (string-ref (first sample_names) 0))\n     (sample_nam (rest sample_names))]\n    [else (+ (string-length (first sample_names))\n             (sample_nam (rest sample_names)))]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(char-lower-case? (string-ref (first sample_names) 0))\n     (sample_nam (rest sample_names))]\n    [else (+ (string-length (first sample_names))\n             (sample_nam (rest sample_names)))]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(char-lower-case? (string-ref (first sample_names) 0)) (sample_nam (rest sample_names))]\n    [else (+ (string-length (first sample_names)) (sample_nam (rest sample_names)))]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(symbol? (first sample_names)) (+ (string-length (symbol->string (first sample_names))) (sample_nam (rest sample_names)))]\n    [else (sample_nam (rest sample_names))]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(char-lower-case? (string-ref (first sample_names) 0))\n     (sample_nam (rest sample_names))]\n    [else (+ (string-length (first sample_names))\n             (sample_nam (rest sample_names)))]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(char-lower-case? (string-ref (first sample_names) 0))\n     (sample_nam (rest sample_names))]\n    [else (+ (string-length (first sample_names))\n             (sample_nam (rest sample_names)))]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(char-lower-case? (string-ref (first sample_names) 0))\n     (sample_nam (rest sample_names))]\n    [else (+ (string-length (first sample_names))\n             (sample_nam (rest sample_names)))]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [else\n     (if (char-lower-case? (string-ref (first sample_names) 0))\n         (sample_nam (rest sample_names))\n         (+ (string-length (first sample_names)) (sample_nam (rest sample_names))))]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(char-lower-case? (string-ref (first sample_names) 0)) (sample_nam (rest sample_names))]\n    [else (+ (string-length (first sample_names)) (sample_nam (rest sample_names)))]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(char-lower-case? (string-ref (first sample_names) 0)) (sample_nam (rest sample_names))]\n    [else (+ (string-length (first sample_names)) (sample_nam (rest sample_names)))]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(char-lower-case? (string-ref (first sample_names) 0))\n     (sample_nam (rest sample_names))]\n    [else (+ (string-length (first sample_names))\n             (sample_nam (rest sample_names)))]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(symbol? (car sample_names)) (+ (string-length (symbol->string (car sample_names))) (sample_nam (cdr sample_names)))]\n    [else (sample_nam (cdr sample_names))]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(char-lower-case? (string-ref (first sample_names) 0))\n     (sample_nam (rest sample_names))]\n    [else (+ (string-length (first sample_names))\n             (sample_nam (rest sample_names)))]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(char-lower-case? (string-ref (first sample_names) 0))\n     (sample_nam (rest sample_names))]\n    [else (+ (string-length (first sample_names))\n             (sample_nam (rest sample_names)))]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(char-lower-case? (string-ref (first sample_names) 0)) (sample_nam (rest sample_names))]\n    [else (+ (string-length (first sample_names)) (sample_nam (rest sample_names)))]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(char-lower-case? (string-ref (first sample_names) 0))\n     (sample_nam (rest sample_names))]\n    [else (+ (string-length (first sample_names))\n             (sample_nam (rest sample_names)))]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(char-lower-case? (string-ref (first sample_names) 0))\n     (sample_nam (rest sample_names))]\n    [else (+ (string-length (first sample_names))\n             (sample_nam (rest sample_names)))]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(char-lower-case? (string-ref (first sample_names) 0)) (sample_nam (rest sample_names))]\n    [else (+ (string-length (first sample_names)) (sample_nam (rest sample_names)))]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(char-lower-case? (string-ref (first sample_names) 0))\n     (sample_nam (rest sample_names))]\n    [else (+ (string-length (first sample_names))\n             (sample_nam (rest sample_names)))]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(char-lower-case? (string-ref (first sample_names) 0))\n     (sample_nam (rest sample_names))]\n    [else (+ (string-length (first sample_names))\n             (sample_nam (rest sample_names)))]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(char-lower-case? (string-ref (first sample_names) 0))\n     (sample_nam (rest sample_names))]\n    [else (+ (string-length (first sample_names))\n             (sample_nam (rest sample_names)))]))\n",
    "  (cond [(empty? sample_names) 0]\n        [(char-lower-case? (string-ref (first sample_names) 0))\n         (sample_nam (rest sample_names))]\n        [else (+ (string-length (first sample_names))\n                 (sample_nam (rest sample_names)))]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(char-lower-case? (string-ref (first sample_names) 0))\n     (sample_nam (rest sample_names))]\n    [else (+ (string-length (first sample_names))\n             (sample_nam (rest sample_names)))]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(char-lower-case? (string-ref (first sample_names) 0)) (sample_nam (rest sample_names))]\n    [else (+ (string-length (first sample_names)) (sample_nam (rest sample_names)))]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(char-lower-case? (string-ref (first sample_names) 0)) (sample_nam (rest sample_names))]\n    [else (+ (string-length (first sample_names)) (sample_nam (rest sample_names)))]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(char-lower-case? (string-ref (first sample_names) 0))\n     (sample_nam (rest sample_names))]\n    [else (+ (string-length (first sample_names))\n             (sample_nam (rest sample_names)))]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(char-lower-case? (string-ref (first sample_names) 0))\n     (sample_nam (rest sample_names))]\n    [else (+ (string-length (first sample_names))\n             (sample_nam (rest sample_names)))]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [else\n     (cond\n       [(char-lower-case? (string-ref (first sample_names) 0))\n        (sample_nam (rest sample_names))]\n       [else\n        (+ (string-length (first sample_names))\n           (sample_nam (rest sample_names)))])]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(char-lower-case? (string-ref (first sample_names) 0))\n     (sample_nam (rest sample_names))]\n    [else (+ (string-length (first sample_names))\n             (sample_nam (rest sample_names)))]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(char-lower-case? (string-ref (first sample_names) 0))\n     (sample_nam (rest sample_names))]\n    [else (+ (string-length (first sample_names)) (sample_nam (rest sample_names)))]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(char-lower-case? (string-ref (first sample_names) 0))\n     (sample_nam (rest sample_names))]\n    [else (+ (string-length (first sample_names))\n             (sample_nam (rest sample_names)))]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(char-lower-case? (string-ref (first sample_names) 0))\n     (sample_nam (rest sample_names))]\n    [else (+ (string-length (first sample_names)) (sample_nam (rest sample_names)))]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(char-lower-case? (string-ref (first sample_names) 0))\n     (sample_nam (rest sample_names))]\n    [else (+ (string-length (first sample_names)) (sample_nam (rest sample_names)))]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(char-lower-case? (string-ref (first sample_names) 0))\n     (sample_nam (rest sample_names))]\n    [else (+ (string-length (first sample_names))\n             (sample_nam (rest sample_names)))]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(char-lower-case? (string-ref (first sample_names) 0))\n     (sample_nam (rest sample_names))]\n    [else (+ (string-length (first sample_names))\n             (sample_nam (rest sample_names)))]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(char-lower-case? (string-ref (first sample_names) 0))\n     (sample_nam (rest sample_names))]\n    [else (+ (string-length (first sample_names))\n             (sample_nam (rest sample_names)))]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(char-lower-case? (string-ref (first sample_names) 0))\n     (sample_nam (rest sample_names))]\n    [else (+ (string-length (first sample_names))\n             (sample_nam (rest sample_names)))]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(symbol? (car sample_names))\n     (if (char-lower-case? (string-ref (symbol->string (car sample_names)) 0))\n         (sample_nam (cdr sample_names))\n         (+ (string-length (symbol->string (car sample_names))) (sample_nam (cdr sample_names))))]\n    [else (sample_nam (cdr sample_names))]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [else (+ (string-length (first sample_names))\n             (sample_nam (rest sample_names)))]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(char-lower-case? (string-ref (first sample_names) 0))\n     (sample_nam (rest sample_names))]\n    [else (+ (string-length (first sample_names))\n             (sample_nam (rest sample_names)))]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(char-lower-case? (string-ref (first sample_names) 0))\n     (sample_nam (rest sample_names))]\n    [else (+ (string-length (first sample_names))\n             (sample_nam (rest sample_names)))]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(char-lower-case? (string-ref (first sample_names) 0))\n     (sample_nam (rest sample_names))]\n    [else (+ (string-length (first sample_names))\n             (sample_nam (rest sample_names)))]))\n",
    "  (foldl (lambda (x y)\n           (if (char-lower-case? (string-ref x 0))\n               y\n               (+ y (string-length x))))\n         0\n         sample_names))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(char-lower-case? (string-ref (first sample_names) 0)) (sample_nam (rest sample_names))]\n    [else (+ (string-length (first sample_names)) (sample_nam (rest sample_names)))]))\n",
    "  (apply + (map string-length (filter (lambda (x) (char-upper-case? (string-ref x 0))) sample_names))))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(char-lower-case? (string-ref (first sample_names) 0))\n     (sample_nam (rest sample_names))]\n    [else\n     (+ (string-length (first sample_names))\n        (sample_nam (rest sample_names)))]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(char-lower-case? (string-ref (first sample_names) 0))\n     (sample_nam (rest sample_names))]\n    [else (+ (string-length (first sample_names))\n             (sample_nam (rest sample_names)))]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(char-lower-case? (string-ref (first sample_names) 0))\n     (sample_nam (rest sample_names))]\n    [else (+ (string-length (first sample_names))\n             (sample_nam (rest sample_names)))]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(char-lower-case? (string-ref (first sample_names) 0))\n     (sample_nam (rest sample_names))]\n    [else (+ (string-length (first sample_names))\n             (sample_nam (rest sample_names)))]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [else (+ (string-length (first sample_names))\n             (sample_nam (rest sample_names)))]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(char-lower-case? (string-ref (first sample_names) 0))\n     (sample_nam (rest sample_names))]\n    [else (+ (string-length (first sample_names))\n             (sample_nam (rest sample_names)))]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(char-lower-case? (string-ref (first sample_names) 0)) (sample_nam (rest sample_names))]\n    [else (+ (string-length (first sample_names)) (sample_nam (rest sample_names)))]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(char-lower-case? (string-ref (first sample_names) 0))\n     (sample_nam (rest sample_names))]\n    [else (+ (string-length (first sample_names))\n             (sample_nam (rest sample_names)))]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(char-lower-case? (string-ref (first sample_names) 0))\n     (sample_nam (rest sample_names))]\n    [else (+ (string-length (first sample_names))\n             (sample_nam (rest sample_names)))]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(char-lower-case? (string-ref (first sample_names) 0))\n     (sample_nam (rest sample_names))]\n    [else (+ (string-length (first sample_names))\n             (sample_nam (rest sample_names)))]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(char-lower-case? (string-ref (first sample_names) 0))\n     (sample_nam (rest sample_names))]\n    [else (+ (string-length (first sample_names))\n             (sample_nam (rest sample_names)))]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(char-lower-case? (string-ref (first sample_names) 0)) (sample_nam (rest sample_names))]\n    [else (+ (string-length (first sample_names)) (sample_nam (rest sample_names)))]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(char-lower-case? (string-ref (first sample_names) 0))\n     (sample_nam (rest sample_names))]\n    [else (+ (string-length (first sample_names))\n             (sample_nam (rest sample_names)))]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(char-lower-case? (string-ref (first sample_names) 0))\n     (sample_nam (rest sample_names))]\n    [else (+ (string-length (first sample_names))\n             (sample_nam (rest sample_names)))]))\n</code>\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(char-lower-case? (string-ref (first sample_names) 0))\n     (sample_nam (rest sample_names))]\n    [else (+ (string-length (first sample_names))\n             (sample_nam (rest sample_names)))]))\n",
    "  (apply + (map string-length (filter (lambda (x) (char-upper-case? (string-ref x 0))) sample_names))))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(char-lower-case? (string-ref (first sample_names) 0)) (sample_nam (rest sample_names))]\n    [else (+ (string-length (first sample_names)) (sample_nam (rest sample_names)))]))\n",
    "  (cond\n    [(null? sample_names) 0]\n    [(char-lower-case? (string-ref (car sample_names) 0))\n     (sample_nam (cdr sample_names))]\n    [else (+ (string-length (car sample_names)) (sample_nam (cdr sample_names)))]))\n",
    "  (apply + (map string-length (filter (lambda (x) (char-upper-case? (string-ref x 0))) sample_names))))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [else\n     (if (char-lower-case? (string-ref (first sample_names) 0))\n         (sample_nam (rest sample_names))\n         (+ (string-length (first sample_names)) (sample_nam (rest sample_names))))]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(char-lower-case? (string-ref (first sample_names) 0)) (sample_nam (rest sample_names))]\n    [else (+ (string-length (first sample_names)) (sample_nam (rest sample_names)))]))\n",
    "  (foldl (lambda (x y)\n           (if (char-lower-case? (string-ref x 0))\n               y\n               (+ y (string-length x))))\n         0\n         sample_names))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(char-lower-case? (string-ref (first sample_names) 0)) (sample_nam (rest sample_names))]\n    [else (+ (string-length (first sample_names)) (sample_nam (rest sample_names)))]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [else (cond\n            [(char-lower-case? (string-ref (first sample_names) 0))\n             (sample_nam (rest sample_names))]\n            [else (+ (string-length (first sample_names))\n                     (sample_nam (rest sample_names)))])]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(char-lower-case? (string-ref (first sample_names) 0))\n     (sample_nam (rest sample_names))]\n    [else (+ (string-length (first sample_names))\n             (sample_nam (rest sample_names)))]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(char-lower-case? (string-ref (first sample_names) 0)) (sample_nam (rest sample_names))]\n    [else (+ (string-length (first sample_names)) (sample_nam (rest sample_names)))]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(char-lower-case? (string-ref (first sample_names) 0)) (sample_nam (rest sample_names))]\n    [else (+ (string-length (first sample_names)) (sample_nam (rest sample_names)))]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [else\n     (cond\n       [(char-lower-case? (string-ref (first sample_names) 0))\n        (sample_nam (rest sample_names))]\n       [else\n        (+ (string-length (first sample_names))\n           (sample_nam (rest sample_names)))])]))\n</code>\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(char-lower-case? (string-ref (first sample_names) 0)) (sample_nam (rest sample_names))]\n    [else (+ (string-length (first sample_names)) (sample_nam (rest sample_names)))]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(char-lower-case? (string-ref (first sample_names) 0)) (sample_nam (rest sample_names))]\n    [else (+ (string-length (first sample_names)) (sample_nam (rest sample_names)))]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(char-lower-case? (string-ref (first sample_names) 0)) (sample_nam (rest sample_names))]\n    [else (+ (string-length (first sample_names)) (sample_nam (rest sample_names)))]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(char-lower-case? (string-ref (first sample_names) 0))\n     (sample_nam (rest sample_names))]\n    [else (+ (string-length (first sample_names))\n             (sample_nam (rest sample_names)))]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(char-lower-case? (string-ref (first sample_names) 0))\n     (sample_nam (rest sample_names))]\n    [else (+ (string-length (first sample_names))\n             (sample_nam (rest sample_names)))]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [else\n     (cond\n       [(char-lower-case? (string-ref (first sample_names) 0))\n        (sample_nam (rest sample_names))]\n       [else\n        (+ (string-length (first sample_names))\n           (sample_nam (rest sample_names)))])]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(char-lower-case? (string-ref (first sample_names) 0))\n     (sample_nam (rest sample_names))]\n    [else (+ (string-length (first sample_names))\n             (sample_nam (rest sample_names)))]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(char-lower-case? (string-ref (first sample_names) 0)) (sample_nam (rest sample_names))]\n    [else (+ (string-length (first sample_names)) (sample_nam (rest sample_names)))]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(char-lower-case? (string-ref (first sample_names) 0))\n     (sample_nam (rest sample_names))]\n    [else (+ (string-length (first sample_names))\n             (sample_nam (rest sample_names)))]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(char-lower-case? (string-ref (first sample_names) 0))\n     (sample_nam (rest sample_names))]\n    [else\n     (+ (string-length (first sample_names))\n        (sample_nam (rest sample_names)))]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(char-lower-case? (string-ref (first sample_names) 0))\n     (sample_nam (rest sample_names))]\n    [else (+ (string-length (first sample_names))\n             (sample_nam (rest sample_names)))]))\n",
    "  (define (helper sample_names)\n    (cond\n      [(empty? sample_names) empty]\n      [(char-lower-case? (string-ref (first sample_names) 0)) (helper (rest sample_names))]\n      [else (cons (first sample_names) (helper (rest sample_names)))]))\n  (define (sum_length sample_names)\n    (cond\n      [(empty? sample_names) 0]\n      [else (+ (string-length (first sample_names)) (sum_length (rest sample_names)))]))\n  (sum_length (helper sample_names)))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(char-lower-case? (string-ref (first sample_names) 0))\n     (sample_nam (rest sample_names))]\n    [else (+ (string-length (first sample_names))\n             (sample_nam (rest sample_names)))]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(char-lower-case? (string-ref (first sample_names) 0))\n     (sample_nam (rest sample_names))]\n    [else (+ (string-length (first sample_names))\n             (sample_nam (rest sample_names)))]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(char-lower-case? (string-ref (first sample_names) 0))\n     (sample_nam (rest sample_names))]\n    [else (+ (string-length (first sample_names))\n             (sample_nam (rest sample_names)))]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [else\n     (if (char-lower-case? (string-ref (first sample_names) 0))\n         (sample_nam (rest sample_names))\n         (+ (string-length (first sample_names)) (sample_nam (rest sample_names))))]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(char-lower-case? (string-ref (first sample_names) 0))\n     (sample_nam (rest sample_names))]\n    [else (+ (string-length (first sample_names))\n             (sample_nam (rest sample_names)))]))\n",
    "  (cond [(empty? sample_names) 0]\n        [else (cond [(char-lower-case? (string-ref (first sample_names) 0)) (sample_nam (rest sample_names))]\n                    [else (+ (string-length (first sample_names)) (sample_nam (rest sample_names)))])]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(char-lower-case? (string-ref (first sample_names) 0))\n     (sample_nam (rest sample_names))]\n    [else (+ (string-length (first sample_names))\n             (sample_nam (rest sample_names)))]))\n",
    "  (cond [(empty? sample_names) 0]\n        [else\n         (cond [(symbol? (car sample_names))\n                (cond [(symbol=? (string-upcase (symbol->string (car sample_names))) (symbol->string (car sample_names)))\n                       (+ (string-length (symbol->string (car sample_names))) (sample_nam (cdr sample_names)))]\n                      [else (sample_nam (cdr sample_names))])]\n               [else (sample_nam (cdr sample_names))])]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(char-lower-case? (string-ref (first sample_names) 0))\n     (sample_nam (rest sample_names))]\n    [else (+ (string-length (first sample_names))\n             (sample_nam (rest sample_names)))]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(char-lower-case? (string-ref (first sample_names) 0))\n     (sample_nam (rest sample_names))]\n    [else (+ (string-length (first sample_names))\n             (sample_nam (rest sample_names)))]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(char-lower-case? (string-ref (first sample_names) 0))\n     (sample_nam (rest sample_names))]\n    [else (+ (string-length (first sample_names))\n             (sample_nam (rest sample_names)))]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(char-lower-case? (string-ref (first sample_names) 0))\n     (sample_nam (rest sample_names))]\n    [else (+ (string-length (first sample_names)) (sample_nam (rest sample_names)))]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(char-lower-case? (string-ref (first sample_names) 0)) (sample_nam (rest sample_names))]\n    [else (+ (string-length (first sample_names)) (sample_nam (rest sample_names)))]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(char-lower-case? (string-ref (first sample_names) 0))\n     (sample_nam (rest sample_names))]\n    [else (+ (string-length (first sample_names))\n             (sample_nam (rest sample_names)))]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(char-lower-case? (string-ref (first sample_names) 0))\n     (sample_nam (rest sample_names))]\n    [else (+ (string-length (first sample_names))\n             (sample_nam (rest sample_names)))]))\n",
    "  (cond [(empty? sample_names) 0]\n        [(symbol? (first sample_names)) (+ (string-length (symbol->string (first sample_names))) (sample_nam (rest sample_names)))]\n        [else (sample_nam (rest sample_names))]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [else\n     (cond\n       [(char-lower-case? (string-ref (first sample_names) 0))\n        (sample_nam (rest sample_names))]\n       [else\n        (+ (string-length (first sample_names))\n           (sample_nam (rest sample_names)))])]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(char-lower-case? (string-ref (first sample_names) 0))\n     (sample_nam (rest sample_names))]\n    [else (+ (string-length (first sample_names))\n             (sample_nam (rest sample_names)))]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [else\n     (cond\n       [(char-lower-case? (string-ref (first sample_names) 0))\n        (sample_nam (rest sample_names))]\n       [else\n        (+ (string-length (first sample_names))\n           (sample_nam (rest sample_names)))])]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(char-lower-case? (string-ref (first sample_names) 0))\n     (sample_nam (rest sample_names))]\n    [else (+ (string-length (first sample_names))\n             (sample_nam (rest sample_names)))]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [else\n     (if (char-lower-case? (string-ref (first sample_names) 0))\n         (sample_nam (rest sample_names))\n         (+ (string-length (first sample_names))\n            (sample_nam (rest sample_names))))]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(char-lower-case? (string-ref (first sample_names) 0))\n     (sample_nam (rest sample_names))]\n    [else (+ (string-length (first sample_names))\n             (sample_nam (rest sample_names)))]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(char-lower-case? (string-ref (first sample_names) 0))\n     (sample_nam (rest sample_names))]\n    [else (+ (string-length (first sample_names))\n             (sample_nam (rest sample_names)))]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(char-lower-case? (string-ref (first sample_names) 0)) (sample_nam (rest sample_names))]\n    [else (+ (string-length (first sample_names)) (sample_nam (rest sample_names)))]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [else\n     (cond\n       [(char-lower-case? (string-ref (first sample_names) 0))\n        (sample_nam (rest sample_names))]\n       [else\n        (+ (string-length (first sample_names))\n           (sample_nam (rest sample_names)))])]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(char-lower-case? (string-ref (first sample_names) 0)) (sample_nam (rest sample_names))]\n    [else (+ (string-length (first sample_names)) (sample_nam (rest sample_names)))]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(char-lower-case? (string-ref (first sample_names) 0))\n     (sample_nam (rest sample_names))]\n    [else (+ (string-length (first sample_names))\n             (sample_nam (rest sample_names)))]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(char-lower-case? (string-ref (first sample_names) 0)) (sample_nam (rest sample_names))]\n    [else (+ (string-length (first sample_names)) (sample_nam (rest sample_names)))]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(char-lower-case? (string-ref (first sample_names) 0))\n     (sample_nam (rest sample_names))]\n    [else (+ (string-length (first sample_names))\n             (sample_nam (rest sample_names)))]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(char-lower-case? (string-ref (first sample_names) 0))\n     (sample_nam (rest sample_names))]\n    [else (+ (string-length (first sample_names))\n             (sample_nam (rest sample_names)))]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(char-lower-case? (string-ref (first sample_names) 0)) (sample_nam (rest sample_names))]\n    [else (+ (string-length (first sample_names)) (sample_nam (rest sample_names)))]))\n</code>\nI am getting the following error:\n<code>sample_nam: contract violation\n  expected: list?\n  given: \"John\"\n  in: the 1st argument of\n      (-&gt; list? number?)\n  contract from: &lt;pkgs&gt;/racket-lib/list.rkt\n  blaming: top-level (possibly a contract violation)\n  at: &lt;pkgs&gt;/racket-lib/list.rkt:876.0\n  context...:\n   /home/ubuntu/workspace/sample.rkt:4:0: sample_nam\n   /home/ubuntu/workspace/sample.rkt:4:0: sample_nam\n   /home/ubuntu/workspace/sample.rkt:4:0: sample_nam\n   /home/ubuntu/workspace/sample.rkt:4:0: sample_nam\n   /home/ubuntu/workspace/sample.rkt:4:0: sample_nam\n   /home/ubuntu/workspace/sample.rkt:4:0: sample_nam\n   /home/ubuntu/workspace/sample.rkt:4:0: sample_nam\n   /home/ubuntu/workspace/sample.rkt:4:0: sample_nam\n   /home/ubuntu/workspace/sample.rkt:4:0: sample_nam\n   /home/ubuntu/workspace/sample.rkt:4:0: sample_nam\n   /home/ubuntu/workspace/sample.rkt:4:0: sample_nam\n   /home/ubuntu/workspace/sample.rkt:4:0: sample_nam\n   /home/ubuntu/workspace/sample.rkt:4:0: sample_nam\n   /home/ubuntu/workspace/sample.rkt:4:0: sample_nam\n   /home/ubuntu/works",
    "  (cond\n    [(empty? sample_names) 0]\n    [(char-lower-case? (string-ref (first sample_names) 0))\n     (sample_nam (rest sample_names))]\n    [else (+ (string-length (first sample_names))\n             (sample_nam (rest sample_names)))]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(char-lower-case? (string-ref (first sample_names) 0))\n     (sample_nam (rest sample_names))]\n    [else (+ (string-length (first sample_names))\n             (sample_nam (rest sample_names)))]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(char-lower-case? (string-ref (first sample_names) 0))\n     (sample_nam (rest sample_names))]\n    [else (+ (string-length (first sample_names))\n             (sample_nam (rest sample_names)))]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(char-lower-case? (string-ref (first sample_names) 0))\n     (sample_nam (rest sample_names))]\n    [else (+ (string-length (first sample_names))\n             (sample_nam (rest sample_names)))]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(char-lower-case? (string-ref (first sample_names) 0))\n     (sample_nam (rest sample_names))]\n    [else (+ (string-length (first sample_names))\n             (sample_nam (rest sample_names)))]))\n",
    "  (cond\n    [(empty? sample_names) 0]\n    [(char-lower-case? (string-ref (first sample_names) 0))\n     (sample_nam (rest sample_names))]\n    [else (+ (string-length (first sample_names))\n             (sample_nam (rest sample_names)))]))\n"
  ]
}
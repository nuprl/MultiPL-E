{
  "name": "mbpp_587_list_tuple",
  "language": "rkt",
  "prompt": "#lang racket\n\n;; Write a function to convert a list to a list.\n(define (list_tuple listx)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_587_list_tuple.py",
  "prompt_terminology": "reworded",
  "tests": "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate list_tuple))\n    (check-equal? (candidate (list 5 10 7 4 15 3)) (list 5 10 7 4 15 3))\n    (check-equal? (candidate (list 2 4 5 6 2 3 4 4 7)) (list 2 4 5 6 2 3 4 4 7))\n    (check-equal? (candidate (list 58 44 56)) (list 58 44 56))\n))\n\n(test-humaneval)",
  "stop_tokens": [
    "\n(define ",
    "\n#|",
    "\n;",
    "\n("
  ],
  "completions": [
    "  (if (null? listx)\n      '()\n      (cons (list (car listx)) (list_tuple (cdr listx)))))\n",
    "  (list (list (car listx) (cadr listx))))\n",
    "  (if (null? listx)\n      '()\n      (cons (list (car listx)) (list_tuple (cdr listx)))))\n",
    "  (if (null? listx)\n      '()\n      (cons (list (car listx)) (list_tuple (cdr listx)))))\n",
    "  (if (null? listx)\n      '()\n      (cons (list (car listx)) (list_tuple (cdr listx)))))\n",
    "  (map list listx))\n",
    "  (cond\n    [(empty? listx) empty]\n    [else (cons (list (first listx)) (list_tuple (rest listx)))]))\n",
    "  (if (null? listx)\n      '()\n      (cons (list (car listx)) (list_tuple (cdr listx)))))\n",
    "  (map list listx))\n",
    "  (map list listx))\n",
    "  (map list listx))\n",
    "  (map list listx))\n",
    "  (cond\n    [(empty? listx) empty]\n    [else (cons (list (first listx)) (list_tuple (rest listx)))]))\n",
    "  (if (null? listx)\n      '()\n      (cons (list (car listx)) (list_tuple (cdr listx)))))\n",
    "  (if (null? listx)\n      '()\n      (cons (list (car listx)) (list_tuple (cdr listx)))))\n",
    "  (map list listx))\n",
    "  (if (null? listx)\n      '()\n      (cons (list (car listx)) (list_tuple (cdr listx)))))\n",
    "  (map list listx))\n",
    "  (if (null? listx)\n      '()\n      (cons (list (car listx)) (list_tuple (cdr listx)))))\n",
    "  (if (null? listx)\n      '()\n      (cons (list (car listx)) (list_tuple (cdr listx)))))\n"
  ]
}
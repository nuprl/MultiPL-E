{
  "name": "mbpp_103_eulerian_num",
  "language": "rkt",
  "prompt": "#lang racket\n\n;; Write a function to find the Eulerian number a(n, m).\n(define (eulerian_num n m)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_103_eulerian_num.py",
  "prompt_terminology": "reworded",
  "tests": "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate eulerian_num))\n    (check-equal? (candidate 3 1) 4)\n    (check-equal? (candidate 4 1) 11)\n    (check-equal? (candidate 5 3) 26)\n))\n\n(test-humaneval)",
  "stop_tokens": [
    "\n(define ",
    "\n#|",
    "\n;",
    "\n("
  ],
  "completions": [
    "  (cond\n    [(= n m) 1]\n    [(= n 0) 0]\n    [(= m 0) 0]\n    [else (+ (eulerian_num (- n 1) m)\n             (* m (eulerian_num (- n 1) (- m 1))))]))\n",
    "  (cond\n    [(= n m) 1]\n    [(= n 0) 0]\n    [else (+ (eulerian_num (- n 1) m)\n             (* m (eulerian_num (- n 1) (- m 1))))]))\n",
    "  (cond\n    [(= n 0) 1]\n    [(= m 0) 0]\n    [else\n     (+ (* n (eulerian_num (- n 1) m))\n        (* (- m 1) (eulerian_num (- n 1) (- m 1))))]))\n",
    "  (cond\n    [(= n 0) 1]\n    [(= n m) 1]\n    [else (+ (eulerian_num (- n 1) m)\n             (* m (eulerian_num (- n 1) (- m 1))))]))\n",
    "  (cond\n    [(= n m) 1]\n    [(= n 1) 1]\n    [(= m 1) 0]\n    [else (+ (eulerian_num (- n 1) m) (* m (eulerian_num (- n 1) (- m 1))))]))\n",
    "  (cond\n    [(= n m) 1]\n    [(= n 0) 0]\n    [else (+ (* n (eulerian_num (- n 1) m))\n             (* (- m n) (eulerian_num (- n 1) (- m 1))))]))\n",
    "  (cond\n    [(= n 0) 1]\n    [(= n m) 1]\n    [else (+ (* n (eulerian_num (- n 1) (- m 1)))\n             (* (- m 1) (eulerian_num (- n 1) m)))]))\n",
    "  (cond\n    [(= n m) 1]\n    [(= n 0) 0]\n    [else (+ (* m (eulerian_num (- n 1) m))\n             (eulerian_num (- n 1) (- m 1)))]))\n",
    "  (cond\n    [(= n 0) 1]\n    [(= m 0) 0]\n    [else (+ (* n (eulerian_num (- n 1) m))\n             (* (- m 1) (eulerian_num (- n 1) (- m 1))))]))\n",
    "  (cond\n    [(= n m) 1]\n    [(= n 0) 0]\n    [else (+ (* m (eulerian_num (- n 1) m))\n             (eulerian_num (- n 1) (- m 1)))]))\n",
    "  (cond ((= n m) 1)\n        ((= n 0) 0)\n        ((= m 0) 0)\n        (else (+ (* n (eulerian_num (- n 1) (- m 1)))\n                 (* (- m 1) (eulerian_num (- n 1) m))))))\n",
    "  (cond\n    [(= n 0) 1]\n    [(= m 0) 0]\n    [else (+ (* m (eulerian_num (- n 1) m))\n             (* (- n 1) (eulerian_num (- n 1) (- m 1))))]))\n",
    "  (cond\n    [(= n 0) 1]\n    [(= n m) 1]\n    [else\n     (+ (* n (eulerian_num (- n 1) m))\n        (* (- m n) (eulerian_num (- n 1) (- m 1))))]))\n",
    "  (cond\n    [(= n 0) 1]\n    [(= m 0) 0]\n    [else (+ (* m (eulerian_num (- n 1) m))\n             (* (- n 1) (eulerian_num (- n 1) (- m 1))))]))\n",
    "  (cond\n    [(= n 0) 1]\n    [(= m 0) 0]\n    [else\n     (+ (* n (eulerian_num (- n 1) m))\n        (* (- m 1) (eulerian_num (- n 1) (- m 1))))]))\n",
    "  (cond\n    [(= n 0) 1]\n    [(= n 1) 1]\n    [(= n m) 1]\n    [else\n     (+ (eulerian_num (- n 1) (- m 1))\n        (eulerian_num (- n 1) m))]))\n",
    "  (cond ((= n m) 1)\n        ((= n 0) 0)\n        ((= m 0) 0)\n        (else (+ (* m (eulerian_num (- n 1) (- m 1)))\n                 (eulerian_num (- n 1) m)))))\n",
    "  (cond ((or (< n m) (< m 0)) 0)\n        ((= n m) 1)\n        (else (+ (eulerian_num (- n 1) (- m 1))\n                 (eulerian_num (- n 1) m)))))\n",
    "  (cond\n    [(= n m) 1]\n    [(= n 0) 0]\n    [else (+ (* n (eulerian_num (- n 1) m))\n             (eulerian_num (- n 1) (- m 1)))]))\n",
    "  (cond\n    [(= n m) 1]\n    [(= n 0) 0]\n    [else (+ (* n (eulerian_num (- n 1) m))\n             (eulerian_num (- n 1) (- m 1)))]))\n",
    "  (cond\n    [(= n 0) 1]\n    [(= m 0) 0]\n    [else (+ (* n (eulerian_num (- n 1) m))\n             (eulerian_num (- n 1) (- m 1)))]))\n",
    "  (cond\n    [(= n 0) 1]\n    [(= n m) 1]\n    [else (+ (eulerian_num (- n 1) m)\n             (* m (eulerian_num (- n 1) (- m 1))))]))\n",
    "  (cond\n    [(= n 0) 1]\n    [(= n m) 1]\n    [else (+ (* n (eulerian_num (- n 1) (- m 1)))\n             (* (- m 1) (eulerian_num (- n 1) (- m 2))))]))\n",
    "  (cond\n    [(= n 0) 1]\n    [(= n m) 1]\n    [(= m 0) 0]\n    [else (+ (eulerian_num (- n 1) (- m 1))\n             (eulerian_num (- n 1) m))]))\n",
    "  (cond\n    [(= n m) 1]\n    [(= n 1) 1]\n    [(= m 1) 0]\n    [else (+ (eulerian_num (- n 1) m)\n             (* m (eulerian_num (- n 1) (- m 1))))]))\n",
    "  (cond\n    [(= n m) 1]\n    [else (+ (eulerian_num (- n 1) m)\n             (* m (eulerian_num (- n 1) (- m 1))))]))\n",
    "  (cond\n    [(= n 0) 1]\n    [(= n m) 1]\n    [else (+ (eulerian_num (- n 1) (- m 1))\n             (* m (eulerian_num (- n 1) m)))]))\n",
    "  (cond\n    [(= n m) 1]\n    [(= n 0) 0]\n    [else (+ (eulerian_num (- n 1) m)\n             (* n (eulerian_num (- n 1) (- m 1))))]))\n",
    "  (cond\n    [(= n m) 1]\n    [(= n 0) 0]\n    [else (+ (* n (eulerian_num (- n 1) m))\n             (eulerian_num (- n 1) (- m 1)))]))\n",
    "  (cond\n    [(= n 0) 1]\n    [(= m 0) 0]\n    [else\n     (+ (* n (eulerian_num (- n 1) m))\n        (* (- m 1) (eulerian_num (- n 1) (- m 1))))]))\n",
    "  (cond\n    [(= n m) 1]\n    [(= n 0) 0]\n    [(= m 0) 0]\n    [else (+ (* m (eulerian_num (- n 1) m))\n             (* (- n 1) (eulerian_num (- n 1) (- m 1))))]))\n",
    "  (cond\n    [(= n m) 1]\n    [(= n 0) 0]\n    [else (+ (* n (eulerian_num (- n 1) m))\n             (eulerian_num (- n 1) (- m 1)))]))\n",
    "  (cond\n    [(= m 0) 1]\n    [(= m n) 1]\n    [else (+ (eulerian_num (- n 1) (- m 1))\n             (eulerian_num (- n 1) m))]))\n",
    "  (cond\n    [(= n m) 1]\n    [(= m 1) (factorial n)]\n    [else (+ (eulerian_num (- n 1) m)\n             (* (- n 1) (eulerian_num (- n 1) (- m 1))))]))\n",
    "  (cond\n    [(= n 0) 1]\n    [(= m 0) 0]\n    [else\n     (+ (* n (eulerian_num (- n 1) (- m 1)))\n        (* (- m 1) (eulerian_num (- n 1) m)))]))\n",
    "  (cond\n    [(= n m) 1]\n    [(= n 0) 0]\n    [else (+ (eulerian_num (- n 1) m)\n             (* (- n m) (eulerian_num (- n 1) (- n 1))))]))\n",
    "  (cond\n    [(= n m) 1]\n    [(= n 0) 0]\n    [else (+ (* n (eulerian_num (- n 1) m))\n             (eulerian_num (- n 1) (- m 1)))]))\n",
    "  (cond\n    [(= n 0) 1]\n    [(= m 0) 0]\n    [else\n     (+ (* n (eulerian_num (- n 1) m))\n        (* (- m 1) (eulerian_num (- n 1) (- m 1))))]))\n",
    "  (cond\n    [(= n 0) 1]\n    [(= m 0) 0]\n    [else\n     (+ (* n (eulerian_num (- n 1) m))\n        (* (- m 1) (eulerian_num (- n 1) (- m 1))))]))\n",
    "  (cond\n    [(= n 0) 1]\n    [(= m 0) 0]\n    [else\n     (+ (* n (eulerian_num (- n 1) m))\n        (* (- m 1) (eulerian_num (- n 1) (- m 1))))]))\n",
    "  (cond\n    [(= n m) 1]\n    [(= n 0) 0]\n    [else (+ (* n (eulerian_num (- n 1) m))\n             (eulerian_num (- n 1) (- m 1)))]))\n",
    "  (cond ((= n m) 1)\n        ((= n 0) 0)\n        (else (+ (* n (eulerian_num (- n 1) m))\n                 (eulerian_num (- n 1) (- m 1))))))\n",
    "  (cond\n    [(= n m) 1]\n    [(= n 0) 0]\n    [else (+ (* m (eulerian_num (- n 1) m))\n             (eulerian_num (- n 1) (- m 1)))]))\n",
    "  (cond\n    [(= n m) 1]\n    [(= n 0) 0]\n    [else (+ (* m (eulerian_num (- n 1) m))\n             (eulerian_num (- n 1) (- m 1)))]))\n",
    "  (cond\n    [(= n m) 1]\n    [(= n 1) 1]\n    [(= m 1) 1]\n    [else (+ (eulerian_num (- n 1) m)\n             (* m (eulerian_num (- n 1) (- m 1))))]))\n",
    "  (cond\n    [(= n m) 1]\n    [(= n 0) 0]\n    [else (+ (* n (eulerian_num (- n 1) m))\n             (eulerian_num (- n 1) (- m 1)))]))\n",
    "  (cond\n    [(= n m) 1]\n    [(= m 0) 0]\n    [else (+ (* n (eulerian_num (- n 1) (- m 1)))\n             (eulerian_num (- n 1) m))]))\n",
    "  (cond\n    [(= n 0) 1]\n    [(= m 0) 0]\n    [else\n     (+ (* n (eulerian_num (- n 1) m))\n        (* (- m 1) (eulerian_num (- n 1) (- m 1))))]))\n",
    "  (cond\n    [(= n 0) 1]\n    [(= n m) 1]\n    [else (+ (eulerian_num (- n 1) (- m 1))\n             (eulerian_num (- n 1) m))]))\n",
    "  (cond\n    [(= n 0) 1]\n    [(= n m) 1]\n    [else (+ (eulerian_num (- n 1) (- m 1))\n             (eulerian_num (- n 1) m))]))\n",
    "  (cond\n    [(= n m) 1]\n    [(= m 0) 0]\n    [else\n     (+ (* n (eulerian_num (- n 1) (- m 1)))\n        (* m (eulerian_num (- n 1) m)))]))\n",
    "  (cond\n    [(= n 0) 1]\n    [(= m 0) 0]\n    [else (+ (* n (eulerian_num (- n 1) m))\n             (* (- m 1) (eulerian_num (- n 1) (- m 1))))]))\n",
    "  (cond\n    [(= n m) 1]\n    [(= n 0) 0]\n    [else (+ (eulerian_num (- n 1) m)\n             (* m (eulerian_num (- n 1) (- m 1))))]))\n",
    "  (cond\n    [(= n m) 1]\n    [(= n 0) 0]\n    [else (+ (eulerian_num (- n 1) m)\n             (* n (eulerian_num (- n 1) (- m 1))))]))\n",
    "  (cond\n    [(= n 0) 1]\n    [(= n m) 1]\n    [else (+ (eulerian_num (- n 1) m)\n             (* (- m n) (eulerian_num (- n 1) (- m 1))))]))\n",
    "  (cond\n    [(= n m) 1]\n    [(= n 1) 1]\n    [else\n     (+ (* n (eulerian_num (- n 1) m))\n        (* (- m 1) (eulerian_num (- n 1) (- m 1))))]))\n",
    "  (cond\n    [(= n 0) 1]\n    [(= n 1) 1]\n    [(= n m) 1]\n    [else\n     (+ (* (- n m) (eulerian_num (- n 1) m))\n        (* (- m 1) (eulerian_num (- n 1) (- m 1))))]))\n",
    "  (cond\n    [(= n m) 1]\n    [(= n 0) 0]\n    [else (+ (eulerian_num (- n 1) m)\n             (* m (eulerian_num (- n 1) (- m 1))))]))\n",
    "  (cond\n    [(= n m) 1]\n    [(= n 0) 0]\n    [else\n     (+ (* n (eulerian_num (- n 1) m))\n        (* (- m n) (eulerian_num (- n 1) (- m 1))))]))\n",
    "  (cond\n    [(= n 0) 1]\n    [(= m 0) 0]\n    [else (+ (* n (eulerian_num (- n 1) m))\n             (* (- m 1) (eulerian_num (- n 1) (- m 1))))]))\n",
    "  (cond\n    [(= n m) 1]\n    [(= n 0) 0]\n    [else (+ (* m (eulerian_num (- n 1) m))\n             (eulerian_num (- n 1) (- m 1)))]))\n",
    "  (cond\n    [(= n 0) 1]\n    [(= m 0) 0]\n    [else\n     (+ (* n (eulerian_num (- n 1) m))\n        (* (- m 1) (eulerian_num (- n 1) (- m 1))))]))\n",
    "  (cond\n    [(= n m) 1]\n    [(= m 0) 0]\n    [else (+ (* n (eulerian_num (- n 1) (- m 1)))\n             (* (- m 1) (eulerian_num (- n 1) (- m 2))))]))\n",
    "  (cond\n    [(= n 0) 1]\n    [(= n 1) 1]\n    [(= m 0) 0]\n    [(= m 1) 1]\n    [(= m n) 1]\n    [else (+ (eulerian_num (- n 1) (- m 1))\n             (eulerian_num (- n 1) m))]))\n",
    "  (cond\n    [(= n m) 1]\n    [(= n 0) 0]\n    [else (+ (eulerian_num (- n 1) m)\n             (* n (eulerian_num (- n 1) (- m 1))))]))\n",
    "  (cond\n    [(= n m) 1]\n    [(= n 1) 1]\n    [(= m 1) 1]\n    [else (+ (eulerian_num (- n 1) m)\n             (* m (eulerian_num (- n 1) (- m 1))))]))\n",
    "  (cond\n    [(= n m) 1]\n    [(= m 0) 0]\n    [else (+ (eulerian_num (- n 1) m)\n             (* m (eulerian_num (- n 1) (- m 1))))]))\n",
    "  (cond\n    [(= n m) 1]\n    [(= n 0) 0]\n    [(= m 0) 0]\n    [else (+ (* m (eulerian_num (- n 1) m))\n             (* (- n 1) (eulerian_num (- n 1) (- m 1))))]))\n",
    "  (cond\n    [(= n 0) 1]\n    [(= n m) 1]\n    [else (+ (eulerian_num (- n 1) (- m 1))\n             (eulerian_num (- n 1) m))]))\n",
    "  (cond\n    [(= n 0) 1]\n    [(= n m) 1]\n    [else (+ (eulerian_num (- n 1) (- m 1))\n             (eulerian_num (- n 1) m))]))\n",
    "  (cond\n    [(= n 0) 1]\n    [(= m 0) 0]\n    [else (+ (eulerian_num (- n 1) m)\n             (* (- n 1) (eulerian_num (- n 1) (- m 1))))]))\n",
    "  (cond\n    [(= n m) 1]\n    [(= n 0) 0]\n    [else (+ (* n (eulerian_num (- n 1) m))\n             (eulerian_num (- n 1) (- m 1)))]))\n",
    "  (cond\n    [(= n 0) 1]\n    [(= m 0) 0]\n    [else (+ (* m (eulerian_num (- n 1) m))\n             (* (- n 1) (eulerian_num (- n 1) (- m 1))))]))\n",
    "  (cond ((= n 0) 1)\n        ((= m 0) 0)\n        ((= n m) 1)\n        (else (+ (eulerian_num (- n 1) m)\n                 (* m (eulerian_num (- n 1) (- m 1)))))))\n",
    "  (cond\n    [(= n m) 1]\n    [(= n 0) 0]\n    [else (+ (* n (eulerian_num (- n 1) m))\n             (eulerian_num (- n 1) (- m 1)))]))\n",
    "  (cond\n    [(= n 0) 1]\n    [(= n m) 1]\n    [else (+ (eulerian_num (- n 1) m) (* (- m n) (eulerian_num (- n 1) (- m 1))))]))\n",
    "  (cond\n    [(= n m) 1]\n    [(= n 0) 0]\n    [else\n     (+ (eulerian_num (- n 1) m)\n        (* n (eulerian_num (- n 1) (- m 1))))]))\n",
    "  (cond\n    [(= n 0) 1]\n    [(= m 0) 0]\n    [else\n     (+ (* n (eulerian_num (- n 1) m))\n        (* (- m 1) (eulerian_num (- n 1) (- m 1))))]))\n",
    "  (cond\n    [(= n 0) 1]\n    [(= n m) 1]\n    [else (+ (eulerian_num (- n 1) (- m 1))\n             (eulerian_num (- n 1) m))]))\n",
    "  (cond\n    [(= n 0) 1]\n    [(= n m) 1]\n    [(= m 0) 0]\n    [else\n     (+ (eulerian_num (- n 1) (- m 1))\n        (eulerian_num (- n 1) m))]))\n",
    "  (cond ((= n m) 1)\n        ((= n 0) 0)\n        ((= m 0) 0)\n        (else (+ (eulerian_num (- n 1) m)\n                 (* m (eulerian_num (- n 1) (- m 1)))))))\n",
    "  (cond\n    [(= n 0) 1]\n    [(= n m) 1]\n    [else (+ (eulerian_num (- n 1) (- m 1))\n             (eulerian_num (- n 1) m))]))\n",
    "  (cond\n    [(= n 0) 1]\n    [(= n 1) 1]\n    [(= n m) 1]\n    [else (+ (eulerian_num (- n 1) m)\n             (* m (eulerian_num (- n 1) (- m 1))))]))\n",
    "  (cond\n    [(= n m) 1]\n    [(= n 1) 1]\n    [(= m 1) 1]\n    [else (+ (eulerian_num (- n 1) m) (* m (eulerian_num (- n 1) (- m 1))))]))\n",
    "  (cond\n    [(= n m) 1]\n    [(= n 0) 0]\n    [(= m 0) 0]\n    [else (+ (* m (eulerian_num (- n 1) m))\n             (* (- n m) (eulerian_num (- n 1) (- m 1))))]))\n",
    "  (cond\n    [(= n 0) 1]\n    [(= n m) 1]\n    [else (+ (* n (eulerian_num (- n 1) (- m 1)))\n             (* (- m 1) (eulerian_num (- n 1) m)))]))\n",
    "  (cond ((or (= n 0) (= m 0)) 1)\n        ((= n 1) m)\n        ((= m 1) n)\n        (else (+ (eulerian_num (- n 1) m)\n                 (eulerian_num n (- m 1))))))\n",
    "  (cond ((= n 0) 1)\n        ((= n 1) 1)\n        ((= m 0) 0)\n        ((= m 1) 1)\n        ((= m n) 1)\n        ((&gt; m n) 0)\n        (else (+ (eulerian_num (- n 1) (- m 1))\n                 (eulerian_num (- n 1) m)))))\n",
    "  (cond\n    [(= n m) 1]\n    [(= n 0) 0]\n    [else (+ (* n (eulerian_num (- n 1) m))\n             (* (- m n) (eulerian_num (- n 1) (- m 1))))]))\n",
    "  (cond\n    [(= n 0) 1]\n    [(= n m) 1]\n    [else (+ (eulerian_num (- n 1) m) (* (- m n) (eulerian_num (- n 1) (- m 1))))]))\n",
    "  (cond\n    [(= n m) 1]\n    [(= n 1) 1]\n    [(= m 1) 1]\n    [else (+ (eulerian_num (- n 1) m) (* (- n 1) (eulerian_num (- n 1) (- m 1))))]))\n",
    "  (cond\n    [(= n m) 1]\n    [(= n 0) 0]\n    [else (+ (* n (eulerian_num (- n 1) m))\n             (eulerian_num (- n 1) (- m 1)))]))\n",
    "  (cond\n    [(= n 0) 1]\n    [(= n 1) 1]\n    [(= n m) 1]\n    [else\n     (+ (* n (eulerian_num (- n 1) m))\n        (* (- m n) (eulerian_num (- n 1) (- m 1))))]))\n",
    "  (cond\n    [(= n 0) 1]\n    [(= m 0) 0]\n    [else\n     (+ (* n (eulerian_num (- n 1) m))\n        (* (- m 1) (eulerian_num (- n 1) (- m 1))))]))\n",
    "  (cond\n    [(= n m) 1]\n    [(= n 0) 0]\n    [(= m 0) 0]\n    [else (+ (eulerian_num (- n 1) m)\n             (* m (eulerian_num (- n 1) (- m 1))))]))\n",
    "  (cond\n    [(= n m) 1]\n    [(= n 0) 0]\n    [else (+ (eulerian_num (- n 1) m)\n             (* n (eulerian_num (- n 1) (- m 1))))]))\n",
    "  (cond\n    [(= n m) 1]\n    [(= n 0) 0]\n    [else (+ (eulerian_num (- n 1) m)\n             (* (- n 1) (eulerian_num (- n 1) (- m 1))))]))\n",
    "  (cond\n    [(= n m) 1]\n    [(= n 1) 1]\n    [(= m 1) 0]\n    [else (+ (eulerian_num (- n 1) m) (* m (eulerian_num (- n 1) (- m 1))))]))\n",
    "  (cond ((= n 0) 1)\n        ((= m 0) 0)\n        ((= n m) 1)\n        (else (+ (* n (eulerian_num (- n 1) (- m 1)))\n                 (* (- m 1) (eulerian_num (- n 1) (- m 2)))))))\n",
    "  (cond\n    [(= n m) 1]\n    [(= n 0) 0]\n    [(= m 0) 0]\n    [else (+ (eulerian_num (- n 1) m)\n             (* m (eulerian_num (- n 1) (- m 1))))]))\n",
    "  (cond\n    [(= n m) 1]\n    [(= n 1) 1]\n    [(= m 1) 0]\n    [else (+ (eulerian_num (- n 1) m) (* (- n 1) (eulerian_num (- n 1) (- m 1))))]))\n",
    "  (cond\n    [(= m 0) 1]\n    [(= n m) 1]\n    [else (+ (eulerian_num (- n 1) m)\n             (* (- n m) (eulerian_num (- n 1) (- m 1))))]))\n",
    "  (cond\n    [(= n m) 1]\n    [(= n 0) 0]\n    [else (+ (* n (eulerian_num (- n 1) m))\n             (eulerian_num (- n 1) (- m 1)))]))\n",
    "  (cond\n    [(= n m) 1]\n    [(= n 1) 1]\n    [(= m 1) 0]\n    [else (+ (eulerian_num (- n 1) m)\n             (* m (eulerian_num (- n 1) (- m 1))))]))\n",
    "  (cond ((= n 0) 1)\n        ((= m 0) 0)\n        ((= n m) 1)\n        (else (+ (eulerian_num (- n 1) (- m 1))\n                 (eulerian_num (- n 1) m)))))\n",
    "  (cond\n    [(= n 0) 1]\n    [(= n m) 1]\n    [else\n     (+ (* n (eulerian_num (- n 1) (- m 1)))\n        (* (- m 1) (eulerian_num (- n 1) m)))]))\n",
    "  (cond\n    [(= n m) 1]\n    [(= n 1) 1]\n    [else (+ (* n (eulerian_num (- n 1) m))\n            (* (- m 1) (eulerian_num (- n 1) (- m 1))))]))\n",
    "  (cond\n    [(= n 0) 1]\n    [(= m 0) 0]\n    [else (+ (* n (eulerian_num (- n 1) m))\n             (* (- m 1) (eulerian_num (- n 1) (- m 1))))]))\n",
    "  (if (zero? n)\n      1\n      (if (zero? m)\n          0\n          (+ (* m (eulerian_num (- n 1) (- m 1)))\n             (eulerian_num (- n 1) m)))))\n",
    "  (cond\n    [(= n 0) 1]\n    [(= m 0) 0]\n    [else (+ (* n (eulerian_num (- n 1) m))\n             (* (- m 1) (eulerian_num (- n 1) (- m 1))))]))\n",
    "  (cond\n    [(= n m) 1]\n    [(= n 0) 0]\n    [else (+ (eulerian_num (- n 1) m)\n             (* m (eulerian_num (- n 1) (- m 1))))]))\n",
    "  (cond ((or (= n 0) (= m 0)) 1)\n        ((= n m) (eulerian_num (- n 1) (- m 1)))\n        (else (+ (eulerian_num (- n 1) m)\n                 (eulerian_num (- n 1) (- m 1))))))\n",
    "  (cond\n    [(= n m) 1]\n    [(= n 0) 0]\n    [else (+ (* n (eulerian_num (- n 1) m))\n             (eulerian_num (- n 1) (- m 1)))]))\n",
    "  (cond\n    [(= n m) 1]\n    [(= n 0) 0]\n    [else (+ (* n (eulerian_num (- n 1) m))\n             (eulerian_num (- n 1) (- m 1)))]))\n",
    "  (cond ((= n 0) 1)\n        ((= n m) 1)\n        ((= m 0) 0)\n        (else (+ (eulerian_num (- n 1) (- m 1))\n                 (eulerian_num (- n 1) m)))))\n",
    "  (cond\n    [(= n 0) 1]\n    [(= n m) 1]\n    [else (+ (eulerian_num (- n 1) m)\n             (* (- m n) (eulerian_num (- n 1) (- m 1))))]))\n",
    "  (cond\n    [(= n m) 1]\n    [(= n 0) 0]\n    [else (+ (* n (eulerian_num (- n 1) m))\n             (eulerian_num (- n 1) (- m 1)))]))\n",
    "  (cond\n    [(= n 0) 1]\n    [(= m 0) 0]\n    [(= n m) 1]\n    [else (+ (eulerian_num (- n 1) m) (eulerian_num (- n 1) (- m 1)))]))\n",
    "  (cond\n    [(= n 0) 1]\n    [(= m 0) 0]\n    [(= n m) 1]\n    [else (+ (eulerian_num (- n 1) m)\n             (* (- n 1) (eulerian_num (- n 1) (- m 1))))]))\n",
    "  (cond\n    [(= n m) 1]\n    [(= n 0) 0]\n    [else (+ (eulerian_num (- n 1) m)\n             (* m (eulerian_num (- n 1) (- m 1))))]))\n",
    "  (cond\n    [(= n 0) 1]\n    [(= m 0) 0]\n    [else (+ (* n (eulerian_num (- n 1) m))\n             (* (- m 1) (eulerian_num (- n 1) (- m 1))))]))\n",
    "  (cond\n    [(= n m) 1]\n    [(= n 0) 0]\n    [else\n     (+ (* n (eulerian_num (- n 1) m))\n        (* (- m n) (eulerian_num (- n 1) (- m 1))))]))\n",
    "  (cond\n    [(= n 0) 1]\n    [(= m 0) 0]\n    [else\n     (+ (* m (eulerian_num (- n 1) m))\n        (* (- n 1) (eulerian_num (- n 1) (- m 1))))]))\n",
    "  (cond\n    [(= n 0) 1]\n    [(= m 0) 0]\n    [else (+ (* n (eulerian_num (- n 1) m))\n             (* (- m 1) (eulerian_num (- n 1) (- m 1))))]))\n",
    "  (cond\n    [(= n 0) 1]\n    [(= m 0) 0]\n    [else\n     (+ (* n (eulerian_num (- n 1) m))\n        (* (- m 1) (eulerian_num (- n 1) (- m 1))))]))\n",
    "  (cond\n    [(= n m) 1]\n    [(= n 0) 0]\n    [else (+ (* n (eulerian_num (- n 1) m))\n             (eulerian_num (- n 1) (- m 1)))]))\n",
    "  (cond\n    [(= n 0) 1]\n    [(= m 0) 0]\n    [else\n     (+ (eulerian_num (- n 1) m)\n        (* (- m 1) (eulerian_num (- n 1) (- m 1))))]))\n",
    "  (cond\n    [(= n 0) 1]\n    [(= n m) 1]\n    [else (+ (eulerian_num (- n 1) (- m 1))\n             (eulerian_num (- n 1) m))]))\n",
    "  (cond ((or (< n 0) (< m 0)) 0)\n        ((= n 0) 1)\n        ((= m 0) 0)\n        (else (+ (* m (eulerian_num (- n 1) m))\n                 (eulerian_num (- n 1) (- m 1))))))\n",
    "  (cond\n    [(= n m) 1]\n    [(= n 1) 1]\n    [(= m 1) 0]\n    [else (+ (eulerian_num (- n 1) m) (* m (eulerian_num (- n 1) (- m 1))))]))\n",
    "  (cond ((or (= n 0) (= m 0)) 1)\n        ((= n m) 1)\n        ((= n 1) (factorial m))\n        ((= m 1) (factorial (- n 1)))\n        (else (+ (* n (eulerian_num (- n 1) (- m 1)))\n                 (* (- m 1) (eulerian_num (- n 1) m))))))\n",
    "  (cond\n    [(= n m) 1]\n    [(= n 1) 1]\n    [(= m 1) 0]\n    [else (+ (eulerian_num (- n 1) m)\n             (* m (eulerian_num (- n 1) (- m 1))))]))\n",
    "  (cond ((= n 0) 1)\n        ((= m 0) 0)\n        ((= n m) 1)\n        (else (+ (eulerian_num (- n 1) (- m 1))\n                 (eulerian_num (- n 1) m)))))\n",
    "  (cond\n    [(= n m) 1]\n    [(= n 0) 0]\n    [else (+ (* m (eulerian_num (- n 1) m))\n             (eulerian_num (- n 1) (- m 1)))]))\n",
    "  (cond\n    [(= n 0) 1]\n    [(= n m) 1]\n    [else\n     (+ (eulerian_num (- n 1) (- m 1))\n        (eulerian_num (- n 1) m))]))\n",
    "  (cond\n    [(= n 0) 1]\n    [(= m 0) 0]\n    [else (+ (* n (eulerian_num (- n 1) m))\n             (* (- m 1) (eulerian_num (- n 1) (- m 1))))]))\n",
    "  (cond ((= n m) 1)\n        ((= n 0) 0)\n        ((= m 0) 0)\n        (else (+ (* m (eulerian_num (- n 1) m))\n                 (eulerian_num (- n 1) (- m 1))))))\n",
    "  (cond\n    [(= n 0) 1]\n    [(= n m) 1]\n    [else (+ (eulerian_num (- n 1) (- m 1))\n             (eulerian_num (- n 1) m))]))\n",
    "  (cond ((= n 0) 1)\n        ((= m 0) 0)\n        ((= n m) 1)\n        (else (+ (eulerian_num (- n 1) (- m 1))\n                 (eulerian_num (- n 1) m)))))\n",
    "  (cond\n    [(= n m) 1]\n    [(= n 0) 0]\n    [(= m 0) 0]\n    [else (+ (* m (eulerian_num (- n 1) m))\n             (* (- n 1) (eulerian_num (- n 1) (- m 1))))]))\n",
    "  (if (= n m)\n      1\n      (+ (* n (eulerian_num (- n 1) m))\n         (* m (eulerian_num n (- m 1))))))\n",
    "  (cond ((= n 0) 1)\n        ((= m 0) 0)\n        ((= n m) 1)\n        (else (+ (eulerian_num (- n 1) m)\n                 (eulerian_num (- n 1) (- m 1))))))\n",
    "  (if (or (= n 0) (= m 0))\n      1\n      (+ (eulerian_num (- n 1) m)\n         (* (eulerian_num (- n 1) (- m 1))\n            (/ (- m 1) n)))))\n",
    "  (cond\n    [(= n m) 1]\n    [(= n 0) 0]\n    [else (+ (eulerian_num (- n 1) m)\n             (* m (eulerian_num (- n 1) (- m 1))))]))\n",
    "  (cond\n    [(= n m) 1]\n    [(= n 1) 1]\n    [(= m 1) 0]\n    [else (+ (* n (eulerian_num (- n 1) m))\n             (* (- m 1) (eulerian_num n (- m 1))))]))\n",
    "  (cond\n    [(= n 0) 1]\n    [(= n m) 1]\n    [else (+ (* n (eulerian_num (- n 1) m))\n             (* (- m n) (eulerian_num (- n 1) (- m 1))))]))\n",
    "  (cond\n    [(= m 0) 1]\n    [(= m n) 1]\n    [else (+ (eulerian_num (- n 1) (- m 1))\n             (eulerian_num (- n 1) m))]))\n",
    "  (cond\n    [(= n m) 1]\n    [(= n 0) 0]\n    [(= m 0) 0]\n    [else (+ (* m (eulerian_num (- n 1) m))\n             (* (- n 1) (eulerian_num (- n 1) (- m 1))))]))\n",
    "  (cond\n    [(= n 0) 1]\n    [(= n m) 1]\n    [else (+ (eulerian_num (- n 1) m) (* (- m n) (eulerian_num (- n 1) (- m 1))))]))\n",
    "  (cond\n    [(= n m) 1]\n    [(= n 0) 0]\n    [(= m 0) 0]\n    [else (+ (eulerian_num (- n 1) m) (* m (eulerian_num (- n 1) (- m 1))))]))\n",
    "  (cond\n    [(= n m) 1]\n    [(= m 1) 1]\n    [else (+ (eulerian_num (- n 1) (- m 1))\n             (eulerian_num (- n 1) m))]))\n",
    "  (cond\n    [(= n 0) 1]\n    [(= n m) 1]\n    [else\n     (+ (eulerian_num (- n 1) m)\n        (* (- m n) (eulerian_num (- n 1) (- m 1))))]))\n",
    "  (cond\n    [(= n 0) 1]\n    [(= n m) 1]\n    [else (+ (* n (eulerian_num (- n 1) m))\n             (* (- m n) (eulerian_num (- n 1) (- m 1))))]))\n",
    "  (cond\n    [(= n m) 1]\n    [(= n 1) 1]\n    [(= m 1) 0]\n    [else (+ (eulerian_num (- n 1) m)\n             (* m (eulerian_num (- n 1) (- m 1))))]))\n",
    "  (cond\n    [(= m 0) 0]\n    [(= m n) 1]\n    [else (+ (eulerian_num (- n 1) m)\n             (* m (eulerian_num (- n 1) (- m 1))))]))\n",
    "  (cond\n    [(= n 0) 1]\n    [(= m 0) 0]\n    [else\n     (+ (* n (eulerian_num (- n 1) m))\n        (* (- m 1) (eulerian_num (- n 1) (- m 1))))]))\n",
    "  (cond\n    [(= m 0) 1]\n    [(= m n) 1]\n    [else (+ (eulerian_num (- n 1) (- m 1))\n             (eulerian_num (- n 1) m))]))\n",
    "  (cond\n    [(= n m) 1]\n    [(= n 0) 0]\n    [else (+ (* n (eulerian_num (- n 1) m))\n             (eulerian_num (- n 1) (- m 1)))]))\n",
    "  (cond\n    [(= n 0) 1]\n    [(= m 0) 0]\n    [else\n     (+ (* n (eulerian_num (- n 1) m))\n        (* (- m 1) (eulerian_num (- n 1) (- m 1))))]))\n",
    "  (cond\n    [(= n m) 1]\n    [(= n 0) 0]\n    [else (+ (eulerian_num (- n 1) m)\n             (* m (eulerian_num (- n 1) (- m 1))))]))\n",
    "  (if (zero? n)\n      1\n      (if (zero? m)\n          0\n          (+ (* m (eulerian_num (- n 1) m))\n             (* (- n 1) (eulerian_num (- n 1) (- m 1)))))))\n",
    "  (cond\n    [(= n m) 1]\n    [(= n 0) 0]\n    [else (+ (* n (eulerian_num (- n 1) m))\n             (eulerian_num (- n 1) (- m 1)))]))\n",
    "  (cond\n    [(= n 0) 1]\n    [(= n m) 1]\n    [else (+ (eulerian_num (- n 1) m)\n             (* (- m n) (eulerian_num (- n 1) (- m 1))))]))\n",
    "  (cond\n    [(= m 0) 1]\n    [(= m n) 1]\n    [else (+ (eulerian_num (- n 1) (- m 1))\n             (eulerian_num (- n 1) m))]))\n",
    "  (cond\n    [(= n 0) 1]\n    [(= m 0) 0]\n    [else\n     (+ (* n (eulerian_num (- n 1) m))\n        (* (- m 1) (eulerian_num (- n 1) (- m 1))))]))\n",
    "  (cond\n    [(= n 0) 1]\n    [(= n m) 1]\n    [else\n     (+ (* n (eulerian_num (- n 1) (- m 1)))\n        (* (- m 1) (eulerian_num (- n 1) m)))]))\n",
    "  (cond\n    [(= n 0) 1]\n    [(= n m) 1]\n    [else\n     (+ (* n (eulerian_num (- n 1) (- m 1)))\n        (* (- m 1) (eulerian_num (- n 1) m)))]))\n",
    "  (cond\n    [(= n m) 1]\n    [(= n 0) 0]\n    [else (+ (* n (eulerian_num (- n 1) m))\n             (eulerian_num (- n 1) (- m 1)))]))\n",
    "  (cond ((or (= n 0) (= m 0)) 1)\n        ((= n m) 1)\n        ((= n 1) m)\n        ((= m 1) n)\n        (else (+ (eulerian_num (- n 1) m)\n                 (eulerian_num n (- m 1))))))\n",
    "  (cond\n    [(= n 0) 1]\n    [(= n m) 1]\n    [else\n     (+ (eulerian_num (- n 1) (- m 1))\n        (eulerian_num (- n 1) m))]))\n",
    "  (cond\n    [(= n 0) 1]\n    [(= m 0) 0]\n    [else\n     (+ (* m (eulerian_num (- n 1) m))\n        (* (- n 1) (eulerian_num (- n 1) (- m 1))))]))\n",
    "  (cond\n    [(= n 0) 1]\n    [(= m 0) 0]\n    [else (+ (* n (eulerian_num (- n 1) m))\n             (* (- m 1) (eulerian_num (- n 1) (- m 1))))]))\n",
    "  (cond\n    [(= n 0) 1]\n    [(= n m) 1]\n    [else\n     (+ (* n (eulerian_num (- n 1) (- m 1)))\n        (* (- m 1) (eulerian_num (- n 1) m)))]))\n",
    "  (cond\n    [(= n m) 1]\n    [(= n 0) 0]\n    [else (+ (eulerian_num (- n 1) m)\n             (* m (eulerian_num (- n 1) (- m 1))))]))\n",
    "  (cond\n    [(= n m) 1]\n    [(= n 0) 0]\n    [else\n     (+ (* n (eulerian_num (- n 1) m))\n        (* (- m 1) (eulerian_num (- n 1) (- m 1))))]))\n",
    "  (cond\n    [(= n 0) 1]\n    [(= m 0) 0]\n    [(= n m) 1]\n    [else\n     (+ (eulerian_num (- n 1) (- m 1))\n        (eulerian_num (- n 1) m))]))\n",
    "  (cond\n    [(= n 0) 1]\n    [(= n m) 1]\n    [else (+ (eulerian_num (- n 1) (- m 1))\n             (eulerian_num (- n 1) m))]))\n",
    "  (cond\n    [(= n m) 1]\n    [(= n 0) 0]\n    [else (+ (* n (eulerian_num (- n 1) m))\n             (eulerian_num (- n 1) (- m 1)))]))\n",
    "  (cond\n    [(= n m) 1]\n    [(= n 0) 0]\n    [(= m 0) 0]\n    [else (+ (* m (eulerian_num (- n 1) (- m 1)))\n             (eulerian_num (- n 1) m))]))\n",
    "  (cond\n    [(= n 0) 1]\n    [(= n m) 1]\n    [else (+ (* n (eulerian_num (- n 1) (- m 1)))\n             (* (- m 1) (eulerian_num (- n 1) (- m 2))))]))\n",
    "  (cond\n    [(= n m) 1]\n    [(= n 0) 0]\n    [else (+ (eulerian_num (- n 1) m)\n             (* m (eulerian_num (- n 1) (- m 1))))]))\n",
    "  (cond\n    [(= n 0) 1]\n    [(= n m) 1]\n    [else (+ (* n (eulerian_num (- n 1) (- m 1)))\n             (* (- m 1) (eulerian_num (- n 1) m)))]))\n",
    "  (cond ((or (= n 0) (= m 0)) 1)\n        ((= n m) (eulerian_num n (- m 1)))\n        (else (+ (eulerian_num (- n 1) m)\n                 (eulerian_num (- n 1) (- m 1))))))\n",
    "  (cond\n    [(= n m) 1]\n    [(= n 0) 0]\n    [else (+ (* n (eulerian_num (- n 1) m))\n             (eulerian_num (- n 1) (- m 1)))]))\n",
    "  (cond\n    [(= n 0) 1]\n    [(= m 0) 0]\n    [else (+ (* n (eulerian_num (- n 1) m))\n             (* (- m 1) (eulerian_num (- n 1) (- m 1))))]))\n",
    "  (cond\n    [(= n m) 1]\n    [(= n 0) 0]\n    [else\n     (+ (eulerian_num (- n 1) m)\n        (* m (eulerian_num (- n 1) (- m 1))))]))\n",
    "  (cond\n    [(= n 0) 1]\n    [(= m 0) 0]\n    [else (+ (* n (eulerian_num (- n 1) m))\n             (* (- m 1) (eulerian_num (- n 1) (- m 1))))]))\n",
    "  (if (= n m)\n      1\n      (+ (eulerian_num (- n 1) m)\n         (* m (eulerian_num (- n 1) (- m 1))))))\n",
    "  (cond\n    [(= n 0) 1]\n    [(= n 1) 1]\n    [(= m 0) 0]\n    [(= m 1) 1]\n    [(= m n) 1]\n    [else (+ (* m (eulerian_num (- n 1) (- m 1)))\n             (eulerian_num (- n 1) m))]))\n",
    "  (cond\n    [(= n m) 1]\n    [(= n 0) 0]\n    [else\n     (+ (eulerian_num (- n 1) m)\n        (* n (eulerian_num (- n 1) (- m 1))))]))\n",
    "  (if (or (= n 0) (= m 0))\n      1\n      (+ (* n (eulerian_num (- n 1) m))\n         (* (- m 1) (eulerian_num (- n 1) (- m 1))))))\n",
    "  (cond ((or (= n 0) (= m 0)) 1)\n        ((= n m) 1)\n        ((= n 1) m)\n        ((= m 1) n)\n        (else (+ (eulerian_num (- n 1) m)\n                 (eulerian_num n (- m 1))))))\n",
    "  (cond\n    [(= n m) 1]\n    [(= n 0) 0]\n    [(= m 0) 0]\n    [else (+ (* m (eulerian_num (- n 1) m))\n             (* (- n 1) (eulerian_num (- n 1) (- m 1))))]))\n",
    "  (cond\n    [(= m 0) 1]\n    [(= m n) 1]\n    [else (+ (eulerian_num (- n 1) (- m 1))\n             (eulerian_num (- n 1) m))]))\n",
    "  (cond ((= n m) 1)\n        ((= n 0) 0)\n        ((= m 0) 0)\n        (else (+ (eulerian_num (- n 1) m)\n                 (* m (eulerian_num (- n 1) (- m 1)))))))\n",
    "  (cond\n    [(= n m) 1]\n    [(= m 0) 0]\n    [else (+ (eulerian_num (- n 1) m)\n             (* m (eulerian_num (- n 1) (- m 1))))]))\n",
    "  (cond\n    [(= n m) 1]\n    [(= n 1) 1]\n    [(= m 1) 1]\n    [else (+ (eulerian_num (- n 1) m)\n             (eulerian_num (- n 1) (- m 1)))]))\n",
    "  (cond\n    [(= n 0) 1]\n    [(= n m) 1]\n    [else (+ (* n (eulerian_num (- n 1) (- m 1)))\n             (* (- m 1) (eulerian_num (- n 1) m)))]))\n",
    "  (cond\n    [(= n m) 1]\n    [(= n 0) 0]\n    [else (+ (* n (eulerian_num (- n 1) m))\n             (eulerian_num (- n 1) (- m 1)))]))\n",
    "  (cond ((or (= n 0) (= m 0)) 1)\n        ((= n m) (eulerian_num (- n 1) (- m 1)))\n        (else (+ (eulerian_num (- n 1) m)\n                 (eulerian_num (- n 1) (- m 1))))))\n"
  ]
}
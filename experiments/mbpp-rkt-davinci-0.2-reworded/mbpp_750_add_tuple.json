{
  "name": "mbpp_750_add_tuple",
  "language": "rkt",
  "prompt": "#lang racket\n\n;; Write a function to add the given list to the given list.\n(define (add_tuple test_list test_tup)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_750_add_tuple.py",
  "prompt_terminology": "reworded",
  "tests": "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate add_tuple))\n    (check-equal? (candidate (list 5 6 7) (list 9 10)) (list 5 6 7 9 10))\n    (check-equal? (candidate (list 6 7 8) (list 10 11)) (list 6 7 8 10 11))\n    (check-equal? (candidate (list 7 8 9) (list 11 12)) (list 7 8 9 11 12))\n))\n\n(test-humaneval)",
  "stop_tokens": [
    "\n(define ",
    "\n#|",
    "\n;",
    "\n("
  ],
  "completions": [
    "  (cond\n    [(empty? test_list) test_tup]\n    [else (cons (car test_list) (add_tuple (cdr test_list) test_tup))]))\n",
    "  (cond\n    [(empty? test_list) test_tup]\n    [else (cons (add_tuple (first test_list) test_tup)\n                (add_tuple (rest test_list) test_tup))]))\n",
    "  (cond\n    [(empty? test_list) test_tup]\n    [(empty? test_tup) test_list]\n    [else (cons (cons (car test_list) (car test_tup))\n                (add_tuple (cdr test_list) (cdr test_tup)))]))\n",
    "  (if (null? test_list)\n      test_tup\n      (cons (cons (car test_list) test_tup)\n            (add_tuple (cdr test_list) test_tup))))\n",
    "  (cond\n    [(empty? test_list) test_tup]\n    [else (cons (car test_list) (add_tuple (cdr test_list) test_tup))]))\n",
    "  (cond\n    [(empty? test_list) test_tup]\n    [(empty? test_tup) test_list]\n    [else (cons (car test_list) (add_tuple (cdr test_list) test_tup))]))\n",
    "  (map (lambda (x) (+ x (car test_tup))) test_list))\n",
    "  (map (lambda (x) (+ x (car test_tup))) test_list))\n",
    "  (cond\n    [(empty? test_list) test_tup]\n    [else (cons (car test_list) (add_tuple (cdr test_list) test_tup))]))\n",
    "  (cond\n    [(empty? test_list) (cons test_tup empty)]\n    [(empty? test_tup) test_list]\n    [else (cons (cons (first test_list) (first test_tup))\n                (add_tuple (rest test_list) (rest test_tup)))]))\n",
    "  (cond [(empty? test_list) empty]\n        [else (cons (add_tuple (rest test_list) test_tup)\n                    (add (first test_list) (first test_tup)))]))\n",
    "  (cond\n    [(empty? test_list) test_tup]\n    [(empty? test_tup) test_list]\n    [else (cons (car test_list) (add_tuple (cdr test_list) test_tup))]))\n",
    "  (map (lambda (x) (+ x (car test_tup))) test_list))\n",
    "  (cond\n    [(empty? test_list) test_tup]\n    [else (cons (car test_list) (add_tuple (cdr test_list) test_tup))]))\n",
    "  (cond\n    [(empty? test_list) test_tup]\n    [else (cons (car test_list) (add_tuple (cdr test_list) test_tup))]))\n",
    "  (cond\n    [(empty? test_list) test_tup]\n    [else (cons (car test_list) (add_tuple (cdr test_list) test_tup))]))\n",
    "  (cond\n    [(null? test_list) test_tup]\n    [else (cons (car test_list) (add_tuple (cdr test_list) test_tup))]))\n",
    "  (map (lambda (x) (+ x (car test_tup))) test_list))\n",
    "  (cond\n    [(empty? test_list) test_tup]\n    [else (cons (car test_list) (add_tuple (cdr test_list) test_tup))]))\n",
    "  (cond\n    [(empty? test_list) test_tup]\n    [else (cons (car test_list) (add_tuple (cdr test_list) test_tup))]))\n",
    "  (cond\n    [(empty? test_list) test_tup]\n    [else (cons (car test_list) (add_tuple (cdr test_list) test_tup))]))\n",
    "  (cond\n    [(empty? test_list) test_tup]\n    [else (cons (car test_list) (add_tuple (cdr test_list) test_tup))]))\n",
    "  (map (lambda (x) (+ x (car test_tup))) test_list))\n",
    "  (cond\n    [(empty? test_list) test_tup]\n    [else (cons (car test_list) (add_tuple (cdr test_list) test_tup))]))\n",
    "  (map (lambda (x) (+ x (car test_tup))) test_list))\n",
    "  (map (lambda (x) (+ x (car test_tup))) test_list))\n",
    "  (cond\n    [(empty? test_list) test_tup]\n    [else (cons (car test_list) (add_tuple (cdr test_list) test_tup))]))\n",
    "  (cond\n    [(empty? test_list) test_tup]\n    [else (cons (car test_list) (add_tuple (cdr test_list) test_tup))]))\n",
    "  (cond\n    [(empty? test_list) test_tup]\n    [else (cons (car test_list) (add_tuple (cdr test_list) test_tup))]))\n",
    "  (cond\n    [(empty? test_list) test_tup]\n    [(empty? test_tup) test_list]\n    [else (cons (cons (car test_list) (car test_tup))\n                (add_tuple (cdr test_list) (cdr test_tup)))]))\n",
    "  (map (lambda (x) (+ x (car test_tup))) test_list))\n",
    "  (map (lambda (x) (+ x (car test_tup))) test_list))\n",
    "  (map (lambda (x) (+ x (car test_tup))) test_list))\n",
    "  (map (lambda (x) (+ x (car test_tup))) test_list))\n",
    "  (cond\n    [(empty? test_list) test_tup]\n    [(empty? test_tup) test_list]\n    [else (cons (car test_list) (add_tuple (cdr test_list) test_tup))]))\n",
    "  (append test_list test_tup))\n",
    "  (map (lambda (x) (+ x (car test_tup))) test_list))\n",
    "  (cond\n    [(empty? test_list) (cons test_tup empty)]\n    [(equal? (first test_list) test_tup) test_list]\n    [else (cons (first test_list) (add_tuple (rest test_list) test_tup))]))\n",
    "  (append test_list test_tup))\n",
    "  (map (lambda (x) (+ x (car test_tup))) test_list))\n",
    "  (cons test_tup test_list))\n",
    "  (append test_list test_tup))\n",
    "  (map (lambda (x) (cons x test_tup)) test_list))\n",
    "  (map (lambda (x) (cons x test_tup)) test_list))\n",
    "  (append test_list test_tup))\n",
    "  (cond\n    [(empty? test_list) test_tup]\n    [(empty? test_tup) test_list]\n    [else (cons (car test_list) (add_tuple (cdr test_list) test_tup))]))\n",
    "  (cond\n    [(empty? test_list) test_tup]\n    [(empty? test_tup) test_list]\n    [else (cons (cons (car test_list) (car test_tup))\n                (add_tuple (cdr test_list) (cdr test_tup)))]))\n",
    "  (cond\n    [(null? test_list) test_tup]\n    [else (cons (car test_list) (add_tuple (cdr test_list) test_tup))]))\n",
    "  (if (null? test_list)\n      test_tup\n      (cons (cons (car test_list) (car test_tup))\n            (add_tuple (cdr test_list) (cdr test_tup)))))\n",
    "  (map (lambda (x) (cons x test_tup)) test_list))\n",
    "  (map (lambda (x) (+ x (car test_tup))) test_list))\n",
    "  (cond\n    [(empty? test_list) test_tup]\n    [(empty? test_tup) test_list]\n    [else (cons (cons (car test_list) (car test_tup))\n                (add_tuple (cdr test_list) (cdr test_tup)))]))\n",
    "  (cond\n    [(empty? test_list) test_tup]\n    [else (cons (car test_list) (add_tuple (cdr test_list) test_tup))]))\n",
    "  (cond\n    [(empty? test_list) (cons test_tup empty)]\n    [(cons? test_list) (cons test_tup test_list)]))\n",
    "  (cond\n    [(null? test_list) test_tup]\n    [(null? test_tup) test_list]\n    [else (cons (car test_list) (add_tuple (cdr test_list) test_tup))]))\n",
    "  (if (null? test_list)\n      test_tup\n      (cons (car test_list) (add_tuple (cdr test_list) test_tup))))\n",
    "  (map (lambda (x) (+ x (car test_tup))) test_list))\n",
    "  (cond\n    [(empty? test_list) empty]\n    [else (cons (cons (car test_list) test_tup)\n                (add_tuple (cdr test_list) test_tup))]))\n",
    "  (cond\n    [(empty? test_list) test_tup]\n    [else (cons (car test_list) (add_tuple (cdr test_list) test_tup))]))\n",
    "  (cond\n    [(empty? test_list) test_tup]\n    [(empty? test_tup) test_list]\n    [else (cons (cons (car test_list) (car test_tup))\n                (add_tuple (cdr test_list) (cdr test_tup)))]))\n",
    "  (cond\n    [(empty? test_list) test_tup]\n    [else (cons (car test_list) (add_tuple (cdr test_list) test_tup))]))\n",
    "  (map (lambda (x) (cons x test_tup)) test_list))\n",
    "  (append test_list test_tup))\n",
    "  (cond\n    [(empty? test_list) test_tup]\n    [else (cons (car test_list) (add_tuple (cdr test_list) test_tup))]))\n",
    "  (cond\n    [(empty? test_list) test_tup]\n    [(empty? test_tup) test_list]\n    [else (cons (add1 (car test_list) (car test_tup))\n                (add_tuple (cdr test_list) (cdr test_tup)))]))\n",
    "  (cond\n    [(empty? test_list) test_tup]\n    [else (cons (car test_list) (add_tuple (cdr test_list) test_tup))]))\n",
    "  (map (lambda (x) (+ x (car test_tup))) test_list))\n",
    "  (cond\n    [(empty? test_list) test_tup]\n    [else (cons (cons (car test_list) (car test_tup))\n                (add_tuple (cdr test_list) (cdr test_tup)))]))\n",
    "  (map (lambda (x) (+ x (car test_tup))) test_list))\n",
    "  (cond\n    [(empty? test_list) test_tup]\n    [else (cons (cons (car test_list) test_tup)\n                (add_tuple (cdr test_list) test_tup))]))\n",
    "  (cond\n    [(empty? test_list) test_tup]\n    [(empty? test_tup) test_list]\n    [else (cons (car test_list) (add_tuple (cdr test_list) test_tup))]))\n",
    "  (cond\n    [(empty? test_list) test_tup]\n    [else (cons (car test_list) (add_tuple (cdr test_list) test_tup))]))\n",
    "  (cond\n    [(empty? test_list) test_tup]\n    [else (cons (car test_list) (add_tuple (cdr test_list) test_tup))]))\n",
    "  (append test_list test_tup))\n",
    "  (map (lambda (x) (+ x (car test_tup))) test_list))\n",
    "  (cond\n    [(empty? test_list) empty]\n    [(empty? test_tup) test_list]\n    [else (cons (cons (first test_list) (first test_tup))\n                (add_tuple (rest test_list) (rest test_tup)))]))\n",
    "  (append test_list test_tup))\n",
    "  (cond\n    [(empty? test_list) (cons test_tup empty)]\n    [else (cons test_tup test_list)]))\n",
    "  (map (lambda (x) (+ x (car test_tup))) test_list))\n",
    "  (map (lambda (x) (+ x (car test_tup))) test_list))\n",
    "  (cond\n    [(empty? test_list) test_tup]\n    [(empty? test_tup) test_list]\n    [else (cons (cons (car test_list) (car test_tup))\n                (add_tuple (cdr test_list) (cdr test_tup)))]))\n",
    "  (cond\n    [(empty? test_list) test_tup]\n    [(empty? test_tup) test_list]\n    [else (cons (car test_list) (add_tuple (cdr test_list) test_tup))]))\n",
    "  (append test_list test_tup))\n",
    "  (map (lambda (x) (+ x (car test_tup))) test_list))\n",
    "  (map (lambda (x) (+ x (car test_tup))) test_list))\n",
    "  (cond\n    [(empty? test_list) test_tup]\n    [else (cons (first test_list) (add_tuple (rest test_list) test_tup))]))\n",
    "  (if (null? test_list)\n      test_tup\n      (cons (car test_list) (add_tuple (cdr test_list) test_tup))))\n",
    "  (map (lambda (x) (+ x (car test_tup))) test_list))\n",
    "  (append test_list test_tup))\n",
    "  (append test_list test_tup))\n",
    "  (cond\n    [(empty? test_list) test_tup]\n    [else (cons (car test_list) (add_tuple (cdr test_list) test_tup))]))\n",
    "  (map (lambda (x) (+ x (car test_tup))) test_list))\n",
    "  (map (lambda (x) (+ x (car test_tup))) test_list))\n",
    "  (cond\n    [(empty? test_list) test_tup]\n    [else (cons (car test_list) (add_tuple (cdr test_list) test_tup))]))\n",
    "  (cond\n    [(empty? test_list) test_tup]\n    [(empty? test_tup) test_list]\n    [else (cons (car test_list) (add_tuple (cdr test_list) test_tup))]))\n",
    "  (cond\n    [(empty? test_list) test_tup]\n    [(empty? test_tup) test_list]\n    [else (cons (cons (first test_list) (first test_tup))\n                (add_tuple (rest test_list) (rest test_tup)))]))\n",
    "  (append test_list test_tup))\n",
    "  (cond\n    [(empty? test_list) test_tup]\n    [else (cons (car test_list) (add_tuple (cdr test_list) test_tup))]))\n",
    "  (map (lambda (x) (+ x (car test_tup))) test_list))\n",
    "  (append test_list test_tup))\n",
    "  (cond\n    [(empty? test_list) test_tup]\n    [(empty? test_tup) test_list]\n    [else (cons (car test_list) (add_tuple (cdr test_list) test_tup))]))\n",
    "  (cond\n    [(empty? test_list) test_tup]\n    [else (cons (car test_list) (add_tuple (cdr test_list) test_tup))]))\n",
    "  (cond\n    [(empty? test_list) test_tup]\n    [(empty? test_tup) test_list]\n    [else (cons (cons (car test_list) (car test_tup))\n                (add_tuple (cdr test_list) (cdr test_tup)))]))\n",
    "  (cond\n    [(empty? test_list) test_tup]\n    [(empty? test_tup) test_list]\n    [else (cons (car test_list) (add_tuple (cdr test_list) test_tup))]))\n",
    "  (cond\n    [(empty? test_list) test_tup]\n    [else (cons (first test_list) (add_tuple (rest test_list) test_tup))]))\n",
    "  (map (lambda (x) (+ x (car test_tup))) test_list))\n",
    "  (if (null? test_tup)\n      test_list\n      (add_tuple (cons (car test_tup) test_list) (cdr test_tup))))\n",
    "  (cond\n    [(empty? test_list) test_tup]\n    [(cons? test_list) (cons (add_tuple (car test_list) test_tup)\n                             (add_tuple (cdr test_list) test_tup))]\n    [else (add_tuple (cdr test_list) test_tup)]))\n",
    "  (if (null? test_tup)\n      test_list\n      (add_tuple (append test_list (list (car test_tup))) (cdr test_tup))))\n",
    "  (cond\n    [(empty? test_list) test_tup]\n    [else (cons (car test_list) (add_tuple (cdr test_list) test_tup))]))\n",
    "  (map (lambda (x) (+ x (car test_tup))) test_list))\n",
    "  (map (lambda (x) (+ x (car test_tup))) test_list))\n",
    "  (append test_list test_tup))\n",
    "  (append test_list test_tup))\n",
    "  (map (lambda (x) (+ x (car test_tup))) test_list))\n",
    "  (map (lambda (x) (+ x (car test_tup))) test_list))\n",
    "  (cond\n    [(empty? test_list) test_tup]\n    [(empty? test_tup) test_list]\n    [else (cons (cons (car test_list) (car test_tup))\n                (add_tuple (cdr test_list) (cdr test_tup)))]))\n",
    "  (append test_list (list test_tup)))\n",
    "  (map (lambda (x) (+ x (car test_tup))) test_list))\n",
    "  (cond\n    [(empty? test_list) test_tup]\n    [else (cons (car test_list) (add_tuple (cdr test_list) test_tup))]))\n",
    "  (map (lambda (x) (+ x (car test_tup))) test_list))\n",
    "  (map (lambda (x) (cons x test_tup)) test_list))\n",
    "  (map (lambda (x) (+ x (car test_tup))) test_list))\n",
    "  (append test_list test_tup))\n",
    "  (map (lambda (x) (+ x (car test_tup))) test_list))\n",
    "  (cond\n    [(empty? test_list) (cons test_tup empty)]\n    [else (cons test_tup test_list)]))\n",
    "  (cond\n    [(empty? test_list) test_tup]\n    [else (cons (car test_list) (add_tuple (cdr test_list) test_tup))]))\n",
    "  (map (lambda (x) (+ x (car test_tup))) test_list))\n",
    "  (cond\n    [(empty? test_list) test_tup]\n    [else (cons (car test_list) (add_tuple (cdr test_list) test_tup))]))\n",
    "  (if (null? test_tup)\n      test_list\n      (cons (car test_tup) (add_tuple test_list (cdr test_tup)))))\n",
    "  (map (lambda (x) (+ x (car test_tup))) test_list))\n",
    "  (cond\n    [(empty? test_list) test_tup]\n    [else (cons (car test_list) (add_tuple (cdr test_list) test_tup))]))\n",
    "  (map (lambda (x) (cons x test_tup)) test_list))\n",
    "  (map (lambda (x) (+ x (car test_tup))) test_list))\n",
    "  (map (lambda (x) (+ x (car test_tup))) test_list))\n",
    "  (if (null? test_list)\n      test_tup\n      (cons (car test_list) (add_tuple (cdr test_list) test_tup))))\n",
    "  (cond [(empty? test_list) test_tup]\n        [else (cons (car test_list) (add_tuple (cdr test_list) test_tup))]))\n",
    "  (cond\n    [(empty? test_list) test_tup]\n    [else (cons (car test_list) (add_tuple (cdr test_list) test_tup))]))\n",
    "  (cond\n    [(empty? test_list) test_tup]\n    [(empty? test_tup) test_list]\n    [else (cons (car test_list) (add_tuple (cdr test_list) test_tup))]))\n",
    "  (map (lambda (x) (+ x (car test_tup))) test_list))\n",
    "  (cond\n    [(empty? test_list) test_tup]\n    [else (cons (car test_list) (add_tuple (cdr test_list) test_tup))]))\n",
    "  (cond\n    [(empty? test_list) test_tup]\n    [else (cons (car test_list) (add_tuple (cdr test_list) test_tup))]))\n",
    "  (map (lambda (x) (+ x (car test_tup))) test_list))\n",
    "  (cond\n    [(empty? test_list) test_tup]\n    [else (cons (car test_list) (add_tuple (cdr test_list) test_tup))]))\n",
    "  (append test_list test_tup))\n",
    "  (if (null? test_tup)\n      test_list\n      (cons (car test_tup) (add_tuple test_list (cdr test_tup)))))\n",
    "  (map (lambda (x) (+ x (car test_tup))) test_list))\n",
    "  (cond\n    [(empty? test_list) test_tup]\n    [(empty? test_tup) test_list]\n    [else (cons (cons (car test_list) (car test_tup))\n                (add_tuple (cdr test_list) (cdr test_tup)))]))\n",
    "  (cond\n    [(empty? test_list) test_tup]\n    [else (cons (car test_list) (add_tuple (cdr test_list) test_tup))]))\n",
    "  (map (lambda (x) (+ x (car test_tup))) test_list))\n",
    "  (cond\n    [(empty? test_list) test_tup]\n    [else (cons (car test_list) (add_tuple (cdr test_list) test_tup))]))\n",
    "  (cond\n    [(empty? test_list) test_tup]\n    [else (cons (car test_list) (add_tuple (cdr test_list) test_tup))]))\n",
    "  (map (lambda (x) (+ x (car test_tup))) test_list))\n",
    "  (map (lambda (x) (+ x (car test_tup))) test_list))\n",
    "  (append test_list test_tup))\n",
    "  (map (lambda (x) (+ x (car test_tup))) test_list))\n",
    "  (cond [(empty? test_list) test_tup]\n        [else (cons (car test_list) (add_tuple (cdr test_list) test_tup))]))\n",
    "  (cond\n    [(empty? test_list) test_tup]\n    [else (cons (car test_list) (add_tuple (cdr test_list) test_tup))]))\n",
    "  (map (lambda (x) (+ x (car test_tup))) test_list))\n",
    "  (cond\n    [(empty? test_list) test_tup]\n    [else (cons (car test_list) (add_tuple (cdr test_list) test_tup))]))\n",
    "  (cond\n    [(empty? test_list) test_tup]\n    [(empty? test_tup) test_list]\n    [else (cons (cons (car test_list) (car test_tup))\n                (add_tuple (cdr test_list) (cdr test_tup)))]))\n",
    "  (cond\n    [(empty? test_list) test_tup]\n    [else (cons (car test_list) (add_tuple (cdr test_list) test_tup))]))\n",
    "  (map (lambda (x) (+ x (car test_tup))) test_list))\n",
    "  (cond\n    [(empty? test_list) test_tup]\n    [(empty? test_tup) test_list]\n    [else (cons (car test_list) (add_tuple (cdr test_list) test_tup))]))\n",
    "  (map (lambda (x) (+ x (car test_tup))) test_list))\n",
    "  (cond\n    [(empty? test_list) test_tup]\n    [else (cons (car test_list) (add_tuple (cdr test_list) test_tup))]))\n",
    "  (map (lambda (x) (+ x (car test_tup))) test_list))\n",
    "  (if (null? test_list)\n      test_tup\n      (cons (car test_list) (add_tuple (cdr test_list) test_tup))))\n",
    "  (map (lambda (x) (cons x test_tup)) test_list))\n",
    "  (append test_list test_tup))\n",
    "  (map (lambda (x) (+ x (car test_tup))) test_list))\n",
    "  (cond\n    [(empty? test_list) test_tup]\n    [else (cons (car test_list) (add_tuple (cdr test_list) test_tup))]))\n",
    "  (cond\n    [(empty? test_list) test_tup]\n    [else (cons (car test_list) (add_tuple (cdr test_list) test_tup))]))\n",
    "  (cond\n    [(empty? test_list) test_tup]\n    [else (cons (car test_list) (add_tuple (cdr test_list) test_tup))]))\n",
    "  (map (lambda (x) (+ x (car test_tup))) test_list))\n",
    "  (map (lambda (x) (+ x (car test_tup))) test_list))\n",
    "  (map (lambda (x) (+ x (car test_tup))) test_list))\n",
    "  (if (null? test_tup)\n      test_list\n      (cons (car test_tup) (add_tuple test_list (cdr test_tup)))))\n",
    "  (map (lambda (x) (+ x (car test_tup))) test_list))\n",
    "  (map (lambda (x) (cons x test_tup)) test_list))\n",
    "  (map (lambda (x) (+ x (car test_tup))) test_list))\n",
    "  (cond\n    [(empty? test_list) test_tup]\n    [else (cons (add_tuple (first test_list) test_tup)\n                (add_tuple (rest test_list) test_tup))]))\n",
    "  (cond\n    [(empty? test_list) (list test_tup)]\n    [(empty? test_tup) test_list]\n    [else (cons (cons (car test_tup) (car test_list))\n                (add_tuple (cdr test_list) (cdr test_tup)))]))\n",
    "  (cond\n    [(empty? test_list) test_tup]\n    [(empty? test_tup) test_list]\n    [else (cons (car test_list) (add_tuple (cdr test_list) test_tup))]))\n",
    "  (append test_list test_tup))\n",
    "  (map (lambda (x) (+ x (car test_tup))) test_list))\n",
    "  (map (lambda (x) (+ x (car test_tup))) test_list))\n",
    "  (map (lambda (x) (+ x (car test_tup))) test_list))\n",
    "  (cond\n    [(empty? test_list) (list test_tup)]\n    [(equal? (first test_list) test_tup) test_list]\n    [else (cons test_tup test_list)]))\n",
    "  (cond\n    [(empty? test_list) test_tup]\n    [else (cons (first test_list) (add_tuple (rest test_list) test_tup))]))\n",
    "  (append test_list test_tup))\n",
    "  (cons (car test_tup) (cons (car (cdr test_tup)) test_list)))\n",
    "  (map (lambda (x) (+ x (car test_tup))) test_list))\n",
    "  (map (lambda (x) (cons x test_tup)) test_list))\n",
    "  (cond\n    [(empty? test_list) test_tup]\n    [(empty? test_tup) test_list]\n    [else (cons (car test_list) (add_tuple (cdr test_list) test_tup))]))\n",
    "  (cond\n    [(empty? test_list) test_tup]\n    [else (cons (car test_list) (add_tuple (cdr test_list) test_tup))]))\n",
    "  (cond\n    [(empty? test_list) (cons test_tup empty)]\n    [else (cons test_tup test_list)]))\n",
    "  (append test_list test_tup))\n",
    "  (append test_list test_tup))\n",
    "  (cond\n    [(empty? test_list) test_tup]\n    [else (cons (car test_list) (add_tuple (cdr test_list) test_tup))]))\n"
  ]
}
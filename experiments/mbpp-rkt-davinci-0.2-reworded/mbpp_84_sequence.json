{
  "name": "mbpp_84_sequence",
  "language": "rkt",
  "prompt": "#lang racket\n\n;; Write a function to find the nth number in the newman conway sequence.\n(define (sequence n)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_84_sequence.py",
  "prompt_terminology": "reworded",
  "tests": "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sequence))\n    (check-equal? (candidate 10) 6)\n    (check-equal? (candidate 2) 1)\n    (check-equal? (candidate 3) 2)\n))\n\n(test-humaneval)",
  "stop_tokens": [
    "\n(define ",
    "\n#|",
    "\n;",
    "\n("
  ],
  "completions": [
    "  (if (= n 1)\n      1\n      (if (= n 2)\n          1\n          (+ (sequence (- n 1)) (sequence (- n 2))))))\n",
    "  (cond\n    [(= n 1) 1]\n    [(= n 2) 1]\n    [else (+ (sequence (- n 1)) (sequence (- n 2)))]))\n",
    "  (cond\n    [(= n 1) 1]\n    [(= n 2) 1]\n    [else (+ (sequence (- n 1)) (sequence (- n 2)))]))\n",
    "  (cond\n    [(= n 1) 1]\n    [(= n 2) 1]\n    [else (+ (sequence (- n 1)) (sequence (- n 2)))]))\n",
    "  (cond\n    [(= n 1) 1]\n    [(= n 2) 1]\n    [else (+ (sequence (- n 1)) (sequence (- n 2)))]))\n",
    "  (cond\n    [(= n 1) 1]\n    [(= n 2) 1]\n    [else (+ (sequence (- n 1)) (sequence (- n 2)))]))\n",
    "  (cond\n    [(= n 1) 1]\n    [(= n 2) 1]\n    [else (+ (sequence (- n 1)) (sequence (- n 2)))]))\n",
    "  (cond\n    [(= n 1) 1]\n    [(= n 2) 1]\n    [else (+ (sequence (- n 1)) (sequence (- n 2)))]))\n",
    "  (if (= n 1)\n      1\n      (if (= n 2)\n          1\n          (+ (sequence (- n 1)) (sequence (- n 2))))))\n",
    "  (cond\n    [(= n 1) 1]\n    [(= n 2) 1]\n    [else (+ (sequence (- n 1)) (sequence (- n 2)))]))\n",
    "  (cond\n    [(= n 1) 1]\n    [(= n 2) 1]\n    [else (+ (sequence (- n 1)) (sequence (- n 2)))]))\n",
    "  (cond\n    [(= n 1) 1]\n    [(= n 2) 1]\n    [else (+ (sequence (- n 1)) (sequence (- n 2)))]))\n",
    "  (cond\n    [(= n 1) 1]\n    [(= n 2) 1]\n    [else (+ (sequence (- n 1)) (sequence (- n 2)))]))\n",
    "  (if (= n 1)\n      1\n      (if (= n 2)\n          1\n          (+ (sequence (- n 1)) (sequence (- n 2))))))\n",
    "  (if (= n 1)\n      1\n      (if (= n 2)\n          1\n          (+ (sequence (- n 1)) (sequence (- n 2))))))\n",
    "  (cond\n    [(= n 1) 1]\n    [(= n 2) 1]\n    [else (+ (sequence (- n 1)) (sequence (- n 2)))]))\n",
    "  (cond\n    [(= n 1) 1]\n    [(= n 2) 1]\n    [else (+ (sequence (- n 1)) (sequence (- n 2)))]))\n",
    "  (if (= n 1)\n      1\n      (if (= n 2)\n          1\n          (+ (sequence (- n 1)) (sequence (- n 2))))))\n",
    "  (cond\n    [(= n 1) 1]\n    [(= n 2) 1]\n    [else (+ (sequence (- n 1)) (sequence (- n 2)))]))\n",
    "  (cond\n    [(= n 1) 1]\n    [(= n 2) 1]\n    [else (+ (sequence (- n 1)) (sequence (- n 2)))]))\n"
  ]
}
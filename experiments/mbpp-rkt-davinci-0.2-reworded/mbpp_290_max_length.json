{
  "name": "mbpp_290_max_length",
  "language": "rkt",
  "prompt": "#lang racket\n\n;; Write a function to find the list of maximum length in a list of lists.\n(define (max_length list1)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_290_max_length.py",
  "prompt_terminology": "reworded",
  "tests": "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_length))\n    (check-equal? (candidate (list (list 0) (list 1 3) (list 5 7) (list 9 11) (list 13 15 17))) (list 3 (list 13 15 17)))\n    (check-equal? (candidate (list (list 1) (list 5 7) (list 10 12 14 15))) (list 4 (list 10 12 14 15)))\n    (check-equal? (candidate (list (list 5) (list 15 20 25))) (list 3 (list 15 20 25)))\n))\n\n(test-humaneval)",
  "stop_tokens": [
    "\n(define ",
    "\n#|",
    "\n;",
    "\n("
  ],
  "completions": [
    "  (apply max (map length list1)))\n",
    "  (apply max (map length list1)))\n",
    "  (apply max (map length list1)))\n",
    "  (apply max (map length list1)))\n",
    "  (cond\n    [(empty? list1) empty]\n    [else\n     (let*\n         ([max_length (length (first list1))]\n          [max_list (first list1)])\n       (for/fold ([max_length max_length]\n                  [max_list max_list])\n         ([list2 (in-list (rest list1))])\n         (let*\n             ([length2 (length list2)])\n           (cond\n             [(> length2 max_length)\n              (values length2 list2)]\n             [else\n              (values max_length max_list)]))))]))\n",
    "  (apply max (map length list1)))\n",
    "  (apply max (map length list1)))\n",
    "  (apply max (map length list1)))\n",
    "  (apply max (map length list1)))\n",
    "  (apply max (map length list1)))\n",
    "  (apply max (map length list1)))\n",
    "  (apply max (map length list1)))\n",
    "  (apply max (map length list1)))\n",
    "  (cond\n    [(empty? list1) empty]\n    [(empty? (rest list1)) (first list1)]\n    [else (if (> (length (first list1)) (length (max_length (rest list1))))\n             (first list1)\n             (max_length (rest list1)))]))\n",
    "  (apply max (map length list1)))\n",
    "  (cond ((null? list1) 0)\n        ((null? (cdr list1)) (length (car list1)))\n        (else (max (length (car list1)) (max_length (cdr list1))))))\n",
    "  (apply max (map length list1)))\n",
    "  (apply max (map length list1)))\n",
    "  (apply max (map length list1)))\n",
    "  (apply max (map length list1)))\n"
  ]
}
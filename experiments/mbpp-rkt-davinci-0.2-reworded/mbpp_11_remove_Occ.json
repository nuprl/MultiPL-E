{
  "name": "mbpp_11_remove_Occ",
  "language": "rkt",
  "prompt": "#lang racket\n\n;; Write a rktthon function to remove first and last occurrence of a given character from the string.\n(define (remove_Occ s ch)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_11_remove_Occ.py",
  "prompt_terminology": "reworded",
  "tests": "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_Occ))\n    (check-equal? (candidate \"hello\" \"l\") \"heo\")\n    (check-equal? (candidate \"abcda\" \"a\") \"bcd\")\n    (check-equal? (candidate \"PHP\" \"P\") \"H\")\n))\n\n(test-humaneval)",
  "stop_tokens": [
    "\n(define ",
    "\n#|",
    "\n;",
    "\n("
  ],
  "completions": [
    "  (string-replace (string-replace s ch \"\") ch \"\"))\n",
    "  (string-replace (string-replace s ch \"\") ch \"\"))\n",
    "  (string-replace s (string ch) \"\"))\n",
    "  (string-replace s ch \"\"))\n",
    "  (if (string=? s \"\")\n      \"\"\n      (if (string=? (substring s 0 1) ch)\n          (remove_Occ (substring s 1 (string-length s)) ch)\n          (string-append (substring s 0 1) (remove_Occ (substring s 1 (string-length s)) ch)))))\n",
    "  (string-replace s ch \"\"))\n",
    "  (string-replace (string-replace s ch \"\") ch \"\"))\n",
    "  (string-replace s ch \"\"))\n",
    "  (string-replace (string-replace s ch \"\") ch \"\"))\n",
    "  (cond\n    [(empty? s) empty]\n    [(equal? (first s) ch) (remove_Occ (rest s) ch)]\n    [else (cons (first s) (remove_Occ (rest s) ch))]))\n",
    "  (string-replace (string-replace s ch \"\") ch \"\"))\n",
    "  (string-replace (string-replace s ch \"\") ch \"\"))\n",
    "  (string-replace (string-replace s ch \"\") ch \"\"))\n",
    "  (string-append (substring s 0 (string-index s ch))\n                 (substring s (+ 1 (string-index s ch)) (string-length s))))\n",
    "  (string-append (substring s 0 (string-index s ch))\n                 (substring s (+ 1 (string-index s ch)) (string-length s))))\n",
    "  (string-replace s (string ch) \"\"))\n",
    "  (string-append (substring s 0 (string-index s ch))\n                 (substring s (+ 1 (string-index s ch)) (string-length s))))\n",
    "  (string-append (substring s 0 (string-index s ch))\n                 (substring s (+ 1 (string-index s ch)) (string-length s))))\n",
    "  (string-append (substring s 0 (string-index s ch))\n                 (substring s (+ (string-index s ch) 1) (string-length s))))\n",
    "  (string-replace (string-replace s ch \"\") ch \"\"))\n"
  ]
}
{
  "name": "mbpp_143_find_lists",
  "language": "rkt",
  "prompt": "#lang racket\n\n;; Write a function to find number of lists present in the given list.\n(define (find_lists Input)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_143_find_lists.py",
  "prompt_terminology": "reworded",
  "tests": "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate find_lists))\n    (check-equal? (candidate (list (list 1 2 3 4) (list 5 6 7 8))) 2)\n    (check-equal? (candidate (list (list 1 2) (list 3 4) (list 5 6))) 3)\n    (check-equal? (candidate (list 9 8 7 6 5 4 3 2 1)) 1)\n))\n\n(test-humaneval)",
  "stop_tokens": [
    "\n(define ",
    "\n#|",
    "\n;",
    "\n("
  ],
  "completions": [
    "  (cond\n    [(empty? Input) 0]\n    [(list? (first Input)) (+ 1 (find_lists (rest Input)))]\n    [else (find_lists (rest Input))]))\n",
    "  (cond\n    [(empty? Input) 0]\n    [(list? (first Input)) (+ 1 (find_lists (rest Input)))]\n    [else (find_lists (rest Input))]))\n",
    "  (cond\n    [(null? Input) 0]\n    [(list? (car Input)) (+ 1 (find_lists (cdr Input)))]\n    [else (find_lists (cdr Input))]))\n",
    "  (cond\n    [(null? Input) 0]\n    [(list? (car Input)) (+ 1 (find_lists (cdr Input)))]\n    [else (find_lists (cdr Input))]))\n",
    "  (cond\n    [(null? Input) 0]\n    [(list? (car Input)) (+ 1 (find_lists (cdr Input)))]\n    [else (find_lists (cdr Input))]))\n",
    "  (cond\n    [(null? Input) 0]\n    [(list? (car Input)) (+ 1 (find_lists (cdr Input)))]\n    [else (find_lists (cdr Input))]))\n",
    "  (cond\n    [(null? Input) 0]\n    [(list? (car Input)) (+ 1 (find_lists (cdr Input)))]\n    [else (find_lists (cdr Input))]))\n",
    "  (cond\n    [(null? Input) 0]\n    [(list? (car Input)) (+ 1 (find_lists (cdr Input)))]\n    [else (find_lists (cdr Input))]))\n",
    "  (cond\n    [(null? Input) 0]\n    [(list? (car Input)) (+ 1 (find_lists (cdr Input)))]\n    [else (find_lists (cdr Input))]))\n",
    "  (cond\n    [(null? Input) 0]\n    [(list? (car Input)) (+ 1 (find_lists (cdr Input)))]\n    [else (find_lists (cdr Input))]))\n",
    "  (cond\n    [(empty? Input) 0]\n    [(list? (first Input)) (+ 1 (find_lists (rest Input)))]\n    [else (find_lists (rest Input))]))\n",
    "  (cond\n    [(null? Input) 0]\n    [(list? (car Input)) (+ 1 (find_lists (cdr Input)))]\n    [else (find_lists (cdr Input))]))\n",
    "  (cond\n    [(null? Input) 0]\n    [(list? (car Input)) (+ 1 (find_lists (cdr Input)))]\n    [else (find_lists (cdr Input))]))\n",
    "  (cond\n    [(null? Input) 0]\n    [(list? (car Input)) (+ 1 (find_lists (cdr Input)))]\n    [else (find_lists (cdr Input))]))\n",
    "  (cond\n    [(empty? Input) 0]\n    [(list? (first Input)) (+ 1 (find_lists (rest Input)))]\n    [else (find_lists (rest Input))]))\n",
    "  (cond\n    [(null? Input) 0]\n    [(list? (car Input)) (+ 1 (find_lists (cdr Input)))]\n    [else (find_lists (cdr Input))]))\n",
    "  (cond\n    [(empty? Input) 0]\n    [(list? (first Input)) (+ 1 (find_lists (rest Input)))]\n    [else (find_lists (rest Input))]))\n",
    "  (cond\n    [(null? Input) 0]\n    [(list? (car Input)) (+ 1 (find_lists (cdr Input)))]\n    [else (find_lists (cdr Input))]))\n",
    "  (cond\n    [(null? Input) 0]\n    [(list? (car Input)) (+ 1 (find_lists (cdr Input)))]\n    [else (find_lists (cdr Input))]))\n",
    "  (cond\n    [(empty? Input) 0]\n    [(list? (first Input)) (+ 1 (find_lists (rest Input)))]\n    [else (find_lists (rest Input))]))\n",
    "  (cond\n    [(null? Input) 0]\n    [(list? (car Input)) (+ 1 (find_lists (cdr Input)))]\n    [else (find_lists (cdr Input))]))\n",
    "  (if (null? Input)\n      0\n      (if (list? (car Input))\n          (+ 1 (find_lists (cdr Input)))\n          (find_lists (cdr Input)))))\n",
    "  (cond [(empty? Input) 0]\n        [else\n         (+ (if (list? (first Input)) 1 0)\n            (find_lists (rest Input)))]))\n",
    "  (cond\n    [(empty? Input) 0]\n    [(list? (first Input)) (+ 1 (find_lists (rest Input)))]\n    [else (find_lists (rest Input))]))\n",
    "  (cond\n    [(null? Input) 0]\n    [(list? (car Input)) (+ 1 (find_lists (cdr Input)))]\n    [else (find_lists (cdr Input))]))\n",
    "  (cond\n    [(null? Input) 0]\n    [(list? (car Input)) (+ 1 (find_lists (cdr Input)))]\n    [else (find_lists (cdr Input))]))\n",
    "  (cond\n    [(empty? Input) 0]\n    [(list? (first Input)) (+ 1 (find_lists (rest Input)))]\n    [else (find_lists (rest Input))]))\n",
    "  (cond\n    [(null? Input) 0]\n    [(list? (car Input)) (+ 1 (find_lists (cdr Input)))]\n    [else (find_lists (cdr Input))]))\n",
    "  (cond\n    [(empty? Input) 0]\n    [(list? (first Input)) (+ 1 (find_lists (rest Input)))]\n    [else (find_lists (rest Input))]))\n",
    "  (cond\n    [(empty? Input) 0]\n    [(list? (first Input)) (+ 1 (find_lists (rest Input)))]\n    [else (find_lists (rest Input))]))\n",
    "  (cond\n    [(null? Input) 0]\n    [(list? (car Input)) (+ 1 (find_lists (cdr Input)))]\n    [else (find_lists (cdr Input))]))\n",
    "  (cond\n    [(empty? Input) 0]\n    [(list? (first Input)) (+ 1 (find_lists (rest Input)))]\n    [else (find_lists (rest Input))]))\n",
    "  (cond\n    [(empty? Input) 0]\n    [(list? (first Input)) (+ 1 (find_lists (rest Input)))]\n    [else (find_lists (rest Input))]))\n",
    "  (cond\n    [(null? Input) 0]\n    [(list? (car Input)) (+ 1 (find_lists (cdr Input)))]\n    [else (find_lists (cdr Input))]))\n",
    "  (cond\n    [(null? Input) 0]\n    [(list? (car Input)) (+ 1 (find_lists (cdr Input)))]\n    [else (find_lists (cdr Input))]))\n",
    "  (cond\n    [(empty? Input) 0]\n    [(list? (first Input)) (+ 1 (find_lists (rest Input)))]\n    [else (find_lists (rest Input))]))\n",
    "  (cond\n    [(null? Input) 0]\n    [(list? (car Input)) (+ 1 (find_lists (cdr Input)))]\n    [else (find_lists (cdr Input))]))\n",
    "  (cond\n    [(empty? Input) 0]\n    [(list? (first Input)) (+ 1 (find_lists (rest Input)))]\n    [else (find_lists (rest Input))]))\n",
    "  (cond\n    [(null? Input) 0]\n    [(list? (car Input)) (+ 1 (find_lists (cdr Input)))]\n    [else (find_lists (cdr Input))]))\n",
    "  (cond\n    [(empty? Input) 0]\n    [(list? (first Input)) (+ 1 (find_lists (rest Input)))]\n    [else (find_lists (rest Input))]))\n",
    "  (cond\n    [(null? Input) 0]\n    [(list? (car Input)) (+ 1 (find_lists (cdr Input)))]\n    [else (find_lists (cdr Input))]))\n",
    "  (cond\n    [(null? Input) 0]\n    [(list? (car Input)) (+ 1 (find_lists (cdr Input)))]\n    [else (find_lists (cdr Input))]))\n",
    "  (cond\n    [(null? Input) 0]\n    [(list? (car Input)) (+ 1 (find_lists (cdr Input)))]\n    [else (find_lists (cdr Input))]))\n",
    "  (cond\n    [(null? Input) 0]\n    [(list? (car Input)) (+ 1 (find_lists (cdr Input)))]\n    [else (find_lists (cdr Input))]))\n",
    "  (cond\n    [(null? Input) 0]\n    [(list? (car Input)) (+ 1 (find_lists (cdr Input)))]\n    [else (find_lists (cdr Input))]))\n",
    "  (cond\n    [(empty? Input) 0]\n    [(list? (first Input)) (+ 1 (find_lists (rest Input)))]\n    [else (find_lists (rest Input))]))\n",
    "  (cond ((null? Input) 0)\n        ((list? (car Input)) (+ 1 (find_lists (cdr Input))))\n        (else (find_lists (cdr Input)))))\n",
    "  (cond\n    [(null? Input) 0]\n    [(list? (car Input)) (+ 1 (find_lists (cdr Input)))]\n    [else (find_lists (cdr Input))]))\n",
    "  (cond\n    [(empty? Input) 0]\n    [(list? (first Input)) (+ 1 (find_lists (rest Input)))]\n    [else (find_lists (rest Input))]))\n",
    "  (cond\n    [(null? Input) 0]\n    [(list? (car Input)) (+ 1 (find_lists (cdr Input)))]\n    [else (find_lists (cdr Input))]))\n",
    "  (cond\n    [(empty? Input) 0]\n    [(list? (first Input)) (+ 1 (find_lists (rest Input)))]\n    [else (find_lists (rest Input))]))\n",
    "  (cond\n    [(empty? Input) 0]\n    [(list? (first Input)) (+ 1 (find_lists (rest Input)))]\n    [else (find_lists (rest Input))]))\n",
    "  (cond\n    [(null? Input) 0]\n    [(list? (car Input)) (+ 1 (find_lists (cdr Input)))]\n    [else (find_lists (cdr Input))]))\n",
    "  (cond\n    [(empty? Input) 0]\n    [(list? (first Input)) (+ 1 (find_lists (rest Input)))]\n    [else (find_lists (rest Input))]))\n",
    "  (cond\n    [(null? Input) 0]\n    [(list? (car Input)) (+ 1 (find_lists (cdr Input)))]\n    [else (find_lists (cdr Input))]))\n",
    "  (cond\n    [(null? Input) 0]\n    [(list? (car Input)) (+ 1 (find_lists (cdr Input)))]\n    [else (find_lists (cdr Input))]))\n",
    "  (cond\n    [(empty? Input) 0]\n    [(list? (first Input)) (+ 1 (find_lists (rest Input)))]\n    [else (find_lists (rest Input))]))\n",
    "  (cond\n    [(empty? Input) 0]\n    [(list? (first Input)) (+ 1 (find_lists (rest Input)))]\n    [else (find_lists (rest Input))]))\n",
    "  (cond\n    [(null? Input) 0]\n    [(list? (car Input)) (+ 1 (find_lists (cdr Input)))]\n    [else (find_lists (cdr Input))]))\n",
    "  (cond\n    [(null? Input) 0]\n    [(list? (car Input)) (+ 1 (find_lists (cdr Input)))]\n    [else (find_lists (cdr Input))]))\n",
    "  (cond\n    [(empty? Input) 0]\n    [(list? (first Input)) (+ 1 (find_lists (rest Input)))]\n    [else (find_lists (rest Input))]))\n",
    "  (cond\n    [(null? Input) 0]\n    [(list? (car Input)) (+ 1 (find_lists (cdr Input)))]\n    [else (find_lists (cdr Input))]))\n",
    "  (cond\n    [(null? Input) 0]\n    [(list? (car Input)) (+ 1 (find_lists (cdr Input)))]\n    [else (find_lists (cdr Input))]))\n",
    "  (cond\n    [(null? Input) 0]\n    [(list? (car Input)) (+ 1 (find_lists (cdr Input)))]\n    [else (find_lists (cdr Input))]))\n",
    "  (cond\n    [(null? Input) 0]\n    [(list? (car Input)) (+ 1 (find_lists (cdr Input)))]\n    [else (find_lists (cdr Input))]))\n",
    "  (cond\n    [(null? Input) 0]\n    [(list? (car Input)) (+ 1 (find_lists (cdr Input)))]\n    [else (find_lists (cdr Input))]))\n",
    "  (cond\n    [(null? Input) 0]\n    [(list? (car Input)) (+ 1 (find_lists (cdr Input)))]\n    [else (find_lists (cdr Input))]))\n",
    "  (cond\n    [(null? Input) 0]\n    [(list? (car Input)) (+ 1 (find_lists (cdr Input)))]\n    [else (find_lists (cdr Input))]))\n",
    "  (cond\n    [(null? Input) 0]\n    [(list? (car Input)) (+ 1 (find_lists (cdr Input)))]\n    [else (find_lists (cdr Input))]))\n",
    "  (cond\n    [(null? Input) 0]\n    [(list? (car Input)) (+ 1 (find_lists (cdr Input)))]\n    [else (find_lists (cdr Input))]))\n",
    "  (cond\n    [(empty? Input) 0]\n    [(list? (first Input))\n     (+ 1 (find_lists (rest Input)))]\n    [else (find_lists (rest Input))]))\n",
    "  (cond\n    [(null? Input) 0]\n    [(list? (car Input)) (+ 1 (find_lists (cdr Input)))]\n    [else (find_lists (cdr Input))]))\n",
    "  (cond\n    [(null? Input) 0]\n    [(list? (car Input)) (+ 1 (find_lists (cdr Input)))]\n    [else (find_lists (cdr Input))]))\n",
    "  (cond\n    [(null? Input) 0]\n    [(list? (car Input)) (+ 1 (find_lists (cdr Input)))]\n    [else (find_lists (cdr Input))]))\n",
    "  (cond\n    [(null? Input) 0]\n    [(list? (car Input)) (+ 1 (find_lists (cdr Input)))]\n    [else (find_lists (cdr Input))]))\n",
    "  (cond\n    [(null? Input) 0]\n    [(list? (car Input)) (+ 1 (find_lists (cdr Input)))]\n    [else (find_lists (cdr Input))]))\n",
    "  (cond\n    [(null? Input) 0]\n    [(list? (car Input)) (+ 1 (find_lists (cdr Input)))]\n    [else (find_lists (cdr Input))]))\n",
    "  (cond\n    [(null? Input) 0]\n    [(list? (car Input)) (+ 1 (find_lists (cdr Input)))]\n    [else (find_lists (cdr Input))]))\n",
    "  (cond\n    [(empty? Input) 0]\n    [(list? (first Input)) (+ 1 (find_lists (rest Input)))]\n    [else (find_lists (rest Input))]))\n",
    "  (cond\n    [(null? Input) 0]\n    [(list? (car Input)) (+ 1 (find_lists (cdr Input)))]\n    [else (find_lists (cdr Input))]))\n",
    "  (cond\n    [(empty? Input) 0]\n    [(list? (first Input)) (+ 1 (find_lists (rest Input)))]\n    [else (find_lists (rest Input))]))\n",
    "  (cond\n    [(null? Input) 0]\n    [(list? (car Input)) (+ 1 (find_lists (cdr Input)))]\n    [else (find_lists (cdr Input))]))\n",
    "  (cond\n    [(null? Input) 0]\n    [(list? (car Input)) (+ 1 (find_lists (cdr Input)))]\n    [else (find_lists (cdr Input))]))\n",
    "  (cond\n    [(null? Input) 0]\n    [(list? (car Input)) (+ 1 (find_lists (cdr Input)))]\n    [else (find_lists (cdr Input))]))\n",
    "  (cond\n    [(empty? Input) 0]\n    [(list? (first Input)) (+ 1 (find_lists (rest Input)))]\n    [else (find_lists (rest Input))]))\n",
    "  (cond\n    [(null? Input) 0]\n    [(list? (car Input)) (+ 1 (find_lists (cdr Input)))]\n    [else (find_lists (cdr Input))]))\n",
    "  (cond\n    [(null? Input) 0]\n    [(list? (car Input)) (+ 1 (find_lists (cdr Input)))]\n    [else (find_lists (cdr Input))]))\n",
    "  (cond\n    [(null? Input) 0]\n    [(list? (car Input)) (+ 1 (find_lists (cdr Input)))]\n    [else (find_lists (cdr Input))]))\n",
    "  (cond\n    [(null? Input) 0]\n    [(list? (car Input)) (+ 1 (find_lists (cdr Input)))]\n    [else (find_lists (cdr Input))]))\n",
    "  (cond\n    [(null? Input) 0]\n    [(list? (car Input)) (+ 1 (find_lists (cdr Input)))]\n    [else (find_lists (cdr Input))]))\n",
    "  (cond\n    [(empty? Input) 0]\n    [(list? (first Input)) (+ 1 (find_lists (rest Input)))]\n    [else (find_lists (rest Input))]))\n",
    "  (cond\n    [(null? Input) 0]\n    [(list? (car Input)) (+ 1 (find_lists (cdr Input)))]\n    [else (find_lists (cdr Input))]))\n",
    "  (cond\n    [(empty? Input) 0]\n    [(list? (first Input)) (+ 1 (find_lists (rest Input)))]\n    [else (find_lists (rest Input))]))\n",
    "  (cond\n    [(null? Input) 0]\n    [(list? (car Input)) (+ 1 (find_lists (cdr Input)))]\n    [else (find_lists (cdr Input))]))\n",
    "  (cond\n    [(null? Input) 0]\n    [(list? (car Input)) (+ 1 (find_lists (cdr Input)))]\n    [else (find_lists (cdr Input))]))\n",
    "  (cond\n    [(null? Input) 0]\n    [(list? (car Input)) (+ 1 (find_lists (cdr Input)))]\n    [else (find_lists (cdr Input))]))\n",
    "  (cond\n    [(null? Input) 0]\n    [(list? (car Input)) (+ 1 (find_lists (cdr Input)))]\n    [else (find_lists (cdr Input))]))\n",
    "  (cond\n    [(null? Input) 0]\n    [(list? (car Input)) (+ 1 (find_lists (cdr Input)))]\n    [else (find_lists (cdr Input))]))\n",
    "  (cond\n    [(empty? Input) 0]\n    [(list? (first Input)) (+ 1 (find_lists (rest Input)))]\n    [else (find_lists (rest Input))]))\n",
    "  (cond\n    [(null? Input) 0]\n    [(list? (car Input)) (+ 1 (find_lists (cdr Input)))]\n    [else (find_lists (cdr Input))]))\n",
    "  (cond\n    [(empty? Input) 0]\n    [(list? (first Input)) (+ 1 (find_lists (rest Input)))]\n    [else (find_lists (rest Input))]))\n",
    "  (cond\n    [(null? Input) 0]\n    [(list? (car Input)) (+ 1 (find_lists (cdr Input)))]\n    [else (find_lists (cdr Input))]))\n",
    "  (cond\n    [(empty? Input) 0]\n    [(list? (first Input)) (+ 1 (find_lists (rest Input)))]\n    [else (find_lists (rest Input))]))\n",
    "  (cond\n    [(null? Input) 0]\n    [(list? (car Input)) (+ 1 (find_lists (cdr Input)))]\n    [else (find_lists (cdr Input))]))\n",
    "  (cond\n    [(empty? Input) 0]\n    [(list? (first Input)) (+ 1 (find_lists (rest Input)))]\n    [else (find_lists (rest Input))]))\n",
    "  (cond\n    [(null? Input) 0]\n    [(list? (car Input)) (+ 1 (find_lists (cdr Input)))]\n    [else (find_lists (cdr Input))]))\n",
    "  (cond\n    [(null? Input) 0]\n    [(list? (car Input)) (+ 1 (find_lists (cdr Input)))]\n    [else (find_lists (cdr Input))]))\n",
    "  (cond\n    [(null? Input) 0]\n    [(list? (car Input)) (+ 1 (find_lists (cdr Input)))]\n    [else (find_lists (cdr Input))]))\n",
    "  (cond\n    [(null? Input) 0]\n    [(list? (car Input)) (+ 1 (find_lists (cdr Input)))]\n    [else (find_lists (cdr Input))]))\n",
    "  (cond\n    [(null? Input) 0]\n    [(list? (car Input)) (+ 1 (find_lists (cdr Input)))]\n    [else (find_lists (cdr Input))]))\n",
    "  (cond\n    [(null? Input) 0]\n    [(list? (car Input)) (+ 1 (find_lists (cdr Input)))]\n    [else (find_lists (cdr Input))]))\n",
    "  (cond\n    [(null? Input) 0]\n    [(list? (car Input)) (+ 1 (find_lists (cdr Input)))]\n    [else (find_lists (cdr Input))]))\n",
    "  (cond\n    [(null? Input) 0]\n    [(list? (car Input)) (+ 1 (find_lists (cdr Input)))]\n    [else (find_lists (cdr Input))]))\n",
    "  (cond\n    [(null? Input) 0]\n    [(list? (car Input)) (+ 1 (find_lists (cdr Input)))]\n    [else (find_lists (cdr Input))]))\n",
    "  (cond\n    [(null? Input) 0]\n    [(list? (car Input)) (+ 1 (find_lists (cdr Input)))]\n    [else (find_lists (cdr Input))]))\n",
    "  (cond\n    [(null? Input) 0]\n    [(list? (car Input)) (+ 1 (find_lists (cdr Input)))]\n    [else (find_lists (cdr Input))]))\n",
    "  (cond\n    [(null? Input) 0]\n    [(list? (car Input)) (+ 1 (find_lists (cdr Input)))]\n    [else (find_lists (cdr Input))]))\n",
    "  (cond\n    [(null? Input) 0]\n    [(list? (car Input)) (+ 1 (find_lists (cdr Input)))]\n    [else (find_lists (cdr Input))]))\n",
    "  (cond\n    [(null? Input) 0]\n    [(list? (car Input)) (+ 1 (find_lists (cdr Input)))]\n    [else (find_lists (cdr Input))]))\n",
    "  (cond\n    [(null? Input) 0]\n    [(list? (car Input)) (+ 1 (find_lists (cdr Input)))]\n    [else (find_lists (cdr Input))]))\n",
    "  (cond\n    [(null? Input) 0]\n    [(list? (car Input)) (+ 1 (find_lists (cdr Input)))]\n    [else (find_lists (cdr Input))]))\n",
    "  (cond\n    [(empty? Input) 0]\n    [(list? (first Input)) (+ 1 (find_lists (rest Input)))]\n    [else (find_lists (rest Input))]))\n",
    "  (cond\n    [(null? Input) 0]\n    [(list? (car Input)) (+ 1 (find_lists (cdr Input)))]\n    [else (find_lists (cdr Input))]))\n",
    "  (cond\n    [(empty? Input) 0]\n    [(list? (first Input)) (+ 1 (find_lists (rest Input)))]\n    [else (find_lists (rest Input))]))\n",
    "  (cond\n    [(null? Input) 0]\n    [(list? (car Input)) (+ 1 (find_lists (cdr Input)))]\n    [else (find_lists (cdr Input))]))\n",
    "  (cond\n    [(null? Input) 0]\n    [(list? (car Input)) (+ 1 (find_lists (cdr Input)))]\n    [else (find_lists (cdr Input))]))\n",
    "  (cond\n    [(empty? Input) 0]\n    [(list? (first Input)) (+ 1 (find_lists (rest Input)))]\n    [else (find_lists (rest Input))]))\n",
    "  (cond\n    [(null? Input) 0]\n    [(list? (car Input)) (+ 1 (find_lists (cdr Input)))]\n    [else (find_lists (cdr Input))]))\n",
    "  (if (null? Input)\n      0\n      (if (list? (car Input))\n          (+ 1 (find_lists (cdr Input)))\n          (find_lists (cdr Input)))))\n",
    "  (cond\n    [(null? Input) 0]\n    [(list? (car Input)) (+ 1 (find_lists (cdr Input)))]\n    [else (find_lists (cdr Input))]))\n",
    "  (cond\n    [(null? Input) 0]\n    [(list? (car Input)) (+ 1 (find_lists (cdr Input)))]\n    [else (find_lists (cdr Input))]))\n",
    "  (cond\n    [(empty? Input) 0]\n    [(list? (first Input)) (+ 1 (find_lists (rest Input)))]\n    [else (find_lists (rest Input))]))\n",
    "  (cond\n    [(null? Input) 0]\n    [(list? (car Input)) (+ 1 (find_lists (cdr Input)))]\n    [else (find_lists (cdr Input))]))\n",
    "  (cond\n    [(null? Input) 0]\n    [(list? (car Input)) (+ 1 (find_lists (cdr Input)))]\n    [else (find_lists (cdr Input))]))\n",
    "  (cond\n    [(null? Input) 0]\n    [(list? (car Input)) (+ 1 (find_lists (cdr Input)))]\n    [else (find_lists (cdr Input))]))\n",
    "  (cond\n    [(null? Input) 0]\n    [(list? (car Input)) (+ 1 (find_lists (cdr Input)))]\n    [else (find_lists (cdr Input))]))\n",
    "  (cond\n    [(null? Input) 0]\n    [(list? (car Input)) (+ 1 (find_lists (cdr Input)))]\n    [else (find_lists (cdr Input))]))\n",
    "  (cond\n    [(null? Input) 0]\n    [(list? (car Input)) (+ 1 (find_lists (cdr Input)))]\n    [else (find_lists (cdr Input))]))\n",
    "  (cond\n    [(empty? Input) 0]\n    [(list? (first Input)) (+ 1 (find_lists (rest Input)))]\n    [else (find_lists (rest Input))]))\n",
    "  (cond\n    [(null? Input) 0]\n    [(list? (car Input)) (+ 1 (find_lists (cdr Input)))]\n    [else (find_lists (cdr Input))]))\n",
    "  (cond\n    [(null? Input) 0]\n    [(list? (car Input)) (+ 1 (find_lists (cdr Input)))]\n    [else (find_lists (cdr Input))]))\n",
    "  (cond\n    [(null? Input) 0]\n    [(list? (car Input)) (+ 1 (find_lists (cdr Input)))]\n    [else (find_lists (cdr Input))]))\n",
    "  (cond\n    [(null? Input) 0]\n    [(list? (car Input)) (+ 1 (find_lists (cdr Input)))]\n    [else (find_lists (cdr Input))]))\n",
    "  (cond\n    [(empty? Input) 0]\n    [(list? (first Input)) (+ 1 (find_lists (rest Input)))]\n    [else (find_lists (rest Input))]))\n",
    "  (cond\n    [(null? Input) 0]\n    [(list? (car Input)) (+ 1 (find_lists (cdr Input)))]\n    [else (find_lists (cdr Input))]))\n",
    "  (cond\n    [(null? Input) 0]\n    [(list? (car Input)) (+ 1 (find_lists (cdr Input)))]\n    [else (find_lists (cdr Input))]))\n",
    "  (cond\n    [(null? Input) 0]\n    [(list? (car Input)) (+ 1 (find_lists (cdr Input)))]\n    [else (find_lists (cdr Input))]))\n",
    "  (cond\n    [(null? Input) 0]\n    [(list? (car Input)) (+ 1 (find_lists (cdr Input)))]\n    [else (find_lists (cdr Input))]))\n",
    "  (cond\n    [(empty? Input) 0]\n    [(list? (first Input)) (+ 1 (find_lists (rest Input)))]\n    [else (find_lists (rest Input))]))\n",
    "  (cond\n    [(null? Input) 0]\n    [(list? (car Input)) (+ 1 (find_lists (cdr Input)))]\n    [else (find_lists (cdr Input))]))\n",
    "  (cond\n    [(empty? Input) 0]\n    [(list? (first Input)) (+ 1 (find_lists (rest Input)))]\n    [else (find_lists (rest Input))]))\n",
    "  (cond\n    [(empty? Input) 0]\n    [(list? (first Input)) (+ 1 (find_lists (rest Input)))]\n    [else (find_lists (rest Input))]))\n",
    "  (cond\n    [(null? Input) 0]\n    [else\n     (cond\n       [(list? (car Input)) (+ 1 (find_lists (cdr Input)))]\n       [else (find_lists (cdr Input))])]))\n",
    "  (cond\n    [(null? Input) 0]\n    [(list? (car Input)) (+ 1 (find_lists (cdr Input)))]\n    [else (find_lists (cdr Input))]))\n",
    "  (cond\n    [(empty? Input) 0]\n    [(list? (first Input)) (+ 1 (find_lists (rest Input)))]\n    [else (find_lists (rest Input))]))\n",
    "  (cond\n    [(null? Input) 0]\n    [(list? (car Input)) (+ 1 (find_lists (cdr Input)))]\n    [else (find_lists (cdr Input))]))\n",
    "  (cond\n    [(null? Input) 0]\n    [(list? (car Input)) (+ 1 (find_lists (cdr Input)))]\n    [else (find_lists (cdr Input))]))\n",
    "  (cond\n    [(empty? Input) 0]\n    [(list? (first Input)) (+ 1 (find_lists (rest Input)))]\n    [else (find_lists (rest Input))]))\n",
    "  (cond\n    [(null? Input) 0]\n    [(list? (car Input))\n     (+ 1 (find_lists (cdr Input)))]\n    [else (find_lists (cdr Input))]))\n",
    "  (cond\n    [(empty? Input) 0]\n    [(list? (first Input)) (+ 1 (find_lists (rest Input)))]\n    [else (find_lists (rest Input))]))\n",
    "  (cond ((null? Input) 0)\n        ((list? (car Input)) (+ 1 (find_lists (cdr Input))))\n        (else (find_lists (cdr Input)))))\n",
    "  (cond\n    [(null? Input) 0]\n    [(list? (car Input)) (+ 1 (find_lists (cdr Input)))]\n    [else (find_lists (cdr Input))]))\n",
    "  (cond\n    [(null? Input) 0]\n    [(list? (car Input)) (+ 1 (find_lists (cdr Input)))]\n    [else (find_lists (cdr Input))]))\n",
    "  (cond\n    [(null? Input) 0]\n    [(list? (car Input)) (+ 1 (find_lists (cdr Input)))]\n    [else (find_lists (cdr Input))]))\n",
    "  (cond\n    [(null? Input) 0]\n    [(list? (car Input)) (+ 1 (find_lists (cdr Input)))]\n    [else (find_lists (cdr Input))]))\n",
    "  (cond\n    [(empty? Input) 0]\n    [(list? (first Input)) (+ 1 (find_lists (rest Input)))]\n    [else (find_lists (rest Input))]))\n",
    "  (cond\n    [(null? Input) 0]\n    [(list? (car Input)) (+ 1 (find_lists (cdr Input)))]\n    [else (find_lists (cdr Input))]))\n",
    "  (cond\n    [(null? Input) 0]\n    [(list? (car Input)) (+ 1 (find_lists (cdr Input)))]\n    [else (find_lists (cdr Input))]))\n",
    "  (cond\n    [(null? Input) 0]\n    [(list? (car Input)) (+ 1 (find_lists (cdr Input)))]\n    [else (find_lists (cdr Input))]))\n",
    "  (cond\n    [(null? Input) 0]\n    [(list? (car Input)) (+ 1 (find_lists (cdr Input)))]\n    [else (find_lists (cdr Input))]))\n",
    "  (cond\n    [(empty? Input) 0]\n    [(list? (first Input)) (+ 1 (find_lists (rest Input)))]\n    [else (find_lists (rest Input))]))\n",
    "  (cond\n    [(empty? Input) 0]\n    [(list? (first Input)) (+ 1 (find_lists (rest Input)))]\n    [else (find_lists (rest Input))]))\n",
    "  (cond\n    [(empty? Input) 0]\n    [(list? (first Input))\n     (+ 1 (find_lists (rest Input)))]\n    [else (find_lists (rest Input))]))\n",
    "  (cond\n    [(null? Input) 0]\n    [(list? (car Input)) (+ 1 (find_lists (cdr Input)))]\n    [else (find_lists (cdr Input))]))\n",
    "  (cond\n    [(null? Input) 0]\n    [(list? (car Input)) (+ 1 (find_lists (cdr Input)))]\n    [else (find_lists (cdr Input))]))\n",
    "  (cond\n    [(empty? Input) 0]\n    [(list? (first Input)) (+ 1 (find_lists (rest Input)))]\n    [else (find_lists (rest Input))]))\n",
    "  (cond\n    [(empty? Input) 0]\n    [(list? (first Input)) (+ 1 (find_lists (rest Input)))]\n    [else (find_lists (rest Input))]))\n",
    "  (cond\n    [(null? Input) 0]\n    [(list? (car Input)) (+ 1 (find_lists (cdr Input)))]\n    [else (find_lists (cdr Input))]))\n",
    "  (cond\n    [(null? Input) 0]\n    [(list? (car Input)) (+ 1 (find_lists (cdr Input)))]\n    [else (find_lists (cdr Input))]))\n",
    "  (cond\n    [(null? Input) 0]\n    [(list? (car Input)) (+ 1 (find_lists (cdr Input)))]\n    [else (find_lists (cdr Input))]))\n",
    "  (cond\n    [(empty? Input) 0]\n    [(list? (first Input)) (+ 1 (find_lists (rest Input)))]\n    [else (find_lists (rest Input))]))\n",
    "  (cond\n    [(null? Input) 0]\n    [(list? (car Input)) (+ 1 (find_lists (cdr Input)))]\n    [else (find_lists (cdr Input))]))\n",
    "  (cond\n    [(null? Input) 0]\n    [(list? (car Input)) (+ 1 (find_lists (cdr Input)))]\n    [else (find_lists (cdr Input))]))\n",
    "  (cond\n    [(null? Input) 0]\n    [(list? (car Input)) (+ 1 (find_lists (cdr Input)))]\n    [else (find_lists (cdr Input))]))\n",
    "  (cond\n    [(null? Input) 0]\n    [(list? (car Input)) (+ 1 (find_lists (cdr Input)))]\n    [else (find_lists (cdr Input))]))\n",
    "  (cond\n    [(empty? Input) 0]\n    [(list? (first Input)) (+ 1 (find_lists (rest Input)))]\n    [else (find_lists (rest Input))]))\n",
    "  (cond\n    [(empty? Input) 0]\n    [(list? (first Input))\n     (+ 1 (find_lists (rest Input)))]\n    [else (find_lists (rest Input))]))\n",
    "  (cond\n    [(empty? Input) 0]\n    [(list? (first Input)) (+ 1 (find_lists (rest Input)))]\n    [else (find_lists (rest Input))]))\n",
    "  (cond\n    [(null? Input) 0]\n    [(list? (car Input)) (+ 1 (find_lists (cdr Input)))]\n    [else (find_lists (cdr Input))]))\n",
    "  (cond\n    [(empty? Input) 0]\n    [(list? (first Input)) (+ 1 (find_lists (rest Input)))]\n    [else (find_lists (rest Input))]))\n",
    "  (cond ((null? Input) 0)\n        ((list? (car Input)) (+ 1 (find_lists (cdr Input))))\n        (else (find_lists (cdr Input)))))\n",
    "  (cond\n    [(empty? Input) 0]\n    [(list? (first Input)) (+ 1 (find_lists (rest Input)))]\n    [else (find_lists (rest Input))]))\n",
    "  (cond\n    [(null? Input) 0]\n    [(list? (car Input)) (+ 1 (find_lists (cdr Input)))]\n    [else (find_lists (cdr Input))]))\n",
    "  (cond\n    [(null? Input) 0]\n    [(list? (car Input)) (+ 1 (find_lists (cdr Input)))]\n    [else (find_lists (cdr Input))]))\n",
    "  (cond\n    [(null? Input) 0]\n    [(list? (car Input)) (+ 1 (find_lists (cdr Input)))]\n    [else (find_lists (cdr Input))]))\n",
    "  (cond\n    [(null? Input) 0]\n    [(list? (car Input)) (+ 1 (find_lists (cdr Input)))]\n    [else (find_lists (cdr Input))]))\n",
    "  (cond\n    [(null? Input) 0]\n    [(list? (car Input)) (+ 1 (find_lists (cdr Input)))]\n    [else (find_lists (cdr Input))]))\n",
    "  (cond\n    [(null? Input) 0]\n    [(list? (car Input)) (+ 1 (find_lists (cdr Input)))]\n    [else (find_lists (cdr Input))]))\n",
    "  (cond [(null? Input) 0]\n        [(list? (car Input)) (+ 1 (find_lists (cdr Input)))]\n        [else (find_lists (cdr Input))]))\n",
    "  (cond\n    [(null? Input) 0]\n    [(list? (car Input)) (+ 1 (find_lists (cdr Input)))]\n    [else (find_lists (cdr Input))]))\n"
  ]
}
{
  "name": "mbpp_393_max_length_list",
  "language": "rkt",
  "prompt": "#lang racket\n\n;; Write a function to find the list with maximum length.\n(define (max_length_list input_list)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_393_max_length_list.py",
  "prompt_terminology": "reworded",
  "tests": "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_length_list))\n    (check-equal? (candidate (list (list 0) (list 1 3) (list 5 7) (list 9 11) (list 13 15 17))) (list 3 (list 13 15 17)))\n    (check-equal? (candidate (list (list 1 2 3 4 5) (list 1 2 3 4) (list 1 2 3) (list 1 2) (list 1))) (list 5 (list 1 2 3 4 5)))\n    (check-equal? (candidate (list (list 3 4 5) (list 6 7 8 9) (list 10 11 12))) (list 4 (list 6 7 8 9)))\n))\n\n(test-humaneval)",
  "stop_tokens": [
    "\n(define ",
    "\n#|",
    "\n;",
    "\n("
  ],
  "completions": [
    "  (if (null? input_list)\n      '()\n      (let ((max_list (car input_list)))\n        (for-each (lambda (l)\n                    (if (> (length l) (length max_list))\n                        (set! max_list l)))\n                  input_list)\n        max_list)))\n",
    "  (if (null? input_list)\n      '()\n      (if (null? (cdr input_list))\n          (car input_list)\n          (if (> (length (car input_list)) (length (cadr input_list)))\n              (max_length_list (cons (car input_list) (cddr input_list)))\n              (max_length_list (cdr input_list))))))\n",
    "  (cond\n    [(null? input_list) '()]\n    [(null? (cdr input_list)) (car input_list)]\n    [else\n     (if (> (length (car input_list)) (length (cadr input_list)))\n         (max_length_list (cons (car input_list) (cddr input_list)))\n         (max_length_list (cdr input_list)))]))\n",
    "  (if (null? input_list)\n      '()\n      (let ((max_list (max_length_list (cdr input_list))))\n        (if (&gt; (length (car input_list)) (length max_list))\n            (car input_list)\n            max_list))))\n",
    "  (cond\n    [(null? input_list) '()]\n    [(null? (cdr input_list)) (car input_list)]\n    [else\n     (let ([max_list (max_length_list (cdr input_list))])\n       (if (&gt; (length (car input_list)) (length max_list))\n           (car input_list)\n           max_list))]))\n",
    "  (cond\n    [(null? input_list) '()]\n    [(null? (cdr input_list)) (car input_list)]\n    [else\n     (let* ([max_length_list (max_length_list (cdr input_list))]\n            [max_length (length max_length_list)])\n       (if (> (length (car input_list)) max_length)\n           (car input_list)\n           max_length_list))]))\n",
    "  (cond\n    [(null? input_list) '()]\n    [else\n     (let* ([max_list (max_length_list (cdr input_list))]\n            [max_length (length max_list)])\n       (if (&gt; (length (car input_list)) max_length)\n           (car input_list)\n           max_list))]))\n",
    "  (apply max (map length input_list)))\n",
    "  (cond\n    [(null? input_list) '()]\n    [(null? (cdr input_list)) (car input_list)]\n    [else\n     (let* ([max_length_list (max_length_list (cdr input_list))]\n            [max_length (length max_length_list)])\n       (if (&gt; (length (car input_list)) max_length)\n           (car input_list)\n           max_length_list))]))\n",
    "  (cond\n    [(null? input_list) '()]\n    [(null? (cdr input_list)) (car input_list)]\n    [else\n     (let* ([first (car input_list)]\n            [second (cadr input_list)]\n            [first_length (length first)]\n            [second_length (length second)])\n       (if (&gt; first_length second_length)\n           first\n           second))]))\n",
    "  (cond\n    [(empty? input_list) empty]\n    [(empty? (rest input_list)) (first input_list)]\n    [else\n     (if (> (length (first input_list)) (length (max_length_list (rest input_list))))\n         (first input_list)\n         (max_length_list (rest input_list)))]))\n",
    "  (cond\n    [(empty? input_list) empty]\n    [(empty? (rest input_list)) (first input_list)]\n    [else (if (> (length (first input_list)) (length (max_length_list (rest input_list))))\n              (first input_list)\n              (max_length_list (rest input_list)))]))\n",
    "  (cond\n    [(empty? input_list) empty]\n    [(empty? (rest input_list)) (first input_list)]\n    [else\n     (if (> (length (first input_list))\n            (length (max_length_list (rest input_list))))\n         (first input_list)\n         (max_length_list (rest input_list)))]))\n",
    "  (cond\n    [(null? input_list) '()]\n    [(null? (cdr input_list)) (car input_list)]\n    [else\n     (let* ([max_length_list (max_length_list (cdr input_list))]\n            [max_length (length max_length_list)])\n       (if (&gt; max_length (length (car input_list)))\n           max_length_list\n           (car input_list)))]))\n",
    "  (cond\n    [(null? input_list) '()]\n    [(null? (cdr input_list)) (car input_list)]\n    [else\n     (let ([max_length_list (max_length_list (cdr input_list))])\n       (if (&gt; (length (car input_list)) (length max_length_list))\n           (car input_list)\n           max_length_list))]))\n",
    "  (cond\n    [(null? input_list) '()]\n    [(null? (cdr input_list)) (car input_list)]\n    [else\n     (let* ([max_list (max_length_list (cdr input_list))]\n            [max_len (length max_list)])\n       (if (> (length (car input_list)) max_len)\n           (car input_list)\n           max_list))]))\n",
    "  (cond\n    [(null? input_list) '()]\n    [(null? (cdr input_list)) (car input_list)]\n    [else\n     (let ([max_length_list (max_length_list (cdr input_list))])\n       (if (&gt; (length (car input_list)) (length max_length_list))\n           (car input_list)\n           max_length_list))]))\n",
    "  (cond\n    [(empty? input_list) empty]\n    [(empty? (rest input_list)) (first input_list)]\n    [else (if (> (length (first input_list))\n                 (length (max_length_list (rest input_list))))\n             (first input_list)\n             (max_length_list (rest input_list)))]))\n",
    "  (cond\n    [(null? input_list) '()]\n    [(null? (cdr input_list)) (car input_list)]\n    [else\n     (if (> (length (car input_list)) (length (cadr input_list)))\n         (max_length_list (cons (car input_list) (cddr input_list)))\n         (max_length_list (cdr input_list)))]))\n",
    "  (apply max (map length input_list)))\n"
  ]
}
{
  "name": "mbpp_801_test_three_equal",
  "language": "rkt",
  "prompt": "#lang racket\n\n;; Write a rktthon function to count the number of equal numbers from three given integers.\n(define (test_three_equal x y z)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_801_test_three_equal.py",
  "prompt_terminology": "reworded",
  "tests": "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate test_three_equal))\n    (check-equal? (candidate 1 1 1) 3)\n    (check-equal? (candidate -1 -2 -3) 0)\n    (check-equal? (candidate 1 2 2) 2)\n))\n\n(test-humaneval)",
  "stop_tokens": [
    "\n(define ",
    "\n#|",
    "\n;",
    "\n("
  ],
  "completions": [
    "  (cond\n    [(and (equal? x y) (equal? y z)) 3]\n    [(or (equal? x y) (equal? y z)) 2]\n    [else 0]))\n",
    "  (if (and (= x y) (= x z))\n      1\n      0))\n",
    "  (cond\n    [(and (= x y) (= y z)) 3]\n    [(or (= x y) (= y z) (= x z)) 2]\n    [else 0]))\n",
    "  (cond\n    [(and (= x y) (= x z)) 3]\n    [(or (= x y) (= x z) (= y z)) 2]\n    [else 0]))\n",
    "  (cond\n    [(and (= x y) (= y z)) 3]\n    [(or (= x y) (= y z) (= x z)) 2]\n    [else 0]))\n",
    "  (if (and (equal? x y) (equal? y z))\n      1\n      0))\n",
    "  (cond ((and (= x y) (= y z)) 3)\n        ((or (= x y) (= y z) (= x z)) 2)\n        (else 0)))\n",
    "  (if (and (= x y) (= y z))\n      3\n      (if (or (= x y) (= x z) (= y z))\n          2\n          0)))\n",
    "  (if (and (= x y) (= y z))\n      3\n      (if (or (= x y) (= y z) (= x z))\n          2\n          0)))\n",
    "  (cond ((and (= x y) (= x z)) 3)\n        ((or (= x y) (= x z) (= y z)) 2)\n        (else 0)))\n",
    "  (cond\n    [(and (equal? x y) (equal? y z)) 3]\n    [(or (equal? x y) (equal? y z) (equal? x z)) 2]\n    [else 0]))\n",
    "  (cond\n    [(and (= x y) (= y z)) 3]\n    [(or (= x y) (= y z) (= x z)) 2]\n    [else 0]))\n",
    "  (cond ((and (= x y) (= y z)) 3)\n        ((or (= x y) (= y z) (= x z)) 2)\n        (else 0)))\n",
    "  (cond\n    [(and (= x y) (= y z)) 3]\n    [(or (= x y) (= y z) (= x z)) 2]\n    [else 0]))\n",
    "  (if (and (= x y) (= y z))\n      1\n      0))\n",
    "  (if (and (= x y) (= y z))\n      1\n      0))\n",
    "  (cond\n    [(and (= x y) (= y z)) 3]\n    [(or (= x y) (= y z) (= x z)) 2]\n    [else 0]))\n",
    "  (cond\n    [(and (= x y) (= y z)) 3]\n    [(or (= x y) (= y z) (= x z)) 2]\n    [else 0]))\n",
    "  (cond\n    [(and (= x y) (= y z)) 3]\n    [(or (= x y) (= y z) (= x z)) 2]\n    [else 0]))\n",
    "  (cond\n    [(and (= x y) (= y z)) 3]\n    [(or (= x y) (= y z) (= x z)) 2]\n    [else 0]))\n"
  ]
}
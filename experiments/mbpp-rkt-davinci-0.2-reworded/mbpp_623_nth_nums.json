{
  "name": "mbpp_623_nth_nums",
  "language": "rkt",
  "prompt": "#lang racket\n\n;; Write a function to compute the n-th power of each number in a list.\n(define (nth_nums nums n)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_623_nth_nums.py",
  "prompt_terminology": "reworded",
  "tests": "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate nth_nums))\n    (check-equal? (candidate (list 1 2 3 4 5 6 7 8 9 10) 2) (list 1 4 9 16 25 36 49 64 81 100))\n    (check-equal? (candidate (list 10 20 30) 3) (list 1000 8000 27000))\n    (check-equal? (candidate (list 12 15) 5) (list 248832 759375))\n))\n\n(test-humaneval)",
  "stop_tokens": [
    "\n(define ",
    "\n#|",
    "\n;",
    "\n("
  ],
  "completions": [
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (* x x)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (for/list ([num nums])\n    (expt num n)))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (* x x)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x)\n         (expt x n))\n       nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (* x x)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n",
    "  (map (lambda (x) (expt x n)) nums))\n"
  ]
}
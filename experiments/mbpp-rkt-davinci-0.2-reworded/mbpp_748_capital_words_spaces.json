{
  "name": "mbpp_748_capital_words_spaces",
  "language": "rkt",
  "prompt": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_748_capital_words_spaces.py",
  "prompt_terminology": "reworded",
  "tests": "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
  "stop_tokens": [
    "\n(define ",
    "\n#|",
    "\n;",
    "\n("
  ],
  "completions": [
    "  (regexp-replace* #rx\"[A-Z]\" str1 \" \\\\0\"))\n",
    "  (define (capital_words_spaces_helper str1 str2)\n    (cond ((string-empty? str1) str2)\n          ((char-upper-case? (string-ref str1 0))\n           (capital_words_spaces_helper (substring str1 1) (string-append str2 \" \" (string (string-ref str1 0)))))\n          (else (capital_words_spaces_helper (substring str1 1) (string-append str2 (string (string-ref str1 0)))))))\n  (capital_words_spaces_helper str1 \"\"))\n",
    "  (regexp-replace* #rx\"([A-Z])\" str1 \" \\\\1\"))\n",
    "  (regexp-replace* #rx\"([A-Z])\" str1 \" \\\\1\"))\n",
    "  (regexp-replace* #rx\"[A-Z]\" str1 \" \\\\0\"))\n",
    "  (regexp-replace* #rx\"([A-Z])\" str1 \" \\\\1\"))\n",
    "  (regexp-replace* #rx\"[A-Z]\" str1 \" \\\\0\"))\n",
    "  (define (capital_words_spaces_iter str1 str2)\n    (cond ((null? str1) (string-append str2 \" \"))\n          ((char-upper-case? (car str1)) (capital_words_spaces_iter (cdr str1) (string-append str2 (car str1) \" \")))\n          (else (capital_words_spaces_iter (cdr str1) (string-append str2 (car str1))))))\n  (capital_words_spaces_iter str1 \"\"))\n",
    "  (regexp-replace* #rx\"[A-Z][a-z]+\" str1 \" \\\\0\"))\n",
    "  (regexp-replace* #rx\"[A-Z]\" str1 \" \\\\0\"))\n",
    "  (regexp-replace* #rx\"([A-Z])\" str1 \" \\\\1\"))\n",
    "  (regexp-replace* #rx\"\\\\b[A-Z][a-z]+\" str1 \" \\\\0\"))\n",
    "  (regexp-replace* #rx\"[A-Z]\" str1 \" \\\\0\"))\n",
    "  (regexp-replace* #rx\"[A-Z]\" str1 \" \\\\0\"))\n",
    "  (regexp-replace* #rx\"([A-Z][a-z]*)\" str1 #:replace \" \\\\1\"))\n",
    "  (regexp-replace* #rx\"([A-Z])\" str1 \" \\\\1\"))\n",
    "  (regexp-replace* #rx\"([A-Z])\" str1 \" \\\\1\"))\n",
    "  (regexp-replace* #rx\"([A-Z])\" str1 \" \\\\1\"))\n",
    "  (regexp-replace* #rx\"([A-Z])\" str1 \" \\\\1\"))\n",
    "  (regexp-replace* #rx\"[A-Z][a-z]+\" str1 \" \\\\0\"))\n"
  ]
}
{
  "name": "mbpp_619_move_num",
  "language": "rkt",
  "prompt": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_619_move_num.py",
  "prompt_terminology": "reworded",
  "tests": "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
  "stop_tokens": [
    "\n(define ",
    "\n#|",
    "\n;",
    "\n("
  ],
  "results": [
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (regexp-replace* #rx\"[^0-9]\" test_str \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9a8n_ay9.rkt:12:4\nactual:     \"1143553000\"\nexpected:   \"Iloveyouthreethousand1143553000\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9a8n_ay9.rkt:13:4\nactual:     \"124\"\nexpected:   \"AvengersAssemble124\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9a8n_ay9.rkt:14:4\nactual:     \"11121314151617\"\nexpected:   \"Itsourpathtoseethingsdothings11121314151617\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (string-append (regexp-replace* #rx\"[0-9]\" test_str \"\")\n                 (regexp-replace* #rx\"[^0-9]\" test_str \"\")))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (regexp-replace* #rx\"[0-9]+\" test_str \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:12:4\nactual:     \"Iloveyouthreethousand\"\nexpected:   \"Iloveyouthreethousand1143553000\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:13:4\nactual:     \"AvengersAssemble\"\nexpected:   \"AvengersAssemble124\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:14:4\nactual:     \"Itsourpathtoseethingsdothings\"\nexpected:   \"Itsourpathtoseethingsdothings11121314151617\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (string-append (regexp-replace* #rx\"[0-9]\" test_str \"\")\n                 (regexp-replace* #rx\"[^0-9]\" test_str \"\")))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (regexp-replace* #rx\"[0-9]+\" test_str \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:12:4\nactual:     \"Iloveyouthreethousand\"\nexpected:   \"Iloveyouthreethousand1143553000\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:13:4\nactual:     \"AvengersAssemble\"\nexpected:   \"AvengersAssemble124\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:14:4\nactual:     \"Itsourpathtoseethingsdothings\"\nexpected:   \"Itsourpathtoseethingsdothings11121314151617\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (regexp-replace* #rx\"[0-9]+\" test_str \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:12:4\nactual:     \"Iloveyouthreethousand\"\nexpected:   \"Iloveyouthreethousand1143553000\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:13:4\nactual:     \"AvengersAssemble\"\nexpected:   \"AvengersAssemble124\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:14:4\nactual:     \"Itsourpathtoseethingsdothings\"\nexpected:   \"Itsourpathtoseethingsdothings11121314151617\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (regexp-replace* #rx\"[0-9]\" test_str \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpxdh7t512.rkt:12:4\nactual:     \"Iloveyouthreethousand\"\nexpected:   \"Iloveyouthreethousand1143553000\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpxdh7t512.rkt:13:4\nactual:     \"AvengersAssemble\"\nexpected:   \"AvengersAssemble124\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpxdh7t512.rkt:14:4\nactual:     \"Itsourpathtoseethingsdothings\"\nexpected:   \"Itsourpathtoseethingsdothings11121314151617\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (regexp-replace* #rx\"[0-9]+\" test_str \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:12:4\nactual:     \"Iloveyouthreethousand\"\nexpected:   \"Iloveyouthreethousand1143553000\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:13:4\nactual:     \"AvengersAssemble\"\nexpected:   \"AvengersAssemble124\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:14:4\nactual:     \"Itsourpathtoseethingsdothings\"\nexpected:   \"Itsourpathtoseethingsdothings11121314151617\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (regexp-replace* #rx\"[0-9]+\" test_str \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:12:4\nactual:     \"Iloveyouthreethousand\"\nexpected:   \"Iloveyouthreethousand1143553000\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:13:4\nactual:     \"AvengersAssemble\"\nexpected:   \"AvengersAssemble124\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:14:4\nactual:     \"Itsourpathtoseethingsdothings\"\nexpected:   \"Itsourpathtoseethingsdothings11121314151617\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (regexp-replace* #rx\"[0-9]+\" test_str \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:12:4\nactual:     \"Iloveyouthreethousand\"\nexpected:   \"Iloveyouthreethousand1143553000\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:13:4\nactual:     \"AvengersAssemble\"\nexpected:   \"AvengersAssemble124\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:14:4\nactual:     \"Itsourpathtoseethingsdothings\"\nexpected:   \"Itsourpathtoseethingsdothings11121314151617\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (regexp-replace* #rx\"[0-9]+\" test_str \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:12:4\nactual:     \"Iloveyouthreethousand\"\nexpected:   \"Iloveyouthreethousand1143553000\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:13:4\nactual:     \"AvengersAssemble\"\nexpected:   \"AvengersAssemble124\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:14:4\nactual:     \"Itsourpathtoseethingsdothings\"\nexpected:   \"Itsourpathtoseethingsdothings11121314151617\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (regexp-replace* #rx\"[0-9]+\" test_str \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:12:4\nactual:     \"Iloveyouthreethousand\"\nexpected:   \"Iloveyouthreethousand1143553000\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:13:4\nactual:     \"AvengersAssemble\"\nexpected:   \"AvengersAssemble124\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:14:4\nactual:     \"Itsourpathtoseethingsdothings\"\nexpected:   \"Itsourpathtoseethingsdothings11121314151617\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (string-append (regexp-replace* #rx\"[0-9]\" test_str \"\")\n                 (regexp-replace* #rx\"[^0-9]\" test_str \"\")))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (regexp-replace* #rx\"[0-9]+\" test_str \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:12:4\nactual:     \"Iloveyouthreethousand\"\nexpected:   \"Iloveyouthreethousand1143553000\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:13:4\nactual:     \"AvengersAssemble\"\nexpected:   \"AvengersAssemble124\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:14:4\nactual:     \"Itsourpathtoseethingsdothings\"\nexpected:   \"Itsourpathtoseethingsdothings11121314151617\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (regexp-replace* #rx\"[0-9]+\" test_str \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:12:4\nactual:     \"Iloveyouthreethousand\"\nexpected:   \"Iloveyouthreethousand1143553000\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:13:4\nactual:     \"AvengersAssemble\"\nexpected:   \"AvengersAssemble124\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:14:4\nactual:     \"Itsourpathtoseethingsdothings\"\nexpected:   \"Itsourpathtoseethingsdothings11121314151617\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (regexp-replace* #rx\"[0-9]+\" test_str \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:12:4\nactual:     \"Iloveyouthreethousand\"\nexpected:   \"Iloveyouthreethousand1143553000\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:13:4\nactual:     \"AvengersAssemble\"\nexpected:   \"AvengersAssemble124\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:14:4\nactual:     \"Itsourpathtoseethingsdothings\"\nexpected:   \"Itsourpathtoseethingsdothings11121314151617\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (string-join\n   (append (filter (lambda (x) (not (number? x)))\n                   (string->list test_str))\n           (filter (lambda (x) (number? x))\n                   (string->list test_str)))\n   \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp3j2yw3n4.rkt:17:4\n\nstring-join: contract violation\n  expected: (listof string?)\n  given: '(#\\I #\\1 #\\l #\\o #\\v #\\e #\\1 #\\4 #\\3 #\\y #\\o #\\u #\\5 #\\5 #\\t #\\h #\\r #\\e #\\e #\\3 #\\0 #\\0 #\\0 #\\t #\\h #\\o #\\u #\\s #\\a #\\n #\\d)\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp3j2yw3n4.rkt:18:4\n\nstring-join: contract violation\n  expected: (listof string?)\n  given: '(#\\A #\\v #\\e #\\n #\\g #\\e #\\r #\\s #\\1 #\\2 #\\4 #\\A #\\s #\\s #\\e #\\m #\\b #\\l #\\e)\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp3j2yw3n4.rkt:19:4\n\nstring-join: contract violation\n  expected: (listof string?)\n  given: '(#\\I #\\t #\\s #\\1 #\\1 #\\o #\\u #\\r #\\1 #\\2 #\\p #\\a #\\t #\\h #\\1 #\\3 #\\t #\\o #\\1 #\\4 #\\s #\\e #\\e #\\1 #\\5 #\\t #\\h #\\i #\\n #\\g #\\s #\\1 #\\6 #\\d #\\o #\\1 #\\7 #\\t #\\h #\\i #\\n #\\g #\\s)\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (regexp-replace* #rx\"[0-9]+\" test_str \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:12:4\nactual:     \"Iloveyouthreethousand\"\nexpected:   \"Iloveyouthreethousand1143553000\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:13:4\nactual:     \"AvengersAssemble\"\nexpected:   \"AvengersAssemble124\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:14:4\nactual:     \"Itsourpathtoseethingsdothings\"\nexpected:   \"Itsourpathtoseethingsdothings11121314151617\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (regexp-replace* #rx\"[0-9]+\" test_str \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:12:4\nactual:     \"Iloveyouthreethousand\"\nexpected:   \"Iloveyouthreethousand1143553000\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:13:4\nactual:     \"AvengersAssemble\"\nexpected:   \"AvengersAssemble124\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:14:4\nactual:     \"Itsourpathtoseethingsdothings\"\nexpected:   \"Itsourpathtoseethingsdothings11121314151617\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (string-append (regexp-replace* #rx\"[0-9]\" test_str \"\")\n                 (regexp-replace* #rx\"[^0-9]\" test_str \"\")))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (regexp-replace* #rx\"[0-9]+\" test_str \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:12:4\nactual:     \"Iloveyouthreethousand\"\nexpected:   \"Iloveyouthreethousand1143553000\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:13:4\nactual:     \"AvengersAssemble\"\nexpected:   \"AvengersAssemble124\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:14:4\nactual:     \"Itsourpathtoseethingsdothings\"\nexpected:   \"Itsourpathtoseethingsdothings11121314151617\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (regexp-replace* #rx\"[0-9]+\" test_str \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:12:4\nactual:     \"Iloveyouthreethousand\"\nexpected:   \"Iloveyouthreethousand1143553000\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:13:4\nactual:     \"AvengersAssemble\"\nexpected:   \"AvengersAssemble124\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:14:4\nactual:     \"Itsourpathtoseethingsdothings\"\nexpected:   \"Itsourpathtoseethingsdothings11121314151617\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (regexp-replace* #rx\"[0-9]+\" test_str \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:12:4\nactual:     \"Iloveyouthreethousand\"\nexpected:   \"Iloveyouthreethousand1143553000\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:13:4\nactual:     \"AvengersAssemble\"\nexpected:   \"AvengersAssemble124\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:14:4\nactual:     \"Itsourpathtoseethingsdothings\"\nexpected:   \"Itsourpathtoseethingsdothings11121314151617\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (string-append (regexp-replace* #rx\"[0-9]\" test_str \"\")\n                 (regexp-replace* #rx\"[^0-9]\" test_str \"\")))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (regexp-replace* #rx\"[0-9]+\" test_str \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:12:4\nactual:     \"Iloveyouthreethousand\"\nexpected:   \"Iloveyouthreethousand1143553000\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:13:4\nactual:     \"AvengersAssemble\"\nexpected:   \"AvengersAssemble124\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:14:4\nactual:     \"Itsourpathtoseethingsdothings\"\nexpected:   \"Itsourpathtoseethingsdothings11121314151617\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (let loop ([test_str test_str]\n             [result \"\"])\n    (cond [(empty? test_str) result]\n          [(char-numeric? (first test_str))\n           (loop (rest test_str) (string-append result (first test_str)))]\n          [else (loop (rest test_str) (string-append result (first test_str)))])))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123030,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpsf95l2fb.rkt:17:4\n\nfirst: contract violation\n  expected: (and/c list? (not/c empty?))\n  given: \"I1love143you55three3000thousand\"\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpsf95l2fb.rkt:18:4\n\nfirst: contract violation\n  expected: (and/c list? (not/c empty?))\n  given: \"Avengers124Assemble\"\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpsf95l2fb.rkt:19:4\n\nfirst: contract violation\n  expected: (and/c list? (not/c empty?))\n  given: \"Its11our12path13to14see15things16do17things\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (regexp-replace* #rx\"[0-9]+\" test_str \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:12:4\nactual:     \"Iloveyouthreethousand\"\nexpected:   \"Iloveyouthreethousand1143553000\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:13:4\nactual:     \"AvengersAssemble\"\nexpected:   \"AvengersAssemble124\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:14:4\nactual:     \"Itsourpathtoseethingsdothings\"\nexpected:   \"Itsourpathtoseethingsdothings11121314151617\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (regexp-replace* #rx\"[0-9]\" test_str \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpxdh7t512.rkt:12:4\nactual:     \"Iloveyouthreethousand\"\nexpected:   \"Iloveyouthreethousand1143553000\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpxdh7t512.rkt:13:4\nactual:     \"AvengersAssemble\"\nexpected:   \"AvengersAssemble124\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpxdh7t512.rkt:14:4\nactual:     \"Itsourpathtoseethingsdothings\"\nexpected:   \"Itsourpathtoseethingsdothings11121314151617\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (string-append (regexp-replace* #rx\"[0-9]\" test_str \"\")\n                 (regexp-replace* #rx\"[^0-9]\" test_str \"\")))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (regexp-replace* #rx\"[0-9]+\" test_str \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:12:4\nactual:     \"Iloveyouthreethousand\"\nexpected:   \"Iloveyouthreethousand1143553000\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:13:4\nactual:     \"AvengersAssemble\"\nexpected:   \"AvengersAssemble124\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:14:4\nactual:     \"Itsourpathtoseethingsdothings\"\nexpected:   \"Itsourpathtoseethingsdothings11121314151617\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (define (is-num? c)\n    (and (char-numeric? c) (not (char=? c #\\space))))\n  (define (move-num-helper str)\n    (cond\n      [(empty? str) empty]\n      [(is-num? (first str))\n       (cons (first str) (move-num-helper (rest str)))]\n      [else (move-num-helper (rest str))]))\n  (string-append (move-num-helper test_str) (regexp-replace* #rx\"[0-9]\" test_str \"\")))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123030,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpd30oujtv.rkt:20:4\n\nfirst: contract violation\n  expected: (and/c list? (not/c empty?))\n  given: \"I1love143you55three3000thousand\"\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpd30oujtv.rkt:21:4\n\nfirst: contract violation\n  expected: (and/c list? (not/c empty?))\n  given: \"Avengers124Assemble\"\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpd30oujtv.rkt:22:4\n\nfirst: contract violation\n  expected: (and/c list? (not/c empty?))\n  given: \"Its11our12path13to14see15things16do17things\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (string-append (regexp-replace* #rx\"[0-9]\" test_str \"\")\n                 (regexp-replace* #rx\"[^0-9]\" test_str \"\")))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (regexp-replace* #rx\"[0-9]+\" test_str \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:12:4\nactual:     \"Iloveyouthreethousand\"\nexpected:   \"Iloveyouthreethousand1143553000\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:13:4\nactual:     \"AvengersAssemble\"\nexpected:   \"AvengersAssemble124\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:14:4\nactual:     \"Itsourpathtoseethingsdothings\"\nexpected:   \"Itsourpathtoseethingsdothings11121314151617\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (string-join (append (filter (lambda (x) (not (char-numeric? x))) (string->list test_str))\n                      (filter (lambda (x) (char-numeric? x)) (string->list test_str)))\n               \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123030,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpqgc_qye0.rkt:14:4\n\nstring-join: contract violation\n  expected: (listof string?)\n  given: '(#\\I #\\l #\\o #\\v #\\e #\\y #\\o #\\u #\\t #\\h #\\r #\\e #\\e #\\t #\\h #\\o #\\u #\\s #\\a #\\n #\\d #\\1 #\\1 #\\4 #\\3 #\\5 #\\5 #\\3 #\\0 #\\0 #\\0)\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpqgc_qye0.rkt:15:4\n\nstring-join: contract violation\n  expected: (listof string?)\n  given: '(#\\A #\\v #\\e #\\n #\\g #\\e #\\r #\\s #\\A #\\s #\\s #\\e #\\m #\\b #\\l #\\e #\\1 #\\2 #\\4)\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpqgc_qye0.rkt:16:4\n\nstring-join: contract violation\n  expected: (listof string?)\n  given: '(#\\I #\\t #\\s #\\o #\\u #\\r #\\p #\\a #\\t #\\h #\\t #\\o #\\s #\\e #\\e #\\t #\\h #\\i #\\n #\\g #\\s #\\d #\\o #\\t #\\h #\\i #\\n #\\g #\\s #\\1 #\\1 #\\1 #\\2 #\\1 #\\3 #\\1 #\\4 #\\1 #\\5 #\\1 #\\6 #\\1 #\\7)\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (regexp-replace* #rx\"[0-9]+\" test_str \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:12:4\nactual:     \"Iloveyouthreethousand\"\nexpected:   \"Iloveyouthreethousand1143553000\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:13:4\nactual:     \"AvengersAssemble\"\nexpected:   \"AvengersAssemble124\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:14:4\nactual:     \"Itsourpathtoseethingsdothings\"\nexpected:   \"Itsourpathtoseethingsdothings11121314151617\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (define (move_num_helper test_str result)\n    (if (empty? test_str)\n        result\n        (if (char-numeric? (first test_str))\n            (move_num_helper (rest test_str) (append result (list (first test_str))))\n            (move_num_helper (rest test_str) (append (list (first test_str)) result)))))\n  (move_num_helper test_str '()))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123030,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpuiubbizn.rkt:18:4\n\nfirst: contract violation\n  expected: (and/c list? (not/c empty?))\n  given: \"I1love143you55three3000thousand\"\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpuiubbizn.rkt:19:4\n\nfirst: contract violation\n  expected: (and/c list? (not/c empty?))\n  given: \"Avengers124Assemble\"\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpuiubbizn.rkt:20:4\n\nfirst: contract violation\n  expected: (and/c list? (not/c empty?))\n  given: \"Its11our12path13to14see15things16do17things\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (regexp-replace* #rx\"[0-9]\" test_str \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpxdh7t512.rkt:12:4\nactual:     \"Iloveyouthreethousand\"\nexpected:   \"Iloveyouthreethousand1143553000\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpxdh7t512.rkt:13:4\nactual:     \"AvengersAssemble\"\nexpected:   \"AvengersAssemble124\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpxdh7t512.rkt:14:4\nactual:     \"Itsourpathtoseethingsdothings\"\nexpected:   \"Itsourpathtoseethingsdothings11121314151617\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (regexp-replace* #rx\"[0-9]+\" test_str \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:12:4\nactual:     \"Iloveyouthreethousand\"\nexpected:   \"Iloveyouthreethousand1143553000\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:13:4\nactual:     \"AvengersAssemble\"\nexpected:   \"AvengersAssemble124\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:14:4\nactual:     \"Itsourpathtoseethingsdothings\"\nexpected:   \"Itsourpathtoseethingsdothings11121314151617\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (regexp-replace* #rx\"[0-9]+\" test_str \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:12:4\nactual:     \"Iloveyouthreethousand\"\nexpected:   \"Iloveyouthreethousand1143553000\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:13:4\nactual:     \"AvengersAssemble\"\nexpected:   \"AvengersAssemble124\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:14:4\nactual:     \"Itsourpathtoseethingsdothings\"\nexpected:   \"Itsourpathtoseethingsdothings11121314151617\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (string-append (regexp-replace* #rx\"[0-9]\" test_str \"\")\n                 (regexp-replace* #rx\"[^0-9]\" test_str \"\")))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (let loop ([str test_str]\n             [result '()])\n    (cond [(empty? str) (list->string (reverse result))]\n          [(char-numeric? (first str))\n           (loop (rest str) (cons (first str) result))]\n          [else (loop (rest str) (cons (first str) result))])))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123030,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpppjwpxs6.rkt:17:4\n\nfirst: contract violation\n  expected: (and/c list? (not/c empty?))\n  given: \"I1love143you55three3000thousand\"\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpppjwpxs6.rkt:18:4\n\nfirst: contract violation\n  expected: (and/c list? (not/c empty?))\n  given: \"Avengers124Assemble\"\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpppjwpxs6.rkt:19:4\n\nfirst: contract violation\n  expected: (and/c list? (not/c empty?))\n  given: \"Its11our12path13to14see15things16do17things\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (string-join\n   (append (filter (lambda (x) (not (number? x))) (string->list test_str))\n           (filter (lambda (x) (number? x)) (string->list test_str)))\n   \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123030,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpqcaz26p2.rkt:15:4\n\nstring-join: contract violation\n  expected: (listof string?)\n  given: '(#\\I #\\1 #\\l #\\o #\\v #\\e #\\1 #\\4 #\\3 #\\y #\\o #\\u #\\5 #\\5 #\\t #\\h #\\r #\\e #\\e #\\3 #\\0 #\\0 #\\0 #\\t #\\h #\\o #\\u #\\s #\\a #\\n #\\d)\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpqcaz26p2.rkt:16:4\n\nstring-join: contract violation\n  expected: (listof string?)\n  given: '(#\\A #\\v #\\e #\\n #\\g #\\e #\\r #\\s #\\1 #\\2 #\\4 #\\A #\\s #\\s #\\e #\\m #\\b #\\l #\\e)\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpqcaz26p2.rkt:17:4\n\nstring-join: contract violation\n  expected: (listof string?)\n  given: '(#\\I #\\t #\\s #\\1 #\\1 #\\o #\\u #\\r #\\1 #\\2 #\\p #\\a #\\t #\\h #\\1 #\\3 #\\t #\\o #\\1 #\\4 #\\s #\\e #\\e #\\1 #\\5 #\\t #\\h #\\i #\\n #\\g #\\s #\\1 #\\6 #\\d #\\o #\\1 #\\7 #\\t #\\h #\\i #\\n #\\g #\\s)\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (regexp-replace* #rx\"[0-9]+\" test_str \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:12:4\nactual:     \"Iloveyouthreethousand\"\nexpected:   \"Iloveyouthreethousand1143553000\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:13:4\nactual:     \"AvengersAssemble\"\nexpected:   \"AvengersAssemble124\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:14:4\nactual:     \"Itsourpathtoseethingsdothings\"\nexpected:   \"Itsourpathtoseethingsdothings11121314151617\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (string-append\n   (regexp-replace* #rx\"[0-9]\" test_str \"\")\n   (regexp-replace* #rx\"[^0-9]\" test_str \"\")))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123030,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (string-append (regexp-replace* #rx\"[0-9]\" test_str \"\")\n                 (regexp-replace* #rx\"[^0-9]\" test_str \"\")))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (regexp-replace* #rx\"[0-9]+\" test_str \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:12:4\nactual:     \"Iloveyouthreethousand\"\nexpected:   \"Iloveyouthreethousand1143553000\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:13:4\nactual:     \"AvengersAssemble\"\nexpected:   \"AvengersAssemble124\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:14:4\nactual:     \"Itsourpathtoseethingsdothings\"\nexpected:   \"Itsourpathtoseethingsdothings11121314151617\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (regexp-replace* #rx\"[0-9]+\" test_str \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:12:4\nactual:     \"Iloveyouthreethousand\"\nexpected:   \"Iloveyouthreethousand1143553000\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:13:4\nactual:     \"AvengersAssemble\"\nexpected:   \"AvengersAssemble124\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:14:4\nactual:     \"Itsourpathtoseethingsdothings\"\nexpected:   \"Itsourpathtoseethingsdothings11121314151617\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (regexp-replace* #rx\"[0-9]+\" test_str \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:12:4\nactual:     \"Iloveyouthreethousand\"\nexpected:   \"Iloveyouthreethousand1143553000\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:13:4\nactual:     \"AvengersAssemble\"\nexpected:   \"AvengersAssemble124\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:14:4\nactual:     \"Itsourpathtoseethingsdothings\"\nexpected:   \"Itsourpathtoseethingsdothings11121314151617\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (string-append\n   (regexp-replace* #rx\"[0-9]\" test_str \"\")\n   (regexp-replace* #rx\"[^0-9]\" test_str \"\")))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123030,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (regexp-replace* #rx\"[0-9]+\" test_str \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:12:4\nactual:     \"Iloveyouthreethousand\"\nexpected:   \"Iloveyouthreethousand1143553000\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:13:4\nactual:     \"AvengersAssemble\"\nexpected:   \"AvengersAssemble124\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:14:4\nactual:     \"Itsourpathtoseethingsdothings\"\nexpected:   \"Itsourpathtoseethingsdothings11121314151617\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (regexp-replace* #rx\"[0-9]+\" test_str \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:12:4\nactual:     \"Iloveyouthreethousand\"\nexpected:   \"Iloveyouthreethousand1143553000\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:13:4\nactual:     \"AvengersAssemble\"\nexpected:   \"AvengersAssemble124\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:14:4\nactual:     \"Itsourpathtoseethingsdothings\"\nexpected:   \"Itsourpathtoseethingsdothings11121314151617\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (regexp-replace* #rx\"[0-9]\" test_str \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpxdh7t512.rkt:12:4\nactual:     \"Iloveyouthreethousand\"\nexpected:   \"Iloveyouthreethousand1143553000\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpxdh7t512.rkt:13:4\nactual:     \"AvengersAssemble\"\nexpected:   \"AvengersAssemble124\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpxdh7t512.rkt:14:4\nactual:     \"Itsourpathtoseethingsdothings\"\nexpected:   \"Itsourpathtoseethingsdothings11121314151617\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (regexp-replace* #rx\"[0-9]\" test_str \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpxdh7t512.rkt:12:4\nactual:     \"Iloveyouthreethousand\"\nexpected:   \"Iloveyouthreethousand1143553000\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpxdh7t512.rkt:13:4\nactual:     \"AvengersAssemble\"\nexpected:   \"AvengersAssemble124\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpxdh7t512.rkt:14:4\nactual:     \"Itsourpathtoseethingsdothings\"\nexpected:   \"Itsourpathtoseethingsdothings11121314151617\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (string-append (regexp-replace* #rx\"[0-9]\" test_str \"\")\n                 (regexp-replace* #rx\"[^0-9]\" test_str \"\")))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (string-append (regexp-replace* #rx\"[0-9]\" test_str \"\")\n                 (regexp-replace* #rx\"[^0-9]\" test_str \"\")))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (regexp-replace* #rx\"[0-9]+\" test_str \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:12:4\nactual:     \"Iloveyouthreethousand\"\nexpected:   \"Iloveyouthreethousand1143553000\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:13:4\nactual:     \"AvengersAssemble\"\nexpected:   \"AvengersAssemble124\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:14:4\nactual:     \"Itsourpathtoseethingsdothings\"\nexpected:   \"Itsourpathtoseethingsdothings11121314151617\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (regexp-replace* #rx\"[0-9]+\" test_str \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:12:4\nactual:     \"Iloveyouthreethousand\"\nexpected:   \"Iloveyouthreethousand1143553000\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:13:4\nactual:     \"AvengersAssemble\"\nexpected:   \"AvengersAssemble124\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:14:4\nactual:     \"Itsourpathtoseethingsdothings\"\nexpected:   \"Itsourpathtoseethingsdothings11121314151617\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (regexp-replace* #rx\"[0-9]+\" test_str \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:12:4\nactual:     \"Iloveyouthreethousand\"\nexpected:   \"Iloveyouthreethousand1143553000\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:13:4\nactual:     \"AvengersAssemble\"\nexpected:   \"AvengersAssemble124\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:14:4\nactual:     \"Itsourpathtoseethingsdothings\"\nexpected:   \"Itsourpathtoseethingsdothings11121314151617\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (string-append (regexp-replace* #rx\"[0-9]\" test_str \"\")\n                 (regexp-replace* #rx\"[^0-9]\" test_str \"\")))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (regexp-replace* #rx\"[0-9]+\" test_str \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:12:4\nactual:     \"Iloveyouthreethousand\"\nexpected:   \"Iloveyouthreethousand1143553000\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:13:4\nactual:     \"AvengersAssemble\"\nexpected:   \"AvengersAssemble124\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:14:4\nactual:     \"Itsourpathtoseethingsdothings\"\nexpected:   \"Itsourpathtoseethingsdothings11121314151617\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (regexp-replace* #rx\"\\\\d+\" test_str \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123030,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpdqe5p1d1.rkt:12:4\nactual:     \"I1love143you55three3000thousan\"\nexpected:   \"Iloveyouthreethousand1143553000\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpdqe5p1d1.rkt:13:4\nactual:     \"Avengers124Assemble\"\nexpected:   \"AvengersAssemble124\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpdqe5p1d1.rkt:14:4\nactual:     \"Its11our12path13to14see15things16o17things\"\nexpected:   \"Itsourpathtoseethingsdothings11121314151617\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (regexp-replace* #rx\"[0-9]+\" test_str \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:12:4\nactual:     \"Iloveyouthreethousand\"\nexpected:   \"Iloveyouthreethousand1143553000\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:13:4\nactual:     \"AvengersAssemble\"\nexpected:   \"AvengersAssemble124\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:14:4\nactual:     \"Itsourpathtoseethingsdothings\"\nexpected:   \"Itsourpathtoseethingsdothings11121314151617\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (regexp-replace* #rx\"[0-9]\" test_str \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpxdh7t512.rkt:12:4\nactual:     \"Iloveyouthreethousand\"\nexpected:   \"Iloveyouthreethousand1143553000\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpxdh7t512.rkt:13:4\nactual:     \"AvengersAssemble\"\nexpected:   \"AvengersAssemble124\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpxdh7t512.rkt:14:4\nactual:     \"Itsourpathtoseethingsdothings\"\nexpected:   \"Itsourpathtoseethingsdothings11121314151617\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (regexp-replace* #rx\"[0-9]+\" test_str \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:12:4\nactual:     \"Iloveyouthreethousand\"\nexpected:   \"Iloveyouthreethousand1143553000\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:13:4\nactual:     \"AvengersAssemble\"\nexpected:   \"AvengersAssemble124\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:14:4\nactual:     \"Itsourpathtoseethingsdothings\"\nexpected:   \"Itsourpathtoseethingsdothings11121314151617\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (string-append (regexp-replace* #rx\"[0-9]\" test_str \"\")\n                 (regexp-replace* #rx\"[^0-9]\" test_str \"\")))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (string-join\n   (append (filter (lambda (x) (not (char-numeric? x))) (string->list test_str))\n           (filter (lambda (x) (char-numeric? x)) (string->list test_str)))\n   \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123030,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmppik7pgw0.rkt:15:4\n\nstring-join: contract violation\n  expected: (listof string?)\n  given: '(#\\I #\\l #\\o #\\v #\\e #\\y #\\o #\\u #\\t #\\h #\\r #\\e #\\e #\\t #\\h #\\o #\\u #\\s #\\a #\\n #\\d #\\1 #\\1 #\\4 #\\3 #\\5 #\\5 #\\3 #\\0 #\\0 #\\0)\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmppik7pgw0.rkt:16:4\n\nstring-join: contract violation\n  expected: (listof string?)\n  given: '(#\\A #\\v #\\e #\\n #\\g #\\e #\\r #\\s #\\A #\\s #\\s #\\e #\\m #\\b #\\l #\\e #\\1 #\\2 #\\4)\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmppik7pgw0.rkt:17:4\n\nstring-join: contract violation\n  expected: (listof string?)\n  given: '(#\\I #\\t #\\s #\\o #\\u #\\r #\\p #\\a #\\t #\\h #\\t #\\o #\\s #\\e #\\e #\\t #\\h #\\i #\\n #\\g #\\s #\\d #\\o #\\t #\\h #\\i #\\n #\\g #\\s #\\1 #\\1 #\\1 #\\2 #\\1 #\\3 #\\1 #\\4 #\\1 #\\5 #\\1 #\\6 #\\1 #\\7)\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (regexp-replace* #rx\"[0-9]+\" test_str \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:12:4\nactual:     \"Iloveyouthreethousand\"\nexpected:   \"Iloveyouthreethousand1143553000\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:13:4\nactual:     \"AvengersAssemble\"\nexpected:   \"AvengersAssemble124\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:14:4\nactual:     \"Itsourpathtoseethingsdothings\"\nexpected:   \"Itsourpathtoseethingsdothings11121314151617\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (regexp-replace* #rx\"[0-9]+\" test_str \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:12:4\nactual:     \"Iloveyouthreethousand\"\nexpected:   \"Iloveyouthreethousand1143553000\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:13:4\nactual:     \"AvengersAssemble\"\nexpected:   \"AvengersAssemble124\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:14:4\nactual:     \"Itsourpathtoseethingsdothings\"\nexpected:   \"Itsourpathtoseethingsdothings11121314151617\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (string-append (regexp-replace* #rx\"[0-9]+\" test_str \"\")\n                 (regexp-replace* #rx\"[^0-9]+\" test_str \"\")))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123030,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (regexp-replace* #rx\"[0-9]\" test_str \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpxdh7t512.rkt:12:4\nactual:     \"Iloveyouthreethousand\"\nexpected:   \"Iloveyouthreethousand1143553000\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpxdh7t512.rkt:13:4\nactual:     \"AvengersAssemble\"\nexpected:   \"AvengersAssemble124\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpxdh7t512.rkt:14:4\nactual:     \"Itsourpathtoseethingsdothings\"\nexpected:   \"Itsourpathtoseethingsdothings11121314151617\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (regexp-replace* #rx\"[0-9]+\" test_str \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:12:4\nactual:     \"Iloveyouthreethousand\"\nexpected:   \"Iloveyouthreethousand1143553000\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:13:4\nactual:     \"AvengersAssemble\"\nexpected:   \"AvengersAssemble124\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:14:4\nactual:     \"Itsourpathtoseethingsdothings\"\nexpected:   \"Itsourpathtoseethingsdothings11121314151617\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (string-append (regexp-replace* #rx\"[0-9]\" test_str \"\")\n                 (regexp-replace* #rx\"[^0-9]\" test_str \"\")))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (string-join\n   (append (filter (lambda (x) (not (number? x))) (string-&gt;list test_str))\n           (filter (lambda (x) (number? x)) (string-&gt;list test_str)))\n   \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123029,
      "stdout": "",
      "stderr": "/tmp/tmp8jo417e4.rkt:6:50: read-syntax: expected a `)` to close `(`\n  possible cause: indentation suggests a missing `)` before line 7\n  context...:\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:186:17: body\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:183:2: wrap-internal\n   /work/arjunguha-research-group/software/racket/collects/racket/../syntax/module-reader.rkt:67:9: wrap-internal/wrapper\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (regexp-replace* #rx\"[0-9]\" test_str \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpxdh7t512.rkt:12:4\nactual:     \"Iloveyouthreethousand\"\nexpected:   \"Iloveyouthreethousand1143553000\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpxdh7t512.rkt:13:4\nactual:     \"AvengersAssemble\"\nexpected:   \"AvengersAssemble124\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpxdh7t512.rkt:14:4\nactual:     \"Itsourpathtoseethingsdothings\"\nexpected:   \"Itsourpathtoseethingsdothings11121314151617\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (regexp-replace* #rx\"[0-9]+\" test_str \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:12:4\nactual:     \"Iloveyouthreethousand\"\nexpected:   \"Iloveyouthreethousand1143553000\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:13:4\nactual:     \"AvengersAssemble\"\nexpected:   \"AvengersAssemble124\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:14:4\nactual:     \"Itsourpathtoseethingsdothings\"\nexpected:   \"Itsourpathtoseethingsdothings11121314151617\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (regexp-replace* #rx\"[0-9]+\" test_str \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:12:4\nactual:     \"Iloveyouthreethousand\"\nexpected:   \"Iloveyouthreethousand1143553000\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:13:4\nactual:     \"AvengersAssemble\"\nexpected:   \"AvengersAssemble124\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:14:4\nactual:     \"Itsourpathtoseethingsdothings\"\nexpected:   \"Itsourpathtoseethingsdothings11121314151617\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (string-append (regexp-replace* #rx\"[0-9]\" test_str \"\")\n                 (regexp-replace* #rx\"[^0-9]\" test_str \"\")))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (regexp-replace* #rx\"[0-9]+\" test_str \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:12:4\nactual:     \"Iloveyouthreethousand\"\nexpected:   \"Iloveyouthreethousand1143553000\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:13:4\nactual:     \"AvengersAssemble\"\nexpected:   \"AvengersAssemble124\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:14:4\nactual:     \"Itsourpathtoseethingsdothings\"\nexpected:   \"Itsourpathtoseethingsdothings11121314151617\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (regexp-replace* #rx\"[0-9]+\" test_str \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:12:4\nactual:     \"Iloveyouthreethousand\"\nexpected:   \"Iloveyouthreethousand1143553000\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:13:4\nactual:     \"AvengersAssemble\"\nexpected:   \"AvengersAssemble124\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:14:4\nactual:     \"Itsourpathtoseethingsdothings\"\nexpected:   \"Itsourpathtoseethingsdothings11121314151617\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (string-append (regexp-replace* #rx\"[0-9]\" test_str \"\")\n                 (regexp-replace* #rx\"[^0-9]\" test_str \"\")))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (regexp-replace* #rx\"[0-9]+\" test_str \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:12:4\nactual:     \"Iloveyouthreethousand\"\nexpected:   \"Iloveyouthreethousand1143553000\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:13:4\nactual:     \"AvengersAssemble\"\nexpected:   \"AvengersAssemble124\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:14:4\nactual:     \"Itsourpathtoseethingsdothings\"\nexpected:   \"Itsourpathtoseethingsdothings11121314151617\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (regexp-replace* #rx\"[0-9]+\" test_str \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:12:4\nactual:     \"Iloveyouthreethousand\"\nexpected:   \"Iloveyouthreethousand1143553000\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:13:4\nactual:     \"AvengersAssemble\"\nexpected:   \"AvengersAssemble124\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:14:4\nactual:     \"Itsourpathtoseethingsdothings\"\nexpected:   \"Itsourpathtoseethingsdothings11121314151617\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (regexp-replace* #rx\"[0-9]+\" test_str \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:12:4\nactual:     \"Iloveyouthreethousand\"\nexpected:   \"Iloveyouthreethousand1143553000\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:13:4\nactual:     \"AvengersAssemble\"\nexpected:   \"AvengersAssemble124\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:14:4\nactual:     \"Itsourpathtoseethingsdothings\"\nexpected:   \"Itsourpathtoseethingsdothings11121314151617\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (regexp-replace* #rx\"[0-9]+\" test_str \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:12:4\nactual:     \"Iloveyouthreethousand\"\nexpected:   \"Iloveyouthreethousand1143553000\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:13:4\nactual:     \"AvengersAssemble\"\nexpected:   \"AvengersAssemble124\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:14:4\nactual:     \"Itsourpathtoseethingsdothings\"\nexpected:   \"Itsourpathtoseethingsdothings11121314151617\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (regexp-replace* #rx\"[0-9]\" test_str \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpxdh7t512.rkt:12:4\nactual:     \"Iloveyouthreethousand\"\nexpected:   \"Iloveyouthreethousand1143553000\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpxdh7t512.rkt:13:4\nactual:     \"AvengersAssemble\"\nexpected:   \"AvengersAssemble124\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpxdh7t512.rkt:14:4\nactual:     \"Itsourpathtoseethingsdothings\"\nexpected:   \"Itsourpathtoseethingsdothings11121314151617\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (regexp-replace* #rx\"[0-9]+\" test_str \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:12:4\nactual:     \"Iloveyouthreethousand\"\nexpected:   \"Iloveyouthreethousand1143553000\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:13:4\nactual:     \"AvengersAssemble\"\nexpected:   \"AvengersAssemble124\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:14:4\nactual:     \"Itsourpathtoseethingsdothings\"\nexpected:   \"Itsourpathtoseethingsdothings11121314151617\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (regexp-replace* #rx\"[0-9]+\" test_str \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:12:4\nactual:     \"Iloveyouthreethousand\"\nexpected:   \"Iloveyouthreethousand1143553000\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:13:4\nactual:     \"AvengersAssemble\"\nexpected:   \"AvengersAssemble124\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:14:4\nactual:     \"Itsourpathtoseethingsdothings\"\nexpected:   \"Itsourpathtoseethingsdothings11121314151617\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (string-join\n   (append\n    (filter (lambda (x) (not (char-numeric? x))) (string->list test_str))\n    (filter (lambda (x) (char-numeric? x)) (string->list test_str)))\n   \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123030,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpw33j1vhm.rkt:16:4\n\nstring-join: contract violation\n  expected: (listof string?)\n  given: '(#\\I #\\l #\\o #\\v #\\e #\\y #\\o #\\u #\\t #\\h #\\r #\\e #\\e #\\t #\\h #\\o #\\u #\\s #\\a #\\n #\\d #\\1 #\\1 #\\4 #\\3 #\\5 #\\5 #\\3 #\\0 #\\0 #\\0)\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpw33j1vhm.rkt:17:4\n\nstring-join: contract violation\n  expected: (listof string?)\n  given: '(#\\A #\\v #\\e #\\n #\\g #\\e #\\r #\\s #\\A #\\s #\\s #\\e #\\m #\\b #\\l #\\e #\\1 #\\2 #\\4)\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpw33j1vhm.rkt:18:4\n\nstring-join: contract violation\n  expected: (listof string?)\n  given: '(#\\I #\\t #\\s #\\o #\\u #\\r #\\p #\\a #\\t #\\h #\\t #\\o #\\s #\\e #\\e #\\t #\\h #\\i #\\n #\\g #\\s #\\d #\\o #\\t #\\h #\\i #\\n #\\g #\\s #\\1 #\\1 #\\1 #\\2 #\\1 #\\3 #\\1 #\\4 #\\1 #\\5 #\\1 #\\6 #\\1 #\\7)\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (regexp-replace* #rx\"[0-9]+\" test_str \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:12:4\nactual:     \"Iloveyouthreethousand\"\nexpected:   \"Iloveyouthreethousand1143553000\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:13:4\nactual:     \"AvengersAssemble\"\nexpected:   \"AvengersAssemble124\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:14:4\nactual:     \"Itsourpathtoseethingsdothings\"\nexpected:   \"Itsourpathtoseethingsdothings11121314151617\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (regexp-replace* #rx\"[0-9]+\" test_str \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:12:4\nactual:     \"Iloveyouthreethousand\"\nexpected:   \"Iloveyouthreethousand1143553000\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:13:4\nactual:     \"AvengersAssemble\"\nexpected:   \"AvengersAssemble124\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:14:4\nactual:     \"Itsourpathtoseethingsdothings\"\nexpected:   \"Itsourpathtoseethingsdothings11121314151617\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (regexp-replace* #rx\"[0-9]+\" test_str \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:12:4\nactual:     \"Iloveyouthreethousand\"\nexpected:   \"Iloveyouthreethousand1143553000\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:13:4\nactual:     \"AvengersAssemble\"\nexpected:   \"AvengersAssemble124\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:14:4\nactual:     \"Itsourpathtoseethingsdothings\"\nexpected:   \"Itsourpathtoseethingsdothings11121314151617\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (regexp-replace* #rx\"[0-9]+\" test_str \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:12:4\nactual:     \"Iloveyouthreethousand\"\nexpected:   \"Iloveyouthreethousand1143553000\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:13:4\nactual:     \"AvengersAssemble\"\nexpected:   \"AvengersAssemble124\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:14:4\nactual:     \"Itsourpathtoseethingsdothings\"\nexpected:   \"Itsourpathtoseethingsdothings11121314151617\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (regexp-replace* #rx\"[0-9]+\" test_str \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:12:4\nactual:     \"Iloveyouthreethousand\"\nexpected:   \"Iloveyouthreethousand1143553000\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:13:4\nactual:     \"AvengersAssemble\"\nexpected:   \"AvengersAssemble124\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:14:4\nactual:     \"Itsourpathtoseethingsdothings\"\nexpected:   \"Itsourpathtoseethingsdothings11121314151617\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (regexp-replace* #rx\"[0-9]\" test_str \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpxdh7t512.rkt:12:4\nactual:     \"Iloveyouthreethousand\"\nexpected:   \"Iloveyouthreethousand1143553000\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpxdh7t512.rkt:13:4\nactual:     \"AvengersAssemble\"\nexpected:   \"AvengersAssemble124\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpxdh7t512.rkt:14:4\nactual:     \"Itsourpathtoseethingsdothings\"\nexpected:   \"Itsourpathtoseethingsdothings11121314151617\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (string-append\n   (regexp-replace* #rx\"[0-9]\" test_str \"\")\n   (regexp-replace* #rx\"[^0-9]\" test_str \"\")))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123030,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (regexp-replace* #rx\"[0-9]+\" test_str \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:12:4\nactual:     \"Iloveyouthreethousand\"\nexpected:   \"Iloveyouthreethousand1143553000\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:13:4\nactual:     \"AvengersAssemble\"\nexpected:   \"AvengersAssemble124\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:14:4\nactual:     \"Itsourpathtoseethingsdothings\"\nexpected:   \"Itsourpathtoseethingsdothings11121314151617\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (regexp-replace* #rx\"[0-9]+\" test_str \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:12:4\nactual:     \"Iloveyouthreethousand\"\nexpected:   \"Iloveyouthreethousand1143553000\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:13:4\nactual:     \"AvengersAssemble\"\nexpected:   \"AvengersAssemble124\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:14:4\nactual:     \"Itsourpathtoseethingsdothings\"\nexpected:   \"Itsourpathtoseethingsdothings11121314151617\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (regexp-replace* #rx\"[0-9]+\" test_str \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:12:4\nactual:     \"Iloveyouthreethousand\"\nexpected:   \"Iloveyouthreethousand1143553000\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:13:4\nactual:     \"AvengersAssemble\"\nexpected:   \"AvengersAssemble124\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:14:4\nactual:     \"Itsourpathtoseethingsdothings\"\nexpected:   \"Itsourpathtoseethingsdothings11121314151617\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (string-append (regexp-replace* #rx\"[0-9]+\" test_str \"\")\n                 (regexp-replace* #rx\"[^0-9]+\" test_str \"\")))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123030,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (string-append (regexp-replace* #rx\"[0-9]\" test_str \"\")\n                 (regexp-replace* #rx\"[^0-9]\" test_str \"\")))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (regexp-replace* #rx\"[0-9]+\" test_str \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:12:4\nactual:     \"Iloveyouthreethousand\"\nexpected:   \"Iloveyouthreethousand1143553000\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:13:4\nactual:     \"AvengersAssemble\"\nexpected:   \"AvengersAssemble124\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:14:4\nactual:     \"Itsourpathtoseethingsdothings\"\nexpected:   \"Itsourpathtoseethingsdothings11121314151617\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (let ([nums (regexp-match* #rx\"[0-9]\" test_str)])\n    (string-append (regexp-replace* #rx\"[0-9]\" test_str \"\")\n                   (apply string-append nums))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123030,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (regexp-replace* #rx\"[0-9]\" test_str \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpxdh7t512.rkt:12:4\nactual:     \"Iloveyouthreethousand\"\nexpected:   \"Iloveyouthreethousand1143553000\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpxdh7t512.rkt:13:4\nactual:     \"AvengersAssemble\"\nexpected:   \"AvengersAssemble124\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpxdh7t512.rkt:14:4\nactual:     \"Itsourpathtoseethingsdothings\"\nexpected:   \"Itsourpathtoseethingsdothings11121314151617\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (regexp-replace* #rx\"[0-9]+\" test_str \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:12:4\nactual:     \"Iloveyouthreethousand\"\nexpected:   \"Iloveyouthreethousand1143553000\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:13:4\nactual:     \"AvengersAssemble\"\nexpected:   \"AvengersAssemble124\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:14:4\nactual:     \"Itsourpathtoseethingsdothings\"\nexpected:   \"Itsourpathtoseethingsdothings11121314151617\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (string-append (regexp-replace* #rx\"[0-9]\" test_str \"\")\n                 (regexp-replace* #rx\"[^0-9]\" test_str \"\")))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (regexp-replace* #rx\"[0-9]+\" test_str \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:12:4\nactual:     \"Iloveyouthreethousand\"\nexpected:   \"Iloveyouthreethousand1143553000\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:13:4\nactual:     \"AvengersAssemble\"\nexpected:   \"AvengersAssemble124\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:14:4\nactual:     \"Itsourpathtoseethingsdothings\"\nexpected:   \"Itsourpathtoseethingsdothings11121314151617\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (string-append\n   (regexp-replace* #rx\"[0-9]\" test_str \"\")\n   (regexp-replace* #rx\"[^0-9]\" test_str \"\")))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123030,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (regexp-replace* #rx\"[0-9]+\" test_str \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:12:4\nactual:     \"Iloveyouthreethousand\"\nexpected:   \"Iloveyouthreethousand1143553000\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:13:4\nactual:     \"AvengersAssemble\"\nexpected:   \"AvengersAssemble124\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:14:4\nactual:     \"Itsourpathtoseethingsdothings\"\nexpected:   \"Itsourpathtoseethingsdothings11121314151617\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (regexp-replace* #rx\"[^0-9]\" test_str \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9a8n_ay9.rkt:12:4\nactual:     \"1143553000\"\nexpected:   \"Iloveyouthreethousand1143553000\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9a8n_ay9.rkt:13:4\nactual:     \"124\"\nexpected:   \"AvengersAssemble124\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9a8n_ay9.rkt:14:4\nactual:     \"11121314151617\"\nexpected:   \"Itsourpathtoseethingsdothings11121314151617\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (regexp-replace* #rx\"[0-9]+\" test_str \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:12:4\nactual:     \"Iloveyouthreethousand\"\nexpected:   \"Iloveyouthreethousand1143553000\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:13:4\nactual:     \"AvengersAssemble\"\nexpected:   \"AvengersAssemble124\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:14:4\nactual:     \"Itsourpathtoseethingsdothings\"\nexpected:   \"Itsourpathtoseethingsdothings11121314151617\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (regexp-replace* #rx\"[0-9]+\" test_str \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:12:4\nactual:     \"Iloveyouthreethousand\"\nexpected:   \"Iloveyouthreethousand1143553000\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:13:4\nactual:     \"AvengersAssemble\"\nexpected:   \"AvengersAssemble124\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:14:4\nactual:     \"Itsourpathtoseethingsdothings\"\nexpected:   \"Itsourpathtoseethingsdothings11121314151617\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (regexp-replace* #rx\"[0-9]+\" test_str \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:12:4\nactual:     \"Iloveyouthreethousand\"\nexpected:   \"Iloveyouthreethousand1143553000\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:13:4\nactual:     \"AvengersAssemble\"\nexpected:   \"AvengersAssemble124\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:14:4\nactual:     \"Itsourpathtoseethingsdothings\"\nexpected:   \"Itsourpathtoseethingsdothings11121314151617\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (string-append (regexp-replace* #rx\"[0-9]\" test_str \"\")\n                 (regexp-replace* #rx\"[^0-9]\" test_str \"\")))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (regexp-replace* #rx\"[0-9]+\" test_str \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:12:4\nactual:     \"Iloveyouthreethousand\"\nexpected:   \"Iloveyouthreethousand1143553000\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:13:4\nactual:     \"AvengersAssemble\"\nexpected:   \"AvengersAssemble124\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:14:4\nactual:     \"Itsourpathtoseethingsdothings\"\nexpected:   \"Itsourpathtoseethingsdothings11121314151617\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (regexp-replace* #rx\"[0-9]+\" test_str \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:12:4\nactual:     \"Iloveyouthreethousand\"\nexpected:   \"Iloveyouthreethousand1143553000\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:13:4\nactual:     \"AvengersAssemble\"\nexpected:   \"AvengersAssemble124\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:14:4\nactual:     \"Itsourpathtoseethingsdothings\"\nexpected:   \"Itsourpathtoseethingsdothings11121314151617\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (regexp-replace* #rx\"[0-9]\" test_str \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpxdh7t512.rkt:12:4\nactual:     \"Iloveyouthreethousand\"\nexpected:   \"Iloveyouthreethousand1143553000\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpxdh7t512.rkt:13:4\nactual:     \"AvengersAssemble\"\nexpected:   \"AvengersAssemble124\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpxdh7t512.rkt:14:4\nactual:     \"Itsourpathtoseethingsdothings\"\nexpected:   \"Itsourpathtoseethingsdothings11121314151617\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (regexp-replace* #rx\"[0-9]+\" test_str \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:12:4\nactual:     \"Iloveyouthreethousand\"\nexpected:   \"Iloveyouthreethousand1143553000\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:13:4\nactual:     \"AvengersAssemble\"\nexpected:   \"AvengersAssemble124\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:14:4\nactual:     \"Itsourpathtoseethingsdothings\"\nexpected:   \"Itsourpathtoseethingsdothings11121314151617\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (define (is_num? c)\n    (and (char-numeric? c) (not (char=? c #\\0))))\n  (define (move_num_helper test_str nums)\n    (cond\n      [(empty? test_str) (append nums (list #\\space))]\n      [(is_num? (first test_str)) (move_num_helper (rest test_str) (append nums (list (first test_str))))]\n      [else (append (list (first test_str)) (move_num_helper (rest test_str) nums))]))\n  (move_num_helper test_str empty))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123030,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmprcffjv7e.rkt:19:4\n\nfirst: contract violation\n  expected: (and/c list? (not/c empty?))\n  given: \"I1love143you55three3000thousand\"\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmprcffjv7e.rkt:20:4\n\nfirst: contract violation\n  expected: (and/c list? (not/c empty?))\n  given: \"Avengers124Assemble\"\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmprcffjv7e.rkt:21:4\n\nfirst: contract violation\n  expected: (and/c list? (not/c empty?))\n  given: \"Its11our12path13to14see15things16do17things\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (string-append\n   (regexp-replace* #rx\"[0-9]\" test_str \"\")\n   (regexp-replace* #rx\"[^0-9]\" test_str \"\")))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123030,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (regexp-replace* #rx\"[0-9]+\" test_str \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:12:4\nactual:     \"Iloveyouthreethousand\"\nexpected:   \"Iloveyouthreethousand1143553000\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:13:4\nactual:     \"AvengersAssemble\"\nexpected:   \"AvengersAssemble124\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:14:4\nactual:     \"Itsourpathtoseethingsdothings\"\nexpected:   \"Itsourpathtoseethingsdothings11121314151617\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (string-append (regexp-replace* #rx\"[0-9]\" test_str \"\")\n                 (regexp-replace* #rx\"[^0-9]\" test_str \"\")))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (regexp-replace* #rx\"[0-9]\" test_str \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpxdh7t512.rkt:12:4\nactual:     \"Iloveyouthreethousand\"\nexpected:   \"Iloveyouthreethousand1143553000\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpxdh7t512.rkt:13:4\nactual:     \"AvengersAssemble\"\nexpected:   \"AvengersAssemble124\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpxdh7t512.rkt:14:4\nactual:     \"Itsourpathtoseethingsdothings\"\nexpected:   \"Itsourpathtoseethingsdothings11121314151617\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (regexp-replace* #rx\"[0-9]+\" test_str \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:12:4\nactual:     \"Iloveyouthreethousand\"\nexpected:   \"Iloveyouthreethousand1143553000\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:13:4\nactual:     \"AvengersAssemble\"\nexpected:   \"AvengersAssemble124\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:14:4\nactual:     \"Itsourpathtoseethingsdothings\"\nexpected:   \"Itsourpathtoseethingsdothings11121314151617\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (regexp-replace* #rx\"[0-9]\" test_str \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpxdh7t512.rkt:12:4\nactual:     \"Iloveyouthreethousand\"\nexpected:   \"Iloveyouthreethousand1143553000\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpxdh7t512.rkt:13:4\nactual:     \"AvengersAssemble\"\nexpected:   \"AvengersAssemble124\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpxdh7t512.rkt:14:4\nactual:     \"Itsourpathtoseethingsdothings\"\nexpected:   \"Itsourpathtoseethingsdothings11121314151617\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (regexp-replace* #rx\"[0-9]+\" test_str \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:12:4\nactual:     \"Iloveyouthreethousand\"\nexpected:   \"Iloveyouthreethousand1143553000\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:13:4\nactual:     \"AvengersAssemble\"\nexpected:   \"AvengersAssemble124\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:14:4\nactual:     \"Itsourpathtoseethingsdothings\"\nexpected:   \"Itsourpathtoseethingsdothings11121314151617\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (regexp-replace* #rx\"[0-9]+\" test_str \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:12:4\nactual:     \"Iloveyouthreethousand\"\nexpected:   \"Iloveyouthreethousand1143553000\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:13:4\nactual:     \"AvengersAssemble\"\nexpected:   \"AvengersAssemble124\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:14:4\nactual:     \"Itsourpathtoseethingsdothings\"\nexpected:   \"Itsourpathtoseethingsdothings11121314151617\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (regexp-replace* #rx\"[0-9]+\" test_str \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:12:4\nactual:     \"Iloveyouthreethousand\"\nexpected:   \"Iloveyouthreethousand1143553000\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:13:4\nactual:     \"AvengersAssemble\"\nexpected:   \"AvengersAssemble124\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:14:4\nactual:     \"Itsourpathtoseethingsdothings\"\nexpected:   \"Itsourpathtoseethingsdothings11121314151617\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (regexp-replace* #rx\"[0-9]+\" test_str \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:12:4\nactual:     \"Iloveyouthreethousand\"\nexpected:   \"Iloveyouthreethousand1143553000\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:13:4\nactual:     \"AvengersAssemble\"\nexpected:   \"AvengersAssemble124\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:14:4\nactual:     \"Itsourpathtoseethingsdothings\"\nexpected:   \"Itsourpathtoseethingsdothings11121314151617\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (string-append (regexp-replace* #rx\"[0-9]\" test_str \"\")\n                 (regexp-replace* #rx\"[^0-9]\" test_str \"\")))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (regexp-replace* #rx\"[0-9]+\" test_str \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:12:4\nactual:     \"Iloveyouthreethousand\"\nexpected:   \"Iloveyouthreethousand1143553000\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:13:4\nactual:     \"AvengersAssemble\"\nexpected:   \"AvengersAssemble124\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:14:4\nactual:     \"Itsourpathtoseethingsdothings\"\nexpected:   \"Itsourpathtoseethingsdothings11121314151617\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (string-append (regexp-replace* #rx\"[0-9]\" test_str \"\")\n                 (regexp-replace* #rx\"[^0-9]\" test_str \"\")))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (regexp-replace* #rx\"[0-9]+\" test_str \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:12:4\nactual:     \"Iloveyouthreethousand\"\nexpected:   \"Iloveyouthreethousand1143553000\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:13:4\nactual:     \"AvengersAssemble\"\nexpected:   \"AvengersAssemble124\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:14:4\nactual:     \"Itsourpathtoseethingsdothings\"\nexpected:   \"Itsourpathtoseethingsdothings11121314151617\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (regexp-replace* #rx\"[0-9]+\" test_str \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:12:4\nactual:     \"Iloveyouthreethousand\"\nexpected:   \"Iloveyouthreethousand1143553000\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:13:4\nactual:     \"AvengersAssemble\"\nexpected:   \"AvengersAssemble124\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:14:4\nactual:     \"Itsourpathtoseethingsdothings\"\nexpected:   \"Itsourpathtoseethingsdothings11121314151617\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (regexp-replace* #rx\"[0-9]+\" test_str \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:12:4\nactual:     \"Iloveyouthreethousand\"\nexpected:   \"Iloveyouthreethousand1143553000\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:13:4\nactual:     \"AvengersAssemble\"\nexpected:   \"AvengersAssemble124\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:14:4\nactual:     \"Itsourpathtoseethingsdothings\"\nexpected:   \"Itsourpathtoseethingsdothings11121314151617\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (regexp-replace* #rx\"[0-9]+\" test_str \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:12:4\nactual:     \"Iloveyouthreethousand\"\nexpected:   \"Iloveyouthreethousand1143553000\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:13:4\nactual:     \"AvengersAssemble\"\nexpected:   \"AvengersAssemble124\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:14:4\nactual:     \"Itsourpathtoseethingsdothings\"\nexpected:   \"Itsourpathtoseethingsdothings11121314151617\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (regexp-replace* #rx\"[0-9]+\" test_str \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:12:4\nactual:     \"Iloveyouthreethousand\"\nexpected:   \"Iloveyouthreethousand1143553000\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:13:4\nactual:     \"AvengersAssemble\"\nexpected:   \"AvengersAssemble124\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:14:4\nactual:     \"Itsourpathtoseethingsdothings\"\nexpected:   \"Itsourpathtoseethingsdothings11121314151617\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (regexp-replace* #rx\"[0-9]\" test_str \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpxdh7t512.rkt:12:4\nactual:     \"Iloveyouthreethousand\"\nexpected:   \"Iloveyouthreethousand1143553000\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpxdh7t512.rkt:13:4\nactual:     \"AvengersAssemble\"\nexpected:   \"AvengersAssemble124\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpxdh7t512.rkt:14:4\nactual:     \"Itsourpathtoseethingsdothings\"\nexpected:   \"Itsourpathtoseethingsdothings11121314151617\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (regexp-replace* #rx\"[0-9]+\" test_str \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:12:4\nactual:     \"Iloveyouthreethousand\"\nexpected:   \"Iloveyouthreethousand1143553000\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:13:4\nactual:     \"AvengersAssemble\"\nexpected:   \"AvengersAssemble124\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:14:4\nactual:     \"Itsourpathtoseethingsdothings\"\nexpected:   \"Itsourpathtoseethingsdothings11121314151617\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (regexp-replace* #rx\"[0-9]+\" test_str \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:12:4\nactual:     \"Iloveyouthreethousand\"\nexpected:   \"Iloveyouthreethousand1143553000\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:13:4\nactual:     \"AvengersAssemble\"\nexpected:   \"AvengersAssemble124\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:14:4\nactual:     \"Itsourpathtoseethingsdothings\"\nexpected:   \"Itsourpathtoseethingsdothings11121314151617\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (regexp-replace* #rx\"[0-9]+\" test_str \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:12:4\nactual:     \"Iloveyouthreethousand\"\nexpected:   \"Iloveyouthreethousand1143553000\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:13:4\nactual:     \"AvengersAssemble\"\nexpected:   \"AvengersAssemble124\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:14:4\nactual:     \"Itsourpathtoseethingsdothings\"\nexpected:   \"Itsourpathtoseethingsdothings11121314151617\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (string-join\n   (append (filter (lambda (x) (not (number? x))) (string-&gt;list test_str))\n           (filter (lambda (x) (number? x)) (string-&gt;list test_str)))\n   \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123029,
      "stdout": "",
      "stderr": "/tmp/tmp8jo417e4.rkt:6:50: read-syntax: expected a `)` to close `(`\n  possible cause: indentation suggests a missing `)` before line 7\n  context...:\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:186:17: body\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:183:2: wrap-internal\n   /work/arjunguha-research-group/software/racket/collects/racket/../syntax/module-reader.rkt:67:9: wrap-internal/wrapper\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (regexp-replace* #rx\"[0-9]+\" test_str \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:12:4\nactual:     \"Iloveyouthreethousand\"\nexpected:   \"Iloveyouthreethousand1143553000\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:13:4\nactual:     \"AvengersAssemble\"\nexpected:   \"AvengersAssemble124\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:14:4\nactual:     \"Itsourpathtoseethingsdothings\"\nexpected:   \"Itsourpathtoseethingsdothings11121314151617\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (regexp-replace* #rx\"[0-9]+\" test_str \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:12:4\nactual:     \"Iloveyouthreethousand\"\nexpected:   \"Iloveyouthreethousand1143553000\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:13:4\nactual:     \"AvengersAssemble\"\nexpected:   \"AvengersAssemble124\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:14:4\nactual:     \"Itsourpathtoseethingsdothings\"\nexpected:   \"Itsourpathtoseethingsdothings11121314151617\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (string-append (regexp-replace* #rx\"[0-9]\" test_str \"\")\n                 (regexp-replace* #rx\"[^0-9]\" test_str \"\")))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (regexp-replace* #rx\"[0-9]\" test_str \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpxdh7t512.rkt:12:4\nactual:     \"Iloveyouthreethousand\"\nexpected:   \"Iloveyouthreethousand1143553000\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpxdh7t512.rkt:13:4\nactual:     \"AvengersAssemble\"\nexpected:   \"AvengersAssemble124\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpxdh7t512.rkt:14:4\nactual:     \"Itsourpathtoseethingsdothings\"\nexpected:   \"Itsourpathtoseethingsdothings11121314151617\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (regexp-replace* #rx\"[0-9]+\" test_str \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:12:4\nactual:     \"Iloveyouthreethousand\"\nexpected:   \"Iloveyouthreethousand1143553000\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:13:4\nactual:     \"AvengersAssemble\"\nexpected:   \"AvengersAssemble124\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:14:4\nactual:     \"Itsourpathtoseethingsdothings\"\nexpected:   \"Itsourpathtoseethingsdothings11121314151617\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (regexp-replace* #rx\"[0-9]+\" test_str \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:12:4\nactual:     \"Iloveyouthreethousand\"\nexpected:   \"Iloveyouthreethousand1143553000\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:13:4\nactual:     \"AvengersAssemble\"\nexpected:   \"AvengersAssemble124\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:14:4\nactual:     \"Itsourpathtoseethingsdothings\"\nexpected:   \"Itsourpathtoseethingsdothings11121314151617\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (regexp-replace* #rx\"[0-9]+\" test_str \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:12:4\nactual:     \"Iloveyouthreethousand\"\nexpected:   \"Iloveyouthreethousand1143553000\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:13:4\nactual:     \"AvengersAssemble\"\nexpected:   \"AvengersAssemble124\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:14:4\nactual:     \"Itsourpathtoseethingsdothings\"\nexpected:   \"Itsourpathtoseethingsdothings11121314151617\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (regexp-replace* #rx\"[0-9]+\" test_str \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:12:4\nactual:     \"Iloveyouthreethousand\"\nexpected:   \"Iloveyouthreethousand1143553000\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:13:4\nactual:     \"AvengersAssemble\"\nexpected:   \"AvengersAssemble124\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:14:4\nactual:     \"Itsourpathtoseethingsdothings\"\nexpected:   \"Itsourpathtoseethingsdothings11121314151617\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (regexp-replace* #rx\"[0-9]+\" test_str \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:12:4\nactual:     \"Iloveyouthreethousand\"\nexpected:   \"Iloveyouthreethousand1143553000\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:13:4\nactual:     \"AvengersAssemble\"\nexpected:   \"AvengersAssemble124\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:14:4\nactual:     \"Itsourpathtoseethingsdothings\"\nexpected:   \"Itsourpathtoseethingsdothings11121314151617\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (regexp-replace* #rx\"[0-9]\" test_str \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpxdh7t512.rkt:12:4\nactual:     \"Iloveyouthreethousand\"\nexpected:   \"Iloveyouthreethousand1143553000\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpxdh7t512.rkt:13:4\nactual:     \"AvengersAssemble\"\nexpected:   \"AvengersAssemble124\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpxdh7t512.rkt:14:4\nactual:     \"Itsourpathtoseethingsdothings\"\nexpected:   \"Itsourpathtoseethingsdothings11121314151617\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (string-join\n   (append (filter (lambda (x) (not (number? x))) (string-&gt;list test_str))\n           (filter (lambda (x) (number? x)) (string-&gt;list test_str)))\n   \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123029,
      "stdout": "",
      "stderr": "/tmp/tmp8jo417e4.rkt:6:50: read-syntax: expected a `)` to close `(`\n  possible cause: indentation suggests a missing `)` before line 7\n  context...:\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:186:17: body\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:183:2: wrap-internal\n   /work/arjunguha-research-group/software/racket/collects/racket/../syntax/module-reader.rkt:67:9: wrap-internal/wrapper\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (regexp-replace* #rx\"[0-9]+\" test_str \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:12:4\nactual:     \"Iloveyouthreethousand\"\nexpected:   \"Iloveyouthreethousand1143553000\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:13:4\nactual:     \"AvengersAssemble\"\nexpected:   \"AvengersAssemble124\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:14:4\nactual:     \"Itsourpathtoseethingsdothings\"\nexpected:   \"Itsourpathtoseethingsdothings11121314151617\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (regexp-replace* #rx\"[0-9]+\" test_str \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:12:4\nactual:     \"Iloveyouthreethousand\"\nexpected:   \"Iloveyouthreethousand1143553000\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:13:4\nactual:     \"AvengersAssemble\"\nexpected:   \"AvengersAssemble124\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:14:4\nactual:     \"Itsourpathtoseethingsdothings\"\nexpected:   \"Itsourpathtoseethingsdothings11121314151617\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (string-append\n   (regexp-replace* #rx\"[0-9]+\" test_str \"\")\n   (regexp-replace* #rx\"[^0-9]+\" test_str \"\")))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123030,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (regexp-replace* #rx\"[0-9]+\" test_str \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:12:4\nactual:     \"Iloveyouthreethousand\"\nexpected:   \"Iloveyouthreethousand1143553000\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:13:4\nactual:     \"AvengersAssemble\"\nexpected:   \"AvengersAssemble124\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:14:4\nactual:     \"Itsourpathtoseethingsdothings\"\nexpected:   \"Itsourpathtoseethingsdothings11121314151617\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (regexp-replace* #rx\"[0-9]+\" test_str \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:12:4\nactual:     \"Iloveyouthreethousand\"\nexpected:   \"Iloveyouthreethousand1143553000\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:13:4\nactual:     \"AvengersAssemble\"\nexpected:   \"AvengersAssemble124\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:14:4\nactual:     \"Itsourpathtoseethingsdothings\"\nexpected:   \"Itsourpathtoseethingsdothings11121314151617\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (string-join\n   (append (filter (lambda (x) (not (char-numeric? x))) (string-&gt;list test_str))\n           (filter (lambda (x) (char-numeric? x)) (string-&gt;list test_str)))\n   \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123029,
      "stdout": "",
      "stderr": "/tmp/tmp6sdsrl_p.rkt:6:56: read-syntax: expected a `)` to close `(`\n  possible cause: indentation suggests a missing `)` before line 7\n  context...:\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:186:17: body\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:183:2: wrap-internal\n   /work/arjunguha-research-group/software/racket/collects/racket/../syntax/module-reader.rkt:67:9: wrap-internal/wrapper\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (regexp-replace* #rx\"[0-9]+\" test_str \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:12:4\nactual:     \"Iloveyouthreethousand\"\nexpected:   \"Iloveyouthreethousand1143553000\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:13:4\nactual:     \"AvengersAssemble\"\nexpected:   \"AvengersAssemble124\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:14:4\nactual:     \"Itsourpathtoseethingsdothings\"\nexpected:   \"Itsourpathtoseethingsdothings11121314151617\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (regexp-replace* #rx\"[0-9]+\" test_str \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:12:4\nactual:     \"Iloveyouthreethousand\"\nexpected:   \"Iloveyouthreethousand1143553000\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:13:4\nactual:     \"AvengersAssemble\"\nexpected:   \"AvengersAssemble124\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:14:4\nactual:     \"Itsourpathtoseethingsdothings\"\nexpected:   \"Itsourpathtoseethingsdothings11121314151617\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (regexp-replace* #rx\"[0-9]+\" test_str \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:12:4\nactual:     \"Iloveyouthreethousand\"\nexpected:   \"Iloveyouthreethousand1143553000\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:13:4\nactual:     \"AvengersAssemble\"\nexpected:   \"AvengersAssemble124\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:14:4\nactual:     \"Itsourpathtoseethingsdothings\"\nexpected:   \"Itsourpathtoseethingsdothings11121314151617\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (string-append (regexp-replace* #rx\"[0-9]\" test_str \"\")\n                 (regexp-replace* #rx\"[^0-9]\" test_str \"\")))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (regexp-replace* #rx\"[0-9]+\" test_str \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:12:4\nactual:     \"Iloveyouthreethousand\"\nexpected:   \"Iloveyouthreethousand1143553000\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:13:4\nactual:     \"AvengersAssemble\"\nexpected:   \"AvengersAssemble124\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:14:4\nactual:     \"Itsourpathtoseethingsdothings\"\nexpected:   \"Itsourpathtoseethingsdothings11121314151617\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (regexp-replace* #rx\"[0-9]+\" test_str \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:12:4\nactual:     \"Iloveyouthreethousand\"\nexpected:   \"Iloveyouthreethousand1143553000\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:13:4\nactual:     \"AvengersAssemble\"\nexpected:   \"AvengersAssemble124\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:14:4\nactual:     \"Itsourpathtoseethingsdothings\"\nexpected:   \"Itsourpathtoseethingsdothings11121314151617\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (string-join\n   (append (filter (lambda (x) (not (char-numeric? x))) (string->list test_str))\n           (filter (lambda (x) (char-numeric? x)) (string->list test_str)))\n   \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123030,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmppik7pgw0.rkt:15:4\n\nstring-join: contract violation\n  expected: (listof string?)\n  given: '(#\\I #\\l #\\o #\\v #\\e #\\y #\\o #\\u #\\t #\\h #\\r #\\e #\\e #\\t #\\h #\\o #\\u #\\s #\\a #\\n #\\d #\\1 #\\1 #\\4 #\\3 #\\5 #\\5 #\\3 #\\0 #\\0 #\\0)\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmppik7pgw0.rkt:16:4\n\nstring-join: contract violation\n  expected: (listof string?)\n  given: '(#\\A #\\v #\\e #\\n #\\g #\\e #\\r #\\s #\\A #\\s #\\s #\\e #\\m #\\b #\\l #\\e #\\1 #\\2 #\\4)\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmppik7pgw0.rkt:17:4\n\nstring-join: contract violation\n  expected: (listof string?)\n  given: '(#\\I #\\t #\\s #\\o #\\u #\\r #\\p #\\a #\\t #\\h #\\t #\\o #\\s #\\e #\\e #\\t #\\h #\\i #\\n #\\g #\\s #\\d #\\o #\\t #\\h #\\i #\\n #\\g #\\s #\\1 #\\1 #\\1 #\\2 #\\1 #\\3 #\\1 #\\4 #\\1 #\\5 #\\1 #\\6 #\\1 #\\7)\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (let loop ([i 0] [result '()])\n    (cond [(= i (string-length test_str)) (apply string (reverse result))]\n          [(char-numeric? (string-ref test_str i)) (loop (+ i 1) (cons (string-ref test_str i) result))]\n          [else (loop (+ i 1) (cons (string-ref test_str i) result))])))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123030,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp24tb11li.rkt:15:4\nactual:     \"I1love143you55three3000thousand\"\nexpected:   \"Iloveyouthreethousand1143553000\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp24tb11li.rkt:16:4\nactual:     \"Avengers124Assemble\"\nexpected:   \"AvengersAssemble124\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp24tb11li.rkt:17:4\nactual:     \"Its11our12path13to14see15things16do17things\"\nexpected:   \"Itsourpathtoseethingsdothings11121314151617\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (string-join\n   (append (filter (lambda (x) (not (number? x))) (string-&gt;list test_str))\n           (filter (lambda (x) (number? x)) (string-&gt;list test_str)))\n   \"\"))\n</code>\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123029,
      "stdout": "",
      "stderr": "/tmp/tmpk6gtqxpe.rkt:6:50: read-syntax: expected a `)` to close `(`\n  possible cause: indentation suggests a missing `)` before line 7\n  context...:\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:186:17: body\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:183:2: wrap-internal\n   /work/arjunguha-research-group/software/racket/collects/racket/../syntax/module-reader.rkt:67:9: wrap-internal/wrapper\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (regexp-replace* #rx\"[0-9]+\" test_str \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:12:4\nactual:     \"Iloveyouthreethousand\"\nexpected:   \"Iloveyouthreethousand1143553000\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:13:4\nactual:     \"AvengersAssemble\"\nexpected:   \"AvengersAssemble124\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:14:4\nactual:     \"Itsourpathtoseethingsdothings\"\nexpected:   \"Itsourpathtoseethingsdothings11121314151617\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (regexp-replace* #rx\"[0-9]+\" test_str \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:12:4\nactual:     \"Iloveyouthreethousand\"\nexpected:   \"Iloveyouthreethousand1143553000\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:13:4\nactual:     \"AvengersAssemble\"\nexpected:   \"AvengersAssemble124\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:14:4\nactual:     \"Itsourpathtoseethingsdothings\"\nexpected:   \"Itsourpathtoseethingsdothings11121314151617\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (regexp-replace* #rx\"[0-9]\" test_str \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpxdh7t512.rkt:12:4\nactual:     \"Iloveyouthreethousand\"\nexpected:   \"Iloveyouthreethousand1143553000\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpxdh7t512.rkt:13:4\nactual:     \"AvengersAssemble\"\nexpected:   \"AvengersAssemble124\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpxdh7t512.rkt:14:4\nactual:     \"Itsourpathtoseethingsdothings\"\nexpected:   \"Itsourpathtoseethingsdothings11121314151617\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (string-append (regexp-replace* #rx\"[0-9]\" test_str \"\")\n                 (regexp-replace* #rx\"[^0-9]\" test_str \"\")))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (regexp-replace* #rx\"[0-9]+\" test_str \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:12:4\nactual:     \"Iloveyouthreethousand\"\nexpected:   \"Iloveyouthreethousand1143553000\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:13:4\nactual:     \"AvengersAssemble\"\nexpected:   \"AvengersAssemble124\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:14:4\nactual:     \"Itsourpathtoseethingsdothings\"\nexpected:   \"Itsourpathtoseethingsdothings11121314151617\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (string-append (regexp-replace* #rx\"[0-9]\" test_str \"\")\n                 (regexp-replace* #rx\"[^0-9]\" test_str \"\")))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (regexp-replace* #rx\"[0-9]\" test_str \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpxdh7t512.rkt:12:4\nactual:     \"Iloveyouthreethousand\"\nexpected:   \"Iloveyouthreethousand1143553000\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpxdh7t512.rkt:13:4\nactual:     \"AvengersAssemble\"\nexpected:   \"AvengersAssemble124\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpxdh7t512.rkt:14:4\nactual:     \"Itsourpathtoseethingsdothings\"\nexpected:   \"Itsourpathtoseethingsdothings11121314151617\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (regexp-replace* #rx\"[0-9]+\" test_str \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:12:4\nactual:     \"Iloveyouthreethousand\"\nexpected:   \"Iloveyouthreethousand1143553000\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:13:4\nactual:     \"AvengersAssemble\"\nexpected:   \"AvengersAssemble124\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:14:4\nactual:     \"Itsourpathtoseethingsdothings\"\nexpected:   \"Itsourpathtoseethingsdothings11121314151617\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (regexp-replace* #rx\"[0-9]+\" test_str \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:12:4\nactual:     \"Iloveyouthreethousand\"\nexpected:   \"Iloveyouthreethousand1143553000\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:13:4\nactual:     \"AvengersAssemble\"\nexpected:   \"AvengersAssemble124\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:14:4\nactual:     \"Itsourpathtoseethingsdothings\"\nexpected:   \"Itsourpathtoseethingsdothings11121314151617\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (regexp-replace* #rx\"[0-9]+\" test_str \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:12:4\nactual:     \"Iloveyouthreethousand\"\nexpected:   \"Iloveyouthreethousand1143553000\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:13:4\nactual:     \"AvengersAssemble\"\nexpected:   \"AvengersAssemble124\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:14:4\nactual:     \"Itsourpathtoseethingsdothings\"\nexpected:   \"Itsourpathtoseethingsdothings11121314151617\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (regexp-replace* #rx\"[0-9]+\" test_str \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:12:4\nactual:     \"Iloveyouthreethousand\"\nexpected:   \"Iloveyouthreethousand1143553000\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:13:4\nactual:     \"AvengersAssemble\"\nexpected:   \"AvengersAssemble124\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:14:4\nactual:     \"Itsourpathtoseethingsdothings\"\nexpected:   \"Itsourpathtoseethingsdothings11121314151617\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (string-join\n   (append\n    (filter (lambda (x) (not (number? x))) (string->list test_str))\n    (filter (lambda (x) (number? x)) (string->list test_str)))\n   \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123030,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp8b5c0ur3.rkt:16:4\n\nstring-join: contract violation\n  expected: (listof string?)\n  given: '(#\\I #\\1 #\\l #\\o #\\v #\\e #\\1 #\\4 #\\3 #\\y #\\o #\\u #\\5 #\\5 #\\t #\\h #\\r #\\e #\\e #\\3 #\\0 #\\0 #\\0 #\\t #\\h #\\o #\\u #\\s #\\a #\\n #\\d)\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp8b5c0ur3.rkt:17:4\n\nstring-join: contract violation\n  expected: (listof string?)\n  given: '(#\\A #\\v #\\e #\\n #\\g #\\e #\\r #\\s #\\1 #\\2 #\\4 #\\A #\\s #\\s #\\e #\\m #\\b #\\l #\\e)\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp8b5c0ur3.rkt:18:4\n\nstring-join: contract violation\n  expected: (listof string?)\n  given: '(#\\I #\\t #\\s #\\1 #\\1 #\\o #\\u #\\r #\\1 #\\2 #\\p #\\a #\\t #\\h #\\1 #\\3 #\\t #\\o #\\1 #\\4 #\\s #\\e #\\e #\\1 #\\5 #\\t #\\h #\\i #\\n #\\g #\\s #\\1 #\\6 #\\d #\\o #\\1 #\\7 #\\t #\\h #\\i #\\n #\\g #\\s)\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (regexp-replace* #rx\"[0-9]+\" test_str \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:12:4\nactual:     \"Iloveyouthreethousand\"\nexpected:   \"Iloveyouthreethousand1143553000\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:13:4\nactual:     \"AvengersAssemble\"\nexpected:   \"AvengersAssemble124\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:14:4\nactual:     \"Itsourpathtoseethingsdothings\"\nexpected:   \"Itsourpathtoseethingsdothings11121314151617\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (regexp-replace* #rx\"[^0-9]+\" test_str \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123030,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpys9tj00j.rkt:12:4\nactual:     \"1143553000\"\nexpected:   \"Iloveyouthreethousand1143553000\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpys9tj00j.rkt:13:4\nactual:     \"124\"\nexpected:   \"AvengersAssemble124\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpys9tj00j.rkt:14:4\nactual:     \"11121314151617\"\nexpected:   \"Itsourpathtoseethingsdothings11121314151617\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (regexp-replace* #rx\"[0-9]\" test_str \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpxdh7t512.rkt:12:4\nactual:     \"Iloveyouthreethousand\"\nexpected:   \"Iloveyouthreethousand1143553000\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpxdh7t512.rkt:13:4\nactual:     \"AvengersAssemble\"\nexpected:   \"AvengersAssemble124\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpxdh7t512.rkt:14:4\nactual:     \"Itsourpathtoseethingsdothings\"\nexpected:   \"Itsourpathtoseethingsdothings11121314151617\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (regexp-replace* #rx\"[0-9]+\" test_str \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:12:4\nactual:     \"Iloveyouthreethousand\"\nexpected:   \"Iloveyouthreethousand1143553000\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:13:4\nactual:     \"AvengersAssemble\"\nexpected:   \"AvengersAssemble124\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:14:4\nactual:     \"Itsourpathtoseethingsdothings\"\nexpected:   \"Itsourpathtoseethingsdothings11121314151617\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (regexp-replace* #rx\"[0-9]\" test_str \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpxdh7t512.rkt:12:4\nactual:     \"Iloveyouthreethousand\"\nexpected:   \"Iloveyouthreethousand1143553000\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpxdh7t512.rkt:13:4\nactual:     \"AvengersAssemble\"\nexpected:   \"AvengersAssemble124\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpxdh7t512.rkt:14:4\nactual:     \"Itsourpathtoseethingsdothings\"\nexpected:   \"Itsourpathtoseethingsdothings11121314151617\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (regexp-replace* #rx\"[0-9]+\" test_str \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:12:4\nactual:     \"Iloveyouthreethousand\"\nexpected:   \"Iloveyouthreethousand1143553000\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:13:4\nactual:     \"AvengersAssemble\"\nexpected:   \"AvengersAssemble124\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:14:4\nactual:     \"Itsourpathtoseethingsdothings\"\nexpected:   \"Itsourpathtoseethingsdothings11121314151617\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (regexp-replace* #rx\"[0-9]+\" test_str \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:12:4\nactual:     \"Iloveyouthreethousand\"\nexpected:   \"Iloveyouthreethousand1143553000\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:13:4\nactual:     \"AvengersAssemble\"\nexpected:   \"AvengersAssemble124\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:14:4\nactual:     \"Itsourpathtoseethingsdothings\"\nexpected:   \"Itsourpathtoseethingsdothings11121314151617\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (string-append (regexp-replace* #rx\"[0-9]\" test_str \"\")\n                 (regexp-replace* #rx\"[^0-9]\" test_str \"\")))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (regexp-replace* #rx\"[0-9]\" test_str \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpxdh7t512.rkt:12:4\nactual:     \"Iloveyouthreethousand\"\nexpected:   \"Iloveyouthreethousand1143553000\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpxdh7t512.rkt:13:4\nactual:     \"AvengersAssemble\"\nexpected:   \"AvengersAssemble124\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpxdh7t512.rkt:14:4\nactual:     \"Itsourpathtoseethingsdothings\"\nexpected:   \"Itsourpathtoseethingsdothings11121314151617\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (regexp-replace* #rx\"[0-9]+\" test_str \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:12:4\nactual:     \"Iloveyouthreethousand\"\nexpected:   \"Iloveyouthreethousand1143553000\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:13:4\nactual:     \"AvengersAssemble\"\nexpected:   \"AvengersAssemble124\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:14:4\nactual:     \"Itsourpathtoseethingsdothings\"\nexpected:   \"Itsourpathtoseethingsdothings11121314151617\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (string-append (regexp-replace* #rx\"[0-9]\" test_str \"\")\n                 (regexp-replace* #rx\"[^0-9]\" test_str \"\")))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (string-append (regexp-replace* #rx\"[0-9]\" test_str \"\")\n                 (regexp-replace* #rx\"[^0-9]\" test_str \"\")))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (regexp-replace* #rx\"[0-9]\" test_str \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpxdh7t512.rkt:12:4\nactual:     \"Iloveyouthreethousand\"\nexpected:   \"Iloveyouthreethousand1143553000\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpxdh7t512.rkt:13:4\nactual:     \"AvengersAssemble\"\nexpected:   \"AvengersAssemble124\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpxdh7t512.rkt:14:4\nactual:     \"Itsourpathtoseethingsdothings\"\nexpected:   \"Itsourpathtoseethingsdothings11121314151617\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (string-append (regexp-replace* #rx\"[0-9]\" test_str \"\")\n                 (regexp-replace* #rx\"[^0-9]\" test_str \"\")))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (string-append (regexp-replace* #rx\"[0-9]\" test_str \"\")\n                 (regexp-replace* #rx\"[^0-9]\" test_str \"\")))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (regexp-replace* #rx\"[0-9]+\" test_str \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:12:4\nactual:     \"Iloveyouthreethousand\"\nexpected:   \"Iloveyouthreethousand1143553000\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:13:4\nactual:     \"AvengersAssemble\"\nexpected:   \"AvengersAssemble124\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:14:4\nactual:     \"Itsourpathtoseethingsdothings\"\nexpected:   \"Itsourpathtoseethingsdothings11121314151617\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (regexp-replace* #rx\"[0-9]+\" test_str \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:12:4\nactual:     \"Iloveyouthreethousand\"\nexpected:   \"Iloveyouthreethousand1143553000\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:13:4\nactual:     \"AvengersAssemble\"\nexpected:   \"AvengersAssemble124\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:14:4\nactual:     \"Itsourpathtoseethingsdothings\"\nexpected:   \"Itsourpathtoseethingsdothings11121314151617\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (regexp-replace* #rx\"[0-9]+\" test_str \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:12:4\nactual:     \"Iloveyouthreethousand\"\nexpected:   \"Iloveyouthreethousand1143553000\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:13:4\nactual:     \"AvengersAssemble\"\nexpected:   \"AvengersAssemble124\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:14:4\nactual:     \"Itsourpathtoseethingsdothings\"\nexpected:   \"Itsourpathtoseethingsdothings11121314151617\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (regexp-replace* #rx\"[0-9]+\" test_str \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:12:4\nactual:     \"Iloveyouthreethousand\"\nexpected:   \"Iloveyouthreethousand1143553000\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:13:4\nactual:     \"AvengersAssemble\"\nexpected:   \"AvengersAssemble124\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9qil4xey.rkt:14:4\nactual:     \"Itsourpathtoseethingsdothings\"\nexpected:   \"Itsourpathtoseethingsdothings11121314151617\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (string-append (regexp-replace* #rx\"[0-9]\" test_str \"\")\n                 (regexp-replace* #rx\"[^0-9]\" test_str \"\")))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to move all the numbers to the end of the given string.\n(define (move_num test_str)\n  (string-join\n   (append (filter (lambda (x) (not (char-numeric? x))) (string->list test_str))\n           (filter (lambda (x) (char-numeric? x)) (string->list test_str)))\n   \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate move_num))\n    (check-equal? (candidate \"I1love143you55three3000thousand\") \"Iloveyouthreethousand1143553000\")\n    (check-equal? (candidate \"Avengers124Assemble\") \"AvengersAssemble124\")\n    (check-equal? (candidate \"Its11our12path13to14see15things16do17things\") \"Itsourpathtoseethingsdothings11121314151617\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123030,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmppik7pgw0.rkt:15:4\n\nstring-join: contract violation\n  expected: (listof string?)\n  given: '(#\\I #\\l #\\o #\\v #\\e #\\y #\\o #\\u #\\t #\\h #\\r #\\e #\\e #\\t #\\h #\\o #\\u #\\s #\\a #\\n #\\d #\\1 #\\1 #\\4 #\\3 #\\5 #\\5 #\\3 #\\0 #\\0 #\\0)\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmppik7pgw0.rkt:16:4\n\nstring-join: contract violation\n  expected: (listof string?)\n  given: '(#\\A #\\v #\\e #\\n #\\g #\\e #\\r #\\s #\\A #\\s #\\s #\\e #\\m #\\b #\\l #\\e #\\1 #\\2 #\\4)\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmppik7pgw0.rkt:17:4\n\nstring-join: contract violation\n  expected: (listof string?)\n  given: '(#\\I #\\t #\\s #\\o #\\u #\\r #\\p #\\a #\\t #\\h #\\t #\\o #\\s #\\e #\\e #\\t #\\h #\\i #\\n #\\g #\\s #\\d #\\o #\\t #\\h #\\i #\\n #\\g #\\s #\\1 #\\1 #\\1 #\\2 #\\1 #\\3 #\\1 #\\4 #\\1 #\\5 #\\1 #\\6 #\\1 #\\7)\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    }
  ]
}
{
  "name": "mbpp_568_empty_list",
  "language": "rkt",
  "prompt": "#lang racket\n\n;; Write a function to create a list of N empty dictionaries.\n(define (empty_list length)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_568_empty_list.py",
  "prompt_terminology": "reworded",
  "tests": "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate empty_list))\n    (check-equal? (candidate 5) (list #hash() #hash() #hash() #hash() #hash()))\n    (check-equal? (candidate 6) (list #hash() #hash() #hash() #hash() #hash() #hash()))\n    (check-equal? (candidate 7) (list #hash() #hash() #hash() #hash() #hash() #hash() #hash()))\n))\n\n(test-humaneval)",
  "stop_tokens": [
    "\n(define ",
    "\n#|",
    "\n;",
    "\n("
  ],
  "completions": [
    "  (for/list ([i (in-range length)])\n    (make-hash)))\n",
    "  (if (= length 0)\n      '()\n      (cons '() (empty_list (- length 1)))))\n",
    "  (if (= length 0)\n      '()\n      (cons (make-hash) (empty_list (- length 1)))))\n",
    "  (for/list ([i (in-range length)])\n    '()))\n",
    "  (for/list ([i (in-range length)])\n    (make-hash)))\n",
    "  (for/list ([i length])\n    (make-hash)))\n",
    "  (if (= length 0)\n      '()\n      (cons '() (empty_list (- length 1)))))\n",
    "  (if (= length 0)\n      '()\n      (cons (make-hash) (empty_list (- length 1)))))\n",
    "  (for/list ([i (in-range length)])\n    (make-hash)))\n",
    "  (if (= length 0)\n      '()\n      (cons '() (empty_list (- length 1)))))\n",
    "  (for/list ([i (in-range length)])\n    (make-hash)))\n",
    "  (for/list ([i (in-range length)])\n    (make-hash)))\n",
    "  (if (= length 0)\n      '()\n      (cons (make-hash) (empty_list (- length 1)))))\n",
    "  (if (= length 0)\n      '()\n      (cons '() (empty_list (- length 1)))))\n",
    "  (if (= length 0)\n      '()\n      (cons '() (empty_list (- length 1)))))\n",
    "  (for/list ([i (in-range length)])\n    (make-hash)))\n",
    "  (if (= length 0)\n      '()\n      (cons (make-hash) (empty_list (- length 1)))))\n",
    "  (if (= length 0)\n      '()\n      (cons '() (empty_list (- length 1)))))\n",
    "  (for/list ([i (in-range length)])\n    (make-hash)))\n",
    "  (if (= length 0)\n      '()\n      (cons '() (empty_list (- length 1)))))\n"
  ]
}
{
  "name": "mbpp_760_unique_Element",
  "language": "rkt",
  "prompt": "#lang racket\n\n;; Write a rktthon function to check whether a list of numbers contains only one distinct element or not.\n(define (unique_Element arr)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_760_unique_Element.py",
  "prompt_terminology": "reworded",
  "tests": "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate unique_Element))\n    (check-equal? (candidate (list 1 1 1)) #t)\n    (check-equal? (candidate (list 1 2 1 2)) #f)\n    (check-equal? (candidate (list 1 2 3 4 5)) #f)\n))\n\n(test-humaneval)",
  "stop_tokens": [
    "\n(define ",
    "\n#|",
    "\n;",
    "\n("
  ],
  "completions": [
    "  (cond\n    [(empty? arr) #f]\n    [(empty? (rest arr)) #t]\n    [(equal? (first arr) (first (rest arr))) #f]\n    [else (unique_Element (rest arr))]))\n",
    "  (cond ((null? arr) #f)\n        ((null? (cdr arr)) #t)\n        ((equal? (car arr) (cadr arr)) (unique_Element (cdr arr)))\n        (else #f)))\n",
    "  (cond\n    [(empty? arr) #f]\n    [(empty? (cdr arr)) #t]\n    [(equal? (car arr) (cadr arr)) (unique_Element (cdr arr))]\n    [else #f]))\n",
    "  (cond\n    [(empty? arr) #f]\n    [(empty? (cdr arr)) #t]\n    [(equal? (car arr) (cadr arr)) (unique_Element (cdr arr))]\n    [else #f]))\n",
    "  (cond\n    [(empty? arr) #f]\n    [(empty? (cdr arr)) #t]\n    [(= (car arr) (cadr arr)) (unique_Element (cdr arr))]\n    [else #f]))\n",
    "  (cond\n    [(empty? arr) false]\n    [(empty? (rest arr)) true]\n    [else (and (not (member (first arr) (rest arr))) (unique_Element (rest arr)))]))\n",
    "  (cond\n    [(empty? arr) #f]\n    [(= (length arr) 1) #t]\n    [(= (first arr) (second arr)) (unique_Element (rest arr))]\n    [else #f]))\n",
    "  (cond\n    [(empty? arr) #t]\n    [(= (length arr) 1) #t]\n    [(= (length (remove (first arr) arr)) 0) #t]\n    [else #f]))\n",
    "  (cond\n    [(empty? arr) #f]\n    [(empty? (rest arr)) #t]\n    [else (and (not (member (first arr) (rest arr))) (unique_Element (rest arr)))]))\n",
    "  (cond\n    [(empty? arr) #f]\n    [(empty? (rest arr)) #t]\n    [(= (first arr) (first (rest arr))) #f]\n    [else (unique_Element (rest arr))]))\n",
    "  (cond\n    [(empty? arr) #f]\n    [(empty? (cdr arr)) #t]\n    [(equal? (car arr) (cadr arr)) (unique_Element (cdr arr))]\n    [else #f]))\n",
    "  (cond\n    [(null? arr) #f]\n    [(null? (cdr arr)) #t]\n    [(equal? (car arr) (cadr arr)) (unique_Element (cdr arr))]\n    [else #f]))\n",
    "  (cond\n    [(empty? arr) #f]\n    [(empty? (cdr arr)) #t]\n    [(equal? (car arr) (cadr arr)) (unique_Element (cdr arr))]\n    [else #f]))\n",
    "  (if (null? arr)\n      #f\n      (if (null? (cdr arr))\n          #t\n          (if (equal? (car arr) (cadr arr))\n              (unique_Element (cdr arr))\n              #f))))\n",
    "  (cond\n    [(empty? arr) #f]\n    [(empty? (rest arr)) #t]\n    [(equal? (first arr) (first (rest arr))) #f]\n    [else (unique_Element (rest arr))]))\n",
    "  (cond\n    [(empty? arr) #f]\n    [(empty? (cdr arr)) #t]\n    [(equal? (car arr) (cadr arr)) (unique_Element (cdr arr))]\n    [else #f]))\n",
    "  (cond\n    [(empty? arr) #f]\n    [(= (length arr) 1) #t]\n    [(= (length arr) 2) #t]\n    [(= (length arr) 3) #t]\n    [(= (length arr) 4) #t]\n    [(= (length arr) 5) #t]\n    [(= (length arr) 6) #t]\n    [(= (length arr) 7) #t]\n    [(= (length arr) 8) #t]\n    [(= (length arr) 9) #t]\n    [(= (length arr) 10) #t]\n    [(= (length arr) 11) #t]\n    [(= (length arr) 12) #t]\n    [(= (length arr) 13) #t]\n    [(= (length arr) 14) #t]\n    [(= (length arr) 15) #t]\n    [(= (length arr) 16) #t]\n    [(= (length arr) 17) #t]\n    [(= (length arr) 18) #t]\n    [(= (length arr) 19) #t]\n    [(= (length arr) 20) #t]\n    [(= (length arr) 21) #t]\n    [(= (length arr) 22) #t]\n    [(= (length arr) 23) #t]\n    [(= (length arr) 24) #t]\n    [(= (length arr) 25) #t]\n    [(= (length arr) 26) #t]\n    [(= (length arr) 27) #t]\n    [(= (length arr) 28) #t]\n    [(= (length arr) 29) #t]\n    [(= (length arr) 30) #t]\n    [(= (length arr) 31) #t]\n    [(= (length arr) 32) #t]\n    [(= (length arr) 33) #t]\n    [(= (length arr) 34) #t]\n    [(= (length arr) 35) #t]\n    [(= (length arr) 36) #t]\n    [(= (length arr) 37) #t]\n    [(= (length arr) 38) #t]\n    [(=",
    "  (cond\n    [(empty? arr) #f]\n    [(empty? (cdr arr)) #t]\n    [(equal? (car arr) (cadr arr)) (unique_Element (cdr arr))]\n    [else #f]))\n",
    "  (cond\n    [(empty? arr) #f]\n    [(empty? (cdr arr)) #t]\n    [(equal? (car arr) (cadr arr)) (unique_Element (cdr arr))]\n    [else #f]))\n",
    "  (if (null? (cdr arr))\n      #t\n      (if (equal? (car arr) (cadr arr))\n          (unique_Element (cdr arr))\n          #f)))\n"
  ]
}
{
  "name": "mbpp_748_capital_words_spaces",
  "language": "rkt",
  "prompt": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_748_capital_words_spaces.py",
  "prompt_terminology": "reworded",
  "tests": "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
  "stop_tokens": [
    "\n(define ",
    "\n#|",
    "\n;",
    "\n("
  ],
  "results": [
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z]\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (define (capital_words_spaces_helper str1 str2)\n    (cond ((string-empty? str1) str2)\n          ((char-upper-case? (string-ref str1 0))\n           (capital_words_spaces_helper (substring str1 1) (string-append str2 \" \" (string (string-ref str1 0)))))\n          (else (capital_words_spaces_helper (substring str1 1) (string-append str2 (string (string-ref str1 0)))))))\n  (capital_words_spaces_helper str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "/tmp/tmp5297xxyp.rkt:6:12: string-empty?: unbound identifier\n  in: string-empty?\n  location...:\n   /tmp/tmp5297xxyp.rkt:6:12\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z])\" str1 \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z])\" str1 \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z]\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z])\" str1 \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z]\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (define (capital_words_spaces_iter str1 str2)\n    (cond ((null? str1) (string-append str2 \" \"))\n          ((char-upper-case? (car str1)) (capital_words_spaces_iter (cdr str1) (string-append str2 (car str1) \" \")))\n          (else (capital_words_spaces_iter (cdr str1) (string-append str2 (car str1))))))\n  (capital_words_spaces_iter str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpf8xs05t3.rkt:16:4\n\ncar: contract violation\n  expected: pair?\n  given: \"Python\"\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpf8xs05t3.rkt:17:4\n\ncar: contract violation\n  expected: pair?\n  given: \"PythonProgrammingExamples\"\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpf8xs05t3.rkt:18:4\n\ncar: contract violation\n  expected: pair?\n  given: \"GetReadyToBeCodingFreak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z][a-z]+\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpt69led5q.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpt69led5q.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpt69led5q.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z]\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z])\" str1 \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"\\\\b[A-Z][a-z]+\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp85bj2u5g.rkt:13:4\nactual:     \"PythonProgrammingExamples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp85bj2u5g.rkt:14:4\nactual:     \"GetReadyToBeCodingFreak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z]\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z]\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z][a-z]*)\" str1 #:replace \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpb_ima67d.rkt:12:4\n\napplication: procedure does not accept keyword arguments\n  procedure: regexp-replace*\n  arguments...:\n   #rx\"([A-Z][a-z]*)\"\n   \"Python\"\n   #:replace \" \\\\1\"\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpb_ima67d.rkt:13:4\n\napplication: procedure does not accept keyword arguments\n  procedure: regexp-replace*\n  arguments...:\n   #rx\"([A-Z][a-z]*)\"\n   \"PythonProgrammingExamples\"\n   #:replace \" \\\\1\"\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpb_ima67d.rkt:14:4\n\napplication: procedure does not accept keyword arguments\n  procedure: regexp-replace*\n  arguments...:\n   #rx\"([A-Z][a-z]*)\"\n   \"GetReadyToBeCodingFreak\"\n   #:replace \" \\\\1\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z])\" str1 \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z])\" str1 \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z])\" str1 \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z])\" str1 \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z][a-z]+\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpt69led5q.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpt69led5q.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpt69led5q.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (define (capital_words_spaces_helper str1 str2)\n    (cond\n      [(empty? str1) (string-append str2)]\n      [(char-upcase? (first str1)) (capital_words_spaces_helper (rest str1) (string-append str2 (string (first str1)) \" \"))]\n      [else (capital_words_spaces_helper (rest str1) (string-append str2 (string (first str1))))]))\n  (capital_words_spaces_helper str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "/tmp/tmpq7dk63z4.rkt:8:8: char-upcase?: unbound identifier\n  in: char-upcase?\n  location...:\n   /tmp/tmpq7dk63z4.rkt:8:8\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z])\" str1 \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (let ([str2 (string-append str1 \" \")])\n    (for/fold ([str3 \"\"]\n               [i 0])\n        ([j (in-range (string-length str2))])\n      (cond\n        [(char-upper-case? (string-ref str2 j))\n         (string-append str3 (substring str2 i j) \" \")]\n        [else\n         str3]))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpj2jcbgz6.rkt:20:4\n\nresult arity mismatch;\n expected number of values not received\n  expected: 2\n  received: 1\n  in: local-binding form\n  arguments...:\n   \" \"\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpj2jcbgz6.rkt:21:4\n\nresult arity mismatch;\n expected number of values not received\n  expected: 2\n  received: 1\n  in: local-binding form\n  arguments...:\n   \" \"\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpj2jcbgz6.rkt:22:4\n\nresult arity mismatch;\n expected number of values not received\n  expected: 2\n  received: 1\n  in: local-binding form\n  arguments...:\n   \" \"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z]\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z]\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"\\\\b[A-Z][a-z]+\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp85bj2u5g.rkt:13:4\nactual:     \"PythonProgrammingExamples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp85bj2u5g.rkt:14:4\nactual:     \"GetReadyToBeCodingFreak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z])\" str1 \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z]\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"\\\\b[A-Z][a-z]+\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp85bj2u5g.rkt:13:4\nactual:     \"PythonProgrammingExamples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp85bj2u5g.rkt:14:4\nactual:     \"GetReadyToBeCodingFreak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"\\\\b[A-Z][a-z]*\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmptuhc764v.rkt:13:4\nactual:     \"PythonProgrammingExamples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmptuhc764v.rkt:14:4\nactual:     \"GetReadyToBeCodingFreak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z])\" str1 #:replace-backref #rx\" \\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp0s6csc_0.rkt:12:4\n\napplication: procedure does not accept keyword arguments\n  procedure: regexp-replace*\n  arguments...:\n   #rx\"([A-Z])\"\n   \"Python\"\n   #:replace-backref #rx\" \\u0001\"\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp0s6csc_0.rkt:13:4\n\napplication: procedure does not accept keyword arguments\n  procedure: regexp-replace*\n  arguments...:\n   #rx\"([A-Z])\"\n   \"PythonProgrammingExamples\"\n   #:replace-backref #rx\" \\u0001\"\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp0s6csc_0.rkt:14:4\n\napplication: procedure does not accept keyword arguments\n  procedure: regexp-replace*\n  arguments...:\n   #rx\"([A-Z])\"\n   \"GetReadyToBeCodingFreak\"\n   #:replace-backref #rx\" \\u0001\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z])\" str1 \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z]\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z])\" str1 \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z]\" str1 #:replace-function (lambda (m) (string-append \" \" m))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpkotnyasm.rkt:12:4\n\napplication: procedure does not accept keyword arguments\n  procedure: regexp-replace*\n  arguments...:\n   #rx\"[A-Z]\"\n   \"Python\"\n   #:replace-function #<procedure:...tmp/tmpkotnyasm.rkt:5:54>\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpkotnyasm.rkt:13:4\n\napplication: procedure does not accept keyword arguments\n  procedure: regexp-replace*\n  arguments...:\n   #rx\"[A-Z]\"\n   \"PythonProgrammingExamples\"\n   #:replace-function #<procedure:...tmp/tmpkotnyasm.rkt:5:54>\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpkotnyasm.rkt:14:4\n\napplication: procedure does not accept keyword arguments\n  procedure: regexp-replace*\n  arguments...:\n   #rx\"[A-Z]\"\n   \"GetReadyToBeCodingFreak\"\n   #:replace-function #<procedure:...tmp/tmpkotnyasm.rkt:5:54>\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z]\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z])\" str1 \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z]\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z])\" str1 \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z]\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z]\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z]\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z][a-z]*\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpmq4xrkvb.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpmq4xrkvb.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpmq4xrkvb.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z])\" str1 \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z])\" str1 \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z])\" str1 \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z]\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z]\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z])\" str1 \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"\\\\([A-Z]\\\\)\" str1 \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp4stt2iv4.rkt:13:4\nactual:     \"PythonProgrammingExamples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp4stt2iv4.rkt:14:4\nactual:     \"GetReadyToBeCodingFreak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z])\" str1 \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z]\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z]\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z]\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z])\" str1 \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (string-join (map (lambda (x) (if (char-upper-case? (string-ref x 0)) (string-append x \" \") x)) (string-split str1)) \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9rxzcz7p.rkt:12:4\nactual:     \"Python \"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9rxzcz7p.rkt:13:4\nactual:     \"PythonProgrammingExamples \"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9rxzcz7p.rkt:14:4\nactual:     \"GetReadyToBeCodingFreak \"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z])\" str1 \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z]\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z])\" str1 \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z])\" str1 \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z])\" str1 \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (string-join (map (lambda (x) (if (char-upper-case? (string-ref x 0)) (string-append x \" \") x)) (string-split str1)) \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9rxzcz7p.rkt:12:4\nactual:     \"Python \"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9rxzcz7p.rkt:13:4\nactual:     \"PythonProgrammingExamples \"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9rxzcz7p.rkt:14:4\nactual:     \"GetReadyToBeCodingFreak \"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z]\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z]\" str1 #:replace \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpctocmbyd.rkt:12:4\n\napplication: procedure does not accept keyword arguments\n  procedure: regexp-replace*\n  arguments...:\n   #rx\"[A-Z]\"\n   \"Python\"\n   #:replace \" \\\\0\"\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpctocmbyd.rkt:13:4\n\napplication: procedure does not accept keyword arguments\n  procedure: regexp-replace*\n  arguments...:\n   #rx\"[A-Z]\"\n   \"PythonProgrammingExamples\"\n   #:replace \" \\\\0\"\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpctocmbyd.rkt:14:4\n\napplication: procedure does not accept keyword arguments\n  procedure: regexp-replace*\n  arguments...:\n   #rx\"[A-Z]\"\n   \"GetReadyToBeCodingFreak\"\n   #:replace \" \\\\0\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z])\" str1 \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z])\" str1 \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z])\" str1 #:replace \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpycg_l1dg.rkt:12:4\n\napplication: procedure does not accept keyword arguments\n  procedure: regexp-replace*\n  arguments...:\n   #rx\"([A-Z])\"\n   \"Python\"\n   #:replace \" \\\\1\"\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpycg_l1dg.rkt:13:4\n\napplication: procedure does not accept keyword arguments\n  procedure: regexp-replace*\n  arguments...:\n   #rx\"([A-Z])\"\n   \"PythonProgrammingExamples\"\n   #:replace \" \\\\1\"\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpycg_l1dg.rkt:14:4\n\napplication: procedure does not accept keyword arguments\n  procedure: regexp-replace*\n  arguments...:\n   #rx\"([A-Z])\"\n   \"GetReadyToBeCodingFreak\"\n   #:replace \" \\\\1\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z]\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z])\" str1 \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z])\" str1 \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z])\" str1 \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z])\" str1 \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z]\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z])\" str1 \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z])\" str1 \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z][a-z]*\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpmq4xrkvb.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpmq4xrkvb.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpmq4xrkvb.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z][a-z]*)\" str1 #:replace \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpb_ima67d.rkt:12:4\n\napplication: procedure does not accept keyword arguments\n  procedure: regexp-replace*\n  arguments...:\n   #rx\"([A-Z][a-z]*)\"\n   \"Python\"\n   #:replace \" \\\\1\"\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpb_ima67d.rkt:13:4\n\napplication: procedure does not accept keyword arguments\n  procedure: regexp-replace*\n  arguments...:\n   #rx\"([A-Z][a-z]*)\"\n   \"PythonProgrammingExamples\"\n   #:replace \" \\\\1\"\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpb_ima67d.rkt:14:4\n\napplication: procedure does not accept keyword arguments\n  procedure: regexp-replace*\n  arguments...:\n   #rx\"([A-Z][a-z]*)\"\n   \"GetReadyToBeCodingFreak\"\n   #:replace \" \\\\1\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z])\" str1 \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z]\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z][a-z]*)\" str1 #:replace \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpb_ima67d.rkt:12:4\n\napplication: procedure does not accept keyword arguments\n  procedure: regexp-replace*\n  arguments...:\n   #rx\"([A-Z][a-z]*)\"\n   \"Python\"\n   #:replace \" \\\\1\"\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpb_ima67d.rkt:13:4\n\napplication: procedure does not accept keyword arguments\n  procedure: regexp-replace*\n  arguments...:\n   #rx\"([A-Z][a-z]*)\"\n   \"PythonProgrammingExamples\"\n   #:replace \" \\\\1\"\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpb_ima67d.rkt:14:4\n\napplication: procedure does not accept keyword arguments\n  procedure: regexp-replace*\n  arguments...:\n   #rx\"([A-Z][a-z]*)\"\n   \"GetReadyToBeCodingFreak\"\n   #:replace \" \\\\1\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z])\" str1 \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z][a-z]*)\" str1 \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_pa2wbi5.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_pa2wbi5.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_pa2wbi5.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z])\" str1 \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #px\"[A-Z][a-z]*\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpnnzqmsh5.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpnnzqmsh5.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpnnzqmsh5.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (let ([str2 (string-append str1 \" \")])\n    (for/fold ([str3 \"\"]\n               [i 0])\n        ([j (in-range (string-length str2))])\n      (if (and (char-upper-case? (string-ref str2 i))\n               (char-lower-case? (string-ref str2 j)))\n          (string-append str3 (string-append \" \" (string-ref str2 j)))\n          (string-append str3 (string-ref str2 j)))\n      (string-append str3 (string-ref str2 j)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpe6xl6v5n.rkt:20:4\n\nstring-append: contract violation\n  expected: string?\n  given: #\\P\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpe6xl6v5n.rkt:21:4\n\nstring-append: contract violation\n  expected: string?\n  given: #\\P\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpe6xl6v5n.rkt:22:4\n\nstring-append: contract violation\n  expected: string?\n  given: #\\G\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z])\" str1 \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z])\" str1 #:replace \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpycg_l1dg.rkt:12:4\n\napplication: procedure does not accept keyword arguments\n  procedure: regexp-replace*\n  arguments...:\n   #rx\"([A-Z])\"\n   \"Python\"\n   #:replace \" \\\\1\"\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpycg_l1dg.rkt:13:4\n\napplication: procedure does not accept keyword arguments\n  procedure: regexp-replace*\n  arguments...:\n   #rx\"([A-Z])\"\n   \"PythonProgrammingExamples\"\n   #:replace \" \\\\1\"\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpycg_l1dg.rkt:14:4\n\napplication: procedure does not accept keyword arguments\n  procedure: regexp-replace*\n  arguments...:\n   #rx\"([A-Z])\"\n   \"GetReadyToBeCodingFreak\"\n   #:replace \" \\\\1\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z]\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z][a-z]*\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpmq4xrkvb.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpmq4xrkvb.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpmq4xrkvb.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (let ([str2 (string-append str1 \" \")])\n    (for/fold ([str3 \"\"]\n               [i 0])\n        ([j (in-naturals)])\n      (let ([c (string-ref str2 j)])\n        (if (and (char-upper-case? c)\n                 (not (char-upper-case? (string-ref str2 (+ j 1)))))\n            (string-append str3 (substring str2 i j) \" \")\n            str3)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp7i4bn23z.rkt:20:4\n\nresult arity mismatch;\n expected number of values not received\n  expected: 2\n  received: 1\n  in: local-binding form\n  arguments...:\n   \" \"\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp7i4bn23z.rkt:21:4\n\nresult arity mismatch;\n expected number of values not received\n  expected: 2\n  received: 1\n  in: local-binding form\n  arguments...:\n   \" \"\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp7i4bn23z.rkt:22:4\n\nresult arity mismatch;\n expected number of values not received\n  expected: 2\n  received: 1\n  in: local-binding form\n  arguments...:\n   \" \"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z]\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z]\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z])\" str1 \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z][a-z]*)\" str1 #:replace \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpb_ima67d.rkt:12:4\n\napplication: procedure does not accept keyword arguments\n  procedure: regexp-replace*\n  arguments...:\n   #rx\"([A-Z][a-z]*)\"\n   \"Python\"\n   #:replace \" \\\\1\"\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpb_ima67d.rkt:13:4\n\napplication: procedure does not accept keyword arguments\n  procedure: regexp-replace*\n  arguments...:\n   #rx\"([A-Z][a-z]*)\"\n   \"PythonProgrammingExamples\"\n   #:replace \" \\\\1\"\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpb_ima67d.rkt:14:4\n\napplication: procedure does not accept keyword arguments\n  procedure: regexp-replace*\n  arguments...:\n   #rx\"([A-Z][a-z]*)\"\n   \"GetReadyToBeCodingFreak\"\n   #:replace \" \\\\1\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z][a-z]*\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpmq4xrkvb.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpmq4xrkvb.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpmq4xrkvb.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z]\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z]\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z]\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z])\" str1 \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z])\" str1 \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (cond\n    [(empty? str1) empty]\n    [(char-upcase? (first str1))\n     (cons (first str1)\n           (cons #\\space\n                 (capital_words_spaces (rest str1))))]\n    [else (cons (first str1)\n                (capital_words_spaces (rest str1)))]))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "/tmp/tmpa8d2ye44.rkt:7:6: char-upcase?: unbound identifier\n  in: char-upcase?\n  location...:\n   /tmp/tmpa8d2ye44.rkt:7:6\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (string-join (map (lambda (x) (if (char-upper-case? (string-ref x 0)) (string-append x \" \") x)) (string-split str1 #\\Space)) \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp7bouzfge.rkt:12:4\n\nstring-split: contract violation\n  expected: (or/c string? regexp?)\n  given: #\\space\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp7bouzfge.rkt:13:4\n\nstring-split: contract violation\n  expected: (or/c string? regexp?)\n  given: #\\space\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp7bouzfge.rkt:14:4\n\nstring-split: contract violation\n  expected: (or/c string? regexp?)\n  given: #\\space\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"\\\\([A-Z]\\\\)\" str1 \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp4stt2iv4.rkt:13:4\nactual:     \"PythonProgrammingExamples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp4stt2iv4.rkt:14:4\nactual:     \"GetReadyToBeCodingFreak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z])\" str1 \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z])\" str1 #:replace \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpycg_l1dg.rkt:12:4\n\napplication: procedure does not accept keyword arguments\n  procedure: regexp-replace*\n  arguments...:\n   #rx\"([A-Z])\"\n   \"Python\"\n   #:replace \" \\\\1\"\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpycg_l1dg.rkt:13:4\n\napplication: procedure does not accept keyword arguments\n  procedure: regexp-replace*\n  arguments...:\n   #rx\"([A-Z])\"\n   \"PythonProgrammingExamples\"\n   #:replace \" \\\\1\"\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpycg_l1dg.rkt:14:4\n\napplication: procedure does not accept keyword arguments\n  procedure: regexp-replace*\n  arguments...:\n   #rx\"([A-Z])\"\n   \"GetReadyToBeCodingFreak\"\n   #:replace \" \\\\1\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z])\" str1 \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z])\" str1 \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z]\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z])\" str1 \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z][a-z]*)\" str1 #:replace \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpb_ima67d.rkt:12:4\n\napplication: procedure does not accept keyword arguments\n  procedure: regexp-replace*\n  arguments...:\n   #rx\"([A-Z][a-z]*)\"\n   \"Python\"\n   #:replace \" \\\\1\"\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpb_ima67d.rkt:13:4\n\napplication: procedure does not accept keyword arguments\n  procedure: regexp-replace*\n  arguments...:\n   #rx\"([A-Z][a-z]*)\"\n   \"PythonProgrammingExamples\"\n   #:replace \" \\\\1\"\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpb_ima67d.rkt:14:4\n\napplication: procedure does not accept keyword arguments\n  procedure: regexp-replace*\n  arguments...:\n   #rx\"([A-Z][a-z]*)\"\n   \"GetReadyToBeCodingFreak\"\n   #:replace \" \\\\1\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z]\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z][a-z]+\" str1 (lambda (x) (string-append \" \" x))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp97ntlban.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp97ntlban.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp97ntlban.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z]\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z])\" str1 \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z][a-z]*)\" str1 #:replace \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpb_ima67d.rkt:12:4\n\napplication: procedure does not accept keyword arguments\n  procedure: regexp-replace*\n  arguments...:\n   #rx\"([A-Z][a-z]*)\"\n   \"Python\"\n   #:replace \" \\\\1\"\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpb_ima67d.rkt:13:4\n\napplication: procedure does not accept keyword arguments\n  procedure: regexp-replace*\n  arguments...:\n   #rx\"([A-Z][a-z]*)\"\n   \"PythonProgrammingExamples\"\n   #:replace \" \\\\1\"\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpb_ima67d.rkt:14:4\n\napplication: procedure does not accept keyword arguments\n  procedure: regexp-replace*\n  arguments...:\n   #rx\"([A-Z][a-z]*)\"\n   \"GetReadyToBeCodingFreak\"\n   #:replace \" \\\\1\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z])\" str1 \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z])\" str1 \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z]\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z])\" str1 \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z])\" str1 \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"\\\\b[A-Z][a-z]*\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmptuhc764v.rkt:13:4\nactual:     \"PythonProgrammingExamples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmptuhc764v.rkt:14:4\nactual:     \"GetReadyToBeCodingFreak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z])\" str1 \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z][a-z]+\" str1 (lambda (s) (string-append \" \" s))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpys74ofs3.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpys74ofs3.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpys74ofs3.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z])\" str1 \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z][a-z]+\" str1 (lambda (x) (string-append \" \" x))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp97ntlban.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp97ntlban.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp97ntlban.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z]\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z]\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z]\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"\\\\B[A-Z]\" str1 \" \\\\&\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpsj6453dl.rkt:13:4\nactual:     \"PythonProgrammingExamples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpsj6453dl.rkt:14:4\nactual:     \"GetReadyToBeCodingFreak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z][a-z]+\" str1 (lambda (x) (string-append x \" \"))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpizdxowtx.rkt:12:4\nactual:     \"Python \"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpizdxowtx.rkt:13:4\nactual:     \"Python Programming Examples \"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpizdxowtx.rkt:14:4\nactual:     \"Get Ready To Be Coding Freak \"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z]\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z]\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z])\" str1 \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z]\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z][a-z]*)\" str1 #:replace \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpb_ima67d.rkt:12:4\n\napplication: procedure does not accept keyword arguments\n  procedure: regexp-replace*\n  arguments...:\n   #rx\"([A-Z][a-z]*)\"\n   \"Python\"\n   #:replace \" \\\\1\"\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpb_ima67d.rkt:13:4\n\napplication: procedure does not accept keyword arguments\n  procedure: regexp-replace*\n  arguments...:\n   #rx\"([A-Z][a-z]*)\"\n   \"PythonProgrammingExamples\"\n   #:replace \" \\\\1\"\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpb_ima67d.rkt:14:4\n\napplication: procedure does not accept keyword arguments\n  procedure: regexp-replace*\n  arguments...:\n   #rx\"([A-Z][a-z]*)\"\n   \"GetReadyToBeCodingFreak\"\n   #:replace \" \\\\1\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z]\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z])\" str1 \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z]\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z]\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z]\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z]\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z][a-z]*)\" str1 \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_pa2wbi5.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_pa2wbi5.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_pa2wbi5.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z]\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z][a-z]+)\" str1 #:replace \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpygvh533t.rkt:12:4\n\napplication: procedure does not accept keyword arguments\n  procedure: regexp-replace*\n  arguments...:\n   #rx\"([A-Z][a-z]+)\"\n   \"Python\"\n   #:replace \" \\\\1\"\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpygvh533t.rkt:13:4\n\napplication: procedure does not accept keyword arguments\n  procedure: regexp-replace*\n  arguments...:\n   #rx\"([A-Z][a-z]+)\"\n   \"PythonProgrammingExamples\"\n   #:replace \" \\\\1\"\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpygvh533t.rkt:14:4\n\napplication: procedure does not accept keyword arguments\n  procedure: regexp-replace*\n  arguments...:\n   #rx\"([A-Z][a-z]+)\"\n   \"GetReadyToBeCodingFreak\"\n   #:replace \" \\\\1\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"\\\\b[A-Z][a-z]+\\\\b\" str1 \" \\\\0 \"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpdnx6ah4_.rkt:13:4\nactual:     \"PythonProgrammingExamples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpdnx6ah4_.rkt:14:4\nactual:     \"GetReadyToBeCodingFreak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z]\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z])\" str1 \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z])\" str1 \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z][a-z]+\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpt69led5q.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpt69led5q.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpt69led5q.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z]\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z][a-z]+)\" str1 #:replace \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpygvh533t.rkt:12:4\n\napplication: procedure does not accept keyword arguments\n  procedure: regexp-replace*\n  arguments...:\n   #rx\"([A-Z][a-z]+)\"\n   \"Python\"\n   #:replace \" \\\\1\"\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpygvh533t.rkt:13:4\n\napplication: procedure does not accept keyword arguments\n  procedure: regexp-replace*\n  arguments...:\n   #rx\"([A-Z][a-z]+)\"\n   \"PythonProgrammingExamples\"\n   #:replace \" \\\\1\"\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpygvh533t.rkt:14:4\n\napplication: procedure does not accept keyword arguments\n  procedure: regexp-replace*\n  arguments...:\n   #rx\"([A-Z][a-z]+)\"\n   \"GetReadyToBeCodingFreak\"\n   #:replace \" \\\\1\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z])\" str1 \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"\\\\B[A-Z]\" str1 \" \\\\&\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpsj6453dl.rkt:13:4\nactual:     \"PythonProgrammingExamples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpsj6453dl.rkt:14:4\nactual:     \"GetReadyToBeCodingFreak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z]\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z][a-z]*)\" str1 \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_pa2wbi5.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_pa2wbi5.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_pa2wbi5.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z])\" str1 \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (string-join\n   (map (lambda (x) (if (char-upper-case? (string-ref x 0)) (string-append x \" \") x))\n        (string-split str1 #\\space))\n   #\\space))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpslcj4qlw.rkt:15:4\n\nstring-split: contract violation\n  expected: (or/c string? regexp?)\n  given: #\\space\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpslcj4qlw.rkt:16:4\n\nstring-split: contract violation\n  expected: (or/c string? regexp?)\n  given: #\\space\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpslcj4qlw.rkt:17:4\n\nstring-split: contract violation\n  expected: (or/c string? regexp?)\n  given: #\\space\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z][a-z]*\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpmq4xrkvb.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpmq4xrkvb.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpmq4xrkvb.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z]\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z][a-z]*)\" str1 #:replace \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpb_ima67d.rkt:12:4\n\napplication: procedure does not accept keyword arguments\n  procedure: regexp-replace*\n  arguments...:\n   #rx\"([A-Z][a-z]*)\"\n   \"Python\"\n   #:replace \" \\\\1\"\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpb_ima67d.rkt:13:4\n\napplication: procedure does not accept keyword arguments\n  procedure: regexp-replace*\n  arguments...:\n   #rx\"([A-Z][a-z]*)\"\n   \"PythonProgrammingExamples\"\n   #:replace \" \\\\1\"\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpb_ima67d.rkt:14:4\n\napplication: procedure does not accept keyword arguments\n  procedure: regexp-replace*\n  arguments...:\n   #rx\"([A-Z][a-z]*)\"\n   \"GetReadyToBeCodingFreak\"\n   #:replace \" \\\\1\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z])\" str1 \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (define (capital_words_spaces_iter str1 str2)\n    (if (empty? str1)\n        str2\n        (if (char-upper-case? (string-ref str1 0))\n            (capital_words_spaces_iter (substring str1 1) (string-append str2 \" \" (string (string-ref str1 0))))\n            (capital_words_spaces_iter (substring str1 1) (string-append str2 (string (string-ref str1 0)))))))\n  (capital_words_spaces_iter str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123056,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp_fjb549n.rkt:18:4\n\nstring-ref: index is out of range for empty string\n  index: 0\n  string: \"\"\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp_fjb549n.rkt:19:4\n\nstring-ref: index is out of range for empty string\n  index: 0\n  string: \"\"\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp_fjb549n.rkt:20:4\n\nstring-ref: index is out of range for empty string\n  index: 0\n  string: \"\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z]\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z])\" str1 \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z])\" str1 \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z][a-z]*)\" str1 #:replace \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpb_ima67d.rkt:12:4\n\napplication: procedure does not accept keyword arguments\n  procedure: regexp-replace*\n  arguments...:\n   #rx\"([A-Z][a-z]*)\"\n   \"Python\"\n   #:replace \" \\\\1\"\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpb_ima67d.rkt:13:4\n\napplication: procedure does not accept keyword arguments\n  procedure: regexp-replace*\n  arguments...:\n   #rx\"([A-Z][a-z]*)\"\n   \"PythonProgrammingExamples\"\n   #:replace \" \\\\1\"\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpb_ima67d.rkt:14:4\n\napplication: procedure does not accept keyword arguments\n  procedure: regexp-replace*\n  arguments...:\n   #rx\"([A-Z][a-z]*)\"\n   \"GetReadyToBeCodingFreak\"\n   #:replace \" \\\\1\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z]\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z])\" str1 \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z]\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z]\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z]\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z][a-z]+\" str1 (lambda (x) (string-append \" \" x))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp97ntlban.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp97ntlban.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp97ntlban.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z][a-z]*\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpmq4xrkvb.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpmq4xrkvb.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpmq4xrkvb.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (string-join (map (lambda (x) (if (char-upper-case? (string-ref x 0)) (string-append x \" \") x)) (string-split str1 #\\space)) \" \"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123056,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpjaj47dwu.rkt:12:4\n\nstring-split: contract violation\n  expected: (or/c string? regexp?)\n  given: #\\space\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpjaj47dwu.rkt:13:4\n\nstring-split: contract violation\n  expected: (or/c string? regexp?)\n  given: #\\space\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpjaj47dwu.rkt:14:4\n\nstring-split: contract violation\n  expected: (or/c string? regexp?)\n  given: #\\space\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z])\" str1 \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z]\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z]\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"\\\\b[A-Z][a-z]+\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp85bj2u5g.rkt:13:4\nactual:     \"PythonProgrammingExamples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp85bj2u5g.rkt:14:4\nactual:     \"GetReadyToBeCodingFreak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z][a-z]+\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpt69led5q.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpt69led5q.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpt69led5q.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z])([a-z])\" str1 #:replace \"\\\\1 \\\\2\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123056,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp406u232q.rkt:12:4\n\napplication: procedure does not accept keyword arguments\n  procedure: regexp-replace*\n  arguments...:\n   #rx\"([A-Z])([a-z])\"\n   \"Python\"\n   #:replace \"\\\\1 \\\\2\"\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp406u232q.rkt:13:4\n\napplication: procedure does not accept keyword arguments\n  procedure: regexp-replace*\n  arguments...:\n   #rx\"([A-Z])([a-z])\"\n   \"PythonProgrammingExamples\"\n   #:replace \"\\\\1 \\\\2\"\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp406u232q.rkt:14:4\n\napplication: procedure does not accept keyword arguments\n  procedure: regexp-replace*\n  arguments...:\n   #rx\"([A-Z])([a-z])\"\n   \"GetReadyToBeCodingFreak\"\n   #:replace \"\\\\1 \\\\2\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z][a-z]*)\" str1 \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_pa2wbi5.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_pa2wbi5.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_pa2wbi5.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z][a-z]*)\" str1 \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_pa2wbi5.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_pa2wbi5.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_pa2wbi5.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z]\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z][a-z]+\" str1 (lambda (x) (string-append \" \" x))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp97ntlban.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp97ntlban.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp97ntlban.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (let ([str2 (string-append str1 \" \")])\n    (for/fold ([str3 \"\"]\n               [i 0])\n        ([j (in-naturals)])\n      (if (char-upper-case? (string-ref str2 i))\n          (string-append str3 (string-append (substring str2 i j) \" \"))\n          (string-append str3 (substring str2 i j))))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123056,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpoqirdxvd.rkt:18:4\n\nresult arity mismatch;\n expected number of values not received\n  expected: 2\n  received: 1\n  in: local-binding form\n  arguments...:\n   \" \"\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpoqirdxvd.rkt:19:4\n\nresult arity mismatch;\n expected number of values not received\n  expected: 2\n  received: 1\n  in: local-binding form\n  arguments...:\n   \" \"\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpoqirdxvd.rkt:20:4\n\nresult arity mismatch;\n expected number of values not received\n  expected: 2\n  received: 1\n  in: local-binding form\n  arguments...:\n   \" \"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z]\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z]\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z]\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"\\\\([A-Z]\\\\)\" str1 \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp4stt2iv4.rkt:13:4\nactual:     \"PythonProgrammingExamples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp4stt2iv4.rkt:14:4\nactual:     \"GetReadyToBeCodingFreak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (define (capital_words_spaces_iter str1 acc)\n    (if (string-empty? str1)\n        acc\n        (if (char-upper-case? (string-ref str1 0))\n            (capital_words_spaces_iter (substring str1 1) (string-append acc \" \" (string (string-ref str1 0))))\n            (capital_words_spaces_iter (substring str1 1) (string-append acc (string (string-ref str1 0)))))))\n  (capital_words_spaces_iter str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123056,
      "stdout": "",
      "stderr": "/tmp/tmp84pnmjab.rkt:6:9: string-empty?: unbound identifier\n  in: string-empty?\n  location...:\n   /tmp/tmp84pnmjab.rkt:6:9\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z])\" str1 \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z]\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z]\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z])\" str1 \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"([A-Z])\" str1 \" \\\\1\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv1eqpdq7.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z][a-z]+\" str1 (lambda (x) (string-append \" \" x))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123055,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp97ntlban.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp97ntlban.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp97ntlban.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z]\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (let loop ([str str1]\n             [result '()])\n    (cond\n      [(empty? str) (list->string (reverse result))]\n      [(char-upcase? (first str))\n       (loop (rest str)\n             (cons (first str)\n                   (cons #\\space\n                         result)))]\n      [else (loop (rest str)\n                  (cons (first str)\n                        result))])))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123056,
      "stdout": "",
      "stderr": "/tmp/tmp11o2qj9q.rkt:9:8: char-upcase?: unbound identifier\n  in: char-upcase?\n  location...:\n   /tmp/tmp11o2qj9q.rkt:9:8\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (regexp-replace* #rx\"[A-Z]\" str1 \" \\\\0\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1665510428,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:12:4\nactual:     \" Python\"\nexpected:   \"Python\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:13:4\nactual:     \" Python Programming Examples\"\nexpected:   \"Python Programming Examples\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_fjuwjx3.rkt:14:4\nactual:     \" Get Ready To Be Coding Freak\"\nexpected:   \"Get Ready To Be Coding Freak\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to put spaces between words starting with capital letters in a given string.\n(define (capital_words_spaces str1)\n  (let loop ([str str1] [result '()])\n    (cond\n      [(empty? str) (apply string (reverse result))]\n      [(char-upcase? (first str)) (loop (rest str) (cons (first str) (cons #\\space result)))]\n      [else (loop (rest str) (cons (first str) result))])))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate capital_words_spaces))\n    (check-equal? (candidate \"Python\") \"Python\")\n    (check-equal? (candidate \"PythonProgrammingExamples\") \"Python Programming Examples\")\n    (check-equal? (candidate \"GetReadyToBeCodingFreak\") \"Get Ready To Be Coding Freak\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123056,
      "stdout": "",
      "stderr": "/tmp/tmpgm3ubp4i.rkt:8:8: char-upcase?: unbound identifier\n  in: char-upcase?\n  location...:\n   /tmp/tmpgm3ubp4i.rkt:8:8\n",
      "exit_code": 1,
      "status": "Exception"
    }
  ]
}
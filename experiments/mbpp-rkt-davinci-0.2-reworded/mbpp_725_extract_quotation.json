{
  "name": "mbpp_725_extract_quotation",
  "language": "rkt",
  "prompt": "#lang racket\n\n;; Write a function to extract values between quotation marks \" \" of the given string.\n(define (extract_quotation text1)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_725_extract_quotation.py",
  "prompt_terminology": "reworded",
  "tests": "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate extract_quotation))\n    (check-equal? (candidate \"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\") (list \"A53\" \"multi\" \"Processor\"))\n    (check-equal? (candidate \"Cast your \"favorite\" entertainment \"apps\"\") (list \"favorite\" \"apps\"))\n    (check-equal? (candidate \"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\") (list \"4k Ultra HD\" \"HDR 10\"))\n    (check-equal? (candidate \"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\") (list ))\n))\n\n(test-humaneval)",
  "stop_tokens": [
    "\n(define ",
    "\n#|",
    "\n;",
    "\n("
  ],
  "completions": [
    "  (regexp-match* #rx\"\\\"([^\\\"]*)\\\"\" text1))\n",
    "  (regexp-match* #rx\"\\\"(.*?)\\\"\" text1))\n",
    "  (regexp-match* #rx\"\\\"(.*)\\\"\" text1))\n",
    "  (regexp-match* #px\"\\\"(.*?)\\\"\" text1))\n",
    "  (regexp-match* #rx\"\\\"(.*?)\\\"\" text1))\n",
    "  (regexp-match* #rx\"\\\"(.*?)\\\"\" text1))\n",
    "  (regexp-match* #px\"\\\"(.*?)\\\"\" text1))\n",
    "  (regexp-match* #rx\"\\\"(.*?)\\\"\" text1))\n",
    "  (regexp-match* #rx\"\\\"(.*?)\\\"\" text1))\n",
    "  (regexp-match* #rx\"\\\"(.*?)\\\"\" text1))\n",
    "  (regexp-match* #rx\"\\\"(.*?)\\\"\" text1))\n",
    "  (regexp-match* #rx\"\\\"(.*?)\\\"\" text1))\n",
    "  (regexp-match* #rx\"\\\"(.*?)\\\"\" text1))\n",
    "  (regexp-match* #rx\"\\\"(.*?)\\\"\" text1))\n",
    "  (regexp-match* #rx\"\\\"(.*?)\\\"\" text1))\n",
    "  (regexp-match* #rx\"\\\"(.*?)\\\"\" text1))\n",
    "  (regexp-match* #rx\"\\\"(.*?)\\\"\" text1))\n",
    "  (regexp-match* #rx\"\\\"(.*?)\\\"\" text1))\n",
    "  (regexp-match* #rx\"\\\"(.*?)\\\"\" text1))\n",
    "  (regexp-match* #rx\"\\\"(.*?)\\\"\" text1))\n"
  ]
}
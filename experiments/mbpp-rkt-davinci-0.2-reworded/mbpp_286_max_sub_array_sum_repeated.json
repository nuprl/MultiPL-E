{
  "name": "mbpp_286_max_sub_array_sum_repeated",
  "language": "rkt",
  "prompt": "#lang racket\n\n;; Write a function to find the largest sum of a contiguous list in the modified list which is formed by repeating the given list k times.\n(define (max_sub_array_sum_repeated a n k)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_286_max_sub_array_sum_repeated.py",
  "prompt_terminology": "reworded",
  "tests": "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_sub_array_sum_repeated))\n    (check-equal? (candidate (list 10 20 -30 -1) 4 3) 30)\n    (check-equal? (candidate (list -1 10 20) 3 2) 59)\n    (check-equal? (candidate (list -1 -2 -3) 3 3) -1)\n))\n\n(test-humaneval)",
  "stop_tokens": [
    "\n(define ",
    "\n#|",
    "\n;",
    "\n("
  ],
  "completions": [
    "  (define (max_sub_array_sum a n)\n    (define (max_sub_array_sum_helper a n max_sum)\n      (if (= n 1)\n          (max max_sum (car a))\n          (max_sub_array_sum_helper (cdr a) (- n 1) (max max_sum (+ (car a) (car (cdr a)))))))\n    (max_sub_array_sum_helper a n 0))\n  (define (max_sub_array_sum_repeated_helper a n k max_sum)\n    (if (= k 1)\n        (max_sub_array_sum a n)\n        (max_sub_array_sum_repeated_helper a n (- k 1) (max max_sum (max_sub_array_sum a n)))))\n  (max_sub_array_sum_repeated_helper a n k 0))\n",
    "  (define (max_sub_array_sum a n)\n    (define (max_sub_array_sum_helper a n max_sum curr_sum)\n      (cond ((= n 1) (max max_sum curr_sum))\n            ((&lt; (car a) 0) (max_sub_array_sum_helper (cdr a) (- n 1) (max max_sum curr_sum) 0))\n            (else (max_sub_array_sum_helper (cdr a) (- n 1) max_sum (+ curr_sum (car a))))))\n    (max_sub_array_sum_helper a n 0 0))\n  (max_sub_array_sum a (* n k)))\n</code>\n",
    "  (define (max_sub_array_sum a n)\n    (define (max_sub_array_sum_helper a n max_sum curr_sum)\n      (cond ((= n 0) max_sum)\n            ((&gt; (+ curr_sum (list-ref a 0)) 0)\n             (max_sub_array_sum_helper (cdr a) (- n 1)\n                                       (max max_sum (+ curr_sum (list-ref a 0)))\n                                       (+ curr_sum (list-ref a 0))))\n            (else (max_sub_array_sum_helper (cdr a) (- n 1)\n                                            (max max_sum (list-ref a 0))\n                                            0))))\n    (max_sub_array_sum_helper a n (list-ref a 0) 0))\n  (define (max_sub_array_sum_repeated_helper a n k max_sum curr_sum)\n    (cond ((= k 1) (max_sub_array_sum a n))\n          ((&gt; (+ curr_sum (list-ref a 0)) 0)\n           (max_sub_array_sum_repeated_helper (cdr a) (- n 1) k\n                                              (max max_sum (+ curr_sum (list-ref a 0)))\n                                              (+ curr_sum (list-ref a 0))))\n          (else (max_sub_array_sum_repeated_helper (cdr a) (- n 1) k\n                                                   (max max_sum (list-ref a 0))\n                                                   0))))\n  (max_sub_array_sum_repeated_helper a n k (list-ref a 0) 0))\n",
    "  (define (max_sub_array_sum_repeated_helper a n k max_sum)\n    (if (zero? k)\n        max_sum\n        (let ([max_sum_new (max_sub_array_sum a n)])\n          (if (&gt; max_sum_new max_sum)\n              (max_sub_array_sum_repeated_helper a n (- k 1) max_sum_new)\n              (max_sub_array_sum_repeated_helper a n (- k 1) max_sum)))))\n  (max_sub_array_sum_repeated_helper a n k (max_sub_array_sum a n)))\n",
    "  (let ([a (sort a <)])\n    (let loop ([i 0] [j (add1 (quotient n 2))] [sum 0])\n      (cond\n        [(= i j) sum]\n        [else\n         (let ([sum (add1 sum (list-ref a i) (list-ref a (- n i)))])\n           (loop (add1 i) j sum))]))))\n",
    "  (define (max_sub_array_sum_repeated_helper a n k max_sum)\n    (cond\n      [(= n 0) max_sum]\n      [else\n       (let ([cur_sum (sum_sub_array a n)])\n         (max_sub_array_sum_repeated_helper a (- n 1) k (max max_sum cur_sum)))]))\n  (max_sub_array_sum_repeated_helper a n k 0))\n",
    "  (define (max_sub_array_sum a n)\n    (define (max_sub_array_sum_helper a n max_ending_here max_so_far)\n      (cond\n        [(= n 0) max_so_far]\n        [(> max_ending_here 0)\n         (max_sub_array_sum_helper (cdr a) (- n 1) (+ max_ending_here (car a)) (max max_so_far (+ max_ending_here (car a))))]\n        [else\n         (max_sub_array_sum_helper (cdr a) (- n 1) (car a) (max max_so_far (car a)))]))\n    (max_sub_array_sum_helper a n 0 0))\n  (define (max_sub_array_sum_repeated_helper a n k max_so_far)\n    (cond\n      [(= k 1) (max_sub_array_sum a n)]\n      [else\n       (max_sub_array_sum_repeated_helper a n (- k 1) (max max_so_far (max_sub_array_sum a n)))]))\n  (max_sub_array_sum_repeated_helper a n k 0))\n",
    "  (let ([a (append a a)])\n    (max-sub-array-sum a n)))\n",
    "  (define (max_sub_array_sum a n)\n    (define (max_sub_array_sum_helper a n max_sum curr_sum)\n      (if (= n 0)\n          max_sum\n          (let ([curr_sum (+ curr_sum (list-ref a (- n 1)))])\n            (if (&lt; curr_sum 0)\n                (max_sub_array_sum_helper a (- n 1) max_sum 0)\n                (max_sub_array_sum_helper a (- n 1) (max max_sum curr_sum) curr_sum)))))\n    (max_sub_array_sum_helper a n 0 0))\n  (define (max_sub_array_sum_repeated_helper a n k max_sum)\n    (if (= k 0)\n        max_sum\n        (max_sub_array_sum_repeated_helper a n (- k 1) (max max_sum (max_sub_array_sum a n)))))\n  (max_sub_array_sum_repeated_helper a n k 0))\n",
    "  (define (max_sub_array_sum a n)\n    (define (max_sub_array_sum_helper a n sum max-sum)\n      (if (= n 0)\n          max-sum\n          (let ((new-sum (+ sum (car a))))\n            (if (&lt; new-sum 0)\n                (max_sub_array_sum_helper (cdr a) (- n 1) 0 max-sum)\n                (max_sub_array_sum_helper (cdr a) (- n 1) new-sum (max max-sum new-sum))))))\n    (max_sub_array_sum_helper a n 0 0))\n  (define (max_sub_array_sum_repeated_helper a n k max-sum)\n    (if (= k 0)\n        max-sum\n        (max_sub_array_sum_repeated_helper a n (- k 1) (max max-sum (max_sub_array_sum a n)))))\n  (max_sub_array_sum_repeated_helper a n k 0))\n</code>\n",
    "  (define (max_sub_array_sum_repeated-helper a n k sum max-sum)\n    (cond\n      [(= n 0) max-sum]\n      [(>= sum 0)\n       (max_sub_array_sum_repeated-helper a (- n 1) k (+ sum (vector-ref a (- n 1))) (max max-sum sum))]\n      [else\n       (max_sub_array_sum_repeated-helper a (- n 1) k (vector-ref a (- n 1)) (max max-sum (vector-ref a (- n 1))))]))\n  (define (max_sub_array_sum_repeated-helper2 a n k sum max-sum)\n    (cond\n      [(= k 0) max-sum]\n      [(>= sum 0)\n       (max_sub_array_sum_repeated-helper2 a n (- k 1) (+ sum (vector-ref a (- n 1))) (max max-sum sum))]\n      [else\n       (max_sub_array_sum_repeated-helper2 a n (- k 1) (vector-ref a (- n 1)) (max max-sum (vector-ref a (- n 1))))]))\n  (max_sub_array_sum_repeated-helper2 a n k 0 (max_sub_array_sum_repeated-helper a n k 0 0)))\n",
    "  (define (max_sub_array_sum a n)\n    (define (max_sub_array_sum_helper a n max_sum)\n      (if (= n 0)\n          max_sum\n          (let ((sum (+ (car a) max_sum)))\n            (if (&lt; sum 0)\n                (max_sub_array_sum_helper (cdr a) (- n 1) 0)\n                (max_sub_array_sum_helper (cdr a) (- n 1) sum)))))\n    (max_sub_array_sum_helper a n 0))\n  (define (max_sub_array_sum_repeated_helper a n k max_sum)\n    (if (= k 0)\n        max_sum\n        (let ((sum (max_sub_array_sum a n)))\n          (if (&gt; sum max_sum)\n              (max_sub_array_sum_repeated_helper a n (- k 1) sum)\n              (max_sub_array_sum_repeated_helper a n (- k 1) max_sum)))))\n  (max_sub_array_sum_repeated_helper a n k 0))\n",
    "  (let ([max-sum (apply max (map sum (in-naturals n)))]\n        [max-sum-index (apply max-index (map sum (in-naturals n)))])\n    (let loop ([i 0])\n      (if (= i k)\n          max-sum\n          (let ([sum-index (apply max-index (map sum (in-naturals n)))])\n            (if (&gt; (sum (list-ref a sum-index)) max-sum)\n                (set! max-sum (sum (list-ref a sum-index)))\n                (set! max-sum max-sum))\n            (loop (+ i 1)))))))\n",
    "  (define (max_sub_array_sum a n)\n    (define (max_sub_array_sum_helper a n max_sum curr_sum)\n      (cond ((= n 0) max_sum)\n            ((&gt; (+ curr_sum (list-ref a 0)) 0)\n             (max_sub_array_sum_helper (cdr a) (- n 1) (max max_sum (+ curr_sum (list-ref a 0))) (+ curr_sum (list-ref a 0))))\n            (else (max_sub_array_sum_helper (cdr a) (- n 1) (max max_sum (list-ref a 0)) 0))))\n    (max_sub_array_sum_helper a n (list-ref a 0) 0))\n  (define (max_sub_array_sum_repeated_helper a n k max_sum)\n    (cond ((= k 1) (max_sub_array_sum a n))\n          ((&gt; (max_sub_array_sum a n) max_sum)\n           (max_sub_array_sum_repeated_helper a n (- k 1) (max_sub_array_sum a n)))\n          (else (max_sub_array_sum_repeated_helper a n (- k 1) max_sum))))\n  (max_sub_array_sum_repeated_helper a n k (list-ref a 0)))\n</code>\n",
    "  (define (max_sub_array_sum a n)\n    (define (max_sub_array_sum_helper a n max_sum curr_sum)\n      (if (= n 0)\n          max_sum\n          (let ([curr_sum (+ curr_sum (list-ref a 0))])\n            (if (&lt; curr_sum 0)\n                (max_sub_array_sum_helper (cdr a) (- n 1) max_sum 0)\n                (max_sub_array_sum_helper (cdr a) (- n 1) (max max_sum curr_sum) curr_sum)))))\n    (max_sub_array_sum_helper a n 0 0))\n  (define (max_sub_array_sum_repeated_helper a n k max_sum)\n    (if (= k 0)\n        max_sum\n        (max_sub_array_sum_repeated_helper a n (- k 1) (max max_sum (max_sub_array_sum a n)))))\n  (max_sub_array_sum_repeated_helper a n k 0))\n",
    "  (define (max_sub_array_sum a n)\n    (define (max_sub_array_sum_helper a n max_sum curr_sum)\n      (cond\n        [(= n 0) max_sum]\n        [(> curr_sum max_sum) (max_sub_array_sum_helper a (- n 1) curr_sum (+ curr_sum (list-ref a (- n 1))))]\n        [else (max_sub_array_sum_helper a (- n 1) max_sum (+ curr_sum (list-ref a (- n 1))))]))\n    (max_sub_array_sum_helper a n 0 0))\n  (define (max_sub_array_sum_repeated_helper a n k max_sum curr_sum)\n    (cond\n      [(= k 0) max_sum]\n      [(> curr_sum max_sum) (max_sub_array_sum_repeated_helper a n (- k 1) curr_sum (+ curr_sum (max_sub_array_sum a n)))]\n      [else (max_sub_array_sum_repeated_helper a n (- k 1) max_sum (+ curr_sum (max_sub_array_sum a n)))]))\n  (max_sub_array_sum_repeated_helper a n k 0 0))\n",
    "  (define (max_sub_array_sum a n)\n    (define (max_sub_array_sum_helper a n max_so_far max_ending_here)\n      (cond\n        [(= n 0) max_so_far]\n        [else\n         (define max_ending_here (max 0 (+ max_ending_here (vector-ref a (- n 1)))))\n         (define max_so_far (max max_so_far max_ending_here))\n         (max_sub_array_sum_helper a (- n 1) max_so_far max_ending_here)]))\n    (max_sub_array_sum_helper a n 0 0))\n  (define (max_sub_array_sum_repeated_helper a n k max_so_far)\n    (cond\n      [(= k 0) max_so_far]\n      [else\n       (define max_so_far (max max_so_far (max_sub_array_sum a n)))\n       (max_sub_array_sum_repeated_helper a n (- k 1) max_so_far)]))\n  (max_sub_array_sum_repeated_helper a n k 0))\n",
    "  (define (max_sub_array_sum_repeated_helper a n k)\n    (define (max_sub_array_sum_repeated_helper_helper a n k sum max_sum)\n      (cond\n        [(= n 0) (values sum max_sum)]\n        [(= k 0) (values sum max_sum)]\n        [else (max_sub_array_sum_repeated_helper_helper a (- n 1) (- k 1) (+ sum (list-ref a (- n 1))) (if (&gt; sum max_sum) sum max_sum))]))\n    (max_sub_array_sum_repeated_helper_helper a n k 0 0))\n  (apply max (max_sub_array_sum_repeated_helper a n k)))\n",
    "  (define (max_sub_array_sum_repeated_helper a n k sum max-sum)\n    (cond [(= n 0) max-sum]\n          [else\n           (define new-sum (+ sum (vector-ref a (- n 1))))\n           (define new-max-sum (if (&gt; new-sum max-sum) new-sum max-sum))\n           (define new-max-sum (if (&lt; new-sum 0) 0 new-max-sum))\n           (max_sub_array_sum_repeated_helper a (- n 1) k new-sum new-max-sum)]))\n  (max_sub_array_sum_repeated_helper a n k 0 0))\n",
    "  (define (max_sub_array_sum_repeated_helper a n k)\n    (define (max_sub_array_sum_repeated_helper_helper a n k)\n      (define (max_sub_array_sum_repeated_helper_helper_helper a n k)\n        (define (max_sub_array_sum_repeated_helper_helper_helper_helper a n k)\n          (define (max_sub_array_sum_repeated_helper_helper_helper_helper_helper a n k)\n            (define (max_sub_array_sum_repeated_helper_helper_helper_helper_helper_helper a n k)\n              (define (max_sub_array_sum_repeated_helper_helper_helper_helper_helper_helper_helper a n k)\n                (define (max_sub_array_sum_repeated_helper_helper_helper_helper_helper_helper_helper_helper a n k)\n                  (define (max_sub_array_sum_repeated_helper_helper_helper_helper_helper_helper_helper_helper_helper a n k)\n                    (define (max_sub_array_sum_repeated_helper_helper_helper_helper_helper_helper_helper_helper_helper_helper a n k)\n                      (define (max_sub_array_sum_repeated_helper_helper_helper_helper_helper_helper_helper_helper_helper_helper_helper a n k)\n                        (define (max_sub_array_sum_repeated_helper_helper_helper_helper_helper_helper_helper_helper_helper_helper_helper_helper a n k)\n                          (define (max_sub_array_sum_repeated_helper_helper_helper_helper_helper_helper_helper_helper_helper_helper_helper_",
    "  (define (max_sub_array_sum_repeated_helper a n k max_sum)\n    (cond\n      [(= n 0) max_sum]\n      [else\n       (let ([max_sum_curr (apply max (map (lambda (i) (apply + (sublist a i (+ i n)))) (range 0 (- (length a) n))))])\n         (max_sub_array_sum_repeated_helper a (- n 1) k (max max_sum max_sum_curr)))]))\n  (max_sub_array_sum_repeated_helper a n k 0))\n",
    "  (define (max_sub_array_sum a n)\n    (define (max_sub_array_sum_helper a n max_sum)\n      (if (= n 1)\n          (max max_sum (car a))\n          (let ((max_sum_ending_here (apply + (take a n))))\n            (max_sub_array_sum_helper a (- n 1) (max max_sum max_sum_ending_here)))))\n    (max_sub_array_sum_helper a n 0))\n  (define (max_sub_array_sum_repeated_helper a n k max_sum)\n    (if (= k 1)\n        (max_sub_array_sum a n)\n        (let ((max_sum_ending_here (apply + (take a n))))\n          (max_sub_array_sum_repeated_helper a (- n 1) (- k 1) (max max_sum max_sum_ending_here)))))\n  (max_sub_array_sum_repeated_helper a n k 0))\n",
    "  (define (max_sub_array_sum a n)\n    (define (max_sub_array_sum_helper a n max_sum cur_sum)\n      (cond\n        [(= n 0) max_sum]\n        [(< cur_sum 0) (max_sub_array_sum_helper (cdr a) (- n 1) max_sum (car a))]\n        [else (max_sub_array_sum_helper (cdr a) (- n 1) (max max_sum cur_sum) (+ cur_sum (car a)))]))\n    (max_sub_array_sum_helper a n (car a) (car a)))\n  (define (max_sub_array_sum_repeated_helper a n k max_sum)\n    (cond\n      [(= k 1) (max_sub_array_sum a n)]\n      [else (max_sub_array_sum_repeated_helper a n (- k 1) (max max_sum (max_sub_array_sum a n)))]))\n  (max_sub_array_sum_repeated_helper a n k (max_sub_array_sum a n)))\n",
    "  (define (max_sub_array_sum a n)\n    (define (max_sub_array_sum_helper a n max_sum curr_sum)\n      (cond\n        [(= n 0) max_sum]\n        [(> curr_sum max_sum) (max_sub_array_sum_helper a (- n 1) curr_sum (+ curr_sum (list-ref a (- n 1))))]\n        [else (max_sub_array_sum_helper a (- n 1) max_sum (+ curr_sum (list-ref a (- n 1))))]))\n    (max_sub_array_sum_helper a n 0 0))\n  (define (max_sub_array_sum_repeated_helper a n k max_sum curr_sum)\n    (cond\n      [(= k 0) max_sum]\n      [(> curr_sum max_sum) (max_sub_array_sum_repeated_helper a n (- k 1) curr_sum (+ curr_sum (max_sub_array_sum a n)))]\n      [else (max_sub_array_sum_repeated_helper a n (- k 1) max_sum (+ curr_sum (max_sub_array_sum a n)))]))\n  (max_sub_array_sum_repeated_helper a n k 0 0))\n",
    "  (define (max_sub_array_sum a n)\n    (define (max_sub_array_sum_helper a n max_sum)\n      (if (= n 0)\n          max_sum\n          (let ([max_sum (if (&gt; (car a) (+ (car a) max_sum))\n                            (car a)\n                            (+ (car a) max_sum))])\n            (max_sub_array_sum_helper (cdr a) (- n 1) max_sum))))\n    (max_sub_array_sum_helper a n 0))\n  (define (max_sub_array_sum_repeated_helper a n k max_sum)\n    (if (= k 0)\n        max_sum\n        (let ([max_sum (if (&gt; (max_sub_array_sum a n) max_sum)\n                          (max_sub_array_sum a n)\n                          max_sum)])\n          (max_sub_array_sum_repeated_helper a n (- k 1) max_sum))))\n  (max_sub_array_sum_repeated_helper a n k 0))\n</code>\n",
    "  (define (max_sub_array_sum_repeated-helper a n k sum max-sum)\n    (if (= n 0)\n        max-sum\n        (max_sub_array_sum_repeated-helper a (- n 1) k (+ sum (vector-ref a (- n 1))) (max max-sum sum))))\n  (max_sub_array_sum_repeated-helper a n k 0 0))\n",
    "  (define (max_sub_array_sum_repeated_helper a n k)\n    (cond\n      [(= n 1) (max_sub_array_sum a n)]\n      [(= k 1) (max_sub_array_sum a n)]\n      [else\n       (let ([m (quotient n 2)])\n         (let ([left (max_sub_array_sum_repeated_helper a m k)]\n               [right (max_sub_array_sum_repeated_helper (array-ref a m) (- n m) k)])\n           (let ([left-right (max_sub_array_sum_repeated_helper a n 1)])\n             (max left (max right left-right)))))]))\n  (max_sub_array_sum_repeated_helper a n k))\n",
    "  (define (max_sub_array_sum_repeated_helper a n k sum max-sum)\n    (cond\n      [(= n 0) max-sum]\n      [(>= sum 0) (max_sub_array_sum_repeated_helper a (- n 1) k (+ sum (vector-ref a (- n 1))) (max max-sum sum))]\n      [else (max_sub_array_sum_repeated_helper a (- n 1) k (vector-ref a (- n 1)) (max max-sum sum))]))\n  (max_sub_array_sum_repeated_helper a n k 0 0))\n",
    "  (define (max_sub_array_sum a n)\n    (define (max_sub_array_sum_helper a n max_sum)\n      (if (zero? n)\n          max_sum\n          (let ((max_sum_ending_here (+ (car a) max_sum)))\n            (if (&lt; max_sum_ending_here 0)\n                (max_sub_array_sum_helper (cdr a) (- n 1) 0)\n                (max_sub_array_sum_helper (cdr a) (- n 1) max_sum_ending_here)))))\n    (define (max_sub_array_sum_helper_2 a n max_sum)\n      (if (zero? n)\n          max_sum\n          (let ((max_sum_ending_here (+ (car a) max_sum)))\n            (if (&lt; max_sum_ending_here 0)\n                (max_sub_array_sum_helper_2 (cdr a) (- n 1) 0)\n                (max_sub_array_sum_helper_2 (cdr a) (- n 1) max_sum_ending_here)))))\n    (define (max_sub_array_sum_helper_3 a n max_sum)\n      (if (zero? n)\n          max_sum\n          (let ((max_sum_ending_here (+ (car a) max_sum)))\n            (if (&lt; max_sum_ending_here 0)\n                (max_sub_array_sum_helper_3 (cdr a) (- n 1) 0)\n                (max_sub_array_sum_helper_3 (cdr a) (- n 1) max_sum_ending_here)))))\n    (define (max_sub_array_sum_helper_4 a n max_sum)\n      (if (zero? n)\n          max_sum\n          (let ((max_sum_ending_here (+ (car a) max_sum)))\n            (if (&lt; max_sum_ending_here 0)\n                (max_sub_array_sum_helper_4 (cdr a) (- n 1) 0)\n                (max",
    "  (define (max_sub_array_sum a n)\n    (define (max_sub_array_sum_helper a n max_sum curr_sum)\n      (cond\n        [(= n 0) max_sum]\n        [(> curr_sum max_sum) (max_sub_array_sum_helper a (- n 1) curr_sum (+ curr_sum (list-ref a (- n 1))))]\n        [else (max_sub_array_sum_helper a (- n 1) max_sum (+ curr_sum (list-ref a (- n 1))))]))\n    (max_sub_array_sum_helper a n 0 0))\n  (define (max_sub_array_sum_repeated_helper a n k max_sum curr_sum)\n    (cond\n      [(= k 0) max_sum]\n      [(> curr_sum max_sum) (max_sub_array_sum_repeated_helper a n (- k 1) curr_sum (+ curr_sum (max_sub_array_sum a n)))]\n      [else (max_sub_array_sum_repeated_helper a n (- k 1) max_sum (+ curr_sum (max_sub_array_sum a n)))]))\n  (max_sub_array_sum_repeated_helper a n k 0 0))\n",
    "  (define (max_sub_array_sum_repeated_helper a n k sum max_sum)\n    (cond ((= n 0) max_sum)\n          ((= k 0) max_sum)\n          (else (max_sub_array_sum_repeated_helper a n (- k 1) (+ sum (list-ref a n)) (max max_sum sum)))))\n  (max_sub_array_sum_repeated_helper a (- (length a) 1) k 0 0))\n",
    "  (define (max_sub_array_sum a n)\n    (define (max_sub_array_sum_helper a n max_sum cur_sum)\n      (if (= n 0)\n          max_sum\n          (let ([cur_num (car a)])\n            (max_sub_array_sum_helper (cdr a) (- n 1) (max max_sum (+ cur_sum cur_num)) (max 0 (+ cur_sum cur_num))))))\n    (max_sub_array_sum_helper a n 0 0))\n  (define (max_sub_array_sum_repeated_helper a n k max_sum)\n    (if (= k 0)\n        max_sum\n        (max_sub_array_sum_repeated_helper a n (- k 1) (max max_sum (max_sub_array_sum a n)))))\n  (max_sub_array_sum_repeated_helper a n k 0))\n",
    "  (define (max_sub_array_sum a n)\n    (define (max_sub_array_sum_helper a n max_so_far max_ending_here)\n      (cond\n        [(= n 0) max_so_far]\n        [else\n         (define max_ending_here (+ max_ending_here (list-ref a (- n 1))))\n         (define max_so_far (max max_so_far max_ending_here))\n         (define max_ending_here (max 0 max_ending_here))\n         (max_sub_array_sum_helper a (- n 1) max_so_far max_ending_here)]))\n    (max_sub_array_sum_helper a n 0 0))\n  (define (max_sub_array_sum_repeated_helper a n k max_so_far)\n    (cond\n      [(= k 0) max_so_far]\n      [else\n       (define max_so_far (max max_so_far (max_sub_array_sum a n)))\n       (max_sub_array_sum_repeated_helper a n (- k 1) max_so_far)]))\n  (max_sub_array_sum_repeated_helper a n k 0))\n",
    "  (define (max_sub_array_sum_repeated_helper a n k max_sum)\n    (cond\n      [(zero? n) max_sum]\n      [(zero? k) max_sum]\n      [else\n       (let ([max_sum_here (max_sub_array_sum a n)])\n         (max_sub_array_sum_repeated_helper a n (- k 1) (max max_sum max_sum_here)))]))\n  (max_sub_array_sum_repeated_helper a n k 0))\n",
    "  (define (max_sub_array_sum a n)\n    (define (max_sub_array_sum_aux a n max_sum max_sum_ending_here)\n      (if (= n 0)\n          max_sum\n          (let* ([max_sum_ending_here (+ max_sum_ending_here (list-ref a (- n 1)))]\n                 [max_sum_ending_here (if (&lt; max_sum_ending_here 0) 0 max_sum_ending_here)]\n                 [max_sum (if (&gt; max_sum_ending_here max_sum) max_sum_ending_here max_sum)])\n            (max_sub_array_sum_aux a (- n 1) max_sum max_sum_ending_here))))\n    (max_sub_array_sum_aux a n 0 0))\n  (define (max_sub_array_sum_repeated_aux a n k max_sum)\n    (if (= k 0)\n        max_sum\n        (let* ([max_sum (max_sub_array_sum a n)]\n               [max_sum (if (&gt; max_sum max_sum) max_sum max_sum)])\n          (max_sub_array_sum_repeated_aux a n (- k 1) max_sum))))\n  (max_sub_array_sum_repeated_aux a n k 0))\n</code>\nThe above code is working fine. But I am not sure if it is the most efficient way to solve this problem.\nI am looking for a review of my code.\n\n\nA:\n\nI don't know if this is the most efficient way to solve this problem, but it's a lot simpler than your code.\n<code>(define (max-sub-array-sum-repeated a n k)\n  (define (max-sub-array-sum a n)\n    (define (max-sub-array-sum-aux a n max-sum max-sum-ending-here)\n      (if (= n 0)\n          max-sum\n          (let* ([max-sum-ending-here (+ max-sum-ending-here (list-ref a (- n 1)))]\n                 [max-sum-ending",
    "  (define (max_sub_array_sum_repeated_helper a n k max_sum)\n    (cond\n      [(= n 0) max_sum]\n      [else\n       (define cur_sum (apply + (take a k)))\n       (define new_max_sum (max max_sum cur_sum))\n       (max_sub_array_sum_repeated_helper (rest a) (- n 1) k new_max_sum)]))\n  (max_sub_array_sum_repeated_helper a n k 0))\n",
    "  (define (max_sub_array_sum_repeated_helper a n k)\n    (define (max_sub_array_sum_repeated_helper_helper a n k)\n      (define (max_sub_array_sum_repeated_helper_helper_helper a n k)\n        (define (max_sub_array_sum_repeated_helper_helper_helper_helper a n k)\n          (define (max_sub_array_sum_repeated_helper_helper_helper_helper_helper a n k)\n            (define (max_sub_array_sum_repeated_helper_helper_helper_helper_helper_helper a n k)\n              (define (max_sub_array_sum_repeated_helper_helper_helper_helper_helper_helper_helper a n k)\n                (define (max_sub_array_sum_repeated_helper_helper_helper_helper_helper_helper_helper_helper a n k)\n                  (define (max_sub_array_sum_repeated_helper_helper_helper_helper_helper_helper_helper_helper_helper a n k)\n                    (define (max_sub_array_sum_repeated_helper_helper_helper_helper_helper_helper_helper_helper_helper_helper a n k)\n                      (define (max_sub_array_sum_repeated_helper_helper_helper_helper_helper_helper_helper_helper_helper_helper_helper a n k)\n                        (define (max_sub_array_sum_repeated_helper_helper_helper_helper_helper_helper_helper_helper_helper_helper_helper_helper a n k)\n                          (define (max_sub_array_sum_repeated_helper_helper_helper_helper_helper_helper_helper_helper_helper_helper_helper_",
    "  (define (max_sub_array_sum a n)\n    (define (max_sub_array_sum_helper a n max_sum max_sum_ending_here)\n      (cond\n        [(= n 0) max_sum]\n        [(> max_sum_ending_here 0)\n         (max_sub_array_sum_helper (cdr a) (- n 1) (max max_sum max_sum_ending_here) (+ max_sum_ending_here (car a)))]\n        [else\n         (max_sub_array_sum_helper (cdr a) (- n 1) (max max_sum max_sum_ending_here) (car a))]))\n    (max_sub_array_sum_helper a n 0 0))\n  (define (max_sub_array_sum_repeated_helper a n k max_sum)\n    (cond\n      [(= k 1) (max_sub_array_sum a n)]\n      [else\n       (max_sub_array_sum_repeated_helper a n (- k 1) (max max_sum (max_sub_array_sum a n)))]))\n  (max_sub_array_sum_repeated_helper a n k 0))\n",
    "  (define (max_sub_array_sum_repeated_helper a n k acc)\n    (cond\n      [(= n 0) acc]\n      [(= k 0) (max_sub_array_sum_repeated_helper a n (- k 1) (max_sub_array_sum_repeated_helper a n 1 0))]\n      [else (max_sub_array_sum_repeated_helper a n (- k 1) (max_sub_array_sum_repeated_helper a n 1 0))]))\n  (max_sub_array_sum_repeated_helper a n k 0))\n",
    "  (define (max_sub_array_sum_repeated_helper a n k sum max-sum)\n    (cond\n      [(= n 0) max-sum]\n      [(= k 0) (max_sub_array_sum_repeated_helper a (- n 1) (- k 1) 0 max-sum)]\n      [(>= sum 0) (max_sub_array_sum_repeated_helper a (- n 1) k (+ sum (list-ref a (- n 1))) (max max-sum sum))]\n      [else (max_sub_array_sum_repeated_helper a (- n 1) k (list-ref a (- n 1)) (max max-sum sum))]))\n  (max_sub_array_sum_repeated_helper a n k 0 0))\n",
    "  (define (max_sub_array_sum_repeated_helper a n k)\n    (define (max_sub_array_sum_repeated_helper_helper a n k)\n      (define (max_sub_array_sum_repeated_helper_helper_helper a n k)\n        (define (max_sub_array_sum_repeated_helper_helper_helper_helper a n k)\n          (define (max_sub_array_sum_repeated_helper_helper_helper_helper_helper a n k)\n            (define (max_sub_array_sum_repeated_helper_helper_helper_helper_helper_helper a n k)\n              (define (max_sub_array_sum_repeated_helper_helper_helper_helper_helper_helper_helper a n k)\n                (define (max_sub_array_sum_repeated_helper_helper_helper_helper_helper_helper_helper_helper a n k)\n                  (define (max_sub_array_sum_repeated_helper_helper_helper_helper_helper_helper_helper_helper_helper a n k)\n                    (define (max_sub_array_sum_repeated_helper_helper_helper_helper_helper_helper_helper_helper_helper_helper a n k)\n                      (define (max_sub_array_sum_repeated_helper_helper_helper_helper_helper_helper_helper_helper_helper_helper_helper a n k)\n                        (define (max_sub_array_sum_repeated_helper_helper_helper_helper_helper_helper_helper_helper_helper_helper_helper_helper a n k)\n                          (define (max_sub_array_sum_repeated_helper_helper_helper_helper_helper_helper_helper_helper_helper_helper_helper_",
    "  (define (max_sub_array_sum_repeated_helper a n k)\n    (define (max_sub_array_sum_repeated_helper_helper a n k)\n      (define (max_sub_array_sum_repeated_helper_helper_helper a n k)\n        (define (max_sub_array_sum_repeated_helper_helper_helper_helper a n k)\n          (define (max_sub_array_sum_repeated_helper_helper_helper_helper_helper a n k)\n            (define (max_sub_array_sum_repeated_helper_helper_helper_helper_helper_helper a n k)\n              (define (max_sub_array_sum_repeated_helper_helper_helper_helper_helper_helper_helper a n k)\n                (define (max_sub_array_sum_repeated_helper_helper_helper_helper_helper_helper_helper_helper a n k)\n                  (define (max_sub_array_sum_repeated_helper_helper_helper_helper_helper_helper_helper_helper_helper a n k)\n                    (define (max_sub_array_sum_repeated_helper_helper_helper_helper_helper_helper_helper_helper_helper_helper a n k)\n                      (define (max_sub_array_sum_repeated_helper_helper_helper_helper_helper_helper_helper_helper_helper_helper_helper a n k)\n                        (define (max_sub_array_sum_repeated_helper_helper_helper_helper_helper_helper_helper_helper_helper_helper_helper_helper a n k)\n                          (define (max_sub_array_sum_repeated_helper_helper_helper_helper_helper_helper_helper_helper_helper_helper_helper_",
    "  (define (max_sub_array_sum_repeated_helper a n k max_sum)\n    (cond\n      [(= n 0) max_sum]\n      [(>= k 0)\n       (max_sub_array_sum_repeated_helper a (- n 1) (- k 1) (max max_sum (max_sub_array_sum a n)))]))\n  (max_sub_array_sum_repeated_helper a n k (max_sub_array_sum a n)))\n",
    "  (define (max_sub_array_sum_repeated_helper a n k)\n    (define (max_sub_array_sum_repeated_helper_helper a n k)\n      (define (max_sub_array_sum_repeated_helper_helper_helper a n k)\n        (define (max_sub_array_sum_repeated_helper_helper_helper_helper a n k)\n          (define (max_sub_array_sum_repeated_helper_helper_helper_helper_helper a n k)\n            (define (max_sub_array_sum_repeated_helper_helper_helper_helper_helper_helper a n k)\n              (define (max_sub_array_sum_repeated_helper_helper_helper_helper_helper_helper_helper a n k)\n                (define (max_sub_array_sum_repeated_helper_helper_helper_helper_helper_helper_helper_helper a n k)\n                  (define (max_sub_array_sum_repeated_helper_helper_helper_helper_helper_helper_helper_helper_helper a n k)\n                    (define (max_sub_array_sum_repeated_helper_helper_helper_helper_helper_helper_helper_helper_helper_helper a n k)\n                      (define (max_sub_array_sum_repeated_helper_helper_helper_helper_helper_helper_helper_helper_helper_helper_helper a n k)\n                        (define (max_sub_array_sum_repeated_helper_helper_helper_helper_helper_helper_helper_helper_helper_helper_helper_helper a n k)\n                          (define (max_sub_array_sum_repeated_helper_helper_helper_helper_helper_helper_helper_helper_helper_helper_helper_",
    "  (define (max_sub_array_sum a n)\n    (define (max_sub_array_sum_helper a n i sum max-sum)\n      (if (= i n)\n          max-sum\n          (let ((sum (+ sum (vector-ref a i))))\n            (if (&lt; sum 0)\n                (max_sub_array_sum_helper a n (+ i 1) 0 max-sum)\n                (max_sub_array_sum_helper a n (+ i 1) sum (max sum max-sum))))))\n    (max_sub_array_sum_helper a n 0 0 0))\n  (define (max_sub_array_sum_repeated_helper a n k i sum max-sum)\n    (if (= i n)\n        max-sum\n        (let ((sum (+ sum (vector-ref a i))))\n          (if (&lt; sum 0)\n              (max_sub_array_sum_repeated_helper a n k (+ i 1) 0 max-sum)\n              (max_sub_array_sum_repeated_helper a n k (+ i 1) sum (max sum max-sum))))))\n  (max_sub_array_sum_repeated_helper a n k 0 0 0))\n</code>\n",
    "  (define (max_sub_array_sum_repeated_helper a n k max_sum)\n    (cond [(= k 1) (max_sub_array_sum a n max_sum)]\n          [(> k 1) (max_sub_array_sum_repeated_helper a n (- k 1) (max_sub_array_sum a n max_sum))]))\n  (max_sub_array_sum_repeated_helper a n k 0))\n",
    "  (define (max_sub_array_sum a n)\n    (define (max_sub_array_sum_helper a n sum max)\n      (if (= n 0)\n          max\n          (let ((sum (+ sum (car a))))\n            (if (&lt; sum 0)\n                (max_sub_array_sum_helper (cdr a) (- n 1) 0 max)\n                (max_sub_array_sum_helper (cdr a) (- n 1) sum (max sum max))))))\n    (max_sub_array_sum_helper a n 0 0))\n  (define (max_sub_array_sum_repeated_helper a n k sum max)\n    (if (= k 0)\n        max\n        (max_sub_array_sum_repeated_helper a n (- k 1) (+ sum (max_sub_array_sum a n)) (max sum max))))\n  (max_sub_array_sum_repeated_helper a n k 0 0))\n",
    "  (define (max_sub_array_sum a n)\n    (define (max_sub_array_sum_helper a n max_so_far max_ending_here)\n      (cond\n        [(= n 0) max_so_far]\n        [else\n         (define max_ending_here (max a (+ max_ending_here (list-ref a (- n 1)))))\n         (define max_so_far (max max_so_far max_ending_here))\n         (max_sub_array_sum_helper a (- n 1) max_so_far max_ending_here)]))\n    (max_sub_array_sum_helper a n 0 0))\n  (define (max_sub_array_sum_repeated_helper a n k max_so_far)\n    (cond\n      [(= k 0) max_so_far]\n      [else\n       (define max_so_far (max max_so_far (max_sub_array_sum a n)))\n       (max_sub_array_sum_repeated_helper a n (- k 1) max_so_far)]))\n  (max_sub_array_sum_repeated_helper a n k 0))\n",
    "  (define (max_sub_array_sum a n)\n    (define (max_sub_array_sum_helper a n max_so_far max_ending_here)\n      (cond [(= n 0) max_so_far]\n            [(> max_ending_here 0) (max_sub_array_sum_helper (cdr a) (- n 1) (max max_so_far max_ending_here) (+ max_ending_here (car a)))]\n            [else (max_sub_array_sum_helper (cdr a) (- n 1) (max max_so_far max_ending_here) (car a))]))\n    (max_sub_array_sum_helper a n (car a) (car a)))\n  (define (max_sub_array_sum_repeated_helper a n k max_so_far)\n    (cond [(= k 1) (max_sub_array_sum a n)]\n          [(> max_so_far 0) (max_sub_array_sum_repeated_helper a n (- k 1) (max max_so_far (max_sub_array_sum a n)))]\n          [else (max_sub_array_sum_repeated_helper a n (- k 1) (max_sub_array_sum a n))]))\n  (max_sub_array_sum_repeated_helper a n k (max_sub_array_sum a n)))\n",
    "  (define (max_sub_array_sum a n)\n    (define (max_sub_array_sum_helper a n max_sum curr_sum)\n      (cond ((= n 0) max_sum)\n            ((&gt; curr_sum max_sum)\n             (max_sub_array_sum_helper a (- n 1) curr_sum (+ curr_sum (list-ref a (- n 1)))))\n            ((&lt; curr_sum max_sum)\n             (max_sub_array_sum_helper a (- n 1) max_sum (+ curr_sum (list-ref a (- n 1)))))\n            (else (max_sub_array_sum_helper a (- n 1) max_sum (+ curr_sum (list-ref a (- n 1)))))))\n    (max_sub_array_sum_helper a n 0 0))\n  (define (max_sub_array_sum_repeated_helper a n k max_sum curr_sum)\n    (cond ((= k 0) max_sum)\n          ((&gt; curr_sum max_sum)\n           (max_sub_array_sum_repeated_helper a n (- k 1) curr_sum (+ curr_sum (max_sub_array_sum a n))))\n          ((&lt; curr_sum max_sum)\n           (max_sub_array_sum_repeated_helper a n (- k 1) max_sum (+ curr_sum (max_sub_array_sum a n))))\n          (else (max_sub_array_sum_repeated_helper a n (- k 1) max_sum (+ curr_sum (max_sub_array_sum a n))))))\n  (max_sub_array_sum_repeated_helper a n k 0 0))\n</code>\n",
    "  (define (max_sub_array_sum_repeated_helper a n k)\n    (define (max_sub_array_sum_helper a n)\n      (define (max_sub_array_sum_helper_helper a n max_sum cur_sum)\n        (cond\n          [(= n 0) max_sum]\n          [(>= cur_sum 0)\n           (max_sub_array_sum_helper_helper (cdr a) (- n 1) (max max_sum cur_sum) (+ cur_sum (car a)))\n           ]\n          [else\n           (max_sub_array_sum_helper_helper (cdr a) (- n 1) (max max_sum cur_sum) (car a))\n           ]\n          )\n        )\n      (max_sub_array_sum_helper_helper a n (car a) (car a))\n      )\n    (define (max_sub_array_sum_repeated_helper_helper a n k max_sum cur_sum)\n      (cond\n        [(= k 0) max_sum]\n        [(>= cur_sum 0)\n         (max_sub_array_sum_repeated_helper_helper a n (- k 1) (max max_sum cur_sum) (+ cur_sum (max_sub_array_sum_helper a n)))\n         ]\n        [else\n         (max_sub_array_sum_repeated_helper_helper a n (- k 1) (max max_sum cur_sum) (max_sub_array_sum_helper a n))\n         ]\n        )\n      )\n    (max_sub_array_sum_repeated_helper_helper a n k (max_sub_array_sum_helper a n) (max_sub_array_sum_helper a n))\n    )\n  (max_sub_array_sum_repeated_helper a n k)\n  )\n",
    "  (define (max_sub_array_sum a n)\n    (define (max_sub_array_sum_helper a n sum max-sum)\n      (if (zero? n)\n          max-sum\n          (let ([sum (+ sum (car a))])\n            (if (&lt; sum 0)\n                (max_sub_array_sum_helper (cdr a) (- n 1) 0 max-sum)\n                (max_sub_array_sum_helper (cdr a) (- n 1) sum (max max-sum sum))))))\n    (max_sub_array_sum_helper a n 0 0))\n  (define (max_sub_array_sum_repeated_helper a n k sum max-sum)\n    (if (zero? k)\n        max-sum\n        (let ([sum (+ sum (max_sub_array_sum a n))])\n          (max_sub_array_sum_repeated_helper a n (- k 1) sum (max max-sum sum)))))\n  (max_sub_array_sum_repeated_helper a n k 0 0))\n",
    "  (define (max_sub_array_sum a n)\n    (define (max_sub_array_sum_helper a n max_sum curr_sum)\n      (cond ((= n 0) max_sum)\n            ((&gt; curr_sum max_sum)\n             (max_sub_array_sum_helper a (- n 1) curr_sum (+ curr_sum (list-ref a (- n 1)))))\n            ((&lt; curr_sum max_sum)\n             (max_sub_array_sum_helper a (- n 1) max_sum (+ curr_sum (list-ref a (- n 1)))))))\n    (max_sub_array_sum_helper a n 0 0))\n  (define (max_sub_array_sum_repeated_helper a n k max_sum curr_sum)\n    (cond ((= k 0) max_sum)\n          ((&gt; curr_sum max_sum)\n           (max_sub_array_sum_repeated_helper a n (- k 1) curr_sum (+ curr_sum (max_sub_array_sum a n))))\n          ((&lt; curr_sum max_sum)\n           (max_sub_array_sum_repeated_helper a n (- k 1) max_sum (+ curr_sum (max_sub_array_sum a n))))))\n  (max_sub_array_sum_repeated_helper a n k 0 0))\n</code>\n",
    "  (define (max_sub_array_sum a n)\n    (define (max_sub_array_sum_helper a n max_sum curr_sum)\n      (if (= n 0)\n          max_sum\n          (let ((new_curr_sum (+ curr_sum (list-ref a (- n 1)))))\n            (if (&lt; new_curr_sum 0)\n                (max_sub_array_sum_helper a (- n 1) max_sum 0)\n                (max_sub_array_sum_helper a (- n 1) (max max_sum new_curr_sum) new_curr_sum)))))\n    (max_sub_array_sum_helper a n 0 0))\n  (define (max_sub_array_sum_repeated_helper a n k max_sum)\n    (if (= k 0)\n        max_sum\n        (max_sub_array_sum_repeated_helper a n (- k 1) (max max_sum (max_sub_array_sum a n)))))\n  (max_sub_array_sum_repeated_helper a n k 0))\n</code>\n",
    "  (define (max_sub_array_sum a n)\n    (define (max_sub_array_sum_helper a n max_sum)\n      (if (= n 0)\n          max_sum\n          (let ([curr_sum (+ (car a) (max_sub_array_sum_helper (cdr a) (- n 1) max_sum))])\n            (if (&gt; curr_sum max_sum)\n                curr_sum\n                max_sum))))\n    (max_sub_array_sum_helper a n 0))\n  (define (max_sub_array_sum_repeated_helper a n k max_sum)\n    (if (= k 0)\n        max_sum\n        (let ([curr_sum (max_sub_array_sum a n)])\n          (if (&gt; curr_sum max_sum)\n              (max_sub_array_sum_repeated_helper a n (- k 1) curr_sum)\n              (max_sub_array_sum_repeated_helper a n (- k 1) max_sum)))))\n  (max_sub_array_sum_repeated_helper a n k 0))\n",
    "  (define (max_sub_array_sum a n)\n    (define (max_sub_array_sum_helper a n max_sum curr_sum)\n      (cond ((= n 0) max_sum)\n            ((&gt; curr_sum max_sum)\n             (max_sub_array_sum_helper a (- n 1) curr_sum (+ curr_sum (list-ref a (- n 1)))))\n            ((&lt; curr_sum max_sum)\n             (max_sub_array_sum_helper a (- n 1) max_sum (+ curr_sum (list-ref a (- n 1)))))\n            (else (max_sub_array_sum_helper a (- n 1) max_sum (+ curr_sum (list-ref a (- n 1)))))))\n    (max_sub_array_sum_helper a n 0 0))\n  (define (sum_of_list a n)\n    (define (sum_of_list_helper a n sum)\n      (cond ((= n 0) sum)\n            (else (sum_of_list_helper a (- n 1) (+ sum (list-ref a (- n 1)))))))\n    (sum_of_list_helper a n 0))\n  (define (max_sub_array_sum_repeated_helper a n k max_sum)\n    (cond ((= k 1) (max_sub_array_sum a n))\n          ((&gt; (max_sub_array_sum a n) max_sum)\n           (max_sub_array_sum_repeated_helper a n (- k 1) (max_sub_array_sum a n)))\n          ((&lt; (max_sub_array_sum a n) max_sum)\n           (max_sub_array_sum_repeated_helper a n (- k 1) max_sum))\n          (else (max_sub_array_sum_repeated_helper a n (- k 1) max_sum))))\n  (max_sub_array_sum_repeated_helper a n k 0))\n</code>\n",
    "  (define (max_sub_array_sum a n)\n    (define (max_sub_array_sum_helper a n max_sum curr_sum)\n      (if (= n 0)\n          max_sum\n          (let ([curr_sum (+ curr_sum (car a))])\n            (if (&lt; curr_sum 0)\n                (max_sub_array_sum_helper (cdr a) (- n 1) max_sum 0)\n                (max_sub_array_sum_helper (cdr a) (- n 1) (max max_sum curr_sum) curr_sum)))))\n    (max_sub_array_sum_helper a n 0 0))\n  (define (max_sub_array_sum_repeated_helper a n k max_sum)\n    (if (= k 0)\n        max_sum\n        (max_sub_array_sum_repeated_helper a n (- k 1) (max max_sum (max_sub_array_sum a n)))))\n  (max_sub_array_sum_repeated_helper a n k 0))\n</code>\n",
    "  (define (max_sub_array_sum a n)\n    (define (max_sub_array_sum_helper a n max_sum max_sum_so_far)\n      (cond ((= n 0) max_sum)\n            ((&gt; max_sum_so_far 0)\n             (max_sub_array_sum_helper (cdr a) (- n 1)\n                                       (max max_sum (+ max_sum_so_far (car a)))\n                                       (+ max_sum_so_far (car a))))\n            (else\n             (max_sub_array_sum_helper (cdr a) (- n 1)\n                                       (max max_sum (car a))\n                                       (car a)))))\n    (max_sub_array_sum_helper a n 0 0))\n  (define (max_sub_array_sum_repeated_helper a n k max_sum)\n    (cond ((= k 1) max_sum)\n          (else\n           (max_sub_array_sum_repeated_helper a n (- k 1)\n                                              (max max_sum (max_sub_array_sum a n))))))\n  (max_sub_array_sum_repeated_helper a n k 0))\n</code>\n",
    "  (define (max_sub_array_sum a n)\n    (define (max_sub_array_sum_helper a n max_sum cur_sum)\n      (if (= n 0)\n          max_sum\n          (let ([cur_sum (+ cur_sum (car a))])\n            (if (&lt; cur_sum 0)\n                (max_sub_array_sum_helper (cdr a) (- n 1) max_sum 0)\n                (max_sub_array_sum_helper (cdr a) (- n 1) (max max_sum cur_sum) cur_sum)))))\n    (max_sub_array_sum_helper a n 0 0))\n  (define (max_sub_array_sum_repeated_helper a n k max_sum)\n    (if (= k 1)\n        (max_sub_array_sum a n)\n        (let ([cur_sum (max_sub_array_sum a n)])\n          (max_sub_array_sum_repeated_helper a n (- k 1) (max max_sum cur_sum)))))\n  (max_sub_array_sum_repeated_helper a n k 0))\n</code>\n",
    "  (define (max_sub_array_sum_repeated_helper a n k sum max_sum)\n    (if (= n 0)\n        max_sum\n        (let ([cur_sum (+ sum (vector-ref a (- n 1)))])\n          (if (&lt; cur_sum 0)\n              (max_sub_array_sum_repeated_helper a (- n 1) k 0 max_sum)\n              (max_sub_array_sum_repeated_helper a (- n 1) k cur_sum (max max_sum cur_sum))))))\n  (max_sub_array_sum_repeated_helper a n k 0 0))\n</code>\n",
    "  (define (max_sub_array_sum_repeated_helper a n k sum max-sum)\n    (cond\n      [(= n 0) max-sum]\n      [(= k 0) (max_sub_array_sum_repeated_helper a (- n 1) k 0 max-sum)]\n      [(= n 1) (max_sub_array_sum_repeated_helper a (- n 1) (- k 1) (+ sum (list-ref a (- n 1))) (max sum max-sum))]\n      [else (max_sub_array_sum_repeated_helper a (- n 1) k (+ sum (list-ref a (- n 1))) (max sum max-sum))]))\n  (max_sub_array_sum_repeated_helper a n k 0 0))\n",
    "  (define (max_sub_array_sum a n)\n    (define (max_sub_array_sum_helper a n max_sum max_sum_ending_here)\n      (cond\n        [(= n 0) max_sum]\n        [(> max_sum_ending_here 0)\n         (max_sub_array_sum_helper (cdr a) (- n 1) (max max_sum max_sum_ending_here) (+ max_sum_ending_here (car a)))]\n        [else\n         (max_sub_array_sum_helper (cdr a) (- n 1) (max max_sum max_sum_ending_here) (car a))]))\n    (max_sub_array_sum_helper a n -999999999 0))\n  (define (max_sub_array_sum_repeated_helper a n k max_sum)\n    (cond\n      [(= k 1) (max_sub_array_sum a n)]\n      [else\n       (max_sub_array_sum_repeated_helper a n (- k 1) (max max_sum (max_sub_array_sum a n)))]))\n  (max_sub_array_sum_repeated_helper a n k -999999999))\n",
    "  (define (max_sub_array_sum_repeated_helper a n k)\n    (define (max_sub_array_sum_repeated_helper_helper a n k)\n      (define (max_sub_array_sum_repeated_helper_helper_helper a n k)\n        (define (max_sub_array_sum_repeated_helper_helper_helper_helper a n k)\n          (define (max_sub_array_sum_repeated_helper_helper_helper_helper_helper a n k)\n            (define (max_sub_array_sum_repeated_helper_helper_helper_helper_helper_helper a n k)\n              (define (max_sub_array_sum_repeated_helper_helper_helper_helper_helper_helper_helper a n k)\n                (define (max_sub_array_sum_repeated_helper_helper_helper_helper_helper_helper_helper_helper a n k)\n                  (define (max_sub_array_sum_repeated_helper_helper_helper_helper_helper_helper_helper_helper_helper a n k)\n                    (define (max_sub_array_sum_repeated_helper_helper_helper_helper_helper_helper_helper_helper_helper_helper a n k)\n                      (define (max_sub_array_sum_repeated_helper_helper_helper_helper_helper_helper_helper_helper_helper_helper_helper a n k)\n                        (define (max_sub_array_sum_repeated_helper_helper_helper_helper_helper_helper_helper_helper_helper_helper_helper_helper a n k)\n                          (define (max_sub_array_sum_repeated_helper_helper_helper_helper_helper_helper_helper_helper_helper_helper_helper_",
    "  (define (max_sub_array_sum_repeated_helper a n k sum max)\n    (cond\n      [(= n 0) max]\n      [(= k 0) (max_sub_array_sum_repeated_helper a (- n 1) k (+ sum (list-ref a (- n 1))) (max sum))]\n      [(> sum 0) (max_sub_array_sum_repeated_helper a (- n 1) (- k 1) (+ sum (list-ref a (- n 1))) (max sum))]\n      [else (max_sub_array_sum_repeated_helper a (- n 1) (- k 1) (list-ref a (- n 1)) (max sum))]))\n  (max_sub_array_sum_repeated_helper a n k 0 0))\n",
    "  (define (max_sub_array_sum a n)\n    (define (max_sub_array_sum_helper a n max_sum curr_sum)\n      (if (= n 0)\n          max_sum\n          (let ([curr_sum (+ curr_sum (vector-ref a (- n 1)))])\n            (if (&lt; curr_sum 0)\n                (max_sub_array_sum_helper a (- n 1) max_sum 0)\n                (max_sub_array_sum_helper a (- n 1) (max max_sum curr_sum) curr_sum)))))\n    (max_sub_array_sum_helper a n 0 0))\n  (define (max_sub_array_sum_repeated_helper a n k max_sum)\n    (if (= k 0)\n        max_sum\n        (max_sub_array_sum_repeated_helper a n (- k 1) (max max_sum (max_sub_array_sum a n)))))\n  (max_sub_array_sum_repeated_helper a n k 0))\n",
    "  (define (max_sub_array_sum a n)\n    (define (max_sub_array_sum_helper a n max_sum curr_sum)\n      (cond ((= n 0) max_sum)\n            ((&gt; curr_sum max_sum) (max_sub_array_sum_helper (cdr a) (- n 1) curr_sum (+ curr_sum (car a))))\n            ((&lt; curr_sum max_sum) (max_sub_array_sum_helper (cdr a) (- n 1) max_sum (+ curr_sum (car a))))))\n    (max_sub_array_sum_helper a n (car a) (car a)))\n  (define (max_sub_array_sum_repeated_helper a n k max_sum)\n    (cond ((= k 1) (max_sub_array_sum a n))\n          ((&gt; (max_sub_array_sum a n) max_sum) (max_sub_array_sum_repeated_helper a n (- k 1) (max_sub_array_sum a n)))\n          ((&lt; (max_sub_array_sum a n) max_sum) (max_sub_array_sum_repeated_helper a n (- k 1) max_sum))))\n  (max_sub_array_sum_repeated_helper a n k (max_sub_array_sum a n)))\n</code>\nI am not sure if this is the most efficient way to do this. I would love to hear your thoughts on this.\n\n\nA:\n\nI think you can simplify your code a bit. The <code>max_sub_array_sum_repeated_helper</code> function is not needed, you can just use the <code>max_sub_array_sum</code> function directly.\n<code>(define (max_sub_array_sum_repeated a n k)\n  (define (max_sub_array_sum a n)\n    (define (max_sub_array_sum_helper a n max_sum curr_sum)\n      (cond ((= n 0) max_sum)\n            ((&gt",
    "  (define (max_sub_array_sum a n)\n    (define (max_sub_array_sum_helper a n max_so_far max_ending_here)\n      (cond ((= n 0) max_so_far)\n            ((&gt; max_ending_here 0)\n             (max_sub_array_sum_helper (cdr a) (- n 1)\n                                       (max max_so_far max_ending_here)\n                                       (+ max_ending_here (car a))))\n            (else\n             (max_sub_array_sum_helper (cdr a) (- n 1)\n                                       (max max_so_far max_ending_here)\n                                       (car a)))))\n    (max_sub_array_sum_helper a n -999999999 0))\n  (define (max_sub_array_sum_repeated_helper a n k max_so_far)\n    (cond ((= k 0) max_so_far)\n          (else\n           (max_sub_array_sum_repeated_helper a n (- k 1)\n                                              (max max_so_far\n                                                   (max_sub_array_sum a n))))))\n  (max_sub_array_sum_repeated_helper a n k -999999999))\n",
    "  (define (max_sub_array_sum a n)\n    (define (max_sub_array_sum_aux a n max_so_far max_ending_here)\n      (if (zero? n)\n          max_so_far\n          (let ((max_ending_here (+ max_ending_here (car a))))\n            (if (&lt; max_ending_here 0)\n                (max_sub_array_sum_aux (cdr a) (- n 1) max_so_far 0)\n                (max_sub_array_sum_aux (cdr a) (- n 1) (max max_so_far max_ending_here) max_ending_here)))))\n    (max_sub_array_sum_aux a n 0 0))\n  (define (max_sub_array_sum_repeated_aux a n k max_so_far)\n    (if (zero? k)\n        max_so_far\n        (max_sub_array_sum_repeated_aux a n (- k 1) (max max_so_far (max_sub_array_sum a n)))))\n  (max_sub_array_sum_repeated_aux a n k 0))\n</code>\n",
    "  (define (max_sub_array_sum a n)\n    (define (max_sub_array_sum_helper a n max_sum curr_sum)\n      (if (= n 0)\n          max_sum\n          (let ((curr_sum (+ curr_sum (car a))))\n            (if (&lt; curr_sum 0)\n                (max_sub_array_sum_helper (cdr a) (- n 1) max_sum 0)\n                (max_sub_array_sum_helper (cdr a) (- n 1) (max max_sum curr_sum) curr_sum)))))\n    (max_sub_array_sum_helper a n 0 0))\n  (define (max_sub_array_sum_repeated_helper a n k max_sum)\n    (if (= k 0)\n        max_sum\n        (max_sub_array_sum_repeated_helper a n (- k 1) (max max_sum (max_sub_array_sum a n)))))\n  (max_sub_array_sum_repeated_helper a n k 0))\n</code>\n",
    "  (define (max_sub_array_sum a n)\n    (define (max_sub_array_sum_helper a n max_sum cur_sum)\n      (if (= n 0)\n          max_sum\n          (let ((cur_sum (+ cur_sum (car a))))\n            (if (&lt; cur_sum 0)\n                (max_sub_array_sum_helper (cdr a) (- n 1) max_sum 0)\n                (max_sub_array_sum_helper (cdr a) (- n 1) (max max_sum cur_sum) cur_sum)))))\n    (max_sub_array_sum_helper a n 0 0))\n  (define (max_sub_array_sum_repeated_helper a n k max_sum)\n    (if (= k 0)\n        max_sum\n        (max_sub_array_sum_repeated_helper a n (- k 1) (max max_sum (max_sub_array_sum a n)))))\n  (max_sub_array_sum_repeated_helper a n k 0))\n",
    "  (define (max_sub_array_sum a n)\n    (define (max_sub_array_sum_helper a n max_so_far max_ending_here)\n      (cond ((= n 0) max_so_far)\n            ((&lt; max_ending_here 0) (max_sub_array_sum_helper (cdr a) (- n 1) max_so_far (car a)))\n            (else (max_sub_array_sum_helper (cdr a) (- n 1) (max max_so_far max_ending_here) (+ max_ending_here (car a))))))\n    (max_sub_array_sum_helper a n (- (expt 2 63) 1) (- (expt 2 63) 1)))\n  (define (max_sub_array_sum_repeated_helper a n k max_so_far)\n    (cond ((= k 1) (max_sub_array_sum a n))\n          ((= n 0) max_so_far)\n          (else (max_sub_array_sum_repeated_helper a n (- k 1) (max max_so_far (+ (max_sub_array_sum a n) (max_sub_array_sum_repeated_helper (cdr a) (- n 1) k max_so_far)))))))\n  (max_sub_array_sum_repeated_helper a n k (- (expt 2 63) 1)))\n",
    "  (define (max_sub_array_sum a n)\n    (define (max_sub_array_sum_helper a n sum max)\n      (if (= n 0)\n          max\n          (let ((new-sum (+ sum (car a))))\n            (if (&lt; new-sum 0)\n                (max_sub_array_sum_helper (cdr a) (- n 1) 0 max)\n                (max_sub_array_sum_helper (cdr a) (- n 1) new-sum (max new-sum max))))))\n    (max_sub_array_sum_helper a n 0 0))\n  (define (max_sub_array_sum_repeated_helper a n k sum max)\n    (if (= k 0)\n        max\n        (max_sub_array_sum_repeated_helper a n (- k 1) (+ sum (max_sub_array_sum a n)) (max (+ sum (max_sub_array_sum a n)) max))))\n  (max_sub_array_sum_repeated_helper a n k 0 0))\n",
    "  (define (max_sub_array_sum a n)\n    (define (max_sub_array_sum_helper a n max_so_far max_ending_here)\n      (cond\n        [(= n 0) max_so_far]\n        [else\n         (define max_ending_here (max 0 (+ max_ending_here (vector-ref a (- n 1)))))\n         (define max_so_far (max max_so_far max_ending_here))\n         (max_sub_array_sum_helper a (- n 1) max_so_far max_ending_here)]))\n    (max_sub_array_sum_helper a n 0 0))\n  (define (max_sub_array_sum_repeated_helper a n k max_so_far)\n    (cond\n      [(= k 0) max_so_far]\n      [else\n       (define max_so_far (max max_so_far (max_sub_array_sum a n)))\n       (max_sub_array_sum_repeated_helper a n (- k 1) max_so_far)]))\n  (max_sub_array_sum_repeated_helper a n k 0))\n",
    "  (define (max_sub_array_sum a n)\n    (define (max_sub_array_sum_helper a n max_sum)\n      (if (= n 0)\n          max_sum\n          (let ((current_sum (+ (car a) max_sum)))\n            (if (&lt; current_sum 0)\n                (max_sub_array_sum_helper (cdr a) (- n 1) 0)\n                (max_sub_array_sum_helper (cdr a) (- n 1) current_sum)))))\n    (max_sub_array_sum_helper a n 0))\n  (define (max_sub_array_sum_repeated_helper a n k max_sum)\n    (if (= k 0)\n        max_sum\n        (let ((current_sum (max_sub_array_sum a n)))\n          (if (&gt; current_sum max_sum)\n              (max_sub_array_sum_repeated_helper a n (- k 1) current_sum)\n              (max_sub_array_sum_repeated_helper a n (- k 1) max_sum)))))\n  (max_sub_array_sum_repeated_helper a n k 0))\n</code>\n",
    "  (define (max_sub_array_sum_repeated_helper a n k sum max-sum)\n    (cond\n      [(= n 0) max-sum]\n      [(= k 0) (max_sub_array_sum_repeated_helper a (- n 1) k (sum + (list-ref a (- n 1))) max-sum)]\n      [(>= sum 0) (max_sub_array_sum_repeated_helper a (- n 1) k (+ sum (list-ref a (- n 1))) (max max-sum sum))]\n      [else (max_sub_array_sum_repeated_helper a (- n 1) (- k 1) (sum + (list-ref a (- n 1))) max-sum)]))\n  (max_sub_array_sum_repeated_helper a n k 0 0))\n",
    "  (define (max_sub_array_sum_repeated_helper a n k sum max-sum)\n    (cond\n      [(= n 0) max-sum]\n      [(= k 1) (max-sub-array-sum a n sum max-sum)]\n      [else\n       (max-sub-array-sum-repeated-helper a n (- k 1) sum (max-sub-array-sum a n sum max-sum))]))\n  (max-sub-array-sum-repeated-helper a n k 0 0))\n",
    "  (define (max_sub_array_sum a n)\n    (define (max_sub_array_sum_helper a n max_sum cur_sum)\n      (if (zero? n)\n          max_sum\n          (let ((new_cur_sum (+ cur_sum (list-ref a (- n 1)))))\n            (if (&lt; new_cur_sum 0)\n                (max_sub_array_sum_helper a (- n 1) max_sum 0)\n                (max_sub_array_sum_helper a (- n 1) (max max_sum new_cur_sum) new_cur_sum)))))\n    (max_sub_array_sum_helper a n 0 0))\n  (define (max_sub_array_sum_repeated_helper a n k max_sum)\n    (if (zero? k)\n        max_sum\n        (max_sub_array_sum_repeated_helper a n (- k 1) (max max_sum (max_sub_array_sum a n)))))\n  (max_sub_array_sum_repeated_helper a n k 0))\n</code>\n",
    "  (define (max_sub_array_sum a n)\n    (define (max_sub_array_sum_helper a n max_sum)\n      (if (= n 0)\n          max_sum\n          (let ((max_sum_ending_here (+ (car a) max_sum)))\n            (if (&lt; max_sum_ending_here 0)\n                (max_sub_array_sum_helper (cdr a) (- n 1) 0)\n                (max_sub_array_sum_helper (cdr a) (- n 1) max_sum_ending_here)))))\n    (define (max_sub_array_sum_helper_2 a n max_sum)\n      (if (= n 0)\n          max_sum\n          (let ((max_sum_ending_here (+ (car a) max_sum)))\n            (if (&lt; max_sum_ending_here 0)\n                (max_sub_array_sum_helper_2 (cdr a) (- n 1) 0)\n                (max_sub_array_sum_helper_2 (cdr a) (- n 1) max_sum_ending_here)))))\n    (define (max_sub_array_sum_helper_3 a n max_sum)\n      (if (= n 0)\n          max_sum\n          (let ((max_sum_ending_here (+ (car a) max_sum)))\n            (if (&lt; max_sum_ending_here 0)\n                (max_sub_array_sum_helper_3 (cdr a) (- n 1) 0)\n                (max_sub_array_sum_helper_3 (cdr a) (- n 1) max_sum_ending_here)))))\n    (define (max_sub_array_sum_helper_4 a n max_sum)\n      (if (= n 0)\n          max_sum\n          (let ((max_sum_ending_here (+ (car a) max_sum)))\n            (if (&lt; max_sum_ending_here 0)\n                (max_sub_array_sum_helper_4 (cdr a) (- n 1) 0)\n                (max_sub_array",
    "  (define (max_sub_array_sum a n)\n    (define (max_sub_array_sum_helper a n max_sum curr_sum)\n      (cond\n        [(= n 0) max_sum]\n        [(&gt; curr_sum max_sum) (max_sub_array_sum_helper a (- n 1) curr_sum (+ curr_sum (list-ref a (- n 1))))]\n        [else (max_sub_array_sum_helper a (- n 1) max_sum (+ curr_sum (list-ref a (- n 1))))]))\n    (max_sub_array_sum_helper a n 0 0))\n  (define (max_sub_array_sum_repeated_helper a n k max_sum)\n    (cond\n      [(= k 0) max_sum]\n      [else (max_sub_array_sum_repeated_helper a n (- k 1) (max max_sum (max_sub_array_sum a n)))]))\n  (max_sub_array_sum_repeated_helper a n k 0))\n</code>\n",
    "  (define (max_sub_array_sum_repeated_helper a n k)\n    (define (max_sub_array_sum_repeated_helper_helper a n k)\n      (define (max_sub_array_sum_repeated_helper_helper_helper a n k)\n        (define (max_sub_array_sum_repeated_helper_helper_helper_helper a n k)\n          (define (max_sub_array_sum_repeated_helper_helper_helper_helper_helper a n k)\n            (define (max_sub_array_sum_repeated_helper_helper_helper_helper_helper_helper a n k)\n              (define (max_sub_array_sum_repeated_helper_helper_helper_helper_helper_helper_helper a n k)\n                (define (max_sub_array_sum_repeated_helper_helper_helper_helper_helper_helper_helper_helper a n k)\n                  (define (max_sub_array_sum_repeated_helper_helper_helper_helper_helper_helper_helper_helper_helper a n k)\n                    (define (max_sub_array_sum_repeated_helper_helper_helper_helper_helper_helper_helper_helper_helper_helper a n k)\n                      (define (max_sub_array_sum_repeated_helper_helper_helper_helper_helper_helper_helper_helper_helper_helper_helper a n k)\n                        (define (max_sub_array_sum_repeated_helper_helper_helper_helper_helper_helper_helper_helper_helper_helper_helper_helper a n k)\n                          (define (max_sub_array_sum_repeated_helper_helper_helper_helper_helper_helper_helper_helper_helper_helper_helper_",
    "  (define (max_sub_array_sum a n)\n    (define (max_sub_array_sum_helper a n max_sum cur_sum)\n      (cond\n        [(= n 0) max_sum]\n        [(> cur_sum max_sum) (max_sub_array_sum_helper (cdr a) (- n 1) cur_sum (+ cur_sum (car a)))]\n        [else (max_sub_array_sum_helper (cdr a) (- n 1) max_sum (+ cur_sum (car a)))]))\n    (max_sub_array_sum_helper a n (car a) (car a)))\n  (define (max_sub_array_sum_repeated_helper a n k max_sum)\n    (cond\n      [(= k 1) (max_sub_array_sum a n)]\n      [else (max_sub_array_sum_repeated_helper a n (- k 1) (max max_sum (max_sub_array_sum a n)))]))\n  (max_sub_array_sum_repeated_helper a n k (car a)))\n",
    "  (define (max_sub_array_sum a n)\n    (define (max_sub_array_sum_helper a n max_so_far max_ending_here)\n      (cond\n        [(= n 0) max_so_far]\n        [else\n         (let ([max_ending_here (max 0 (+ max_ending_here (vector-ref a (- n 1))))])\n           (max_sub_array_sum_helper a (- n 1) (max max_so_far max_ending_here) max_ending_here))]))\n    (max_sub_array_sum_helper a n 0 0))\n  (define (max_sub_array_sum_repeated_helper a n k max_so_far)\n    (cond\n      [(= k 0) max_so_far]\n      [else\n       (let ([max_so_far (max max_so_far (max_sub_array_sum a n))])\n         (max_sub_array_sum_repeated_helper a n (- k 1) max_so_far))]))\n  (max_sub_array_sum_repeated_helper a n k 0))\n",
    "  (define (max_sub_array_sum a n)\n    (define (max_sub_array_sum_helper a n max_sum curr_sum)\n      (cond\n        [(= n 0) max_sum]\n        [(> curr_sum max_sum) (max_sub_array_sum_helper (cdr a) (- n 1) curr_sum (+ curr_sum (car a)))]\n        [else (max_sub_array_sum_helper (cdr a) (- n 1) max_sum (+ curr_sum (car a)))]))\n    (max_sub_array_sum_helper a n 0 0))\n  (define (max_sub_array_sum_repeated_helper a n k max_sum)\n    (cond\n      [(= k 0) max_sum]\n      [else (max_sub_array_sum_repeated_helper a n (- k 1) (max max_sum (max_sub_array_sum a n)))]))\n  (max_sub_array_sum_repeated_helper a n k 0))\n",
    "  (define (max-sub-array-sum a n)\n    (let loop ((i 0) (max-sum 0) (max-ending-here 0))\n      (cond ((= i n) max-sum)\n            (else\n             (let ((max-ending-here (+ max-ending-here (vector-ref a i))))\n               (cond ((&lt; max-ending-here 0) (loop (+ i 1) max-sum 0))\n                     (else (loop (+ i 1) (max max-sum max-ending-here) max-ending-here))))))))\n  (let ((max-sum (max-sub-array-sum a n)))\n    (if (&lt; max-sum 0) 0\n        (* k (max-sub-array-sum a n)))))\n</code>\n",
    "  (define (max_sub_array_sum a n)\n    (define (max_sub_array_sum_helper a n sum max-sum)\n      (cond ((= n 0) max-sum)\n            ((&gt; sum max-sum) (max_sub_array_sum_helper a (- n 1) sum sum))\n            ((&lt; sum 0) (max_sub_array_sum_helper a (- n 1) 0 max-sum))\n            (else (max_sub_array_sum_helper a (- n 1) (+ sum (list-ref a (- n 1))) max-sum))))\n    (max_sub_array_sum_helper a n 0 0))\n  (define (max_sub_array_sum_repeated_helper a n k sum max-sum)\n    (cond ((= k 0) max-sum)\n          ((&gt; sum max-sum) (max_sub_array_sum_repeated_helper a n (- k 1) sum sum))\n          ((&lt; sum 0) (max_sub_array_sum_repeated_helper a n (- k 1) 0 max-sum))\n          (else (max_sub_array_sum_repeated_helper a n (- k 1) (+ sum (max_sub_array_sum a n)) max-sum))))\n  (max_sub_array_sum_repeated_helper a n k 0 0))\n",
    "  (define (max_sub_array_sum_repeated_helper a n k i sum)\n    (if (= i n)\n        sum\n        (max_sub_array_sum_repeated_helper a n k (+ i 1)\n                                           (max sum (+ sum (vector-ref a i) (* k (- n i)))))))\n  (max_sub_array_sum_repeated_helper a n k 0 0))\n",
    "  (define (max_sub_array_sum_repeated_helper a n k max_sum)\n    (if (= n 0)\n        max_sum\n        (let* ([cur_sum (apply + (take a k))]\n               [max_sum (if (&gt; cur_sum max_sum) cur_sum max_sum)])\n          (max_sub_array_sum_repeated_helper (rest a) (- n 1) k max_sum))))\n  (max_sub_array_sum_repeated_helper a n k 0))\n",
    "  (define (max_sub_array_sum a n)\n    (define (max_sub_array_sum_helper a n max-so-far max-ending-here)\n      (cond\n        [(= n 0) max-so-far]\n        [(= max-ending-here 0) (max_sub_array_sum_helper a (- n 1) max-so-far (vector-ref a (- n 1)))]\n        [(> max-ending-here 0) (max_sub_array_sum_helper a (- n 1) (max max-so-far (+ max-ending-here (vector-ref a (- n 1)))) (+ max-ending-here (vector-ref a (- n 1))))]\n        [else (max_sub_array_sum_helper a (- n 1) max-so-far (vector-ref a (- n 1)))]))\n    (max_sub_array_sum_helper a n 0 0))\n  (define (max_sub_array_sum_repeated_helper a n k max-so-far)\n    (cond\n      [(= k 0) max-so-far]\n      [else (max_sub_array_sum_repeated_helper a n (- k 1) (max max-so-far (max_sub_array_sum a n)))]))\n  (max_sub_array_sum_repeated_helper a n k 0))\n",
    "  (define (max_sub_array_sum a n)\n    (define (max_sub_array_sum_helper a n max_sum max_sum_ending_here)\n      (if (= n 0)\n          max_sum\n          (let ((max_sum_ending_here (+ max_sum_ending_here (list-ref a (- n 1)))))\n            (if (&lt; max_sum_ending_here 0)\n                (max_sub_array_sum_helper a (- n 1) max_sum 0)\n                (max_sub_array_sum_helper a (- n 1) (max max_sum max_sum_ending_here) max_sum_ending_here)))))\n    (max_sub_array_sum_helper a n 0 0))\n  (define (max_sub_array_sum_repeated_helper a n k max_sum)\n    (if (= k 0)\n        max_sum\n        (max_sub_array_sum_repeated_helper a n (- k 1) (max max_sum (max_sub_array_sum a n)))))\n  (max_sub_array_sum_repeated_helper a n k 0))\n</code>\n",
    "  (define (max_sub_array_sum a n)\n    (define (max_sub_array_sum_helper a n max_sum max_sum_here)\n      (if (zero? n)\n          max_sum\n          (let ((max_sum_here (+ max_sum_here (list-ref a (- n 1)))))\n            (if (&lt; max_sum_here (list-ref a (- n 1)))\n                (max_sub_array_sum_helper a (- n 1) (list-ref a (- n 1)) (list-ref a (- n 1)))\n                (max_sub_array_sum_helper a (- n 1) max_sum max_sum_here)))))\n    (max_sub_array_sum_helper a n (list-ref a 0) (list-ref a 0)))\n  (define (max_sub_array_sum_repeated_helper a n k max_sum)\n    (if (zero? k)\n        max_sum\n        (let ((max_sum_here (max_sub_array_sum a n)))\n          (if (&lt; max_sum max_sum_here)\n              (max_sub_array_sum_repeated_helper a n (- k 1) max_sum_here)\n              (max_sub_array_sum_repeated_helper a n (- k 1) max_sum)))))\n  (max_sub_array_sum_repeated_helper a n k (max_sub_array_sum a n)))\n</code>\n",
    "  (define (max_sub_array_sum a n)\n    (define (max_sub_array_sum_helper a n sum max-sum)\n      (cond\n        [(= n 0) max-sum]\n        [else (max_sub_array_sum_helper (cdr a) (- n 1) (+ sum (car a)) (max max-sum sum))]))\n    (define (max_sub_array_sum_helper_2 a n sum max-sum)\n      (cond\n        [(= n 0) max-sum]\n        [else (max_sub_array_sum_helper_2 (cdr a) (- n 1) (+ sum (car a)) (max max-sum (+ max-sum (car a))))]))\n    (max_sub_array_sum_helper a n 0 0))\n  (define (max_sub_array_sum_repeated_helper a n k)\n    (cond\n      [(= k 1) (max_sub_array_sum a n)]\n      [else (max_sub_array_sum_repeated_helper a n (- k 1))]))\n  (max_sub_array_sum_repeated_helper a n k))\n",
    "  (define (max_sub_array_sum a n)\n    (define (max_sub_array_sum_helper a n max_sum cur_sum)\n      (if (= n 0)\n          max_sum\n          (let ([cur_sum (+ cur_sum (car a))])\n            (if (&lt; cur_sum 0)\n                (max_sub_array_sum_helper (cdr a) (- n 1) max_sum 0)\n                (max_sub_array_sum_helper (cdr a) (- n 1) (max max_sum cur_sum) cur_sum)))))\n    (max_sub_array_sum_helper a n 0 0))\n  (define (max_sub_array_sum_repeated_helper a n k max_sum)\n    (if (= k 0)\n        max_sum\n        (max_sub_array_sum_repeated_helper a n (- k 1) (max max_sum (max_sub_array_sum a n)))))\n  (max_sub_array_sum_repeated_helper a n k 0))\n</code>\n",
    "  (let ([a (append a a)])\n    (let loop ([i 0] [j 0] [max-sum 0] [sum 0])\n      (cond [(= i n) max-sum]\n            [else\n             (let ([sum (+ sum (vector-ref a j))])\n               (cond [(> sum max-sum)\n                      (loop i (+ j 1) sum 0)]\n                     [else\n                      (loop i (+ j 1) max-sum sum)]))]))))\n",
    "  (define (max_sub_array_sum a n)\n    (define (max_sub_array_sum_helper a n max_so_far max_ending_here)\n      (cond ((= n 0) max_so_far)\n            ((&gt; max_ending_here 0)\n             (max_sub_array_sum_helper (cdr a) (- n 1) (max max_so_far max_ending_here) (+ max_ending_here (car a))))\n            (else\n             (max_sub_array_sum_helper (cdr a) (- n 1) (max max_so_far (car a)) (car a)))))\n    (max_sub_array_sum_helper a n -999999999 -999999999))\n  (define (sum_array a n)\n    (define (sum_array_helper a n sum)\n      (cond ((= n 0) sum)\n            (else\n             (sum_array_helper (cdr a) (- n 1) (+ sum (car a))))))\n    (sum_array_helper a n 0))\n  (define (max_sub_array_sum_repeated_helper a n k max_so_far)\n    (cond ((= k 1) (max_sub_array_sum a n))\n          ((= n 0) max_so_far)\n          (else\n           (max_sub_array_sum_repeated_helper a n (- k 1) (max max_so_far (+ (max_sub_array_sum a n) (* (- k 1) (sum_array a n))))))))\n  (max_sub_array_sum_repeated_helper a n k -999999999))\n</code>\n",
    "  (define (max_sub_array_sum a n)\n    (define (max_sub_array_sum_helper a n max_sum curr_sum)\n      (cond\n        [(= n 0) max_sum]\n        [(> curr_sum max_sum) (max_sub_array_sum_helper a (- n 1) curr_sum (+ curr_sum (list-ref a n))) ]\n        [(< curr_sum max_sum) (max_sub_array_sum_helper a (- n 1) max_sum (+ curr_sum (list-ref a n))) ]))\n    (max_sub_array_sum_helper a (- n 1) -1000000000 0))\n  (define (max_sub_array_sum_repeated_helper a n k max_sum curr_sum)\n    (cond\n      [(= k 0) max_sum]\n      [(> curr_sum max_sum) (max_sub_array_sum_repeated_helper a n (- k 1) curr_sum (+ curr_sum (max_sub_array_sum a n))) ]\n      [(< curr_sum max_sum) (max_sub_array_sum_repeated_helper a n (- k 1) max_sum (+ curr_sum (max_sub_array_sum a n))) ]))\n  (max_sub_array_sum_repeated_helper a n (- k 1) -1000000000 0))\n",
    "  (define (max_sub_array_sum a n)\n    (define (max_sub_array_sum_helper a n max_sum curr_sum)\n      (cond\n        [(= n 0) max_sum]\n        [(>= curr_sum 0)\n         (max_sub_array_sum_helper (cdr a) (- n 1) (max max_sum (+ curr_sum (car a))) (+ curr_sum (car a)))]\n        [else\n         (max_sub_array_sum_helper (cdr a) (- n 1) (max max_sum (car a)) (car a))]))\n    (max_sub_array_sum_helper a n (car a) (car a)))\n  (define (max_sub_array_sum_repeated_helper a n k max_sum curr_sum)\n    (cond\n      [(= k 0) max_sum]\n      [(>= curr_sum 0)\n       (max_sub_array_sum_repeated_helper a n (- k 1) (max max_sum (+ curr_sum (car a))) (+ curr_sum (car a)))]\n      [else\n       (max_sub_array_sum_repeated_helper a n (- k 1) (max max_sum (car a)) (car a))]))\n  (max_sub_array_sum_repeated_helper a n k (max_sub_array_sum a n) (max_sub_array_sum a n)))\n",
    "  (define (max_sub_array_sum_repeated_helper a n k max_sum)\n    (if (= n 0)\n        max_sum\n        (let ([curr_sum (sum a n)])\n          (if (&gt; curr_sum max_sum)\n              (max_sub_array_sum_repeated_helper a (- n 1) k curr_sum)\n              (max_sub_array_sum_repeated_helper a (- n 1) k max_sum)))))\n  (max_sub_array_sum_repeated_helper a n k (sum a n)))\n",
    "  (define (max_sub_array_sum a n)\n    (define (max_sub_array_sum_helper a n max_sum)\n      (if (= n 1)\n          max_sum\n          (max_sub_array_sum_helper (cdr a) (- n 1) (max max_sum (+ (car a) (car (cdr a)))))))\n    (max_sub_array_sum_helper a n (car a)))\n  (define (max_sub_array_sum_repeated_helper a n k max_sum)\n    (if (= k 1)\n        max_sum\n        (max_sub_array_sum_repeated_helper a n (- k 1) (max max_sum (max_sub_array_sum a n)))))\n  (max_sub_array_sum_repeated_helper a n k (max_sub_array_sum a n)))\n",
    "  (define (max_sub_array_sum a n)\n    (define (max_sub_array_sum_helper a n max_sum)\n      (if (= n 0)\n          max_sum\n          (let ((max_sum_new (if (&gt;= (car a) 0)\n                                (+ max_sum (car a))\n                                max_sum)))\n            (max_sub_array_sum_helper (cdr a) (- n 1) max_sum_new))))\n    (max_sub_array_sum_helper a n 0))\n  (define (max_sub_array_sum_repeated_helper a n k max_sum)\n    (if (= k 0)\n        max_sum\n        (let ((max_sum_new (max max_sum (max_sub_array_sum a n))))\n          (max_sub_array_sum_repeated_helper a n (- k 1) max_sum_new))))\n  (max_sub_array_sum_repeated_helper a n k 0))\n</code>\n",
    "  (define (max_sub_array_sum a n)\n    (define (max_sub_array_sum_aux a n max_sum curr_sum)\n      (if (= n 0)\n          max_sum\n          (let ((curr_sum (+ curr_sum (car a))))\n            (if (&lt; curr_sum 0)\n                (max_sub_array_sum_aux (cdr a) (- n 1) max_sum 0)\n                (max_sub_array_sum_aux (cdr a) (- n 1) (max max_sum curr_sum) curr_sum)))))\n    (max_sub_array_sum_aux a n 0 0))\n  (define (max_sub_array_sum_repeated_aux a n k max_sum)\n    (if (= k 1)\n        (max_sub_array_sum a n)\n        (let ((curr_sum (max_sub_array_sum a n)))\n          (max_sub_array_sum_repeated_aux a n (- k 1) (max max_sum curr_sum)))))\n  (max_sub_array_sum_repeated_aux a n k 0))\n</code>\n",
    "  (define (max_sub_array_sum a n)\n    (define (max_sub_array_sum_helper a n max_sum curr_sum)\n      (if (zero? n)\n          max_sum\n          (let ((curr_sum (+ curr_sum (car a))))\n            (if (&lt; curr_sum 0)\n                (max_sub_array_sum_helper (cdr a) (- n 1) max_sum 0)\n                (max_sub_array_sum_helper (cdr a) (- n 1) (max max_sum curr_sum) curr_sum)))))\n    (max_sub_array_sum_helper a n 0 0))\n  (define (max_sub_array_sum_repeated_helper a n k max_sum)\n    (if (zero? k)\n        max_sum\n        (max_sub_array_sum_repeated_helper a n (- k 1) (max max_sum (max_sub_array_sum a n)))))\n  (max_sub_array_sum_repeated_helper a n k 0))\n",
    "  (define (max_sub_array_sum_repeated_helper a n k max_sum)\n    (if (= k 0)\n        max_sum\n        (max_sub_array_sum_repeated_helper a n (- k 1) (max max_sum (max_sub_array_sum a n)))))\n  (max_sub_array_sum_repeated_helper a n k 0))\n",
    "  (define (max_sub_array_sum_repeated_helper a n k)\n    (define (max_sub_array_sum_repeated_helper_helper a n k)\n      (define (max_sub_array_sum_repeated_helper_helper_helper a n k)\n        (define (max_sub_array_sum_repeated_helper_helper_helper_helper a n k)\n          (define (max_sub_array_sum_repeated_helper_helper_helper_helper_helper a n k)\n            (define (max_sub_array_sum_repeated_helper_helper_helper_helper_helper_helper a n k)\n              (define (max_sub_array_sum_repeated_helper_helper_helper_helper_helper_helper_helper a n k)\n                (define (max_sub_array_sum_repeated_helper_helper_helper_helper_helper_helper_helper_helper a n k)\n                  (define (max_sub_array_sum_repeated_helper_helper_helper_helper_helper_helper_helper_helper_helper a n k)\n                    (define (max_sub_array_sum_repeated_helper_helper_helper_helper_helper_helper_helper_helper_helper_helper a n k)\n                      (define (max_sub_array_sum_repeated_helper_helper_helper_helper_helper_helper_helper_helper_helper_helper_helper a n k)\n                        (define (max_sub_array_sum_repeated_helper_helper_helper_helper_helper_helper_helper_helper_helper_helper_helper_helper a n k)\n                          (define (max_sub_array_sum_repeated_helper_helper_helper_helper_helper_helper_helper_helper_helper_helper_helper_",
    "  (define (max_sub_array_sum a n)\n    (define (max_sub_array_sum_aux a n max_sum curr_sum)\n      (if (= n 0)\n          max_sum\n          (let ((curr_sum (+ curr_sum (list-ref a (- n 1)))))\n            (if (&lt; curr_sum 0)\n                (max_sub_array_sum_aux a (- n 1) max_sum 0)\n                (max_sub_array_sum_aux a (- n 1) (max max_sum curr_sum) curr_sum)))))\n    (max_sub_array_sum_aux a n 0 0))\n  (define (max_sub_array_sum_repeated_aux a n k max_sum)\n    (if (= k 0)\n        max_sum\n        (max_sub_array_sum_repeated_aux a n (- k 1) (max max_sum (max_sub_array_sum a n)))))\n  (max_sub_array_sum_repeated_aux a n k 0))\n",
    "  (define (max_sub_array_sum_repeated_helper a n k sum)\n    (cond\n      [(= n 0) sum]\n      [else (max_sub_array_sum_repeated_helper a (- n 1) k (+ sum (vector-ref a (- n 1))))]))\n  (define (max_sub_array_sum_repeated_helper2 a n k sum)\n    (cond\n      [(= k 0) sum]\n      [else (max_sub_array_sum_repeated_helper2 a n (- k 1) (+ sum (max_sub_array_sum_repeated_helper a n k 0)))]))\n  (max_sub_array_sum_repeated_helper2 a n k 0))\n",
    "  (define (max_sub_array_sum a n)\n    (define (max_sub_array_sum_helper a n max_sum curr_sum)\n      (cond ((= n 0) max_sum)\n            ((&gt; curr_sum max_sum)\n             (max_sub_array_sum_helper (rest a) (- n 1) curr_sum (+ curr_sum (first a))))\n            (else\n             (max_sub_array_sum_helper (rest a) (- n 1) max_sum (+ curr_sum (first a))))))\n    (max_sub_array_sum_helper a n (first a) (first a)))\n  (define (max_sub_array_sum_repeated_helper a n k max_sum)\n    (cond ((= k 1) (max_sub_array_sum a n))\n          ((&gt; (max_sub_array_sum a n) max_sum)\n           (max_sub_array_sum_repeated_helper a n (- k 1) (max_sub_array_sum a n)))\n          (else\n           (max_sub_array_sum_repeated_helper a n (- k 1) max_sum))))\n  (max_sub_array_sum_repeated_helper a n k (first a)))\n",
    "  (define (max_sub_array_sum a n)\n    (define (max_sub_array_sum_helper a n max_sum max_sum_so_far)\n      (if (= n 0)\n          max_sum\n          (let ([current_sum (+ max_sum_so_far (list-ref a 0))])\n            (max_sub_array_sum_helper (cdr a) (- n 1) (max max_sum current_sum) (max 0 current_sum)))))\n    (max_sub_array_sum_helper a n 0 0))\n  (define (max_sub_array_sum_repeated_helper a n k max_sum)\n    (if (= k 1)\n        (max_sub_array_sum a n)\n        (max_sub_array_sum_repeated_helper a n (- k 1) (max max_sum (max_sub_array_sum a n)))))\n  (max_sub_array_sum_repeated_helper a n k 0))\n",
    "  (define (max_sub_array_sum a n)\n    (define (max_sub_array_sum_helper a n max_sum cur_sum)\n      (cond [(= n 0) max_sum]\n            [else (let ([cur_sum (+ cur_sum (car a))])\n                    (if (&lt; cur_sum 0)\n                        (max_sub_array_sum_helper (cdr a) (- n 1) max_sum 0)\n                        (max_sub_array_sum_helper (cdr a) (- n 1) (max max_sum cur_sum) cur_sum)))]))\n    (max_sub_array_sum_helper a n 0 0))\n  (define (max_sub_array_sum_repeated_helper a n k max_sum)\n    (cond [(= k 0) max_sum]\n          [else (max_sub_array_sum_repeated_helper a n (- k 1) (max max_sum (max_sub_array_sum a n)))]))\n  (max_sub_array_sum_repeated_helper a n k 0))\n</code>\n",
    "  (define (max_sub_array_sum a n)\n    (define (max_sub_array_sum_helper a n max_sum curr_sum)\n      (cond ((= n 0) max_sum)\n            ((&gt; curr_sum max_sum)\n             (max_sub_array_sum_helper a (- n 1) curr_sum (+ curr_sum (list-ref a (- n 1)))))\n            ((&lt; curr_sum max_sum)\n             (max_sub_array_sum_helper a (- n 1) max_sum (+ curr_sum (list-ref a (- n 1)))))\n            (else\n             (max_sub_array_sum_helper a (- n 1) max_sum (+ curr_sum (list-ref a (- n 1)))))))\n    (max_sub_array_sum_helper a n 0 0))\n  (define (max_sub_array_sum_repeated_helper a n k max_sum curr_sum)\n    (cond ((= k 0) max_sum)\n          ((&gt; curr_sum max_sum)\n           (max_sub_array_sum_repeated_helper a n (- k 1) curr_sum (+ curr_sum (max_sub_array_sum a n))))\n          ((&lt; curr_sum max_sum)\n           (max_sub_array_sum_repeated_helper a n (- k 1) max_sum (+ curr_sum (max_sub_array_sum a n))))\n          (else\n           (max_sub_array_sum_repeated_helper a n (- k 1) max_sum (+ curr_sum (max_sub_array_sum a n))))))\n  (max_sub_array_sum_repeated_helper a n k 0 0))\n</code>\n",
    "  (define (max_sub_array_sum a n)\n    (define (max_sub_array_sum_helper a n max_sum curr_sum)\n      (cond ((= n 0) max_sum)\n            ((&gt; curr_sum max_sum) (max_sub_array_sum_helper a (- n 1) curr_sum (+ curr_sum (list-ref a (- n 1)))))\n            ((&lt; curr_sum max_sum) (max_sub_array_sum_helper a (- n 1) max_sum (+ curr_sum (list-ref a (- n 1)))))\n            (else (max_sub_array_sum_helper a (- n 1) max_sum (+ curr_sum (list-ref a (- n 1)))))))\n    (max_sub_array_sum_helper a n 0 0))\n  (define (max_sub_array_sum_repeated_helper a n k max_sum curr_sum)\n    (cond ((= k 0) max_sum)\n          ((&gt; curr_sum max_sum) (max_sub_array_sum_repeated_helper a n (- k 1) curr_sum (+ curr_sum (max_sub_array_sum a n))))\n          ((&lt; curr_sum max_sum) (max_sub_array_sum_repeated_helper a n (- k 1) max_sum (+ curr_sum (max_sub_array_sum a n))))\n          (else (max_sub_array_sum_repeated_helper a n (- k 1) max_sum (+ curr_sum (max_sub_array_sum a n))))))\n  (max_sub_array_sum_repeated_helper a n k 0 0))\n",
    "  (define (max_sub_array_sum a n)\n    (define (max_sub_array_sum_helper a n max_sum)\n      (if (= n 1)\n          (max max_sum (car a))\n          (let ((max_sum_ending_here (apply + (take a n))))\n            (max_sub_array_sum_helper a (- n 1) (max max_sum max_sum_ending_here)))))\n    (max_sub_array_sum_helper a n 0))\n  (define (max_sub_array_sum_repeated_helper a n k max_sum)\n    (if (= k 1)\n        (max_sub_array_sum a n)\n        (let ((max_sum_ending_here (apply + (take a n))))\n          (max_sub_array_sum_repeated_helper a (- n 1) (- k 1) (max max_sum max_sum_ending_here)))))\n  (max_sub_array_sum_repeated_helper a n k 0))\n",
    "  (define (max_sub_array_sum a n)\n    (define (max_sub_array_sum_helper a n max_so_far max_ending_here)\n      (cond [(= n 0) max_so_far]\n            [(> max_ending_here 0) (max_sub_array_sum_helper (cdr a) (- n 1) (max max_so_far max_ending_here) (+ max_ending_here (car a)))]\n            [else (max_sub_array_sum_helper (cdr a) (- n 1) (max max_so_far max_ending_here) (car a))]))\n    (max_sub_array_sum_helper a n 0 0))\n  (define (max_sub_array_sum_repeated_helper a n k max_so_far)\n    (cond [(= k 0) max_so_far]\n          [else (max_sub_array_sum_repeated_helper a n (- k 1) (max max_so_far (max_sub_array_sum a n)))]))\n  (max_sub_array_sum_repeated_helper a n k 0))\n",
    "  (define (max_sub_array_sum a n)\n    (define (max_sub_array_sum_aux a n max_sum curr_sum)\n      (if (= n 0)\n          max_sum\n          (let ((new_curr_sum (+ curr_sum (car a))))\n            (if (&lt; new_curr_sum 0)\n                (max_sub_array_sum_aux (cdr a) (- n 1) max_sum 0)\n                (max_sub_array_sum_aux (cdr a) (- n 1) (max max_sum new_curr_sum) new_curr_sum)))))\n    (max_sub_array_sum_aux a n 0 0))\n  (define (max_sub_array_sum_repeated_aux a n k max_sum)\n    (if (= k 0)\n        max_sum\n        (max_sub_array_sum_repeated_aux a n (- k 1) (max max_sum (max_sub_array_sum a n)))))\n  (max_sub_array_sum_repeated_aux a n k 0))\n",
    "  (define (max_sub_array_sum a n)\n    (define (max_sub_array_sum_helper a n max_so_far max_ending_here)\n      (cond\n        [(= n 0) max_so_far]\n        [else\n         (let ([max_ending_here (max 0 (+ max_ending_here (car a)))])\n           (max_sub_array_sum_helper (cdr a) (- n 1) (max max_so_far max_ending_here) max_ending_here))]))\n    (max_sub_array_sum_helper a n 0 0))\n  (define (max_sub_array_sum_repeated_helper a n k max_so_far)\n    (cond\n      [(= k 0) max_so_far]\n      [else\n       (max_sub_array_sum_repeated_helper a n (- k 1) (max max_so_far (max_sub_array_sum a n)))]))\n  (max_sub_array_sum_repeated_helper a n k 0))\n",
    "  (define (max_sub_array_sum a n)\n    (define (max_sub_array_sum_helper a n max_sum curr_sum)\n      (cond\n        [(= n 0) max_sum]\n        [(< curr_sum 0) (max_sub_array_sum_helper (cdr a) (- n 1) (max max_sum curr_sum) (car a))]\n        [else (max_sub_array_sum_helper (cdr a) (- n 1) (max max_sum curr_sum) (+ curr_sum (car a)))]))\n    (max_sub_array_sum_helper a n (car a) (car a)))\n  (define (max_sub_array_sum_repeated_helper a n k max_sum)\n    (cond\n      [(= k 1) (max_sub_array_sum a n)]\n      [else (max_sub_array_sum_repeated_helper a n (- k 1) (max max_sum (max_sub_array_sum a n)))]))\n  (max_sub_array_sum_repeated_helper a n k (max_sub_array_sum a n)))\n",
    "  (define (max_sub_array_sum a n)\n    (define (max_sub_array_sum_helper a n max_sum curr_sum)\n      (cond\n        [(= n 0) max_sum]\n        [(> curr_sum max_sum) (max_sub_array_sum_helper a (- n 1) curr_sum (+ curr_sum (list-ref a (- n 1))))]\n        [else (max_sub_array_sum_helper a (- n 1) max_sum (+ curr_sum (list-ref a (- n 1))))]))\n    (max_sub_array_sum_helper a n 0 0))\n  (define (max_sub_array_sum_repeated_helper a n k max_sum curr_sum)\n    (cond\n      [(= k 0) max_sum]\n      [(> curr_sum max_sum) (max_sub_array_sum_repeated_helper a n (- k 1) curr_sum (+ curr_sum (max_sub_array_sum a n)))]\n      [else (max_sub_array_sum_repeated_helper a n (- k 1) max_sum (+ curr_sum (max_sub_array_sum a n)))]))\n  (max_sub_array_sum_repeated_helper a n k 0 0))\n",
    "  (define (max_sub_array_sum a n)\n    (define (max_sub_array_sum_helper a n max_sum curr_sum i)\n      (cond\n        [(= i n) max_sum]\n        [(> curr_sum max_sum) (max_sub_array_sum_helper a n curr_sum (add1 curr_sum) (add1 i))]\n        [else (max_sub_array_sum_helper a n max_sum (add1 curr_sum) (add1 i))]))\n    (max_sub_array_sum_helper a n 0 0 0))\n  (define (max_sub_array_sum_repeated_helper a n k max_sum curr_sum i)\n    (cond\n      [(= i k) max_sum]\n      [(> curr_sum max_sum) (max_sub_array_sum_repeated_helper a n k curr_sum (add1 curr_sum) (add1 i))]\n      [else (max_sub_array_sum_repeated_helper a n k max_sum (add1 curr_sum) (add1 i))]))\n  (max_sub_array_sum_repeated_helper a n k 0 0 0))\n",
    "  (define (max_sub_array_sum a n)\n    (define (max_sub_array_sum_helper a n max-so-far max-ending-here)\n      (cond\n        [(= n 0) max-so-far]\n        [else\n         (define max-ending-here (max 0 (+ max-ending-here (vector-ref a (- n 1)))))\n         (define max-so-far (max max-so-far max-ending-here))\n         (max_sub_array_sum_helper a (- n 1) max-so-far max-ending-here)]))\n    (max_sub_array_sum_helper a n 0 0))\n  (define (max_sub_array_sum_repeated_helper a n k max-so-far)\n    (cond\n      [(= k 1) (max_sub_array_sum a n)]\n      [else\n       (define max-so-far (max max-so-far (max_sub_array_sum a n)))\n       (max_sub_array_sum_repeated_helper a n (- k 1) max-so-far)]))\n  (max_sub_array_sum_repeated_helper a n k 0))\n",
    "  (define (max_sub_array_sum a n)\n    (define (max_sub_array_sum_helper a n max_sum cur_sum)\n      (if (= n 0)\n          max_sum\n          (if (&gt; cur_sum 0)\n              (max_sub_array_sum_helper (cdr a) (- n 1) (max max_sum cur_sum) (+ cur_sum (car a)))\n              (max_sub_array_sum_helper (cdr a) (- n 1) (max max_sum cur_sum) (car a)))))\n    (max_sub_array_sum_helper a n (car a) 0))\n  (define (max_sub_array_sum_repeated_helper a n k max_sum)\n    (if (= k 1)\n        (max_sub_array_sum a n)\n        (max_sub_array_sum_repeated_helper a n (- k 1) (max max_sum (max_sub_array_sum a n)))))\n  (max_sub_array_sum_repeated_helper a n k 0))\n",
    "  (define (max_sub_array_sum_repeated_helper a n k max_so_far max_ending_here)\n    (cond\n      [(= n 0) max_so_far]\n      [else\n       (define current_max_ending_here (+ max_ending_here (vector-ref a n)))\n       (define current_max_so_far (max max_so_far current_max_ending_here))\n       (define current_max_ending_here (max 0 current_max_ending_here))\n       (max_sub_array_sum_repeated_helper a (- n 1) k current_max_so_far current_max_ending_here)]))\n  (max_sub_array_sum_repeated_helper a (- (vector-length a) 1) k 0 0))\n",
    "  (define (max_sub_array_sum a n)\n    (define (max_sub_array_sum_helper a n max_sum curr_sum)\n      (if (= n 0)\n          max_sum\n          (let ((curr_sum (+ curr_sum (list-ref a (- n 1)))))\n            (if (&lt; curr_sum 0)\n                (max_sub_array_sum_helper a (- n 1) max_sum 0)\n                (max_sub_array_sum_helper a (- n 1) (max max_sum curr_sum) curr_sum)))))\n    (max_sub_array_sum_helper a n 0 0))\n  (define (max_sub_array_sum_repeated_helper a n k max_sum)\n    (if (= k 0)\n        max_sum\n        (max_sub_array_sum_repeated_helper a n (- k 1) (max max_sum (max_sub_array_sum a n)))))\n  (max_sub_array_sum_repeated_helper a n k 0))\n</code>\n",
    "  (define (max_sub_array_sum a n)\n    (define (max_sub_array_sum_helper a n max_sum curr_sum)\n      (cond\n        [(= n 0) max_sum]\n        [(> curr_sum max_sum) (max_sub_array_sum_helper a (- n 1) curr_sum (+ curr_sum (list-ref a (- n 1))))]\n        [else (max_sub_array_sum_helper a (- n 1) max_sum (+ curr_sum (list-ref a (- n 1))))]))\n    (max_sub_array_sum_helper a n 0 0))\n  (define (max_sub_array_sum_repeated_helper a n k max_sum curr_sum)\n    (cond\n      [(= k 0) max_sum]\n      [(> curr_sum max_sum) (max_sub_array_sum_repeated_helper a n (- k 1) curr_sum (+ curr_sum (max_sub_array_sum a n)))]\n      [else (max_sub_array_sum_repeated_helper a n (- k 1) max_sum (+ curr_sum (max_sub_array_sum a n)))]))\n  (max_sub_array_sum_repeated_helper a n k 0 0))\n",
    "  (define (max_sub_array_sum a n)\n    (define (max_sub_array_sum_helper a n sum max-sum)\n      (cond\n        [(= n 0) max-sum]\n        [else (max_sub_array_sum_helper (cdr a) (- n 1) (+ sum (car a))\n                                        (if (&gt; sum max-sum) sum max-sum))]))\n    (max_sub_array_sum_helper a n 0 0))\n  (define (max_sub_array_sum_repeated_helper a n k sum max-sum)\n    (cond\n      [(= k 0) max-sum]\n      [else (max_sub_array_sum_repeated_helper a n (- k 1) (+ sum (max_sub_array_sum a n))\n                                               (if (&gt; sum max-sum) sum max-sum))]))\n  (max_sub_array_sum_repeated_helper a n k 0 0))\n",
    "  (define (max-sub-array-sum a n)\n    (define (max-sub-array-sum-helper a n max-sum max-sum-so-far)\n      (if (zero? n)\n          max-sum\n          (let ([max-sum-so-far (if (&gt; max-sum-so-far 0) (+ max-sum-so-far (list-ref a (- n 1))) (list-ref a (- n 1)))])\n            (max-sub-array-sum-helper a (- n 1) (max max-sum max-sum-so-far) max-sum-so-far))))\n    (max-sub-array-sum-helper a n 0 0))\n  (define (max-sub-array-sum-repeated-helper a n k max-sum)\n    (if (zero? k)\n        max-sum\n        (max-sub-array-sum-repeated-helper a n (- k 1) (max max-sum (max-sub-array-sum a n)))))\n  (max-sub-array-sum-repeated-helper a n k 0))\n",
    "  (define (max_sub_array_sum a n)\n    (define (max_sub_array_sum_helper a n max_sum cur_sum)\n      (if (= n 0)\n          max_sum\n          (let ((new_cur_sum (if (&gt;= cur_sum 0) (+ cur_sum (list-ref a (- n 1))) (list-ref a (- n 1)))))\n            (max_sub_array_sum_helper a (- n 1) (max max_sum new_cur_sum) new_cur_sum))))\n    (max_sub_array_sum_helper a n (list-ref a 0) 0))\n  (define (max_sub_array_sum_repeated_helper a n k max_sum)\n    (if (= k 0)\n        max_sum\n        (max_sub_array_sum_repeated_helper a n (- k 1) (max max_sum (max_sub_array_sum a n)))))\n  (max_sub_array_sum_repeated_helper a n (- k 1) (max_sub_array_sum a n)))\n</code>\n",
    "  (define (max_sub_array_sum a n)\n    (define (max_sub_array_sum_helper a n max_sum)\n      (if (= n 0)\n          max_sum\n          (let ((max_sum_here (apply + (take a n))))\n            (max_sub_array_sum_helper (rest a) (- n 1) (max max_sum max_sum_here)))))\n    (max_sub_array_sum_helper a n (apply + (take a n))))\n  (define (max_sub_array_sum_repeated_helper a n k max_sum)\n    (if (= k 0)\n        max_sum\n        (max_sub_array_sum_repeated_helper a n (- k 1) (max max_sum (max_sub_array_sum a n)))))\n  (max_sub_array_sum_repeated_helper a n k (max_sub_array_sum a n)))\n",
    "  (define (max_sub_array_sum a n)\n    (define (max_sub_array_sum_helper a n curr_sum max_sum)\n      (if (= n 0)\n          max_sum\n          (let ((new_sum (+ curr_sum (car a))))\n            (if (&lt; new_sum 0)\n                (max_sub_array_sum_helper (cdr a) (- n 1) 0 max_sum)\n                (max_sub_array_sum_helper (cdr a) (- n 1) new_sum (max new_sum max_sum))))))\n    (max_sub_array_sum_helper a n 0 0))\n  (define (max_sub_array_sum_repeated_helper a n k curr_sum max_sum)\n    (if (= k 0)\n        max_sum\n        (max_sub_array_sum_repeated_helper a n (- k 1) curr_sum (max (max_sub_array_sum a n) max_sum))))\n  (max_sub_array_sum_repeated_helper a n k 0 0))\n</code>\n",
    "  (define (max_sub_array_sum a n)\n    (define (max_sub_array_sum_helper a n max_sum)\n      (if (zero? n)\n          max_sum\n          (let ((max_sum_new (max (add1 max_sum) (add1 (car a)))))\n            (max_sub_array_sum_helper (cdr a) (sub1 n) max_sum_new))))\n    (max_sub_array_sum_helper a n 0))\n  (define (max_sub_array_sum_repeated_helper a n k max_sum)\n    (if (zero? k)\n        max_sum\n        (let ((max_sum_new (max (max_sub_array_sum a n) max_sum)))\n          (max_sub_array_sum_repeated_helper a n (sub1 k) max_sum_new))))\n  (max_sub_array_sum_repeated_helper a n k 0))\n",
    "  (define (max_sub_array_sum_repeated_helper a n k max_sum)\n    (cond\n      [(= n 0) max_sum]\n      [else\n       (let ([cur_sum (apply + (take a k))])\n         (max_sub_array_sum_repeated_helper (rest a) (- n 1) k (max max_sum cur_sum)))]))\n  (max_sub_array_sum_repeated_helper a n k 0))\n",
    "  (define (max_sub_array_sum_repeated_helper a n k)\n    (define (max_sub_array_sum_helper a n)\n      (define (max_sub_array_sum_helper_helper a n sum max-sum)\n        (cond\n          [(= n 0) max-sum]\n          [(> sum 0) (max_sub_array_sum_helper_helper (cdr a) (- n 1) (+ sum (car a)) (max sum max-sum))]\n          [else (max_sub_array_sum_helper_helper (cdr a) (- n 1) (car a) (max sum max-sum))]))\n      (max_sub_array_sum_helper_helper a n 0 0))\n    (define (max_sub_array_sum_repeated_helper_helper a n k sum max-sum)\n      (cond\n        [(= k 0) max-sum]\n        [(> sum 0) (max_sub_array_sum_repeated_helper_helper a n (- k 1) (+ sum (max_sub_array_sum_helper a n)) (max sum max-sum))]\n        [else (max_sub_array_sum_repeated_helper_helper a n (- k 1) (max_sub_array_sum_helper a n) (max sum max-sum))]))\n    (max_sub_array_sum_repeated_helper_helper a n k 0 0))\n  (max_sub_array_sum_repeated_helper a n k))\n",
    "  (define (max_sub_array_sum a n)\n    (define (max_sub_array_sum_helper a n max_sum curr_sum)\n      (if (= n 0)\n          max_sum\n          (let ((curr_sum (+ curr_sum (car a))))\n            (if (&lt; curr_sum 0)\n                (max_sub_array_sum_helper (cdr a) (- n 1) max_sum 0)\n                (max_sub_array_sum_helper (cdr a) (- n 1) (max max_sum curr_sum) curr_sum)))))\n    (max_sub_array_sum_helper a n 0 0))\n  (define (max_sub_array_sum_repeated_helper a n k max_sum)\n    (if (= k 0)\n        max_sum\n        (max_sub_array_sum_repeated_helper a n (- k 1) (max max_sum (max_sub_array_sum a n)))))\n  (max_sub_array_sum_repeated_helper a n k 0))\n</code>\n",
    "  (define (max_sub_array_sum a n)\n    (define (max_sub_array_sum_helper a n max_so_far max_ending_here)\n      (cond\n        [(= n 0) max_so_far]\n        [else\n         (define max_ending_here (max 0 (+ max_ending_here (car a))))\n         (define max_so_far (max max_so_far max_ending_here))\n         (max_sub_array_sum_helper (cdr a) (- n 1) max_so_far max_ending_here)]))\n    (max_sub_array_sum_helper a n 0 0))\n  (define (max_sub_array_sum_repeated_helper a n k max_so_far max_ending_here)\n    (cond\n      [(= k 0) max_so_far]\n      [else\n       (define max_ending_here (max 0 (+ max_ending_here (car a))))\n       (define max_so_far (max max_so_far max_ending_here))\n       (max_sub_array_sum_repeated_helper (cdr a) (- n 1) (- k 1) max_so_far max_ending_here)]))\n  (max_sub_array_sum_repeated_helper a n k 0 0))\n",
    "  (define (max_sub_array_sum_repeated_helper a n k max_sum)\n    (cond ((= n 1) (max_sub_array_sum a k max_sum))\n          ((&gt; (max_sub_array_sum a k max_sum) max_sum)\n           (max_sub_array_sum_repeated_helper a (- n 1) k (max_sub_array_sum a k max_sum)))\n          (else (max_sub_array_sum_repeated_helper a (- n 1) k max_sum))))\n  (max_sub_array_sum_repeated_helper a n k (max_sub_array_sum a k 0)))\n",
    "  (define (max_sub_array_sum a n)\n    (define (max_sub_array_sum_helper a n max_so_far max_ending_here)\n      (cond\n        [(= n 0) max_so_far]\n        [else\n         (define max_ending_here (max 0 (+ max_ending_here (car a))))\n         (define max_so_far (max max_so_far max_ending_here))\n         (max_sub_array_sum_helper (cdr a) (- n 1) max_so_far max_ending_here)]))\n    (max_sub_array_sum_helper a n 0 0))\n  (define (max_sub_array_sum_repeated_helper a n k max_so_far)\n    (cond\n      [(= k 0) max_so_far]\n      [else\n       (define max_so_far (max max_so_far (max_sub_array_sum a n)))\n       (max_sub_array_sum_repeated_helper a n (- k 1) max_so_far)]))\n  (max_sub_array_sum_repeated_helper a n k 0))\n",
    "  (define (max_sub_array_sum a n)\n    (define (max_sub_array_sum_helper a n max_sum cur_sum)\n      (if (= n 0)\n          max_sum\n          (let ([cur_sum (+ cur_sum (car a))])\n            (if (&lt; cur_sum 0)\n                (max_sub_array_sum_helper (cdr a) (- n 1) max_sum 0)\n                (max_sub_array_sum_helper (cdr a) (- n 1) (max max_sum cur_sum) cur_sum)))))\n    (max_sub_array_sum_helper a n 0 0))\n  (define (max_sub_array_sum_repeated_helper a n k max_sum)\n    (if (= k 0)\n        max_sum\n        (max_sub_array_sum_repeated_helper a n (- k 1) (max max_sum (max_sub_array_sum a n)))))\n  (max_sub_array_sum_repeated_helper a n k 0))\n</code>\n",
    "  (define (max_sub_array_sum a n)\n    (define (max_sub_array_sum_helper a n max_sum curr_sum)\n      (cond\n        [(= n 0) max_sum]\n        [(> curr_sum max_sum) (max_sub_array_sum_helper a (- n 1) curr_sum (+ (list-ref a (- n 1)) curr_sum))]\n        [else (max_sub_array_sum_helper a (- n 1) max_sum (+ (list-ref a (- n 1)) curr_sum))]))\n    (max_sub_array_sum_helper a n 0 0))\n  (define (max_sub_array_sum_repeated_helper a n k max_sum curr_sum)\n    (cond\n      [(= k 0) max_sum]\n      [(> curr_sum max_sum) (max_sub_array_sum_repeated_helper a n (- k 1) curr_sum (+ (max_sub_array_sum a n) curr_sum))]\n      [else (max_sub_array_sum_repeated_helper a n (- k 1) max_sum (+ (max_sub_array_sum a n) curr_sum))]))\n  (max_sub_array_sum_repeated_helper a n k 0 0))\n",
    "  (define (max_sub_array_sum a n)\n    (define (max_sub_array_sum_helper a n sum max)\n      (if (= n 0)\n          max\n          (let ((sum (+ sum (car a))))\n            (if (&lt; sum 0)\n                (max_sub_array_sum_helper (cdr a) (- n 1) 0 max)\n                (max_sub_array_sum_helper (cdr a) (- n 1) sum (max sum max))))))\n    (max_sub_array_sum_helper a n 0 0))\n  (define (max_sub_array_sum_repeated_helper a n k sum max)\n    (if (= k 0)\n        max\n        (max_sub_array_sum_repeated_helper a n (- k 1) (+ sum (max_sub_array_sum a n)) (max sum max))))\n  (max_sub_array_sum_repeated_helper a n k 0 0))\n</code>\n",
    "  (define (max_sub_array_sum_repeated_helper a n k max_sum)\n    (cond ((= n 0) max_sum)\n          ((&gt; k 0)\n           (let ((max_sum_current_window (max_sub_array_sum_repeated_helper a (- n 1) (- k 1) 0)))\n             (max_sub_array_sum_repeated_helper a (- n 1) k (max max_sum (+ max_sum_current_window (list-ref a (- n 1)))))))\n          (else (max_sub_array_sum_repeated_helper a (- n 1) k (max max_sum (list-ref a (- n 1)))))))\n  (max_sub_array_sum_repeated_helper a n k 0))\n",
    "  (define (max_sub_array_sum a n)\n    (define (max_sub_array_sum_helper a n max_so_far max_ending_here)\n      (cond ((= n 0) max_so_far)\n            ((&gt; max_ending_here 0)\n             (max_sub_array_sum_helper (cdr a) (- n 1) (max max_so_far max_ending_here) (+ max_ending_here (car a))))\n            (else (max_sub_array_sum_helper (cdr a) (- n 1) (max max_so_far max_ending_here) (car a)))))\n    (max_sub_array_sum_helper a n 0 0))\n  (define (max_sub_array_sum_repeated_helper a n k max_so_far)\n    (cond ((= k 0) max_so_far)\n          (else (max_sub_array_sum_repeated_helper a n (- k 1) (max max_so_far (max_sub_array_sum a n))))))\n  (max_sub_array_sum_repeated_helper a n k 0))\n",
    "  (define (max_sub_array_sum a n)\n    (define (max_sub_array_sum_helper a n sum max-sum)\n      (cond\n        [(= n 0) max-sum]\n        [else\n         (let ([sum (+ sum (car a))])\n           (if (&lt; sum 0)\n               (max_sub_array_sum_helper (cdr a) (- n 1) 0 max-sum)\n               (max_sub_array_sum_helper (cdr a) (- n 1) sum (max sum max-sum))))]))\n    (max_sub_array_sum_helper a n 0 0))\n  (define (max_sub_array_sum_repeated_helper a n k sum max-sum)\n    (cond\n      [(= k 0) max-sum]\n      [else\n       (let ([sum (+ sum (max_sub_array_sum a n))])\n         (max_sub_array_sum_repeated_helper a n (- k 1) sum (max sum max-sum)))]))\n  (max_sub_array_sum_repeated_helper a n k 0 0))\n",
    "  (define (max_sub_array_sum a n)\n    (define (max_sub_array_sum_helper a n max-so-far max-ending-here)\n      (if (= n 0)\n          max-so-far\n          (let ([current (vector-ref a (- n 1))])\n            (max-sub-array-sum-helper a (- n 1)\n                                      (max max-so-far max-ending-here)\n                                      (max 0 (+ current max-ending-here))))))\n    (max-sub-array-sum-helper a n 0 0))\n  (let ([max-sum (max_sub_array_sum a n)])\n    (if (= k 1)\n        max-sum\n        (let ([max-sum-repeated (max_sub_array_sum_repeated a n (- k 1))])\n          (max max-sum max-sum-repeated)))))\n",
    "  (define (max_sub_array_sum a n)\n    (define (max_sub_array_sum_helper a n max_sum curr_sum)\n      (cond\n        [(= n 0) max_sum]\n        [(>= curr_sum 0) (max_sub_array_sum_helper (cdr a) (- n 1) (+ max_sum (car a)) (+ curr_sum (car a)))]\n        [else (max_sub_array_sum_helper (cdr a) (- n 1) max_sum (car a))]))\n    (max_sub_array_sum_helper a n 0 0))\n  (define (max_sub_array_sum_repeated_helper a n k max_sum)\n    (cond\n      [(= k 0) max_sum]\n      [else (max_sub_array_sum_repeated_helper a n (- k 1) (max max_sum (max_sub_array_sum a n)))]))\n  (max_sub_array_sum_repeated_helper a n k 0))\n",
    "  (define (max_sub_array_sum a n)\n    (define (max_sub_array_sum_helper a n max_sum curr_sum)\n      (cond ((= n 0) max_sum)\n            ((&gt; curr_sum max_sum)\n             (max_sub_array_sum_helper (cdr a) (- n 1) curr_sum (+ curr_sum (car a))))\n            (else (max_sub_array_sum_helper (cdr a) (- n 1) max_sum (+ curr_sum (car a))))))\n    (max_sub_array_sum_helper a n 0 0))\n  (define (max_sub_array_sum_repeated_helper a n k max_sum curr_sum)\n    (cond ((= k 0) max_sum)\n          ((&gt; curr_sum max_sum)\n           (max_sub_array_sum_repeated_helper a n (- k 1) curr_sum (+ curr_sum (max_sub_array_sum a n))))\n          (else (max_sub_array_sum_repeated_helper a n (- k 1) max_sum (+ curr_sum (max_sub_array_sum a n))))))\n  (max_sub_array_sum_repeated_helper a n k 0 0))\n</code>\nI am getting the following error:\n<code>application: not a procedure;\n expected a procedure that can be applied to arguments\n  given: #&lt;procedure:+&gt;\n  arguments...:\n   #&lt;procedure:max_sub_array_sum_repeated_helper&gt;\n   #&lt;procedure:max_sub_array_sum_repeated_helper&gt;\n   #&lt;procedure:max_sub_array_sum_repeated_helper&gt;\n   #&lt;procedure:max_sub_array_sum_repeated_helper&gt;\n   #&lt;procedure:max_sub_array_sum_repeated_helper&gt;\n   #&lt;proced",
    "  (define (max_sub_array_sum a n)\n    (define (max_sub_array_sum_helper a n)\n      (define (max_sub_array_sum_helper_helper a n max_sum max_sum_start max_sum_end)\n        (if (= n 0)\n            (values max_sum max_sum_start max_sum_end)\n            (let ((current_sum (+ (car a) (car (max_sub_array_sum_helper a (- n 1))))))\n              (if (&gt; current_sum max_sum)\n                  (max_sub_array_sum_helper_helper (cdr a) (- n 1) current_sum (- n 1) 0)\n                  (max_sub_array_sum_helper_helper (cdr a) (- n 1) max_sum max_sum_start max_sum_end)))))\n      (max_sub_array_sum_helper_helper a n 0 0 0))\n    (let ((max_sum (car (max_sub_array_sum_helper a n))))\n      (if (&gt; max_sum 0)\n          max_sum\n          0)))\n  (define (max_sub_array_sum_repeated_helper a n k)\n    (if (= k 1)\n        (max_sub_array_sum a n)\n        (let ((max_sum (max_sub_array_sum a n)))\n          (if (&gt; max_sum 0)\n              (max_sub_array_sum_repeated_helper a n (- k 1))\n              0))))\n  (max_sub_array_sum_repeated_helper a n k))\n</code>\n",
    "  (define (max_sub_array_sum a n)\n    (define (max_sub_array_sum_helper a n max_sum curr_sum)\n      (cond\n        [(= n 0) max_sum]\n        [(> curr_sum max_sum) (max_sub_array_sum_helper a (- n 1) curr_sum (+ curr_sum (list-ref a (- n 1))))]\n        [else (max_sub_array_sum_helper a (- n 1) max_sum (+ curr_sum (list-ref a (- n 1))))]))\n    (max_sub_array_sum_helper a n 0 0))\n  (define (max_sub_array_sum_repeated_helper a n k max_sum)\n    (cond\n      [(= k 0) max_sum]\n      [else (max_sub_array_sum_repeated_helper a n (- k 1) (max max_sum (max_sub_array_sum a n)))]))\n  (max_sub_array_sum_repeated_helper a n k 0))\n",
    "  (define (max_sub_array_sum a n)\n    (define (max_sub_array_sum_aux a n max_sum)\n      (cond\n        [(= n 0) max_sum]\n        [(>= max_sum 0)\n         (max_sub_array_sum_aux (cdr a) (- n 1) (+ max_sum (car a)))]\n        [else\n         (max_sub_array_sum_aux (cdr a) (- n 1) (car a))]))\n    (max_sub_array_sum_aux a n 0))\n  (define (max_sub_array_sum_repeated_aux a n k max_sum)\n    (cond\n      [(= k 0) max_sum]\n      [else\n       (max_sub_array_sum_repeated_aux a n (- k 1) (max max_sum (max_sub_array_sum a n)))]))\n  (max_sub_array_sum_repeated_aux a n k 0))\n",
    "  (define (max_sub_array_sum_repeated_helper a n k max_sum)\n    (cond ((= n 0) max_sum)\n          ((= k 1) (max_sub_array_sum_repeated_helper a (- n 1) k (max max_sum (list-ref a 0))))\n          ((= k 2) (max_sub_array_sum_repeated_helper a (- n 1) k (max max_sum (+ (list-ref a 0) (list-ref a (- n 1))))))\n          (else (max_sub_array_sum_repeated_helper a (- n 1) k (max max_sum (+ (list-ref a 0) (list-ref a (- n 1)) (max_sub_array_sum_repeated a (- n 1) (- k 2))))))))\n  (max_sub_array_sum_repeated_helper a n k 0))\n",
    "  (define (sum_of_array a n)\n    (cond\n      [(= n 1) (car a)]\n      [else (+ (car a) (sum_of_array (cdr a) (- n 1)))]))\n  (define (max_sub_array_sum_repeated_helper a n k max)\n    (cond\n      [(= n 1) max]\n      [else (max_sub_array_sum_repeated_helper a (- n 1) k (max (sum_of_array a n) max))]))\n  (max_sub_array_sum_repeated_helper a n k (sum_of_array a n)))\n",
    "  (define (max_sub_array_sum a n)\n    (define (max_sub_array_sum_helper a n max_sum curr_sum)\n      (if (= n 0)\n          max_sum\n          (let ((new_curr_sum (+ curr_sum (car a))))\n            (if (&lt; new_curr_sum 0)\n                (max_sub_array_sum_helper (cdr a) (- n 1) max_sum 0)\n                (max_sub_array_sum_helper (cdr a) (- n 1) (max max_sum new_curr_sum) new_curr_sum)))))\n    (max_sub_array_sum_helper a n 0 0))\n  (define (max_sub_array_sum_repeated_helper a n k max_sum)\n    (if (= k 0)\n        max_sum\n        (max_sub_array_sum_repeated_helper a n (- k 1) (max max_sum (max_sub_array_sum a n)))))\n  (max_sub_array_sum_repeated_helper a n k 0))\n</code>\n",
    "  (define (max_sub_array_sum a n)\n    (define (max_sub_array_sum_helper a n max_sum cur_sum)\n      (cond\n        [(= n 0) max_sum]\n        [(> cur_sum max_sum) (max_sub_array_sum_helper (cdr a) (- n 1) cur_sum (+ cur_sum (car a)))]\n        [else (max_sub_array_sum_helper (cdr a) (- n 1) max_sum (+ cur_sum (car a)))]))\n    (max_sub_array_sum_helper a n (car a) (car a)))\n  (define (max_sub_array_sum_repeated_helper a n k max_sum cur_sum)\n    (cond\n      [(= k 0) max_sum]\n      [(> cur_sum max_sum) (max_sub_array_sum_repeated_helper a n (- k 1) cur_sum (+ cur_sum (max_sub_array_sum a n)))]\n      [else (max_sub_array_sum_repeated_helper a n (- k 1) max_sum (+ cur_sum (max_sub_array_sum a n)))]))\n  (max_sub_array_sum_repeated_helper a n k (max_sub_array_sum a n) (max_sub_array_sum a n)))\n",
    "  (define (mss a n)\n    (define (mss-helper a n max-so-far)\n      (if (= n 1)\n          (max max-so-far (first a))\n          (mss-helper (rest a) (- n 1) (max max-so-far (apply + (take a n))))))\n    (mss-helper a n 0))\n  (define (take a n)\n    (if (= n 0)\n        '()\n        (cons (first a) (take (rest a) (- n 1)))))\n  (define (max-sub-array-sum-repeated-helper a n k max-so-far)\n    (if (= k 1)\n        (max max-so-far (mss a n))\n        (max-sub-array-sum-repeated-helper a n (- k 1) (max max-so-far (mss a n)))))\n  (max-sub-array-sum-repeated-helper a n k 0))\n</code>\n",
    "  (define (max_sub_array_sum a n)\n    (define (max_sub_array_sum_helper a n max_sum max_sum_ending_here)\n      (cond\n        [(= n 0) max_sum]\n        [(> max_sum_ending_here 0)\n         (max_sub_array_sum_helper (cdr a) (- n 1) (max max_sum max_sum_ending_here) (+ max_sum_ending_here (car a))) ]\n        [else\n         (max_sub_array_sum_helper (cdr a) (- n 1) (max max_sum max_sum_ending_here) (car a))]))\n    (max_sub_array_sum_helper a n 0 0))\n  (define (max_sub_array_sum_repeated_helper a n k max_sum)\n    (cond\n      [(= k 0) max_sum]\n      [else\n       (max_sub_array_sum_repeated_helper a n (- k 1) (max max_sum (max_sub_array_sum a n)))]))\n  (max_sub_array_sum_repeated_helper a n k 0))\n",
    "  (define (max_sub_array_sum_repeated_helper a n k sum max-sum)\n    (cond\n      [(= n 0) max-sum]\n      [(= k 0) (max-sub-array-sum-repeated-helper a n (- k 1) 0 (max max-sum sum))]\n      [else (max-sub-array-sum-repeated-helper a (- n 1) k (+ sum (list-ref a (- n 1))) (max max-sum sum))]))\n  (max-sub-array-sum-repeated-helper a n k 0 0))\n",
    "  (define (max_sub_array_sum a n)\n    (define (max_sub_array_sum_helper a n i max_sum curr_sum)\n      (cond\n        [(= i n) max_sum]\n        [(>= curr_sum 0) (max_sub_array_sum_helper a n (+ i 1) (max max_sum (+ curr_sum (list-ref a i))) (+ curr_sum (list-ref a i)))]\n        [else (max_sub_array_sum_helper a n (+ i 1) (max max_sum (list-ref a i)) (list-ref a i))]))\n    (max_sub_array_sum_helper a n 0 0 0))\n  (define (max_sub_array_sum_repeated_helper a n k i max_sum curr_sum)\n    (cond\n      [(= i k) max_sum]\n      [(>= curr_sum 0) (max_sub_array_sum_repeated_helper a n k (+ i 1) (max max_sum (+ curr_sum (list-ref a i))) (+ curr_sum (list-ref a i)))]\n      [else (max_sub_array_sum_repeated_helper a n k (+ i 1) (max max_sum (list-ref a i)) (list-ref a i))]))\n  (max_sub_array_sum_repeated_helper a n k 0 0 0))\n",
    "  (define (max_sub_array_sum_repeated_helper a n k sum)\n    (cond\n      [(zero? k) sum]\n      [(zero? n) (max_sub_array_sum_repeated_helper a (sub1 n) k sum)]\n      [else (max_sub_array_sum_repeated_helper a (sub1 n) k (max sum (apply + (sublist a 0 n))))]))\n  (max_sub_array_sum_repeated_helper a n k 0))\n",
    "  (define (max_sub_array_sum a n)\n    (define (max_sub_array_sum_helper a n max_so_far max_ending_here)\n      (cond\n        [(= n 0) max_so_far]\n        [else\n         (define max_ending_here (- max_ending_here (list-ref a (- n k)) (list-ref a (- n 1))))\n         (define max_so_far (max max_so_far max_ending_here))\n         (max_sub_array_sum_helper a (- n 1) max_so_far max_ending_here)]))\n    (max_sub_array_sum_helper a n 0 0))\n  (max_sub_array_sum a n))\n",
    "  (define (max_sub_array_sum a n)\n    (define (max_sub_array_sum_helper a n max_sum)\n      (if (= n 0)\n          max_sum\n          (let ([cur_sum (+ (car a) max_sum)])\n            (if (&lt; cur_sum 0)\n                (max_sub_array_sum_helper (cdr a) (- n 1) 0)\n                (max_sub_array_sum_helper (cdr a) (- n 1) cur_sum)))))\n    (max_sub_array_sum_helper a n 0))\n  (define (max_sub_array_sum_repeated_helper a n k max_sum)\n    (if (= k 0)\n        max_sum\n        (let ([cur_sum (max_sub_array_sum a n)])\n          (if (&lt; cur_sum max_sum)\n              (max_sub_array_sum_repeated_helper a n (- k 1) max_sum)\n              (max_sub_array_sum_repeated_helper a n (- k 1) cur_sum)))))\n  (max_sub_array_sum_repeated_helper a n k 0))\n</code>\n",
    "  (define (max_sub_array_sum a n)\n    (define (max_sub_array_sum_helper a n max_sum max_sum_ending_here)\n      (if (= n 0)\n          max_sum\n          (let ((max_sum_ending_here (+ max_sum_ending_here (list-ref a (- n 1)))))\n            (if (&lt; max_sum_ending_here 0)\n                (max_sub_array_sum_helper a (- n 1) max_sum 0)\n                (max_sub_array_sum_helper a (- n 1) (max max_sum max_sum_ending_here) max_sum_ending_here)))))\n    (max_sub_array_sum_helper a n 0 0))\n  (define (max_sub_array_sum_repeated_helper a n k max_sum)\n    (if (= k 1)\n        (max_sub_array_sum a n)\n        (max_sub_array_sum_repeated_helper a n (- k 1) (max max_sum (max_sub_array_sum a n)))))\n  (max_sub_array_sum_repeated_helper a n k 0))\n",
    "  (define (max_sub_array_sum_repeated_helper a n k sum max-sum)\n    (cond\n      [(= n 0) max-sum]\n      [(= k 0) (max_sub_array_sum_repeated_helper a (- n 1) (- k 1) 0 max-sum)]\n      [(= k 1) (max_sub_array_sum_repeated_helper a (- n 1) (- k 1) (+ sum (list-ref a (- n 1))) (max sum max-sum))]\n      [else (max_sub_array_sum_repeated_helper a (- n 1) (- k 1) (+ sum (list-ref a (- n 1))) (max sum max-sum))]))\n  (max_sub_array_sum_repeated_helper a n k 0 0))\n",
    "  (define (max_sub_array_sum a n)\n    (define (max_sub_array_sum_helper a n max_sum curr_sum)\n      (cond\n        [(= n 0) max_sum]\n        [(> curr_sum max_sum) (max_sub_array_sum_helper a (- n 1) curr_sum (+ curr_sum (list-ref a (- n 1))))]\n        [else (max_sub_array_sum_helper a (- n 1) max_sum (+ curr_sum (list-ref a (- n 1))))]))\n    (max_sub_array_sum_helper a n 0 0))\n  (define (max_sub_array_sum_repeated_helper a n k max_sum curr_sum)\n    (cond\n      [(= k 0) max_sum]\n      [(> curr_sum max_sum) (max_sub_array_sum_repeated_helper a n (- k 1) curr_sum (+ curr_sum (max_sub_array_sum a n)))]\n      [else (max_sub_array_sum_repeated_helper a n (- k 1) max_sum (+ curr_sum (max_sub_array_sum a n)))]))\n  (max_sub_array_sum_repeated_helper a n k 0 0))\n",
    "  (define (max_sub_array_sum a n)\n    (define (max_sub_array_sum_helper a n max_sum curr_sum)\n      (if (zero? n)\n          max_sum\n          (let ([curr_sum (+ curr_sum (car a))])\n            (if (&lt; curr_sum 0)\n                (max_sub_array_sum_helper (cdr a) (- n 1) max_sum 0)\n                (max_sub_array_sum_helper (cdr a) (- n 1) (max max_sum curr_sum) curr_sum)))))\n    (max_sub_array_sum_helper a n 0 0))\n  (define (max_sub_array_sum_repeated_helper a n k max_sum)\n    (if (zero? k)\n        max_sum\n        (max_sub_array_sum_repeated_helper a n (- k 1) (max max_sum (max_sub_array_sum a n)))))\n  (max_sub_array_sum_repeated_helper a n k 0))\n",
    "  (define (max_sub_array_sum a n)\n    (define (max_sub_array_sum_helper a n max_sum curr_sum)\n      (cond\n        [(= n 0) max_sum]\n        [(>= curr_sum 0)\n         (max_sub_array_sum_helper (cdr a) (- n 1) (max max_sum (+ curr_sum (car a))) (+ curr_sum (car a)))]\n        [else\n         (max_sub_array_sum_helper (cdr a) (- n 1) (max max_sum (car a)) (car a))]))\n    (max_sub_array_sum_helper a n (car a) (car a)))\n  (define (max_sub_array_sum_repeated_helper a n k max_sum curr_sum)\n    (cond\n      [(= k 0) max_sum]\n      [(>= curr_sum 0)\n       (max_sub_array_sum_repeated_helper a n (- k 1) (max max_sum (+ curr_sum (car a))) (+ curr_sum (car a)))]\n      [else\n       (max_sub_array_sum_repeated_helper a n (- k 1) (max max_sum (car a)) (car a))]))\n  (max_sub_array_sum_repeated_helper a n k (max_sub_array_sum a n) (max_sub_array_sum a n)))\n",
    "  (define (max_sub_array_sum_repeated_helper a n k)\n    (if (= k 1)\n        (max_sub_array_sum a n)\n        (let ([m (max_sub_array_sum a n)])\n          (max m\n               (max_sub_array_sum_repeated_helper a n (- k 1))))))\n  (max_sub_array_sum_repeated_helper a n k))\n",
    "  (let loop ([a a] [n n] [k k] [max-sum 0] [cur-sum 0])\n    (cond [(zero? n) max-sum]\n          [(zero? k) (loop a n (- k 1) max-sum 0)]\n          [(>= cur-sum 0) (loop (cdr a) (- n 1) k max-sum (+ cur-sum (car a)))]\n          [else (loop (cdr a) (- n 1) k (max max-sum cur-sum) (car a))])))\n",
    "  (define (max_sub_array_sum a n)\n    (define (max_sub_array_sum_helper a n max_sum max_sum_so_far)\n      (cond\n        [(= n 0) max_sum]\n        [(> max_sum_so_far 0)\n         (max_sub_array_sum_helper (cdr a) (- n 1)\n                                   (max max_sum max_sum_so_far)\n                                   (+ max_sum_so_far (car a)))]\n        [else\n         (max_sub_array_sum_helper (cdr a) (- n 1)\n                                   (max max_sum (car a))\n                                   (car a))]))\n    (max_sub_array_sum_helper a n -1000000000 0))\n  (define (max_sub_array_sum_repeated_helper a n k max_sum_so_far)\n    (cond\n      [(= k 0) max_sum_so_far]\n      [else\n       (max_sub_array_sum_repeated_helper a n (- k 1)\n                                          (max max_sum_so_far\n                                               (max_sub_array_sum a n)))]))\n  (max_sub_array_sum_repeated_helper a n k -1000000000))\n",
    "  (define (max_sub_array_sum a n)\n    (define (max_sub_array_sum_helper a n max_sum)\n      (if (= n 0)\n          max_sum\n          (let ((new_max_sum (if (&gt; (car a) (+ (car a) max_sum))\n                                (car a)\n                                (+ (car a) max_sum))))\n            (max_sub_array_sum_helper (cdr a) (- n 1) new_max_sum))))\n    (max_sub_array_sum_helper a n 0))\n  (define (max_sub_array_sum_repeated_helper a n k max_sum)\n    (if (= k 0)\n        max_sum\n        (let ((new_max_sum (if (&gt; (max_sub_array_sum a n) max_sum)\n                              (max_sub_array_sum a n)\n                              max_sum)))\n          (max_sub_array_sum_repeated_helper a n (- k 1) new_max_sum))))\n  (max_sub_array_sum_repeated_helper a n k 0))\n</code>\n",
    "  (define (max_sub_array_sum_repeated_helper a n k acc)\n    (cond\n      [(= k 0) acc]\n      [else (max_sub_array_sum_repeated_helper a n (- k 1) (max acc (max_sub_array_sum a n)))]))\n  (max_sub_array_sum_repeated_helper a n k (max_sub_array_sum a n)))\n",
    "  (define (max_sub_array_sum a n)\n    (define (max_sub_array_sum_helper a n max_so_far max_ending_here)\n      (cond\n        [(= n 0) max_so_far]\n        [else\n         (let ([max_ending_here (max 0 (+ max_ending_here (vector-ref a (- n 1))))])\n           (max_sub_array_sum_helper a (- n 1) (max max_so_far max_ending_here) max_ending_here))]))\n    (max_sub_array_sum_helper a n 0 0))\n  (define (max_sub_array_sum_repeated_helper a n k max_so_far)\n    (cond\n      [(= k 0) max_so_far]\n      [else\n       (max_sub_array_sum_repeated_helper a n (- k 1) (max max_so_far (max_sub_array_sum a n)))]))\n  (max_sub_array_sum_repeated_helper a n k 0))\n",
    "  (define (max_sub_array_sum a n)\n    (define (max_sub_array_sum_helper a n max_sum max_sum_so_far)\n      (cond\n        [(= n 0) max_sum]\n        [(> max_sum_so_far 0)\n         (max_sub_array_sum_helper (cdr a) (- n 1) (max max_sum (+ max_sum_so_far (car a))) (+ max_sum_so_far (car a)))]\n        [else\n         (max_sub_array_sum_helper (cdr a) (- n 1) (max max_sum (car a)) (car a))]))\n    (max_sub_array_sum_helper a n 0 0))\n  (define (max_sub_array_sum_repeated_helper a n k max_sum)\n    (cond\n      [(= k 1) (max_sub_array_sum a n)]\n      [else\n       (max_sub_array_sum_repeated_helper a n (- k 1) (max max_sum (max_sub_array_sum a n)))]))\n  (max_sub_array_sum_repeated_helper a n k 0))\n",
    "  (define (max_sub_array_sum_repeated_helper a n k sum max-sum)\n    (cond\n      [(= n 0) max-sum]\n      [(= k 0) (max_sub_array_sum_repeated_helper a (- n 1) k (sum + (list-ref a (- n 1))) max-sum)]\n      [(>= sum 0) (max_sub_array_sum_repeated_helper a (- n 1) (- k 1) (sum + (list-ref a (- n 1))) (max max-sum sum))]\n      [else (max_sub_array_sum_repeated_helper a (- n 1) (- k 1) (list-ref a (- n 1)) (max max-sum sum))]))\n  (max_sub_array_sum_repeated_helper a n k 0 0))\n",
    "  (define (max_sub_array_sum_repeated_helper a n k sum)\n    (if (= n 0)\n        sum\n        (max_sub_array_sum_repeated_helper a (- n 1) k (max sum (+ sum (list-ref a (- n 1)))))))\n  (max_sub_array_sum_repeated_helper a n k 0))\n",
    "  (define (max_sub_array_sum_repeated_helper a n k sum max)\n    (cond\n      [(= n 0) max]\n      [(> sum max) (max_sub_array_sum_repeated_helper a (- n 1) k (+ sum (list-ref a (- n 1))) sum)]\n      [(<= sum max) (max_sub_array_sum_repeated_helper a (- n 1) k (+ sum (list-ref a (- n 1))) max)]))\n  (max_sub_array_sum_repeated_helper a n k 0 0))\n",
    "  (define (max_sub_array_sum a n)\n    (define (max_sub_array_sum_helper a n max_sum curr_sum)\n      (if (zero? n)\n          max_sum\n          (let ((new_curr_sum (+ curr_sum (list-ref a (- n 1)))))\n            (if (&lt; new_curr_sum 0)\n                (max_sub_array_sum_helper a (- n 1) max_sum 0)\n                (max_sub_array_sum_helper a (- n 1) (max max_sum new_curr_sum) new_curr_sum)))))\n    (max_sub_array_sum_helper a n 0 0))\n  (define (max_sub_array_sum_repeated_helper a n k max_sum)\n    (if (zero? k)\n        max_sum\n        (max_sub_array_sum_repeated_helper a n (- k 1) (max max_sum (max_sub_array_sum a n)))))\n  (max_sub_array_sum_repeated_helper a n k 0))\n</code>\n",
    "  (define (max_sub_array_sum_repeated_helper a n k sum)\n    (cond\n      [(= n 0) sum]\n      [(= k 0) sum]\n      [else (max_sub_array_sum_repeated_helper a n (- k 1) (+ sum (apply + a)))]))\n  (max_sub_array_sum_repeated_helper a n k 0))\n",
    "  (define (max_sub_array_sum a n)\n    (define (max_sub_array_sum_helper a n max_sum cur_sum)\n      (cond\n        [(= n 0) max_sum]\n        [(> cur_sum max_sum) (max_sub_array_sum_helper a (- n 1) cur_sum (+ cur_sum (list-ref a (- n 1))))]\n        [else (max_sub_array_sum_helper a (- n 1) max_sum (+ cur_sum (list-ref a (- n 1))))]))\n    (max_sub_array_sum_helper a n 0 0))\n  (define (max_sub_array_sum_repeated_helper a n k max_sum)\n    (cond\n      [(= k 0) max_sum]\n      [else (max_sub_array_sum_repeated_helper a n (- k 1) (max max_sum (max_sub_array_sum a n)))]))\n  (max_sub_array_sum_repeated_helper a n k 0))\n",
    "  (define (max_sub_array_sum_repeated_helper a n k sum max_sum)\n    (cond\n      [(= n 0) max_sum]\n      [(= k 0) (max_sub_array_sum_repeated_helper a (- n 1) (- k 1) 0 max_sum)]\n      [(>= sum 0) (max_sub_array_sum_repeated_helper a (- n 1) k (+ sum (list-ref a (- n 1))) (max max_sum sum))]\n      [else (max_sub_array_sum_repeated_helper a (- n 1) k (list-ref a (- n 1)) (max max_sum sum))]))\n  (max_sub_array_sum_repeated_helper a n k 0 0))\n",
    "  (define (max_sub_array_sum a n)\n    (define (max_sub_array_sum_helper a n i max_sum)\n      (if (= i n)\n          max_sum\n          (let ((max_sum_here (+ (list-ref a i) max_sum)))\n            (if (&lt; max_sum_here 0)\n                (max_sub_array_sum_helper a n (+ i 1) 0)\n                (max_sub_array_sum_helper a n (+ i 1) max_sum_here)))))\n    (define (max_sub_array_sum_helper2 a n i max_sum)\n      (if (= i n)\n          max_sum\n          (let ((max_sum_here (max (list-ref a i) (+ (list-ref a i) max_sum))))\n            (max_sub_array_sum_helper2 a n (+ i 1) max_sum_here))))\n    (max_sub_array_sum_helper2 a n 0 0))\n  (define (max_sub_array_sum_repeated_helper a n k max_sum)\n    (if (= k 0)\n        max_sum\n        (max_sub_array_sum_repeated_helper a n (- k 1) (max (max_sub_array_sum a n) max_sum))))\n  (max_sub_array_sum_repeated_helper a n k 0))\n</code>\n",
    "  (define (max_sub_array_sum a n)\n    (define (max_sub_array_sum_helper a n i max_sum)\n      (if (= i n)\n          max_sum\n          (let ([sum (+ (array-ref a i) (if (&lt; 0 max_sum) max_sum 0))])\n            (max_sub_array_sum_helper a n (+ i 1) (max sum max_sum)))))\n    (max_sub_array_sum_helper a n 0 0))\n  (define (max_sub_array_sum_repeated_helper a n k i max_sum)\n    (if (= i k)\n        max_sum\n        (let ([sum (max_sub_array_sum a n)])\n          (max_sub_array_sum_repeated_helper a n k (+ i 1) (max sum max_sum)))))\n  (max_sub_array_sum_repeated_helper a n k 0 0))\n</code>\n",
    "  (define (max_sub_array_sum_repeated_helper a n k)\n    (if (= k 1)\n        (max_sub_array_sum a n)\n        (let* ((max_sum_a (max_sub_array_sum_repeated_helper a n (- k 1)))\n               (max_sum_a_b (max_sub_array_sum_repeated_helper (append a a) (* 2 n) (- k 1))))\n          (if (> max_sum_a max_sum_a_b)\n              max_sum_a\n              max_sum_a_b))))\n  (max_sub_array_sum_repeated_helper a n k))\n",
    "  (define (max_sub_array_sum a n)\n    (define (max_sub_array_sum_helper a n i max_sum)\n      (if (= i n)\n          max_sum\n          (let ((max_sum_here (+ (list-ref a i) max_sum)))\n            (if (&lt; max_sum_here 0)\n                (max_sub_array_sum_helper a n (+ i 1) 0)\n                (max_sub_array_sum_helper a n (+ i 1) max_sum_here)))))\n    (define (max_sub_array_sum_helper2 a n i max_sum)\n      (if (= i n)\n          max_sum\n          (let ((max_sum_here (max (list-ref a i) (+ (list-ref a i) max_sum))))\n            (max_sub_array_sum_helper2 a n (+ i 1) max_sum_here))))\n    (max_sub_array_sum_helper2 a n 0 0))\n  (define (max_sub_array_sum_repeated_helper a n k max_sum)\n    (if (= k 0)\n        max_sum\n        (let ((max_sum_here (max_sub_array_sum a n)))\n          (max_sub_array_sum_repeated_helper a n (- k 1) (max max_sum_here max_sum)))))\n  (max_sub_array_sum_repeated_helper a n k 0))\n</code>\n",
    "  (define (max_sub_array_sum_repeated_helper a n k max-sum)\n    (cond\n      [(= n 0) max-sum]\n      [(= k 1) (max-sub-array-sum a n max-sum)]\n      [else (max-sub-array-sum-repeated-helper a n (- k 1) (max-sub-array-sum a n max-sum))]))\n  (max-sub-array-sum-repeated-helper a n k 0))\n",
    "  (define (max_sub_array_sum_repeated_helper a n k)\n    (cond\n      [(= k 1) (max_sub_array_sum a n)]\n      [(= k 2) (max_sub_array_sum_repeated_helper (append a a) n 1)]\n      [else (max_sub_array_sum_repeated_helper (append a a) n (- k 2))]))\n  (max_sub_array_sum_repeated_helper a n k))\n",
    "  (define (max_sub_array_sum a n)\n    (define (max_sub_array_sum_helper a n max_sum cur_sum)\n      (cond\n        [(= n 0) max_sum]\n        [(>= cur_sum 0)\n         (max_sub_array_sum_helper (cdr a) (- n 1) (max max_sum (+ cur_sum (car a))) (+ cur_sum (car a)))]\n        [else\n         (max_sub_array_sum_helper (cdr a) (- n 1) (max max_sum (car a)) (car a))]))\n    (max_sub_array_sum_helper a n (car a) (car a)))\n  (define (max_sub_array_sum_repeated_helper a n k max_sum cur_sum)\n    (cond\n      [(= k 1) (max_sub_array_sum a n)]\n      [(>= cur_sum 0)\n       (max_sub_array_sum_repeated_helper (cdr a) (- n 1) (- k 1) (max max_sum (+ cur_sum (car a))) (+ cur_sum (car a)))]\n      [else\n       (max_sub_array_sum_repeated_helper (cdr a) (- n 1) (- k 1) (max max_sum (car a)) (car a))]))\n  (max_sub_array_sum_repeated_helper a n k (car a) (car a)))\n",
    "  (define (max_sub_array_sum_repeated_helper a n k sum max-sum)\n    (cond\n      [(= n 0) max-sum]\n      [(= k 0) (max-sub-array-sum-repeated-helper a n (- k 1) 0 max-sum)]\n      [(>= sum 0) (max-sub-array-sum-repeated-helper a (- n 1) k (+ sum (list-ref a (- n 1))) (max sum max-sum))]\n      [else (max-sub-array-sum-repeated-helper a (- n 1) k (list-ref a (- n 1)) (max sum max-sum))]))\n  (max-sub-array-sum-repeated-helper a n k 0 0))\n",
    "  (define (max_sub_array_sum a n)\n    (define (max_sub_array_sum_helper a n max_sum curr_sum)\n      (cond\n        [(= n 0) max_sum]\n        [(> curr_sum max_sum) (max_sub_array_sum_helper a (- n 1) curr_sum (+ curr_sum (list-ref a (- n 1))))]\n        [else (max_sub_array_sum_helper a (- n 1) max_sum (+ curr_sum (list-ref a (- n 1))))]))\n    (max_sub_array_sum_helper a n 0 0))\n  (define (max_sub_array_sum_repeated_helper a n k max_sum)\n    (cond\n      [(= k 0) max_sum]\n      [else (max_sub_array_sum_repeated_helper a n (- k 1) (max max_sum (max_sub_array_sum a n)))]))\n  (max_sub_array_sum_repeated_helper a n k 0))\n",
    "  (define (max_sub_array_sum_repeated_helper a n k)\n    (cond\n      [(= k 1) (max_sub_array_sum a n)]\n      [(= k 2) (max_sub_array_sum_2 a n)]\n      [else (max_sub_array_sum_repeated_helper a n (- k 1))]))\n  (max_sub_array_sum_repeated_helper a n k))\n",
    "  (define (max_sub_array_sum a n)\n    (define (max_sub_array_sum_helper a n max_so_far max_ending_here)\n      (cond\n        [(= n 0) max_so_far]\n        [else\n         (define max_ending_here (+ max_ending_here (list-ref a (- n 1))))\n         (define max_so_far (max max_so_far max_ending_here))\n         (define max_ending_here (max 0 max_ending_here))\n         (max_sub_array_sum_helper a (- n 1) max_so_far max_ending_here)]))\n    (max_sub_array_sum_helper a n 0 0))\n  (define (max_sub_array_sum_repeated_helper a n k max_so_far)\n    (cond\n      [(= k 1) (max_sub_array_sum a n)]\n      [else\n       (define max_so_far (max_sub_array_sum a n))\n       (define max_so_far (max max_so_far (max_sub_array_sum_repeated_helper a n (- k 1) max_so_far)))\n       max_so_far]))\n  (max_sub_array_sum_repeated_helper a n k 0))\n",
    "  (define (max_sub_array_sum_repeated_helper a n k)\n    (define (max_sub_array_sum_repeated_helper_helper a n k)\n      (define (max_sub_array_sum_repeated_helper_helper_helper a n k)\n        (define (max_sub_array_sum_repeated_helper_helper_helper_helper a n k)\n          (define (max_sub_array_sum_repeated_helper_helper_helper_helper_helper a n k)\n            (define (max_sub_array_sum_repeated_helper_helper_helper_helper_helper_helper a n k)\n              (define (max_sub_array_sum_repeated_helper_helper_helper_helper_helper_helper_helper a n k)\n                (define (max_sub_array_sum_repeated_helper_helper_helper_helper_helper_helper_helper_helper a n k)\n                  (define (max_sub_array_sum_repeated_helper_helper_helper_helper_helper_helper_helper_helper_helper a n k)\n                    (define (max_sub_array_sum_repeated_helper_helper_helper_helper_helper_helper_helper_helper_helper_helper a n k)\n                      (define (max_sub_array_sum_repeated_helper_helper_helper_helper_helper_helper_helper_helper_helper_helper_helper a n k)\n                        (define (max_sub_array_sum_repeated_helper_helper_helper_helper_helper_helper_helper_helper_helper_helper_helper_helper a n k)\n                          (define (max_sub_array_sum_repeated_helper_helper_helper_helper_helper_helper_helper_helper_helper_helper_helper_",
    "  (define (max_sub_array_sum a n)\n    (define (max_sub_array_sum_helper a n max_sum cur_sum)\n      (cond\n        [(= n 0) max_sum]\n        [(> cur_sum max_sum) (max_sub_array_sum_helper a (- n 1) cur_sum (+ cur_sum (list-ref a (- n 1))))]\n        [else (max_sub_array_sum_helper a (- n 1) max_sum (+ cur_sum (list-ref a (- n 1))))]))\n    (max_sub_array_sum_helper a n 0 0))\n  (define (max_sub_array_sum_repeated_helper a n k max_sum)\n    (cond\n      [(= k 0) max_sum]\n      [else (max_sub_array_sum_repeated_helper a n (- k 1) (max max_sum (max_sub_array_sum a n)))]))\n  (max_sub_array_sum_repeated_helper a n k 0))\n",
    "  (define (max_sub_array_sum_repeated_helper a n k)\n    (cond\n      [(= k 1) (max_sub_array_sum a n)]\n      [(= k 2) (max_sub_array_sum_repeated_helper (append a a) (* 2 n) 1)]\n      [else (max_sub_array_sum_repeated_helper (append a a) (* 2 n) (- k 2))]))\n  (max_sub_array_sum_repeated_helper a n k))\n",
    "  (define (max_sub_array_sum a n)\n    (define (max_sub_array_sum_helper a n max_so_far max_ending_here)\n      (cond\n        [(= n 0) max_so_far]\n        [else\n         (define max_ending_here (max 0 (+ max_ending_here (car a))))\n         (define max_so_far (max max_so_far max_ending_here))\n         (max_sub_array_sum_helper (cdr a) (- n 1) max_so_far max_ending_here)]))\n    (max_sub_array_sum_helper a n 0 0))\n  (define (max_sub_array_sum_repeated_helper a n k max_so_far)\n    (cond\n      [(= k 0) max_so_far]\n      [else\n       (define max_so_far (max max_so_far (max_sub_array_sum a n)))\n       (max_sub_array_sum_repeated_helper a n (- k 1) max_so_far)]))\n  (max_sub_array_sum_repeated_helper a n k 0))\n",
    "  (define (max_sub_array_sum a n)\n    (define (max_sub_array_sum_helper a n start end max-sum)\n      (cond\n        [(= start end) max-sum]\n        [(>= (+ (list-ref a start) (list-ref a end)) max-sum)\n         (max_sub_array_sum_helper a n start (+ end 1) (+ (list-ref a start) (list-ref a end)))]\n        [else (max_sub_array_sum_helper a n start (+ end 1) max-sum)]))\n    (define (max_sub_array_sum_helper2 a n start end max-sum)\n      (cond\n        [(= start end) max-sum]\n        [else (max_sub_array_sum_helper a n start (+ end 1) max-sum)]))\n    (define (max_sub_array_sum_helper3 a n start end max-sum)\n      (cond\n        [(= start end) max-sum]\n        [(>= (list-ref a start) max-sum)\n         (max_sub_array_sum_helper3 a n start (+ end 1) (list-ref a start))]\n        [else (max_sub_array_sum_helper3 a n start (+ end 1) max-sum)]))\n    (define (max_sub_array_sum_helper4 a n start end max-sum)\n      (cond\n        [(= start end) max-sum]\n        [(>= (+ (list-ref a start) max-sum) 0)\n         (max_sub_array_sum_helper4 a n start (+ end 1) (+ (list-ref a start) max-sum))]\n        [else (max_sub_array_sum_helper4 a n start (+ end 1) 0)]))\n    (define (max_sub_array_sum_helper5 a n start end max-sum)\n      (cond\n        [(= start end) max-sum]\n        [(>= (list-ref a start) max-sum)\n         (max_sub_array_sum_helper5 a n start (+ end 1)",
    "  (define (max_sub_array_sum a n)\n    (define (max_sub_array_sum_helper a n max_sum cur_sum)\n      (if (= n 0)\n          max_sum\n          (let ((new_sum (+ cur_sum (car a))))\n            (if (&lt; new_sum 0)\n                (max_sub_array_sum_helper (cdr a) (- n 1) (max max_sum cur_sum) 0)\n                (max_sub_array_sum_helper (cdr a) (- n 1) (max max_sum new_sum) new_sum)))))\n    (max_sub_array_sum_helper a n 0 0))\n  (define (max_sub_array_sum_repeated_helper a n k max_sum)\n    (if (= k 0)\n        max_sum\n        (max_sub_array_sum_repeated_helper a n (- k 1) (max max_sum (max_sub_array_sum a n)))))\n  (max_sub_array_sum_repeated_helper a n k 0))\n",
    "  (define (max_sub_array_sum_repeated_helper a n k max_sum)\n    (cond\n      [(= n 0) max_sum]\n      [else\n       (let ([cur_sum (apply + (take a k))])\n         (max_sub_array_sum_repeated_helper (rest a) (- n 1) k (max max_sum cur_sum)))]))\n  (max_sub_array_sum_repeated_helper a n k 0))\n",
    "  (define (max_sub_array_sum a n)\n    (define (max_sub_array_sum_helper a n max_sum)\n      (if (zero? n)\n          max_sum\n          (let ((cur_sum (+ (car a) (max_sub_array_sum_helper (cdr a) (- n 1) max_sum))))\n            (if (&gt; cur_sum max_sum)\n                cur_sum\n                max_sum))))\n    (max_sub_array_sum_helper a n 0))\n  (define (max_sub_array_sum_repeated_helper a n k max_sum)\n    (if (zero? k)\n        max_sum\n        (let ((cur_sum (max_sub_array_sum a n)))\n          (if (&gt; cur_sum max_sum)\n              (max_sub_array_sum_repeated_helper a n (- k 1) cur_sum)\n              (max_sub_array_sum_repeated_helper a n (- k 1) max_sum)))))\n  (max_sub_array_sum_repeated_helper a n k 0))\n</code>\n",
    "  (define (max_sub_array_sum a n)\n    (define (max_sub_array_sum_helper a n i max_sum curr_sum)\n      (cond ((= i n) max_sum)\n            ((&gt;= curr_sum 0)\n             (max_sub_array_sum_helper a n (+ i 1) (max max_sum curr_sum) (+ curr_sum (vector-ref a i))))\n            (else (max_sub_array_sum_helper a n (+ i 1) max_sum (vector-ref a i)))))\n    (max_sub_array_sum_helper a n 0 0 0))\n  (define (max_sub_array_sum_repeated_helper a n k max_sum curr_sum)\n    (cond ((= k 1) (max_sub_array_sum a n))\n          ((&gt;= curr_sum 0)\n           (max_sub_array_sum_repeated_helper a n (- k 1) (max max_sum curr_sum) (+ curr_sum (max_sub_array_sum a n))))\n          (else (max_sub_array_sum_repeated_helper a n (- k 1) max_sum (max_sub_array_sum a n)))))\n  (max_sub_array_sum_repeated_helper a n k 0 0))\n</code>\n",
    "  (define (max_sub_array_sum a n)\n    (define (max_sub_array_sum_helper a n max_sum curr_sum)\n      (cond ((= n 0) max_sum)\n            ((&gt; curr_sum max_sum)\n             (max_sub_array_sum_helper (cdr a) (- n 1) curr_sum (+ curr_sum (car a))))\n            (else\n             (max_sub_array_sum_helper (cdr a) (- n 1) max_sum (+ curr_sum (car a))))))\n    (max_sub_array_sum_helper a n (car a) (car a)))\n  (define (max_sub_array_sum_repeated_helper a n k max_sum)\n    (cond ((= k 1) (max_sub_array_sum a n))\n          ((&gt; (max_sub_array_sum a n) max_sum)\n           (max_sub_array_sum_repeated_helper a n (- k 1) (max_sub_array_sum a n)))\n          (else\n           (max_sub_array_sum_repeated_helper a n (- k 1) max_sum))))\n  (max_sub_array_sum_repeated_helper a n k (max_sub_array_sum a n)))\n",
    "  (define (max_sub_array_sum_repeated_helper a n k max_sum)\n    (cond\n      [(= n 0) max_sum]\n      [else\n       (define current_sum (apply + (take a n)))\n       (define max_sum (max max_sum current_sum))\n       (define next_sum (apply + (take a (- n 1))))\n       (max_sub_array_sum_repeated_helper a (- n 1) k (max max_sum (+ max_sum (* (- k 1) next_sum))))]))\n  (max_sub_array_sum_repeated_helper a n k 0))\n",
    "  (define (max_sub_array_sum a n)\n    (define (max_sub_array_sum_helper a n max_so_far max_ending_here)\n      (if (= n 0)\n          max_so_far\n          (let ((max_ending_here (+ max_ending_here (list-ref a (- n 1)))))\n            (if (&lt; max_ending_here 0)\n                (max_sub_array_sum_helper a (- n 1) max_so_far 0)\n                (max_sub_array_sum_helper a (- n 1) (max max_so_far max_ending_here) max_ending_here)))))\n    (max_sub_array_sum_helper a n 0 0))\n  (define (max_sub_array_sum_repeated_helper a n k max_so_far)\n    (if (= k 0)\n        max_so_far\n        (max_sub_array_sum_repeated_helper a n (- k 1) (max max_so_far (max_sub_array_sum a n)))))\n  (max_sub_array_sum_repeated_helper a n k 0))\n",
    "  (define (max_sub_array_sum_repeated_helper a n k)\n    (define (max_sub_array_sum_repeated_helper_helper a n k)\n      (define (max_sub_array_sum_repeated_helper_helper_helper a n k)\n        (define (max_sub_array_sum_repeated_helper_helper_helper_helper a n k)\n          (define (max_sub_array_sum_repeated_helper_helper_helper_helper_helper a n k)\n            (define (max_sub_array_sum_repeated_helper_helper_helper_helper_helper_helper a n k)\n              (define (max_sub_array_sum_repeated_helper_helper_helper_helper_helper_helper_helper a n k)\n                (define (max_sub_array_sum_repeated_helper_helper_helper_helper_helper_helper_helper_helper a n k)\n                  (define (max_sub_array_sum_repeated_helper_helper_helper_helper_helper_helper_helper_helper_helper a n k)\n                    (define (max_sub_array_sum_repeated_helper_helper_helper_helper_helper_helper_helper_helper_helper_helper a n k)\n                      (define (max_sub_array_sum_repeated_helper_helper_helper_helper_helper_helper_helper_helper_helper_helper_helper a n k)\n                        (define (max_sub_array_sum_repeated_helper_helper_helper_helper_helper_helper_helper_helper_helper_helper_helper_helper a n k)\n                          (define (max_sub_array_sum_repeated_helper_helper_helper_helper_helper_helper_helper_helper_helper_helper_helper_"
  ]
}
{
  "name": "mbpp_420_cube_Sum",
  "language": "rkt",
  "prompt": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_420_cube_Sum.py",
  "prompt_terminology": "reworded",
  "tests": "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
  "stop_tokens": [
    "\n(define ",
    "\n#|",
    "\n;",
    "\n("
  ],
  "results": [
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cube x)\n    (* x x x))\n  (define (even? x)\n    (= (remainder x 2) 0))\n  (define (sum_even_cubes n)\n    (cond ((= n 0) 0)\n          ((even? n) (+ (cube n) (sum_even_cubes (- n 1))))\n          (else (sum_even_cubes (- n 1)))))\n  (sum_even_cubes n))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpw67vn9je.rkt:20:4\nactual:     8\nexpected:   72\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpw67vn9je.rkt:21:4\nactual:     8\nexpected:   288\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpw67vn9je.rkt:22:4\nactual:     72\nexpected:   800\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cube_Sum_iter n sum)\n    (if (= n 0)\n        sum\n        (cube_Sum_iter (- n 2) (+ sum (* n n n)))))\n  (cube_Sum_iter n 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1665510516,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp7yd97gvk.rkt:16:4\nactual:     8\nexpected:   72\n--------------------\n",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (if (= n 0)\n      0\n      (+ (* n n n) (cube_Sum (- n 2)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1665510516,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp63g3jtpf.rkt:14:4\nactual:     8\nexpected:   72\n--------------------\n",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cube_Sum_iter sum i)\n    (if (= i n)\n        sum\n        (cube_Sum_iter (+ sum (* i i i)) (+ i 1))))\n  (cube_Sum_iter 0 2))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpom11iruu.rkt:16:4\nactual:     0\nexpected:   72\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpom11iruu.rkt:17:4\nactual:     8\nexpected:   288\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpom11iruu.rkt:18:4\nactual:     35\nexpected:   800\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cubeSum_iter n sum)\n    (if (= n 0)\n        sum\n        (cubeSum_iter (- n 1) (+ sum (* n n n)))))\n  (cubeSum_iter n 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpy534fdkq.rkt:16:4\nactual:     9\nexpected:   72\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpy534fdkq.rkt:17:4\nactual:     36\nexpected:   288\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpy534fdkq.rkt:18:4\nactual:     100\nexpected:   800\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cube_Sum_helper n sum)\n    (if (= n 0)\n        sum\n        (cube_Sum_helper (- n 1) (+ sum (* n n n)))))\n  (cube_Sum_helper n 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp2lbnzts9.rkt:16:4\nactual:     9\nexpected:   72\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp2lbnzts9.rkt:17:4\nactual:     36\nexpected:   288\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp2lbnzts9.rkt:18:4\nactual:     100\nexpected:   800\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cube_Sum_iter n sum)\n    (if (= n 0)\n        sum\n        (cube_Sum_iter (- n 2) (+ sum (* n n n)))))\n  (cube_Sum_iter n 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1665510516,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp7yd97gvk.rkt:16:4\nactual:     8\nexpected:   72\n--------------------\n",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (if (= n 0)\n      0\n      (+ (expt (* 2 n) 3) (cube_Sum (- n 1)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (cond\n    [(= n 0) 0]\n    [else (+ (expt (* 2 n) 3) (cube_Sum (- n 1)))]))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (cond\n    [(= n 0) 0]\n    [else (+ (expt (2*n) 3) (cube_Sum (- n 1)))]))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "/tmp/tmp6m2qo31x.rkt:7:20: 2*n: unbound identifier\n  in: 2*n\n  location...:\n   /tmp/tmp6m2qo31x.rkt:7:20\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cube_Sum_iter n sum)\n    (if (= n 0)\n        sum\n        (cube_Sum_iter (- n 1) (+ sum (* n n n)))))\n  (cube_Sum_iter n 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmppyt1ww2b.rkt:16:4\nactual:     9\nexpected:   72\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmppyt1ww2b.rkt:17:4\nactual:     36\nexpected:   288\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmppyt1ww2b.rkt:18:4\nactual:     100\nexpected:   800\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (cond\n    [(= n 0) 0]\n    [else (+ (expt (* 2 n) 3) (cube_Sum (- n 1)))]))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cubeSum_iter n sum)\n    (if (= n 0)\n        sum\n        (cubeSum_iter (- n 2) (+ sum (* n n n)))))\n  (cubeSum_iter n 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1665510516,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpkw0qkdy9.rkt:16:4\nactual:     8\nexpected:   72\n--------------------\n",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (sum_of_cubes n)\n    (if (= n 0)\n        0\n        (+ (expt n 3) (sum_of_cubes (- n 2)))))\n  (sum_of_cubes n))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1665510516,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp3q8en85a.rkt:16:4\nactual:     8\nexpected:   72\n--------------------\n",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cubeSumIter n sum)\n    (if (= n 0)\n        sum\n        (cubeSumIter (- n 1) (+ sum (* n n n)))))\n  (cubeSumIter n 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpqz_5y1db.rkt:16:4\nactual:     9\nexpected:   72\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpqz_5y1db.rkt:17:4\nactual:     36\nexpected:   288\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpqz_5y1db.rkt:18:4\nactual:     100\nexpected:   800\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cubeSum_iter i sum)\n    (if (= i n)\n        sum\n        (cubeSum_iter (+ i 1) (+ sum (* i i i)))))\n  (cubeSum_iter 1 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpdxzxzqkj.rkt:16:4\nactual:     1\nexpected:   72\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpdxzxzqkj.rkt:17:4\nactual:     9\nexpected:   288\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpdxzxzqkj.rkt:18:4\nactual:     36\nexpected:   800\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cube_Sum_iter n sum)\n    (if (= n 0)\n        sum\n        (cube_Sum_iter (- n 2) (+ sum (* n n n)))))\n  (cube_Sum_iter n 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1665510516,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp7yd97gvk.rkt:16:4\nactual:     8\nexpected:   72\n--------------------\n",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (cond\n    [(= n 0) 0]\n    [else (+ (expt (* 2 n) 3) (cube_Sum (- n 1)))]))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (if (= n 0)\n      0\n      (+ (expt (* 2 n) 3) (cube_Sum (- n 1)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cubeSumIter i sum)\n    (if (= i n)\n        sum\n        (cubeSumIter (+ i 1) (+ sum (* i i i)))))\n  (cubeSumIter 0 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpis_24ovw.rkt:16:4\nactual:     1\nexpected:   72\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpis_24ovw.rkt:17:4\nactual:     9\nexpected:   288\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpis_24ovw.rkt:18:4\nactual:     36\nexpected:   800\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cube_Sum_iter n acc)\n    (if (= n 0)\n        acc\n        (cube_Sum_iter (- n 1) (+ acc (* n n n)))))\n  (cube_Sum_iter n 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1666123757,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpt_fqx1uf.rkt:16:4\nactual:     9\nexpected:   72\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpt_fqx1uf.rkt:17:4\nactual:     36\nexpected:   288\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpt_fqx1uf.rkt:18:4\nactual:     100\nexpected:   800\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cubeSum_iter n sum)\n    (cond\n      [(= n 0) sum]\n      [else (cubeSum_iter (- n 2) (+ sum (* n n n)))]))\n  (cubeSum_iter n 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1666123770,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmphpfcaa6r.rkt:16:4\nactual:     8\nexpected:   72\n--------------------\n",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cube x) (* x x x))\n  (define (sum_of_cubes n)\n    (if (= n 1)\n        (cube 1)\n        (+ (cube n) (sum_of_cubes (- n 1)))))\n  (sum_of_cubes n))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1666123757,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9evfmpcf.rkt:17:4\nactual:     9\nexpected:   72\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9evfmpcf.rkt:18:4\nactual:     36\nexpected:   288\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9evfmpcf.rkt:19:4\nactual:     100\nexpected:   800\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (cond\n    [(= n 0) 0]\n    [else (+ (expt (* 2 n) 3) (cube_Sum (- n 1)))]))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cube x) (* x x x))\n  (define (sum_cubes_even n)\n    (if (= n 1)\n        (cube 2)\n        (+ (cube (+ n 2)) (sum_cubes_even (- n 1)))))\n  (sum_cubes_even n))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1666123757,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmph0pt1ebn.rkt:18:4\nactual:     197\nexpected:   288\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmph0pt1ebn.rkt:19:4\nactual:     413\nexpected:   800\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cube_Sum_iter i sum)\n    (if (= i n)\n        sum\n        (cube_Sum_iter (+ i 1) (+ sum (* i i i)))))\n  (cube_Sum_iter 0 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1666123757,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpohcusjsn.rkt:16:4\nactual:     1\nexpected:   72\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpohcusjsn.rkt:17:4\nactual:     9\nexpected:   288\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpohcusjsn.rkt:18:4\nactual:     36\nexpected:   800\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cube x)\n    (* x x x))\n  (define (sum_of_even_cubes n)\n    (if (= n 0)\n        0\n        (+ (cube (+ n 1))\n           (sum_of_even_cubes (- n 2)))))\n  (sum_of_even_cubes n))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1666123770,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp1nxrjdis.rkt:19:4\nactual:     27\nexpected:   72\n--------------------\n",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cube_Sum_iter n sum)\n    (if (= n 0)\n        sum\n        (cube_Sum_iter (- n 1) (+ sum (* n n n)))))\n  (cube_Sum_iter n 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmppyt1ww2b.rkt:16:4\nactual:     9\nexpected:   72\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmppyt1ww2b.rkt:17:4\nactual:     36\nexpected:   288\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmppyt1ww2b.rkt:18:4\nactual:     100\nexpected:   800\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cube_Sum_iter n sum)\n    (if (= n 0)\n        sum\n        (cube_Sum_iter (- n 1) (+ sum (* n n n)))))\n  (cube_Sum_iter n 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmppyt1ww2b.rkt:16:4\nactual:     9\nexpected:   72\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmppyt1ww2b.rkt:17:4\nactual:     36\nexpected:   288\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmppyt1ww2b.rkt:18:4\nactual:     100\nexpected:   800\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cube_Sum_iter n sum)\n    (if (= n 0)\n        sum\n        (cube_Sum_iter (- n 1) (+ sum (* n n n)))))\n  (cube_Sum_iter n 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmppyt1ww2b.rkt:16:4\nactual:     9\nexpected:   72\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmppyt1ww2b.rkt:17:4\nactual:     36\nexpected:   288\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmppyt1ww2b.rkt:18:4\nactual:     100\nexpected:   800\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cube_Sum_iter n sum)\n    (if (= n 0)\n        sum\n        (cube_Sum_iter (- n 1) (+ sum (* n n n)))))\n  (cube_Sum_iter n 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmppyt1ww2b.rkt:16:4\nactual:     9\nexpected:   72\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmppyt1ww2b.rkt:17:4\nactual:     36\nexpected:   288\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmppyt1ww2b.rkt:18:4\nactual:     100\nexpected:   800\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cube_Sum_iter n sum)\n    (if (= n 0)\n        sum\n        (cube_Sum_iter (- n 1) (+ sum (* n n n)))))\n  (cube_Sum_iter n 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmppyt1ww2b.rkt:16:4\nactual:     9\nexpected:   72\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmppyt1ww2b.rkt:17:4\nactual:     36\nexpected:   288\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmppyt1ww2b.rkt:18:4\nactual:     100\nexpected:   800\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cube x)\n    (* x x x))\n  (define (sum x)\n    (if (= x n)\n        0\n        (+ (cube x) (sum (+ x 2)))))\n  (sum 2))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1666123770,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp83szf_27.rkt:18:4\nactual:     0\nexpected:   72\n--------------------\n",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cubeSum_iter n sum)\n    (if (= n 0)\n        sum\n        (cubeSum_iter (- n 2) (+ sum (* n n n)))))\n  (cubeSum_iter n 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1665510516,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpkw0qkdy9.rkt:16:4\nactual:     8\nexpected:   72\n--------------------\n",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cubeSum_iter i sum)\n    (cond ((= i n) sum)\n          (else (cubeSum_iter (+ i 1) (+ sum (* i i i))))))\n  (cubeSum_iter 0 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1666123757,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp3rb_l7aj.rkt:15:4\nactual:     1\nexpected:   72\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp3rb_l7aj.rkt:16:4\nactual:     9\nexpected:   288\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp3rb_l7aj.rkt:17:4\nactual:     36\nexpected:   800\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cube x) (* x x x))\n  (define (even? x) (= (remainder x 2) 0))\n  (define (sum-of-cubes n)\n    (if (= n 0)\n        0\n        (+ (cube n) (sum-of-cubes (- n 1)))))\n  (define (even-sum n)\n    (if (= n 0)\n        0\n        (+ (even? n) (even-sum (- n 1)))))\n  (sum-of-cubes (even-sum n)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1666123757,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpv_sn780t.rkt:22:4\n\n+: contract violation\n  expected: number?\n  given: #f\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpv_sn780t.rkt:23:4\n\n+: contract violation\n  expected: number?\n  given: #f\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpv_sn780t.rkt:24:4\n\n+: contract violation\n  expected: number?\n  given: #f\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cube_Sum_iter n sum)\n    (if (= n 0)\n        sum\n        (cube_Sum_iter (- n 1) (+ sum (* n n n)))))\n  (cube_Sum_iter n 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmppyt1ww2b.rkt:16:4\nactual:     9\nexpected:   72\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmppyt1ww2b.rkt:17:4\nactual:     36\nexpected:   288\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmppyt1ww2b.rkt:18:4\nactual:     100\nexpected:   800\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cube_Sum_iter n sum)\n    (if (= n 0)\n        sum\n        (cube_Sum_iter (- n 1) (+ sum (* n n n)))))\n  (cube_Sum_iter n 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmppyt1ww2b.rkt:16:4\nactual:     9\nexpected:   72\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmppyt1ww2b.rkt:17:4\nactual:     36\nexpected:   288\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmppyt1ww2b.rkt:18:4\nactual:     100\nexpected:   800\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cube_Sum_iter sum i)\n    (if (= i n)\n        sum\n        (cube_Sum_iter (+ sum (* i i i)) (+ i 1))))\n  (cube_Sum_iter 0 2))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpom11iruu.rkt:16:4\nactual:     0\nexpected:   72\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpom11iruu.rkt:17:4\nactual:     8\nexpected:   288\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpom11iruu.rkt:18:4\nactual:     35\nexpected:   800\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cube x)\n    (* x x x))\n  (define (sum_even x)\n    (if (= x n)\n        0\n        (+ (cube (+ x 1)) (sum_even (+ x 2)))))\n  (sum_even 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1666123770,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp8lva064o.rkt:18:4\nactual:     1\nexpected:   72\n--------------------\n",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (if (= n 0)\n      0\n      (+ (expt (2*n) 3) (cube_Sum (- n 1)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1666123757,
      "stdout": "",
      "stderr": "/tmp/tmpq67ueyc2.rkt:7:16: 2*n: unbound identifier\n  in: 2*n\n  location...:\n   /tmp/tmpq67ueyc2.rkt:7:16\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (if (= n 1)\n      (expt 2 3)\n      (+ (expt n 3) (cube_Sum (- n 1)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1666123757,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmperrcsxgp.rkt:14:4\nactual:     16\nexpected:   72\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmperrcsxgp.rkt:15:4\nactual:     43\nexpected:   288\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmperrcsxgp.rkt:16:4\nactual:     107\nexpected:   800\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cube_Sum_iter n sum)\n    (if (= n 0)\n        sum\n        (cube_Sum_iter (- n 2) (+ sum (* n n n)))))\n  (cube_Sum_iter n 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1665510516,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp7yd97gvk.rkt:16:4\nactual:     8\nexpected:   72\n--------------------\n",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cube_Sum_iter n sum)\n    (if (= n 0)\n        sum\n        (cube_Sum_iter (- n 2) (+ sum (* n n n)))))\n  (cube_Sum_iter n 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1665510516,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp7yd97gvk.rkt:16:4\nactual:     8\nexpected:   72\n--------------------\n",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cube x) (* x x x))\n  (define (even? x) (= (remainder x 2) 0))\n  (define (sum-of-cubes x)\n    (if (= x 0)\n        0\n        (+ (cube x) (sum-of-cubes (- x 2)))))\n  (sum-of-cubes n))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1666123770,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpyjdgcfth.rkt:18:4\nactual:     8\nexpected:   72\n--------------------\n",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cube_Sum_iter n sum)\n    (if (= n 0)\n        sum\n        (cube_Sum_iter (- n 1) (+ (* n n n) sum))))\n  (cube_Sum_iter n 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1666123757,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpgsghckcv.rkt:16:4\nactual:     9\nexpected:   72\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpgsghckcv.rkt:17:4\nactual:     36\nexpected:   288\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpgsghckcv.rkt:18:4\nactual:     100\nexpected:   800\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cube_Sum_iter n sum)\n    (if (= n 0)\n        sum\n        (cube_Sum_iter (- n 1) (+ sum (* n n n)))))\n  (cube_Sum_iter n 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmppyt1ww2b.rkt:16:4\nactual:     9\nexpected:   72\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmppyt1ww2b.rkt:17:4\nactual:     36\nexpected:   288\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmppyt1ww2b.rkt:18:4\nactual:     100\nexpected:   800\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cube_Sum_helper n sum)\n    (if (= n 0)\n        sum\n        (cube_Sum_helper (- n 1) (+ sum (* n n n)))))\n  (cube_Sum_helper n 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp2lbnzts9.rkt:16:4\nactual:     9\nexpected:   72\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp2lbnzts9.rkt:17:4\nactual:     36\nexpected:   288\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp2lbnzts9.rkt:18:4\nactual:     100\nexpected:   800\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cube_Sum_iter i sum)\n    (if (= i n)\n        sum\n        (cube_Sum_iter (+ i 1) (+ sum (* i i i)))))\n  (cube_Sum_iter 0 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1666123757,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpohcusjsn.rkt:16:4\nactual:     1\nexpected:   72\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpohcusjsn.rkt:17:4\nactual:     9\nexpected:   288\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpohcusjsn.rkt:18:4\nactual:     36\nexpected:   800\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cube_Sum_iter n sum)\n    (if (= n 0)\n        sum\n        (cube_Sum_iter (- n 1) (+ sum (* n n n)))))\n  (cube_Sum_iter n 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmppyt1ww2b.rkt:16:4\nactual:     9\nexpected:   72\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmppyt1ww2b.rkt:17:4\nactual:     36\nexpected:   288\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmppyt1ww2b.rkt:18:4\nactual:     100\nexpected:   800\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cube_Sum_iter n sum)\n    (if (= n 0)\n        sum\n        (cube_Sum_iter (- n 1) (+ sum (* n n n)))))\n  (cube_Sum_iter n 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmppyt1ww2b.rkt:16:4\nactual:     9\nexpected:   72\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmppyt1ww2b.rkt:17:4\nactual:     36\nexpected:   288\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmppyt1ww2b.rkt:18:4\nactual:     100\nexpected:   800\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (cond\n    [(= n 0) 0]\n    [else (+ (cube_Sum (- n 1)) (* n n n))]))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1666123757,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpdhzvlu6s.rkt:14:4\nactual:     9\nexpected:   72\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpdhzvlu6s.rkt:15:4\nactual:     36\nexpected:   288\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpdhzvlu6s.rkt:16:4\nactual:     100\nexpected:   800\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cube_Sum_iter i sum)\n    (if (= i n)\n        sum\n        (cube_Sum_iter (+ i 1) (+ sum (* i i i)))))\n  (cube_Sum_iter 1 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1666123757,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp8h_rlmq1.rkt:16:4\nactual:     1\nexpected:   72\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp8h_rlmq1.rkt:17:4\nactual:     9\nexpected:   288\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp8h_rlmq1.rkt:18:4\nactual:     36\nexpected:   800\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (if (= n 0)\n      0\n      (+ (expt (* 2 n) 3) (cube_Sum (- n 1)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cube_Sum_iter n sum)\n    (if (= n 0)\n        sum\n        (cube_Sum_iter (- n 1) (+ sum (expt (* 2 (- n 1)) 3)))))\n  (cube_Sum_iter n 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1666123758,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpifebpjq9.rkt:16:4\nactual:     8\nexpected:   72\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpifebpjq9.rkt:17:4\nactual:     72\nexpected:   288\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpifebpjq9.rkt:18:4\nactual:     288\nexpected:   800\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (sum_of_cubes n)\n    (if (= n 1)\n        1\n        (+ (expt n 3) (sum_of_cubes (- n 1)))))\n  (sum_of_cubes (* n 2)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1666123757,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpwzcqkz51.rkt:16:4\nactual:     100\nexpected:   72\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpwzcqkz51.rkt:17:4\nactual:     441\nexpected:   288\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpwzcqkz51.rkt:18:4\nactual:     1296\nexpected:   800\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cube_Sum_iter n sum)\n    (if (= n 0)\n        sum\n        (cube_Sum_iter (- n 2) (+ sum (* n n n)))))\n  (cube_Sum_iter n 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1665510516,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp7yd97gvk.rkt:16:4\nactual:     8\nexpected:   72\n--------------------\n",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (for/sum ([i (in-range 1 n)])\n    (expt (* 2 i) 3)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1666123758,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpm5gto129.rkt:13:4\nactual:     8\nexpected:   72\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpm5gto129.rkt:14:4\nactual:     72\nexpected:   288\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpm5gto129.rkt:15:4\nactual:     288\nexpected:   800\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cubeSum_iter n sum)\n    (if (= n 0)\n        sum\n        (cubeSum_iter (- n 1) (+ sum (* n n n)))))\n  (cubeSum_iter n 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpy534fdkq.rkt:16:4\nactual:     9\nexpected:   72\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpy534fdkq.rkt:17:4\nactual:     36\nexpected:   288\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpy534fdkq.rkt:18:4\nactual:     100\nexpected:   800\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (if (= n 0)\n      0\n      (+ (expt (* 2 n) 3) (cube_Sum (- n 1)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cube_Sum_iter i sum)\n    (if (= i n)\n        sum\n        (cube_Sum_iter (+ i 1) (+ sum (* i i i)))))\n  (cube_Sum_iter 1 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1666123757,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp8h_rlmq1.rkt:16:4\nactual:     1\nexpected:   72\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp8h_rlmq1.rkt:17:4\nactual:     9\nexpected:   288\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp8h_rlmq1.rkt:18:4\nactual:     36\nexpected:   800\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cubeSum_iter i sum)\n    (if (= i n)\n        sum\n        (cubeSum_iter (+ i 1) (+ sum (* i i i)))))\n  (cubeSum_iter 1 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpdxzxzqkj.rkt:16:4\nactual:     1\nexpected:   72\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpdxzxzqkj.rkt:17:4\nactual:     9\nexpected:   288\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpdxzxzqkj.rkt:18:4\nactual:     36\nexpected:   800\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cubeSumIter i sum)\n    (if (= i n)\n        sum\n        (cubeSumIter (+ i 1) (+ sum (* i i i)))))\n  (cubeSumIter 1 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1666123758,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9ezah0ll.rkt:16:4\nactual:     1\nexpected:   72\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9ezah0ll.rkt:17:4\nactual:     9\nexpected:   288\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9ezah0ll.rkt:18:4\nactual:     36\nexpected:   800\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cube_Sum_iter i sum)\n    (if (= i n)\n        sum\n        (cube_Sum_iter (+ i 1) (+ sum (* i i i)))))\n  (cube_Sum_iter 1 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1666123757,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp8h_rlmq1.rkt:16:4\nactual:     1\nexpected:   72\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp8h_rlmq1.rkt:17:4\nactual:     9\nexpected:   288\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp8h_rlmq1.rkt:18:4\nactual:     36\nexpected:   800\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cube_Sum_iter i sum)\n    (if (= i n)\n        sum\n        (cube_Sum_iter (+ i 1) (+ sum (* i i i)))))\n  (cube_Sum_iter 1 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1666123757,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp8h_rlmq1.rkt:16:4\nactual:     1\nexpected:   72\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp8h_rlmq1.rkt:17:4\nactual:     9\nexpected:   288\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp8h_rlmq1.rkt:18:4\nactual:     36\nexpected:   800\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cube_Sum_iter n sum)\n    (if (= n 0)\n        sum\n        (cube_Sum_iter (- n 1) (+ sum (* n n n)))))\n  (cube_Sum_iter n 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmppyt1ww2b.rkt:16:4\nactual:     9\nexpected:   72\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmppyt1ww2b.rkt:17:4\nactual:     36\nexpected:   288\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmppyt1ww2b.rkt:18:4\nactual:     100\nexpected:   800\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cube x) (* x x x))\n  (define (sum_of_cubes x)\n    (if (= x 1)\n        (cube x)\n        (+ (cube x) (sum_of_cubes (- x 1)))))\n  (sum_of_cubes n))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1666123757,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpu5tcz9mq.rkt:17:4\nactual:     9\nexpected:   72\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpu5tcz9mq.rkt:18:4\nactual:     36\nexpected:   288\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpu5tcz9mq.rkt:19:4\nactual:     100\nexpected:   800\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (cond\n    [(= n 0) 0]\n    [else (+ (expt (* 2 n) 3) (cube_Sum (- n 1)))]))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (if (= n 0)\n      0\n      (+ (expt (* 2 n) 3) (cube_Sum (- n 1)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cube_Sum_iter n sum)\n    (if (= n 0)\n        sum\n        (cube_Sum_iter (- n 1) (+ sum (* n n n)))))\n  (cube_Sum_iter n 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmppyt1ww2b.rkt:16:4\nactual:     9\nexpected:   72\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmppyt1ww2b.rkt:17:4\nactual:     36\nexpected:   288\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmppyt1ww2b.rkt:18:4\nactual:     100\nexpected:   800\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cube x) (* x x x))\n  (define (sum_of_cubes x)\n    (if (= x 1)\n        (cube x)\n        (+ (cube x) (sum_of_cubes (- x 1)))))\n  (sum_of_cubes n))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1666123757,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpu5tcz9mq.rkt:17:4\nactual:     9\nexpected:   72\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpu5tcz9mq.rkt:18:4\nactual:     36\nexpected:   288\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpu5tcz9mq.rkt:19:4\nactual:     100\nexpected:   800\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cube_Sum_iter count sum)\n    (if (= count n)\n        sum\n        (cube_Sum_iter (+ count 1) (+ sum (* count count count)))))\n  (cube_Sum_iter 1 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1666123757,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpljt11fxu.rkt:16:4\nactual:     1\nexpected:   72\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpljt11fxu.rkt:17:4\nactual:     9\nexpected:   288\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpljt11fxu.rkt:18:4\nactual:     36\nexpected:   800\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cube x)\n    (* x x x))\n  (define (even? x)\n    (= (remainder x 2) 0))\n  (define (sum_of_cubes x)\n    (if (= x 0)\n        0\n        (+ (cube x) (sum_of_cubes (- x 1)))))\n  (define (even_sum x)\n    (if (= x 0)\n        0\n        (+ (even? x) (even_sum (- x 1)))))\n  (sum_of_cubes (even_sum n)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1666123757,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpzln1t6_4.rkt:24:4\n\n+: contract violation\n  expected: number?\n  given: #f\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpzln1t6_4.rkt:25:4\n\n+: contract violation\n  expected: number?\n  given: #f\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpzln1t6_4.rkt:26:4\n\n+: contract violation\n  expected: number?\n  given: #f\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cube_Sum_iter n sum)\n    (if (= n 0)\n        sum\n        (cube_Sum_iter (- n 1) (+ sum (* n n n)))))\n  (cube_Sum_iter n 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmppyt1ww2b.rkt:16:4\nactual:     9\nexpected:   72\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmppyt1ww2b.rkt:17:4\nactual:     36\nexpected:   288\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmppyt1ww2b.rkt:18:4\nactual:     100\nexpected:   800\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cubeSum_iter i sum)\n    (if (= i n)\n        sum\n        (cubeSum_iter (+ i 1) (+ sum (* i i i)))))\n  (cubeSum_iter 0 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1666123758,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp8gv8vsp3.rkt:16:4\nactual:     1\nexpected:   72\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp8gv8vsp3.rkt:17:4\nactual:     9\nexpected:   288\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp8gv8vsp3.rkt:18:4\nactual:     36\nexpected:   800\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cube n)\n    (* n n n))\n  (define (sum n)\n    (if (= n 0)\n        0\n        (+ (cube n) (sum (- n 2)))))\n  (sum n))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1666123772,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpql88alaw.rkt:18:4\nactual:     8\nexpected:   72\n--------------------\n",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cube x)\n    (* x x x))\n  (define (sum_of_cubes n)\n    (if (= n 1)\n        (cube 1)\n        (+ (cube n) (sum_of_cubes (- n 1)))))\n  (sum_of_cubes n))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1666123758,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp6r1h8s4b.rkt:18:4\nactual:     9\nexpected:   72\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp6r1h8s4b.rkt:19:4\nactual:     36\nexpected:   288\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp6r1h8s4b.rkt:20:4\nactual:     100\nexpected:   800\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cube_Sum_iter n sum)\n    (if (= n 0)\n        sum\n        (cube_Sum_iter (- n 2) (+ sum (* n n n)))))\n  (cube_Sum_iter n 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1665510516,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp7yd97gvk.rkt:16:4\nactual:     8\nexpected:   72\n--------------------\n",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cube x) (* x x x))\n  (define (even? x) (= (remainder x 2) 0))\n  (define (sum_of_cubes x)\n    (if (= x 0)\n        0\n        (+ (cube x) (sum_of_cubes (- x 2)))))\n  (sum_of_cubes n))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1666123772,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpimbkw_4b.rkt:18:4\nactual:     8\nexpected:   72\n--------------------\n",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cube x) (* x x x))\n  (define (even? x) (= (remainder x 2) 0))\n  (define (sum_of_cubes x)\n    (if (= x 0)\n        0\n        (+ (cube x) (sum_of_cubes (- x 2)))))\n  (sum_of_cubes n))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1666123772,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpimbkw_4b.rkt:18:4\nactual:     8\nexpected:   72\n--------------------\n",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cubeSum_iter n sum)\n    (if (= n 0)\n        sum\n        (cubeSum_iter (- n 2) (+ sum (* n n n)))))\n  (cubeSum_iter n 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1665510516,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpkw0qkdy9.rkt:16:4\nactual:     8\nexpected:   72\n--------------------\n",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cube_Sum_iter n sum)\n    (if (= n 0)\n        sum\n        (cube_Sum_iter (- n 2) (+ sum (* n n n)))))\n  (cube_Sum_iter n 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1665510516,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp7yd97gvk.rkt:16:4\nactual:     8\nexpected:   72\n--------------------\n",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cube_Sum_iter n sum)\n    (if (= n 0)\n        sum\n        (cube_Sum_iter (- n 1) (+ sum (* n n n)))))\n  (cube_Sum_iter n 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmppyt1ww2b.rkt:16:4\nactual:     9\nexpected:   72\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmppyt1ww2b.rkt:17:4\nactual:     36\nexpected:   288\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmppyt1ww2b.rkt:18:4\nactual:     100\nexpected:   800\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cube_Sum_iter n sum)\n    (if (= n 0)\n        sum\n        (cube_Sum_iter (- n 1) (+ sum (* n n n)))))\n  (cube_Sum_iter n 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmppyt1ww2b.rkt:16:4\nactual:     9\nexpected:   72\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmppyt1ww2b.rkt:17:4\nactual:     36\nexpected:   288\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmppyt1ww2b.rkt:18:4\nactual:     100\nexpected:   800\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cube_Sum_iter n sum)\n    (if (= n 0)\n        sum\n        (cube_Sum_iter (- n 2) (+ sum (* n n n)))))\n  (cube_Sum_iter n 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1665510516,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp7yd97gvk.rkt:16:4\nactual:     8\nexpected:   72\n--------------------\n",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cubeSum_iter count sum)\n    (if (= count n)\n        sum\n        (cubeSum_iter (+ count 1) (+ sum (* count count count)))))\n  (cubeSum_iter 0 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1666123758,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpzochpkcv.rkt:16:4\nactual:     1\nexpected:   72\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpzochpkcv.rkt:17:4\nactual:     9\nexpected:   288\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpzochpkcv.rkt:18:4\nactual:     36\nexpected:   800\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cube_Sum_iter n sum)\n    (if (= n 0)\n        sum\n        (cube_Sum_iter (- n 1) (+ sum (* n n n)))))\n  (cube_Sum_iter n 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmppyt1ww2b.rkt:16:4\nactual:     9\nexpected:   72\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmppyt1ww2b.rkt:17:4\nactual:     36\nexpected:   288\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmppyt1ww2b.rkt:18:4\nactual:     100\nexpected:   800\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (if (= n 1)\n      1\n      (+ (* n n n) (cube_Sum (- n 1)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1666123758,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpexfhp57d.rkt:14:4\nactual:     9\nexpected:   72\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpexfhp57d.rkt:15:4\nactual:     36\nexpected:   288\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpexfhp57d.rkt:16:4\nactual:     100\nexpected:   800\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cubeSum_iter i sum)\n    (cond\n      [(= i n) sum]\n      [else (cubeSum_iter (+ i 1) (+ sum (* i i i)))]))\n  (cubeSum_iter 1 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1666123758,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpmvg2q1ts.rkt:16:4\nactual:     1\nexpected:   72\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpmvg2q1ts.rkt:17:4\nactual:     9\nexpected:   288\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpmvg2q1ts.rkt:18:4\nactual:     36\nexpected:   800\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cube_Sum_iter i sum)\n    (if (= i n)\n        sum\n        (cube_Sum_iter (+ i 1) (+ sum (* i i i)))))\n  (cube_Sum_iter 1 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1666123757,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp8h_rlmq1.rkt:16:4\nactual:     1\nexpected:   72\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp8h_rlmq1.rkt:17:4\nactual:     9\nexpected:   288\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp8h_rlmq1.rkt:18:4\nactual:     36\nexpected:   800\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cube_Sum_iter n sum)\n    (if (= n 0)\n        sum\n        (cube_Sum_iter (- n 2) (+ sum (* n n n)))))\n  (cube_Sum_iter n 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1665510516,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp7yd97gvk.rkt:16:4\nactual:     8\nexpected:   72\n--------------------\n",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (cond\n    [(= n 1) (expt 2 3)]\n    [else (+ (expt n 3) (cube_Sum (- n 1)))]))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1666123758,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpjoar2map.rkt:14:4\nactual:     16\nexpected:   72\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpjoar2map.rkt:15:4\nactual:     43\nexpected:   288\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpjoar2map.rkt:16:4\nactual:     107\nexpected:   800\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (for/sum ([i (in-range 1 (+ n 1))])\n    (expt (* 2 i) 3)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1666123758,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (if (= n 0)\n      0\n      (+ (expt (* 2 n) 3)\n         (cube_Sum (- n 1)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1666123759,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cube_Sum_iter n sum)\n    (if (= n 0)\n        sum\n        (cube_Sum_iter (- n 2) (+ sum (* n n n)))))\n  (cube_Sum_iter n 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1665510516,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp7yd97gvk.rkt:16:4\nactual:     8\nexpected:   72\n--------------------\n",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cube_Sum_iter n sum)\n    (if (= n 0)\n        sum\n        (cube_Sum_iter (- n 1) (+ sum (* n n n)))))\n  (cube_Sum_iter n 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmppyt1ww2b.rkt:16:4\nactual:     9\nexpected:   72\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmppyt1ww2b.rkt:17:4\nactual:     36\nexpected:   288\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmppyt1ww2b.rkt:18:4\nactual:     100\nexpected:   800\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (cond\n    [(= n 0) 0]\n    [else (+ (expt (* 2 n) 3) (cube_Sum (- n 1)))]))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cube n)\n    (* n n n))\n  (define (sum n)\n    (if (= n 1)\n        0\n        (+ n (sum (- n 1)))))\n  (define (even n)\n    (if (= n 1)\n        0\n        (+ (cube n) (even (- n 2)))))\n  (even n))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1666123773,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cube x) (* x x x))\n  (define (sum_cubes n)\n    (if (= n 1)\n        (cube 1)\n        (+ (cube n) (sum_cubes (- n 1)))))\n  (sum_cubes n))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1666123759,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpdsffgryj.rkt:17:4\nactual:     9\nexpected:   72\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpdsffgryj.rkt:18:4\nactual:     36\nexpected:   288\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpdsffgryj.rkt:19:4\nactual:     100\nexpected:   800\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cube_Sum_iter n sum)\n    (if (= n 0)\n        sum\n        (cube_Sum_iter (- n 2) (+ sum (* n n n)))))\n  (cube_Sum_iter n 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1665510516,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp7yd97gvk.rkt:16:4\nactual:     8\nexpected:   72\n--------------------\n",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cube_Sum_iter n sum)\n    (cond\n      [(= n 0) sum]\n      [else (cube_Sum_iter (- n 2) (+ sum (* n n n)))]))\n  (cube_Sum_iter n 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1666123773,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpp4mo8v4n.rkt:16:4\nactual:     8\nexpected:   72\n--------------------\n",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (cond\n    [(= n 1) 8]\n    [else (+ (expt (* 2 n) 3) (cube_Sum (- n 1)))]))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1666123759,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cubeSum_iter i sum)\n    (if (= i n)\n        sum\n        (cubeSum_iter (+ i 1) (+ sum (* i i i)))))\n  (cubeSum_iter 0 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1666123758,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp8gv8vsp3.rkt:16:4\nactual:     1\nexpected:   72\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp8gv8vsp3.rkt:17:4\nactual:     9\nexpected:   288\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp8gv8vsp3.rkt:18:4\nactual:     36\nexpected:   800\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (cond\n    [(= n 0) 0]\n    [else (+ (expt (* 2 n) 3) (cube_Sum (- n 1)))]))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cube_Sum_iter i sum)\n    (if (= i n)\n        sum\n        (cube_Sum_iter (+ i 1) (+ sum (* i i i)))))\n  (cube_Sum_iter 1 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1666123757,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp8h_rlmq1.rkt:16:4\nactual:     1\nexpected:   72\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp8h_rlmq1.rkt:17:4\nactual:     9\nexpected:   288\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp8h_rlmq1.rkt:18:4\nactual:     36\nexpected:   800\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cubeSum_iter n sum)\n    (if (= n 0)\n        sum\n        (cubeSum_iter (- n 2) (+ sum (* n n n)))))\n  (cubeSum_iter n 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1665510516,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpkw0qkdy9.rkt:16:4\nactual:     8\nexpected:   72\n--------------------\n",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cube_Sum_iter n sum)\n    (if (= n 0)\n        sum\n        (cube_Sum_iter (- n 2) (+ sum (* n n n)))))\n  (cube_Sum_iter n 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1665510516,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp7yd97gvk.rkt:16:4\nactual:     8\nexpected:   72\n--------------------\n",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cubeSum_iter n sum)\n    (if (= n 0)\n        sum\n        (cubeSum_iter (- n 1) (+ sum (* n n n)))))\n  (cubeSum_iter n 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpy534fdkq.rkt:16:4\nactual:     9\nexpected:   72\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpy534fdkq.rkt:17:4\nactual:     36\nexpected:   288\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpy534fdkq.rkt:18:4\nactual:     100\nexpected:   800\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cube x)\n    (* x x x))\n  (define (sum_cubes n)\n    (if (= n 0)\n        0\n        (+ (cube n) (sum_cubes (- n 2)))))\n  (sum_cubes n))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1666123773,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpe_cxkjej.rkt:18:4\nactual:     8\nexpected:   72\n--------------------\n",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cube_Sum_iter n sum)\n    (cond ((= n 1) sum)\n          (else (cube_Sum_iter (- n 2) (+ sum (* n n n))))))\n  (cube_Sum_iter n 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1666123773,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (if (= n 0)\n      0\n      (+ (expt (* 2 n) 3) (cube_Sum (- n 1)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (let loop ((i 1) (sum 0))\n    (if (= i n)\n        sum\n        (loop (+ i 1) (+ sum (* i i i))))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1666123759,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpolc6ha46.rkt:15:4\nactual:     1\nexpected:   72\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpolc6ha46.rkt:16:4\nactual:     9\nexpected:   288\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpolc6ha46.rkt:17:4\nactual:     36\nexpected:   800\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cube_Sum_iter n sum)\n    (if (= n 0)\n        sum\n        (cube_Sum_iter (- n 1) (+ sum (* n n n)))))\n  (cube_Sum_iter n 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmppyt1ww2b.rkt:16:4\nactual:     9\nexpected:   72\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmppyt1ww2b.rkt:17:4\nactual:     36\nexpected:   288\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmppyt1ww2b.rkt:18:4\nactual:     100\nexpected:   800\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cubeSum_iter i sum)\n    (if (= i n)\n        sum\n        (cubeSum_iter (+ i 1) (+ sum (* i i i)))))\n  (cubeSum_iter 1 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpdxzxzqkj.rkt:16:4\nactual:     1\nexpected:   72\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpdxzxzqkj.rkt:17:4\nactual:     9\nexpected:   288\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpdxzxzqkj.rkt:18:4\nactual:     36\nexpected:   800\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cube_Sum_iter n sum)\n    (cond\n      [(= n 0) sum]\n      [else (cube_Sum_iter (- n 2) (+ sum (* n n n)))]))\n  (cube_Sum_iter n 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1666123773,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpp4mo8v4n.rkt:16:4\nactual:     8\nexpected:   72\n--------------------\n",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cubeSum_iter i sum)\n    (cond ((= i n) sum)\n          (else (cubeSum_iter (+ i 1) (+ sum (* i i i))))))\n  (cubeSum_iter 1 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1666123759,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmphxl924s6.rkt:15:4\nactual:     1\nexpected:   72\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmphxl924s6.rkt:16:4\nactual:     9\nexpected:   288\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmphxl924s6.rkt:17:4\nactual:     36\nexpected:   800\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cube x) (* x x x))\n  (define (sum_of_cubes n)\n    (if (= n 1)\n        (cube 1)\n        (+ (cube n) (sum_of_cubes (- n 1)))))\n  (sum_of_cubes n))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1666123757,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9evfmpcf.rkt:17:4\nactual:     9\nexpected:   72\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9evfmpcf.rkt:18:4\nactual:     36\nexpected:   288\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9evfmpcf.rkt:19:4\nactual:     100\nexpected:   800\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (if (= n 1)\n      (expt 2 3)\n      (+ (expt n 3) (cube_Sum (- n 1)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1666123757,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmperrcsxgp.rkt:14:4\nactual:     16\nexpected:   72\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmperrcsxgp.rkt:15:4\nactual:     43\nexpected:   288\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmperrcsxgp.rkt:16:4\nactual:     107\nexpected:   800\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cube_Sum_iter i sum)\n    (if (= i n)\n        sum\n        (cube_Sum_iter (+ i 1) (+ sum (* i i i)))))\n  (cube_Sum_iter 1 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1666123757,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp8h_rlmq1.rkt:16:4\nactual:     1\nexpected:   72\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp8h_rlmq1.rkt:17:4\nactual:     9\nexpected:   288\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp8h_rlmq1.rkt:18:4\nactual:     36\nexpected:   800\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cube_Sum_iter total count)\n    (if (= count n)\n        total\n        (cube_Sum_iter (+ total (* count count count)) (+ count 1))))\n  (cube_Sum_iter 0 2))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1666123759,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpba9pzs9e.rkt:16:4\nactual:     0\nexpected:   72\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpba9pzs9e.rkt:17:4\nactual:     8\nexpected:   288\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpba9pzs9e.rkt:18:4\nactual:     35\nexpected:   800\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cube_Sum_iter n sum)\n    (cond ((= n 0) sum)\n          ((even? n) (cube_Sum_iter (- n 1) (+ sum (expt n 3))))\n          (else (cube_Sum_iter (- n 1) sum))))\n  (cube_Sum_iter n 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1666123759,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpx2on95av.rkt:16:4\nactual:     8\nexpected:   72\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpx2on95av.rkt:17:4\nactual:     8\nexpected:   288\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpx2on95av.rkt:18:4\nactual:     72\nexpected:   800\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cubeSum_iter n sum)\n    (if (= n 0)\n        sum\n        (cubeSum_iter (- n 2) (+ sum (* n n n)))))\n  (cubeSum_iter n 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1665510516,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpkw0qkdy9.rkt:16:4\nactual:     8\nexpected:   72\n--------------------\n",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cube_Sum_iter n sum)\n    (if (= n 0)\n        sum\n        (cube_Sum_iter (- n 1) (+ sum (* n n n)))))\n  (cube_Sum_iter n 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmppyt1ww2b.rkt:16:4\nactual:     9\nexpected:   72\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmppyt1ww2b.rkt:17:4\nactual:     36\nexpected:   288\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmppyt1ww2b.rkt:18:4\nactual:     100\nexpected:   800\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cube_Sum_iter n sum)\n    (if (= n 0)\n        sum\n        (cube_Sum_iter (- n 1) (+ sum (* n n n)))))\n  (cube_Sum_iter n 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmppyt1ww2b.rkt:16:4\nactual:     9\nexpected:   72\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmppyt1ww2b.rkt:17:4\nactual:     36\nexpected:   288\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmppyt1ww2b.rkt:18:4\nactual:     100\nexpected:   800\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cube_Sum_iter n sum)\n    (if (= n 0)\n        sum\n        (cube_Sum_iter (- n 1) (+ sum (* n n n)))))\n  (cube_Sum_iter n 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmppyt1ww2b.rkt:16:4\nactual:     9\nexpected:   72\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmppyt1ww2b.rkt:17:4\nactual:     36\nexpected:   288\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmppyt1ww2b.rkt:18:4\nactual:     100\nexpected:   800\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (if (= n 0)\n      0\n      (+ (* n n n) (cube_Sum (- n 2)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1665510516,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp63g3jtpf.rkt:14:4\nactual:     8\nexpected:   72\n--------------------\n",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cube x) (* x x x))\n  (define (even? x) (= (remainder x 2) 0))\n  (define (sum_of_cubes l)\n    (if (null? l)\n        0\n        (+ (cube (car l)) (sum_of_cubes (cdr l)))))\n  (sum_of_cubes (filter even? (build-list n add1))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1666123759,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv63sms_6.rkt:18:4\nactual:     8\nexpected:   72\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv63sms_6.rkt:19:4\nactual:     8\nexpected:   288\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpv63sms_6.rkt:20:4\nactual:     72\nexpected:   800\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cube_Sum_iter n sum)\n    (if (= n 0)\n        sum\n        (cube_Sum_iter (- n 2) (+ sum (* n n n)))))\n  (cube_Sum_iter n 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1665510516,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp7yd97gvk.rkt:16:4\nactual:     8\nexpected:   72\n--------------------\n",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cube_Sum_iter n sum)\n    (if (= n 0)\n        sum\n        (cube_Sum_iter (- n 1) (+ sum (* n n n)))))\n  (cube_Sum_iter n 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmppyt1ww2b.rkt:16:4\nactual:     9\nexpected:   72\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmppyt1ww2b.rkt:17:4\nactual:     36\nexpected:   288\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmppyt1ww2b.rkt:18:4\nactual:     100\nexpected:   800\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cube_Sum_iter n sum)\n    (if (= n 0)\n        sum\n        (cube_Sum_iter (- n 1) (+ sum (* n n n)))))\n  (cube_Sum_iter n 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmppyt1ww2b.rkt:16:4\nactual:     9\nexpected:   72\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmppyt1ww2b.rkt:17:4\nactual:     36\nexpected:   288\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmppyt1ww2b.rkt:18:4\nactual:     100\nexpected:   800\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cube_Sum_iter n sum)\n    (cond ((= n 0) sum)\n          (else (cube_Sum_iter (- n 2) (+ sum (* n n n))))))\n  (cube_Sum_iter n 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1666123773,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpyiwpxxz5.rkt:15:4\nactual:     8\nexpected:   72\n--------------------\n",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cube_Sum_iter i sum)\n    (if (= i n)\n        sum\n        (cube_Sum_iter (+ i 1) (+ sum (* i i i)))))\n  (cube_Sum_iter 1 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1666123757,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp8h_rlmq1.rkt:16:4\nactual:     1\nexpected:   72\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp8h_rlmq1.rkt:17:4\nactual:     9\nexpected:   288\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp8h_rlmq1.rkt:18:4\nactual:     36\nexpected:   800\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (cond\n    [(= n 0) 0]\n    [else (+ (expt (* 2 n) 3) (cube_Sum (- n 1)))]))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cube x) (* x x x))\n  (define (sum_cubes x)\n    (if (= x n)\n        0\n        (+ (cube x) (sum_cubes (+ x 2)))))\n  (sum_cubes 2))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1666123773,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpj_dloo2c.rkt:17:4\nactual:     0\nexpected:   72\n--------------------\n",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cube_Sum_iter n sum)\n    (if (= n 0)\n        sum\n        (cube_Sum_iter (- n 1) (+ sum (* n n n)))))\n  (cube_Sum_iter n 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmppyt1ww2b.rkt:16:4\nactual:     9\nexpected:   72\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmppyt1ww2b.rkt:17:4\nactual:     36\nexpected:   288\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmppyt1ww2b.rkt:18:4\nactual:     100\nexpected:   800\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cube_Sum_iter n sum)\n    (if (= n 0)\n        sum\n        (cube_Sum_iter (- n 1) (+ sum (* n n n)))))\n  (cube_Sum_iter n 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmppyt1ww2b.rkt:16:4\nactual:     9\nexpected:   72\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmppyt1ww2b.rkt:17:4\nactual:     36\nexpected:   288\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmppyt1ww2b.rkt:18:4\nactual:     100\nexpected:   800\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cube_Sum_iter n sum)\n    (if (= n 0)\n        sum\n        (cube_Sum_iter (- n 1) (+ sum (expt (+ n 1) 3)))))\n  (cube_Sum_iter n 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1666123759,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp5pojvv8u.rkt:16:4\nactual:     35\nexpected:   72\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp5pojvv8u.rkt:17:4\nactual:     99\nexpected:   288\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp5pojvv8u.rkt:18:4\nactual:     224\nexpected:   800\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cube_Sum_iter n sum)\n    (if (= n 0)\n        sum\n        (cube_Sum_iter (- n 2) (+ sum (* n n n)))))\n  (cube_Sum_iter n 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1665510516,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp7yd97gvk.rkt:16:4\nactual:     8\nexpected:   72\n--------------------\n",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cube_Sum_iter n sum)\n    (if (= n 0)\n        sum\n        (cube_Sum_iter (- n 2) (+ sum (* n n n)))))\n  (cube_Sum_iter n 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1665510516,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp7yd97gvk.rkt:16:4\nactual:     8\nexpected:   72\n--------------------\n",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (if (= n 1)\n      (expt 2 3)\n      (+ (expt n 3) (cube_Sum (- n 2)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1666123774,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cube_Sum_iter i acc)\n    (if (= i n)\n        acc\n        (cube_Sum_iter (+ i 1) (+ acc (* i i i)))))\n  (cube_Sum_iter 1 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1666123759,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpsiqki8ii.rkt:16:4\nactual:     1\nexpected:   72\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpsiqki8ii.rkt:17:4\nactual:     9\nexpected:   288\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpsiqki8ii.rkt:18:4\nactual:     36\nexpected:   800\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cube_Sum_iter n sum)\n    (if (= n 0)\n        sum\n        (cube_Sum_iter (- n 2) (+ sum (* n n n)))))\n  (cube_Sum_iter n 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1665510516,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp7yd97gvk.rkt:16:4\nactual:     8\nexpected:   72\n--------------------\n",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cube_Sum_iter n sum)\n    (if (= n 0)\n        sum\n        (cube_Sum_iter (- n 1) (+ sum (* n n n)))))\n  (cube_Sum_iter n 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmppyt1ww2b.rkt:16:4\nactual:     9\nexpected:   72\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmppyt1ww2b.rkt:17:4\nactual:     36\nexpected:   288\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmppyt1ww2b.rkt:18:4\nactual:     100\nexpected:   800\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cube_Sum_iter i sum)\n    (if (= i n)\n        sum\n        (cube_Sum_iter (+ i 1) (+ sum (* i i i)))))\n  (cube_Sum_iter 1 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1666123757,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp8h_rlmq1.rkt:16:4\nactual:     1\nexpected:   72\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp8h_rlmq1.rkt:17:4\nactual:     9\nexpected:   288\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp8h_rlmq1.rkt:18:4\nactual:     36\nexpected:   800\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cube_Sum_iter i sum)\n    (if (= i n)\n        sum\n        (cube_Sum_iter (+ i 1) (+ sum (* i i i)))))\n  (cube_Sum_iter 0 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1666123757,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpohcusjsn.rkt:16:4\nactual:     1\nexpected:   72\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpohcusjsn.rkt:17:4\nactual:     9\nexpected:   288\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpohcusjsn.rkt:18:4\nactual:     36\nexpected:   800\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cube_Sum_iter n sum)\n    (if (= n 0)\n        sum\n        (cube_Sum_iter (- n 1) (+ sum (* n n n)))))\n  (cube_Sum_iter n 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmppyt1ww2b.rkt:16:4\nactual:     9\nexpected:   72\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmppyt1ww2b.rkt:17:4\nactual:     36\nexpected:   288\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmppyt1ww2b.rkt:18:4\nactual:     100\nexpected:   800\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cube_Sum_iter n sum)\n    (if (= n 0)\n        sum\n        (cube_Sum_iter (- n 1) (+ sum (* n n n)))))\n  (cube_Sum_iter n 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmppyt1ww2b.rkt:16:4\nactual:     9\nexpected:   72\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmppyt1ww2b.rkt:17:4\nactual:     36\nexpected:   288\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmppyt1ww2b.rkt:18:4\nactual:     100\nexpected:   800\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cube_Sum_iter i sum)\n    (if (= i n)\n        sum\n        (cube_Sum_iter (+ i 1) (+ sum (* i i i)))))\n  (cube_Sum_iter 1 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1666123757,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp8h_rlmq1.rkt:16:4\nactual:     1\nexpected:   72\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp8h_rlmq1.rkt:17:4\nactual:     9\nexpected:   288\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp8h_rlmq1.rkt:18:4\nactual:     36\nexpected:   800\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cube_Sum_iter n sum)\n    (if (= n 0)\n        sum\n        (cube_Sum_iter (- n 2) (+ sum (* n n n)))))\n  (cube_Sum_iter n 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1665510516,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp7yd97gvk.rkt:16:4\nactual:     8\nexpected:   72\n--------------------\n",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cube_Sum_iter n sum)\n    (if (= n 0)\n        sum\n        (cube_Sum_iter (- n 1) (+ sum (expt (* 2 n) 3)))))\n  (cube_Sum_iter n 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1666123760,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cube_Sum_iter n sum)\n    (if (= n 0)\n        sum\n        (cube_Sum_iter (- n 2) (+ sum (* n n n)))))\n  (cube_Sum_iter n 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1665510516,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp7yd97gvk.rkt:16:4\nactual:     8\nexpected:   72\n--------------------\n",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cube_Sum_iter i sum)\n    (if (= i n)\n        sum\n        (cube_Sum_iter (+ i 1) (+ sum (* i i i)))))\n  (cube_Sum_iter 1 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1666123757,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp8h_rlmq1.rkt:16:4\nactual:     1\nexpected:   72\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp8h_rlmq1.rkt:17:4\nactual:     9\nexpected:   288\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp8h_rlmq1.rkt:18:4\nactual:     36\nexpected:   800\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cube_Sum_iter n sum)\n    (if (= n 0)\n        sum\n        (cube_Sum_iter (- n 2) (+ sum (* n n n)))))\n  (cube_Sum_iter n 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1665510516,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp7yd97gvk.rkt:16:4\nactual:     8\nexpected:   72\n--------------------\n",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cube_Sum_iter i sum)\n    (if (= i n)\n        sum\n        (cube_Sum_iter (+ i 1) (+ sum (* i i i)))))\n  (cube_Sum_iter 1 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1666123757,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp8h_rlmq1.rkt:16:4\nactual:     1\nexpected:   72\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp8h_rlmq1.rkt:17:4\nactual:     9\nexpected:   288\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp8h_rlmq1.rkt:18:4\nactual:     36\nexpected:   800\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cube n)\n    (* n n n))\n  (define (sum n)\n    (if (= n 0)\n        0\n        (+ (cube n) (sum (- n 2)))))\n  (sum n))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1666123772,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpql88alaw.rkt:18:4\nactual:     8\nexpected:   72\n--------------------\n",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cube_Sum_iter n sum)\n    (if (= n 0)\n        sum\n        (cube_Sum_iter (- n 1) (+ sum (* n n n)))))\n  (cube_Sum_iter n 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmppyt1ww2b.rkt:16:4\nactual:     9\nexpected:   72\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmppyt1ww2b.rkt:17:4\nactual:     36\nexpected:   288\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmppyt1ww2b.rkt:18:4\nactual:     100\nexpected:   800\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cube_Sum_iter n sum)\n    (if (= n 0)\n        sum\n        (cube_Sum_iter (- n 2) (+ sum (* n n n)))))\n  (cube_Sum_iter n 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1665510516,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp7yd97gvk.rkt:16:4\nactual:     8\nexpected:   72\n--------------------\n",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cube_Sum_iter i sum)\n    (if (= i n)\n        sum\n        (cube_Sum_iter (+ i 1) (+ sum (* i i i)))))\n  (cube_Sum_iter 0 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1666123757,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpohcusjsn.rkt:16:4\nactual:     1\nexpected:   72\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpohcusjsn.rkt:17:4\nactual:     9\nexpected:   288\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpohcusjsn.rkt:18:4\nactual:     36\nexpected:   800\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cube_Sum_iter n sum)\n    (if (= n 0)\n        sum\n        (cube_Sum_iter (- n 1) (+ sum (* n n n)))))\n  (cube_Sum_iter n 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmppyt1ww2b.rkt:16:4\nactual:     9\nexpected:   72\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmppyt1ww2b.rkt:17:4\nactual:     36\nexpected:   288\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmppyt1ww2b.rkt:18:4\nactual:     100\nexpected:   800\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cube_Sum_iter n sum)\n    (if (= n 0)\n        sum\n        (cube_Sum_iter (- n 2) (+ sum (* n n n)))))\n  (cube_Sum_iter n 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1665510516,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp7yd97gvk.rkt:16:4\nactual:     8\nexpected:   72\n--------------------\n",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cube_Sum_iter n total)\n    (if (= n 0)\n        total\n        (cube_Sum_iter (- n 2) (+ total (* n n n)))))\n  (cube_Sum_iter n 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1666123774,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpfpjwqm4x.rkt:16:4\nactual:     8\nexpected:   72\n--------------------\n",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cube_Sum_iter i sum)\n    (if (= i n)\n        sum\n        (cube_Sum_iter (+ i 1) (+ sum (* i i i)))))\n  (cube_Sum_iter 1 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1666123757,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp8h_rlmq1.rkt:16:4\nactual:     1\nexpected:   72\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp8h_rlmq1.rkt:17:4\nactual:     9\nexpected:   288\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp8h_rlmq1.rkt:18:4\nactual:     36\nexpected:   800\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cube_Sum_iter n sum)\n    (if (= n 0)\n        sum\n        (cube_Sum_iter (- n 1) (+ sum (* n n n)))))\n  (cube_Sum_iter n 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmppyt1ww2b.rkt:16:4\nactual:     9\nexpected:   72\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmppyt1ww2b.rkt:17:4\nactual:     36\nexpected:   288\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmppyt1ww2b.rkt:18:4\nactual:     100\nexpected:   800\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cube_Sum_iter n sum)\n    (if (= n 0)\n        sum\n        (cube_Sum_iter (- n 2) (+ sum (* n n n)))))\n  (cube_Sum_iter n 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1665510516,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp7yd97gvk.rkt:16:4\nactual:     8\nexpected:   72\n--------------------\n",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cube_Sum_iter n sum)\n    (if (= n 0)\n        sum\n        (cube_Sum_iter (- n 2) (+ sum (* n n n)))))\n  (cube_Sum_iter n 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1665510516,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp7yd97gvk.rkt:16:4\nactual:     8\nexpected:   72\n--------------------\n",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cube_Sum_iter n sum)\n    (if (= n 0)\n        sum\n        (cube_Sum_iter (- n 2) (+ sum (* n n n)))))\n  (cube_Sum_iter n 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1665510516,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp7yd97gvk.rkt:16:4\nactual:     8\nexpected:   72\n--------------------\n",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (if (= n 0)\n      0\n      (+ (expt (* 2 n) 3) (cube_Sum (- n 1)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (if (= n 1)\n      1\n      (+ (* n n n) (cube_Sum (- n 1)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1666123758,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpexfhp57d.rkt:14:4\nactual:     9\nexpected:   72\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpexfhp57d.rkt:15:4\nactual:     36\nexpected:   288\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpexfhp57d.rkt:16:4\nactual:     100\nexpected:   800\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cube_Sum_iter n sum)\n    (if (= n 0)\n        sum\n        (cube_Sum_iter (- n 2) (+ sum (* n n n)))))\n  (cube_Sum_iter n 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1665510516,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp7yd97gvk.rkt:16:4\nactual:     8\nexpected:   72\n--------------------\n",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cube_Sum_iter n sum)\n    (cond ((= n 0) sum)\n          (else (cube_Sum_iter (- n 1) (+ sum (* n n n))))))\n  (cube_Sum_iter n 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1666123760,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpgna3syqr.rkt:15:4\nactual:     9\nexpected:   72\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpgna3syqr.rkt:16:4\nactual:     36\nexpected:   288\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpgna3syqr.rkt:17:4\nactual:     100\nexpected:   800\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cube_Sum_iter n sum)\n    (if (= n 0)\n        sum\n        (cube_Sum_iter (- n 2) (+ sum (* n n n)))))\n  (cube_Sum_iter n 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1665510516,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp7yd97gvk.rkt:16:4\nactual:     8\nexpected:   72\n--------------------\n",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cube_Sum_iter n sum)\n    (if (= n 0)\n        sum\n        (cube_Sum_iter (- n 2) (+ sum (* n n n)))))\n  (cube_Sum_iter n 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1665510516,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp7yd97gvk.rkt:16:4\nactual:     8\nexpected:   72\n--------------------\n",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cube_Sum_iter i sum)\n    (if (= i n)\n        sum\n        (cube_Sum_iter (+ i 1) (+ sum (* i i i)))))\n  (cube_Sum_iter 1 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1666123757,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp8h_rlmq1.rkt:16:4\nactual:     1\nexpected:   72\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp8h_rlmq1.rkt:17:4\nactual:     9\nexpected:   288\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp8h_rlmq1.rkt:18:4\nactual:     36\nexpected:   800\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cube_Sum_iter sum i)\n    (cond ((= i n) sum)\n          ((= (remainder i 2) 0) (cube_Sum_iter (+ sum (expt i 3)) (+ i 1)))\n          (else (cube_Sum_iter sum (+ i 1)))))\n  (cube_Sum_iter 0 1))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1666123760,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpg37ahyo1.rkt:16:4\nactual:     0\nexpected:   72\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpg37ahyo1.rkt:17:4\nactual:     8\nexpected:   288\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpg37ahyo1.rkt:18:4\nactual:     8\nexpected:   800\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cubeSum_iter n sum)\n    (if (= n 0)\n        sum\n        (cubeSum_iter (- n 2) (+ sum (* n n n)))))\n  (cubeSum_iter n 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1665510516,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpkw0qkdy9.rkt:16:4\nactual:     8\nexpected:   72\n--------------------\n",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (if (= n 0)\n      0\n      (+ (expt (* 2 n) 3) (cube_Sum (- n 1)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (if (= n 0)\n      0\n      (+ (expt (* 2 n) 3) (cube_Sum (- n 1)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (if (= n 0)\n      0\n      (+ (expt (* 2 n) 3) (cube_Sum (- n 1)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cube_Sum_iter n sum)\n    (if (= n 0)\n        sum\n        (cube_Sum_iter (- n 2) (+ sum (* n n n)))))\n  (cube_Sum_iter n 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1665510516,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp7yd97gvk.rkt:16:4\nactual:     8\nexpected:   72\n--------------------\n",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (if (= n 0)\n      0\n      (+ (expt (* 2 n) 3)\n         (cube_Sum (- n 1)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1666123759,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (cond\n    [(= n 1) (expt 2 3)]\n    [else (+ (expt n 3) (cube_Sum (- n 1)))]))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1666123758,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpjoar2map.rkt:14:4\nactual:     16\nexpected:   72\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpjoar2map.rkt:15:4\nactual:     43\nexpected:   288\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpjoar2map.rkt:16:4\nactual:     107\nexpected:   800\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cube_Sum_iter i sum)\n    (if (= i n)\n        sum\n        (cube_Sum_iter (+ i 1) (+ sum (* i i i)))))\n  (cube_Sum_iter 1 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1666123757,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp8h_rlmq1.rkt:16:4\nactual:     1\nexpected:   72\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp8h_rlmq1.rkt:17:4\nactual:     9\nexpected:   288\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp8h_rlmq1.rkt:18:4\nactual:     36\nexpected:   800\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cube_Sum_iter n sum)\n    (if (= n 0)\n        sum\n        (cube_Sum_iter (- n 2) (+ sum (* n n n)))))\n  (cube_Sum_iter n 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1665510516,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp7yd97gvk.rkt:16:4\nactual:     8\nexpected:   72\n--------------------\n",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cube_Sum_iter n acc)\n    (if (= n 0)\n        acc\n        (cube_Sum_iter (- n 1) (+ (* n n n) acc))))\n  (cube_Sum_iter n 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1666123760,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp02omqbrg.rkt:16:4\nactual:     9\nexpected:   72\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp02omqbrg.rkt:17:4\nactual:     36\nexpected:   288\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp02omqbrg.rkt:18:4\nactual:     100\nexpected:   800\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cube_Sum_iter n sum)\n    (if (= n 0)\n        sum\n        (cube_Sum_iter (- n 2) (+ sum (* n n n)))))\n  (cube_Sum_iter n 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1665510516,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp7yd97gvk.rkt:16:4\nactual:     8\nexpected:   72\n--------------------\n",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (if (= n 0)\n      0\n      (+ (expt (* 2 n) 3) (cube_Sum (- n 1)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cube_Sum_iter n sum)\n    (if (= n 0)\n        sum\n        (cube_Sum_iter (- n 2) (+ sum (* n n n)))))\n  (cube_Sum_iter n 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1665510516,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp7yd97gvk.rkt:16:4\nactual:     8\nexpected:   72\n--------------------\n",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (cond\n    [(= n 0) 0]\n    [else (+ (expt (* 2 n) 3) (cube_Sum (- n 1)))]))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cube_Sum_iter i sum)\n    (cond ((= i n) sum)\n          (else (cube_Sum_iter (+ i 1) (+ sum (* i i i))))))\n  (cube_Sum_iter 1 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1666123760,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp5t4cpamq.rkt:15:4\nactual:     1\nexpected:   72\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp5t4cpamq.rkt:16:4\nactual:     9\nexpected:   288\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp5t4cpamq.rkt:17:4\nactual:     36\nexpected:   800\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (if (= n 0)\n      0\n      (+ (expt (* 2 n) 3) (cube_Sum (- n 1)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (if (= n 0)\n      0\n      (+ (expt (* 2 n) 3) (cube_Sum (- n 1)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cube x) (* x x x))\n  (define (even? x) (= (remainder x 2) 0))\n  (define (sum_cubes n)\n    (if (= n 0)\n        0\n        (+ (cube n) (sum_cubes (- n 1)))))\n  (define (sum_even_cubes n)\n    (if (= n 0)\n        0\n        (+ (cube n) (sum_even_cubes (- n 2)))))\n  (if (even? n)\n      (sum_even_cubes n)\n      (sum_cubes n)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1666123760,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpy1ll6voh.rkt:24:4\nactual:     8\nexpected:   72\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpy1ll6voh.rkt:25:4\nactual:     36\nexpected:   288\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpy1ll6voh.rkt:26:4\nactual:     72\nexpected:   800\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cube_Sum_iter n sum)\n    (if (= n 0)\n        sum\n        (cube_Sum_iter (- n 1) (+ sum (* n n n)))))\n  (cube_Sum_iter n 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmppyt1ww2b.rkt:16:4\nactual:     9\nexpected:   72\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmppyt1ww2b.rkt:17:4\nactual:     36\nexpected:   288\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmppyt1ww2b.rkt:18:4\nactual:     100\nexpected:   800\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cube_Sum_iter n sum)\n    (if (= n 0)\n        sum\n        (cube_Sum_iter (- n 1) (+ sum (* n n n)))))\n  (cube_Sum_iter n 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmppyt1ww2b.rkt:16:4\nactual:     9\nexpected:   72\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmppyt1ww2b.rkt:17:4\nactual:     36\nexpected:   288\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmppyt1ww2b.rkt:18:4\nactual:     100\nexpected:   800\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cube_Sum_iter n sum)\n    (if (= n 0)\n        sum\n        (cube_Sum_iter (- n 2) (+ sum (* n n n)))))\n  (cube_Sum_iter n 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1665510516,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp7yd97gvk.rkt:16:4\nactual:     8\nexpected:   72\n--------------------\n",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cube_Sum_iter n sum)\n    (if (= n 0)\n        sum\n        (cube_Sum_iter (- n 2) (+ sum (* n n n)))))\n  (cube_Sum_iter n 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1665510516,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp7yd97gvk.rkt:16:4\nactual:     8\nexpected:   72\n--------------------\n",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (sum i)\n    (if (= i n)\n        0\n        (+ (expt (* 2 i) 3) (sum (+ i 1)))))\n  (sum 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1666123760,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpbop3hemh.rkt:16:4\nactual:     8\nexpected:   72\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpbop3hemh.rkt:17:4\nactual:     72\nexpected:   288\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpbop3hemh.rkt:18:4\nactual:     288\nexpected:   800\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cube_Sum_iter n sum)\n    (if (= n 0)\n        sum\n        (cube_Sum_iter (- n 1) (+ sum (* n n n)))))\n  (cube_Sum_iter n 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmppyt1ww2b.rkt:16:4\nactual:     9\nexpected:   72\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmppyt1ww2b.rkt:17:4\nactual:     36\nexpected:   288\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmppyt1ww2b.rkt:18:4\nactual:     100\nexpected:   800\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (if (= n 0)\n      0\n      (+ (expt (* 2 n) 3) (cube_Sum (- n 1)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the cube sum of first n even natural numbers.\n(define (cube_Sum n)\n  (define (cube_Sum_iter i sum)\n    (if (= i n)\n        sum\n        (cube_Sum_iter (+ i 1) (+ sum (* i i i)))))\n  (cube_Sum_iter 1 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cube_Sum))\n    (check-equal? (candidate 2) 72)\n    (check-equal? (candidate 3) 288)\n    (check-equal? (candidate 4) 800)\n))\n\n(test-humaneval)",
      "timestamp": 1666123757,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp8h_rlmq1.rkt:16:4\nactual:     1\nexpected:   72\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp8h_rlmq1.rkt:17:4\nactual:     9\nexpected:   288\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp8h_rlmq1.rkt:18:4\nactual:     36\nexpected:   800\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    }
  ]
}
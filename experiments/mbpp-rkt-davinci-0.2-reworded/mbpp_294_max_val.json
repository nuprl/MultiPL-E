{
  "name": "mbpp_294_max_val",
  "language": "rkt",
  "prompt": "#lang racket\n\n;; Write a function to find the maximum value in a given heterogeneous list.\n(define (max_val listval)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_294_max_val.py",
  "prompt_terminology": "reworded",
  "tests": "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_val))\n    (check-equal? (candidate (list \"Python\" 3 2 4 5 \"version\")) 5)\n    (check-equal? (candidate (list \"Python\" 15 20 25)) 25)\n    (check-equal? (candidate (list \"Python\" 30 20 40 50 \"version\")) 50)\n))\n\n(test-humaneval)",
  "stop_tokens": [
    "\n(define ",
    "\n#|",
    "\n;",
    "\n("
  ],
  "completions": [
    "  (cond\n    [(empty? listval) (error \"Empty list\")]\n    [(empty? (rest listval)) (first listval)]\n    [else (max (first listval) (max_val (rest listval)))]))\n",
    "  (cond\n    [(null? listval) (error \"Empty list\")]\n    [(null? (cdr listval)) (car listval)]\n    [else (max (car listval) (max_val (cdr listval)))]))\n",
    "  (cond\n    [(null? listval) #f]\n    [(null? (cdr listval)) (car listval)]\n    [else\n     (let ([max (max_val (cdr listval))])\n       (cond\n         [(number? max)\n          (if (number? (car listval))\n              (if (> (car listval) max)\n                  (car listval)\n                  max)\n              max)]\n         [(string? max)\n          (if (string? (car listval))\n              (if (string>? (car listval) max)\n                  (car listval)\n                  max)\n              max)]))]))\n",
    "  (cond\n    [(empty? listval) '()]\n    [(number? (first listval))\n     (if (&gt; (first listval) (max_val (rest listval)))\n         (first listval)\n         (max_val (rest listval)))]\n    [else (max_val (rest listval))]))\n</code>\nI'm not sure if this is the best way to do it, but it works.\n\n\nA:\n\nYour code is correct, but it can be simplified.\nFirst, you can use <code>cond</code>'s <code>else</code> clause to handle the empty list case:\n<code>(define (max_val listval)\n  (cond\n    [(empty? listval) '()]\n    [(number? (first listval))\n     (if (&gt; (first listval) (max_val (rest listval)))\n         (first listval)\n         (max_val (rest listval)))]\n    [else (max_val (rest listval))]))\n</code>\nSecond, you can use <code>cond</code>'s <code>else</code> clause to handle the non-number case:\n<code>(define (max_val listval)\n  (cond\n    [(empty? listval) '()]\n    [(number? (first listval))\n     (if (&gt; (first listval) (max_val (rest listval)))\n         (first listval)\n         (max_val (rest listval)))]\n    [else (max_val (rest listval))]))\n</code>\nThird, you can use <code>cond</code>'s <code>else</code> clause to handle the number case:\n<code>(define (max_val listval)\n  (cond\n    [(empty? listval) '()]\n    [(number? (first listval))\n     (if (&gt; (first listval) (max_val (rest listval)))\n         (first listval)\n         (max_val (rest listval)))]\n    [else (max_val (rest listval))]))\n</code>\nFourth, you can use <code>cond</code>'",
    "  (cond\n    [(null? listval) #f]\n    [(number? (car listval))\n     (if (null? (cdr listval))\n         (car listval)\n         (max (car listval) (max_val (cdr listval))))]\n    [else (max_val (cdr listval))]))\n",
    "  (cond\n    [(null? listval) 0]\n    [(number? (car listval))\n     (max (car listval) (max_val (cdr listval)))]\n    [else (max_val (cdr listval))]))\n",
    "  (cond\n    [(null? listval) 0]\n    [(number? (car listval))\n     (if (&gt; (car listval) (max_val (cdr listval)))\n         (car listval)\n         (max_val (cdr listval)))]\n    [else (max_val (cdr listval))]))\n",
    "  (cond\n    [(null? listval) #f]\n    [(number? (car listval))\n     (if (null? (cdr listval))\n         (car listval)\n         (max (car listval) (max_val (cdr listval))))]\n    [else (max_val (cdr listval))]))\n",
    "  (if (null? listval)\n      0\n      (let ((max (max_val (cdr listval))))\n        (if (or (number? (car listval)) (string? (car listval)))\n            (if (&gt; (car listval) max)\n                (car listval)\n                max)\n            max))))\n",
    "  (cond\n    [(empty? listval) #f]\n    [(number? (first listval))\n     (max (first listval) (max_val (rest listval)))]\n    [(list? (first listval))\n     (max (max_val (first listval)) (max_val (rest listval)))]))\n",
    "  (cond\n    [(empty? listval) (error \"Empty list\")]\n    [(null? (cdr listval)) (car listval)]\n    [else\n     (let ([max (max_val (cdr listval))])\n       (if (&gt; (car listval) max)\n           (car listval)\n           max))]))\n",
    "  (cond\n    [(null? listval) 0]\n    [(number? (car listval))\n     (if (> (car listval) (max_val (cdr listval)))\n         (car listval)\n         (max_val (cdr listval)))]\n    [else (max_val (cdr listval))]))\n",
    "  (cond\n    [(empty? listval) (error \"Empty list\")]\n    [(null? (cdr listval)) (car listval)]\n    [(> (car listval) (max_val (cdr listval))) (car listval)]\n    [else (max_val (cdr listval))]))\n",
    "  (cond\n    [(empty? listval) #f]\n    [(number? (first listval))\n     (let ([max (max_val (rest listval))])\n       (if (number? max)\n           (if (&gt; (first listval) max)\n               (first listval)\n               max)\n           (first listval)))]\n    [else (max_val (rest listval))]))\n</code>\n",
    "  (cond\n    [(null? listval) 0]\n    [(number? (car listval))\n     (max (car listval) (max_val (cdr listval)))]\n    [else (max_val (cdr listval))]))\n",
    "  (cond\n    [(null? listval) #f]\n    [(number? (car listval))\n     (if (number? (cadr listval))\n         (if (&gt; (car listval) (cadr listval))\n             (max_val (cons (car listval) (cddr listval)))\n             (max_val (cdr listval)))\n         (car listval))]\n    [else (max_val (cdr listval))]))\n",
    "  (cond\n    [(null? listval) #f]\n    [(null? (cdr listval)) (car listval)]\n    [else (max (car listval) (max_val (cdr listval)))]))\n",
    "  (cond\n    [(null? listval) 0]\n    [(number? (car listval))\n     (max (car listval) (max_val (cdr listval)))]\n    [else (max_val (cdr listval))]))\n",
    "  (cond\n    [(empty? listval) (error \"empty list\")]\n    [(null? (cdr listval)) (car listval)]\n    [else (max (car listval) (max_val (cdr listval)))]))\n",
    "  (cond\n    [(null? listval) '()]\n    [(number? (car listval))\n     (if (> (car listval) (max_val (cdr listval)))\n         (car listval)\n         (max_val (cdr listval)))]\n    [else (max_val (cdr listval))]))\n"
  ]
}
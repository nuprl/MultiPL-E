{
  "name": "mbpp_162_sum_series",
  "language": "rkt",
  "prompt": "#lang racket\n\n;; Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n(define (sum_series n)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_162_sum_series.py",
  "prompt_terminology": "reworded",
  "tests": "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum_series))\n    (check-equal? (candidate 6) 12)\n    (check-equal? (candidate 10) 30)\n    (check-equal? (candidate 9) 25)\n))\n\n(test-humaneval)",
  "stop_tokens": [
    "\n(define ",
    "\n#|",
    "\n;",
    "\n("
  ],
  "completions": [
    "  (define (iter i acc)\n    (if (<= (- n (* 2 i)) 0)\n        acc\n        (iter (+ i 1) (+ acc (- n (* 2 i))))))\n  (iter 0 0))\n",
    "  (define (sum_series_iter i n sum)\n    (if (= i (/ n 2))\n        sum\n        (sum_series_iter (+ i 1) n (+ sum (- n (* 2 i))))))\n  (sum_series_iter 0 n 0))\n",
    "  (define (sum_series_iter i sum)\n    (if (= i (/ n 2))\n        sum\n        (sum_series_iter (+ i 1) (+ sum (- n (* 2 i))))))\n  (sum_series_iter 0 0))\n",
    "  (if (= n 0)\n      0\n      (+ n (sum_series (- n 2)))))\n",
    "  (define (sum_series_iter i sum)\n    (if (= i (/ n 2))\n        sum\n        (sum_series_iter (+ i 1) (+ sum (- n (* 2 i))))))\n  (sum_series_iter 0 0))\n",
    "  (define (sum_series_iter i n sum)\n    (if (= i (/ n 2))\n        sum\n        (sum_series_iter (+ i 1) n (+ sum (- n (* 2 i))))))\n  (sum_series_iter 0 n 0))\n",
    "  (define (sum_series_iter i n sum)\n    (if (= i (/ n 2))\n        sum\n        (sum_series_iter (+ i 1) n (+ sum (- n (* 2 i))))))\n  (sum_series_iter 0 n 0))\n",
    "  (if (= n 0)\n      0\n      (+ n (sum_series (- n 2)))))\n",
    "  (define (sum_series_iter n i sum)\n    (if (= i (/ n 2))\n        sum\n        (sum_series_iter n (+ i 1) (+ sum (- n (* 2 i))))))\n  (sum_series_iter n 0 0))\n",
    "  (define (sum_series_iter i n sum)\n    (if (= i (/ n 2))\n        sum\n        (sum_series_iter (+ i 1) n (+ sum (- n (* 2 i))))))\n  (sum_series_iter 0 n 0))\n",
    "  (define (sum_series_iter i acc)\n    (if (<= (- n (* 2 i)) 0)\n        acc\n        (sum_series_iter (+ i 1) (+ acc (- n (* 2 i))))))\n  (sum_series_iter 0 0))\n",
    "  (define (sum_series_iter i n sum)\n    (if (= i (/ n 2))\n        sum\n        (sum_series_iter (+ i 1) n (+ sum (- n (* 2 i))))))\n  (sum_series_iter 0 n 0))\n",
    "  (define (sum_series_iter i n sum)\n    (if (= i (/ n 2))\n        sum\n        (sum_series_iter (+ i 1) n (+ sum (- n (* 2 i))))))\n  (sum_series_iter 0 n 0))\n",
    "  (define (sum_series_iter i n sum)\n    (if (= i (/ n 2))\n        sum\n        (sum_series_iter (+ i 1) n (+ sum (- n (* 2 i))))))\n  (sum_series_iter 0 n 0))\n",
    "  (define (sum_series-iter i acc)\n    (if (= i (/ n 2))\n        acc\n        (sum_series-iter (+ i 1) (+ acc (- n (* 2 i))))))\n  (sum_series-iter 0 0))\n",
    "  (define (sum_series_iter i sum)\n    (if (<= (- n (* 2 i)) 0)\n        sum\n        (sum_series_iter (+ i 1) (+ sum (- n (* 2 i))))))\n  (sum_series_iter 0 0))\n",
    "  (define (sum_series_iter i acc)\n    (if (<= (- n (* 2 i)) 0)\n        acc\n        (sum_series_iter (+ i 1) (+ acc (- n (* 2 i))))))\n  (sum_series_iter 0 0))\n",
    "  (define (sum_series_iter i sum)\n    (if (= i (/ n 2))\n        sum\n        (sum_series_iter (+ i 1) (+ sum (- n (* 2 i))))))\n  (sum_series_iter 0 0))\n",
    "  (define (sum_series_iter i sum)\n    (if (= i (/ n 2))\n        sum\n        (sum_series_iter (+ i 1) (+ sum (- n (* 2 i))))))\n  (sum_series_iter 0 0))\n",
    "  (define (sum_series_iter i sum)\n    (if (= i (/ n 2))\n        sum\n        (sum_series_iter (+ i 1) (+ sum (- n (* 2 i))))))\n  (sum_series_iter 0 0))\n"
  ]
}
{
  "name": "mbpp_89_closest_num",
  "language": "rkt",
  "prompt": "#lang racket\n\n;; Write a function to find the closest smaller number than n.\n(define (closest_num N)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_89_closest_num.py",
  "prompt_terminology": "reworded",
  "tests": "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate closest_num))\n    (check-equal? (candidate 11) 10)\n    (check-equal? (candidate 7) 6)\n    (check-equal? (candidate 12) 11)\n))\n\n(test-humaneval)",
  "stop_tokens": [
    "\n(define ",
    "\n#|",
    "\n;",
    "\n("
  ],
  "completions": [
    "  (define (closest_num_iter N i)\n    (if (and (not (zero? (remainder N i)))\n             (not (zero? (remainder (sub1 N) i))))\n        (closest_num_iter N (add1 i))\n        i))\n  (closest_num_iter N 2))\n",
    "  (define (closest_num_iter N i)\n    (if (not (integer? (/ N i)))\n        (closest_num_iter N (+ i 1))\n        i))\n  (closest_num_iter N 2))\n",
    "  (define (closest_num_iter N i)\n    (cond\n      [(= N i) i]\n      [(< N i) (closest_num_iter N (- i 1))]\n      [else (closest_num_iter N (+ i 1))]))\n  (closest_num_iter N 0))\n",
    "  (define (closest_num_iter N i)\n    (cond\n      [(= i 0) (error \"no smaller number\")]\n      [(= N (expt 2 i)) (closest_num_iter N (- i 1))]\n      [else i]))\n  (closest_num_iter N (quotient N 2)))\n",
    "  (define (closest_num_iter N i)\n    (cond\n      [(= i N) N]\n      [(= (remainder N i) 0) i]\n      [else (closest_num_iter N (+ i 1))]))\n  (closest_num_iter N 1))\n",
    "  (define (closest_num_iter N i)\n    (if (= N i)\n        (closest_num_iter N (- i 1))\n        (if (= (modulo N i) 0)\n            i\n            (closest_num_iter N (- i 1)))))\n  (closest_num_iter N N))\n",
    "  (if (zero? N)\n      0\n      (if (zero? (remainder N 2))\n          (closest_num (- N 1))\n          (closest_num (/ N 2)))))\n",
    "  (let loop ([n N])\n    (if (zero? n)\n        0\n        (if (integer? (sqrt n))\n            (loop (- n 1))\n            n))))\n",
    "  (define (closest_num_iter N i)\n    (cond\n      [(= i 0) 0]\n      [(= (modulo N i) 0) i]\n      [else (closest_num_iter N (- i 1))]))\n  (closest_num_iter N (- N 1)))\n",
    "  (cond\n    [(= N 1) 0]\n    [(= N 0) 0]\n    [(= N 2) 1]\n    [(= N 3) 2]\n    [(= N 4) 3]\n    [(= N 5) 4]\n    [(= N 6) 5]\n    [(= N 7) 6]\n    [(= N 8) 7]\n    [(= N 9) 8]\n    [(= N 10) 9]\n    [(= N 11) 10]\n    [(= N 12) 11]\n    [(= N 13) 12]\n    [(= N 14) 13]\n    [(= N 15) 14]\n    [(= N 16) 15]\n    [(= N 17) 16]\n    [(= N 18) 17]\n    [(= N 19) 18]\n    [(= N 20) 19]\n    [(= N 21) 20]\n    [(= N 22) 21]\n    [(= N 23) 22]\n    [(= N 24) 23]\n    [(= N 25) 24]\n    [(= N 26) 25]\n    [(= N 27) 26]\n    [(= N 28) 27]\n    [(= N 29) 28]\n    [(= N 30) 29]\n    [(= N 31) 30]\n    [(= N 32) 31]\n    [(= N 33) 32]\n    [(= N 34) 33]\n    [(= N 35) 34]\n    [(= N 36) 35]\n    [(= N 37) 36]\n    [(= N 38) 37]\n    [(= N 39) 38]\n    [(= N 40) 39]\n    [(= N 41) 40]\n    [(= N 42) 41]\n    [(= N 43) 42]\n    [(= N 44) 43]\n    [(= N 45) 44]\n    [(= N 46) 45]\n    [(= N 47) 46]\n    [(= N 48) 47]\n    [(= N 49) 48]\n    [(= N 50) 49]\n    [(= N 51) 50]\n    [(= N 52) 51]\n    [(= N 53) 52]\n    [(= N 54) 53]\n    [(= N 55) 54]\n    [(=",
    "  (if (zero? N)\n      0\n      (if (zero? (remainder N 2))\n          (closest_num (sub1 N))\n          (sub1 N))))\n",
    "  (define (closest_num_iter N i)\n    (if (not (integer? (/ N i)))\n        (closest_num_iter N (+ i 1))\n        i))\n  (closest_num_iter N 2))\n",
    "  (define (closest_num_iter N i)\n    (if (and (integer? (/ N i)) (integer? (/ N (+ i 1))))\n        i\n        (closest_num_iter N (+ i 1))))\n  (closest_num_iter N 1))\n",
    "  (let loop ([n N])\n    (if (zero? n)\n        0\n        (if (zero? (remainder n 2))\n            (loop (quotient n 2))\n            (sub1 n)))))\n",
    "  (let loop ([i (- N 1)] [j N])\n    (if (and (integer? (/ i j)) (integer? (/ j i)))\n        i\n        (loop (- i 1) j))))\n",
    "  (define (closest_num_iter N i)\n    (if (= N i)\n        N\n        (if (= (remainder N i) 0)\n            (closest_num_iter N (+ i 1))\n            i)))\n  (closest_num_iter N 1))\n",
    "  (let loop ([n N] [i (- N 1)])\n    (if (and (not (zero? i))\n             (not (zero? (modulo N i))))\n        (loop N (- i 1))\n        i)))\n",
    "  (define (iter n)\n    (if (= n 0)\n        0\n        (if (= (remainder n 2) 0)\n            (iter (/ n 2))\n            (iter (- n 1)))))\n  (iter N))\n",
    "  (define (closest_num_iter N i)\n    (if (and (positive? N) (positive? i))\n        (if (and (positive? (remainder N i)) (positive? (remainder (- N 1) i)))\n            (closest_num_iter N (+ i 1))\n            (- N (remainder N i)))\n        (error \"N must be a positive number\")))\n  (closest_num_iter N 1))\n",
    "  (define (closest_num_iter N i)\n    (if (and (integer? (/ N i)) (integer? (/ N (+ i 1))))\n        i\n        (closest_num_iter N (+ i 1))))\n  (closest_num_iter N 1))\n",
    "  (define (closest_num_iter n i)\n    (if (= n i)\n        (error \"No smaller number\")\n        (if (= (remainder n i) 0)\n            i\n            (closest_num_iter n (+ i 1)))))\n  (closest_num_iter N 2))\n",
    "  (cond\n    [(= N 0) 0]\n    [(= N 1) 0]\n    [(= N 2) 1]\n    [(= N 3) 2]\n    [(= N 4) 3]\n    [(= N 5) 4]\n    [(= N 6) 5]\n    [(= N 7) 6]\n    [(= N 8) 7]\n    [(= N 9) 8]\n    [(= N 10) 9]\n    [(= N 11) 10]\n    [(= N 12) 11]\n    [(= N 13) 12]\n    [(= N 14) 13]\n    [(= N 15) 14]\n    [(= N 16) 15]\n    [(= N 17) 16]\n    [(= N 18) 17]\n    [(= N 19) 18]\n    [(= N 20) 19]\n    [(= N 21) 20]\n    [(= N 22) 21]\n    [(= N 23) 22]\n    [(= N 24) 23]\n    [(= N 25) 24]\n    [(= N 26) 25]\n    [(= N 27) 26]\n    [(= N 28) 27]\n    [(= N 29) 28]\n    [(= N 30) 29]\n    [(= N 31) 30]\n    [(= N 32) 31]\n    [(= N 33) 32]\n    [(= N 34) 33]\n    [(= N 35) 34]\n    [(= N 36) 35]\n    [(= N 37) 36]\n    [(= N 38) 37]\n    [(= N 39) 38]\n    [(= N 40) 39]\n    [(= N 41) 40]\n    [(= N 42) 41]\n    [(= N 43) 42]\n    [(= N 44) 43]\n    [(= N 45) 44]\n    [(= N 46) 45]\n    [(= N 47) 46]\n    [(= N 48) 47]\n    [(= N 49) 48]\n    [(= N 50) 49]\n    [(= N 51) 50]\n    [(= N 52) 51]\n    [(= N 53) 52]\n    [(= N 54) 53]\n    [(= N 55) 54]\n    [(=",
    "  (define (closest_num_iter N i)\n    (cond\n      [(= i 0) 0]\n      [(= (modulo N i) 0) i]\n      [else (closest_num_iter N (- i 1))]))\n  (closest_num_iter N (- N 1)))\n",
    "  (define (closest_num_iter N i)\n    (cond\n      [(= N i) N]\n      [(> N i) (closest_num_iter N (+ i 1))]\n      [else i]))\n  (closest_num_iter N 1))\n",
    "  (define (closest_num_iter N i)\n    (if (= (remainder N i) 0)\n        i\n        (closest_num_iter N (+ i 1))))\n  (closest_num_iter N 2))\n",
    "  (define (closest_num_iter N i)\n    (cond\n      [(= i 0) 0]\n      [(= (remainder N i) 0) i]\n      [else (closest_num_iter N (- i 1))]))\n  (closest_num_iter N N))\n",
    "  (define (closest_num_iter N i)\n    (if (and (integer? (/ N i)) (integer? (/ N (+ i 1))))\n        i\n        (closest_num_iter N (+ i 1))))\n  (closest_num_iter N 2))\n",
    "  (cond\n    [(zero? N) N]\n    [(zero? (remainder N 2)) (closest_num (- N 1))]\n    [else (closest_num (/ N 2))]))\n",
    "  (define (closest_num_iter N i)\n    (cond\n      [(= N i) N]\n      [(< N i) (closest_num_iter N (- i 1))]\n      [else i]))\n  (closest_num_iter N N))\n",
    "  (define (closest_num_iter N i)\n    (if (and (integer? (/ N i)) (integer? (/ N (+ i 1))))\n        i\n        (closest_num_iter N (+ i 1))))\n  (closest_num_iter N 1))\n",
    "  (if (zero? N)\n      0\n      (if (zero? (remainder N 2))\n          (closest_num (- N 1))\n          (- N 1))))\n",
    "  (let loop ([n N])\n    (if (zero? n)\n        0\n        (if (zero? (remainder n 2))\n            (loop (quotient n 2))\n            (sub1 n)))))\n",
    "  (define (closest_num_iter N i)\n    (if (and (integer? (/ N i)) (integer? (/ N (+ i 1))))\n        i\n        (closest_num_iter N (+ i 1))))\n  (closest_num_iter N 1))\n",
    "  (let loop ([n N])\n    (if (zero? n)\n        0\n        (if (positive? (remainder N n))\n            (loop (- n 1))\n            n))))\n",
    "  (define (closest_num_iter N i)\n    (if (and (not (zero? (remainder N i)))\n             (not (zero? (remainder (sub1 N) i))))\n        (closest_num_iter N (add1 i))\n        (sub1 N)))\n  (closest_num_iter N 2))\n",
    "  (let loop ([n N] [i 0])\n    (if (zero? n)\n        i\n        (loop (quotient n 10) (+ i 1)))))\n",
    "  (let loop ([n N])\n    (if (= n 0)\n        N\n        (loop (- n 1)))))\n",
    "  (define (closest_num_iter N i)\n    (if (and (not (= N i))\n             (not (= N (+ i 1))))\n        (closest_num_iter N (+ i 1))\n        i))\n  (closest_num_iter N 0))\n",
    "  (define (closest-num-iter N n)\n    (if (= N n)\n        n\n        (if (and (integer? (/ N n)) (= (modulo N n) 0))\n            (closest-num-iter N (- n 1))\n            n)))\n  (closest-num-iter N N))\n",
    "  (define (closest-num-iter N i)\n    (if (and (zero? (remainder N i)) (zero? (remainder (sub1 N) i)))\n        (closest-num-iter N (add1 i))\n        i))\n  (closest-num-iter N 1))\n",
    "  (define (closest_num_iter N i)\n    (if (and (not (zero? N)) (not (zero? i)))\n        (if (and (not (zero? (remainder N i)))\n                 (not (zero? (remainder (sub1 N) i))))\n            (closest_num_iter N (sub1 i))\n            (sub1 N))\n        (error \"No closest number found\")))\n  (closest_num_iter N (sub1 N)))\n",
    "  (if (= N 0)\n      0\n      (closest_num_helper N 0)))\n",
    "  (define (closest_num_iter N i)\n    (if (and (not (zero? (remainder N i)))\n             (not (zero? (remainder (sub1 N) i))))\n        (closest_num_iter N (add1 i))\n        (sub1 N)))\n  (closest_num_iter N 2))\n",
    "  (let loop ([i N])\n    (if (zero? i)\n        0\n        (if (integer? (/ N i))\n            i\n            (loop (- i 1))))))\n",
    "  (define (closest_num_iter N i)\n    (if (not (integer? (/ N i)))\n        (closest_num_iter N (+ i 1))\n        i))\n  (closest_num_iter N 2))\n",
    "  (let loop ([n N])\n    (if (zero? n)\n        0\n        (if (zero? (remainder n 2))\n            (loop (quotient n 2))\n            (sub1 n)))))\n",
    "  (cond\n    [(= N 0) 0]\n    [(= N 1) 0]\n    [(= N 2) 1]\n    [(= N 3) 2]\n    [(= N 4) 3]\n    [(= N 5) 4]\n    [(= N 6) 5]\n    [(= N 7) 6]\n    [(= N 8) 7]\n    [(= N 9) 8]\n    [(= N 10) 9]\n    [(= N 11) 10]\n    [(= N 12) 11]\n    [(= N 13) 12]\n    [(= N 14) 13]\n    [(= N 15) 14]\n    [(= N 16) 15]\n    [(= N 17) 16]\n    [(= N 18) 17]\n    [(= N 19) 18]\n    [(= N 20) 19]\n    [(= N 21) 20]\n    [(= N 22) 21]\n    [(= N 23) 22]\n    [(= N 24) 23]\n    [(= N 25) 24]\n    [(= N 26) 25]\n    [(= N 27) 26]\n    [(= N 28) 27]\n    [(= N 29) 28]\n    [(= N 30) 29]\n    [(= N 31) 30]\n    [(= N 32) 31]\n    [(= N 33) 32]\n    [(= N 34) 33]\n    [(= N 35) 34]\n    [(= N 36) 35]\n    [(= N 37) 36]\n    [(= N 38) 37]\n    [(= N 39) 38]\n    [(= N 40) 39]\n    [(= N 41) 40]\n    [(= N 42) 41]\n    [(= N 43) 42]\n    [(= N 44) 43]\n    [(= N 45) 44]\n    [(= N 46) 45]\n    [(= N 47) 46]\n    [(= N 48) 47]\n    [(= N 49) 48]\n    [(= N 50) 49]\n    [(= N 51) 50]\n    [(= N 52) 51]\n    [(= N 53) 52]\n    [(= N 54) 53]\n    [(= N 55) 54]\n    [(=",
    "  (let loop ((n N))\n    (if (zero? n)\n        0\n        (if (zero? (remainder n 2))\n            (loop (- n 1))\n            n))))\n",
    "  (if (zero? N)\n      0\n      (if (zero? (remainder N 2))\n          (closest_num (sub1 N))\n          N)))\n",
    "  (let ([n (integer->char N)])\n    (cond\n      [(char=? n #\\0) #\\0]\n      [(char=? n #\\1) #\\0]\n      [(char=? n #\\2) #\\1]\n      [(char=? n #\\3) #\\2]\n      [(char=? n #\\4) #\\3]\n      [(char=? n #\\5) #\\4]\n      [(char=? n #\\6) #\\5]\n      [(char=? n #\\7) #\\6]\n      [(char=? n #\\8) #\\7]\n      [(char=? n #\\9) #\\8])))\n",
    "  (if (zero? N)\n      0\n      (if (zero? (remainder N 2))\n          (closest_num (sub1 N))\n          N)))\n",
    "  (define (closest_num_iter N i)\n    (if (and (not (zero? N)) (not (zero? i)))\n        (if (= (remainder N i) 0)\n            (closest_num_iter N (- i 1))\n            (closest_num_iter N (- i 1)))\n        i))\n  (closest_num_iter N N))\n",
    "  (define (closest_num_iter N i)\n    (if (and (not (zero? (remainder N i)))\n             (not (zero? (remainder (sub1 N) i))))\n        (closest_num_iter N (add1 i))\n        i))\n  (closest_num_iter N 2))\n",
    "  (define (helper N)\n    (if (zero? N)\n        0\n        (if (zero? (remainder N 2))\n            (helper (quotient N 2))\n            (helper (sub1 N)))))\n  (helper N))\n",
    "  (define (closest_num_iter N i)\n    (if (= N i)\n        N\n        (if (integer? (/ N i))\n            (closest_num_iter N (+ i 1))\n            i)))\n  (closest_num_iter N 2))\n",
    "  (define (closest_num_iter N i)\n    (if (and (integer? (/ N i))\n             (integer? (/ N (+ i 1))))\n        i\n        (closest_num_iter N (+ i 1))))\n  (closest_num_iter N 2))\n",
    "  (cond\n    [(= N 0) 0]\n    [(= N 1) 0]\n    [(= N 2) 1]\n    [(= N 3) 2]\n    [(= N 4) 2]\n    [(= N 5) 4]\n    [(= N 6) 4]\n    [(= N 7) 4]\n    [(= N 8) 4]\n    [(= N 9) 8]\n    [(= N 10) 8]\n    [(= N 11) 8]\n    [(= N 12) 8]\n    [(= N 13) 8]\n    [(= N 14) 8]\n    [(= N 15) 8]\n    [(= N 16) 8]\n    [(= N 17) 16]\n    [(= N 18) 16]\n    [(= N 19) 16]\n    [(= N 20) 16]\n    [(= N 21) 16]\n    [(= N 22) 16]\n    [(= N 23) 16]\n    [(= N 24) 16]\n    [(= N 25) 16]\n    [(= N 26) 16]\n    [(= N 27) 16]\n    [(= N 28) 16]\n    [(= N 29) 16]\n    [(= N 30) 16]\n    [(= N 31) 16]\n    [(= N 32) 16]\n    [(= N 33) 32]\n    [(= N 34) 32]\n    [(= N 35) 32]\n    [(= N 36) 32]\n    [(= N 37) 32]\n    [(= N 38) 32]\n    [(= N 39) 32]\n    [(= N 40) 32]\n    [(= N 41) 32]\n    [(= N 42) 32]\n    [(= N 43) 32]\n    [(= N 44) 32]\n    [(= N 45) 32]\n    [(= N 46) 32]\n    [(= N 47) 32]\n    [(= N 48) 32]\n    [(= N 49) 32]\n    [(= N 50) 32]\n    [(= N 51) 32]\n    [(= N 52) 32]\n    [(= N 53) 32]\n    [(= N 54) 32]\n    [(= N 55) 32]\n    [(=",
    "  (define (closest_num_iter N i)\n    (if (= (modulo N i) 0)\n        i\n        (closest_num_iter N (+ i 1))))\n  (closest_num_iter N 1))\n",
    "  (let loop ([n N])\n    (if (zero? n)\n        0\n        (if (zero? (remainder n 2))\n            (loop (quotient n 2))\n            (sub1 n)))))\n",
    "  (define (closest_num_iter N i)\n    (cond ((= (remainder N i) 0) i)\n          ((&lt; i N) (closest_num_iter N (+ i 1)))\n          (else (closest_num_iter N (- i 1)))))\n  (closest_num_iter N 1))\n",
    "  (define (closest_num_helper N i)\n    (if (zero? (remainder N i))\n        (closest_num_helper N (- i 1))\n        i))\n  (closest_num_helper N N))\n",
    "  (if (zero? N)\n      0\n      (if (zero? (remainder N 2))\n          (closest_num (- N 1))\n          (closest_num (/ N 2)))))\n",
    "  (let ([n (exact-floor N)])\n    (if (zero? n)\n        0\n        (let ([i (exact-floor (sqrt n))])\n          (if (zero? (modulo n i))\n              (closest_num (- n 1))\n              (if (zero? (modulo n (+ i 1)))\n                  (+ i 1)\n                  i))))))\n",
    "  (define (closest_num_iter N i)\n    (if (= N i)\n        N\n        (if (= (remainder N i) 0)\n            (closest_num_iter N (+ i 1))\n            i)))\n  (closest_num_iter N 2))\n",
    "  (let loop ([i N])\n    (if (not (zero? (modulo i 2)))\n        (loop (- i 1))\n        i)))\n",
    "  (define (closest_num_iter N i)\n    (if (and (integer? (/ N i)) (integer? (/ N (+ i 1))))\n        i\n        (closest_num_iter N (+ i 1))))\n  (closest_num_iter N 1))\n",
    "  (define (iter N i)\n    (if (= N i)\n        N\n        (if (integer? (/ N i))\n            (iter N (+ i 1))\n            i)))\n  (iter N 1))\n",
    "  (define (closest_num_iter N i)\n    (if (and (not (zero? (remainder N i)))\n             (not (zero? (remainder (- N i) i))))\n        (closest_num_iter N (+ i 1))\n        i))\n  (closest_num_iter N 2))\n",
    "  (define (closest_num_iter N i)\n    (if (and (integer? (/ N i)) (integer? (/ N (+ i 1))))\n        i\n        (closest_num_iter N (+ i 1))))\n  (closest_num_iter N 1))\n",
    "  (define (closest_num_iter N i)\n    (if (not (zero? (modulo N i)))\n        (closest_num_iter N (+ i 1))\n        i))\n  (closest_num_iter N 2))\n",
    "  (define (closest_num_iter N i)\n    (if (zero? (remainder N i))\n        (closest_num_iter N (- i 1))\n        i))\n  (closest_num_iter N N))\n",
    "  (define (closest_num_iter N i)\n    (if (and (integer? (/ N i)) (integer? (/ N (+ i 1))))\n        i\n        (closest_num_iter N (+ i 1))))\n  (closest_num_iter N 1))\n",
    "  (define (closest_num_iter N i)\n    (if (and (integer? (/ N i)) (integer? (/ N (+ i 1))))\n        i\n        (closest_num_iter N (+ i 1))))\n  (closest_num_iter N 1))\n",
    "  (cond\n    [(= N 0) 0]\n    [(= N 1) 0]\n    [(= N 2) 1]\n    [(= N 3) 2]\n    [(= N 4) 3]\n    [(= N 5) 4]\n    [(= N 6) 5]\n    [(= N 7) 6]\n    [(= N 8) 7]\n    [(= N 9) 8]\n    [(= N 10) 9]\n    [(= N 11) 10]\n    [(= N 12) 11]\n    [(= N 13) 12]\n    [(= N 14) 13]\n    [(= N 15) 14]\n    [(= N 16) 15]\n    [(= N 17) 16]\n    [(= N 18) 17]\n    [(= N 19) 18]\n    [(= N 20) 19]\n    [(= N 21) 20]\n    [(= N 22) 21]\n    [(= N 23) 22]\n    [(= N 24) 23]\n    [(= N 25) 24]\n    [(= N 26) 25]\n    [(= N 27) 26]\n    [(= N 28) 27]\n    [(= N 29) 28]\n    [(= N 30) 29]\n    [(= N 31) 30]\n    [(= N 32) 31]\n    [(= N 33) 32]\n    [(= N 34) 33]\n    [(= N 35) 34]\n    [(= N 36) 35]\n    [(= N 37) 36]\n    [(= N 38) 37]\n    [(= N 39) 38]\n    [(= N 40) 39]\n    [(= N 41) 40]\n    [(= N 42) 41]\n    [(= N 43) 42]\n    [(= N 44) 43]\n    [(= N 45) 44]\n    [(= N 46) 45]\n    [(= N 47) 46]\n    [(= N 48) 47]\n    [(= N 49) 48]\n    [(= N 50) 49]\n    [(= N 51) 50]\n    [(= N 52) 51]\n    [(= N 53) 52]\n    [(= N 54) 53]\n    [(= N 55) 54]\n    [(=",
    "  (let loop ((n N) (i N))\n    (cond ((= n 0) (error \"no smaller number\"))\n          ((= n 1) (error \"no smaller number\"))\n          ((= n 2) 1)\n          ((= n 3) 2)\n          ((= n 4) 2)\n          ((= n 5) 4)\n          ((= n 6) 4)\n          ((= n 7) 4)\n          ((= n 8) 4)\n          ((= n 9) 8)\n          ((= n 10) 8)\n          ((= n 11) 8)\n          ((= n 12) 8)\n          ((= n 13) 8)\n          ((= n 14) 8)\n          ((= n 15) 8)\n          ((= n 16) 8)\n          ((= n 17) 16)\n          ((= n 18) 16)\n          ((= n 19) 16)\n          ((= n 20) 16)\n          ((= n 21) 16)\n          ((= n 22) 16)\n          ((= n 23) 16)\n          ((= n 24) 16)\n          ((= n 25) 16)\n          ((= n 26) 16)\n          ((= n 27) 16)\n          ((= n 28) 16)\n          ((= n 29) 16)\n          ((= n 30) 16)\n          ((= n 31) 16)\n          ((= n 32) 16)\n          ((= n 33) 32)\n          ((= n 34) 32)\n          ((= n 35) 32)\n          ((= n 36) 32)\n          ((= n 37) 32)\n          ((= n 38) 32)\n          ((= n 39) 32)\n          ((= n 40) 32)\n          ((= n 41) 32)\n          ((= n 42) 32)\n          ((= n 43) 32)\n          ((= n 44) 32)\n          ((= n 45) 32)\n          ((= n 46) 32)\n          ((= n 47) 32)\n          ((= n 48) 32)\n          ((= n 49) 32)\n          ((= n 50) 32)\n          ((= n 51) 32)\n          ((= n 52) 32)\n          ((= n 53) 32)\n",
    "  (define (closest_num_iter N i)\n    (cond\n      [(= i N) N]\n      [(< i N) (closest_num_iter N (+ i 1))]\n      [else i]))\n  (closest_num_iter N 0))\n",
    "  (let loop ([i 0] [j N])\n    (if (= i j)\n        i\n        (if (and (integer? (/ j i)) (= (modulo j i) 0))\n            (loop (+ i 1) (/ j i))\n            (loop (+ i 1) j)))))\n",
    "  (define (closest_num_iter N i)\n    (if (zero? (modulo N i))\n        i\n        (closest_num_iter N (+ i 1))))\n  (closest_num_iter N 1))\n",
    "  (define (closest_num_iter N i)\n    (if (and (not (= N i))\n             (not (= N (+ i 1))))\n        (closest_num_iter N (+ i 1))\n        i))\n  (closest_num_iter N 0))\n",
    "  (define (closest_num_iter N i)\n    (if (not (integer? (/ N i)))\n        (closest_num_iter N (+ i 1))\n        i))\n  (closest_num_iter N 1))\n",
    "  (cond [(= N 1) 0]\n        [else (closest_num (- N 1))]))\n",
    "  (define (closest_num_iter N i)\n    (if (not (integer? (/ N i)))\n        (closest_num_iter N (+ i 1))\n        i))\n  (closest_num_iter N 2))\n",
    "  (define (closest_num_iter N i)\n    (if (and (not (zero? (remainder N i)))\n             (not (zero? (remainder (sub1 N) i))))\n        (closest_num_iter N (add1 i))\n        (sub1 N)))\n  (closest_num_iter N 2))\n",
    "  (define (closest_num_iter N i)\n    (cond\n      [(= N i) i]\n      [(< N i) (closest_num_iter N (- i 1))]\n      [else (closest_num_iter N (+ i 1))]))\n  (closest_num_iter N 0))\n",
    "  (define (closest_num_iter N i)\n    (if (and (integer? (/ N i)) (integer? (/ N (+ i 1))))\n        i\n        (closest_num_iter N (+ i 1))))\n  (closest_num_iter N 1))\n",
    "  (define (closest_num_iter N i)\n    (if (zero? (modulo N i))\n        (closest_num_iter N (- i 1))\n        i))\n  (closest_num_iter N (- N 1)))\n",
    "  (define (closest_num_iter N i)\n    (if (and (not (= N i))\n             (not (= N (+ i 1))))\n        (closest_num_iter N (+ i 1))\n        i))\n  (closest_num_iter N 0))\n",
    "  (define (closest_num_iter N n)\n    (cond ((= n 0) N)\n          ((= (remainder N n) 0) (closest_num_iter N (- n 1)))\n          (else (closest_num_iter N (- n 1)))))\n  (closest_num_iter N (- N 1)))\n",
    "  (if (zero? N)\n      0\n      (if (odd? N)\n          (closest_num (- N 1))\n          (closest_num (/ N 2)))))\n",
    "  (define (closest_num_iter N i)\n    (if (and (not (zero? (remainder N i)))\n             (not (zero? (remainder (sub1 N) i))))\n        (closest_num_iter N (add1 i))\n        (sub1 N)))\n  (closest_num_iter N 2))\n",
    "  (define (closest_num_iter N i)\n    (if (and (integer? (/ N i)) (integer? (/ i N)))\n        i\n        (closest_num_iter N (+ i 1))))\n  (closest_num_iter N 1))\n",
    "  (define (closest_num_iter N i)\n    (if (and (integer? (/ N i)) (integer? (/ N (+ i 1))))\n        i\n        (closest_num_iter N (+ i 1))))\n  (closest_num_iter N 1))\n",
    "  (define (closest_num_iter N i)\n    (if (and (not (zero? (modulo N i)))\n             (zero? (modulo (+ N 1) i)))\n        i\n        (closest_num_iter N (+ i 1))))\n  (closest_num_iter N 2))\n",
    "  (define (closest_num_iter N i)\n    (if (and (integer? (/ N i)) (integer? (/ N (+ i 1))))\n        i\n        (closest_num_iter N (+ i 1))))\n  (closest_num_iter N 1))\n",
    "  (define (closest_num_iter N i)\n    (if (= N i)\n        (- N 1)\n        (if (= (remainder N i) 0)\n            (closest_num_iter N (+ i 1))\n            i)))\n  (closest_num_iter N 2))\n",
    "  (define (closest_num_iter N i)\n    (if (= N i)\n        N\n        (if (= (remainder N i) 0)\n            (closest_num_iter N (+ i 1))\n            i)))\n  (closest_num_iter N 2))\n",
    "  (cond\n    [(= N 1) 0]\n    [(= N 0) 0]\n    [(= N 2) 1]\n    [(= N 3) 2]\n    [(= N 4) 3]\n    [(= N 5) 4]\n    [(= N 6) 5]\n    [(= N 7) 6]\n    [(= N 8) 7]\n    [(= N 9) 8]\n    [(= N 10) 9]\n    [(= N 11) 10]\n    [(= N 12) 11]\n    [(= N 13) 12]\n    [(= N 14) 13]\n    [(= N 15) 14]\n    [(= N 16) 15]\n    [(= N 17) 16]\n    [(= N 18) 17]\n    [(= N 19) 18]\n    [(= N 20) 19]\n    [(= N 21) 20]\n    [(= N 22) 21]\n    [(= N 23) 22]\n    [(= N 24) 23]\n    [(= N 25) 24]\n    [(= N 26) 25]\n    [(= N 27) 26]\n    [(= N 28) 27]\n    [(= N 29) 28]\n    [(= N 30) 29]\n    [(= N 31) 30]\n    [(= N 32) 31]\n    [(= N 33) 32]\n    [(= N 34) 33]\n    [(= N 35) 34]\n    [(= N 36) 35]\n    [(= N 37) 36]\n    [(= N 38) 37]\n    [(= N 39) 38]\n    [(= N 40) 39]\n    [(= N 41) 40]\n    [(= N 42) 41]\n    [(= N 43) 42]\n    [(= N 44) 43]\n    [(= N 45) 44]\n    [(= N 46) 45]\n    [(= N 47) 46]\n    [(= N 48) 47]\n    [(= N 49) 48]\n    [(= N 50) 49]\n    [(= N 51) 50]\n    [(= N 52) 51]\n    [(= N 53) 52]\n    [(= N 54) 53]\n    [(= N 55) 54]\n    [(=",
    "  (define (closest_num_iter N i)\n    (if (not (integer? (/ N i)))\n        (closest_num_iter N (+ i 1))\n        i))\n  (closest_num_iter N 1))\n",
    "  (define (helper N acc)\n    (if (zero? N)\n        acc\n        (helper (sub1 N) (add1 acc))))\n  (helper N 0))\n",
    "  (define (closest_num_iter N i)\n    (cond\n      [(= i N) N]\n      [(= (remainder N i) 0) i]\n      [else (closest_num_iter N (+ i 1))]))\n  (closest_num_iter N 1))\n",
    "  (define (closest_num_iter N i)\n    (if (and (not (zero? (remainder N i)))\n             (not (zero? (remainder (+ N 1) i))))\n        (closest_num_iter N (+ i 1))\n        i))\n  (closest_num_iter N 2))\n",
    "  (let loop ([n N])\n    (if (zero? n)\n        0\n        (if (zero? (remainder n 2))\n            (loop (quotient n 2))\n            (loop (sub1 n))))))\n",
    "  (define (closest_num_iter N i)\n    (if (not (integer? (/ N i)))\n        (closest_num_iter N (+ i 1))\n        i))\n  (closest_num_iter N 2))\n",
    "  (let loop ([i N])\n    (if (zero? i)\n        N\n        (if (zero? (modulo N i))\n            i\n            (loop (- i 1))))))\n",
    "  (define (closest_num_iter N i)\n    (if (and (integer? (/ N i)) (integer? (/ N (+ i 1))))\n        i\n        (closest_num_iter N (+ i 1))))\n  (closest_num_iter N 1))\n",
    "  (cond\n    [(= N 0) 0]\n    [(= N 1) 0]\n    [(= N 2) 1]\n    [else (closest_num (- N 1))]))\n",
    "  (let ([n (integer->char N)])\n    (if (char=? n #\\0)\n        #\\0\n        (integer->char (char->integer n - 1)))))\n",
    "  (define (closest_num_iter N i)\n    (if (= (remainder N i) 0)\n        i\n        (closest_num_iter N (+ i 1))))\n  (closest_num_iter N 1))\n",
    "  (let loop ([n N] [i 0])\n    (if (= n i)\n        (error \"No smaller number\")\n        (if (integer? (/ n i))\n            i\n            (loop n (+ i 1))))))\n",
    "  (let loop ([n N])\n    (if (zero? n)\n        0\n        (if (zero? (remainder n 2))\n            (loop (quotient n 2))\n            (loop (sub1 n))))))\n",
    "  (define (closest_num_iter N i)\n    (if (not (integer? (/ N i)))\n        (closest_num_iter N (+ i 1))\n        i))\n  (closest_num_iter N 2))\n",
    "  (define (iter N i)\n    (if (and (zero? (remainder N i)) (zero? (remainder (sub1 N) i)))\n        (iter N (add1 i))\n        (sub1 N)))\n  (iter N 2))\n",
    "  (define (closest_num_iter N i)\n    (cond\n      [(= (remainder N i) 0) i]\n      [else (closest_num_iter N (+ i 1))]))\n  (closest_num_iter N 1))\n",
    "  (let ([N (integer->exact-integer N)])\n    (if (positive? N)\n        (let loop ([N N])\n          (if (zero? (remainder N 2))\n              (loop (quotient N 2))\n              (quotient N 2)))\n        (let loop ([N N])\n          (if (zero? (remainder N 2))\n              (loop (quotient N 2))\n              (quotient N 2))))))\n",
    "  (let loop ([i N])\n    (if (zero? i)\n        0\n        (if (integer? (/ N i))\n            i\n            (loop (- i 1))))))\n",
    "  (define (closest_num_iter N i)\n    (if (= (modulo N i) 0)\n        i\n        (closest_num_iter N (+ i 1))))\n  (closest_num_iter N 2))\n",
    "  (define (closest_num_iter N i)\n    (if (and (integer? (/ N i)) (integer? (/ N (+ i 1))))\n        i\n        (closest_num_iter N (+ i 1))))\n  (closest_num_iter N 1))\n",
    "  (define (closest_num_iter N i)\n    (if (and (not (= N 0))\n             (not (= N 1))\n             (not (= N 2))\n             (not (= N 3)))\n        (if (and (not (= (modulo N i) 0))\n                 (not (= (modulo (+ N 1) i) 0)))\n            (closest_num_iter N (+ i 1))\n            (if (= (modulo N i) 0)\n                (- N 1)\n                (- N 2)))\n        (if (or (= N 0) (= N 1))\n            0\n            (if (= N 2)\n                1\n                2))))\n  (closest_num_iter N 2))\n",
    "  (define (closest_num_iter N i)\n    (if (= N i)\n        N\n        (if (= (remainder N i) 0)\n            (closest_num_iter N (+ i 1))\n            i)))\n  (closest_num_iter N 2))\n",
    "  (cond\n    [(= N 0) 0]\n    [(= N 1) 0]\n    [(= N 2) 1]\n    [(= N 3) 2]\n    [(= N 4) 3]\n    [(= N 5) 4]\n    [(= N 6) 5]\n    [(= N 7) 6]\n    [(= N 8) 7]\n    [(= N 9) 8]\n    [(= N 10) 9]\n    [(= N 11) 10]\n    [(= N 12) 11]\n    [(= N 13) 12]\n    [(= N 14) 13]\n    [(= N 15) 14]\n    [(= N 16) 15]\n    [(= N 17) 16]\n    [(= N 18) 17]\n    [(= N 19) 18]\n    [(= N 20) 19]\n    [(= N 21) 20]\n    [(= N 22) 21]\n    [(= N 23) 22]\n    [(= N 24) 23]\n    [(= N 25) 24]\n    [(= N 26) 25]\n    [(= N 27) 26]\n    [(= N 28) 27]\n    [(= N 29) 28]\n    [(= N 30) 29]\n    [(= N 31) 30]\n    [(= N 32) 31]\n    [(= N 33) 32]\n    [(= N 34) 33]\n    [(= N 35) 34]\n    [(= N 36) 35]\n    [(= N 37) 36]\n    [(= N 38) 37]\n    [(= N 39) 38]\n    [(= N 40) 39]\n    [(= N 41) 40]\n    [(= N 42) 41]\n    [(= N 43) 42]\n    [(= N 44) 43]\n    [(= N 45) 44]\n    [(= N 46) 45]\n    [(= N 47) 46]\n    [(= N 48) 47]\n    [(= N 49) 48]\n    [(= N 50) 49]\n    [(= N 51) 50]\n    [(= N 52) 51]\n    [(= N 53) 52]\n    [(= N 54) 53]\n    [(= N 55) 54]\n    [(=",
    "  (cond\n    [(= N 0) 0]\n    [(= N 1) 0]\n    [(= N 2) 1]\n    [(= N 3) 2]\n    [(= N 4) 3]\n    [(= N 5) 4]\n    [(= N 6) 5]\n    [(= N 7) 6]\n    [(= N 8) 7]\n    [(= N 9) 8]\n    [(= N 10) 9]\n    [(= N 11) 10]\n    [(= N 12) 11]\n    [(= N 13) 12]\n    [(= N 14) 13]\n    [(= N 15) 14]\n    [(= N 16) 15]\n    [(= N 17) 16]\n    [(= N 18) 17]\n    [(= N 19) 18]\n    [(= N 20) 19]\n    [(= N 21) 20]\n    [(= N 22) 21]\n    [(= N 23) 22]\n    [(= N 24) 23]\n    [(= N 25) 24]\n    [(= N 26) 25]\n    [(= N 27) 26]\n    [(= N 28) 27]\n    [(= N 29) 28]\n    [(= N 30) 29]\n    [(= N 31) 30]\n    [(= N 32) 31]\n    [(= N 33) 32]\n    [(= N 34) 33]\n    [(= N 35) 34]\n    [(= N 36) 35]\n    [(= N 37) 36]\n    [(= N 38) 37]\n    [(= N 39) 38]\n    [(= N 40) 39]\n    [(= N 41) 40]\n    [(= N 42) 41]\n    [(= N 43) 42]\n    [(= N 44) 43]\n    [(= N 45) 44]\n    [(= N 46) 45]\n    [(= N 47) 46]\n    [(= N 48) 47]\n    [(= N 49) 48]\n    [(= N 50) 49]\n    [(= N 51) 50]\n    [(= N 52) 51]\n    [(= N 53) 52]\n    [(= N 54) 53]\n    [(= N 55) 54]\n    [(=",
    "  (cond\n    [(= N 0) 0]\n    [(= N 1) 0]\n    [(= N 2) 1]\n    [(= N 3) 2]\n    [(= N 4) 3]\n    [(= N 5) 4]\n    [(= N 6) 5]\n    [(= N 7) 6]\n    [(= N 8) 7]\n    [(= N 9) 8]\n    [(= N 10) 9]\n    [(= N 11) 10]\n    [(= N 12) 11]\n    [(= N 13) 12]\n    [(= N 14) 13]\n    [(= N 15) 14]\n    [(= N 16) 15]\n    [(= N 17) 16]\n    [(= N 18) 17]\n    [(= N 19) 18]\n    [(= N 20) 19]\n    [(= N 21) 20]\n    [(= N 22) 21]\n    [(= N 23) 22]\n    [(= N 24) 23]\n    [(= N 25) 24]\n    [(= N 26) 25]\n    [(= N 27) 26]\n    [(= N 28) 27]\n    [(= N 29) 28]\n    [(= N 30) 29]\n    [(= N 31) 30]\n    [(= N 32) 31]\n    [(= N 33) 32]\n    [(= N 34) 33]\n    [(= N 35) 34]\n    [(= N 36) 35]\n    [(= N 37) 36]\n    [(= N 38) 37]\n    [(= N 39) 38]\n    [(= N 40) 39]\n    [(= N 41) 40]\n    [(= N 42) 41]\n    [(= N 43) 42]\n    [(= N 44) 43]\n    [(= N 45) 44]\n    [(= N 46) 45]\n    [(= N 47) 46]\n    [(= N 48) 47]\n    [(= N 49) 48]\n    [(= N 50) 49]\n    [(= N 51) 50]\n    [(= N 52) 51]\n    [(= N 53) 52]\n    [(= N 54) 53]\n    [(= N 55) 54]\n    [(=",
    "  (cond\n    [(= N 0) 0]\n    [(= N 1) 0]\n    [(= N 2) 1]\n    [(= N 3) 2]\n    [(= N 4) 3]\n    [(= N 5) 4]\n    [(= N 6) 5]\n    [(= N 7) 6]\n    [(= N 8) 7]\n    [(= N 9) 8]\n    [(= N 10) 9]\n    [(= N 11) 10]\n    [(= N 12) 11]\n    [(= N 13) 12]\n    [(= N 14) 13]\n    [(= N 15) 14]\n    [(= N 16) 15]\n    [(= N 17) 16]\n    [(= N 18) 17]\n    [(= N 19) 18]\n    [(= N 20) 19]\n    [(= N 21) 20]\n    [(= N 22) 21]\n    [(= N 23) 22]\n    [(= N 24) 23]\n    [(= N 25) 24]\n    [(= N 26) 25]\n    [(= N 27) 26]\n    [(= N 28) 27]\n    [(= N 29) 28]\n    [(= N 30) 29]\n    [(= N 31) 30]\n    [(= N 32) 31]\n    [(= N 33) 32]\n    [(= N 34) 33]\n    [(= N 35) 34]\n    [(= N 36) 35]\n    [(= N 37) 36]\n    [(= N 38) 37]\n    [(= N 39) 38]\n    [(= N 40) 39]\n    [(= N 41) 40]\n    [(= N 42) 41]\n    [(= N 43) 42]\n    [(= N 44) 43]\n    [(= N 45) 44]\n    [(= N 46) 45]\n    [(= N 47) 46]\n    [(= N 48) 47]\n    [(= N 49) 48]\n    [(= N 50) 49]\n    [(= N 51) 50]\n    [(= N 52) 51]\n    [(= N 53) 52]\n    [(= N 54) 53]\n    [(= N 55) 54]\n    [(=",
    "  (let loop ([i N])\n    (if (= i 0)\n        0\n        (if (integer? (/ N i))\n            i\n            (loop (- i 1))))))\n",
    "  (define (closest_num_iter n acc)\n    (if (zero? n)\n        acc\n        (closest_num_iter (quotient n 2) (if (even? n) (add1 acc) acc))))\n  (closest_num_iter N 0))\n",
    "  (define (closest_num_iter N n)\n    (if (= N n)\n        n\n        (if (and (not (zero? (remainder N n)))\n                 (not (zero? (remainder N (+ n 1)))))\n            n\n            (closest_num_iter N (+ n 1)))))\n  (closest_num_iter N 1))\n",
    "  (define (closest_num_iter N i)\n    (cond\n      [(= i 0) 0]\n      [(= (remainder N i) 0) i]\n      [else (closest_num_iter N (- i 1))]))\n  (closest_num_iter N N))\n",
    "  (define (closest_num_iter n i)\n    (if (and (not (zero? n)) (not (zero? i)))\n        (if (zero? (modulo n i))\n            (closest_num_iter (quotient n i) i)\n            (closest_num_iter n (- i 1)))\n        (if (zero? n)\n            (quotient N i)\n            (quotient N (- i 1)))))\n  (closest_num_iter N N))\n",
    "  (define (closest_num_iter N i)\n    (if (and (not (zero? (remainder N i)))\n             (not (zero? (remainder (sub1 N) i))))\n        (closest_num_iter N (add1 i))\n        i))\n  (closest_num_iter N 2))\n",
    "  (let loop ([i N])\n    (if (zero? i)\n        N\n        (if (integer? (/ N i))\n            i\n            (loop (- i 1))))))\n",
    "  (define (closest_num_iter N i)\n    (cond\n      [(= i N) N]\n      [(= (remainder N i) 0) i]\n      [else (closest_num_iter N (+ i 1))]))\n  (closest_num_iter N 1))\n",
    "  (define (closest_num_iter N i)\n    (cond ((< i 0) (error \"No smaller number\"))\n          ((= (remainder N i) 0) i)\n          (else (closest_num_iter N (- i 1)))))\n  (closest_num_iter N (- N 1)))\n",
    "  (define (closest_num_iter N i)\n    (if (and (integer? (/ N i)) (integer? (/ N (+ i 1))))\n        i\n        (closest_num_iter N (+ i 1))))\n  (closest_num_iter N 1))\n",
    "  (let loop ([i N])\n    (if (not (integer? i))\n        (error \"Not an integer\")\n        (if (integer? (- i 1))\n            (- i 1)\n            (loop (- i 1))))))\n",
    "  (define (closest_num_iter N i)\n    (cond ((= N i) N)\n          ((< N i) (- i 1))\n          (else (closest_num_iter N (+ i 1)))))\n  (closest_num_iter N 1))\n",
    "  (define (closest_num_iter N i)\n    (if (and (not (= N i))\n             (not (= N (+ i 1))))\n        (closest_num_iter N (+ i 1))\n        i))\n  (closest_num_iter N 0))\n",
    "  (cond\n    [(= N 0) 0]\n    [(= N 1) 0]\n    [(= N 2) 1]\n    [(= N 3) 1]\n    [(= N 4) 3]\n    [(= N 5) 3]\n    [(= N 6) 5]\n    [(= N 7) 5]\n    [(= N 8) 7]\n    [(= N 9) 7]\n    [(= N 10) 9]\n    [(= N 11) 9]\n    [(= N 12) 11]\n    [(= N 13) 11]\n    [(= N 14) 13]\n    [(= N 15) 13]\n    [(= N 16) 15]\n    [(= N 17) 15]\n    [(= N 18) 17]\n    [(= N 19) 17]\n    [(= N 20) 19]\n    [(= N 21) 19]\n    [(= N 22) 21]\n    [(= N 23) 21]\n    [(= N 24) 23]\n    [(= N 25) 23]\n    [(= N 26) 25]\n    [(= N 27) 25]\n    [(= N 28) 27]\n    [(= N 29) 27]\n    [(= N 30) 29]\n    [(= N 31) 29]\n    [(= N 32) 31]\n    [(= N 33) 31]\n    [(= N 34) 33]\n    [(= N 35) 33]\n    [(= N 36) 35]\n    [(= N 37) 35]\n    [(= N 38) 37]\n    [(= N 39) 37]\n    [(= N 40) 39]\n    [(= N 41) 39]\n    [(= N 42) 41]\n    [(= N 43) 41]\n    [(= N 44) 43]\n    [(= N 45) 43]\n    [(= N 46) 45]\n    [(= N 47) 45]\n    [(= N 48) 47]\n    [(= N 49) 47]\n    [(= N 50) 49]\n    [(= N 51) 49]\n    [(= N 52) 51]\n    [(= N 53) 51]\n    [(= N 54) 53]\n    [(= N 55) 53]\n    [(=",
    "  (let loop ([n N] [i 1])\n    (if (positive? (remainder N i))\n        (loop n (+ i 1))\n        (- n i))))\n",
    "  (define (closest_num_iter N i)\n    (cond\n      [(= N i) N]\n      [(= N (+ i 1)) i]\n      [(&lt; N i) (closest_num_iter N (- i 1))]\n      [else (closest_num_iter N (+ i 1))]))\n  (closest_num_iter N 0))\n",
    "  (cond\n    [(= N 0) 0]\n    [(= N 1) 0]\n    [(= N 2) 1]\n    [(= N 3) 2]\n    [(= N 4) 3]\n    [(= N 5) 4]\n    [(= N 6) 5]\n    [(= N 7) 6]\n    [(= N 8) 7]\n    [(= N 9) 8]\n    [(= N 10) 9]\n    [(= N 11) 10]\n    [(= N 12) 11]\n    [(= N 13) 12]\n    [(= N 14) 13]\n    [(= N 15) 14]\n    [(= N 16) 15]\n    [(= N 17) 16]\n    [(= N 18) 17]\n    [(= N 19) 18]\n    [(= N 20) 19]\n    [(= N 21) 20]\n    [(= N 22) 21]\n    [(= N 23) 22]\n    [(= N 24) 23]\n    [(= N 25) 24]\n    [(= N 26) 25]\n    [(= N 27) 26]\n    [(= N 28) 27]\n    [(= N 29) 28]\n    [(= N 30) 29]\n    [(= N 31) 30]\n    [(= N 32) 31]\n    [(= N 33) 32]\n    [(= N 34) 33]\n    [(= N 35) 34]\n    [(= N 36) 35]\n    [(= N 37) 36]\n    [(= N 38) 37]\n    [(= N 39) 38]\n    [(= N 40) 39]\n    [(= N 41) 40]\n    [(= N 42) 41]\n    [(= N 43) 42]\n    [(= N 44) 43]\n    [(= N 45) 44]\n    [(= N 46) 45]\n    [(= N 47) 46]\n    [(= N 48) 47]\n    [(= N 49) 48]\n    [(= N 50) 49]\n    [(= N 51) 50]\n    [(= N 52) 51]\n    [(= N 53) 52]\n    [(= N 54) 53]\n    [(= N 55) 54]\n    [(=",
    "  (define (closest_num_iter N i)\n    (if (and (integer? (/ N i)) (integer? (/ N (+ i 1))))\n        i\n        (closest_num_iter N (+ i 1))))\n  (closest_num_iter N 1))\n",
    "  (if (zero? N)\n      0\n      (if (zero? (remainder N 2))\n          (closest_num (sub1 N))\n          N)))\n",
    "  (cond\n    [(= N 0) 0]\n    [(= N 1) 0]\n    [(= N 2) 1]\n    [(= N 3) 2]\n    [(= N 4) 3]\n    [(= N 5) 4]\n    [(= N 6) 5]\n    [(= N 7) 6]\n    [(= N 8) 7]\n    [(= N 9) 8]\n    [(= N 10) 9]\n    [(= N 11) 10]\n    [(= N 12) 11]\n    [(= N 13) 12]\n    [(= N 14) 13]\n    [(= N 15) 14]\n    [(= N 16) 15]\n    [(= N 17) 16]\n    [(= N 18) 17]\n    [(= N 19) 18]\n    [(= N 20) 19]\n    [(= N 21) 20]\n    [(= N 22) 21]\n    [(= N 23) 22]\n    [(= N 24) 23]\n    [(= N 25) 24]\n    [(= N 26) 25]\n    [(= N 27) 26]\n    [(= N 28) 27]\n    [(= N 29) 28]\n    [(= N 30) 29]\n    [(= N 31) 30]\n    [(= N 32) 31]\n    [(= N 33) 32]\n    [(= N 34) 33]\n    [(= N 35) 34]\n    [(= N 36) 35]\n    [(= N 37) 36]\n    [(= N 38) 37]\n    [(= N 39) 38]\n    [(= N 40) 39]\n    [(= N 41) 40]\n    [(= N 42) 41]\n    [(= N 43) 42]\n    [(= N 44) 43]\n    [(= N 45) 44]\n    [(= N 46) 45]\n    [(= N 47) 46]\n    [(= N 48) 47]\n    [(= N 49) 48]\n    [(= N 50) 49]\n    [(= N 51) 50]\n    [(= N 52) 51]\n    [(= N 53) 52]\n    [(= N 54) 53]\n    [(= N 55) 54]\n    [(=",
    "  (define (closest_num_iter N i)\n    (cond\n      [(= i 0) 0]\n      [(= (modulo N i) 0) i]\n      [else (closest_num_iter N (- i 1))]))\n  (closest_num_iter N (- N 1)))\n",
    "  (if (zero? N)\n      0\n      (if (even? N)\n          (closest_num (- N 1))\n          (closest_num (- N 2)))))\n",
    "  (let loop ([n N])\n    (if (zero? n)\n        0\n        (if (zero? (remainder n 2))\n            (loop (quotient n 2))\n            (loop (sub1 n))))))\n",
    "  (define (closest_num_iter N i)\n    (if (integer? (/ N i))\n        i\n        (closest_num_iter N (+ i 1))))\n  (closest_num_iter N 2))\n",
    "  (define (closest_num_iter N i)\n    (if (and (integer? (/ N i)) (integer? (/ N (+ i 1))))\n        i\n        (closest_num_iter N (+ i 1))))\n  (closest_num_iter N 2))\n",
    "  (define (closest_num_iter N i)\n    (if (not (integer? (/ N i)))\n        (closest_num_iter N (+ i 1))\n        i))\n  (closest_num_iter N 1))\n",
    "  (define (closest_num_iter N i)\n    (if (and (integer? (/ N i)) (integer? (/ N (+ i 1))))\n        i\n        (closest_num_iter N (+ i 1))))\n  (closest_num_iter N 1))\n",
    "  (define (closest_num_iter N i)\n    (if (and (not (zero? (remainder N i)))\n             (zero? (remainder (sub1 N) i)))\n        (sub1 N)\n        (closest_num_iter N (add1 i))))\n  (closest_num_iter N 2))\n",
    "  (cond\n    [(= N 0) 0]\n    [(= N 1) 0]\n    [(= N 2) 1]\n    [(= N 3) 2]\n    [(= N 4) 3]\n    [(= N 5) 4]\n    [(= N 6) 5]\n    [(= N 7) 6]\n    [(= N 8) 7]\n    [(= N 9) 8]\n    [(= N 10) 9]\n    [(= N 11) 10]\n    [(= N 12) 11]\n    [(= N 13) 12]\n    [(= N 14) 13]\n    [(= N 15) 14]\n    [(= N 16) 15]\n    [(= N 17) 16]\n    [(= N 18) 17]\n    [(= N 19) 18]\n    [(= N 20) 19]\n    [(= N 21) 20]\n    [(= N 22) 21]\n    [(= N 23) 22]\n    [(= N 24) 23]\n    [(= N 25) 24]\n    [(= N 26) 25]\n    [(= N 27) 26]\n    [(= N 28) 27]\n    [(= N 29) 28]\n    [(= N 30) 29]\n    [(= N 31) 30]\n    [(= N 32) 31]\n    [(= N 33) 32]\n    [(= N 34) 33]\n    [(= N 35) 34]\n    [(= N 36) 35]\n    [(= N 37) 36]\n    [(= N 38) 37]\n    [(= N 39) 38]\n    [(= N 40) 39]\n    [(= N 41) 40]\n    [(= N 42) 41]\n    [(= N 43) 42]\n    [(= N 44) 43]\n    [(= N 45) 44]\n    [(= N 46) 45]\n    [(= N 47) 46]\n    [(= N 48) 47]\n    [(= N 49) 48]\n    [(= N 50) 49]\n    [(= N 51) 50]\n    [(= N 52) 51]\n    [(= N 53) 52]\n    [(= N 54) 53]\n    [(= N 55) 54]\n    [(=",
    "  (cond\n    [(= N 0) 0]\n    [(= N 1) 0]\n    [(= N 2) 1]\n    [(= N 3) 2]\n    [(= N 4) 3]\n    [(= N 5) 4]\n    [(= N 6) 5]\n    [(= N 7) 6]\n    [(= N 8) 7]\n    [(= N 9) 8]\n    [(= N 10) 9]\n    [(= N 11) 10]\n    [(= N 12) 11]\n    [(= N 13) 12]\n    [(= N 14) 13]\n    [(= N 15) 14]\n    [(= N 16) 15]\n    [(= N 17) 16]\n    [(= N 18) 17]\n    [(= N 19) 18]\n    [(= N 20) 19]\n    [(= N 21) 20]\n    [(= N 22) 21]\n    [(= N 23) 22]\n    [(= N 24) 23]\n    [(= N 25) 24]\n    [(= N 26) 25]\n    [(= N 27) 26]\n    [(= N 28) 27]\n    [(= N 29) 28]\n    [(= N 30) 29]\n    [(= N 31) 30]\n    [(= N 32) 31]\n    [(= N 33) 32]\n    [(= N 34) 33]\n    [(= N 35) 34]\n    [(= N 36) 35]\n    [(= N 37) 36]\n    [(= N 38) 37]\n    [(= N 39) 38]\n    [(= N 40) 39]\n    [(= N 41) 40]\n    [(= N 42) 41]\n    [(= N 43) 42]\n    [(= N 44) 43]\n    [(= N 45) 44]\n    [(= N 46) 45]\n    [(= N 47) 46]\n    [(= N 48) 47]\n    [(= N 49) 48]\n    [(= N 50) 49]\n    [(= N 51) 50]\n    [(= N 52) 51]\n    [(= N 53) 52]\n    [(= N 54) 53]\n    [(= N 55) 54]\n    [(=",
    "  (define (closest_num_iter N n)\n    (if (= N n)\n        N\n        (if (and (integer? (/ N n)) (= (modulo N n) 0))\n            (closest_num_iter N (- n 1))\n            n)))\n  (closest_num_iter N (/ N 2)))\n",
    "  (define (closest_num_iter N i)\n    (cond\n      [(= N i) N]\n      [(= N (+ i 1)) i]\n      [(= N (+ i 2)) i]\n      [(= N (+ i 3)) i]\n      [(= N (+ i 4)) i]\n      [(= N (+ i 5)) i]\n      [(= N (+ i 6)) i]\n      [(= N (+ i 7)) i]\n      [(= N (+ i 8)) i]\n      [(= N (+ i 9)) i]\n      [else (closest_num_iter N (+ i 10))]))\n  (closest_num_iter N 0))\n",
    "  (define (closest_num-iter N i)\n    (cond\n      [(= i 0) 0]\n      [(= (remainder N i) 0) i]\n      [else (closest_num-iter N (- i 1))]))\n  (closest_num-iter N N))\n",
    "  (define (closest_num_iter N i)\n    (if (and (integer? (/ N i)) (integer? (/ N (+ i 1))))\n        i\n        (closest_num_iter N (+ i 1))))\n  (closest_num_iter N 2))\n",
    "  (define (closest_num_iter N i)\n    (if (and (integer? (/ N i)) (integer? (/ N (+ i 1))))\n        i\n        (closest_num_iter N (+ i 1))))\n  (closest_num_iter N 1))\n",
    "  (define (helper N)\n    (if (zero? N)\n        0\n        (if (zero? (remainder N 2))\n            (helper (quotient N 2))\n            (helper (sub1 N)))))\n  (helper N))\n",
    "  (define (closest_num_iter N i)\n    (if (and (integer? (/ N i)) (integer? (/ N (+ i 1))))\n        i\n        (closest_num_iter N (+ i 1))))\n  (closest_num_iter N 1))\n",
    "  (define (closest_num_iter n i)\n    (if (and (not (zero? n)) (not (zero? i)))\n        (if (not (zero? (remainder n i)))\n            (closest_num_iter n (sub1 i))\n            (closest_num_iter (sub1 n) (sub1 i)))\n        (if (zero? i)\n            0\n            i)))\n  (closest_num_iter N (sub1 N)))\n",
    "  (define (closest_num_iter N i)\n    (if (and (integer? (/ N i)) (integer? (/ N (+ i 1))))\n        i\n        (closest_num_iter N (+ i 1))))\n  (closest_num_iter N 1))\n",
    "  (let ([n (integer->char N)])\n    (cond\n      [(char=? n #\\0) #\\0]\n      [(char=? n #\\1) #\\0]\n      [(char=? n #\\2) #\\1]\n      [(char=? n #\\3) #\\2]\n      [(char=? n #\\4) #\\3]\n      [(char=? n #\\5) #\\4]\n      [(char=? n #\\6) #\\5]\n      [(char=? n #\\7) #\\6]\n      [(char=? n #\\8) #\\7]\n      [(char=? n #\\9) #\\8])))\n",
    "  (cond\n    [(= N 0) 0]\n    [(= N 1) 0]\n    [(= N 2) 1]\n    [(= N 3) 2]\n    [(= N 4) 3]\n    [(= N 5) 4]\n    [(= N 6) 5]\n    [(= N 7) 6]\n    [(= N 8) 7]\n    [(= N 9) 8]\n    [(= N 10) 9]\n    [(= N 11) 10]\n    [(= N 12) 11]\n    [(= N 13) 12]\n    [(= N 14) 13]\n    [(= N 15) 14]\n    [(= N 16) 15]\n    [(= N 17) 16]\n    [(= N 18) 17]\n    [(= N 19) 18]\n    [(= N 20) 19]\n    [(= N 21) 20]\n    [(= N 22) 21]\n    [(= N 23) 22]\n    [(= N 24) 23]\n    [(= N 25) 24]\n    [(= N 26) 25]\n    [(= N 27) 26]\n    [(= N 28) 27]\n    [(= N 29) 28]\n    [(= N 30) 29]\n    [(= N 31) 30]\n    [(= N 32) 31]\n    [(= N 33) 32]\n    [(= N 34) 33]\n    [(= N 35) 34]\n    [(= N 36) 35]\n    [(= N 37) 36]\n    [(= N 38) 37]\n    [(= N 39) 38]\n    [(= N 40) 39]\n    [(= N 41) 40]\n    [(= N 42) 41]\n    [(= N 43) 42]\n    [(= N 44) 43]\n    [(= N 45) 44]\n    [(= N 46) 45]\n    [(= N 47) 46]\n    [(= N 48) 47]\n    [(= N 49) 48]\n    [(= N 50) 49]\n    [(= N 51) 50]\n    [(= N 52) 51]\n    [(= N 53) 52]\n    [(= N 54) 53]\n    [(= N 55) 54]\n    [(=",
    "  (let loop ([n N])\n    (if (= n 0)\n        0\n        (if (integer? (/ n 2))\n            (/ n 2)\n            (loop (- n 1))))))\n",
    "  (cond\n    [(= N 0) 0]\n    [(= N 1) 0]\n    [(= N 2) 1]\n    [(= N 3) 2]\n    [(= N 4) 3]\n    [(= N 5) 4]\n    [(= N 6) 5]\n    [(= N 7) 6]\n    [(= N 8) 7]\n    [(= N 9) 8]\n    [(= N 10) 9]\n    [(= N 11) 10]\n    [(= N 12) 11]\n    [(= N 13) 12]\n    [(= N 14) 13]\n    [(= N 15) 14]\n    [(= N 16) 15]\n    [(= N 17) 16]\n    [(= N 18) 17]\n    [(= N 19) 18]\n    [(= N 20) 19]\n    [(= N 21) 20]\n    [(= N 22) 21]\n    [(= N 23) 22]\n    [(= N 24) 23]\n    [(= N 25) 24]\n    [(= N 26) 25]\n    [(= N 27) 26]\n    [(= N 28) 27]\n    [(= N 29) 28]\n    [(= N 30) 29]\n    [(= N 31) 30]\n    [(= N 32) 31]\n    [(= N 33) 32]\n    [(= N 34) 33]\n    [(= N 35) 34]\n    [(= N 36) 35]\n    [(= N 37) 36]\n    [(= N 38) 37]\n    [(= N 39) 38]\n    [(= N 40) 39]\n    [(= N 41) 40]\n    [(= N 42) 41]\n    [(= N 43) 42]\n    [(= N 44) 43]\n    [(= N 45) 44]\n    [(= N 46) 45]\n    [(= N 47) 46]\n    [(= N 48) 47]\n    [(= N 49) 48]\n    [(= N 50) 49]\n    [(= N 51) 50]\n    [(= N 52) 51]\n    [(= N 53) 52]\n    [(= N 54) 53]\n    [(= N 55) 54]\n    [(=",
    "  (define (closest_num_iter N i)\n    (if (and (not (zero? (remainder N i)))\n             (zero? (remainder N (+ i 1))))\n        i\n        (closest_num_iter N (+ i 1))))\n  (closest_num_iter N 1))\n",
    "  (cond\n    [(= N 1) 0]\n    [(= N 0) 0]\n    [else (closest_num (- N 1))]))\n",
    "  (let loop ([n N] [i 1])\n    (if (and (not (zero? n)) (not (zero? (- n i))))\n        (loop (- n i) (+ i 1))\n        (- n i))))\n",
    "  (let loop ([n N])\n    (if (zero? n)\n        0\n        (if (zero? (remainder n 2))\n            (loop (quotient n 2))\n            (sub1 n)))))\n",
    "  (if (zero? N)\n      0\n      (if (even? N)\n          (closest_num (sub1 N))\n          (add1 (closest_num (sub1 N))))))\n",
    "  (define (closest_num_iter N i)\n    (if (not (integer? (/ N i)))\n        (closest_num_iter N (+ i 1))\n        i))\n  (closest_num_iter N 2))\n",
    "  (cond\n    [(= N 0) 0]\n    [(= N 1) 0]\n    [(= N 2) 1]\n    [(= N 3) 2]\n    [(= N 4) 3]\n    [(= N 5) 4]\n    [(= N 6) 5]\n    [(= N 7) 6]\n    [(= N 8) 7]\n    [(= N 9) 8]\n    [(= N 10) 9]\n    [(= N 11) 10]\n    [(= N 12) 11]\n    [(= N 13) 12]\n    [(= N 14) 13]\n    [(= N 15) 14]\n    [(= N 16) 15]\n    [(= N 17) 16]\n    [(= N 18) 17]\n    [(= N 19) 18]\n    [(= N 20) 19]\n    [(= N 21) 20]\n    [(= N 22) 21]\n    [(= N 23) 22]\n    [(= N 24) 23]\n    [(= N 25) 24]\n    [(= N 26) 25]\n    [(= N 27) 26]\n    [(= N 28) 27]\n    [(= N 29) 28]\n    [(= N 30) 29]\n    [(= N 31) 30]\n    [(= N 32) 31]\n    [(= N 33) 32]\n    [(= N 34) 33]\n    [(= N 35) 34]\n    [(= N 36) 35]\n    [(= N 37) 36]\n    [(= N 38) 37]\n    [(= N 39) 38]\n    [(= N 40) 39]\n    [(= N 41) 40]\n    [(= N 42) 41]\n    [(= N 43) 42]\n    [(= N 44) 43]\n    [(= N 45) 44]\n    [(= N 46) 45]\n    [(= N 47) 46]\n    [(= N 48) 47]\n    [(= N 49) 48]\n    [(= N 50) 49]\n    [(= N 51) 50]\n    [(= N 52) 51]\n    [(= N 53) 52]\n    [(= N 54) 53]\n    [(= N 55) 54]\n    [(=",
    "  (define (closest_num_iter N i)\n    (cond\n      [(= i 0) 0]\n      [(= (modulo N i) 0) i]\n      [else (closest_num_iter N (- i 1))]))\n  (closest_num_iter N N))\n",
    "  (define (closest_num_iter N i)\n    (if (and (not (= N 0))\n             (not (= N 1))\n             (not (= N 2)))\n        (if (= (remainder N i) 0)\n            (closest_num_iter N (+ i 1))\n          i)\n        0))\n  (closest_num_iter N 2))\n",
    "  (define (closest_num_iter N i)\n    (cond ((= N i) N)\n          ((&lt; N i) (- i 1))\n          (else (closest_num_iter N (+ i 1)))))\n  (closest_num_iter N 1))\n",
    "  (cond\n    [(= N 0) 0]\n    [(= N 1) 0]\n    [else (closest_num (- N 1))]))\n",
    "  (define (closest_num_iter N i)\n    (if (and (not (= N 0)) (not (= N 1)))\n        (if (and (not (= (remainder N i) 0))\n                 (not (= (remainder (+ N 1) i) 0)))\n            (closest_num_iter N (+ i 1))\n            (- N (remainder N i)))\n        0))\n  (closest_num_iter N 2))\n",
    "  (let loop ([n N] [i 0])\n    (if (= n i)\n        (error \"No smaller number\")\n        (if (integer? (/ n i))\n            i\n            (loop n (+ i 1))))))\n",
    "  (cond\n    [(= N 1) 0]\n    [(= N 0) 0]\n    [(= N 2) 1]\n    [(= N 3) 2]\n    [(= N 4) 3]\n    [(= N 5) 4]\n    [(= N 6) 5]\n    [(= N 7) 6]\n    [(= N 8) 7]\n    [(= N 9) 8]\n    [(= N 10) 9]\n    [(= N 11) 10]\n    [(= N 12) 11]\n    [(= N 13) 12]\n    [(= N 14) 13]\n    [(= N 15) 14]\n    [(= N 16) 15]\n    [(= N 17) 16]\n    [(= N 18) 17]\n    [(= N 19) 18]\n    [(= N 20) 19]\n    [(= N 21) 20]\n    [(= N 22) 21]\n    [(= N 23) 22]\n    [(= N 24) 23]\n    [(= N 25) 24]\n    [(= N 26) 25]\n    [(= N 27) 26]\n    [(= N 28) 27]\n    [(= N 29) 28]\n    [(= N 30) 29]\n    [(= N 31) 30]\n    [(= N 32) 31]\n    [(= N 33) 32]\n    [(= N 34) 33]\n    [(= N 35) 34]\n    [(= N 36) 35]\n    [(= N 37) 36]\n    [(= N 38) 37]\n    [(= N 39) 38]\n    [(= N 40) 39]\n    [(= N 41) 40]\n    [(= N 42) 41]\n    [(= N 43) 42]\n    [(= N 44) 43]\n    [(= N 45) 44]\n    [(= N 46) 45]\n    [(= N 47) 46]\n    [(= N 48) 47]\n    [(= N 49) 48]\n    [(= N 50) 49]\n    [(= N 51) 50]\n    [(= N 52) 51]\n    [(= N 53) 52]\n    [(= N 54) 53]\n    [(= N 55) 54]\n    [(=",
    "  (define (iter N i)\n    (if (and (not (= N i))\n             (not (= N (+ i 1))))\n        (iter N (+ i 1))\n        i))\n  (iter N 0))\n",
    "  (let loop ([n N])\n    (if (zero? n)\n        0\n        (if (odd? n)\n            (loop (sub1 n))\n            (sub1 n)))))\n",
    "  (let loop ([i N])\n    (if (zero? i)\n        N\n        (if (integer? (/ N i))\n            i\n            (loop (- i 1))))))\n",
    "  (let loop ([i N])\n    (if (and (positive? i) (not (number? (sqrt i))))\n        (loop (- i 1))\n        i)))\n",
    "  (define (closest_num_iter N i)\n    (if (and (integer? (/ N i))\n             (integer? (/ N (+ i 1))))\n        i\n        (closest_num_iter N (+ i 1))))\n  (closest_num_iter N 1))\n",
    "  (cond [(= N 0) 0]\n        [(= N 1) 0]\n        [(= N 2) 1]\n        [(= N 3) 1]\n        [(= N 4) 2]\n        [(= N 5) 2]\n        [(= N 6) 3]\n        [(= N 7) 3]\n        [(= N 8) 4]\n        [(= N 9) 4]\n        [(= N 10) 5]\n        [(= N 11) 5]\n        [(= N 12) 6]\n        [(= N 13) 6]\n        [(= N 14) 7]\n        [(= N 15) 7]\n        [(= N 16) 8]\n        [(= N 17) 8]\n        [(= N 18) 9]\n        [(= N 19) 9]\n        [(= N 20) 10]\n        [(= N 21) 10]\n        [(= N 22) 11]\n        [(= N 23) 11]\n        [(= N 24) 12]\n        [(= N 25) 12]\n        [(= N 26) 13]\n        [(= N 27) 13]\n        [(= N 28) 14]\n        [(= N 29) 14]\n        [(= N 30) 15]\n        [(= N 31) 15]\n        [(= N 32) 16]\n        [(= N 33) 16]\n        [(= N 34) 17]\n        [(= N 35) 17]\n        [(= N 36) 18]\n        [(= N 37) 18]\n        [(= N 38) 19]\n        [(= N 39) 19]\n        [(= N 40) 20]\n        [(= N 41) 20]\n        [(= N 42) 21]\n        [(= N 43) 21]\n        [(= N 44) 22]\n        [(= N 45) 22]\n        [(= N 46) 23]\n        [(= N 47) 23]\n        [(= N 48) 24]\n        [(= N 49) 24]\n        [(= N 50) 25]\n        [(= N 51) 25]\n        [(= N 52) 26]\n        [(= N 53) 26]\n        [(= N 54) 27]\n        [(= N 55) 27]\n        [(= N 56",
    "  (if (zero? N)\n      0\n      (if (zero? (remainder N 2))\n          (closest_num (- N 1))\n          N)))\n",
    "  (define (closest_num_iter N i)\n    (if (= N i)\n        (- N 1)\n        (if (prime? i)\n            (closest_num_iter N (+ i 1))\n            i)))\n  (closest_num_iter N 2))\n",
    "  (define (closest_num_iter N i)\n    (if (and (integer? (/ N i)) (integer? (/ N (+ i 1))))\n        i\n        (closest_num_iter N (+ i 1))))\n  (closest_num_iter N 1))\n",
    "  (cond\n    [(= N 0) 0]\n    [(= N 1) 0]\n    [(= N 2) 1]\n    [(= N 3) 2]\n    [(= N 4) 3]\n    [(= N 5) 4]\n    [(= N 6) 5]\n    [(= N 7) 6]\n    [(= N 8) 7]\n    [(= N 9) 8]\n    [(= N 10) 9]\n    [(= N 11) 10]\n    [(= N 12) 11]\n    [(= N 13) 12]\n    [(= N 14) 13]\n    [(= N 15) 14]\n    [(= N 16) 15]\n    [(= N 17) 16]\n    [(= N 18) 17]\n    [(= N 19) 18]\n    [(= N 20) 19]\n    [(= N 21) 20]\n    [(= N 22) 21]\n    [(= N 23) 22]\n    [(= N 24) 23]\n    [(= N 25) 24]\n    [(= N 26) 25]\n    [(= N 27) 26]\n    [(= N 28) 27]\n    [(= N 29) 28]\n    [(= N 30) 29]\n    [(= N 31) 30]\n    [(= N 32) 31]\n    [(= N 33) 32]\n    [(= N 34) 33]\n    [(= N 35) 34]\n    [(= N 36) 35]\n    [(= N 37) 36]\n    [(= N 38) 37]\n    [(= N 39) 38]\n    [(= N 40) 39]\n    [(= N 41) 40]\n    [(= N 42) 41]\n    [(= N 43) 42]\n    [(= N 44) 43]\n    [(= N 45) 44]\n    [(= N 46) 45]\n    [(= N 47) 46]\n    [(= N 48) 47]\n    [(= N 49) 48]\n    [(= N 50) 49]\n    [(= N 51) 50]\n    [(= N 52) 51]\n    [(= N 53) 52]\n    [(= N 54) 53]\n    [(= N 55) 54]\n    [(=",
    "  (define (closest_num_iter N i)\n    (cond\n      [(= N i) N]\n      [(= N (+ i 1)) i]\n      [(< N i) (closest_num_iter N (+ i 1))]\n      [else (closest_num_iter N (+ i 1))]))\n  (closest_num_iter N 0))\n",
    "  (cond [(= N 0) 0]\n        [(= N 1) 0]\n        [else (closest_num (- N 1))]))\n",
    "  (if (zero? N)\n      0\n      (if (zero? (remainder N 2))\n          (closest_num (- N 1))\n          (- N 1))))\n",
    "  (define (closest_num_iter N i)\n    (cond ((= (remainder N i) 0) i)\n          ((&lt; i N) (closest_num_iter N (+ i 1)))\n          (else (closest_num_iter N (- i 1)))))\n  (closest_num_iter N 1))\n",
    "  (define (closest_num_iter N i)\n    (if (and (integer? (/ N i)) (integer? (/ N (+ i 1))))\n        i\n        (closest_num_iter N (+ i 1))))\n  (closest_num_iter N 2))\n",
    "  (define (closest_num_iter N i)\n    (if (and (not (zero? (remainder N i)))\n             (not (zero? (remainder (+ N 1) i))))\n        (closest_num_iter N (+ i 1))\n        i))\n  (closest_num_iter N 2))\n",
    "  (let loop ([i N])\n    (if (and (< i N) (not (zero? (remainder N i))))\n        (loop (- i 1))\n        i)))\n",
    "  (if (= N 0)\n      0\n      (if (= N 1)\n          0\n          (if (= N 2)\n              1\n              (if (= N 3)\n                  2\n                  (if (= N 4)\n                      3\n                      (if (= N 5)\n                          4\n                          (if (= N 6)\n                              5\n                              (if (= N 7)\n                                  6\n                                  (if (= N 8)\n                                      7\n                                      (if (= N 9)\n                                          8\n                                          (if (= N 10)\n                                              9\n                                              (if (= N 11)\n                                                  10\n                                                  (if (= N 12)\n                                                      11\n                                                      (if (= N 13)\n                                                          12\n                                                          (if (= N 14)\n                                                              13\n                                                              (if (= N 15)\n                                                                  14\n                                                                  (if (= N 16)\n                                                                      15\n                                                                      (if (= N 17)\n                                                                          16\n                                                                          (if (= N 18)\n                                                                              17\n                                                                              (if (= N 19)\n                                                                                  18\n                                                                                  (if (= N 20)\n                                                                                      19\n                                                                                      (if (= N 21)\n                                                                                          20\n                                                                                          (if (= N 22)\n                                                                                              21\n                                                                                              (if (= N 23)\n                                                                                                  22\n                                                                                                  (if (= N 24)\n                                                                                                      23\n                                                                                                      (if (= N 25)\n                                                                                                          24\n                                                                                                          (if (= N 26)\n                                                                                                              25\n                                                                                                              (if (= N 27)\n                                                                                                                  26\n                                                                                                                  (if (= N 28)\n                                                                                                                      27\n                                                                                                                      (if (= N 29)\n                                                                                                                          28\n                                                                                                ",
    "  (define (closest_num_iter N i)\n    (if (and (not (zero? (remainder N i)))\n             (not (zero? (remainder (sub1 N) i))))\n        (closest_num_iter N (add1 i))\n        (sub1 N)))\n  (closest_num_iter N 2))\n",
    "  (define (closest_num_iter N i)\n    (if (and (integer? (/ N i)) (integer? (/ N (+ i 1))))\n        i\n        (closest_num_iter N (+ i 1))))\n  (closest_num_iter N 1))\n"
  ]
}
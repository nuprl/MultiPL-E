{
  "name": "mbpp_274_even_binomial_Coeff_Sum",
  "language": "rkt",
  "prompt": "#lang racket\n\n;; Write a rktthon function that takes in a positive integer n and finds the sum of even index binomial coefficients.\n(define (even_binomial_Coeff_Sum n)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_274_even_binomial_Coeff_Sum.py",
  "prompt_terminology": "reworded",
  "tests": "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate even_binomial_Coeff_Sum))\n    (check-equal? (candidate 4) 8)\n    (check-equal? (candidate 6) 32)\n    (check-equal? (candidate 2) 2)\n))\n\n(test-humaneval)",
  "stop_tokens": [
    "\n(define ",
    "\n#|",
    "\n;",
    "\n("
  ],
  "completions": [
    "  (define (helper n k)\n    (cond\n      [(= k 0) 1]\n      [(= k n) 1]\n      [else (+ (helper (- n 1) (- k 1)) (helper (- n 1) k))]))\n  (define (sum n)\n    (cond\n      [(= n 0) 0]\n      [(= n 1) 1]\n      [else (+ (helper n 0) (sum (- n 2)))]))\n  (sum n))\n",
    "  (define (binomial_Coeff n k)\n    (if (= k 0)\n        1\n        (* (/ n k) (binomial_Coeff (- n 1) (- k 1)))))\n  (define (even_binomial_Coeff_Sum_iter n k sum)\n    (if (= k n)\n        sum\n        (even_binomial_Coeff_Sum_iter n (+ k 2) (+ sum (binomial_Coeff n k)))))\n  (even_binomial_Coeff_Sum_iter n 0 0))\n",
    "  (define (helper n k)\n    (if (= n k)\n        1\n        (+ (helper (- n 1) (- k 1))\n           (helper (- n 1) k))))\n  (define (sum n)\n    (if (= n 0)\n        0\n        (+ (helper n 0) (sum (- n 2)))))\n  (sum n))\n",
    "  (define (even_binomial_Coeff_Sum_iter n i sum)\n    (cond ((= i n) sum)\n          ((even? i) (even_binomial_Coeff_Sum_iter n (+ i 1) (+ sum (binomial n i))))\n          (else (even_binomial_Coeff_Sum_iter n (+ i 1) sum))))\n  (even_binomial_Coeff_Sum_iter n 0 0))\n",
    "  (define (binomial_Coeff n k)\n    (cond ((= k 0) 1)\n          ((= n k) 1)\n          (else (+ (binomial_Coeff (- n 1) k)\n                   (binomial_Coeff (- n 1) (- k 1))))))\n  (define (even_index_sum n)\n    (cond ((= n 0) 0)\n          ((= n 1) 1)\n          ((= (remainder n 2) 0) (+ (binomial_Coeff n (/ n 2))\n                                    (even_index_sum (- n 1))))\n          (else (even_index_sum (- n 1)))))\n  (even_index_sum n))\n",
    "  (define (binomial_Coeff n k)\n    (cond ((= k 0) 1)\n          ((= n k) 1)\n          (else (+ (binomial_Coeff (- n 1) (- k 1))\n                  (binomial_Coeff (- n 1) k)))))\n  (define (even_binomial_Coeff_Sum_iter n k sum)\n    (cond ((= k n) sum)\n          ((even? k) (even_binomial_Coeff_Sum_iter n (+ k 1) (+ sum (binomial_Coeff n k))))\n          (else (even_binomial_Coeff_Sum_iter n (+ k 1) sum))))\n  (even_binomial_Coeff_Sum_iter n 0 0))\n",
    "  (define (even_binomial_Coeff_Sum_iter n i sum)\n    (cond\n      [(= i n) sum]\n      [(even? i) (even_binomial_Coeff_Sum_iter n (+ i 1) (+ sum (binomial n i)))]\n      [else (even_binomial_Coeff_Sum_iter n (+ i 1) sum)]))\n  (even_binomial_Coeff_Sum_iter n 0 0))\n",
    "  (define (binomial_Coeff n k)\n    (if (= k 0)\n        1\n        (* n (binomial_Coeff (- n 1) (- k 1)))))\n  (define (even_binomial_Coeff_Sum_iter n k sum)\n    (if (= k n)\n        sum\n        (even_binomial_Coeff_Sum_iter n (+ k 2) (+ sum (binomial_Coeff n k)))))\n  (even_binomial_Coeff_Sum_iter n 0 0))\n",
    "  (define (helper n k)\n    (cond\n      [(= k 0) 1]\n      [(= k n) 1]\n      [else (+ (helper (- n 1) (- k 1)) (helper (- n 1) k))]))\n  (define (sum n)\n    (cond\n      [(= n 0) 0]\n      [(even? n) (+ (helper n (/ n 2)) (sum (- n 1)))]\n      [else (sum (- n 1))]))\n  (sum n))\n",
    "  (define (even_binomial_Coeff_Sum_iter n i sum)\n    (cond ((= i n) sum)\n          ((= (remainder i 2) 0) (even_binomial_Coeff_Sum_iter n (+ i 1) (+ sum (binomial n i))))\n          (else (even_binomial_Coeff_Sum_iter n (+ i 1) sum))))\n  (even_binomial_Coeff_Sum_iter n 0 0))\n",
    "  (cond ((= n 0) 0)\n        ((= n 1) 1)\n        (else (+ (even_binomial_Coeff_Sum (- n 1))\n                 (even_binomial_Coeff_Sum (- n 2))))))\n",
    "  (define (binomial_Coeff n k)\n    (if (= k 0)\n        1\n        (* (/ n k) (binomial_Coeff (- n 1) (- k 1)))))\n  (define (even_binomial_Coeff_Sum_iter n k sum)\n    (if (= k n)\n        sum\n        (even_binomial_Coeff_Sum_iter n (+ k 2) (+ sum (binomial_Coeff n k)))))\n  (even_binomial_Coeff_Sum_iter n 0 0))\n",
    "  (define (even_binomial_Coeff_Sum_helper n k)\n    (if (= k n)\n        0\n        (+ (binomial n k) (even_binomial_Coeff_Sum_helper n (+ k 2)))))\n  (even_binomial_Coeff_Sum_helper n 0))\n",
    "  (define (binomial_Coeff n k)\n    (if (= k 0)\n        1\n        (* (/ n k) (binomial_Coeff (- n 1) (- k 1)))))\n  (define (even_binomial_Coeff_Sum_iter n k sum)\n    (if (= k n)\n        sum\n        (even_binomial_Coeff_Sum_iter n (+ k 2) (+ sum (binomial_Coeff n k)))))\n  (even_binomial_Coeff_Sum_iter n 0 0))\n",
    "  (define (binomial_Coeff n k)\n    (if (= k 0)\n        1\n        (* (/ n k) (binomial_Coeff (- n 1) (- k 1)))))\n  (define (sum_even_binomial_Coeff n)\n    (if (= n 0)\n        0\n        (+ (binomial_Coeff n n) (sum_even_binomial_Coeff (- n 2)))))\n  (sum_even_binomial_Coeff n))\n",
    "  (define (binomial_Coeff n k)\n    (if (= k 0)\n        1\n        (* (/ n k) (binomial_Coeff (- n 1) (- k 1)))))\n  (define (even_binomial_Coeff_Sum_iter n k sum)\n    (if (= k n)\n        sum\n        (even_binomial_Coeff_Sum_iter n (+ k 2) (+ sum (binomial_Coeff n k)))))\n  (even_binomial_Coeff_Sum_iter n 0 0))\n",
    "  (define (binomial_Coeff n k)\n    (if (= k 0)\n        1\n        (* (/ n k) (binomial_Coeff (- n 1) (- k 1)))))\n  (define (even_binomial_Coeff_Sum_iter n k sum)\n    (if (= k n)\n        sum\n        (even_binomial_Coeff_Sum_iter n (+ k 2) (+ sum (binomial_Coeff n k)))))\n  (even_binomial_Coeff_Sum_iter n 0 0))\n",
    "  (define (helper n k)\n    (cond ((= k 0) 1)\n          ((= k n) 1)\n          (else (+ (helper (- n 1) (- k 1))\n                   (helper (- n 1) k)))))\n  (define (helper2 n)\n    (cond ((= n 0) 0)\n          ((= n 1) 1)\n          ((even? n) (+ (helper n n) (helper2 (- n 2))))\n          (else (helper2 (- n 1)))))\n  (helper2 n))\n",
    "  (define (even_binomial_Coeff_Sum_iter n i sum)\n    (cond ((= i n) sum)\n          ((= (remainder i 2) 0) (even_binomial_Coeff_Sum_iter n (+ i 1) (+ sum (binomial n i))))\n          (else (even_binomial_Coeff_Sum_iter n (+ i 1) sum))))\n  (even_binomial_Coeff_Sum_iter n 0 0))\n",
    "  (define (even_binomial_Coeff_Sum_iter n i sum)\n    (if (= i n)\n        sum\n        (even_binomial_Coeff_Sum_iter n (+ i 2) (+ sum (binomial_Coeff n i)))))\n  (even_binomial_Coeff_Sum_iter n 0 0))\n"
  ]
}
{
  "name": "mbpp_752_jacobsthal_num",
  "language": "rkt",
  "prompt": "#lang racket\n\n;; Write a function to find the nth jacobsthal number. https://www.geeksforgeeks.org/jacobsthal-and-jacobsthal-lucas-numbers/ 0, 1, 1, 3, 5, 11, 21, 43, 85, 171, 341, 683, 1365, 2731, ...\n(define (jacobsthal_num n)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_752_jacobsthal_num.py",
  "prompt_terminology": "reworded",
  "tests": "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate jacobsthal_num))\n    (check-equal? (candidate 5) 11)\n    (check-equal? (candidate 2) 1)\n    (check-equal? (candidate 4) 5)\n    (check-equal? (candidate 13) 2731)\n))\n\n(test-humaneval)",
  "stop_tokens": [
    "\n(define ",
    "\n#|",
    "\n;",
    "\n("
  ],
  "completions": [
    "  (cond\n    [(= n 0) 0]\n    [(= n 1) 1]\n    [else (+ (jacobsthal_num (- n 1)) (* 2 (jacobsthal_num (- n 2))))]))\n",
    "  (cond\n    [(= n 0) 0]\n    [(= n 1) 1]\n    [else (+ (jacobsthal_num (- n 1)) (* 2 (jacobsthal_num (- n 2))))]))\n",
    "  (cond\n    [(= n 0) 0]\n    [(= n 1) 1]\n    [else (+ (jacobsthal_num (- n 1)) (* 2 (jacobsthal_num (- n 2))))]))\n",
    "  (cond\n    [(= n 0) 0]\n    [(= n 1) 1]\n    [else (+ (jacobsthal_num (- n 1)) (* 2 (jacobsthal_num (- n 2))))]))\n",
    "  (cond [(= n 0) 0]\n        [(= n 1) 1]\n        [else (+ (jacobsthal_num (- n 1)) (* 2 (jacobsthal_num (- n 2))))]))\n",
    "  (cond\n    [(= n 0) 0]\n    [(= n 1) 1]\n    [else (+ (jacobsthal_num (- n 1)) (* 2 (jacobsthal_num (- n 2))))]))\n",
    "  (cond\n    [(= n 0) 0]\n    [(= n 1) 1]\n    [else (+ (jacobsthal_num (- n 1)) (* 2 (jacobsthal_num (- n 2))))]))\n",
    "  (cond\n    [(= n 0) 0]\n    [(= n 1) 1]\n    [else (+ (jacobsthal_num (- n 1)) (* 2 (jacobsthal_num (- n 2))))]))\n",
    "  (cond\n    [(= n 0) 0]\n    [(= n 1) 1]\n    [else (+ (jacobsthal_num (- n 1)) (* 2 (jacobsthal_num (- n 2))))]))\n",
    "  (cond\n    [(= n 0) 0]\n    [(= n 1) 1]\n    [else (+ (jacobsthal_num (- n 1)) (* 2 (jacobsthal_num (- n 2))))]))\n",
    "  (cond\n    [(= n 0) 0]\n    [(= n 1) 1]\n    [else (+ (jacobsthal_num (- n 1)) (* 2 (jacobsthal_num (- n 2))))]))\n",
    "  (cond\n    [(= n 0) 0]\n    [(= n 1) 1]\n    [else (+ (jacobsthal_num (- n 1)) (* 2 (jacobsthal_num (- n 2))))]))\n",
    "  (cond\n    [(= n 0) 0]\n    [(= n 1) 1]\n    [else (+ (jacobsthal_num (- n 1)) (* 2 (jacobsthal_num (- n 2))))]))\n",
    "  (cond\n    [(= n 0) 0]\n    [(= n 1) 1]\n    [else (+ (jacobsthal_num (- n 1)) (* 2 (jacobsthal_num (- n 2))))]))\n",
    "  (cond\n    [(= n 0) 0]\n    [(= n 1) 1]\n    [else (+ (jacobsthal_num (- n 1)) (* 2 (jacobsthal_num (- n 2))))]))\n",
    "  (cond\n    [(= n 0) 0]\n    [(= n 1) 1]\n    [else (+ (jacobsthal_num (- n 1)) (* 2 (jacobsthal_num (- n 2))))]))\n",
    "  (cond\n    [(= n 0) 0]\n    [(= n 1) 1]\n    [else (+ (jacobsthal_num (- n 1)) (* 2 (jacobsthal_num (- n 2))))]))\n",
    "  (cond\n    [(= n 0) 0]\n    [(= n 1) 1]\n    [else (+ (jacobsthal_num (- n 1)) (* 2 (jacobsthal_num (- n 2))))]))\n",
    "  (cond\n    [(= n 0) 0]\n    [(= n 1) 1]\n    [else (+ (jacobsthal_num (- n 1)) (* 2 (jacobsthal_num (- n 2))))]))\n",
    "  (cond\n    [(= n 0) 0]\n    [(= n 1) 1]\n    [else (+ (jacobsthal_num (- n 1)) (* 2 (jacobsthal_num (- n 2))))]))\n"
  ]
}
{
  "name": "mbpp_616_tuple_modulo",
  "language": "rkt",
  "prompt": "#lang racket\n\n;; Write a function which takes two lists of the same length and performs the element wise modulo.\n(define (tuple_modulo test_tup1 test_tup2)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_616_tuple_modulo.py",
  "prompt_terminology": "reworded",
  "tests": "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate tuple_modulo))\n    (check-equal? (candidate (list 10 4 5 6) (list 5 6 7 5)) (list 0 4 5 1))\n    (check-equal? (candidate (list 11 5 6 7) (list 6 7 8 6)) (list 5 5 6 1))\n    (check-equal? (candidate (list 12 6 7 8) (list 7 8 9 7)) (list 5 6 7 1))\n))\n\n(test-humaneval)",
  "stop_tokens": [
    "\n(define ",
    "\n#|",
    "\n;",
    "\n("
  ],
  "completions": [
    "  (if (null? test_tup1)\n      '()\n      (cons (modulo (car test_tup1) (car test_tup2)) (tuple_modulo (cdr test_tup1) (cdr test_tup2)))))\n",
    "  (if (null? test_tup1)\n      '()\n      (cons (modulo (car test_tup1) (car test_tup2)) (tuple_modulo (cdr test_tup1) (cdr test_tup2)))))\n",
    "  (if (null? test_tup1)\n      '()\n      (cons (modulo (car test_tup1) (car test_tup2))\n            (tuple_modulo (cdr test_tup1) (cdr test_tup2)))))\n",
    "  (if (and (list? test_tup1) (list? test_tup2))\n      (if (and (not (null? test_tup1)) (not (null? test_tup2)))\n          (cons (modulo (car test_tup1) (car test_tup2))\n                (tuple_modulo (cdr test_tup1) (cdr test_tup2)))\n          '())\n      '()))\n",
    "  (if (null? test_tup1)\n      '()\n      (cons (modulo (car test_tup1) (car test_tup2))\n            (tuple_modulo (cdr test_tup1) (cdr test_tup2)))))\n",
    "  (map (lambda (x y)\n         (modulo x y))\n       test_tup1 test_tup2))\n",
    "  (map (lambda (x y) (modulo x y)) test_tup1 test_tup2))\n",
    "  (if (null? test_tup1)\n      '()\n      (cons (modulo (car test_tup1) (car test_tup2))\n            (tuple_modulo (cdr test_tup1) (cdr test_tup2)))))\n",
    "  (if (null? test_tup1)\n      '()\n      (cons (modulo (car test_tup1) (car test_tup2)) (tuple_modulo (cdr test_tup1) (cdr test_tup2)))))\n",
    "  (if (null? test_tup1)\n      '()\n      (cons (modulo (car test_tup1) (car test_tup2))\n            (tuple_modulo (cdr test_tup1) (cdr test_tup2)))))\n",
    "  (if (null? test_tup1)\n      '()\n      (cons (modulo (car test_tup1) (car test_tup2)) (tuple_modulo (cdr test_tup1) (cdr test_tup2)))))\n",
    "  (if (null? test_tup1)\n      '()\n      (cons (modulo (car test_tup1) (car test_tup2))\n            (tuple_modulo (cdr test_tup1) (cdr test_tup2)))))\n",
    "  (if (null? test_tup1)\n      '()\n      (cons (modulo (car test_tup1) (car test_tup2))\n            (tuple_modulo (cdr test_tup1) (cdr test_tup2)))))\n",
    "  (if (null? test_tup1)\n      '()\n      (cons (modulo (car test_tup1) (car test_tup2))\n            (tuple_modulo (cdr test_tup1) (cdr test_tup2)))))\n",
    "  (if (null? test_tup1)\n      '()\n      (cons (modulo (car test_tup1) (car test_tup2)) (tuple_modulo (cdr test_tup1) (cdr test_tup2)))))\n",
    "  (if (null? test_tup1)\n      '()\n      (cons (modulo (car test_tup1) (car test_tup2))\n            (tuple_modulo (cdr test_tup1) (cdr test_tup2)))))\n",
    "  (if (or (null? test_tup1) (null? test_tup2))\n      '()\n      (cons (modulo (car test_tup1) (car test_tup2))\n            (tuple_modulo (cdr test_tup1) (cdr test_tup2)))))\n",
    "  (if (null? test_tup1)\n      '()\n      (cons (modulo (car test_tup1) (car test_tup2))\n            (tuple_modulo (cdr test_tup1) (cdr test_tup2)))))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [else (cons (modulo (first test_tup1) (first test_tup2)) (tuple_modulo (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [else (cons (modulo (first test_tup1) (first test_tup2)) (tuple_modulo (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [else (cons (modulo (first test_tup1) (first test_tup2))\n                (tuple_modulo (rest test_tup1) (rest test_tup2)))]))\n",
    "  (if (null? test_tup1)\n      '()\n      (cons (modulo (car test_tup1) (car test_tup2))\n            (tuple_modulo (cdr test_tup1) (cdr test_tup2)))))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [else (cons (modulo (car test_tup1) (car test_tup2)) (tuple_modulo (cdr test_tup1) (cdr test_tup2)))]))\n",
    "  (if (null? test_tup1)\n      '()\n      (cons (modulo (car test_tup1) (car test_tup2)) (tuple_modulo (cdr test_tup1) (cdr test_tup2)))))\n",
    "  (if (null? test_tup1)\n      '()\n      (cons (modulo (car test_tup1) (car test_tup2))\n            (tuple_modulo (cdr test_tup1) (cdr test_tup2)))))\n",
    "  (if (null? test_tup1)\n      '()\n      (cons (modulo (car test_tup1) (car test_tup2))\n            (tuple_modulo (cdr test_tup1) (cdr test_tup2)))))\n",
    "  (if (null? test_tup1)\n      '()\n      (cons (modulo (car test_tup1) (car test_tup2))\n            (tuple_modulo (cdr test_tup1) (cdr test_tup2)))))\n",
    "  (if (null? test_tup1)\n      '()\n      (cons (modulo (car test_tup1) (car test_tup2))\n            (tuple_modulo (cdr test_tup1) (cdr test_tup2)))))\n",
    "  (if (null? test_tup1)\n      '()\n      (cons (modulo (car test_tup1) (car test_tup2)) (tuple_modulo (cdr test_tup1) (cdr test_tup2)))))\n",
    "  (map (lambda (x y)\n         (modulo x y))\n       test_tup1\n       test_tup2))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [else (cons (modulo (first test_tup1) (first test_tup2))\n                (tuple_modulo (rest test_tup1) (rest test_tup2)))]))\n",
    "  (if (null? test_tup1)\n      '()\n      (cons (modulo (car test_tup1) (car test_tup2))\n            (tuple_modulo (cdr test_tup1) (cdr test_tup2)))))\n",
    "  (if (null? test_tup1)\n      '()\n      (cons (modulo (car test_tup1) (car test_tup2))\n            (tuple_modulo (cdr test_tup1) (cdr test_tup2)))))\n",
    "  (cond\n    [(null? test_tup1) '()]\n    [else (cons (modulo (car test_tup1) (car test_tup2)) (tuple_modulo (cdr test_tup1) (cdr test_tup2)))]))\n",
    "  (if (empty? test_tup1)\n      '()\n      (cons (modulo (car test_tup1) (car test_tup2))\n            (tuple_modulo (cdr test_tup1) (cdr test_tup2)))))\n",
    "  (if (null? test_tup1)\n      '()\n      (cons (modulo (car test_tup1) (car test_tup2))\n            (tuple_modulo (cdr test_tup1) (cdr test_tup2)))))\n",
    "  (if (and (list? test_tup1) (list? test_tup2))\n      (if (and (null? test_tup1) (null? test_tup2))\n          '()\n          (cons (modulo (car test_tup1) (car test_tup2))\n                (tuple_modulo (cdr test_tup1) (cdr test_tup2))))\n      (error \"Inputs must be lists\")))\n",
    "  (if (null? test_tup1)\n      '()\n      (cons (modulo (car test_tup1) (car test_tup2)) (tuple_modulo (cdr test_tup1) (cdr test_tup2)))))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [else (cons (modulo (first test_tup1) (first test_tup2)) (tuple_modulo (rest test_tup1) (rest test_tup2)))]))\n",
    "  (map (lambda (x y)\n         (modulo x y))\n       test_tup1 test_tup2))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [else (cons (modulo (first test_tup1) (first test_tup2)) (tuple_modulo (rest test_tup1) (rest test_tup2)))]))\n",
    "  (if (null? test_tup1)\n      '()\n      (cons (modulo (car test_tup1) (car test_tup2)) (tuple_modulo (cdr test_tup1) (cdr test_tup2)))))\n",
    "  (if (null? test_tup1)\n      '()\n      (cons (modulo (car test_tup1) (car test_tup2))\n            (tuple_modulo (cdr test_tup1) (cdr test_tup2)))))\n",
    "  (if (null? test_tup1)\n      '()\n      (cons (modulo (car test_tup1) (car test_tup2)) (tuple_modulo (cdr test_tup1) (cdr test_tup2)))))\n",
    "  (if (null? test_tup1)\n      '()\n      (cons (modulo (car test_tup1) (car test_tup2))\n            (tuple_modulo (cdr test_tup1) (cdr test_tup2)))))\n",
    "  (if (null? test_tup1)\n      '()\n      (cons (modulo (car test_tup1) (car test_tup2))\n            (tuple_modulo (cdr test_tup1) (cdr test_tup2)))))\n",
    "  (if (and (list? test_tup1) (list? test_tup2)\n           (equal? (length test_tup1) (length test_tup2)))\n      (map (lambda (x y) (modulo x y)) test_tup1 test_tup2)\n      (error \"Inputs must be lists of the same length\")))\n",
    "  (if (null? test_tup1)\n      '()\n      (cons (modulo (car test_tup1) (car test_tup2)) (tuple_modulo (cdr test_tup1) (cdr test_tup2)))))\n",
    "  (if (null? test_tup1)\n      '()\n      (cons (modulo (car test_tup1) (car test_tup2)) (tuple_modulo (cdr test_tup1) (cdr test_tup2)))))\n",
    "  (if (null? test_tup1)\n      '()\n      (cons (modulo (car test_tup1) (car test_tup2))\n            (tuple_modulo (cdr test_tup1) (cdr test_tup2)))))\n",
    "  (map (lambda (x y) (modulo x y)) test_tup1 test_tup2))\n",
    "  (if (null? test_tup1)\n      '()\n      (cons (modulo (car test_tup1) (car test_tup2))\n            (tuple_modulo (cdr test_tup1) (cdr test_tup2)))))\n",
    "  (if (null? test_tup1)\n      '()\n      (cons (modulo (car test_tup1) (car test_tup2))\n            (tuple_modulo (cdr test_tup1) (cdr test_tup2)))))\n",
    "  (if (empty? test_tup1)\n      '()\n      (cons (modulo (car test_tup1) (car test_tup2))\n            (tuple_modulo (cdr test_tup1) (cdr test_tup2)))))\n",
    "  (if (null? test_tup1)\n      '()\n      (cons (modulo (car test_tup1) (car test_tup2))\n            (tuple_modulo (cdr test_tup1) (cdr test_tup2)))))\n",
    "  (if (null? test_tup1)\n      '()\n      (cons (modulo (car test_tup1) (car test_tup2))\n            (tuple_modulo (cdr test_tup1) (cdr test_tup2)))))\n",
    "  (if (null? test_tup1)\n      '()\n      (cons (modulo (car test_tup1) (car test_tup2))\n            (tuple_modulo (cdr test_tup1) (cdr test_tup2)))))\n",
    "  (map (lambda (x y)\n         (modulo x y))\n       test_tup1\n       test_tup2))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [else (cons (modulo (first test_tup1) (first test_tup2))\n                (tuple_modulo (rest test_tup1) (rest test_tup2)))]))\n",
    "  (if (null? test_tup1)\n      '()\n      (cons (modulo (car test_tup1) (car test_tup2))\n            (tuple_modulo (cdr test_tup1) (cdr test_tup2)))))\n",
    "  (if (null? test_tup1)\n      '()\n      (cons (modulo (car test_tup1) (car test_tup2)) (tuple_modulo (cdr test_tup1) (cdr test_tup2)))))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [(empty? test_tup2) empty]\n    [else (cons (modulo (first test_tup1) (first test_tup2)) (tuple_modulo (rest test_tup1) (rest test_tup2)))]))\n",
    "  (if (or (null? test_tup1) (null? test_tup2))\n      '()\n      (cons (modulo (car test_tup1) (car test_tup2))\n            (tuple_modulo (cdr test_tup1) (cdr test_tup2)))))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [else (cons (modulo (car test_tup1) (car test_tup2)) (tuple_modulo (cdr test_tup1) (cdr test_tup2)))]))\n",
    "  (if (null? test_tup1)\n      '()\n      (cons (modulo (car test_tup1) (car test_tup2)) (tuple_modulo (cdr test_tup1) (cdr test_tup2)))))\n",
    "  (cond\n    [(empty? test_tup1) '()]\n    [else (cons (modulo (first test_tup1) (first test_tup2)) (tuple_modulo (rest test_tup1) (rest test_tup2)))]))\n",
    "  (if (null? test_tup1)\n      '()\n      (cons (modulo (car test_tup1) (car test_tup2))\n            (tuple_modulo (cdr test_tup1) (cdr test_tup2)))))\n",
    "  (if (null? test_tup1)\n      '()\n      (cons (modulo (car test_tup1) (car test_tup2))\n            (tuple_modulo (cdr test_tup1) (cdr test_tup2)))))\n",
    "  (map (lambda (x y) (modulo x y)) test_tup1 test_tup2))\n",
    "  (if (null? test_tup1)\n      '()\n      (cons (modulo (car test_tup1) (car test_tup2))\n            (tuple_modulo (cdr test_tup1) (cdr test_tup2)))))\n",
    "  (if (null? test_tup1)\n      '()\n      (cons (modulo (car test_tup1) (car test_tup2))\n            (tuple_modulo (cdr test_tup1) (cdr test_tup2)))))\n",
    "  (if (or (null? test_tup1) (null? test_tup2))\n      '()\n      (cons (modulo (car test_tup1) (car test_tup2))\n            (tuple_modulo (cdr test_tup1) (cdr test_tup2)))))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [else (cons (modulo (first test_tup1) (first test_tup2))\n                (tuple_modulo (rest test_tup1) (rest test_tup2)))]))\n",
    "  (if (or (null? test_tup1) (null? test_tup2))\n      '()\n      (cons (modulo (car test_tup1) (car test_tup2))\n            (tuple_modulo (cdr test_tup1) (cdr test_tup2)))))\n",
    "  (if (and (list? test_tup1) (list? test_tup2))\n      (if (and (not (null? test_tup1)) (not (null? test_tup2)))\n          (cons (modulo (car test_tup1) (car test_tup2))\n                (tuple_modulo (cdr test_tup1) (cdr test_tup2)))\n          '())\n      '()))\n",
    "  (if (empty? test_tup1)\n      '()\n      (cons (modulo (car test_tup1) (car test_tup2))\n            (tuple_modulo (cdr test_tup1) (cdr test_tup2)))))\n",
    "  (if (null? test_tup1)\n      '()\n      (cons (modulo (car test_tup1) (car test_tup2))\n            (tuple_modulo (cdr test_tup1) (cdr test_tup2)))))\n",
    "  (if (null? test_tup1)\n      '()\n      (cons (modulo (car test_tup1) (car test_tup2))\n            (tuple_modulo (cdr test_tup1) (cdr test_tup2)))))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [else (cons (modulo (car test_tup1) (car test_tup2)) (tuple_modulo (cdr test_tup1) (cdr test_tup2)))]))\n",
    "  (if (null? test_tup1)\n      '()\n      (cons (modulo (car test_tup1) (car test_tup2))\n            (tuple_modulo (cdr test_tup1) (cdr test_tup2)))))\n",
    "  (if (null? test_tup1)\n      '()\n      (cons (modulo (car test_tup1) (car test_tup2))\n            (tuple_modulo (cdr test_tup1) (cdr test_tup2)))))\n",
    "  (if (or (null? test_tup1) (null? test_tup2))\n      '()\n      (cons (modulo (car test_tup1) (car test_tup2))\n            (tuple_modulo (cdr test_tup1) (cdr test_tup2)))))\n",
    "  (if (null? test_tup1)\n      '()\n      (cons (modulo (car test_tup1) (car test_tup2)) (tuple_modulo (cdr test_tup1) (cdr test_tup2)))))\n",
    "  (if (empty? test_tup1)\n      empty\n      (cons (modulo (car test_tup1) (car test_tup2))\n            (tuple_modulo (cdr test_tup1) (cdr test_tup2)))))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [else (cons (modulo (car test_tup1) (car test_tup2)) (tuple_modulo (cdr test_tup1) (cdr test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [else (cons (modulo (first test_tup1) (first test_tup2)) (tuple_modulo (rest test_tup1) (rest test_tup2)))]))\n",
    "  (if (null? test_tup1)\n      '()\n      (cons (modulo (car test_tup1) (car test_tup2)) (tuple_modulo (cdr test_tup1) (cdr test_tup2)))))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [else (cons (modulo (first test_tup1) (first test_tup2)) (tuple_modulo (rest test_tup1) (rest test_tup2)))]))\n",
    "  (if (empty? test_tup1)\n      '()\n      (cons (modulo (car test_tup1) (car test_tup2))\n            (tuple_modulo (cdr test_tup1) (cdr test_tup2)))))\n",
    "  (map (lambda (x y)\n         (modulo x y))\n       test_tup1\n       test_tup2))\n",
    "  (if (null? test_tup1)\n      '()\n      (cons (modulo (car test_tup1) (car test_tup2)) (tuple_modulo (cdr test_tup1) (cdr test_tup2)))))\n",
    "  (if (null? test_tup1)\n      '()\n      (cons (modulo (car test_tup1) (car test_tup2))\n            (tuple_modulo (cdr test_tup1) (cdr test_tup2)))))\n",
    "  (if (null? test_tup1)\n      '()\n      (cons (modulo (car test_tup1) (car test_tup2))\n            (tuple_modulo (cdr test_tup1) (cdr test_tup2)))))\n",
    "  (cond ((null? test_tup1) '())\n        (else (cons (modulo (car test_tup1) (car test_tup2))\n                    (tuple_modulo (cdr test_tup1) (cdr test_tup2))))))\n",
    "  (if (empty? test_tup1)\n      '()\n      (cons (modulo (car test_tup1) (car test_tup2))\n            (tuple_modulo (cdr test_tup1) (cdr test_tup2)))))\n",
    "  (cond\n    [(null? test_tup1) '()]\n    [else (cons (modulo (car test_tup1) (car test_tup2)) (tuple_modulo (cdr test_tup1) (cdr test_tup2)))]))\n",
    "  (map (lambda (x y)\n         (modulo x y))\n       test_tup1 test_tup2))\n",
    "  (if (null? test_tup1)\n      '()\n      (cons (modulo (car test_tup1) (car test_tup2)) (tuple_modulo (cdr test_tup1) (cdr test_tup2)))))\n",
    "  (if (and (list? test_tup1) (list? test_tup2))\n      (if (and (null? test_tup1) (null? test_tup2))\n          '()\n          (cons (modulo (car test_tup1) (car test_tup2))\n                (tuple_modulo (cdr test_tup1) (cdr test_tup2))))\n      (error \"Not a list\")))\n",
    "  (map (lambda (x y)\n         (modulo x y))\n       test_tup1\n       test_tup2))\n",
    "  (if (null? test_tup1)\n      '()\n      (cons (modulo (car test_tup1) (car test_tup2))\n            (tuple_modulo (cdr test_tup1) (cdr test_tup2)))))\n",
    "  (if (null? test_tup1)\n      '()\n      (cons (modulo (car test_tup1) (car test_tup2))\n            (tuple_modulo (cdr test_tup1) (cdr test_tup2)))))\n",
    "  (if (null? test_tup1)\n      '()\n      (cons (modulo (car test_tup1) (car test_tup2))\n            (tuple_modulo (cdr test_tup1) (cdr test_tup2)))))\n",
    "  (map (lambda (x y)\n         (modulo x y))\n       test_tup1\n       test_tup2))\n",
    "  (if (null? test_tup1)\n      '()\n      (cons (modulo (car test_tup1) (car test_tup2))\n            (tuple_modulo (cdr test_tup1) (cdr test_tup2)))))\n",
    "  (if (null? test_tup1)\n      '()\n      (cons (modulo (car test_tup1) (car test_tup2)) (tuple_modulo (cdr test_tup1) (cdr test_tup2)))))\n",
    "  (if (empty? test_tup1)\n      '()\n      (cons (modulo (car test_tup1) (car test_tup2))\n            (tuple_modulo (cdr test_tup1) (cdr test_tup2)))))\n",
    "  (if (and (list? test_tup1) (list? test_tup2))\n      (if (equal? (length test_tup1) (length test_tup2))\n          (if (and (number? (car test_tup1)) (number? (car test_tup2)))\n              (cons (modulo (car test_tup1) (car test_tup2))\n                    (tuple_modulo (cdr test_tup1) (cdr test_tup2)))\n              (error \"tuple_modulo: car of test_tup1 and test_tup2 must be numbers\"))\n          (error \"tuple_modulo: test_tup1 and test_tup2 must be the same length\"))\n      (error \"tuple_modulo: test_tup1 and test_tup2 must be lists\")))\n",
    "  (if (null? test_tup1)\n      '()\n      (cons (modulo (car test_tup1) (car test_tup2))\n            (tuple_modulo (cdr test_tup1) (cdr test_tup2)))))\n",
    "  (if (null? test_tup1)\n      '()\n      (cons (modulo (car test_tup1) (car test_tup2))\n            (tuple_modulo (cdr test_tup1) (cdr test_tup2)))))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [else (cons (modulo (first test_tup1) (first test_tup2)) (tuple_modulo (rest test_tup1) (rest test_tup2)))]))\n",
    "  (if (null? test_tup1)\n      '()\n      (cons (modulo (car test_tup1) (car test_tup2))\n            (tuple_modulo (cdr test_tup1) (cdr test_tup2)))))\n",
    "  (if (null? test_tup1)\n      '()\n      (cons (modulo (car test_tup1) (car test_tup2))\n            (tuple_modulo (cdr test_tup1) (cdr test_tup2)))))\n",
    "  (if (null? test_tup1)\n      '()\n      (cons (modulo (car test_tup1) (car test_tup2))\n            (tuple_modulo (cdr test_tup1) (cdr test_tup2)))))\n",
    "  (cond\n    [(empty? test_tup1) '()]\n    [else (cons (modulo (first test_tup1) (first test_tup2)) (tuple_modulo (rest test_tup1) (rest test_tup2)))]))\n",
    "  (if (null? test_tup1)\n      '()\n      (cons (modulo (car test_tup1) (car test_tup2))\n            (tuple_modulo (cdr test_tup1) (cdr test_tup2)))))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [else (cons (modulo (first test_tup1) (first test_tup2)) (tuple_modulo (rest test_tup1) (rest test_tup2)))]))\n",
    "  (if (null? test_tup1)\n      '()\n      (cons (modulo (car test_tup1) (car test_tup2))\n            (tuple_modulo (cdr test_tup1) (cdr test_tup2)))))\n",
    "  (if (and (list? test_tup1) (list? test_tup2))\n      (if (and (not (null? test_tup1)) (not (null? test_tup2)))\n          (cons (modulo (car test_tup1) (car test_tup2))\n                (tuple_modulo (cdr test_tup1) (cdr test_tup2)))\n          '())\n      '()))\n",
    "  (map (lambda (x y) (modulo x y)) test_tup1 test_tup2))\n",
    "  (if (or (null? test_tup1) (null? test_tup2))\n      '()\n      (cons (modulo (car test_tup1) (car test_tup2))\n            (tuple_modulo (cdr test_tup1) (cdr test_tup2)))))\n",
    "  (if (or (null? test_tup1) (null? test_tup2))\n      '()\n      (cons (modulo (car test_tup1) (car test_tup2))\n            (tuple_modulo (cdr test_tup1) (cdr test_tup2)))))\n",
    "  (if (and (list? test_tup1) (list? test_tup2))\n      (if (and (null? test_tup1) (null? test_tup2))\n          '()\n          (cons (modulo (car test_tup1) (car test_tup2))\n                (tuple_modulo (cdr test_tup1) (cdr test_tup2))))\n      (error \"Inputs must be lists\")))\n",
    "  (if (and (list? test_tup1) (list? test_tup2))\n      (if (and (null? test_tup1) (null? test_tup2))\n          '()\n          (cons (modulo (car test_tup1) (car test_tup2))\n                (tuple_modulo (cdr test_tup1) (cdr test_tup2))))\n      (error \"One of the arguments is not a list\")))\n",
    "  (map (lambda (x y)\n         (modulo x y))\n       test_tup1\n       test_tup2))\n",
    "  (map (lambda (x y)\n         (modulo x y))\n       test_tup1 test_tup2))\n",
    "  (if (null? test_tup1)\n      '()\n      (cons (modulo (car test_tup1) (car test_tup2))\n            (tuple_modulo (cdr test_tup1) (cdr test_tup2)))))\n",
    "  (if (null? test_tup1)\n      '()\n      (cons (modulo (car test_tup1) (car test_tup2))\n            (tuple_modulo (cdr test_tup1) (cdr test_tup2)))))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [else (cons (modulo (car test_tup1) (car test_tup2)) (tuple_modulo (cdr test_tup1) (cdr test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [else (cons (modulo (first test_tup1) (first test_tup2))\n                (tuple_modulo (rest test_tup1) (rest test_tup2)))]))\n",
    "  (if (null? test_tup1)\n      '()\n      (cons (modulo (car test_tup1) (car test_tup2))\n            (tuple_modulo (cdr test_tup1) (cdr test_tup2)))))\n",
    "  (if (null? test_tup1)\n      '()\n      (cons (modulo (car test_tup1) (car test_tup2))\n            (tuple_modulo (cdr test_tup1) (cdr test_tup2)))))\n",
    "  (if (null? test_tup1)\n      '()\n      (cons (modulo (car test_tup1) (car test_tup2))\n            (tuple_modulo (cdr test_tup1) (cdr test_tup2)))))\n",
    "  (if (null? test_tup1)\n      '()\n      (cons (modulo (car test_tup1) (car test_tup2))\n            (tuple_modulo (cdr test_tup1) (cdr test_tup2)))))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [else (cons (modulo (car test_tup1) (car test_tup2)) (tuple_modulo (cdr test_tup1) (cdr test_tup2)))]))\n",
    "  (if (null? test_tup1)\n      '()\n      (cons (modulo (car test_tup1) (car test_tup2))\n            (tuple_modulo (cdr test_tup1) (cdr test_tup2)))))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [else (cons (modulo (car test_tup1) (car test_tup2)) (tuple_modulo (cdr test_tup1) (cdr test_tup2)))]))\n",
    "  (if (null? test_tup1)\n      '()\n      (cons (modulo (car test_tup1) (car test_tup2))\n            (tuple_modulo (cdr test_tup1) (cdr test_tup2)))))\n",
    "  (if (and (list? test_tup1) (list? test_tup2) (equal? (length test_tup1) (length test_tup2)))\n      (map (lambda (x y) (modulo x y)) test_tup1 test_tup2)\n      \"Error: not a list or not the same length\"))\n",
    "  (if (and (list? test_tup1) (list? test_tup2))\n      (if (and (not (null? test_tup1)) (not (null? test_tup2)))\n          (cons (modulo (car test_tup1) (car test_tup2))\n                (tuple_modulo (cdr test_tup1) (cdr test_tup2)))\n          '())\n      '()))\n",
    "  (if (empty? test_tup1)\n      '()\n      (cons (modulo (car test_tup1) (car test_tup2)) (tuple_modulo (cdr test_tup1) (cdr test_tup2)))))\n",
    "  (if (null? test_tup1)\n      '()\n      (cons (modulo (car test_tup1) (car test_tup2))\n            (tuple_modulo (cdr test_tup1) (cdr test_tup2)))))\n",
    "  (map (lambda (x y) (modulo x y)) test_tup1 test_tup2))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [else (cons (modulo (first test_tup1) (first test_tup2))\n                (tuple_modulo (rest test_tup1) (rest test_tup2)))]))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [else (cons (modulo (first test_tup1) (first test_tup2)) (tuple_modulo (rest test_tup1) (rest test_tup2)))]))\n",
    "  (if (null? test_tup1)\n      '()\n      (cons (modulo (car test_tup1) (car test_tup2))\n            (tuple_modulo (cdr test_tup1) (cdr test_tup2)))))\n",
    "  (if (null? test_tup1)\n      '()\n      (cons (modulo (car test_tup1) (car test_tup2))\n            (tuple_modulo (cdr test_tup1) (cdr test_tup2)))))\n",
    "  (if (null? test_tup1)\n      '()\n      (cons (modulo (car test_tup1) (car test_tup2))\n            (tuple_modulo (cdr test_tup1) (cdr test_tup2)))))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [else (cons (modulo (first test_tup1) (first test_tup2)) (tuple_modulo (rest test_tup1) (rest test_tup2)))]))\n",
    "  (if (null? test_tup1)\n      '()\n      (cons (modulo (car test_tup1) (car test_tup2))\n            (tuple_modulo (cdr test_tup1) (cdr test_tup2)))))\n",
    "  (if (or (null? test_tup1) (null? test_tup2))\n      '()\n      (cons (modulo (car test_tup1) (car test_tup2))\n            (tuple_modulo (cdr test_tup1) (cdr test_tup2)))))\n",
    "  (if (null? test_tup1)\n      '()\n      (cons (modulo (car test_tup1) (car test_tup2))\n            (tuple_modulo (cdr test_tup1) (cdr test_tup2)))))\n",
    "  (if (and (list? test_tup1) (list? test_tup2))\n      (if (and (not (null? test_tup1)) (not (null? test_tup2)))\n          (cons (modulo (car test_tup1) (car test_tup2)) (tuple_modulo (cdr test_tup1) (cdr test_tup2)))\n          '())\n      '()))\n",
    "  (if (null? test_tup1)\n      '()\n      (cons (modulo (car test_tup1) (car test_tup2))\n            (tuple_modulo (cdr test_tup1) (cdr test_tup2)))))\n",
    "  (if (or (null? test_tup1) (null? test_tup2))\n      '()\n      (cons (modulo (car test_tup1) (car test_tup2))\n            (tuple_modulo (cdr test_tup1) (cdr test_tup2)))))\n",
    "  (if (null? test_tup1)\n      '()\n      (cons (modulo (car test_tup1) (car test_tup2)) (tuple_modulo (cdr test_tup1) (cdr test_tup2)))))\n",
    "  (if (null? test_tup1)\n      '()\n      (cons (modulo (car test_tup1) (car test_tup2))\n            (tuple_modulo (cdr test_tup1) (cdr test_tup2)))))\n",
    "  (if (or (null? test_tup1) (null? test_tup2))\n      '()\n      (cons (modulo (car test_tup1) (car test_tup2))\n            (tuple_modulo (cdr test_tup1) (cdr test_tup2)))))\n",
    "  (if (null? test_tup1)\n      '()\n      (cons (modulo (car test_tup1) (car test_tup2))\n            (tuple_modulo (cdr test_tup1) (cdr test_tup2)))))\n",
    "  (if (and (list? test_tup1) (list? test_tup2))\n      (if (and (not (null? test_tup1)) (not (null? test_tup2)))\n          (cons (modulo (car test_tup1) (car test_tup2)) (tuple_modulo (cdr test_tup1) (cdr test_tup2)))\n          '())\n      '()))\n",
    "  (if (or (null? test_tup1) (null? test_tup2))\n      '()\n      (cons (modulo (car test_tup1) (car test_tup2))\n            (tuple_modulo (cdr test_tup1) (cdr test_tup2)))))\n",
    "  (if (null? test_tup1)\n      '()\n      (cons (modulo (car test_tup1) (car test_tup2))\n            (tuple_modulo (cdr test_tup1) (cdr test_tup2)))))\n",
    "  (if (and (list? test_tup1) (list? test_tup2))\n      (if (and (not (null? test_tup1)) (not (null? test_tup2)))\n          (cons (modulo (car test_tup1) (car test_tup2))\n                (tuple_modulo (cdr test_tup1) (cdr test_tup2)))\n          '())\n      '()))\n",
    "  (if (null? test_tup1)\n      '()\n      (cons (modulo (car test_tup1) (car test_tup2))\n            (tuple_modulo (cdr test_tup1) (cdr test_tup2)))))\n",
    "  (if (null? test_tup1)\n      '()\n      (cons (modulo (car test_tup1) (car test_tup2))\n            (tuple_modulo (cdr test_tup1) (cdr test_tup2)))))\n",
    "  (if (null? test_tup1)\n      '()\n      (cons (modulo (car test_tup1) (car test_tup2))\n            (tuple_modulo (cdr test_tup1) (cdr test_tup2)))))\n",
    "  (if (null? test_tup1)\n      '()\n      (cons (modulo (car test_tup1) (car test_tup2))\n            (tuple_modulo (cdr test_tup1) (cdr test_tup2)))))\n",
    "  (if (and (list? test_tup1) (list? test_tup2))\n      (if (and (not (null? test_tup1)) (not (null? test_tup2)))\n          (cons (modulo (car test_tup1) (car test_tup2))\n                (tuple_modulo (cdr test_tup1) (cdr test_tup2)))\n          '())\n      '()))\n",
    "  (if (and (list? test_tup1) (list? test_tup2)\n           (equal? (length test_tup1) (length test_tup2)))\n      (map (lambda (x y) (modulo x y)) test_tup1 test_tup2)\n      (error \"Inputs must be lists of equal length\")))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [else (cons (modulo (first test_tup1) (first test_tup2)) (tuple_modulo (rest test_tup1) (rest test_tup2)))]))\n",
    "  (if (or (null? test_tup1) (null? test_tup2))\n      '()\n      (cons (modulo (car test_tup1) (car test_tup2))\n            (tuple_modulo (cdr test_tup1) (cdr test_tup2)))))\n",
    "  (map (lambda (x y)\n         (modulo x y))\n       test_tup1\n       test_tup2))\n",
    "  (map (lambda (x y)\n         (modulo x y))\n       test_tup1\n       test_tup2))\n",
    "  (if (null? test_tup1)\n      '()\n      (cons (modulo (car test_tup1) (car test_tup2))\n            (tuple_modulo (cdr test_tup1) (cdr test_tup2)))))\n",
    "  (map (lambda (x y) (modulo x y)) test_tup1 test_tup2))\n",
    "  (if (null? test_tup1)\n      '()\n      (cons (modulo (car test_tup1) (car test_tup2))\n            (tuple_modulo (cdr test_tup1) (cdr test_tup2)))))\n",
    "  (if (null? test_tup1)\n      '()\n      (cons (modulo (car test_tup1) (car test_tup2)) (tuple_modulo (cdr test_tup1) (cdr test_tup2)))))\n",
    "  (if (null? test_tup1)\n      '()\n      (cons (modulo (car test_tup1) (car test_tup2))\n            (tuple_modulo (cdr test_tup1) (cdr test_tup2)))))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [else (cons (modulo (first test_tup1) (first test_tup2)) (tuple_modulo (rest test_tup1) (rest test_tup2)))]))\n",
    "  (if (null? test_tup1)\n      '()\n      (cons (modulo (car test_tup1) (car test_tup2))\n            (tuple_modulo (cdr test_tup1) (cdr test_tup2)))))\n",
    "  (map (lambda (x y) (modulo x y)) test_tup1 test_tup2))\n",
    "  (if (null? test_tup1)\n      '()\n      (cons (modulo (car test_tup1) (car test_tup2))\n            (tuple_modulo (cdr test_tup1) (cdr test_tup2)))))\n",
    "  (if (null? test_tup1)\n      '()\n      (cons (modulo (car test_tup1) (car test_tup2)) (tuple_modulo (cdr test_tup1) (cdr test_tup2)))))\n",
    "  (map (lambda (x y) (modulo x y)) test_tup1 test_tup2))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [else (cons (modulo (first test_tup1) (first test_tup2)) (tuple_modulo (rest test_tup1) (rest test_tup2)))]))\n",
    "  (if (null? test_tup1)\n      '()\n      (cons (modulo (car test_tup1) (car test_tup2))\n            (tuple_modulo (cdr test_tup1) (cdr test_tup2)))))\n",
    "  (if (null? test_tup1)\n      '()\n      (cons (modulo (car test_tup1) (car test_tup2)) (tuple_modulo (cdr test_tup1) (cdr test_tup2)))))\n",
    "  (if (null? test_tup1)\n      '()\n      (cons (modulo (car test_tup1) (car test_tup2))\n            (tuple_modulo (cdr test_tup1) (cdr test_tup2)))))\n",
    "  (if (and (list? test_tup1) (list? test_tup2))\n      (if (and (not (null? test_tup1)) (not (null? test_tup2)))\n          (cons (modulo (car test_tup1) (car test_tup2)) (tuple_modulo (cdr test_tup1) (cdr test_tup2)))\n          '())\n      '()))\n",
    "  (cond\n    [(empty? test_tup1) empty]\n    [else (cons (modulo (first test_tup1) (first test_tup2))\n                (tuple_modulo (rest test_tup1) (rest test_tup2)))]))\n",
    "  (if (and (pair? test_tup1) (pair? test_tup2))\n      (cons (modulo (car test_tup1) (car test_tup2))\n            (tuple_modulo (cdr test_tup1) (cdr test_tup2)))\n      '()))\n",
    "  (if (empty? test_tup1)\n      '()\n      (cons (modulo (car test_tup1) (car test_tup2))\n            (tuple_modulo (cdr test_tup1) (cdr test_tup2)))))\n",
    "  (if (or (null? test_tup1) (null? test_tup2))\n      '()\n      (cons (modulo (car test_tup1) (car test_tup2)) (tuple_modulo (cdr test_tup1) (cdr test_tup2)))))\n",
    "  (if (null? test_tup1)\n      '()\n      (cons (modulo (car test_tup1) (car test_tup2))\n            (tuple_modulo (cdr test_tup1) (cdr test_tup2)))))\n",
    "  (if (null? test_tup1)\n      '()\n      (cons (modulo (car test_tup1) (car test_tup2))\n            (tuple_modulo (cdr test_tup1) (cdr test_tup2)))))\n",
    "  (if (or (null? test_tup1) (null? test_tup2))\n      '()\n      (cons (modulo (car test_tup1) (car test_tup2))\n            (tuple_modulo (cdr test_tup1) (cdr test_tup2)))))\n",
    "  (if (null? test_tup1)\n      '()\n      (cons (modulo (car test_tup1) (car test_tup2))\n            (tuple_modulo (cdr test_tup1) (cdr test_tup2)))))\n",
    "  (if (null? test_tup1)\n      '()\n      (cons (modulo (car test_tup1) (car test_tup2)) (tuple_modulo (cdr test_tup1) (cdr test_tup2)))))\n",
    "  (if (null? test_tup1)\n      '()\n      (cons (modulo (car test_tup1) (car test_tup2))\n            (tuple_modulo (cdr test_tup1) (cdr test_tup2)))))\n",
    "  (if (null? test_tup1)\n      '()\n      (cons (modulo (car test_tup1) (car test_tup2))\n            (tuple_modulo (cdr test_tup1) (cdr test_tup2)))))\n"
  ]
}
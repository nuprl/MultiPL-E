{
  "name": "mbpp_443_largest_neg",
  "language": "rkt",
  "prompt": "#lang racket\n\n;; Write a rktthon function to find the largest negative number from the given list.\n(define (largest_neg list1)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_443_largest_neg.py",
  "prompt_terminology": "reworded",
  "tests": "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate largest_neg))\n    (check-equal? (candidate (list 1 2 3 -4 -6)) -6)\n    (check-equal? (candidate (list 1 2 3 -8 -9)) -9)\n    (check-equal? (candidate (list 1 2 3 4 -1)) -1)\n))\n\n(test-humaneval)",
  "stop_tokens": [
    "\n(define ",
    "\n#|",
    "\n;",
    "\n("
  ],
  "completions": [
    "  (cond\n    [(empty? list1) (error \"List is empty\")]\n    [(< (first list1) 0) (first list1)]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(< (first list1) 0) (max (first list1) (largest_neg (rest list1)))]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(null? list1) '()]\n    [(< (car list1) 0) (max (car list1) (largest_neg (cdr list1)))]\n    [else (largest_neg (cdr list1))]))\n",
    "  (cond\n    [(null? list1) '()]\n    [(and (number? (car list1)) (negative? (car list1)))\n     (if (null? (cdr list1))\n         (car list1)\n         (max (car list1) (largest_neg (cdr list1))))]\n    [else (largest_neg (cdr list1))]))\n",
    "  (cond\n    [(empty? list1) (error \"List is empty\")]\n    [(negative? (first list1)) (first list1)]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(empty? list1) '()]\n    [(and (negative? (first list1)) (or (empty? (rest list1)) (positive? (first (rest list1))))) (first list1)]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(empty? list1) (error \"empty list\")]\n    [(< (first list1) 0) (first list1)]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(and (negative? (first list1)) (negative? (largest_neg (rest list1))))\n     (first list1)]\n    [(and (negative? (first list1)) (not (negative? (largest_neg (rest list1)))))\n     (largest_neg (rest list1))]\n    [(and (not (negative? (first list1))) (negative? (largest_neg (rest list1))))\n     (largest_neg (rest list1))]\n    [(and (not (negative? (first list1))) (not (negative? (largest_neg (rest list1)))))\n     0]))\n",
    "  (cond\n    [(empty? list1) '()]\n    [(and (negative? (first list1)) (empty? (rest list1))) (first list1)]\n    [(and (negative? (first list1)) (positive? (first (rest list1)))) (first list1)]\n    [(and (negative? (first list1)) (negative? (first (rest list1)))) (largest_neg (rest list1))]\n    [(and (positive? (first list1)) (negative? (first (rest list1)))) (largest_neg (rest list1))]\n    [(and (positive? (first list1)) (positive? (first (rest list1)))) (largest_neg (rest list1))]))\n",
    "  (cond\n    [(empty? list1) '()]\n    [(negative? (first list1)) (first list1)]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(null? list1) 0]\n    [(< (car list1) 0) (max (car list1) (largest_neg (cdr list1)))]\n    [else (largest_neg (cdr list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(negative? (first list1)) (max (first list1) (largest_neg (rest list1)))]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(and (negative? (first list1)) (positive? (second list1))) (largest_neg (rest list1))]\n    [(and (negative? (first list1)) (negative? (second list1))) (max (first list1) (largest_neg (rest list1)))]\n    [(and (positive? (first list1)) (negative? (second list1))) (max (first list1) (largest_neg (rest list1)))]\n    [(and (positive? (first list1)) (positive? (second list1))) (largest_neg (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(and (negative? (first list1))\n          (or (positive? (second list1))\n              (empty? (rest list1))))\n     (first list1)]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(null? list1) '()]\n    [(< (car list1) 0) (cons (car list1) (largest_neg (cdr list1)))]\n    [else (largest_neg (cdr list1))]))\n",
    "  (cond\n    [(null? list1) '()]\n    [(and (not (null? list1)) (not (negative? (car list1)))) (largest_neg (cdr list1))]\n    [(and (not (null? list1)) (negative? (car list1))) (max (car list1) (largest_neg (cdr list1)))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(< (first list1) 0) (max (first list1) (largest_neg (rest list1)))]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(empty? list1) (error \"empty list\")]\n    [(and (negative? (first list1)) (empty? (rest list1))) (first list1)]\n    [(and (negative? (first list1)) (negative? (largest_neg (rest list1)))) (first list1)]\n    [(and (negative? (first list1)) (positive? (largest_neg (rest list1)))) (largest_neg (rest list1))]\n    [(and (positive? (first list1)) (empty? (rest list1))) (error \"no negative numbers\")]\n    [(and (positive? (first list1)) (negative? (largest_neg (rest list1)))) (largest_neg (rest list1))]\n    [(and (positive? (first list1)) (positive? (largest_neg (rest list1)))) (error \"no negative numbers\")]))\n",
    "  (cond [(empty? list1) 0]\n        [(and (negative? (first list1))\n              (or (positive? (second list1)) (empty? (rest list1))))\n         (first list1)]\n        [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(negative? (first list1)) (max (first list1) (largest_neg (rest list1)))]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(empty? list1) '()]\n    [(and (negative? (first list1)) (or (empty? (rest list1)) (positive? (first (rest list1))))) (first list1)]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(and (negative? (first list1)) (positive? (second list1))) (first list1)]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(and (negative? (first list1)) (positive? (first (rest list1)))) (largest_neg (rest list1))]\n    [(and (negative? (first list1)) (negative? (first (rest list1)))) (max (first list1) (largest_neg (rest list1)))]\n    [(and (positive? (first list1)) (negative? (first (rest list1)))) (max (first list1) (largest_neg (rest list1)))]\n    [(and (positive? (first list1)) (positive? (first (rest list1)))) (largest_neg (rest list1))]))\n",
    "  (cond [(empty? list1) (error \"empty list\")]\n        [(negative? (first list1)) (first list1)]\n        [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(null? list1) 0]\n    [(< (car list1) 0) (max (car list1) (largest_neg (cdr list1)))]\n    [else (largest_neg (cdr list1))]))\n",
    "  (cond\n    [(null? list1) '()]\n    [(< (car list1) 0) (cons (car list1) (largest_neg (cdr list1)))]\n    [else (largest_neg (cdr list1))]))\n",
    "  (cond [(empty? list1) '()]\n        [(and (negative? (first list1)) (empty? (rest list1))) (first list1)]\n        [(and (negative? (first list1)) (not (empty? (rest list1)))) (max (first list1) (largest_neg (rest list1)))]\n        [(and (not (negative? (first list1))) (not (empty? (rest list1)))) (largest_neg (rest list1))]))\n",
    "  (cond\n    [(null? list1) 0]\n    [(and (number? (car list1)) (< (car list1) 0)) (max (car list1) (largest_neg (cdr list1)))]\n    [else (largest_neg (cdr list1))]))\n",
    "  (cond\n    [(null? list1) '()]\n    [(< (car list1) 0) (cons (car list1) (largest_neg (cdr list1)))]\n    [else (largest_neg (cdr list1))]))\n",
    "  (cond\n    [(empty? list1) '()]\n    [(and (negative? (first list1)) (not (negative? (second list1)))) (first list1)]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(empty? list1) '()]\n    [(< (first list1) 0) (first list1)]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(null? list1) 0]\n    [(and (negative? (car list1)) (positive? (cadr list1))) (largest_neg (cdr list1))]\n    [(and (negative? (car list1)) (negative? (cadr list1))) (largest_neg (cons (car list1) (cdr (cdr list1))))]\n    [(and (positive? (car list1)) (negative? (cadr list1))) (largest_neg (cons (cadr list1) (cdr (cdr list1))))]\n    [(and (positive? (car list1)) (positive? (cadr list1))) (largest_neg (cdr list1))]))\n",
    "  (cond\n    [(empty? list1) '()]\n    [(and (negative? (first list1)) (positive? (second list1))) (first list1)]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(empty? list1) '()]\n    [(negative? (first list1)) (first list1)]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(null? list1) '()]\n    [(< (car list1) 0) (cons (car list1) (largest_neg (cdr list1)))]\n    [else (largest_neg (cdr list1))]))\n",
    "  (cond\n    [(null? list1) 0]\n    [(and (negative? (car list1)) (positive? (cadr list1))) (largest_neg (cdr list1))]\n    [(and (negative? (car list1)) (negative? (cadr list1))) (max (car list1) (largest_neg (cdr list1)))]\n    [else (largest_neg (cdr list1))]))\n",
    "  (cond\n    [(empty? list1) (error \"No negative numbers in list\")]\n    [(and (negative? (first list1)) (empty? (rest list1))) (first list1)]\n    [(and (negative? (first list1)) (not (empty? (rest list1)))) (max (first list1) (largest_neg (rest list1)))]\n    [(and (not (negative? (first list1))) (not (empty? (rest list1)))) (largest_neg (rest list1))]))\n",
    "  (cond\n    [(empty? list1) '()]\n    [(and (negative? (first list1)) (not (negative? (first (rest list1))))) (first list1)]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(empty? list1) '()]\n    [(negative? (first list1)) (first list1)]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(empty? list1) '()]\n    [(< (first list1) 0) (first list1)]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(and (negative? (first list1))\n          (or (positive? (second list1))\n              (largest_neg (rest list1))))\n     (first list1)]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(and (negative? (first list1)) (or (positive? (first (rest list1))) (zero? (first (rest list1))))) (first list1)]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(and (negative? (first list1)) (not (negative? (second list1)))) (first list1)]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(negative? (first list1)) (max (first list1) (largest_neg (rest list1)))]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(negative? (first list1)) (max (first list1) (largest_neg (rest list1)))]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(empty? list1) '()]\n    [(negative? (first list1)) (first list1)]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(null? list1) 0]\n    [(and (negative? (car list1)) (positive? (cadr list1))) (largest_neg (cdr list1))]\n    [(and (negative? (car list1)) (negative? (cadr list1))) (max (car list1) (largest_neg (cdr list1)))]\n    [(and (positive? (car list1)) (negative? (cadr list1))) (max (car list1) (largest_neg (cdr list1)))]\n    [(and (positive? (car list1)) (positive? (cadr list1))) (largest_neg (cdr list1))]))\n",
    "  (cond\n    [(null? list1) '()]\n    [(and (number? (car list1)) (< (car list1) 0)) (cons (car list1) (largest_neg (cdr list1)))]\n    [else (largest_neg (cdr list1))]))\n",
    "  (cond\n    [(null? list1) '()]\n    [(< (car list1) 0) (cons (car list1) (largest_neg (cdr list1)))]\n    [else (largest_neg (cdr list1))]))\n",
    "  (cond\n    [(empty? list1) '()]\n    [(and (negative? (first list1)) (not (negative? (second list1)))) (first list1)]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond [(empty? list1) #f]\n        [(and (negative? (first list1)) (largest_neg (rest list1)))\n         (first list1)]\n        [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(empty? list1) '()]\n    [(< (first list1) 0) (largest_neg (rest list1))]\n    [else (cons (first list1) (largest_neg (rest list1)))]))\n",
    "  (cond\n    [(null? list1) '()]\n    [(< (car list1) 0) (cons (car list1) (largest_neg (cdr list1)))]\n    [else (largest_neg (cdr list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(and (negative? (first list1)) (positive? (second list1))) (largest_neg (rest list1))]\n    [(and (negative? (first list1)) (negative? (second list1))) (max (first list1) (largest_neg (rest list1)))]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(empty? list1) '()]\n    [(< (first list1) 0) (first list1)]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(null? list1) #f]\n    [(and (number? (car list1)) (negative? (car list1))) (max (car list1) (largest_neg (cdr list1)))]\n    [else (largest_neg (cdr list1))]))\n",
    "  (cond\n    [(empty? list1) (error \"empty list\")]\n    [(< (first list1) 0) (first list1)]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(null? list1) '()]\n    [(and (number? (car list1)) (negative? (car list1))) (cons (car list1) (largest_neg (cdr list1)))]\n    [else (largest_neg (cdr list1))]))\n",
    "  (cond\n    [(null? list1) 0]\n    [(< (car list1) 0) (max (car list1) (largest_neg (cdr list1)))]\n    [else (largest_neg (cdr list1))]))\n",
    "  (cond\n    [(empty? list1) (error \"List is empty\")]\n    [(negative? (first list1)) (first list1)]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(empty? list1) '()]\n    [(negative? (first list1)) (first list1)]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(and (negative? (first list1))\n          (or (positive? (second list1))\n              (not (positive? (second list1)))))\n     (first list1)]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(and (negative? (first list1)) (positive? (second list1))) (largest_neg (rest list1))]\n    [(and (negative? (first list1)) (negative? (second list1))) (largest_neg (cons (first list1) (rest (rest list1))))]\n    [else (largest_neg (cons (second list1) (rest (rest list1))))]))\n",
    "  (cond\n    [(null? list1) (error \"Empty list\")]\n    [(< (car list1) 0) (car list1)]\n    [else (largest_neg (cdr list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(and (negative? (first list1))\n          (or (positive? (second list1))\n              (zero? (second list1))))\n     (first list1)]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(empty? list1) (error \"Empty list\")]\n    [(and (negative? (first list1)) (empty? (rest list1))) (first list1)]\n    [(and (negative? (first list1)) (not (empty? (rest list1)))) (max (first list1) (largest_neg (rest list1)))]\n    [(and (not (negative? (first list1))) (empty? (rest list1))) (error \"No negative numbers\")]\n    [(and (not (negative? (first list1))) (not (empty? (rest list1)))) (largest_neg (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(< (first list1) 0) (max (first list1) (largest_neg (rest list1)))]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(negative? (first list1)) (max (first list1) (largest_neg (rest list1)))]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(empty? list1) (error \"No negative numbers in list\")]\n    [(negative? (first list1)) (first list1)]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(empty? list1) '()]\n    [(< (first list1) 0) (first list1)]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(empty? list1) '()]\n    [(and (negative? (first list1)) (not (negative? (second list1)))) (first list1)]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(and (negative? (first list1)) (positive? (first (rest list1)))) (largest_neg (rest list1))]\n    [(and (negative? (first list1)) (negative? (first (rest list1)))) (max (first list1) (largest_neg (rest list1)))]\n    [(and (positive? (first list1)) (negative? (first (rest list1)))) (max (first list1) (largest_neg (rest list1)))]\n    [(and (positive? (first list1)) (positive? (first (rest list1)))) (largest_neg (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(and (negative? (first list1))\n          (or (empty? (rest list1))\n              (negative? (largest_neg (rest list1)))))\n     (first list1)]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(empty? list1) (error 'largest_neg \"empty list\")]\n    [(negative? (first list1)) (largest_neg (rest list1))]\n    [else (first list1)]))\n",
    "  (cond\n    [(empty? list1) '()]\n    [(negative? (first list1)) (first list1)]\n    [else (largest_neg (rest list1))]))\n",
    "  (filter (lambda (x) (and (negative? x) (not (zero? x)))) list1))\n",
    "  (cond\n    [(null? list1) (error \"Empty list\")]\n    [(< (car list1) 0) (largest_neg (cdr list1))]\n    [(> (car list1) 0) (largest_neg (cdr list1))]\n    [else (car list1)]))\n",
    "  (cond\n    [(empty? list1) #f]\n    [(and (negative? (first list1)) (or (empty? (rest list1)) (positive? (first (rest list1))))) (first list1)]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(empty? list1) '()]\n    [(< (first list1) 0) (cons (first list1) (largest_neg (rest list1)))]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(null? list1) 0]\n    [(< (car list1) 0) (max (car list1) (largest_neg (cdr list1)))]\n    [else (largest_neg (cdr list1))]))\n",
    "  (cond\n    [(empty? list1) '()]\n    [else\n     (let* ([first (first list1)]\n            [rest (rest list1)]\n            [rest-neg (largest_neg rest)])\n       (cond\n         [(and (number? first) (< first 0))\n          (if (number? rest-neg)\n              (if (> first rest-neg) first rest-neg)\n              first)]\n         [else rest-neg]))]))\n",
    "  (cond\n    [(null? list1) '()]\n    [(and (number? (car list1))\n          (negative? (car list1)))\n     (max (car list1) (largest_neg (cdr list1)))]\n    [else (largest_neg (cdr list1))]))\n",
    "  (cond\n    [(empty? list1) '()]\n    [(and (negative? (first list1)) (empty? (rest list1))) (first list1)]\n    [(and (negative? (first list1)) (not (empty? (rest list1))))\n     (if (> (first list1) (largest_neg (rest list1)))\n         (first list1)\n         (largest_neg (rest list1)))]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(empty? list1) (error \"List is empty\")]\n    [(negative? (first list1)) (largest_neg (rest list1))]\n    [else (first list1)]))\n",
    "  (cond\n    [(empty? list1) '()]\n    [(negative? (first list1)) (cons (first list1) (largest_neg (rest list1)))]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(and (negative? (first list1)) (not (negative? (second list1)))) (first list1)]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond ((null? list1) '())\n        ((< (car list1) 0) (cons (car list1) (largest_neg (cdr list1))))\n        (else (largest_neg (cdr list1)))))\n",
    "  (cond\n    [(empty? list1) '()]\n    [(< (first list1) 0) (first list1)]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(and (negative? (first list1)) (positive? (second list1))) (first list1)]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(empty? list1) (error \"Empty list\")]\n    [(< (first list1) 0) (first list1)]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(null? list1) '()]\n    [(< (car list1) 0) (cons (car list1) (largest_neg (cdr list1)))]\n    [else (largest_neg (cdr list1))]))\n",
    "  (cond\n    [(null? list1) '()]\n    [(< (car list1) 0) (cons (car list1) (largest_neg (cdr list1)))]\n    [else (largest_neg (cdr list1))]))\n",
    "  (cond\n    [(null? list1) '()]\n    [(and (negative? (car list1)) (null? (cdr list1))) (car list1)]\n    [(and (negative? (car list1)) (negative? (cadr list1))) (if (< (car list1) (cadr list1)) (cadr list1) (car list1))]\n    [(and (negative? (car list1)) (positive? (cadr list1))) (car list1)]\n    [(and (positive? (car list1)) (negative? (cadr list1))) (cadr list1)]\n    [else (largest_neg (cdr list1))]))\n",
    "  (cond\n    [(empty? list1) #f]\n    [(< (first list1) 0) (max (first list1) (largest_neg (rest list1)))]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(and (negative? (first list1)) (positive? (second list1))) (largest_neg (rest list1))]\n    [(and (negative? (first list1)) (negative? (second list1))) (largest_neg (cons (first list1) (rest (rest list1))))]\n    [(and (positive? (first list1)) (negative? (second list1))) (largest_neg (cons (second list1) (rest (rest list1))))]\n    [(and (positive? (first list1)) (positive? (second list1))) (largest_neg (rest list1))]))\n",
    "  (cond\n    [(null? list1) 0]\n    [(and (negative? (car list1)) (positive? (cadr list1))) (car list1)]\n    [else (largest_neg (cdr list1))]))\n",
    "  (cond\n    [(empty? list1) '()]\n    [(negative? (first list1)) (cons (first list1) (largest_neg (rest list1)))]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(empty? list1) '()]\n    [(and (negative? (first list1)) (positive? (second list1))) (largest_neg (rest list1))]\n    [else (cons (first list1) (largest_neg (rest list1)))]))\n",
    "  (cond\n    [(empty? list1) '()]\n    [(and (negative? (first list1)) (not (negative? (second list1)))) (first list1)]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(null? list1) '()]\n    [(< (car list1) 0) (cons (car list1) (largest_neg (cdr list1)))]\n    [else (largest_neg (cdr list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(and (negative? (first list1))\n          (or (positive? (second list1))\n              (largest_neg (rest list1))))\n     (first list1)]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(and (negative? (first list1)) (positive? (second list1))) (largest_neg (rest list1))]\n    [(and (negative? (first list1)) (negative? (second list1))) (largest_neg (cons (first list1) (rest (rest list1))))]\n    [(and (positive? (first list1)) (negative? (second list1))) (largest_neg (cons (second list1) (rest (rest list1))))]\n    [(and (positive? (first list1)) (positive? (second list1))) (largest_neg (rest list1))]))\n",
    "  (cond\n    [(null? list1) '()]\n    [(and (number? (car list1)) (< (car list1) 0)) (list (car list1))]\n    [else (largest_neg (cdr list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(and (negative? (first list1))\n          (or (positive? (second list1))\n              (empty? (rest list1))))\n     (first list1)]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(null? list1) 0]\n    [(< (car list1) 0) (max (car list1) (largest_neg (cdr list1)))]\n    [else (largest_neg (cdr list1))]))\n",
    "  (cond\n    [(null? list1) '()]\n    [(and (negative? (car list1)) (null? (cdr list1))) (car list1)]\n    [(and (negative? (car list1)) (negative? (cadr list1))) (if (> (car list1) (cadr list1)) (car list1) (cadr list1))]\n    [(and (negative? (car list1)) (positive? (cadr list1))) (car list1)]\n    [(and (positive? (car list1)) (negative? (cadr list1))) (cadr list1)]\n    [(and (positive? (car list1)) (positive? (cadr list1))) (largest_neg (cdr list1))]))\n",
    "  (cond\n    [(null? list1) '()]\n    [(and (negative? (car list1)) (null? (cdr list1))) (car list1)]\n    [(and (negative? (car list1)) (negative? (cadr list1))) (if (> (car list1) (cadr list1)) (car list1) (cadr list1))]\n    [(and (negative? (car list1)) (positive? (cadr list1))) (car list1)]\n    [(and (positive? (car list1)) (negative? (cadr list1))) (cadr list1)]\n    [(and (positive? (car list1)) (positive? (cadr list1))) (largest_neg (cdr list1))]))\n",
    "  (cond\n    [(empty? list1) '()]\n    [(and (negative? (first list1)) (not (empty? (rest list1))))\n     (if (> (first list1) (largest_neg (rest list1)))\n         (first list1)\n         (largest_neg (rest list1)))]\n    [(negative? (first list1)) (first list1)]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(empty? list1) '()]\n    [(and (negative? (first list1))\n          (or (empty? (rest list1))\n              (positive? (first (rest list1)))))\n     (first list1)]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(empty? list1) '()]\n    [(and (negative? (first list1)) (empty? (rest list1))) (first list1)]\n    [(and (negative? (first list1)) (not (empty? (rest list1)))) (max (first list1) (largest_neg (rest list1)))]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(empty? list1) '()]\n    [(and (negative? (first list1)) (not (negative? (second list1)))) (first list1)]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(null? list1) 0]\n    [(and (number? (car list1)) (negative? (car list1)))\n     (max (car list1) (largest_neg (cdr list1)))]\n    [else (largest_neg (cdr list1))]))\n",
    "  (cond\n    [(null? list1) '()]\n    [(< (car list1) 0) (max (car list1) (largest_neg (cdr list1)))]\n    [else (largest_neg (cdr list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(and (negative? (first list1)) (positive? (second list1))) (largest_neg (rest list1))]\n    [(and (negative? (first list1)) (negative? (second list1))) (max (first list1) (largest_neg (rest list1)))]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(null? list1) 0]\n    [(and (number? (car list1)) (negative? (car list1)))\n     (max (car list1) (largest_neg (cdr list1)))]\n    [else (largest_neg (cdr list1))]))\n",
    "  (cond\n    [(empty? list1) '()]\n    [(and (negative? (first list1)) (empty? (rest list1))) (first list1)]\n    [(and (negative? (first list1)) (not (empty? (rest list1))))\n     (if (&gt; (first list1) (largest_neg (rest list1)))\n         (first list1)\n         (largest_neg (rest list1)))]\n    [else (largest_neg (rest list1))]))\n</code>\nI am getting the following error:\n<code>application: not a procedure;\n expected a procedure that can be applied to arguments\n  given: #&lt;void&gt;\n  arguments...:\n   '()\n</code>\nI am not sure what is wrong with my code.\n\n\nA:\n\nThe problem is that you're using <code>empty?</code> to check if the list is empty, but that's not the correct way to do it. The correct way is to use <code>null?</code>, so change this:\n<code>(empty? list1)\n</code>\nto this:\n<code>(null? list1)\n</code>\n",
    "  (cond\n    [(empty? list1) 0]\n    [(and (negative? (first list1))\n          (or (positive? (second list1))\n              (empty? (rest list1))))\n     (first list1)]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(null? list1) '()]\n    [(and (negative? (car list1)) (null? (cdr list1))) (car list1)]\n    [(and (negative? (car list1)) (negative? (cadr list1))) (max (car list1) (cadr list1))]\n    [else (largest_neg (cdr list1))]))\n",
    "  (cond\n    [(empty? list1) \"No negative numbers\"]\n    [(and (negative? (first list1)) (not (negative? (second list1)))) (first list1)]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(empty? list1) '()]\n    [(negative? (first list1)) (first list1)]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(null? list1) 0]\n    [(and (negative? (car list1))\n          (or (positive? (cadr list1))\n              (null? (cadr list1))))\n     (car list1)]\n    [else (largest_neg (cdr list1))]))\n",
    "  (cond\n    [(empty? list1) (error \"No negative numbers in list\")]\n    [(and (negative? (first list1)) (empty? (rest list1))) (first list1)]\n    [(and (negative? (first list1)) (negative? (largest_neg (rest list1)))) (first list1)]\n    [(and (negative? (first list1)) (positive? (largest_neg (rest list1)))) (largest_neg (rest list1))]\n    [(and (positive? (first list1)) (negative? (largest_neg (rest list1)))) (largest_neg (rest list1))]\n    [(and (positive? (first list1)) (positive? (largest_neg (rest list1)))) (error \"No negative numbers in list\")]))\n",
    "  (cond\n    [(empty? list1) '()]\n    [(negative? (first list1)) (first list1)]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(empty? list1) '()]\n    [(< (first list1) 0) (first list1)]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(and (negative? (first list1)) (or (empty? (rest list1)) (positive? (first (rest list1))))) (first list1)]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(and (negative? (first list1)) (positive? (first (rest list1)))) (largest_neg (rest list1))]\n    [(and (negative? (first list1)) (negative? (first (rest list1)))) (max (first list1) (largest_neg (rest list1)))]\n    [(and (positive? (first list1)) (negative? (first (rest list1)))) (max (first list1) (largest_neg (rest list1)))]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(null? list1) '()]\n    [(< (car list1) 0) (cons (car list1) (largest_neg (cdr list1)))]\n    [else (largest_neg (cdr list1))]))\n",
    "  (cond\n    [(null? list1) (error \"Empty list\")]\n    [(< (car list1) 0) (largest_neg (cdr list1))]\n    [(> (car list1) 0) (largest_neg (cdr list1))]\n    [else (car list1)]))\n",
    "  (cond\n    [(empty? list1) (error \"No negative numbers in list\")]\n    [(< (first list1) 0) (first list1)]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(empty? list1) '()]\n    [(and (negative? (first list1)) (empty? (rest list1))) (first list1)]\n    [(and (negative? (first list1)) (negative? (first (rest list1))))\n     (if (> (first list1) (first (rest list1)))\n         (first list1)\n         (first (rest list1)))]\n    [(and (negative? (first list1)) (positive? (first (rest list1))))\n     (largest_neg (rest list1))]\n    [(and (positive? (first list1)) (negative? (first (rest list1))))\n     (if (> (first list1) (first (rest list1)))\n         (first list1)\n         (first (rest list1)))]\n    [(and (positive? (first list1)) (positive? (first (rest list1))))\n     (largest_neg (rest list1))]))\n",
    "  (cond\n    [(empty? list1) (error \"list is empty\")]\n    [(negative? (first list1)) (first list1)]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(null? list1) 0]\n    [(and (not (null? list1)) (negative? (car list1))) (max (car list1) (largest_neg (cdr list1)))]\n    [(and (not (null? list1)) (positive? (car list1))) (largest_neg (cdr list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(and (negative? (first list1)) (positive? (largest_neg (rest list1)))) (first list1)]\n    [(and (positive? (first list1)) (negative? (largest_neg (rest list1)))) (largest_neg (rest list1))]\n    [(and (positive? (first list1)) (positive? (largest_neg (rest list1)))) 0]\n    [(and (negative? (first list1)) (negative? (largest_neg (rest list1)))) (if (> (first list1) (largest_neg (rest list1))) (first list1) (largest_neg (rest list1)))]))\n",
    "  (cond\n    [(empty? list1) '()]\n    [(< (first list1) 0) (first list1)]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(null? list1) 0]\n    [(and (negative? (car list1)) (positive? (cadr list1))) (largest_neg (cdr list1))]\n    [(and (positive? (car list1)) (negative? (cadr list1))) (largest_neg (cdr list1))]\n    [(and (negative? (car list1)) (negative? (cadr list1))) (max (car list1) (largest_neg (cdr list1)))]\n    [else (largest_neg (cdr list1))]))\n",
    "  (cond\n    [(null? list1) 0]\n    [(and (negative? (car list1))\n          (or (positive? (cadr list1))\n              (null? (cadr list1))))\n     (car list1)]\n    [else (largest_neg (cdr list1))]))\n",
    "  (cond\n    [(null? list1) '()]\n    [(and (negative? (car list1)) (null? (cdr list1))) (car list1)]\n    [(and (negative? (car list1)) (negative? (cadr list1))) (if (> (car list1) (cadr list1)) (car list1) (cadr list1))]\n    [(and (negative? (car list1)) (positive? (cadr list1))) (car list1)]\n    [(and (positive? (car list1)) (negative? (cadr list1))) (cadr list1)]\n    [else (largest_neg (cdr list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(and (negative? (first list1)) (positive? (second list1))) (first list1)]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(null? list1) '()]\n    [(not (number? (car list1))) (largest_neg (cdr list1))]\n    [(and (number? (car list1)) (< (car list1) 0)) (car list1)]\n    [else (largest_neg (cdr list1))]))\n",
    "  (cond\n    [(null? list1) 0]\n    [(and (negative? (car list1)) (positive? (cadr list1))) (largest_neg (cdr list1))]\n    [(and (negative? (car list1)) (negative? (cadr list1))) (largest_neg (cons (car list1) (cdr (cdr list1))))]\n    [(and (positive? (car list1)) (negative? (cadr list1))) (largest_neg (cons (cadr list1) (cdr (cdr list1))))]\n    [(and (positive? (car list1)) (positive? (cadr list1))) (largest_neg (cdr list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(negative? (first list1)) (max (first list1) (largest_neg (rest list1)))]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(empty? list1) (error \"Empty list\")]\n    [(negative? (first list1)) (first list1)]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(null? list1) (error \"List is empty\")]\n    [(< (car list1) 0) (car list1)]\n    [else (largest_neg (cdr list1))]))\n",
    "  (cond\n    [(empty? list1) '()]\n    [(and (negative? (first list1)) (not (empty? (rest list1))))\n     (if (> (first list1) (largest_neg (rest list1)))\n         (first list1)\n         (largest_neg (rest list1)))]\n    [(and (negative? (first list1)) (empty? (rest list1))) (first list1)]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(and (negative? (first list1)) (positive? (second list1))) (first list1)]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(empty? list1) (error \"empty list\")]\n    [(and (negative? (first list1)) (empty? (rest list1))) (first list1)]\n    [(and (negative? (first list1)) (not (empty? (rest list1)))) (max (first list1) (largest_neg (rest list1)))]\n    [(and (not (negative? (first list1))) (empty? (rest list1))) (error \"no negative numbers\")]\n    [(and (not (negative? (first list1))) (not (empty? (rest list1)))) (largest_neg (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(and (positive? (first list1)) (largest_neg (rest list1))) (largest_neg (rest list1))]\n    [(and (negative? (first list1)) (largest_neg (rest list1))) (if (&gt; (first list1) (largest_neg (rest list1))) (first list1) (largest_neg (rest list1)))]\n    [else (first list1)]))\n</code>\nI am getting the following error:\n<code>application: not a procedure;\n expected a procedure that can be applied to arguments\n  given: #&lt;procedure:largest_neg&gt;\n  arguments...:\n   '(-2 -3 -4)\n</code>\nI am not sure what I am doing wrong.\n\n\nA:\n\nYou are using <code>&gt;</code> instead of <code>&lt;</code> in the comparison.\n",
    "  (cond\n    [(empty? list1) 0]\n    [(and (negative? (first list1)) (or (positive? (first (rest list1))) (zero? (first (rest list1))))) (first list1)]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(null? list1) 0]\n    [(and (negative? (car list1)) (positive? (cadr list1))) (largest_neg (cdr list1))]\n    [(and (positive? (car list1)) (negative? (cadr list1))) (largest_neg (cdr list1))]\n    [(and (negative? (car list1)) (negative? (cadr list1))) (max (car list1) (largest_neg (cdr list1)))]\n    [else (largest_neg (cdr list1))]))\n",
    "  (cond\n    [(empty? list1) '()]\n    [(and (negative? (first list1)) (not (negative? (second list1)))) (first list1)]\n    [else (largest_neg (rest list1))]))\n",
    "  (define (largest_neg_helper list1 largest)\n    (cond\n      [(empty? list1) largest]\n      [(and (negative? (first list1)) (> (first list1) largest)) (largest_neg_helper (rest list1) (first list1))]\n      [else (largest_neg_helper (rest list1) largest)]))\n  (largest_neg_helper list1 -1000000))\n",
    "  (cond\n    [(empty? list1) '()]\n    [(< (first list1) 0) (first list1)]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(null? list1) '()]\n    [(and (not (null? list1)) (negative? (car list1))) (cons (car list1) (largest_neg (cdr list1)))]\n    [(and (not (null? list1)) (not (negative? (car list1)))) (largest_neg (cdr list1))]))\n",
    "  (cond\n    [(null? list1) '()]\n    [(< (car list1) 0) (cons (car list1) (largest_neg (cdr list1)))]\n    [else (largest_neg (cdr list1))]))\n",
    "  (cond\n    [(empty? list1) '()]\n    [(negative? (first list1)) (first list1)]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(empty? list1) (error \"List is empty\")]\n    [(< (first list1) 0) (first list1)]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(null? list1) '()]\n    [(< (car list1) 0) (max (car list1) (largest_neg (cdr list1)))]\n    [else (largest_neg (cdr list1))]))\n",
    "  (cond\n    [(null? list1) '()]\n    [(< (car list1) 0) (cons (car list1) (largest_neg (cdr list1)))]\n    [else (largest_neg (cdr list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(and (negative? (first list1)) (positive? (second list1))) (first list1)]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(empty? list1) '()]\n    [(and (negative? (first list1)) (not (negative? (second list1)))) (first list1)]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(null? list1) '()]\n    [(and (number? (car list1))\n          (&lt; (car list1) 0))\n     (if (&gt; (car list1) (largest_neg (cdr list1)))\n         (car list1)\n         (largest_neg (cdr list1)))]\n    [else (largest_neg (cdr list1))]))\n",
    "  (cond\n    [(empty? list1) (error \"empty list\")]\n    [(negative? (first list1)) (first list1)]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(empty? list1) '()]\n    [(negative? (first list1)) (first list1)]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(empty? list1) '()]\n    [(< (first list1) 0) (first list1)]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(null? list1) '()]\n    [(and (number? (car list1)) (negative? (car list1))) (max (car list1) (largest_neg (cdr list1)))]\n    [else (largest_neg (cdr list1))]))\n",
    "  (cond\n    [(empty? list1) (error \"No negative numbers in list\")]\n    [(and (negative? (first list1)) (empty? (rest list1))) (first list1)]\n    [(and (negative? (first list1)) (not (empty? (rest list1))))\n     (if (> (first list1) (largest_neg (rest list1)))\n         (first list1)\n         (largest_neg (rest list1)))]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(null? list1) '()]\n    [(< (car list1) 0) (cons (car list1) (largest_neg (cdr list1)))]\n    [else (largest_neg (cdr list1))]))\n",
    "  (cond\n    [(null? list1) '()]\n    [(and (number? (car list1)) (negative? (car list1))) (cons (car list1) (largest_neg (cdr list1)))]\n    [else (largest_neg (cdr list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(and (negative? (first list1))\n          (or (zero? (largest_neg (rest list1)))\n              (positive? (largest_neg (rest list1)))))\n     (first list1)]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(and (negative? (first list1)) (positive? (second list1))) (largest_neg (rest list1))]\n    [(and (negative? (first list1)) (negative? (second list1))) (max (first list1) (largest_neg (rest list1)))]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(empty? list1) '()]\n    [(and (negative? (first list1)) (empty? (rest list1))) (first list1)]\n    [(and (negative? (first list1)) (not (empty? (rest list1)))) (max (first list1) (largest_neg (rest list1)))]\n    [(and (not (negative? (first list1))) (empty? (rest list1))) '()]\n    [(and (not (negative? (first list1))) (not (empty? (rest list1)))) (largest_neg (rest list1))]))\n",
    "  (cond\n    [(empty? list1) '()]\n    [(negative? (first list1)) (first list1)]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(empty? list1) '()]\n    [(< (first list1) 0)\n     (cond\n       [(< (first list1) (largest_neg (rest list1))) (first list1)]\n       [else (largest_neg (rest list1))])]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(null? list1) 0]\n    [(< (car list1) 0) (max (car list1) (largest_neg (cdr list1)))]\n    [else (largest_neg (cdr list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(and (negative? (first list1))\n          (or (empty? (rest list1))\n              (negative? (first (rest list1)))))\n     (first list1)]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(empty? list1) (error \"List is empty\")]\n    [(negative? (first list1)) (first list1)]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(and (negative? (first list1)) (positive? (first (rest list1)))) (largest_neg (rest list1))]\n    [(and (positive? (first list1)) (negative? (first (rest list1)))) (largest_neg (rest list1))]\n    [(and (negative? (first list1)) (negative? (first (rest list1)))) (max (first list1) (largest_neg (rest list1)))]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(empty? list1) false]\n    [(negative? (first list1)) (if (negative? (largest_neg (rest list1)))\n                                   (largest_neg (rest list1))\n                                   (first list1))]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(and (negative? (first list1)) (positive? (second list1))) (largest_neg (rest list1))]\n    [(and (negative? (first list1)) (negative? (second list1))) (max (first list1) (largest_neg (rest list1)))]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(empty? list1) (error \"List is empty\")]\n    [(negative? (first list1)) (first list1)]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(null? list1) '()]\n    [(and (negative? (car list1)) (null? (cdr list1))) (car list1)]\n    [(and (negative? (car list1)) (not (null? (cdr list1))))\n     (if (> (car list1) (largest_neg (cdr list1)))\n         (car list1)\n         (largest_neg (cdr list1)))]\n    [else (largest_neg (cdr list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(and (negative? (first list1)) (positive? (first (rest list1)))) (first list1)]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(and (negative? (first list1)) (positive? (first (rest list1)))) (first list1)]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(< (first list1) 0) (max (first list1) (largest_neg (rest list1)))]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(and (negative? (first list1)) (positive? (second list1))) (first list1)]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(null? list1) 0]\n    [(and (negative? (car list1)) (positive? (cadr list1))) (largest_neg (cdr list1))]\n    [(and (negative? (car list1)) (negative? (cadr list1))) (max (car list1) (largest_neg (cdr list1)))]\n    [else (largest_neg (cdr list1))]))\n",
    "  (cond\n    [(null? list1) '()]\n    [(and (number? (car list1)) (negative? (car list1))) (cons (car list1) (largest_neg (cdr list1)))]\n    [else (largest_neg (cdr list1))]))\n",
    "  (cond\n    [(empty? list1) #f]\n    [(and (negative? (first list1)) (largest_neg (rest list1)))\n     (if (&lt; (first list1) (largest_neg (rest list1)))\n         (first list1)\n         (largest_neg (rest list1)))]\n    [(largest_neg (rest list1)) (largest_neg (rest list1))]))\n",
    "  (cond\n    [(empty? list1) (error \"list is empty\")]\n    [(negative? (first list1)) (first list1)]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(null? list1) \"No negative numbers\"]\n    [(and (number? (car list1)) (negative? (car list1))) (max (car list1) (largest_neg (cdr list1)))]\n    [else (largest_neg (cdr list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(and (number? (first list1)) (< (first list1) 0)) (max (first list1) (largest_neg (rest list1)))]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(empty? list1) (error \"No negative numbers in list\")]\n    [(negative? (first list1)) (largest_neg (rest list1))]\n    [else (first list1)]))\n",
    "  (cond\n    [(empty? list1) '()]\n    [(and (negative? (first list1)) (not (negative? (second list1)))) (first list1)]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(empty? list1) \"No negative numbers in list\"]\n    [(and (negative? (first list1)) (not (negative? (second list1)))) (first list1)]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(and (negative? (first list1))\n          (or (positive? (first (rest list1)))\n              (zero? (first (rest list1)))))\n     (first list1)]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(empty? list1) '()]\n    [(negative? (first list1)) (first list1)]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(and (negative? (first list1))\n          (or (positive? (second list1))\n              (zero? (second list1))))\n     (first list1)]\n    [else\n     (largest_neg (rest list1))]))\n",
    "  (cond\n    [(empty? list1) '()]\n    [(negative? (first list1)) (first list1)]\n    [else (largest_neg (rest list1))]))\n",
    "  (cond\n    [(null? list1) 0]\n    [(and (negative? (car list1)) (positive? (cadr list1))) (largest_neg (cdr list1))]\n    [(and (positive? (car list1)) (negative? (cadr list1))) (largest_neg (cdr list1))]\n    [(and (negative? (car list1)) (negative? (cadr list1))) (max (car list1) (largest_neg (cdr list1)))]\n    [(and (positive? (car list1)) (positive? (cadr list1))) (largest_neg (cdr list1))]))\n",
    "  (cond\n    [(empty? list1) (error \"Empty list\")]\n    [(< (first list1) 0) (first list1)]\n    [else (largest_neg (rest list1))]))\n"
  ]
}
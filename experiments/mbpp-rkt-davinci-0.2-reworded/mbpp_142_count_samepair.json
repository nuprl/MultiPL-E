{
  "name": "mbpp_142_count_samepair",
  "language": "rkt",
  "prompt": "#lang racket\n\n;; Write a function to count number items that are identical in the same position of three given lists.\n(define (count_samepair list1 list2 list3)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_142_count_samepair.py",
  "prompt_terminology": "reworded",
  "tests": "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate count_samepair))\n    (check-equal? (candidate (list 1 2 3 4 5 6 7 8) (list 2 2 3 1 2 6 7 9) (list 2 1 3 1 2 6 7 9)) 3)\n    (check-equal? (candidate (list 1 2 3 4 5 6 7 8) (list 2 2 3 1 2 6 7 8) (list 2 1 3 1 2 6 7 8)) 4)\n    (check-equal? (candidate (list 1 2 3 4 2 6 7 8) (list 2 2 3 1 2 6 7 8) (list 2 1 3 1 2 6 7 8)) 5)\n))\n\n(test-humaneval)",
  "stop_tokens": [
    "\n(define ",
    "\n#|",
    "\n;",
    "\n("
  ],
  "completions": [
    "  (cond\n    [(empty? list1) 0]\n    [(and (equal? (first list1) (first list2))\n          (equal? (first list1) (first list3)))\n     (+ 1 (count_samepair (rest list1) (rest list2) (rest list3)))]\n    [else (count_samepair (rest list1) (rest list2) (rest list3))]))\n",
    "  (if (or (null? list1) (null? list2) (null? list3))\n      0\n      (+ (if (equal? (car list1) (car list2) (car list3)) 1 0)\n         (count_samepair (cdr list1) (cdr list2) (cdr list3)))))\n",
    "  (cond\n    [(empty? list1) 0]\n    [else\n     (+ (if (equal? (first list1) (first list2) (first list3)) 1 0)\n        (count_samepair (rest list1) (rest list2) (rest list3)))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(and (equal? (first list1) (first list2)) (equal? (first list1) (first list3)))\n     (+ 1 (count_samepair (rest list1) (rest list2) (rest list3)))]\n    [else (count_samepair (rest list1) (rest list2) (rest list3))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(empty? list2) 0]\n    [(empty? list3) 0]\n    [(and (equal? (first list1) (first list2)) (equal? (first list2) (first list3)))\n     (+ 1 (count_samepair (rest list1) (rest list2) (rest list3)))]\n    [else (count_samepair (rest list1) (rest list2) (rest list3))]))\n",
    "  (cond ((and (null? list1) (null? list2) (null? list3)) 0)\n        ((and (equal? (car list1) (car list2)) (equal? (car list2) (car list3)))\n         (+ 1 (count_samepair (cdr list1) (cdr list2) (cdr list3))))\n        (else (count_samepair (cdr list1) (cdr list2) (cdr list3)))))\n",
    "  (cond\n    [(null? list1) 0]\n    [(and (equal? (car list1) (car list2)) (equal? (car list1) (car list3)))\n     (+ 1 (count_samepair (cdr list1) (cdr list2) (cdr list3)))]\n    [else (count_samepair (cdr list1) (cdr list2) (cdr list3))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(and (equal? (first list1) (first list2)) (equal? (first list1) (first list3)))\n     (+ 1 (count_samepair (rest list1) (rest list2) (rest list3)))]\n    [else (count_samepair (rest list1) (rest list2) (rest list3))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(empty? list2) 0]\n    [(empty? list3) 0]\n    [else\n     (cond\n       [(equal? (first list1) (first list2) (first list3))\n        (+ 1 (count_samepair (rest list1) (rest list2) (rest list3)))]\n       [else (count_samepair (rest list1) (rest list2) (rest list3))])]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(empty? list2) 0]\n    [(empty? list3) 0]\n    [(equal? (first list1) (first list2) (first list3))\n     (+ 1 (count_samepair (rest list1) (rest list2) (rest list3)))]\n    [else (count_samepair (rest list1) (rest list2) (rest list3))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(and (equal? (first list1) (first list2)) (equal? (first list1) (first list3)))\n     (+ 1 (count_samepair (rest list1) (rest list2) (rest list3)))]\n    [else (count_samepair (rest list1) (rest list2) (rest list3))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(empty? list2) 0]\n    [(empty? list3) 0]\n    [else\n     (cond\n       [(equal? (first list1) (first list2) (first list3)) (+ 1 (count_samepair (rest list1) (rest list2) (rest list3)))]\n       [else (count_samepair (rest list1) (rest list2) (rest list3))])]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(empty? list2) 0]\n    [(empty? list3) 0]\n    [else\n     (cond\n       [(equal? (first list1) (first list2) (first list3)) (+ 1 (count_samepair (rest list1) (rest list2) (rest list3)))]\n       [else (count_samepair (rest list1) (rest list2) (rest list3))])]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(and (equal? (first list1) (first list2))\n          (equal? (first list1) (first list3)))\n     (+ 1 (count_samepair (rest list1) (rest list2) (rest list3)))]\n    [else (count_samepair (rest list1) (rest list2) (rest list3))]))\n",
    "  (if (or (null? list1) (null? list2) (null? list3))\n      0\n      (+ (if (equal? (car list1) (car list2) (car list3)) 1 0)\n         (count_samepair (cdr list1) (cdr list2) (cdr list3)))))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(equal? (first list1) (first list2) (first list3)) (+ 1 (count_samepair (rest list1) (rest list2) (rest list3)))]\n    [else (count_samepair (rest list1) (rest list2) (rest list3))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(and (equal? (first list1) (first list2))\n          (equal? (first list1) (first list3)))\n     (+ 1 (count_samepair (rest list1) (rest list2) (rest list3)))]\n    [else (count_samepair (rest list1) (rest list2) (rest list3))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(and (equal? (first list1) (first list2))\n          (equal? (first list1) (first list3)))\n     (+ 1 (count_samepair (rest list1) (rest list2) (rest list3)))]\n    [else (count_samepair (rest list1) (rest list2) (rest list3))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(and (equal? (first list1) (first list2)) (equal? (first list1) (first list3)))\n     (+ 1 (count_samepair (rest list1) (rest list2) (rest list3)))]\n    [else (count_samepair (rest list1) (rest list2) (rest list3))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(equal? (first list1) (first list2) (first list3))\n     (+ 1 (count_samepair (rest list1) (rest list2) (rest list3)))]\n    [else (count_samepair (rest list1) (rest list2) (rest list3))]))\n"
  ]
}
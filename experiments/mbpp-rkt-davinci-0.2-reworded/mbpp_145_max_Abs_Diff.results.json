{
  "name": "mbpp_145_max_Abs_Diff",
  "language": "rkt",
  "prompt": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_145_max_Abs_Diff.py",
  "prompt_terminology": "reworded",
  "tests": "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
  "stop_tokens": [
    "\n(define ",
    "\n#|",
    "\n;",
    "\n("
  ],
  "results": [
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (let ([max_diff -1])\n    (for ([i (in-range (length arr))])\n      (for ([j (in-range (length arr))])\n        (when (and (&lt; i j) (&gt; (abs (- (list-ref arr i) (list-ref arr j))) max_diff))\n          (set! max_diff (abs (- (list-ref arr i) (list-ref arr j)))))))\n    max_diff))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1665510128,
      "stdout": "",
      "stderr": "/tmp/tmpq4yjb_ya.rkt:5:2: read-syntax: expected a `)` to close `(`\n  possible cause: indentation suggests a missing `)` before line 12\n  context...:\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:186:17: body\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:183:2: wrap-internal\n   /work/arjunguha-research-group/software/racket/collects/racket/../syntax/module-reader.rkt:67:9: wrap-internal/wrapper\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (define (max_Abs_Diff_helper arr max_diff)\n    (if (null? arr)\n        max_diff\n        (let ([curr_diff (abs (- (car arr) (car (cdr arr))))])\n          (if (&gt; curr_diff max_diff)\n              (max_Abs_Diff_helper (cdr arr) curr_diff)\n              (max_Abs_Diff_helper (cdr arr) max_diff)))))\n  (max_Abs_Diff_helper arr 0))\n</code>\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1665510128,
      "stdout": "",
      "stderr": "/tmp/tmpzd5hbyy3.rkt:4:0: read-syntax: expected a `)` to close `(`\n  possible cause: indentation suggests a missing `)` before line 13\n  context...:\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:186:17: body\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:183:2: wrap-internal\n   /work/arjunguha-research-group/software/racket/collects/racket/../syntax/module-reader.rkt:67:9: wrap-internal/wrapper\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (let ([max (apply max arr)]\n        [min (apply min arr)])\n    (- max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1665510129,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (define (max_Abs_Diff_helper arr max_diff)\n    (cond\n      [(empty? arr) max_diff]\n      [(empty? (rest arr)) max_diff]\n      [else (max_Abs_Diff_helper (rest arr) (max max_diff (abs (- (first arr) (second arr)))))]))\n  (max_Abs_Diff_helper arr 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1665510129,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpr_nt4s8m.rkt:18:4\nactual:     6\nexpected:   8\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpr_nt4s8m.rkt:19:4\nactual:     1\nexpected:   2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (if (null? arr)\n      0\n      (let ([max (apply max arr)]\n            [min (apply min arr)])\n        (- max min))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1665510129,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (let ([max (apply max arr)]\n        [min (apply min arr)])\n    (- max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1665510129,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (let ([max_diff (apply max (map (lambda (x) (abs (- (apply max arr) x))) arr))])\n    (if (zero? max_diff)\n        (error \"List is empty or all elements are equal\")\n        max_diff)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1665510129,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (let ([max (apply max arr)]\n        [min (apply min arr)])\n    (- max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1665510129,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (let ([max_diff (apply max (map (lambda (x y) (abs (- x y))) arr (cdr arr)))])\n    (if (null? (cdr arr))\n        0\n        max_diff)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1665510129,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp0nxfj4g6.rkt:15:4\n\nmap: all lists must have same size\n  first list length: 4\n  other list length: 3\n  procedure: #<procedure:...tmp/tmp0nxfj4g6.rkt:5:34>\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp0nxfj4g6.rkt:16:4\n\nmap: all lists must have same size\n  first list length: 5\n  other list length: 4\n  procedure: #<procedure:...tmp/tmp0nxfj4g6.rkt:5:34>\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp0nxfj4g6.rkt:17:4\n\nmap: all lists must have same size\n  first list length: 3\n  other list length: 2\n  procedure: #<procedure:...tmp/tmp0nxfj4g6.rkt:5:34>\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (let ([max_diff 0]\n        [max_num (car arr)]\n        [min_num (car arr)])\n    (for ([i (in-list (cdr arr))])\n      (if (> i max_num)\n          (set! max_num i))\n      (if (< i min_num)\n          (set! min_num i)))\n    (if (> (- max_num min_num) max_diff)\n        (set! max_diff (- max_num min_num)))\n    max_diff))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1665510129,
      "stdout": "",
      "stderr": "/tmp/tmpsvtnbqj9.rkt:9:6: if: missing an \"else\" expression\n  in: (if (> i max_num) (set! max_num i))\n  location...:\n   /tmp/tmpsvtnbqj9.rkt:9:6\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (let ([max (apply max arr)]\n        [min (apply min arr)])\n    (- max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1665510129,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (define (max_Abs_Diff_helper arr max_diff)\n    (if (null? arr)\n        max_diff\n        (let ([diff (abs (- (car arr) (car (cdr arr))))])\n          (if (> diff max_diff)\n              (max_Abs_Diff_helper (cdr arr) diff)\n              (max_Abs_Diff_helper (cdr arr) max_diff)))))\n  (max_Abs_Diff_helper arr 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1665510129,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpd2kap6h3.rkt:19:4\n\ncar: contract violation\n  expected: pair?\n  given: '()\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpd2kap6h3.rkt:20:4\n\ncar: contract violation\n  expected: pair?\n  given: '()\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpd2kap6h3.rkt:21:4\n\ncar: contract violation\n  expected: pair?\n  given: '()\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (let ([max_diff 0])\n    (for ([i (in-range (length arr))])\n      (for ([j (in-range (length arr))])\n        (when (&gt; (abs (- (list-ref arr i) (list-ref arr j))) max_diff)\n          (set! max_diff (abs (- (list-ref arr i) (list-ref arr j)))))))\n    max_diff))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1665510128,
      "stdout": "",
      "stderr": "/tmp/tmp_8nqb5ql.rkt:4:0: read-syntax: expected a `)` to close `(`\n  possible cause: indentation suggests a missing `)` before line 12\n  context...:\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:186:17: body\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:183:2: wrap-internal\n   /work/arjunguha-research-group/software/racket/collects/racket/../syntax/module-reader.rkt:67:9: wrap-internal/wrapper\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (define (max_Abs_Diff_helper arr max_diff)\n    (cond\n      [(empty? arr) max_diff]\n      [else (max_Abs_Diff_helper (rest arr) (max (abs (- (first arr) (first (rest arr)))) max_diff))]))\n  (max_Abs_Diff_helper arr 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1665510129,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpg2d_zkgv.rkt:16:4\n\nfirst: contract violation\n  expected: (and/c list? (not/c empty?))\n  given: '()\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpg2d_zkgv.rkt:17:4\n\nfirst: contract violation\n  expected: (and/c list? (not/c empty?))\n  given: '()\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpg2d_zkgv.rkt:18:4\n\nfirst: contract violation\n  expected: (and/c list? (not/c empty?))\n  given: '()\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (let ([max (apply max arr)]\n        [min (apply min arr)])\n    (- max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1665510129,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (define (max_Abs_Diff_helper arr max_diff)\n    (if (null? arr)\n        max_diff\n        (let ([diff (abs (- (car arr) (car (cdr arr))))])\n          (if (&gt; diff max_diff)\n              (max_Abs_Diff_helper (cdr arr) diff)\n              (max_Abs_Diff_helper (cdr arr) max_diff)))))\n  (max_Abs_Diff_helper arr 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1665510128,
      "stdout": "",
      "stderr": "/tmp/tmpkvx9i5kd.rkt:4:0: read-syntax: expected a `)` to close `(`\n  possible cause: indentation suggests a missing `)` before line 14\n  context...:\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:186:17: body\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:183:2: wrap-internal\n   /work/arjunguha-research-group/software/racket/collects/racket/../syntax/module-reader.rkt:67:9: wrap-internal/wrapper\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (let ([max_diff -1])\n    (for ([i (in-range (length arr))])\n      (for ([j (in-range (length arr))])\n        (when (and (not (= i j))\n                   (> (abs (- (list-ref arr i) (list-ref arr j))) max_diff))\n          (set! max_diff (abs (- (list-ref arr i) (list-ref arr j)))))))\n    max_diff))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1665510129,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (let ([max (apply max arr)]\n        [min (apply min arr)])\n    (- max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1665510129,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (let loop ([arr arr] [max_diff 0])\n    (if (null? arr)\n        max_diff\n        (let ([diff (abs (- (car arr) (cadr arr)))])\n          (if (> diff max_diff)\n              (loop (cdr arr) diff)\n              (loop (cdr arr) max_diff))))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1665510129,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp8u_fyhjb.rkt:18:4\n\ncadr: contract violation\n  expected: (cons/c any/c pair?)\n  given: '(3)\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp8u_fyhjb.rkt:19:4\n\ncadr: contract violation\n  expected: (cons/c any/c pair?)\n  given: '(1)\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp8u_fyhjb.rkt:20:4\n\ncadr: contract violation\n  expected: (cons/c any/c pair?)\n  given: '(1)\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (let ([max_diff 0])\n    (for ([i (in-range (length arr))])\n      (for ([j (in-range (length arr))])\n        (when (> (abs (- (list-ref arr i) (list-ref arr j))) max_diff)\n          (set! max_diff (abs (- (list-ref arr i) (list-ref arr j)))))))\n    max_diff))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1665510129,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (let ([max_diff (apply max (map abs (map - arr (cdr arr))))])\n    (if (zero? max_diff)\n        (error \"No difference between elements\")\n        max_diff)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1666123015,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmprn1uipdh.rkt:15:4\n\nmap: all lists must have same size\n  first list length: 4\n  other list length: 3\n  procedure: #<procedure:->\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmprn1uipdh.rkt:16:4\n\nmap: all lists must have same size\n  first list length: 5\n  other list length: 4\n  procedure: #<procedure:->\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmprn1uipdh.rkt:17:4\n\nmap: all lists must have same size\n  first list length: 3\n  other list length: 2\n  procedure: #<procedure:->\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (let ([max_diff -1])\n    (for ([i (in-range (length arr))])\n      (for ([j (in-range (length arr))])\n        (if (and (> i j)\n                 (> (abs (- (list-ref arr i) (list-ref arr j))) max_diff))\n            (set! max_diff (abs (- (list-ref arr i) (list-ref arr j)))))))\n    max_diff))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1666123014,
      "stdout": "",
      "stderr": "/tmp/tmpv5ar63pm.rkt:8:8: if: missing an \"else\" expression\n  in: (if (and (> i j) (> (abs (- (list-ref arr i) (list-ref arr j))) max_diff)) (set! max_diff (abs (- (list-ref arr i) (list-ref arr j)))))\n  location...:\n   /tmp/tmpv5ar63pm.rkt:8:8\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (define (max_Abs_Diff_helper arr max_diff)\n    (cond\n      [(empty? arr) max_diff]\n      [(empty? (rest arr)) max_diff]\n      [else (max_Abs_Diff_helper (rest arr) (max (abs (- (first arr) (second arr))) max_diff))]))\n  (max_Abs_Diff_helper arr 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1666123015,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_tfjih90.rkt:18:4\nactual:     6\nexpected:   8\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_tfjih90.rkt:19:4\nactual:     1\nexpected:   2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (apply max (map (lambda (x) (abs (- x (apply min arr)))) arr)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1666123015,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (let ([max_diff 0]\n        [min_val (car arr)])\n    (for ([i (in-list (cdr arr))])\n      (let ([diff (- i min_val)])\n        (if (&gt; diff max_diff)\n            (set! max_diff diff))))\n    max_diff))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1666123014,
      "stdout": "",
      "stderr": "/tmp/tmpf9yxemz0.rkt:4:0: read-syntax: expected a `)` to close `(`\n  possible cause: indentation suggests a missing `)` before line 13\n  context...:\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:186:17: body\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:183:2: wrap-internal\n   /work/arjunguha-research-group/software/racket/collects/racket/../syntax/module-reader.rkt:67:9: wrap-internal/wrapper\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (define (max_Abs_Diff_helper arr max_diff)\n    (cond\n      [(empty? arr) max_diff]\n      [else\n       (let ([first (first arr)]\n             [rest (rest arr)])\n         (max_Abs_Diff_helper rest (max max_diff (abs (- first (first rest))))))]))\n  (max_Abs_Diff_helper arr 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1666123014,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpy1ufe4ew.rkt:19:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 2\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpy1ufe4ew.rkt:20:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 9\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpy1ufe4ew.rkt:21:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 3\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (define (max_Abs_Diff_helper arr max_diff)\n    (cond\n      [(empty? arr) max_diff]\n      [(empty? (rest arr)) max_diff]\n      [else\n       (let* ([first (first arr)]\n              [second (first (rest arr))]\n              [diff (abs (- first second))])\n         (if (&gt; diff max_diff)\n             (max_Abs_Diff_helper (rest arr) diff)\n             (max_Abs_Diff_helper (rest arr) max_diff)))]))\n  (max_Abs_Diff_helper arr 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1666123014,
      "stdout": "",
      "stderr": "/tmp/tmpa8wllmih.rkt:15:56: read-syntax: missing `)` to close `(` on line 10, found instead `]`\n  context...:\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:186:17: body\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:183:2: wrap-internal\n   /work/arjunguha-research-group/software/racket/collects/racket/../syntax/module-reader.rkt:67:9: wrap-internal/wrapper\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (let ([max_diff 0])\n    (for ([i (in-range (length arr))])\n      (for ([j (in-range (length arr))])\n        (when (> (abs (- (list-ref arr i) (list-ref arr j))) max_diff)\n          (set! max_diff (abs (- (list-ref arr i) (list-ref arr j)))))))\n    max_diff))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1665510129,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (let ((max (apply max arr))\n        (min (apply min arr)))\n    (- max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1666123014,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (define (max_Abs_Diff_helper arr max_diff)\n    (if (null? arr)\n        max_diff\n        (let ([diff (abs (- (car arr) (car (cdr arr))))])\n          (if (&gt; diff max_diff)\n              (max_Abs_Diff_helper (cdr arr) diff)\n              (max_Abs_Diff_helper (cdr arr) max_diff)))))\n  (max_Abs_Diff_helper arr 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1665510128,
      "stdout": "",
      "stderr": "/tmp/tmpkvx9i5kd.rkt:4:0: read-syntax: expected a `)` to close `(`\n  possible cause: indentation suggests a missing `)` before line 14\n  context...:\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:186:17: body\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:183:2: wrap-internal\n   /work/arjunguha-research-group/software/racket/collects/racket/../syntax/module-reader.rkt:67:9: wrap-internal/wrapper\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (let* ([max (apply max arr)]\n         [min (apply min arr)])\n    (- max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1666123015,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (let ([max (apply max arr)]\n        [min (apply min arr)])\n    (- max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1665510129,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (define (max_Abs_Diff_helper arr max_diff)\n    (if (null? arr)\n        max_diff\n        (let* ([curr_diff (abs (- (car arr) (car (cdr arr))))]\n               [new_max_diff (if (> curr_diff max_diff) curr_diff max_diff)])\n          (max_Abs_Diff_helper (cdr arr) new_max_diff))))\n  (max_Abs_Diff_helper arr 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1666123015,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp9qk0tkmc.rkt:18:4\n\ncar: contract violation\n  expected: pair?\n  given: '()\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp9qk0tkmc.rkt:19:4\n\ncar: contract violation\n  expected: pair?\n  given: '()\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp9qk0tkmc.rkt:20:4\n\ncar: contract violation\n  expected: pair?\n  given: '()\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (let ([max (apply max arr)]\n        [min (apply min arr)])\n    (- max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1665510129,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (let ([max_diff (apply max (map abs (map - arr (cdr arr))))])\n    (if (zero? max_diff)\n        (error \"All elements are the same\")\n        max_diff)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1666123015,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpul1b59mz.rkt:15:4\n\nmap: all lists must have same size\n  first list length: 4\n  other list length: 3\n  procedure: #<procedure:->\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpul1b59mz.rkt:16:4\n\nmap: all lists must have same size\n  first list length: 5\n  other list length: 4\n  procedure: #<procedure:->\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpul1b59mz.rkt:17:4\n\nmap: all lists must have same size\n  first list length: 3\n  other list length: 2\n  procedure: #<procedure:->\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (let ([max_diff 0])\n    (for ([i (in-range (length arr))])\n      (for ([j (in-range (length arr))])\n        (when (> (abs (- (list-ref arr i) (list-ref arr j))) max_diff)\n          (set! max_diff (abs (- (list-ref arr i) (list-ref arr j)))))))\n    max_diff))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1665510129,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (let ([max (apply max arr)]\n        [min (apply min arr)])\n    (- max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1665510129,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (define (max_Abs_Diff_helper arr max_diff)\n    (cond\n      [(empty? arr) max_diff]\n      [(empty? (cdr arr)) max_diff]\n      [else\n       (define diff (abs (- (car arr) (cadr arr))))\n       (if (&gt; diff max_diff)\n           (max_Abs_Diff_helper (cdr arr) diff)\n           (max_Abs_Diff_helper (cdr arr) max_diff))]))\n  (max_Abs_Diff_helper arr 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1666123014,
      "stdout": "",
      "stderr": "/tmp/tmpwrdqstcl.rkt:13:52: read-syntax: missing `)` to close preceding `(`, found instead `]`\n  context...:\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:186:17: body\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:183:2: wrap-internal\n   /work/arjunguha-research-group/software/racket/collects/racket/../syntax/module-reader.rkt:67:9: wrap-internal/wrapper\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (define (max_Abs_Diff_helper arr max_diff)\n    (if (null? arr)\n        max_diff\n        (let ((diff (- (car arr) (cadr arr))))\n          (if (&gt; diff max_diff)\n              (max_Abs_Diff_helper (cdr arr) diff)\n              (max_Abs_Diff_helper (cdr arr) max_diff)))))\n  (max_Abs_Diff_helper arr 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1666123014,
      "stdout": "",
      "stderr": "/tmp/tmpvmgejf29.rkt:4:0: read-syntax: expected a `)` to close `(`\n  possible cause: indentation suggests a missing `)` before line 14\n  context...:\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:186:17: body\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:183:2: wrap-internal\n   /work/arjunguha-research-group/software/racket/collects/racket/../syntax/module-reader.rkt:67:9: wrap-internal/wrapper\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (define (max_Abs_Diff_helper arr max_diff)\n    (if (null? arr)\n        max_diff\n        (let ((diff (abs (- (car arr) (car (cdr arr))))))\n          (if (&gt; diff max_diff)\n              (max_Abs_Diff_helper (cdr arr) diff)\n              (max_Abs_Diff_helper (cdr arr) max_diff)))))\n  (max_Abs_Diff_helper arr 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1666123014,
      "stdout": "",
      "stderr": "/tmp/tmp4lh0wxmi.rkt:4:0: read-syntax: expected a `)` to close `(`\n  possible cause: indentation suggests a missing `)` before line 14\n  context...:\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:186:17: body\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:183:2: wrap-internal\n   /work/arjunguha-research-group/software/racket/collects/racket/../syntax/module-reader.rkt:67:9: wrap-internal/wrapper\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (define (max_Abs_Diff_helper arr max_diff)\n    (if (null? arr)\n        max_diff\n        (let ([diff (abs (- (car arr) (car (cdr arr))))])\n          (if (&gt; diff max_diff)\n              (max_Abs_Diff_helper (cdr arr) diff)\n              (max_Abs_Diff_helper (cdr arr) max_diff)))))\n  (max_Abs_Diff_helper arr 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1665510128,
      "stdout": "",
      "stderr": "/tmp/tmpkvx9i5kd.rkt:4:0: read-syntax: expected a `)` to close `(`\n  possible cause: indentation suggests a missing `)` before line 14\n  context...:\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:186:17: body\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:183:2: wrap-internal\n   /work/arjunguha-research-group/software/racket/collects/racket/../syntax/module-reader.rkt:67:9: wrap-internal/wrapper\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (define (max_Abs_Diff_helper arr max_diff)\n    (if (null? arr)\n        max_diff\n        (let ([diff (abs (- (car arr) (cadr arr)))])\n          (if (> diff max_diff)\n              (max_Abs_Diff_helper (cdr arr) diff)\n              (max_Abs_Diff_helper (cdr arr) max_diff)))))\n  (max_Abs_Diff_helper arr 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1666123015,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp7xyh2pxh.rkt:19:4\n\ncadr: contract violation\n  expected: (cons/c any/c pair?)\n  given: '(3)\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp7xyh2pxh.rkt:20:4\n\ncadr: contract violation\n  expected: (cons/c any/c pair?)\n  given: '(1)\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp7xyh2pxh.rkt:21:4\n\ncadr: contract violation\n  expected: (cons/c any/c pair?)\n  given: '(1)\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (cond\n    [(empty? arr) 0]\n    [(empty? (rest arr)) 0]\n    [else (max (abs (- (first arr) (second arr))) (max_Abs_Diff (rest arr)))]))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1666123015,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp3tov2686.rkt:16:4\nactual:     6\nexpected:   8\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp3tov2686.rkt:17:4\nactual:     1\nexpected:   2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (let ([max_diff 0])\n    (for ([i (in-range (length arr))])\n      (for ([j (in-range (add1 i) (length arr))])\n        (let ([diff (abs (- (list-ref arr i) (list-ref arr j)))])\n          (when (> diff max_diff)\n            (set! max_diff diff)))))\n    max_diff))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1666123015,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (let loop ([arr arr] [max_diff 0])\n    (cond [(empty? arr) max_diff]\n          [else (let ([diff (abs (- (first arr) (second arr)))])\n                  (if (&gt; diff max_diff)\n                      (loop (rest arr) diff)\n                      (loop (rest arr) max_diff)))])))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1666123014,
      "stdout": "",
      "stderr": "/tmp/tmp_v0_y6ic.rkt:10:50: read-syntax: missing `)` to close `(` on line 7, found instead `]`\n  context...:\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:186:17: body\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:183:2: wrap-internal\n   /work/arjunguha-research-group/software/racket/collects/racket/../syntax/module-reader.rkt:67:9: wrap-internal/wrapper\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (let ([max (apply max arr)]\n        [min (apply min arr)])\n    (- max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1665510129,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (let ([max (apply max arr)]\n        [min (apply min arr)])\n    (- max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1665510129,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (let ([max (apply max arr)])\n    (let ([min (apply min arr)])\n      (- max min))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1666123015,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (let ((max (apply max arr))\n        (min (apply min arr)))\n    (- max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1666123014,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (cond [(empty? arr) 0]\n        [else (max (abs (- (first arr) (second arr))) (max_Abs_Diff (rest arr)))]))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1666123015,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpumdbxctd.rkt:13:4\n\nsecond: list contains too few elements\n  list: '(3)\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpumdbxctd.rkt:14:4\n\nsecond: list contains too few elements\n  list: '(1)\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpumdbxctd.rkt:15:4\n\nsecond: list contains too few elements\n  list: '(1)\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (define (max_Abs_Diff_helper arr max_diff)\n    (if (null? arr)\n        max_diff\n        (let* ([first (car arr)]\n               [rest (cdr arr)]\n               [diff (abs (- first (car rest)))])\n          (if (&gt; diff max_diff)\n              (max_Abs_Diff_helper rest diff)\n              (max_Abs_Diff_helper rest max_diff)))))\n  (max_Abs_Diff_helper arr 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1666123014,
      "stdout": "",
      "stderr": "/tmp/tmpn4k6wwue.rkt:4:0: read-syntax: expected a `)` to close `(`\n  possible cause: indentation suggests a missing `)` before line 16\n  context...:\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:186:17: body\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:183:2: wrap-internal\n   /work/arjunguha-research-group/software/racket/collects/racket/../syntax/module-reader.rkt:67:9: wrap-internal/wrapper\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (let ([max_diff -1])\n    (for ([i (in-range (length arr))])\n      (for ([j (in-range (length arr))])\n        (when (and (not (= i j))\n                   (> (abs (- (list-ref arr i) (list-ref arr j))) max_diff))\n          (set! max_diff (abs (- (list-ref arr i) (list-ref arr j)))))))\n    max_diff))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1665510129,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (letrec ([max_diff (lambda (arr)\n                       (if (null? (cdr arr))\n                           0\n                           (max (abs (- (car arr) (car (cdr arr))))\n                                (max_diff (cdr arr)))))])\n    (max_diff arr)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1666123015,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpqxkx_f24.rkt:18:4\nactual:     6\nexpected:   8\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpqxkx_f24.rkt:19:4\nactual:     1\nexpected:   2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (define (max_Abs_Diff_helper arr max_diff)\n    (cond\n      [(empty? arr) max_diff]\n      [else\n       (let* ([first (first arr)]\n              [rest (rest arr)]\n              [diff (abs (- first (first rest)))])\n         (if (&gt; diff max_diff)\n             (max_Abs_Diff_helper rest diff)\n             (max_Abs_Diff_helper rest max_diff)))]))\n  (max_Abs_Diff_helper arr 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1666123014,
      "stdout": "",
      "stderr": "/tmp/tmprw54xddd.rkt:14:50: read-syntax: missing `)` to close `(` on line 9, found instead `]`\n  context...:\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:186:17: body\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:183:2: wrap-internal\n   /work/arjunguha-research-group/software/racket/collects/racket/../syntax/module-reader.rkt:67:9: wrap-internal/wrapper\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (let ([max (apply max arr)]\n        [min (apply min arr)])\n    (- max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1665510129,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (let ([max_diff (apply max (map (lambda (x) (abs (- x (apply min arr)))) arr))])\n    max_diff))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1666123015,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (let ([max_diff 0])\n    (for ([i (in-range (length arr))])\n      (for ([j (in-range (length arr))])\n        (when (> (abs (- (list-ref arr i) (list-ref arr j))) max_diff)\n          (set! max_diff (abs (- (list-ref arr i) (list-ref arr j)))))))\n    max_diff))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1665510129,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (define (max_Abs_Diff_helper arr max_diff)\n    (cond\n      [(empty? arr) max_diff]\n      [(empty? (rest arr)) max_diff]\n      [else (max_Abs_Diff_helper (rest arr) (max max_diff (abs (- (first arr) (second arr)))))]))\n  (max_Abs_Diff_helper arr 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1665510129,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpr_nt4s8m.rkt:18:4\nactual:     6\nexpected:   8\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpr_nt4s8m.rkt:19:4\nactual:     1\nexpected:   2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (define (max_Abs_Diff_helper arr max_diff)\n    (if (null? arr)\n        max_diff\n        (let ([diff (abs (- (car arr) (car (cdr arr))))])\n          (if (&gt; diff max_diff)\n              (max_Abs_Diff_helper (cdr arr) diff)\n              (max_Abs_Diff_helper (cdr arr) max_diff)))))\n  (max_Abs_Diff_helper arr 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1665510128,
      "stdout": "",
      "stderr": "/tmp/tmpkvx9i5kd.rkt:4:0: read-syntax: expected a `)` to close `(`\n  possible cause: indentation suggests a missing `)` before line 14\n  context...:\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:186:17: body\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:183:2: wrap-internal\n   /work/arjunguha-research-group/software/racket/collects/racket/../syntax/module-reader.rkt:67:9: wrap-internal/wrapper\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (define (max_Abs_Diff_helper arr max_diff)\n    (if (null? arr)\n        max_diff\n        (let ((diff (abs (- (car arr) (car (cdr arr))))))\n          (if (&gt; diff max_diff)\n              (max_Abs_Diff_helper (cdr arr) diff)\n              (max_Abs_Diff_helper (cdr arr) max_diff)))))\n  (max_Abs_Diff_helper arr 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1666123014,
      "stdout": "",
      "stderr": "/tmp/tmp4lh0wxmi.rkt:4:0: read-syntax: expected a `)` to close `(`\n  possible cause: indentation suggests a missing `)` before line 14\n  context...:\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:186:17: body\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:183:2: wrap-internal\n   /work/arjunguha-research-group/software/racket/collects/racket/../syntax/module-reader.rkt:67:9: wrap-internal/wrapper\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (let ([max (apply max arr)]\n        [min (apply min arr)])\n    (- max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1665510129,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (let ([max_diff (apply max (map (lambda (x) (abs (- x (apply min arr)))) arr))])\n    (if (null? arr)\n        0\n        max_diff)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1666123015,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (let ([max_diff 0]\n        [max_val (apply max arr)]\n        [min_val (apply min arr)])\n    (if (null? arr)\n        0\n        (let ([diff (- max_val min_val)])\n          (if (> diff max_diff)\n              (set! max_diff diff))\n          (max_Abs_Diff (cdr arr))))\n    max_diff))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1666123015,
      "stdout": "",
      "stderr": "/tmp/tmp4ts4asue.rkt:11:10: if: missing an \"else\" expression\n  in: (if (> diff max_diff) (set! max_diff diff))\n  location...:\n   /tmp/tmp4ts4asue.rkt:11:10\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (define (max_Abs_Diff_helper arr max_diff)\n    (if (null? arr)\n        max_diff\n        (max_Abs_Diff_helper (cdr arr)\n                             (max max_diff\n                                  (abs (- (car arr) (car (cdr arr))))))))\n  (max_Abs_Diff_helper arr 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1666123015,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpqokhm2cx.rkt:18:4\n\ncar: contract violation\n  expected: pair?\n  given: '()\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpqokhm2cx.rkt:19:4\n\ncar: contract violation\n  expected: pair?\n  given: '()\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpqokhm2cx.rkt:20:4\n\ncar: contract violation\n  expected: pair?\n  given: '()\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (if (null? arr)\n      0\n      (let ([max (apply max arr)]\n            [min (apply min arr)])\n        (- max min))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1665510129,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (apply max (map abs (map - arr (cdr arr)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1666123015,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpp8waw_vm.rkt:12:4\n\nmap: all lists must have same size\n  first list length: 4\n  other list length: 3\n  procedure: #<procedure:->\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpp8waw_vm.rkt:13:4\n\nmap: all lists must have same size\n  first list length: 5\n  other list length: 4\n  procedure: #<procedure:->\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpp8waw_vm.rkt:14:4\n\nmap: all lists must have same size\n  first list length: 3\n  other list length: 2\n  procedure: #<procedure:->\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (define (max_Abs_Diff_helper arr max_diff)\n    (cond\n      [(empty? arr) max_diff]\n      [else\n       (let ([curr (first arr)])\n         (max_Abs_Diff_helper (rest arr) (max max_diff (abs (- curr (first arr))))))]))\n  (max_Abs_Diff_helper (rest arr) (abs (- (first arr) (first (rest arr))))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1666123015,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp99kmvkzq.rkt:18:4\nactual:     1\nexpected:   4\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp99kmvkzq.rkt:19:4\nactual:     6\nexpected:   8\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp99kmvkzq.rkt:20:4\nactual:     1\nexpected:   2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (let ([max (apply max arr)]\n        [min (apply min arr)])\n    (- max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1665510129,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (let ([max_diff 0]\n        [max_val (apply max arr)]\n        [min_val (apply min arr)])\n    (set! max_diff (- max_val min_val))\n    max_diff))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1666123015,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (if (null? arr)\n      0\n      (max (abs (- (car arr) (cadr arr)))\n           (max_Abs_Diff (cdr arr)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1666123015,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpk1vdt2t0.rkt:15:4\n\ncadr: contract violation\n  expected: (cons/c any/c pair?)\n  given: '(3)\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpk1vdt2t0.rkt:16:4\n\ncadr: contract violation\n  expected: (cons/c any/c pair?)\n  given: '(1)\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpk1vdt2t0.rkt:17:4\n\ncadr: contract violation\n  expected: (cons/c any/c pair?)\n  given: '(1)\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (let ([max_diff 0])\n    (for ([i (in-range (length arr))])\n      (for ([j (in-range (length arr))])\n        (if (> (abs (- (list-ref arr i) (list-ref arr j))) max_diff)\n            (set! max_diff (abs (- (list-ref arr i) (list-ref arr j)))))))\n    max_diff))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1666123015,
      "stdout": "",
      "stderr": "/tmp/tmpdez5aqn9.rkt:8:8: if: missing an \"else\" expression\n  in: (if (> (abs (- (list-ref arr i) (list-ref arr j))) max_diff) (set! max_diff (abs (- (list-ref arr i) (list-ref arr j)))))\n  location...:\n   /tmp/tmpdez5aqn9.rkt:8:8\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (define (max_Abs_Diff_helper arr max_diff)\n    (if (null? arr)\n        max_diff\n        (let ((diff (abs (- (car arr) (cadr arr)))))\n          (if (> diff max_diff)\n              (max_Abs_Diff_helper (cdr arr) diff)\n              (max_Abs_Diff_helper (cdr arr) max_diff)))))\n  (max_Abs_Diff_helper arr 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1666123015,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpe2ocmfc0.rkt:19:4\n\ncadr: contract violation\n  expected: (cons/c any/c pair?)\n  given: '(3)\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpe2ocmfc0.rkt:20:4\n\ncadr: contract violation\n  expected: (cons/c any/c pair?)\n  given: '(1)\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpe2ocmfc0.rkt:21:4\n\ncadr: contract violation\n  expected: (cons/c any/c pair?)\n  given: '(1)\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (let ([max_diff 0])\n    (for ([i (in-range (length arr))])\n      (for ([j (in-range (length arr))])\n        (when (> (abs (- (list-ref arr i) (list-ref arr j))) max_diff)\n          (set! max_diff (abs (- (list-ref arr i) (list-ref arr j)))))))\n    max_diff))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1665510129,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (apply max (map abs (map - arr (cdr arr)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1666123015,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpp8waw_vm.rkt:12:4\n\nmap: all lists must have same size\n  first list length: 4\n  other list length: 3\n  procedure: #<procedure:->\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpp8waw_vm.rkt:13:4\n\nmap: all lists must have same size\n  first list length: 5\n  other list length: 4\n  procedure: #<procedure:->\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpp8waw_vm.rkt:14:4\n\nmap: all lists must have same size\n  first list length: 3\n  other list length: 2\n  procedure: #<procedure:->\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (define (max_Abs_Diff_helper arr max_diff)\n    (cond\n      [(empty? arr) max_diff]\n      [else\n       (let ([diff (abs (- (first arr) (second arr)))])\n         (if (&gt; diff max_diff)\n             (max_Abs_Diff_helper (rest arr) diff)\n             (max_Abs_Diff_helper (rest arr) max_diff)))]))\n  (max_Abs_Diff_helper arr 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1666123015,
      "stdout": "",
      "stderr": "/tmp/tmp10p3tj4q.rkt:12:56: read-syntax: missing `)` to close `(` on line 9, found instead `]`\n  context...:\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:186:17: body\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:183:2: wrap-internal\n   /work/arjunguha-research-group/software/racket/collects/racket/../syntax/module-reader.rkt:67:9: wrap-internal/wrapper\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (let ([max_diff (apply max (map abs (map - arr (cdr arr))))])\n    (if (zero? max_diff)\n        (error \"All elements are equal\")\n        max_diff)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1666123015,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp8i6t4aoq.rkt:15:4\n\nmap: all lists must have same size\n  first list length: 4\n  other list length: 3\n  procedure: #<procedure:->\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp8i6t4aoq.rkt:16:4\n\nmap: all lists must have same size\n  first list length: 5\n  other list length: 4\n  procedure: #<procedure:->\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp8i6t4aoq.rkt:17:4\n\nmap: all lists must have same size\n  first list length: 3\n  other list length: 2\n  procedure: #<procedure:->\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (let ((max_diff (abs (- (car arr) (cadr arr)))))\n    (for ([i (in-range (add1 (length arr)))]\n          [j (in-range i)])\n      (let ((diff (abs (- (list-ref arr i) (list-ref arr j)))))\n        (if (&gt; diff max_diff)\n            (set! max_diff diff))))\n    max_diff))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1666123015,
      "stdout": "",
      "stderr": "/tmp/tmpq3x4gkxz.rkt:4:0: read-syntax: expected a `)` to close `(`\n  possible cause: indentation suggests a missing `)` before line 13\n  context...:\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:186:17: body\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:183:2: wrap-internal\n   /work/arjunguha-research-group/software/racket/collects/racket/../syntax/module-reader.rkt:67:9: wrap-internal/wrapper\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (let loop ([arr arr] [max_diff 0])\n    (cond\n      [(null? arr) max_diff]\n      [(null? (cdr arr)) max_diff]\n      [else\n       (let ([diff (abs (- (car arr) (cadr arr)))])\n         (if (> diff max_diff)\n             (loop (cdr arr) diff)\n             (loop (cdr arr) max_diff)))])))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1666123016,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpdbtfkaf2.rkt:21:4\nactual:     6\nexpected:   8\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpdbtfkaf2.rkt:22:4\nactual:     1\nexpected:   2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (let ([max_diff (apply max (map abs (map - arr (cdr arr))))])\n    (if (null? arr)\n        0\n        max_diff)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1666123015,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpubd8qcjl.rkt:15:4\n\nmap: all lists must have same size\n  first list length: 4\n  other list length: 3\n  procedure: #<procedure:->\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpubd8qcjl.rkt:16:4\n\nmap: all lists must have same size\n  first list length: 5\n  other list length: 4\n  procedure: #<procedure:->\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpubd8qcjl.rkt:17:4\n\nmap: all lists must have same size\n  first list length: 3\n  other list length: 2\n  procedure: #<procedure:->\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (let ([max (apply max arr)])\n    (let ([min (apply min arr)])\n      (- max min))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1666123015,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (let ([max (apply max arr)])\n    (apply max (map (lambda (x) (- max x)) arr))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1666123016,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpx59hct4h.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 5\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpx59hct4h.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 9\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpx59hct4h.rkt:15:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 3\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (let ([max_diff 0])\n    (for ([i (in-range (length arr))])\n      (for ([j (in-range (length arr))])\n        (when (> (abs (- (list-ref arr i) (list-ref arr j))) max_diff)\n          (set! max_diff (abs (- (list-ref arr i) (list-ref arr j)))))))\n    max_diff))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1665510129,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (let ([max_diff -1])\n    (for ([i (in-range (length arr))])\n      (for ([j (in-range (length arr))])\n        (let ([diff (abs (- (list-ref arr i) (list-ref arr j)))])\n          (if (> diff max_diff)\n              (set! max_diff diff)))))\n    max_diff))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1666123015,
      "stdout": "",
      "stderr": "/tmp/tmpjw0zwfml.rkt:9:10: if: missing an \"else\" expression\n  in: (if (> diff max_diff) (set! max_diff diff))\n  location...:\n   /tmp/tmpjw0zwfml.rkt:9:10\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (define (max_Abs_Diff_helper arr max_diff)\n    (if (null? arr)\n        max_diff\n        (let* ([first (car arr)]\n               [rest (cdr arr)]\n               [diff (abs (- first (car rest)))]\n               [new_max_diff (if (&gt; diff max_diff) diff max_diff)])\n          (max_Abs_Diff_helper rest new_max_diff))))\n  (max_Abs_Diff_helper arr 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1666123015,
      "stdout": "",
      "stderr": "/tmp/tmpjpl8auvp.rkt:12:51: read-syntax: missing `]` to close preceding `[`, found instead `)`\n  context...:\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:186:17: body\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:183:2: wrap-internal\n   /work/arjunguha-research-group/software/racket/collects/racket/../syntax/module-reader.rkt:67:9: wrap-internal/wrapper\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (let ([max_diff 0])\n    (for ([i (in-range (length arr))])\n      (for ([j (in-range (length arr))])\n        (if (> (abs (- (list-ref arr i) (list-ref arr j))) max_diff)\n            (set! max_diff (abs (- (list-ref arr i) (list-ref arr j)))))))\n    max_diff))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1666123015,
      "stdout": "",
      "stderr": "/tmp/tmpdez5aqn9.rkt:8:8: if: missing an \"else\" expression\n  in: (if (> (abs (- (list-ref arr i) (list-ref arr j))) max_diff) (set! max_diff (abs (- (list-ref arr i) (list-ref arr j)))))\n  location...:\n   /tmp/tmpdez5aqn9.rkt:8:8\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (let ([max (apply max arr)]\n        [min (apply min arr)])\n    (- max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1665510129,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (let ([max (apply max arr)]\n        [min (apply min arr)])\n    (- max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1665510129,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (apply max (map abs (map - arr (cdr arr)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1666123015,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpp8waw_vm.rkt:12:4\n\nmap: all lists must have same size\n  first list length: 4\n  other list length: 3\n  procedure: #<procedure:->\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpp8waw_vm.rkt:13:4\n\nmap: all lists must have same size\n  first list length: 5\n  other list length: 4\n  procedure: #<procedure:->\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpp8waw_vm.rkt:14:4\n\nmap: all lists must have same size\n  first list length: 3\n  other list length: 2\n  procedure: #<procedure:->\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (define (max_Abs_Diff_helper arr max_diff)\n    (if (null? arr)\n        max_diff\n        (let* ([first (car arr)]\n               [rest (cdr arr)]\n               [max_diff_rest (max_Abs_Diff_helper rest max_diff)])\n          (max (abs (- first (car rest))) max_diff_rest))))\n  (max_Abs_Diff_helper arr 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1666123016,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp9wvm9_kz.rkt:19:4\n\ncar: contract violation\n  expected: pair?\n  given: '()\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp9wvm9_kz.rkt:20:4\n\ncar: contract violation\n  expected: pair?\n  given: '()\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp9wvm9_kz.rkt:21:4\n\ncar: contract violation\n  expected: pair?\n  given: '()\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (let ([max_diff 0])\n    (for ([i (in-range (length arr))])\n      (for ([j (in-range (length arr))])\n        (when (> (abs (- (list-ref arr i) (list-ref arr j))) max_diff)\n          (set! max_diff (abs (- (list-ref arr i) (list-ref arr j)))))))\n    max_diff))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1665510129,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (let ([max_diff 0])\n    (for ([i (in-range (length arr))])\n      (for ([j (in-range (length arr))])\n        (let ([diff (abs (- (list-ref arr i) (list-ref arr j)))])\n          (if (> diff max_diff)\n              (set! max_diff diff)))))\n    max_diff))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1666123016,
      "stdout": "",
      "stderr": "/tmp/tmpmgar_n49.rkt:9:10: if: missing an \"else\" expression\n  in: (if (> diff max_diff) (set! max_diff diff))\n  location...:\n   /tmp/tmpmgar_n49.rkt:9:10\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (define (max_Abs_Diff_helper arr max_diff)\n    (if (null? arr)\n        max_diff\n        (let ((diff (abs (- (car arr) (cadr arr)))))\n          (if (&gt; diff max_diff)\n              (max_Abs_Diff_helper (cdr arr) diff)\n              (max_Abs_Diff_helper (cdr arr) max_diff)))))\n  (max_Abs_Diff_helper arr 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1666123015,
      "stdout": "",
      "stderr": "/tmp/tmp25l4oxg6.rkt:4:0: read-syntax: expected a `)` to close `(`\n  possible cause: indentation suggests a missing `)` before line 14\n  context...:\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:186:17: body\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:183:2: wrap-internal\n   /work/arjunguha-research-group/software/racket/collects/racket/../syntax/module-reader.rkt:67:9: wrap-internal/wrapper\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (let ([max_diff -1])\n    (for ([i (in-range (length arr))])\n      (for ([j (in-range (length arr))])\n        (when (and (not (= i j))\n                   (> (abs (- (list-ref arr i) (list-ref arr j))) max_diff))\n          (set! max_diff (abs (- (list-ref arr i) (list-ref arr j)))))))\n    max_diff))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1665510129,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (let ([max_diff (apply max (map (lambda (x) (abs (- (apply max arr) x))) arr))])\n    max_diff))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1666123016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (let ([max (apply max arr)]\n        [min (apply min arr)])\n    (- max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1665510129,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (apply max (map (lambda (x) (abs (- (apply max arr) x))) arr)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1666123016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (let ([max_diff 0])\n    (for ([i (in-range (length arr))])\n      (for ([j (in-range (length arr))])\n        (when (> (abs (- (list-ref arr i) (list-ref arr j))) max_diff)\n          (set! max_diff (abs (- (list-ref arr i) (list-ref arr j)))))))\n    max_diff))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1665510129,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (define (helper arr max_diff)\n    (if (null? (cdr arr))\n        max_diff\n        (let ([diff (- (car arr) (cadr arr))])\n          (if (&gt; diff max_diff)\n              (helper (cdr arr) diff)\n              (helper (cdr arr) max_diff)))))\n  (helper arr 0))\n</code>\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1666123015,
      "stdout": "",
      "stderr": "/tmp/tmpedol47o8.rkt:4:0: read-syntax: expected a `)` to close `(`\n  possible cause: indentation suggests a missing `)` before line 13\n  context...:\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:186:17: body\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:183:2: wrap-internal\n   /work/arjunguha-research-group/software/racket/collects/racket/../syntax/module-reader.rkt:67:9: wrap-internal/wrapper\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (let ([max_diff 0])\n    (for ([i (in-range (length arr))])\n      (for ([j (in-range (length arr))])\n        (when (> (abs (- (list-ref arr i) (list-ref arr j))) max_diff)\n          (set! max_diff (abs (- (list-ref arr i) (list-ref arr j)))))))\n    max_diff))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1665510129,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (let ([max-diff 0])\n    (for ([i (in-range (length arr))])\n      (for ([j (in-range (length arr))])\n        (when (> (abs (- (list-ref arr i) (list-ref arr j))) max-diff)\n          (set! max-diff (abs (- (list-ref arr i) (list-ref arr j)))))))\n    max-diff))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1666123016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (let ([max (apply max arr)]\n        [min (apply min arr)])\n    (- max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1665510129,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (define (max_Abs_Diff_helper arr max_diff)\n    (if (null? arr)\n        max_diff\n        (let* ([curr_val (car arr)]\n               [curr_diff (abs (- curr_val (car (cdr arr))))])\n          (if (&gt; curr_diff max_diff)\n              (max_Abs_Diff_helper (cdr arr) curr_diff)\n              (max_Abs_Diff_helper (cdr arr) max_diff)))))\n  (max_Abs_Diff_helper arr 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1666123015,
      "stdout": "",
      "stderr": "/tmp/tmp_k07ae3l.rkt:4:0: read-syntax: expected a `)` to close `(`\n  possible cause: indentation suggests a missing `)` before line 15\n  context...:\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:186:17: body\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:183:2: wrap-internal\n   /work/arjunguha-research-group/software/racket/collects/racket/../syntax/module-reader.rkt:67:9: wrap-internal/wrapper\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (let ([max (apply max arr)])\n    (let ([min (apply min arr)])\n      (- max min))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1666123015,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (define (max_Abs_Diff_iter arr max_diff)\n    (cond\n      [(empty? arr) max_diff]\n      [(empty? (rest arr)) max_diff]\n      [else\n       (let ([diff (abs (- (first arr) (second arr)))])\n         (if (&gt; diff max_diff)\n             (max_Abs_Diff_iter (rest arr) diff)\n             (max_Abs_Diff_iter (rest arr) max_diff)))]))\n  (max_Abs_Diff_iter arr 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1666123015,
      "stdout": "",
      "stderr": "/tmp/tmpveb41bek.rkt:13:54: read-syntax: missing `)` to close `(` on line 10, found instead `]`\n  context...:\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:186:17: body\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:183:2: wrap-internal\n   /work/arjunguha-research-group/software/racket/collects/racket/../syntax/module-reader.rkt:67:9: wrap-internal/wrapper\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (define (max_Abs_Diff_helper arr max)\n    (cond\n      [(empty? arr) max]\n      [else\n       (let ([x (first arr)])\n         (max_Abs_Diff_helper (rest arr) (max (abs (- x (first arr))) max)))]))\n  (max_Abs_Diff_helper (rest arr) (abs (- (first arr) (first (rest arr))))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1666123016,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmppmdgew1m.rkt:18:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmppmdgew1m.rkt:19:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 6\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmppmdgew1m.rkt:20:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 1\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (let ([max-diff 0])\n    (for ([i (in-range (length arr))])\n      (for ([j (in-range (length arr))])\n        (when (> (abs (- (list-ref arr i) (list-ref arr j))) max-diff)\n          (set! max-diff (abs (- (list-ref arr i) (list-ref arr j)))))))\n    max-diff))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1666123016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (let ([max_diff -1])\n    (for ([i (in-range (length arr))])\n      (for ([j (in-range (length arr))])\n        (when (and (> i j)\n                   (> (abs (- (list-ref arr i) (list-ref arr j))) max_diff))\n          (set! max_diff (abs (- (list-ref arr i) (list-ref arr j)))))))\n    max_diff))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1666123016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (define (max_Abs_Diff_helper arr max_diff)\n    (if (null? arr)\n        max_diff\n        (let* ([first (car arr)]\n               [rest (cdr arr)]\n               [diff (abs (- first (car rest)))])\n          (if (> diff max_diff)\n              (max_Abs_Diff_helper (cdr arr) diff)\n              (max_Abs_Diff_helper (cdr arr) max_diff)))))\n  (max_Abs_Diff_helper arr 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1666123016,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp5i5jogkd.rkt:21:4\n\ncar: contract violation\n  expected: pair?\n  given: '()\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp5i5jogkd.rkt:22:4\n\ncar: contract violation\n  expected: pair?\n  given: '()\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp5i5jogkd.rkt:23:4\n\ncar: contract violation\n  expected: pair?\n  given: '()\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (let ([max_diff -1])\n    (for ([i (in-range (length arr))])\n      (for ([j (in-range (length arr))])\n        (when (and (> i j)\n                   (> (abs (- (list-ref arr i) (list-ref arr j))) max_diff))\n          (set! max_diff (abs (- (list-ref arr i) (list-ref arr j)))))))\n    max_diff))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1666123016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (define (max_Abs_Diff_helper arr max_diff)\n    (if (null? arr)\n        max_diff\n        (let ([x (car arr)]\n              [y (cadr arr)])\n          (if (null? y)\n              max_diff\n              (let ([diff (abs (- x y))])\n                (if (&gt; diff max_diff)\n                    (max_Abs_Diff_helper (cdr arr) diff)\n                    (max_Abs_Diff_helper (cdr arr) max_diff)))))))\n  (max_Abs_Diff_helper arr 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1666123015,
      "stdout": "",
      "stderr": "/tmp/tmp4t3_0oid.rkt:4:0: read-syntax: expected a `)` to close `(`\n  possible cause: indentation suggests a missing `)` before line 18\n  context...:\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:186:17: body\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:183:2: wrap-internal\n   /work/arjunguha-research-group/software/racket/collects/racket/../syntax/module-reader.rkt:67:9: wrap-internal/wrapper\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (let ([max (apply max arr)]\n        [min (apply min arr)])\n    (- max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1665510129,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (define (max_Abs_Diff_iter arr max_diff)\n    (if (null? arr)\n        max_diff\n        (let ([x (car arr)]\n              [y (cadr arr)])\n          (max_Abs_Diff_iter (cdr arr) (max max_diff (abs (- x y)))))))\n  (max_Abs_Diff_iter arr 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1666123016,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp9j8tcbwd.rkt:18:4\n\ncadr: contract violation\n  expected: (cons/c any/c pair?)\n  given: '(3)\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp9j8tcbwd.rkt:19:4\n\ncadr: contract violation\n  expected: (cons/c any/c pair?)\n  given: '(1)\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp9j8tcbwd.rkt:20:4\n\ncadr: contract violation\n  expected: (cons/c any/c pair?)\n  given: '(1)\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (let ([max (apply max arr)]\n        [min (apply min arr)])\n    (- max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1665510129,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (let ([max_diff 0])\n    (for ([i (in-range (length arr))])\n      (for ([j (in-range (length arr))])\n        (let ([diff (abs (- (list-ref arr i) (list-ref arr j)))])\n          (if (&gt; diff max_diff)\n              (set! max_diff diff)))))\n    max_diff))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1666123015,
      "stdout": "",
      "stderr": "/tmp/tmp30jx18z1.rkt:4:0: read-syntax: expected a `)` to close `(`\n  possible cause: indentation suggests a missing `)` before line 13\n  context...:\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:186:17: body\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:183:2: wrap-internal\n   /work/arjunguha-research-group/software/racket/collects/racket/../syntax/module-reader.rkt:67:9: wrap-internal/wrapper\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (define (max_Abs_Diff_helper arr max_diff)\n    (if (null? arr)\n        max_diff\n        (let ((diff (abs (- (car arr) (car (cdr arr))))))\n          (if (&gt; diff max_diff)\n              (max_Abs_Diff_helper (cdr arr) diff)\n              (max_Abs_Diff_helper (cdr arr) max_diff)))))\n  (max_Abs_Diff_helper arr 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1666123014,
      "stdout": "",
      "stderr": "/tmp/tmp4lh0wxmi.rkt:4:0: read-syntax: expected a `)` to close `(`\n  possible cause: indentation suggests a missing `)` before line 14\n  context...:\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:186:17: body\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:183:2: wrap-internal\n   /work/arjunguha-research-group/software/racket/collects/racket/../syntax/module-reader.rkt:67:9: wrap-internal/wrapper\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (define (max_Abs_Diff_helper arr max)\n    (if (null? arr)\n        max\n        (let ((curr (car arr)))\n          (if (&gt; (abs (- curr (car (cdr arr)))) max)\n              (max_Abs_Diff_helper (cdr arr) (abs (- curr (car (cdr arr)))))\n              (max_Abs_Diff_helper (cdr arr) max)))))\n  (max_Abs_Diff_helper arr 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1666123015,
      "stdout": "",
      "stderr": "/tmp/tmp4jzv8cwp.rkt:4:0: read-syntax: expected a `)` to close `(`\n  possible cause: indentation suggests a missing `)` before line 14\n  context...:\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:186:17: body\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:183:2: wrap-internal\n   /work/arjunguha-research-group/software/racket/collects/racket/../syntax/module-reader.rkt:67:9: wrap-internal/wrapper\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (let ([max (apply max arr)]\n        [min (apply min arr)])\n    (- max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1665510129,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (let ([max (apply max arr)]\n        [min (apply min arr)])\n    (- max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1665510129,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (define (helper arr max min)\n    (if (null? arr)\n        (abs (- max min))\n        (if (&gt; (car arr) max)\n            (helper (cdr arr) (car arr) min)\n            (if (&lt; (car arr) min)\n                (helper (cdr arr) max (car arr))\n                (helper (cdr arr) max min)))))\n  (helper arr (car arr) (car arr)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1666123015,
      "stdout": "",
      "stderr": "/tmp/tmpruizgrev.rkt:5:2: read-syntax: expected a `)` to close `(`\n  possible cause: indentation suggests a missing `)` before line 15\n  context...:\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:186:17: body\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:183:2: wrap-internal\n   /work/arjunguha-research-group/software/racket/collects/racket/../syntax/module-reader.rkt:67:9: wrap-internal/wrapper\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (let ([max_diff 0])\n    (for ([i (in-range (length arr))])\n      (for ([j (in-range (length arr))])\n        (when (> (abs (- (list-ref arr i) (list-ref arr j))) max_diff)\n          (set! max_diff (abs (- (list-ref arr i) (list-ref arr j)))))))\n    max_diff))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1665510129,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (apply max (map (lambda (x) (abs (- (apply max arr) x))) arr)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1666123016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (let ([max (apply max arr)]\n        [min (apply min arr)])\n    (- max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1665510129,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (let ([max (apply max arr)]\n        [min (apply min arr)])\n    (- max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1665510129,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (let ((max_diff 0))\n    (for ([i (in-range (length arr))])\n      (for ([j (in-range (length arr))])\n        (when (> (abs (- (list-ref arr i) (list-ref arr j))) max_diff)\n          (set! max_diff (abs (- (list-ref arr i) (list-ref arr j)))))))\n    max_diff))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1666123016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (define (max_Abs_Diff_helper arr max_diff)\n    (if (null? arr)\n        max_diff\n        (let ([diff (abs (- (car arr) (cadr arr)))])\n          (if (&gt; diff max_diff)\n              (max_Abs_Diff_helper (cdr arr) diff)\n              (max_Abs_Diff_helper (cdr arr) max_diff)))))\n  (max_Abs_Diff_helper arr 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1666123015,
      "stdout": "",
      "stderr": "/tmp/tmpeftt309f.rkt:4:0: read-syntax: expected a `)` to close `(`\n  possible cause: indentation suggests a missing `)` before line 14\n  context...:\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:186:17: body\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:183:2: wrap-internal\n   /work/arjunguha-research-group/software/racket/collects/racket/../syntax/module-reader.rkt:67:9: wrap-internal/wrapper\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (define (max_Abs_Diff_Helper arr max_diff)\n    (cond\n      [(empty? arr) max_diff]\n      [else\n       (let ([first (first arr)]\n             [rest (rest arr)])\n         (max_Abs_Diff_Helper rest (max max_diff (abs (- first (first rest))))))]))\n  (max_Abs_Diff_Helper arr 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1666123016,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpt4jvja58.rkt:19:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 2\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpt4jvja58.rkt:20:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 9\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpt4jvja58.rkt:21:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 3\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (define (max_Abs_Diff_helper arr max_diff)\n    (cond\n      [(empty? arr) max_diff]\n      [else (max_Abs_Diff_helper (rest arr) (max (abs (- (first arr) (first (rest arr)))) max_diff))]))\n  (max_Abs_Diff_helper arr 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1665510129,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpg2d_zkgv.rkt:16:4\n\nfirst: contract violation\n  expected: (and/c list? (not/c empty?))\n  given: '()\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpg2d_zkgv.rkt:17:4\n\nfirst: contract violation\n  expected: (and/c list? (not/c empty?))\n  given: '()\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpg2d_zkgv.rkt:18:4\n\nfirst: contract violation\n  expected: (and/c list? (not/c empty?))\n  given: '()\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (let ([max (apply max arr)]\n        [min (apply min arr)])\n    (- max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1665510129,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (let ([max (apply max arr)]\n        [min (apply min arr)])\n    (- max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1665510129,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (define (max_Abs_Diff_helper arr max_diff)\n    (if (null? arr)\n        max_diff\n        (let ((diff (abs (- (car arr) (cadr arr)))))\n          (if (&gt; diff max_diff)\n              (max_Abs_Diff_helper (cdr arr) diff)\n              (max_Abs_Diff_helper (cdr arr) max_diff)))))\n  (max_Abs_Diff_helper arr 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1666123015,
      "stdout": "",
      "stderr": "/tmp/tmp25l4oxg6.rkt:4:0: read-syntax: expected a `)` to close `(`\n  possible cause: indentation suggests a missing `)` before line 14\n  context...:\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:186:17: body\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:183:2: wrap-internal\n   /work/arjunguha-research-group/software/racket/collects/racket/../syntax/module-reader.rkt:67:9: wrap-internal/wrapper\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (let ([max_diff -1]\n        [len (length arr)])\n    (for ([i (in-range len)])\n      (for ([j (in-range len)])\n        (when (and (not (= i j))\n                   (> (abs (- (list-ref arr i) (list-ref arr j))) max_diff))\n          (set! max_diff (abs (- (list-ref arr i) (list-ref arr j)))))))\n    max_diff))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1666123016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (let ([max (apply max arr)]\n        [min (apply min arr)])\n    (- max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1665510129,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (let ([max (apply max arr)]\n        [min (apply min arr)])\n    (- max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1665510129,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (let ([max_diff -1])\n    (for ([i (in-range (length arr))])\n      (for ([j (in-range (length arr))])\n        (when (&gt; (abs (- (list-ref arr i) (list-ref arr j))) max_diff)\n          (set! max_diff (abs (- (list-ref arr i) (list-ref arr j)))))))\n    max_diff))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1666123016,
      "stdout": "",
      "stderr": "/tmp/tmpfcw6nkoe.rkt:4:0: read-syntax: expected a `)` to close `(`\n  possible cause: indentation suggests a missing `)` before line 12\n  context...:\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:186:17: body\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:183:2: wrap-internal\n   /work/arjunguha-research-group/software/racket/collects/racket/../syntax/module-reader.rkt:67:9: wrap-internal/wrapper\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (define (max_Abs_Diff_helper arr max_diff)\n    (cond\n      [(empty? arr) max_diff]\n      [(empty? (rest arr)) max_diff]\n      [else (max_Abs_Diff_helper (rest arr) (max max_diff (abs (- (first arr) (second arr)))))]))\n  (max_Abs_Diff_helper arr 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1665510129,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpr_nt4s8m.rkt:18:4\nactual:     6\nexpected:   8\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpr_nt4s8m.rkt:19:4\nactual:     1\nexpected:   2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (define (max_Abs_Diff_helper arr max_diff)\n    (if (null? arr)\n        max_diff\n        (let ((curr_diff (abs (- (car arr) (car (cdr arr))))))\n          (if (> curr_diff max_diff)\n              (max_Abs_Diff_helper (cdr arr) curr_diff)\n              (max_Abs_Diff_helper (cdr arr) max_diff)))))\n  (max_Abs_Diff_helper arr 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1666123016,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp_7_o0eys.rkt:19:4\n\ncar: contract violation\n  expected: pair?\n  given: '()\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp_7_o0eys.rkt:20:4\n\ncar: contract violation\n  expected: pair?\n  given: '()\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp_7_o0eys.rkt:21:4\n\ncar: contract violation\n  expected: pair?\n  given: '()\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (let ([max_diff 0])\n    (for ([i (in-range (length arr))])\n      (for ([j (in-range (length arr))])\n        (when (> (abs (- (list-ref arr i) (list-ref arr j))) max_diff)\n          (set! max_diff (abs (- (list-ref arr i) (list-ref arr j)))))))\n    max_diff))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1665510129,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (let ([max_diff 0])\n    (for ([i (in-range (length arr))])\n      (for ([j (in-range (length arr))])\n        (let ([diff (abs (- (list-ref arr i) (list-ref arr j)))])\n          (if (> diff max_diff)\n              (set! max_diff diff)))))\n    max_diff))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1666123016,
      "stdout": "",
      "stderr": "/tmp/tmpmgar_n49.rkt:9:10: if: missing an \"else\" expression\n  in: (if (> diff max_diff) (set! max_diff diff))\n  location...:\n   /tmp/tmpmgar_n49.rkt:9:10\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (define (max_Abs_Diff_helper arr max_diff)\n    (cond\n      [(empty? arr) max_diff]\n      [else (max_Abs_Diff_helper (rest arr) (max (abs (- (first arr) (first (rest arr)))) max_diff))]))\n  (max_Abs_Diff_helper arr 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1665510129,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpg2d_zkgv.rkt:16:4\n\nfirst: contract violation\n  expected: (and/c list? (not/c empty?))\n  given: '()\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpg2d_zkgv.rkt:17:4\n\nfirst: contract violation\n  expected: (and/c list? (not/c empty?))\n  given: '()\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpg2d_zkgv.rkt:18:4\n\nfirst: contract violation\n  expected: (and/c list? (not/c empty?))\n  given: '()\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (let ([max_diff 0])\n    (for ([i (in-range (length arr))])\n      (for ([j (in-range (length arr))])\n        (when (> (abs (- (list-ref arr i) (list-ref arr j))) max_diff)\n          (set! max_diff (abs (- (list-ref arr i) (list-ref arr j)))))))\n    max_diff))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1665510129,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (let ([max (apply max arr)]\n        [min (apply min arr)])\n    (- max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1665510129,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (apply max (map (lambda (x) (abs (- (apply max arr) x))) arr)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1666123016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (apply max (map abs (map - arr (cdr arr)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1666123015,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpp8waw_vm.rkt:12:4\n\nmap: all lists must have same size\n  first list length: 4\n  other list length: 3\n  procedure: #<procedure:->\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpp8waw_vm.rkt:13:4\n\nmap: all lists must have same size\n  first list length: 5\n  other list length: 4\n  procedure: #<procedure:->\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpp8waw_vm.rkt:14:4\n\nmap: all lists must have same size\n  first list length: 3\n  other list length: 2\n  procedure: #<procedure:->\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (cond\n    [(empty? arr) 0]\n    [else\n     (let ([max (apply max arr)]\n           [min (apply min arr)])\n       (- max min))]))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1666123016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (cond\n    [(empty? arr) 0]\n    [else\n     (let ([max_diff (apply max (map (lambda (x) (abs (- (first arr) x))) (rest arr)))])\n       (if (&gt; max_diff (max_Abs_Diff (rest arr)))\n           max_diff\n           (max_Abs_Diff (rest arr))))]))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1666123016,
      "stdout": "",
      "stderr": "/tmp/tmp2l6tv9xe.rkt:11:38: read-syntax: missing `)` to close `(` on line 8, found instead `]`\n  context...:\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:186:17: body\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:183:2: wrap-internal\n   /work/arjunguha-research-group/software/racket/collects/racket/../syntax/module-reader.rkt:67:9: wrap-internal/wrapper\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (let ([max_diff -1])\n    (for ([i (in-range (length arr))])\n      (for ([j (in-range (length arr))])\n        (when (&gt; (abs (- (list-ref arr i) (list-ref arr j))) max_diff)\n          (set! max_diff (abs (- (list-ref arr i) (list-ref arr j)))))))\n    max_diff))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1666123016,
      "stdout": "",
      "stderr": "/tmp/tmpfcw6nkoe.rkt:4:0: read-syntax: expected a `)` to close `(`\n  possible cause: indentation suggests a missing `)` before line 12\n  context...:\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:186:17: body\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:183:2: wrap-internal\n   /work/arjunguha-research-group/software/racket/collects/racket/../syntax/module-reader.rkt:67:9: wrap-internal/wrapper\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (define (max_Abs_Diff_helper arr max)\n    (if (null? arr)\n        max\n        (let ([curr (car arr)])\n          (if (&gt; (abs (- curr (car (cdr arr)))) max)\n              (max_Abs_Diff_helper (cdr arr) (abs (- curr (car (cdr arr)))))\n              (max_Abs_Diff_helper (cdr arr) max)))))\n  (max_Abs_Diff_helper arr 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1666123016,
      "stdout": "",
      "stderr": "/tmp/tmpxozk7_73.rkt:4:0: read-syntax: expected a `)` to close `(`\n  possible cause: indentation suggests a missing `)` before line 14\n  context...:\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:186:17: body\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:183:2: wrap-internal\n   /work/arjunguha-research-group/software/racket/collects/racket/../syntax/module-reader.rkt:67:9: wrap-internal/wrapper\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (apply max (map (lambda (x) (apply max (map (lambda (y) (abs (- x y))) arr))) arr)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1666123016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (let ([max-diff 0])\n    (for ([i (in-range (length arr))])\n      (for ([j (in-range (length arr))])\n        (when (> (abs (- (list-ref arr i) (list-ref arr j))) max-diff)\n          (set! max-diff (abs (- (list-ref arr i) (list-ref arr j)))))))\n    max-diff))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1666123016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (define (helper arr max_diff)\n    (cond\n      [(empty? arr) max_diff]\n      [else\n       (let ([curr_diff (abs (- (first arr) (second arr)))])\n         (if (&gt; curr_diff max_diff)\n             (helper (rest arr) curr_diff)\n             (helper (rest arr) max_diff)))]))\n  (helper arr 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1666123016,
      "stdout": "",
      "stderr": "/tmp/tmpxt5jpzw2.rkt:12:43: read-syntax: missing `)` to close `(` on line 9, found instead `]`\n  context...:\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:186:17: body\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:183:2: wrap-internal\n   /work/arjunguha-research-group/software/racket/collects/racket/../syntax/module-reader.rkt:67:9: wrap-internal/wrapper\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (let ([max (apply max arr)]\n        [min (apply min arr)])\n    (- max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1665510129,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (apply max (map (lambda (x) (abs (- x (apply min arr)))) arr)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1666123015,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (define (max_Abs_Diff_helper arr max_diff)\n    (cond\n      [(empty? arr) max_diff]\n      [(empty? (rest arr)) max_diff]\n      [else\n       (let ([diff (abs (- (first arr) (second arr)))])\n         (if (&gt; diff max_diff)\n             (max_Abs_Diff_helper (rest arr) diff)\n             (max_Abs_Diff_helper (rest arr) max_diff)))]))\n  (max_Abs_Diff_helper arr 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1666123016,
      "stdout": "",
      "stderr": "/tmp/tmp7_otiu41.rkt:13:56: read-syntax: missing `)` to close `(` on line 10, found instead `]`\n  context...:\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:186:17: body\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:183:2: wrap-internal\n   /work/arjunguha-research-group/software/racket/collects/racket/../syntax/module-reader.rkt:67:9: wrap-internal/wrapper\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (let ((max (apply max arr)))\n    (let ((min (apply min arr)))\n      (- max min))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1666123016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (define (max_Abs_Diff_helper arr max_diff)\n    (cond\n      [(empty? arr) max_diff]\n      [(empty? (cdr arr)) max_diff]\n      [else\n       (let ([diff (abs (- (car arr) (cadr arr)))])\n         (if (&gt; diff max_diff)\n             (max_Abs_Diff_helper (cdr arr) diff)\n             (max_Abs_Diff_helper (cdr arr) max_diff)))]))\n  (max_Abs_Diff_helper arr 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1666123016,
      "stdout": "",
      "stderr": "/tmp/tmpihwbvm2m.rkt:13:55: read-syntax: missing `)` to close `(` on line 10, found instead `]`\n  context...:\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:186:17: body\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:183:2: wrap-internal\n   /work/arjunguha-research-group/software/racket/collects/racket/../syntax/module-reader.rkt:67:9: wrap-internal/wrapper\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (define (max_Abs_Diff_helper arr max_diff)\n    (if (null? arr)\n        max_diff\n        (let ([diff (- (car arr) (car (cdr arr)))])\n          (if (&gt; diff max_diff)\n              (max_Abs_Diff_helper (cdr arr) diff)\n              (max_Abs_Diff_helper (cdr arr) max_diff)))))\n  (max_Abs_Diff_helper arr 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1666123016,
      "stdout": "",
      "stderr": "/tmp/tmppkzmk31l.rkt:4:0: read-syntax: expected a `)` to close `(`\n  possible cause: indentation suggests a missing `)` before line 14\n  context...:\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:186:17: body\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:183:2: wrap-internal\n   /work/arjunguha-research-group/software/racket/collects/racket/../syntax/module-reader.rkt:67:9: wrap-internal/wrapper\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (define (max_Abs_Diff_helper arr max_diff)\n    (cond\n      [(empty? arr) max_diff]\n      [(empty? (cdr arr)) max_diff]\n      [else (max_Abs_Diff_helper (cdr arr) (max max_diff (abs (- (car arr) (cadr arr)))))]))\n  (max_Abs_Diff_helper arr 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1666123016,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpe1pdkj7m.rkt:18:4\nactual:     6\nexpected:   8\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpe1pdkj7m.rkt:19:4\nactual:     1\nexpected:   2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (define (max_Abs_Diff_helper arr max_diff)\n    (if (null? arr)\n        max_diff\n        (let ([diff (abs (- (car arr) (car (cdr arr))))])\n          (if (&gt; diff max_diff)\n              (max_Abs_Diff_helper (cdr arr) diff)\n              (max_Abs_Diff_helper (cdr arr) max_diff)))))\n  (max_Abs_Diff_helper arr 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1665510128,
      "stdout": "",
      "stderr": "/tmp/tmpkvx9i5kd.rkt:4:0: read-syntax: expected a `)` to close `(`\n  possible cause: indentation suggests a missing `)` before line 14\n  context...:\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:186:17: body\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:183:2: wrap-internal\n   /work/arjunguha-research-group/software/racket/collects/racket/../syntax/module-reader.rkt:67:9: wrap-internal/wrapper\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (define (max_Abs_Diff_helper arr max_diff)\n    (if (null? arr)\n        max_diff\n        (let ([diff (abs (- (car arr) (cadr arr)))])\n          (if (&gt; diff max_diff)\n              (max_Abs_Diff_helper (cdr arr) diff)\n              (max_Abs_Diff_helper (cdr arr) max_diff)))))\n  (max_Abs_Diff_helper arr 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1666123015,
      "stdout": "",
      "stderr": "/tmp/tmpeftt309f.rkt:4:0: read-syntax: expected a `)` to close `(`\n  possible cause: indentation suggests a missing `)` before line 14\n  context...:\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:186:17: body\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:183:2: wrap-internal\n   /work/arjunguha-research-group/software/racket/collects/racket/../syntax/module-reader.rkt:67:9: wrap-internal/wrapper\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (define (max_Abs_Diff_helper arr max_diff)\n    (if (null? arr)\n        max_diff\n        (max_Abs_Diff_helper (cdr arr) (max (abs (- (car arr) (car (cdr arr)))) max_diff))))\n  (max_Abs_Diff_helper arr 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1666123016,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmptg85dqmv.rkt:16:4\n\ncar: contract violation\n  expected: pair?\n  given: '()\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmptg85dqmv.rkt:17:4\n\ncar: contract violation\n  expected: pair?\n  given: '()\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmptg85dqmv.rkt:18:4\n\ncar: contract violation\n  expected: pair?\n  given: '()\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (let ([max_diff -1])\n    (for ([i (in-range (length arr))])\n      (for ([j (in-range (add1 i) (length arr))])\n        (when (> (abs (- (list-ref arr i) (list-ref arr j))) max_diff)\n          (set! max_diff (abs (- (list-ref arr i) (list-ref arr j)))))))\n    max_diff))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1666123017,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (let ([max_diff 0])\n    (for ([i (in-range (length arr))])\n      (for ([j (in-range (length arr))])\n        (when (> (abs (- (list-ref arr i) (list-ref arr j))) max_diff)\n          (set! max_diff (abs (- (list-ref arr i) (list-ref arr j)))))))\n    max_diff))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1665510129,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (define (max_Abs_Diff_helper arr max_diff)\n    (cond\n      [(empty? arr) max_diff]\n      [(empty? (cdr arr)) max_diff]\n      [else (max_Abs_Diff_helper (cdr arr) (max max_diff (abs (- (car arr) (cadr arr)))))]))\n  (max_Abs_Diff_helper arr 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1666123016,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpe1pdkj7m.rkt:18:4\nactual:     6\nexpected:   8\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpe1pdkj7m.rkt:19:4\nactual:     1\nexpected:   2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (define (max_Abs_Diff_helper arr max_diff)\n    (cond\n      [(empty? arr) max_diff]\n      [(empty? (rest arr)) max_diff]\n      [else (max_Abs_Diff_helper (rest arr) (max (abs (- (first arr) (first (rest arr)))) max_diff))]))\n  (max_Abs_Diff_helper arr 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1666123017,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpy8mdn4nz.rkt:18:4\nactual:     6\nexpected:   8\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpy8mdn4nz.rkt:19:4\nactual:     1\nexpected:   2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (define (max_Abs_Diff_helper arr max_diff)\n    (cond\n      [(empty? arr) max_diff]\n      [(empty? (rest arr)) max_diff]\n      [else (max_Abs_Diff_helper (rest arr) (max (abs (- (first arr) (first (rest arr)))) max_diff))]))\n  (max_Abs_Diff_helper arr 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1666123017,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpy8mdn4nz.rkt:18:4\nactual:     6\nexpected:   8\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpy8mdn4nz.rkt:19:4\nactual:     1\nexpected:   2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (define (max_Abs_Diff_Helper arr max_diff)\n    (if (null? arr)\n        max_diff\n        (let* ([first (car arr)]\n               [rest (cdr arr)]\n               [diff (abs (- first (car rest)))]\n               [max_diff_rest (max_Abs_Diff_Helper rest max_diff)])\n          (if (&gt; diff max_diff_rest)\n              diff\n              max_diff_rest))))\n  (max_Abs_Diff_Helper arr 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1666123016,
      "stdout": "",
      "stderr": "/tmp/tmp0k9cdg63.rkt:4:0: read-syntax: expected a `)` to close `(`\n  possible cause: indentation suggests a missing `)` before line 17\n  context...:\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:186:17: body\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:183:2: wrap-internal\n   /work/arjunguha-research-group/software/racket/collects/racket/../syntax/module-reader.rkt:67:9: wrap-internal/wrapper\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (apply max (map (lambda (x) (abs (- x (apply max arr)))) arr)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1666123017,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (let ([max (apply max arr)]\n        [min (apply min arr)])\n    (- max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1665510129,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (let ([max (apply max arr)]\n        [min (apply min arr)])\n    (- max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1665510129,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (define (max_Abs_Diff_iter arr max)\n    (if (null? arr)\n        max\n        (let ((diff (abs (- (car arr) (car (cdr arr))))))\n          (if (&gt; diff max)\n              (max_Abs_Diff_iter (cdr arr) diff)\n              (max_Abs_Diff_iter (cdr arr) max)))))\n  (max_Abs_Diff_iter arr 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1666123016,
      "stdout": "",
      "stderr": "/tmp/tmpr7z1cjju.rkt:4:0: read-syntax: expected a `)` to close `(`\n  possible cause: indentation suggests a missing `)` before line 14\n  context...:\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:186:17: body\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:183:2: wrap-internal\n   /work/arjunguha-research-group/software/racket/collects/racket/../syntax/module-reader.rkt:67:9: wrap-internal/wrapper\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (define (max_Abs_Diff_helper arr max_diff)\n    (if (null? arr)\n        max_diff\n        (let ((diff (abs (- (car arr) (cadr arr)))))\n          (if (&gt; diff max_diff)\n              (max_Abs_Diff_helper (cdr arr) diff)\n              (max_Abs_Diff_helper (cdr arr) max_diff)))))\n  (max_Abs_Diff_helper arr 0))\n</code>\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1666123016,
      "stdout": "",
      "stderr": "/tmp/tmpm0s_wccq.rkt:4:0: read-syntax: expected a `)` to close `(`\n  possible cause: indentation suggests a missing `)` before line 13\n  context...:\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:186:17: body\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:183:2: wrap-internal\n   /work/arjunguha-research-group/software/racket/collects/racket/../syntax/module-reader.rkt:67:9: wrap-internal/wrapper\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (define (max_Abs_Diff_helper arr max_diff)\n    (cond\n      [(empty? arr) max_diff]\n      [(empty? (rest arr)) max_diff]\n      [else (max_Abs_Diff_helper (rest arr) (max max_diff (abs (- (first arr) (first (rest arr))))))]))\n  (max_Abs_Diff_helper arr 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1666123017,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpajy7tozy.rkt:18:4\nactual:     6\nexpected:   8\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpajy7tozy.rkt:19:4\nactual:     1\nexpected:   2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (define (max_Abs_Diff_helper arr max_diff)\n    (cond\n      [(empty? arr) max_diff]\n      [(empty? (rest arr)) max_diff]\n      [else (max_Abs_Diff_helper (rest arr) (max (abs (- (first arr) (first (rest arr)))) max_diff))]))\n  (max_Abs_Diff_helper arr 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1666123017,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpy8mdn4nz.rkt:18:4\nactual:     6\nexpected:   8\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpy8mdn4nz.rkt:19:4\nactual:     1\nexpected:   2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (let ((max (apply max arr))\n        (min (apply min arr)))\n    (- max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1666123014,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (let ([max_diff 0])\n    (for ([i (in-range (length arr))])\n      (for ([j (in-range (length arr))])\n        (when (&gt; (abs (- (list-ref arr i) (list-ref arr j))) max_diff)\n          (set! max_diff (abs (- (list-ref arr i) (list-ref arr j)))))))\n    max_diff))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1665510128,
      "stdout": "",
      "stderr": "/tmp/tmp_8nqb5ql.rkt:4:0: read-syntax: expected a `)` to close `(`\n  possible cause: indentation suggests a missing `)` before line 12\n  context...:\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:186:17: body\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:183:2: wrap-internal\n   /work/arjunguha-research-group/software/racket/collects/racket/../syntax/module-reader.rkt:67:9: wrap-internal/wrapper\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (let ([max (apply max arr)]\n        [min (apply min arr)])\n    (- max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1665510129,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (let ([max (apply max arr)]\n        [min (apply min arr)])\n    (- max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1665510129,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (define (max_Abs_Diff_helper arr max_diff)\n    (if (null? arr)\n        max_diff\n        (let* ([first (car arr)]\n               [rest (cdr arr)]\n               [diff (abs (- first (car rest)))])\n          (if (> diff max_diff)\n              (max_Abs_Diff_helper rest diff)\n              (max_Abs_Diff_helper rest max_diff)))))\n  (max_Abs_Diff_helper arr 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1666123017,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpz6ivylzz.rkt:21:4\n\ncar: contract violation\n  expected: pair?\n  given: '()\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpz6ivylzz.rkt:22:4\n\ncar: contract violation\n  expected: pair?\n  given: '()\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpz6ivylzz.rkt:23:4\n\ncar: contract violation\n  expected: pair?\n  given: '()\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (define (max_Abs_Diff_helper arr max_diff)\n    (cond\n      [(empty? arr) max_diff]\n      [(empty? (rest arr)) max_diff]\n      [else\n       (let* ([first (first arr)]\n              [second (first (rest arr))]\n              [diff (abs (- first second))])\n         (if (> diff max_diff)\n             (max_Abs_Diff_helper (rest arr) diff)\n             (max_Abs_Diff_helper (rest arr) max_diff)))]))\n  (max_Abs_Diff_helper arr 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1666123017,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpl_2ljg6t.rkt:23:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 2\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpl_2ljg6t.rkt:24:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 9\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpl_2ljg6t.rkt:25:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 3\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (let ([max_diff 0])\n    (for ([i (in-range (length arr))])\n      (for ([j (in-range (length arr))])\n        (when (&gt; (abs (- (list-ref arr i) (list-ref arr j))) max_diff)\n          (set! max_diff (abs (- (list-ref arr i) (list-ref arr j)))))))\n    max_diff))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1665510128,
      "stdout": "",
      "stderr": "/tmp/tmp_8nqb5ql.rkt:4:0: read-syntax: expected a `)` to close `(`\n  possible cause: indentation suggests a missing `)` before line 12\n  context...:\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:186:17: body\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:183:2: wrap-internal\n   /work/arjunguha-research-group/software/racket/collects/racket/../syntax/module-reader.rkt:67:9: wrap-internal/wrapper\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (define (max_Abs_Diff_helper arr max_diff)\n    (if (null? arr)\n        max_diff\n        (let ((curr_diff (abs (- (car arr) (cadr arr)))))\n          (if (> curr_diff max_diff)\n              (max_Abs_Diff_helper (cdr arr) curr_diff)\n              (max_Abs_Diff_helper (cdr arr) max_diff)))))\n  (max_Abs_Diff_helper arr 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1666123017,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpjipyeb2y.rkt:19:4\n\ncadr: contract violation\n  expected: (cons/c any/c pair?)\n  given: '(3)\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpjipyeb2y.rkt:20:4\n\ncadr: contract violation\n  expected: (cons/c any/c pair?)\n  given: '(1)\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpjipyeb2y.rkt:21:4\n\ncadr: contract violation\n  expected: (cons/c any/c pair?)\n  given: '(1)\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (apply max (map (lambda (x) (abs (- x (apply min arr)))) arr)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1666123015,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (let ([max_diff (apply max (map (lambda (x) (abs (- x (apply min arr)))) arr))])\n    (if (null? arr)\n        0\n        max_diff)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1666123015,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (let ([max (apply max arr)]\n        [min (apply min arr)])\n    (- max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1665510129,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (let ([max_diff 0])\n    (for ([i (in-range (length arr))])\n      (for ([j (in-range (length arr))])\n        (when (> (abs (- (list-ref arr i) (list-ref arr j))) max_diff)\n          (set! max_diff (abs (- (list-ref arr i) (list-ref arr j)))))))\n    max_diff))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1665510129,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (define (max_Abs_Diff_helper arr max)\n    (cond ((null? arr) max)\n          ((&gt; (abs (- (car arr) (car (cdr arr)))) max)\n           (max_Abs_Diff_helper (cdr arr) (abs (- (car arr) (car (cdr arr)))))\n          (else (max_Abs_Diff_helper (cdr arr) max))))\n  (max_Abs_Diff_helper arr 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1666123016,
      "stdout": "",
      "stderr": "/tmp/tmpg8vycsat.rkt:5:2: read-syntax: expected a `)` to close `(`\n  possible cause: indentation suggests a missing `)` before line 12\n  context...:\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:186:17: body\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:183:2: wrap-internal\n   /work/arjunguha-research-group/software/racket/collects/racket/../syntax/module-reader.rkt:67:9: wrap-internal/wrapper\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (let ([max (apply max arr)]\n        [min (apply min arr)])\n    (- max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1665510129,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (let ([max_diff 0])\n    (for ([i (in-range (length arr))])\n      (for ([j (in-range (length arr))])\n        (when (> (abs (- (list-ref arr i) (list-ref arr j))) max_diff)\n          (set! max_diff (abs (- (list-ref arr i) (list-ref arr j)))))))\n    max_diff))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1665510129,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (let ([max (apply max arr)])\n    (apply max (map (lambda (x) (- max x)) arr))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1666123016,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpx59hct4h.rkt:13:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 5\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpx59hct4h.rkt:14:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 9\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpx59hct4h.rkt:15:4\n\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: 3\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (define (max_Abs_Diff_helper arr max_diff)\n    (cond\n      [(empty? arr) max_diff]\n      [(empty? (rest arr)) max_diff]\n      [else (max_Abs_Diff_helper (rest arr) (max max_diff (abs (- (first arr) (second arr)))))]))\n  (max_Abs_Diff_helper arr 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1665510129,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpr_nt4s8m.rkt:18:4\nactual:     6\nexpected:   8\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpr_nt4s8m.rkt:19:4\nactual:     1\nexpected:   2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (let ([max (apply max arr)]\n        [min (apply min arr)])\n    (- max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1665510129,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (define (max_Abs_Diff_helper arr max_diff)\n    (cond\n      [(empty? arr) max_diff]\n      [(empty? (rest arr)) max_diff]\n      [else (max_Abs_Diff_helper (rest arr) (max max_diff (abs (- (first arr) (first (rest arr))))))]))\n  (max_Abs_Diff_helper arr 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1666123017,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpajy7tozy.rkt:18:4\nactual:     6\nexpected:   8\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpajy7tozy.rkt:19:4\nactual:     1\nexpected:   2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (let ([max_diff 0]\n        [max_val (apply max arr)]\n        [min_val (apply min arr)])\n    (if (null? arr)\n        0\n        (if (> (- max_val min_val) max_diff)\n            (- max_val min_val)\n            max_diff))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1666123017,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (let ([max (apply max arr)]\n        [min (apply min arr)])\n    (- max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1665510129,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (apply max (map abs (map - arr (cdr arr)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1666123015,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpp8waw_vm.rkt:12:4\n\nmap: all lists must have same size\n  first list length: 4\n  other list length: 3\n  procedure: #<procedure:->\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpp8waw_vm.rkt:13:4\n\nmap: all lists must have same size\n  first list length: 5\n  other list length: 4\n  procedure: #<procedure:->\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpp8waw_vm.rkt:14:4\n\nmap: all lists must have same size\n  first list length: 3\n  other list length: 2\n  procedure: #<procedure:->\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (let ((max_diff 0))\n    (for ([i (in-range (length arr))])\n      (for ([j (in-range (length arr))])\n        (when (> (abs (- (list-ref arr i) (list-ref arr j))) max_diff)\n          (set! max_diff (abs (- (list-ref arr i) (list-ref arr j)))))))\n    max_diff))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1666123016,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (define (max_Abs_Diff_helper arr max_diff)\n    (if (null? arr)\n        max_diff\n        (let* ([first (car arr)]\n               [rest (cdr arr)]\n               [max_diff (if (null? rest)\n                             max_diff\n                             (max max_diff (abs (- first (car rest)))))]\n               [max_diff (if (null? rest)\n                             max_diff\n                             (max max_diff (max_Abs_Diff_helper rest max_diff)))])\n          max_diff)))\n  (max_Abs_Diff_helper arr 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1666123017,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp7uou2ibr.rkt:25:4\nactual:     6\nexpected:   8\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp7uou2ibr.rkt:26:4\nactual:     1\nexpected:   2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (let ([max (apply max arr)]\n        [min (apply min arr)])\n    (- max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1665510129,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (let ([max (apply max arr)]\n        [min (apply min arr)])\n    (- max min)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1665510129,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the maximum difference between any two elements in a given list.\n(define (max_Abs_Diff arr)\n  (let ([max_diff 0])\n    (for ([i (in-range (length arr))])\n      (for ([j (in-range (length arr))])\n        (when (> (abs (- (list-ref arr i) (list-ref arr j))) max_diff)\n          (set! max_diff (abs (- (list-ref arr i) (list-ref arr j)))))))\n    max_diff))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_Abs_Diff))\n    (check-equal? (candidate (list 2 1 5 3)) 4)\n    (check-equal? (candidate (list 9 3 2 5 1)) 8)\n    (check-equal? (candidate (list 3 2 1)) 2)\n))\n\n(test-humaneval)",
      "timestamp": 1665510129,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
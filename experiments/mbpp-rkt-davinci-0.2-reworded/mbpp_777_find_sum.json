{
  "name": "mbpp_777_find_sum",
  "language": "rkt",
  "prompt": "#lang racket\n\n;; Write a rktthon function to find the sum of non-repeated elements in a given list.\n(define (find_sum arr)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_777_find_sum.py",
  "prompt_terminology": "reworded",
  "tests": "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate find_sum))\n    (check-equal? (candidate (list 1 2 3 1 1 4 5 6)) 21)\n    (check-equal? (candidate (list 1 10 9 4 2 10 10 45 4)) 71)\n    (check-equal? (candidate (list 12 10 9 45 2 10 10 45 10)) 78)\n))\n\n(test-humaneval)",
  "stop_tokens": [
    "\n(define ",
    "\n#|",
    "\n;",
    "\n("
  ],
  "completions": [
    "  (cond\n    [(empty? arr) 0]\n    [(member (first arr) (rest arr)) (find_sum (rest arr))]\n    [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (cond\n    [(empty? arr) 0]\n    [(member (first arr) (rest arr)) (find_sum (rest arr))]\n    [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (define (find_sum_helper arr acc)\n    (cond\n      [(empty? arr) acc]\n      [(member (first arr) (rest arr)) (find_sum_helper (rest arr) acc)]\n      [else (find_sum_helper (rest arr) (+ acc (first arr)))]))\n  (find_sum_helper arr 0))\n",
    "  (cond\n    [(empty? arr) 0]\n    [(member (first arr) (rest arr)) (find_sum (rest arr))]\n    [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (cond\n    [(null? arr) 0]\n    [(member (car arr) (cdr arr)) (find_sum (cdr arr))]\n    [else (+ (car arr) (find_sum (cdr arr)))]))\n",
    "  (cond\n    [(empty? arr) 0]\n    [(member (first arr) (rest arr)) (find_sum (rest arr))]\n    [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (cond\n    [(empty? arr) 0]\n    [(member (first arr) (rest arr)) (find_sum (rest arr))]\n    [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (cond\n    [(empty? arr) 0]\n    [(member (first arr) (rest arr)) (find_sum (rest arr))]\n    [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (cond [(empty? arr) 0]\n        [(member (first arr) (rest arr)) (find_sum (rest arr))]\n        [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (cond\n    [(empty? arr) 0]\n    [(member (first arr) (rest arr)) (find_sum (rest arr))]\n    [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (cond\n    [(empty? arr) 0]\n    [(member (first arr) (rest arr)) (find_sum (rest arr))]\n    [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (cond\n    [(empty? arr) 0]\n    [(member (first arr) (rest arr)) (find_sum (rest arr))]\n    [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (cond\n    [(empty? arr) 0]\n    [(member (first arr) (rest arr)) (find_sum (rest arr))]\n    [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (cond\n    [(empty? arr) 0]\n    [else\n     (cond\n       [(member (first arr) (rest arr)) (find_sum (rest arr))]\n       [else (+ (first arr) (find_sum (rest arr)))]\n       )\n     ]\n    )\n  )\n",
    "  (cond [(empty? arr) 0]\n        [(member (first arr) (rest arr)) (find_sum (rest arr))]\n        [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (cond\n    [(empty? arr) 0]\n    [(member (first arr) (rest arr)) (find_sum (rest arr))]\n    [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (cond\n    [(empty? arr) 0]\n    [(member (first arr) (rest arr)) (find_sum (rest arr))]\n    [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (cond\n    [(empty? arr) 0]\n    [(member (first arr) (rest arr)) (find_sum (rest arr))]\n    [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (cond\n    [(empty? arr) 0]\n    [(member (first arr) (rest arr)) (find_sum (rest arr))]\n    [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (cond\n    [(empty? arr) 0]\n    [(member (first arr) (rest arr)) (find_sum (rest arr))]\n    [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (cond\n    [(empty? arr) 0]\n    [(member (first arr) (rest arr)) (find_sum (rest arr))]\n    [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (cond\n    [(empty? arr) 0]\n    [(member (first arr) (rest arr)) (find_sum (rest arr))]\n    [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (cond\n    [(empty? arr) 0]\n    [(member (first arr) (rest arr)) (find_sum (rest arr))]\n    [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (cond\n    [(empty? arr) 0]\n    [(member (first arr) (rest arr)) (find_sum (rest arr))]\n    [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (cond [(empty? arr) 0]\n        [(member (first arr) (rest arr)) (find_sum (rest arr))]\n        [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (cond\n    [(empty? arr) 0]\n    [(member (first arr) (rest arr)) (find_sum (rest arr))]\n    [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (cond [(empty? arr) 0]\n        [(member (first arr) (rest arr)) (find_sum (rest arr))]\n        [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (cond\n    [(empty? arr) 0]\n    [(member (first arr) (rest arr)) (find_sum (rest arr))]\n    [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (cond\n    [(empty? arr) 0]\n    [(member (first arr) (rest arr)) (find_sum (rest arr))]\n    [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (cond\n    [(empty? arr) 0]\n    [(member (first arr) (rest arr)) (find_sum (rest arr))]\n    [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (cond\n    [(empty? arr) 0]\n    [(member (first arr) (rest arr)) (find_sum (rest arr))]\n    [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (cond\n    [(empty? arr) 0]\n    [(member (first arr) (rest arr)) (find_sum (rest arr))]\n    [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (cond\n    [(empty? arr) 0]\n    [(member (first arr) (rest arr)) (find_sum (rest arr))]\n    [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (cond\n    [(empty? arr) 0]\n    [(member (first arr) (rest arr)) (find_sum (rest arr))]\n    [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (cond [(empty? arr) 0]\n        [(member (first arr) (rest arr)) (find_sum (rest arr))]\n        [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (cond\n    [(empty? arr) 0]\n    [else\n     (let ([x (first arr)]\n           [xs (rest arr)])\n       (+ x (find_sum (remove x xs))))]))\n",
    "  (define (helper arr acc)\n    (cond\n      [(empty? arr) acc]\n      [(member (first arr) (rest arr)) (helper (rest arr) acc)]\n      [else (helper (rest arr) (+ acc (first arr)))]))\n  (helper arr 0))\n",
    "  (cond\n    [(empty? arr) 0]\n    [(member (first arr) (rest arr)) (find_sum (rest arr))]\n    [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (cond\n    [(empty? arr) 0]\n    [(member (first arr) (rest arr)) (find_sum (rest arr))]\n    [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (cond\n    [(empty? arr) 0]\n    [(member (first arr) (rest arr)) (find_sum (rest arr))]\n    [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (cond\n    [(empty? arr) 0]\n    [(member (first arr) (rest arr)) (find_sum (rest arr))]\n    [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (cond\n    [(empty? arr) 0]\n    [(member (first arr) (rest arr)) (find_sum (rest arr))]\n    [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (cond\n    [(null? arr) 0]\n    [(member (car arr) (cdr arr)) (find_sum (cdr arr))]\n    [else (+ (car arr) (find_sum (cdr arr)))]))\n",
    "  (cond\n    [(empty? arr) 0]\n    [(member (first arr) (rest arr)) (find_sum (rest arr))]\n    [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (cond\n    [(empty? arr) 0]\n    [(member (first arr) (rest arr)) (find_sum (rest arr))]\n    [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (let loop ([arr arr] [sum 0])\n    (cond [(empty? arr) sum]\n          [(member (first arr) (rest arr)) (loop (rest arr) sum)]\n          [else (loop (rest arr) (+ sum (first arr)))])))\n",
    "  (cond\n    [(empty? arr) 0]\n    [(member (first arr) (rest arr)) (find_sum (rest arr))]\n    [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (cond\n    [(empty? arr) 0]\n    [(member (first arr) (rest arr)) (find_sum (rest arr))]\n    [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (apply + (remove-duplicates arr)))\n",
    "  (cond\n    [(empty? arr) 0]\n    [(member (first arr) (rest arr)) (find_sum (rest arr))]\n    [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (define (find_sum_iter arr sum)\n    (cond\n      [(empty? arr) sum]\n      [(member (first arr) (rest arr)) (find_sum_iter (rest arr) sum)]\n      [else (find_sum_iter (rest arr) (+ sum (first arr)))]))\n  (find_sum_iter arr 0))\n",
    "  (apply + (remove-duplicates arr)))\n",
    "  (cond [(empty? arr) 0]\n        [(member (first arr) (rest arr)) (find_sum (rest arr))]\n        [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (cond\n    [(empty? arr) 0]\n    [(member (first arr) (rest arr)) (find_sum (rest arr))]\n    [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (let loop ((arr arr) (sum 0))\n    (cond\n      [(empty? arr) sum]\n      [(member (first arr) (rest arr)) (loop (rest arr) sum)]\n      [else (loop (rest arr) (+ sum (first arr)))])))\n",
    "  (cond\n    [(empty? arr) 0]\n    [(member (first arr) (rest arr)) (find_sum (rest arr))]\n    [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (cond [(empty? arr) 0]\n        [(member (first arr) (rest arr)) (find_sum (rest arr))]\n        [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (cond\n    [(empty? arr) 0]\n    [(member (first arr) (rest arr)) (find_sum (rest arr))]\n    [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (cond\n    [(empty? arr) 0]\n    [(member (first arr) (rest arr)) (find_sum (rest arr))]\n    [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (cond\n    [(empty? arr) 0]\n    [(member (first arr) (rest arr)) (find_sum (rest arr))]\n    [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (cond\n    [(empty? arr) 0]\n    [(member (first arr) (rest arr)) (find_sum (rest arr))]\n    [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (cond\n    [(empty? arr) 0]\n    [(member (first arr) (rest arr)) (find_sum (rest arr))]\n    [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (if (null? arr)\n      0\n      (if (member (car arr) (cdr arr))\n          (find_sum (cdr arr))\n          (+ (car arr) (find_sum (cdr arr))))))\n",
    "  (cond\n    [(empty? arr) 0]\n    [(member (first arr) (rest arr)) (find_sum (rest arr))]\n    [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (define (find_sum_helper arr sum)\n    (cond\n      [(empty? arr) sum]\n      [(member (first arr) (rest arr)) (find_sum_helper (rest arr) sum)]\n      [else (find_sum_helper (rest arr) (+ sum (first arr)))]))\n  (find_sum_helper arr 0))\n",
    "  (cond\n    [(empty? arr) 0]\n    [(member (first arr) (rest arr)) (find_sum (rest arr))]\n    [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (let loop ((arr arr) (sum 0))\n    (cond ((null? arr) sum)\n          ((member (car arr) (cdr arr)) (loop (cdr arr) sum))\n          (else (loop (cdr arr) (+ sum (car arr)))))))\n",
    "  (cond\n    [(empty? arr) 0]\n    [(member (first arr) (rest arr)) (find_sum (rest arr))]\n    [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (cond\n    [(empty? arr) 0]\n    [else\n     (let ([x (first arr)])\n       (+ x (find_sum (remove x (rest arr)))))]))\n",
    "  (cond\n    [(empty? arr) 0]\n    [(member (first arr) (rest arr)) (find_sum (rest arr))]\n    [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (apply + (filter (lambda (x) (not (member x (cdr arr)))) arr)))\n",
    "  (cond\n    [(empty? arr) 0]\n    [else\n     (let ([x (first arr)])\n       (cond\n         [(member x (rest arr)) (find_sum (rest arr))]\n         [else (+ x (find_sum (rest arr)))]))]))\n",
    "  (cond\n    [(empty? arr) 0]\n    [(member (first arr) (rest arr)) (find_sum (rest arr))]\n    [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (define (find_sum_helper arr sum)\n    (cond\n      [(empty? arr) sum]\n      [(member (first arr) (rest arr)) (find_sum_helper (rest arr) sum)]\n      [else (find_sum_helper (rest arr) (+ sum (first arr)))]))\n  (find_sum_helper arr 0))\n",
    "  (cond\n    [(empty? arr) 0]\n    [(member (first arr) (rest arr)) (find_sum (rest arr))]\n    [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (cond\n    [(empty? arr) 0]\n    [(member (first arr) (rest arr)) (find_sum (rest arr))]\n    [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (cond\n    [(empty? arr) 0]\n    [(member (first arr) (rest arr)) (find_sum (rest arr))]\n    [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (cond\n    [(empty? arr) 0]\n    [(member (first arr) (rest arr)) (find_sum (rest arr))]\n    [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (cond\n    [(empty? arr) 0]\n    [(member (first arr) (rest arr)) (find_sum (rest arr))]\n    [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (cond\n    [(null? arr) 0]\n    [(member (car arr) (cdr arr)) (find_sum (cdr arr))]\n    [else (+ (car arr) (find_sum (cdr arr)))]))\n",
    "  (cond\n    [(empty? arr) 0]\n    [(member (first arr) (rest arr)) (find_sum (rest arr))]\n    [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (let ([sum 0])\n    (for ([i (in-range (length arr))])\n      (let ([elem (list-ref arr i)])\n        (if (not (member elem (list-ref arr (add1 i))))\n            (set! sum (+ sum elem)))))\n    sum))\n",
    "  (define (find_sum_iter arr acc)\n    (cond\n      [(empty? arr) acc]\n      [(member (first arr) (rest arr)) (find_sum_iter (rest arr) acc)]\n      [else (find_sum_iter (rest arr) (+ (first arr) acc))]))\n  (find_sum_iter arr 0))\n",
    "  (cond [(empty? arr) 0]\n        [(member (first arr) (rest arr)) (find_sum (rest arr))]\n        [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (cond\n    [(empty? arr) 0]\n    [else\n     (if (member (first arr) (rest arr))\n         (find_sum (rest arr))\n         (+ (first arr) (find_sum (rest arr))))]))\n",
    "  (cond [(empty? arr) 0]\n        [(member (first arr) (rest arr)) (find_sum (rest arr))]\n        [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (cond\n    [(empty? arr) 0]\n    [(member (first arr) (rest arr)) (find_sum (rest arr))]\n    [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (cond\n    [(empty? arr) 0]\n    [(member (first arr) (rest arr)) (find_sum (rest arr))]\n    [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (cond\n    [(empty? arr) 0]\n    [(member (first arr) (rest arr)) (find_sum (rest arr))]\n    [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (cond\n    [(empty? arr) 0]\n    [(member (first arr) (rest arr)) (find_sum (rest arr))]\n    [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (cond [(empty? arr) 0]\n        [(member (first arr) (rest arr)) (find_sum (rest arr))]\n        [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (cond\n    [(empty? arr) 0]\n    [(member (first arr) (rest arr)) (find_sum (rest arr))]\n    [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (cond\n    [(empty? arr) 0]\n    [(member (first arr) (rest arr)) (find_sum (rest arr))]\n    [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (cond\n    [(empty? arr) 0]\n    [(member (first arr) (rest arr)) (find_sum (rest arr))]\n    [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (define (find_sum_helper arr acc)\n    (cond\n      [(empty? arr) acc]\n      [(member (first arr) (rest arr)) (find_sum_helper (rest arr) acc)]\n      [else (find_sum_helper (rest arr) (+ acc (first arr)))]))\n  (find_sum_helper arr 0))\n",
    "  (cond\n    [(null? arr) 0]\n    [(member (car arr) (cdr arr)) (find_sum (cdr arr))]\n    [else (+ (car arr) (find_sum (cdr arr)))]))\n",
    "  (cond\n    [(empty? arr) 0]\n    [(member (first arr) (rest arr)) (find_sum (rest arr))]\n    [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (cond\n    [(empty? arr) 0]\n    [(member (first arr) (rest arr)) (find_sum (rest arr))]\n    [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (cond\n    [(empty? arr) 0]\n    [(member (first arr) (rest arr)) (find_sum (rest arr))]\n    [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (cond\n    [(empty? arr) 0]\n    [(member (first arr) (rest arr)) (find_sum (rest arr))]\n    [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (cond\n    [(empty? arr) 0]\n    [(member (first arr) (rest arr)) (find_sum (rest arr))]\n    [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (cond\n    [(empty? arr) 0]\n    [(member (first arr) (rest arr)) (find_sum (rest arr))]\n    [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (cond [(empty? arr) 0]\n        [(member (first arr) (rest arr)) (find_sum (rest arr))]\n        [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (cond [(empty? arr) 0]\n        [(member (first arr) (rest arr)) (find_sum (rest arr))]\n        [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (cond [(empty? arr) 0]\n        [(member (first arr) (rest arr)) (find_sum (rest arr))]\n        [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (cond\n    [(empty? arr) 0]\n    [(member (first arr) (rest arr)) (find_sum (rest arr))]\n    [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (cond\n    [(empty? arr) 0]\n    [(member (first arr) (rest arr)) (find_sum (rest arr))]\n    [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (cond\n    [(empty? arr) 0]\n    [(member (first arr) (rest arr)) (find_sum (rest arr))]\n    [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (cond\n    [(empty? arr) 0]\n    [(member (first arr) (rest arr)) (find_sum (rest arr))]\n    [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (cond\n    [(empty? arr) 0]\n    [(member (first arr) (rest arr)) (find_sum (rest arr))]\n    [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (cond\n    [(empty? arr) 0]\n    [(member (first arr) (rest arr)) (find_sum (rest arr))]\n    [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (cond\n    [(empty? arr) 0]\n    [(member (first arr) (rest arr)) (find_sum (rest arr))]\n    [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (cond\n    [(empty? arr) 0]\n    [(member (first arr) (rest arr)) (find_sum (rest arr))]\n    [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (cond\n    [(empty? arr) 0]\n    [(member (first arr) (rest arr)) (find_sum (rest arr))]\n    [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (cond\n    [(empty? arr) 0]\n    [(member (first arr) (rest arr)) (find_sum (rest arr))]\n    [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (cond [(empty? arr) 0]\n        [(member (first arr) (rest arr)) (find_sum (rest arr))]\n        [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (cond\n    [(empty? arr) 0]\n    [(member (first arr) (rest arr)) (find_sum (rest arr))]\n    [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (let loop ([arr arr] [sum 0])\n    (if (null? arr)\n        sum\n        (if (member (car arr) (cdr arr))\n            (loop (cdr arr) sum)\n            (loop (cdr arr) (+ sum (car arr)))))))\n",
    "  (cond\n    [(empty? arr) 0]\n    [(member (first arr) (rest arr)) (find_sum (rest arr))]\n    [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (cond\n    [(empty? arr) 0]\n    [(member (first arr) (rest arr)) (find_sum (rest arr))]\n    [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (cond\n    [(empty? arr) 0]\n    [(member (first arr) (rest arr)) (find_sum (rest arr))]\n    [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (define (helper arr acc)\n    (cond\n      [(empty? arr) acc]\n      [(member (first arr) (rest arr)) (helper (rest arr) acc)]\n      [else (helper (rest arr) (+ acc (first arr)))]))\n  (helper arr 0))\n",
    "  (cond\n    [(empty? arr) 0]\n    [(member (first arr) (rest arr)) (find_sum (rest arr))]\n    [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (cond\n    [(empty? arr) 0]\n    [else\n     (let ([first (first arr)])\n       (+ first (find_sum (remove first (rest arr)))))]))\n",
    "  (cond\n    [(empty? arr) 0]\n    [(member (first arr) (rest arr)) (find_sum (rest arr))]\n    [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (cond\n    [(empty? arr) 0]\n    [(member (first arr) (rest arr)) (find_sum (rest arr))]\n    [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (let ([sum 0])\n    (for ([i (in-range (length arr))])\n      (if (not (member (list-ref arr i) (list-tail arr i)))\n          (set! sum (+ sum (list-ref arr i)))))\n    sum))\n",
    "  (cond\n    [(empty? arr) 0]\n    [(member (first arr) (rest arr)) (find_sum (rest arr))]\n    [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (cond\n    [(empty? arr) 0]\n    [(member (first arr) (rest arr)) (find_sum (rest arr))]\n    [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (cond\n    [(empty? arr) 0]\n    [(member (first arr) (rest arr)) (find_sum (rest arr))]\n    [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (cond\n    [(empty? arr) 0]\n    [(member (first arr) (rest arr)) (find_sum (rest arr))]\n    [else (+ (first arr) (find_sum (rest arr)))]\n  )\n)\n",
    "  (cond\n    [(empty? arr) 0]\n    [(member (first arr) (rest arr)) (find_sum (rest arr))]\n    [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (cond\n    [(null? arr) 0]\n    [(member (car arr) (cdr arr)) (find_sum (cdr arr))]\n    [else (+ (car arr) (find_sum (cdr arr)))]))\n",
    "  (cond [(empty? arr) 0]\n        [(member (first arr) (rest arr)) (find_sum (rest arr))]\n        [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (cond\n    [(empty? arr) 0]\n    [(member (first arr) (rest arr)) (find_sum (rest arr))]\n    [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (cond\n    [(empty? arr) 0]\n    [(member (first arr) (rest arr)) (find_sum (rest arr))]\n    [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (cond\n    [(empty? arr) 0]\n    [(member (first arr) (rest arr)) (find_sum (rest arr))]\n    [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (cond\n    [(empty? arr) 0]\n    [(member (first arr) (rest arr)) (find_sum (rest arr))]\n    [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (cond\n    [(empty? arr) 0]\n    [(member (first arr) (rest arr)) (find_sum (rest arr))]\n    [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (cond [(empty? arr) 0]\n        [(member (first arr) (rest arr)) (find_sum (rest arr))]\n        [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (cond\n    [(empty? arr) 0]\n    [(member (first arr) (rest arr)) (find_sum (rest arr))]\n    [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (define (find_sum_helper arr acc)\n    (cond\n      [(empty? arr) acc]\n      [(member (first arr) (rest arr)) (find_sum_helper (rest arr) acc)]\n      [else (find_sum_helper (rest arr) (+ acc (first arr)))]))\n  (find_sum_helper arr 0))\n",
    "  (cond\n    [(empty? arr) 0]\n    [(member (first arr) (rest arr)) (find_sum (rest arr))]\n    [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (define (find_sum_helper arr acc)\n    (cond [(empty? arr) acc]\n          [(member (first arr) (rest arr)) (find_sum_helper (rest arr) acc)]\n          [else (find_sum_helper (rest arr) (+ acc (first arr)))]))\n  (find_sum_helper arr 0))\n",
    "  (cond\n    [(empty? arr) 0]\n    [(member (first arr) (rest arr)) (find_sum (rest arr))]\n    [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (cond\n    [(empty? arr) 0]\n    [(member (first arr) (rest arr)) (find_sum (rest arr))]\n    [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (cond\n    [(empty? arr) 0]\n    [(member (first arr) (rest arr)) (find_sum (rest arr))]\n    [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (cond\n    [(empty? arr) 0]\n    [(member (first arr) (rest arr)) (find_sum (rest arr))]\n    [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (letrec ([sum 0]\n           [count 0])\n    (for ([i (in-list arr)])\n      (if (not (member i arr))\n          (set! sum (+ sum i))\n          (set! count (+ count 1))))\n    (if (= count (length arr))\n        0\n        sum)))\n",
    "  (cond\n    [(empty? arr) 0]\n    [(member (first arr) (rest arr)) (find_sum (rest arr))]\n    [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (cond\n    [(empty? arr) 0]\n    [(member (first arr) (rest arr)) (find_sum (rest arr))]\n    [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (cond\n    [(empty? arr) 0]\n    [(member (first arr) (rest arr)) (find_sum (rest arr))]\n    [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (define (find_sum_helper arr acc)\n    (cond\n      [(empty? arr) acc]\n      [(member (first arr) (rest arr)) (find_sum_helper (rest arr) acc)]\n      [else (find_sum_helper (rest arr) (+ acc (first arr)))]))\n  (find_sum_helper arr 0))\n",
    "  (cond\n    [(empty? arr) 0]\n    [else\n     (if (member (first arr) (rest arr))\n         (find_sum (rest arr))\n         (+ (first arr) (find_sum (rest arr))))]))\n",
    "  (cond\n    [(empty? arr) 0]\n    [(member (first arr) (rest arr)) (find_sum (rest arr))]\n    [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (cond\n    [(empty? arr) 0]\n    [(member (first arr) (rest arr)) (find_sum (rest arr))]\n    [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (cond\n    [(empty? arr) 0]\n    [(member (first arr) (rest arr)) (find_sum (rest arr))]\n    [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (cond\n    [(empty? arr) 0]\n    [(member (first arr) (rest arr)) (find_sum (rest arr))]\n    [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (if (null? arr)\n      0\n      (if (member (car arr) (cdr arr))\n          (find_sum (cdr arr))\n          (+ (car arr) (find_sum (cdr arr))))))\n",
    "  (cond\n    [(empty? arr) 0]\n    [(member (first arr) (rest arr)) (find_sum (rest arr))]\n    [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (cond [(empty? arr) 0]\n        [(member (first arr) (rest arr)) (find_sum (rest arr))]\n        [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (cond\n    [(empty? arr) 0]\n    [(member (first arr) (rest arr)) (find_sum (rest arr))]\n    [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (cond\n    [(empty? arr) 0]\n    [(member (first arr) (rest arr)) (find_sum (rest arr))]\n    [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (cond\n    [(empty? arr) 0]\n    [(member (first arr) (rest arr)) (find_sum (rest arr))]\n    [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (cond\n    [(empty? arr) 0]\n    [(member (first arr) (rest arr)) (find_sum (rest arr))]\n    [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (cond\n    [(empty? arr) 0]\n    [(member (first arr) (rest arr)) (find_sum (rest arr))]\n    [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (cond\n    [(empty? arr) 0]\n    [(member (first arr) (rest arr)) (find_sum (rest arr))]\n    [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (cond\n    [(empty? arr) 0]\n    [else\n     (let* ([first (first arr)]\n            [rest (rest arr)]\n            [sum (find_sum rest)])\n       (if (member first rest)\n           sum\n           (+ first sum)))]))\n",
    "  (let loop ([arr arr] [sum 0])\n    (if (null? arr)\n        sum\n        (if (member (car arr) (cdr arr))\n            (loop (cdr arr) sum)\n            (loop (cdr arr) (+ sum (car arr)))))))\n",
    "  (define (find_sum_iter arr acc)\n    (cond\n      [(empty? arr) acc]\n      [(member (first arr) (rest arr)) (find_sum_iter (rest arr) acc)]\n      [else (find_sum_iter (rest arr) (+ acc (first arr)))]))\n  (find_sum_iter arr 0))\n",
    "  (cond\n    [(empty? arr) 0]\n    [(member (first arr) (rest arr)) (find_sum (rest arr))]\n    [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (cond\n    [(empty? arr) 0]\n    [(member (first arr) (rest arr)) (find_sum (rest arr))]\n    [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (cond\n    [(empty? arr) 0]\n    [(member (first arr) (rest arr)) (find_sum (rest arr))]\n    [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (cond\n    [(empty? arr) 0]\n    [(member (first arr) (rest arr)) (find_sum (rest arr))]\n    [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (cond [(empty? arr) 0]\n        [(member (first arr) (rest arr))\n         (find_sum (rest arr))]\n        [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (cond\n    [(empty? arr) 0]\n    [(member (first arr) (rest arr)) (find_sum (rest arr))]\n    [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (cond\n    [(empty? arr) 0]\n    [else\n     (let ([x (first arr)])\n       (+ x (find_sum (remove x (rest arr)))))]))\n",
    "  (cond\n    [(empty? arr) 0]\n    [(member (first arr) (rest arr)) (find_sum (rest arr))]\n    [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (cond\n    [(empty? arr) 0]\n    [(member (first arr) (rest arr)) (find_sum (rest arr))]\n    [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (cond\n    [(empty? arr) 0]\n    [(member (first arr) (rest arr)) (find_sum (rest arr))]\n    [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (cond\n    [(empty? arr) 0]\n    [else\n     (let ([x (first arr)])\n       (+ x (find_sum (remove x (rest arr)))))]))\n",
    "  (cond\n    [(empty? arr) 0]\n    [(member (first arr) (rest arr)) (find_sum (rest arr))]\n    [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (cond\n    [(empty? arr) 0]\n    [(member (first arr) (rest arr)) (find_sum (rest arr))]\n    [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (cond\n    [(empty? arr) 0]\n    [(member (first arr) (rest arr)) (find_sum (rest arr))]\n    [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (cond\n    [(empty? arr) 0]\n    [(member (first arr) (rest arr)) (find_sum (rest arr))]\n    [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (cond [(empty? arr) 0]\n        [(member (first arr) (rest arr)) (find_sum (rest arr))]\n        [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (cond\n    [(empty? arr) 0]\n    [(member (first arr) (rest arr)) (find_sum (rest arr))]\n    [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (cond\n    [(empty? arr) 0]\n    [(member (first arr) (rest arr)) (find_sum (rest arr))]\n    [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (cond [(empty? arr) 0]\n        [(member (first arr) (rest arr)) (find_sum (rest arr))]\n        [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (cond [(empty? arr) 0]\n        [else (+ (car arr) (find_sum (remove (car arr) (cdr arr))))]))\n",
    "  (cond\n    [(empty? arr) 0]\n    [(member (first arr) (rest arr)) (find_sum (rest arr))]\n    [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (cond\n    [(empty? arr) 0]\n    [(member (first arr) (rest arr)) (find_sum (rest arr))]\n    [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (cond\n    [(empty? arr) 0]\n    [(member (first arr) (rest arr)) (find_sum (rest arr))]\n    [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (define (find_sum_helper arr acc)\n    (cond\n      [(empty? arr) acc]\n      [(member (first arr) (rest arr)) (find_sum_helper (rest arr) acc)]\n      [else (find_sum_helper (rest arr) (+ acc (first arr)))]))\n  (find_sum_helper arr 0))\n",
    "  (cond\n    [(empty? arr) 0]\n    [(member (first arr) (rest arr)) (find_sum (rest arr))]\n    [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (cond\n    [(empty? arr) 0]\n    [(member (first arr) (rest arr)) (find_sum (rest arr))]\n    [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (cond\n    [(empty? arr) 0]\n    [(member (first arr) (rest arr)) (find_sum (rest arr))]\n    [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (cond [(empty? arr) 0]\n        [else (+ (car arr)\n                 (find_sum (remove (car arr) (cdr arr))))]))\n",
    "  (cond\n    [(empty? arr) 0]\n    [(member (first arr) (rest arr)) (find_sum (rest arr))]\n    [else (+ (first arr) (find_sum (rest arr)))]))\n",
    "  (cond\n    [(empty? arr) 0]\n    [(member (first arr) (rest arr)) (find_sum (rest arr))]\n    [else (+ (first arr) (find_sum (rest arr)))]))\n"
  ]
}
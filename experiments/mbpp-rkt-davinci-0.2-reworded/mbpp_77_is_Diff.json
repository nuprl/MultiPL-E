{
  "name": "mbpp_77_is_Diff",
  "language": "rkt",
  "prompt": "#lang racket\n\n;; Write a rktthon function to find whether a number is divisible by 11.\n(define (is_Diff n)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_77_is_Diff.py",
  "prompt_terminology": "reworded",
  "tests": "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate is_Diff))\n    (check-equal? (candidate 12345) #f)\n    (check-equal? (candidate 1212112) #t)\n    (check-equal? (candidate 1212) #f)\n))\n\n(test-humaneval)",
  "stop_tokens": [
    "\n(define ",
    "\n#|",
    "\n;",
    "\n("
  ],
  "completions": [
    "  (if (= (modulo n 11) 0)\n      #t\n      #f))\n",
    "  (if (zero? (remainder n 11))\n      #t\n      #f))\n",
    "  (if (zero? (modulo n 11))\n      #t\n      #f))\n",
    "  (if (zero? (modulo n 11))\n      #t\n      #f))\n",
    "  (if (= (modulo n 11) 0)\n      true\n      false))\n",
    "  (if (= (modulo n 11) 0)\n      #t\n      #f))\n",
    "  (define (helper n1 n2)\n    (if (= n1 n2)\n        #t\n        (if (= (modulo n1 10) (modulo n2 10))\n            #f\n            (helper (quotient n1 10) (quotient n2 10)))))\n  (helper n (quotient n 10)))\n",
    "  (if (zero? (modulo n 11))\n      #t\n      #f))\n",
    "  (cond\n    [(= n 0) #t]\n    [(= n 1) #f]\n    [(= n 2) #t]\n    [(= n 3) #f]\n    [(= n 4) #t]\n    [(= n 5) #f]\n    [(= n 6) #t]\n    [(= n 7) #f]\n    [(= n 8) #t]\n    [(= n 9) #f]\n    [(= n 10) #t]\n    [(= n 11) #f]\n    [(= n 12) #t]\n    [(= n 13) #f]\n    [(= n 14) #t]\n    [(= n 15) #f]\n    [(= n 16) #t]\n    [(= n 17) #f]\n    [(= n 18) #t]\n    [(= n 19) #f]\n    [(= n 20) #t]\n    [(= n 21) #f]\n    [(= n 22) #t]\n    [(= n 23) #f]\n    [(= n 24) #t]\n    [(= n 25) #f]\n    [(= n 26) #t]\n    [(= n 27) #f]\n    [(= n 28) #t]\n    [(= n 29) #f]\n    [(= n 30) #t]\n    [(= n 31) #f]\n    [(= n 32) #t]\n    [(= n 33) #f]\n    [(= n 34) #t]\n    [(= n 35) #f]\n    [(= n 36) #t]\n    [(= n 37) #f]\n    [(= n 38) #t]\n    [(= n 39) #f]\n    [(= n 40) #t]\n    [(= n 41) #f]\n    [(= n 42) #t]\n    [(= n 43) #f]\n    [(= n 44) #t]\n    [(= n 45) #f]\n    [(= n 46) #t]\n    [(= n 47) #f]\n    [(= n 48) #t]\n    [(= n 49) #f]\n    [(= n 50) #",
    "  (cond\n    [(= n 0) #t]\n    [(= n 1) #f]\n    [(= n 2) #f]\n    [(= n 3) #t]\n    [(= n 4) #f]\n    [(= n 5) #t]\n    [(= n 6) #f]\n    [(= n 7) #t]\n    [(= n 8) #f]\n    [(= n 9) #t]\n    [(= n 10) #f]\n    [(= n 11) #t]\n    [(= n 12) #f]\n    [(= n 13) #t]\n    [(= n 14) #f]\n    [(= n 15) #t]\n    [(= n 16) #f]\n    [(= n 17) #t]\n    [(= n 18) #f]\n    [(= n 19) #t]\n    [(= n 20) #f]\n    [(= n 21) #t]\n    [(= n 22) #f]\n    [(= n 23) #t]\n    [(= n 24) #f]\n    [(= n 25) #t]\n    [(= n 26) #f]\n    [(= n 27) #t]\n    [(= n 28) #f]\n    [(= n 29) #t]\n    [(= n 30) #f]\n    [(= n 31) #t]\n    [(= n 32) #f]\n    [(= n 33) #t]\n    [(= n 34) #f]\n    [(= n 35) #t]\n    [(= n 36) #f]\n    [(= n 37) #t]\n    [(= n 38) #f]\n    [(= n 39) #t]\n    [(= n 40) #f]\n    [(= n 41) #t]\n    [(= n 42) #f]\n    [(= n 43) #t]\n    [(= n 44) #f]\n    [(= n 45) #t]\n    [(= n 46) #f]\n    [(= n 47) #t]\n    [(= n 48) #f]\n    [(= n 49) #t]\n    [(= n 50) #",
    "  (define (diff n)\n    (cond\n      [(= n 0) 0]\n      [(= n 1) 1]\n      [else (- (diff (- n 2)) (diff (- n 1)))]))\n  (= (diff n) 0))\n",
    "  (if (= (modulo n 11) 0)\n      #t\n      #f))\n",
    "  (if (= (modulo n 11) 0)\n      #t\n      #f))\n",
    "  (if (= (modulo n 11) 0)\n      true\n      false))\n",
    "  (cond\n    [(= n 0) #t]\n    [(= n 1) #f]\n    [(= n 2) #t]\n    [(= n 3) #f]\n    [(= n 4) #t]\n    [(= n 5) #f]\n    [(= n 6) #t]\n    [(= n 7) #f]\n    [(= n 8) #t]\n    [(= n 9) #f]\n    [(= n 10) #t]\n    [(= n 11) #f]\n    [(= n 12) #t]\n    [(= n 13) #f]\n    [(= n 14) #t]\n    [(= n 15) #f]\n    [(= n 16) #t]\n    [(= n 17) #f]\n    [(= n 18) #t]\n    [(= n 19) #f]\n    [(= n 20) #t]\n    [(= n 21) #f]\n    [(= n 22) #t]\n    [(= n 23) #f]\n    [(= n 24) #t]\n    [(= n 25) #f]\n    [(= n 26) #t]\n    [(= n 27) #f]\n    [(= n 28) #t]\n    [(= n 29) #f]\n    [(= n 30) #t]\n    [(= n 31) #f]\n    [(= n 32) #t]\n    [(= n 33) #f]\n    [(= n 34) #t]\n    [(= n 35) #f]\n    [(= n 36) #t]\n    [(= n 37) #f]\n    [(= n 38) #t]\n    [(= n 39) #f]\n    [(= n 40) #t]\n    [(= n 41) #f]\n    [(= n 42) #t]\n    [(= n 43) #f]\n    [(= n 44) #t]\n    [(= n 45) #f]\n    [(= n 46) #t]\n    [(= n 47) #f]\n    [(= n 48) #t]\n    [(= n 49) #f]\n    [(= n 50) #",
    "  (if (zero? (remainder n 11))\n      #t\n      #f))\n",
    "  (if (zero? (modulo n 11))\n      #t\n      #f))\n",
    "  (if (zero? n)\n      #t\n      (let ([d (modulo n 10)]\n            [n (quotient n 10)])\n        (if (zero? n)\n            #f\n            (if (zero? (modulo (- d n) 11))\n                #t\n                #f)))))\n",
    "  (cond\n    [(= n 0) #t]\n    [(= n 1) #f]\n    [(= n 2) #t]\n    [(= n 3) #f]\n    [(= n 4) #t]\n    [(= n 5) #f]\n    [(= n 6) #t]\n    [(= n 7) #f]\n    [(= n 8) #t]\n    [(= n 9) #f]\n    [(= n 10) #t]\n    [(= n 11) #f]\n    [(= n 12) #t]\n    [(= n 13) #f]\n    [(= n 14) #t]\n    [(= n 15) #f]\n    [(= n 16) #t]\n    [(= n 17) #f]\n    [(= n 18) #t]\n    [(= n 19) #f]\n    [(= n 20) #t]\n    [(= n 21) #f]\n    [(= n 22) #t]\n    [(= n 23) #f]\n    [(= n 24) #t]\n    [(= n 25) #f]\n    [(= n 26) #t]\n    [(= n 27) #f]\n    [(= n 28) #t]\n    [(= n 29) #f]\n    [(= n 30) #t]\n    [(= n 31) #f]\n    [(= n 32) #t]\n    [(= n 33) #f]\n    [(= n 34) #t]\n    [(= n 35) #f]\n    [(= n 36) #t]\n    [(= n 37) #f]\n    [(= n 38) #t]\n    [(= n 39) #f]\n    [(= n 40) #t]\n    [(= n 41) #f]\n    [(= n 42) #t]\n    [(= n 43) #f]\n    [(= n 44) #t]\n    [(= n 45) #f]\n    [(= n 46) #t]\n    [(= n 47) #f]\n    [(= n 48) #t]\n    [(= n 49) #f]\n    [(= n 50) #",
    "  (if (zero? (modulo n 11))\n      #t\n      #f))\n"
  ]
}
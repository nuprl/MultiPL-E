{
  "name": "mbpp_391_convert_list_dictionary",
  "language": "rkt",
  "prompt": "#lang racket\n\n;; Write a function to convert more than one list to nested hash.\n(define (convert_list_dictionary l1 l2 l3)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_391_convert_list_dictionary.py",
  "prompt_terminology": "reworded",
  "tests": "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate convert_list_dictionary))\n    (check-equal? (candidate (list \"S001\" \"S002\" \"S003\" \"S004\") (list \"Adina Park\" \"Leyton Marsh\" \"Duncan Boyle\" \"Saim Richards\") (list 85 98 89 92)) (list #hash((\"S001\" .  #hash((\"Adina Park\" .  85)))) #hash((\"S002\" .  #hash((\"Leyton Marsh\" .  98)))) #hash((\"S003\" .  #hash((\"Duncan Boyle\" .  89)))) #hash((\"S004\" .  #hash((\"Saim Richards\" .  92))))))\n    (check-equal? (candidate (list \"abc\" \"def\" \"ghi\" \"jkl\") (list \"python\" \"program\" \"language\" \"programs\") (list 100 200 300 400)) (list #hash((\"abc\" .  #hash((\"python\" .  100)))) #hash((\"def\" .  #hash((\"program\" .  200)))) #hash((\"ghi\" .  #hash((\"language\" .  300)))) #hash((\"jkl\" .  #hash((\"programs\" .  400))))))\n    (check-equal? (candidate (list \"A1\" \"A2\" \"A3\" \"A4\") (list \"java\" \"C\" \"C++\" \"DBMS\") (list 10 20 30 40)) (list #hash((\"A1\" .  #hash((\"java\" .  10)))) #hash((\"A2\" .  #hash((\"C\" .  20)))) #hash((\"A3\" .  #hash((\"C++\" .  30)))) #hash((\"A4\" .  #hash((\"DBMS\" .  40))))))\n))\n\n(test-humaneval)",
  "stop_tokens": [
    "\n(define ",
    "\n#|",
    "\n;",
    "\n("
  ],
  "completions": [
    "  (define (convert_list_dictionary_iter l1 l2 l3)\n    (if (and (not (null? l1)) (not (null? l2)) (not (null? l3)))\n        (cons (cons (car l1) (cons (car l2) (cons (car l3) '())))\n              (convert_list_dictionary_iter (cdr l1) (cdr l2) (cdr l3)))\n        '()))\n  (convert_list_dictionary_iter l1 l2 l3))\n",
    "  (hash 'a l1 'b l2 'c l3))\n",
    "  (define (convert_list_dictionary_iter l1 l2 l3)\n    (if (and (not (null? l1)) (not (null? l2)) (not (null? l3)))\n        (cons (cons (car l1) (cons (car l2) (cons (car l3) '())))\n              (convert_list_dictionary_iter (cdr l1) (cdr l2) (cdr l3)))\n        '()))\n  (convert_list_dictionary_iter l1 l2 l3))\n",
    "  (define (convert_list_dictionary_iter l1 l2 l3)\n    (if (and (null? l1) (null? l2) (null? l3))\n        '()\n        (cons (cons (car l1) (cons (car l2) (cons (car l3) '())))\n              (convert_list_dictionary_iter (cdr l1) (cdr l2) (cdr l3)))))\n  (convert_list_dictionary_iter l1 l2 l3))\n",
    "  (list (list 'a l1) (list 'b l2) (list 'c l3)))\n",
    "  (list->hash (list->hash (list->hash '() l1 l2) l1 l3) l2 l3))\n",
    "  (hash\n   'a (hash 'b l1 'c l2)\n   'd (hash 'e l3)))\n",
    "  (define (convert_list_dictionary_iter l1 l2 l3)\n    (cond ((and (null? l1) (null? l2) (null? l3)) '())\n          ((and (null? l1) (null? l2)) (cons (cons (car l3) '()) (convert_list_dictionary_iter l1 l2 (cdr l3))))\n          ((and (null? l1) (null? l3)) (cons (cons (car l2) '()) (convert_list_dictionary_iter l1 (cdr l2) l3)))\n          ((and (null? l2) (null? l3)) (cons (cons (car l1) '()) (convert_list_dictionary_iter (cdr l1) l2 l3)))\n          ((and (null? l1) (not (null? l2)) (not (null? l3))) (cons (cons (car l2) (list (car l3))) (convert_list_dictionary_iter l1 (cdr l2) (cdr l3))))\n          ((and (null? l2) (not (null? l1)) (not (null? l3))) (cons (cons (car l1) (list (car l3))) (convert_list_dictionary_iter (cdr l1) l2 (cdr l3))))\n          ((and (null? l3) (not (null? l1)) (not (null? l2))) (cons (cons (car l1) (list (car l2))) (convert_list_dictionary_iter (cdr l1) (cdr l2) l3)))\n          ((and (not (null? l1)) (not (null? l2)) (not (null? l3))) (cons (cons (car l1) (list (car l2) (car l3))) (convert_list_dictionary_iter (cdr l1) (cdr l2) (cdr l3))))))\n  (convert_list_dictionary_iter l1 l2 l3))\n",
    "  (define (convert_list_dictionary_iter l1 l2 l3)\n    (cond\n      [(empty? l1) '()]\n      [(empty? l2) '()]\n      [(empty? l3) '()]\n      [else (cons (cons (car l1) (cons (car l2) (cons (car l3) '())))\n                  (convert_list_dictionary_iter (cdr l1) (cdr l2) (cdr l3)))]))\n  (convert_list_dictionary_iter l1 l2 l3))\n",
    "  (hash 'a l1 'b l2 'c l3))\n",
    "  (define (convert_list_dictionary_helper l1 l2 l3)\n    (cond\n      [(empty? l1) empty]\n      [(empty? l2) empty]\n      [(empty? l3) empty]\n      [else (cons (list (car l1) (car l2) (car l3))\n                  (convert_list_dictionary_helper (cdr l1) (cdr l2) (cdr l3)))]))\n  (convert_list_dictionary_helper l1 l2 l3))\n",
    "  (define (convert_list_dictionary_iter l1 l2 l3)\n    (cond\n      [(empty? l1) (list)]\n      [(empty? l2) (list)]\n      [(empty? l3) (list)]\n      [else (cons (list (car l1) (car l2) (car l3))\n                  (convert_list_dictionary_iter (cdr l1) (cdr l2) (cdr l3)))]))\n  (convert_list_dictionary_iter l1 l2 l3))\n",
    "  (hash 'a (hash 'b (hash 'c l1) 'd l2) 'e l3))\n",
    "  (hash 'a l1 'b l2 'c l3))\n",
    "  (hash 'a l1 'b l2 'c l3))\n",
    "  (define (convert_list_dictionary_iter l1 l2 l3)\n    (cond\n      [(and (null? l1) (null? l2) (null? l3)) '()]\n      [(and (null? l1) (null? l2) (not (null? l3))) (cons (cons (car l3) '()) (convert_list_dictionary_iter l1 l2 (cdr l3)))]\n      [(and (null? l1) (not (null? l2)) (null? l3)) (cons (cons (car l2) '()) (convert_list_dictionary_iter l1 (cdr l2) l3))]\n      [(and (not (null? l1)) (null? l2) (null? l3)) (cons (cons (car l1) '()) (convert_list_dictionary_iter (cdr l1) l2 l3))]\n      [(and (not (null? l1)) (not (null? l2)) (not (null? l3))) (cons (cons (car l1) (cons (cons (car l2) (car l3)) '())) (convert_list_dictionary_iter (cdr l1) (cdr l2) (cdr l3)))]\n      [(and (not (null? l1)) (not (null? l2)) (null? l3)) (cons (cons (car l1) (cons (cons (car l2) '()) '())) (convert_list_dictionary_iter (cdr l1) (cdr l2) l3))]\n      [(and (not (null? l1)) (null? l2) (not (null? l3))) (cons (cons (car l1) (cons (cons '() (car l3)) '())) (convert_list_dictionary_iter (cdr l1) l2 (cdr l3)))]\n      [(and (null? l1) (not (null? l2)) (not (null? l3))) (cons (cons (car l2) (cons (cons '() (car l3)) '())) (convert_list_dictionary_iter l",
    "  (hash 'a (hash 'b (hash 'c (hash 'd l1) l2) l3)))\n",
    "  (define (convert_list_dictionary_helper l1 l2 l3)\n    (cond ((and (null? l1) (null? l2) (null? l3)) '())\n          ((and (null? l1) (null? l2)) (cons (cons (car l3) '()) (convert_list_dictionary_helper l1 l2 (cdr l3))))\n          ((and (null? l1) (null? l3)) (cons (cons (car l2) '()) (convert_list_dictionary_helper l1 (cdr l2) l3)))\n          ((and (null? l2) (null? l3)) (cons (cons (car l1) '()) (convert_list_dictionary_helper (cdr l1) l2 l3)))\n          ((and (null? l1) (not (null? l2)) (not (null? l3))) (cons (cons (car l2) (cons (car l3) '())) (convert_list_dictionary_helper l1 (cdr l2) (cdr l3))))\n          ((and (null? l2) (not (null? l1)) (not (null? l3))) (cons (cons (car l1) (cons (car l3) '())) (convert_list_dictionary_helper (cdr l1) l2 (cdr l3))))\n          ((and (null? l3) (not (null? l1)) (not (null? l2))) (cons (cons (car l1) (cons (car l2) '())) (convert_list_dictionary_helper (cdr l1) (cdr l2) l3)))\n          ((and (not (null? l1)) (not (null? l2)) (not (null? l3))) (cons (cons (car l1) (cons (car l2) (cons (car l3) '()))) (convert_list_dictionary_helper (cdr l1) (cdr l2) (cdr l3))))))\n  (convert_list_dictionary_helper l1 l2 l3))\n",
    "  (define (convert_list_dictionary_iter l1 l2 l3)\n    (cond\n      ((and (null? l1) (null? l2) (null? l3)) '())\n      ((and (null? l1) (null? l2)) (cons (list (car l3) '()) (convert_list_dictionary_iter l1 l2 (cdr l3))))\n      ((and (null? l1) (null? l3)) (cons (list (car l2) '()) (convert_list_dictionary_iter l1 (cdr l2) l3)))\n      ((and (null? l2) (null? l3)) (cons (list (car l1) '()) (convert_list_dictionary_iter (cdr l1) l2 l3)))\n      ((null? l1) (cons (list (car l2) (car l3)) (convert_list_dictionary_iter l1 (cdr l2) (cdr l3))))\n      ((null? l2) (cons (list (car l1) (car l3)) (convert_list_dictionary_iter (cdr l1) l2 (cdr l3))))\n      ((null? l3) (cons (list (car l1) (car l2)) (convert_list_dictionary_iter (cdr l1) (cdr l2) l3)))\n      (else (cons (list (car l1) (car l2) (car l3)) (convert_list_dictionary_iter (cdr l1) (cdr l2) (cdr l3))))))\n  (convert_list_dictionary_iter l1 l2 l3))\n",
    "  (hash 'a l1 'b l2 'c l3))\n",
    "  (hash 'key1 l1 'key2 l2 'key3 l3))\n",
    "  (define (convert_list_dictionary_helper l1 l2 l3)\n    (cond\n      [(empty? l1) (list)]\n      [(empty? l2) (list)]\n      [(empty? l3) (list)]\n      [else (cons (list (car l1) (car l2) (car l3))\n                  (convert_list_dictionary_helper (cdr l1) (cdr l2) (cdr l3)))]))\n  (convert_list_dictionary_helper l1 l2 l3))\n",
    "  (hash 'a l1 'b l2 'c l3))\n",
    "  (define (convert_list_dictionary_iter l1 l2 l3 acc)\n    (cond\n      [(empty? l1) acc]\n      [else (convert_list_dictionary_iter (rest l1) (rest l2) (rest l3) (hash-set acc (first l1) (hash (first l2) (first l3))))]))\n  (convert_list_dictionary_iter l1 l2 l3 (hash)))\n",
    "  (define (convert_list_dictionary_iter l1 l2 l3)\n    (cond\n      [(empty? l1) (list)]\n      [(empty? l2) (list)]\n      [(empty? l3) (list)]\n      [else (cons (list (car l1) (car l2) (car l3)) (convert_list_dictionary_iter (cdr l1) (cdr l2) (cdr l3)))]))\n  (convert_list_dictionary_iter l1 l2 l3))\n",
    "  (hash 'a l1 'b l2 'c l3))\n",
    "  (list (list (list (car l1) (car l2) (car l3))\n              (list (cadr l1) (cadr l2) (cadr l3))\n              (list (caddr l1) (caddr l2) (caddr l3)))\n        (list (list (cadddr l1) (cadddr l2) (cadddr l3))\n              (list (caddddr l1) (caddddr l2) (caddddr l3))\n              (list (cadddddr l1) (cadddddr l2) (cadddddr l3)))))\n",
    "  (list (list 'a l1) (list 'b l2) (list 'c l3)))\n",
    "  (define (convert_list_dictionary_iter l1 l2 l3)\n    (cond\n      [(empty? l1) '()]\n      [(empty? l2) '()]\n      [(empty? l3) '()]\n      [else (cons (list (car l1) (car l2) (car l3))\n                  (convert_list_dictionary_iter (cdr l1) (cdr l2) (cdr l3)))]))\n  (convert_list_dictionary_iter l1 l2 l3))\n",
    "  (hash 'a l1 'b l2 'c l3))\n",
    "  (define (convert_list_dictionary_helper l1 l2 l3)\n    (cond\n      [(empty? l1) '()]\n      [(empty? l2) '()]\n      [(empty? l3) '()]\n      [else\n       (cons (cons (car l1) (cons (car l2) (cons (car l3) '())))\n             (convert_list_dictionary_helper (cdr l1) (cdr l2) (cdr l3)))]))\n  (convert_list_dictionary_helper l1 l2 l3))\n",
    "  (hash 'key1 l1 'key2 l2 'key3 l3))\n",
    "  (define (convert_list_dictionary_iter l1 l2 l3)\n    (cond\n      [(empty? l1) '()]\n      [(empty? l2) '()]\n      [(empty? l3) '()]\n      [else (cons (cons (first l1) (cons (first l2) (first l3))) (convert_list_dictionary_iter (rest l1) (rest l2) (rest l3)))]))\n  (convert_list_dictionary_iter l1 l2 l3))\n",
    "  (hash 'a l1 'b l2 'c l3))\n",
    "  (hash 'list1 l1 'list2 l2 'list3 l3))\n",
    "  (hash 'a l1 'b l2 'c l3))\n",
    "  (hash-ref (hash-ref (hash-ref (hash l1 l2) l1 l3) l1 l2) l1 l3))\n",
    "  (hash 'a l1 'b l2 'c l3))\n",
    "  (define (convert_list_dictionary_helper l1 l2 l3)\n    (cond\n      [(empty? l1) '()]\n      [(empty? l2) '()]\n      [(empty? l3) '()]\n      [else (cons (cons (car l1) (cons (car l2) (car l3))) (convert_list_dictionary_helper (cdr l1) (cdr l2) (cdr l3)))]))\n  (convert_list_dictionary_helper l1 l2 l3))\n",
    "  (hash 'l1 l1 'l2 l2 'l3 l3))\n",
    "  (list (list (list (car l1) (car l2) (car l3)))))\n",
    "  (define (convert_list_dictionary_iter l1 l2 l3)\n    (if (null? l1)\n        '()\n        (cons (cons (car l1) (cons (car l2) (car l3)))\n              (convert_list_dictionary_iter (cdr l1) (cdr l2) (cdr l3)))))\n  (convert_list_dictionary_iter l1 l2 l3))\n",
    "  (let ([l1 (map (lambda (x) (cons 'name x)) l1)]\n        [l2 (map (lambda (x) (cons 'age x)) l2)]\n        [l3 (map (lambda (x) (cons 'address x)) l3)])\n    (map (lambda (x y z) (hash 'name (cdr x) 'age (cdr y) 'address (cdr z))) l1 l2 l3)))\n",
    "  (define (convert_list_dictionary_iter l1 l2 l3)\n    (if (and (null? l1) (null? l2) (null? l3))\n        '()\n        (cons (cons (car l1) (cons (car l2) (cons (car l3) '())))\n              (convert_list_dictionary_iter (cdr l1) (cdr l2) (cdr l3)))))\n  (convert_list_dictionary_iter l1 l2 l3))\n",
    "  (hash 'a l1 'b l2 'c l3))\n",
    "  (hash-ref (hash-ref (hash-ref (hash 'a l1) 'b l2) 'c l3) 'c))\n",
    "  (hash 'a l1 'b l2 'c l3))\n",
    "  (hash 'a l1 'b l2 'c l3))\n",
    "  (define (convert_list_dictionary_iter l1 l2 l3)\n    (cond\n      [(empty? l1) '()]\n      [(empty? l2) '()]\n      [(empty? l3) '()]\n      [else (cons (cons (car l1) (cons (car l2) (cons (car l3) '())))\n                  (convert_list_dictionary_iter (cdr l1) (cdr l2) (cdr l3)))]))\n  (convert_list_dictionary_iter l1 l2 l3))\n",
    "  (define (convert_list_dictionary_iter l1 l2 l3)\n    (cond\n      [(empty? l1) (list)]\n      [(empty? l2) (list)]\n      [(empty? l3) (list)]\n      [else (cons (list (car l1) (car l2) (car l3))\n                  (convert_list_dictionary_iter (cdr l1) (cdr l2) (cdr l3)))]))\n  (convert_list_dictionary_iter l1 l2 l3))\n",
    "  (hash 'a l1 'b l2 'c l3))\n",
    "  (define (convert_list_dictionary_helper l1 l2 l3)\n    (cond\n      [(empty? l1) (list)]\n      [(empty? l2) (list)]\n      [(empty? l3) (list)]\n      [else (cons (list (car l1) (car l2) (car l3))\n                  (convert_list_dictionary_helper (cdr l1) (cdr l2) (cdr l3)))]))\n  (convert_list_dictionary_helper l1 l2 l3))\n",
    "  (hash 'a l1 'b l2 'c l3))\n",
    "  (hash 'a l1 'b l2 'c l3))\n",
    "  (define (convert_list_dictionary_helper l1 l2 l3)\n    (cond\n      [(null? l1) '()]\n      [(null? l2) '()]\n      [(null? l3) '()]\n      [else (cons (list (car l1) (car l2) (car l3))\n                  (convert_list_dictionary_helper (cdr l1) (cdr l2) (cdr l3)))]))\n  (convert_list_dictionary_helper l1 l2 l3))\n",
    "  (hash 'a l1 'b l2 'c l3))\n",
    "  (define (convert_list_dictionary_iter l1 l2 l3)\n    (cond\n      [(empty? l1) '()]\n      [(empty? l2) '()]\n      [(empty? l3) '()]\n      [else (cons (cons (car l1) (cons (car l2) (cons (car l3) '())))\n                  (convert_list_dictionary_iter (cdr l1) (cdr l2) (cdr l3)))]))\n  (convert_list_dictionary_iter l1 l2 l3))\n",
    "  (hash 'key1 l1 'key2 l2 'key3 l3))\n",
    "  (hash 'first l1 'second l2 'third l3))\n",
    "  (define (convert_list_dictionary_iter l1 l2 l3)\n    (cond\n      [(empty? l1) '()]\n      [(empty? l2) '()]\n      [(empty? l3) '()]\n      [else (cons (list (car l1) (car l2) (car l3))\n                  (convert_list_dictionary_iter (cdr l1) (cdr l2) (cdr l3)))]))\n  (convert_list_dictionary_iter l1 l2 l3))\n",
    "  (hash 'a l1 'b l2 'c l3))\n",
    "  (hash 'a l1 'b l2 'c l3))\n",
    "  (list (list (list (car l1) (car l2) (car l3)))))\n",
    "  (hash 'a l1 'b l2 'c l3))\n",
    "  (define (convert_list_dictionary_iter l1 l2 l3)\n    (cond\n      [(empty? l1) '()]\n      [(empty? l2) '()]\n      [(empty? l3) '()]\n      [else (cons (cons (car l1) (cons (car l2) (car l3)))\n                  (convert_list_dictionary_iter (cdr l1) (cdr l2) (cdr l3)))]))\n  (convert_list_dictionary_iter l1 l2 l3))\n",
    "  (hash 'a l1 'b l2 'c l3))\n",
    "  (define (convert_list_dictionary_iter l1 l2 l3)\n    (if (empty? l1)\n        (hash)\n        (hash-set (convert_list_dictionary_iter (rest l1) (rest l2) (rest l3))\n                  (first l1)\n                  (hash (first l2) (first l3)))))\n  (convert_list_dictionary_iter l1 l2 l3))\n",
    "  (define (convert_list_dictionary_iter l1 l2 l3)\n    (if (and (not (null? l1)) (not (null? l2)) (not (null? l3)))\n        (cons (cons (car l1) (cons (car l2) (cons (car l3) '())))\n              (convert_list_dictionary_iter (cdr l1) (cdr l2) (cdr l3)))\n        '()))\n  (convert_list_dictionary_iter l1 l2 l3))\n",
    "  (hash 'a l1 'b l2 'c l3))\n",
    "  (hash 'a (hash 'b (hash 'c l3) l2) l1))\n",
    "  (hash-ref (hash-ref (hash-ref (hash 'a l1) 'b l2) 'c l3) 'c))\n",
    "  (define (convert_list_dictionary_iter l1 l2 l3)\n    (cond\n      [(empty? l1) '()]\n      [(empty? l2) '()]\n      [(empty? l3) '()]\n      [else (cons (cons (first l1) (cons (first l2) (cons (first l3) '())))\n                   (convert_list_dictionary_iter (rest l1) (rest l2) (rest l3)))]))\n  (convert_list_dictionary_iter l1 l2 l3))\n",
    "  (define (convert_list_dictionary_iter l1 l2 l3)\n    (if (and (null? l1) (null? l2) (null? l3))\n        '()\n        (cons (cons (car l1) (cons (car l2) (cons (car l3) '())))\n              (convert_list_dictionary_iter (cdr l1) (cdr l2) (cdr l3)))))\n  (convert_list_dictionary_iter l1 l2 l3))\n",
    "  (hash 'a l1 'b l2 'c l3))\n",
    "  (hash 'a l1 'b l2 'c l3))\n",
    "  (hash 'a l1 'b l2 'c l3))\n",
    "  (hash 'a l1 'b l2 'c l3))\n",
    "  (list (list 'a l1) (list 'b l2) (list 'c l3)))\n",
    "  (hash 'a l1 'b l2 'c l3))\n",
    "  (define (convert_list_dictionary_iter l1 l2 l3)\n    (if (null? l1)\n        '()\n        (cons (cons (car l1) (list (car l2) (car l3)))\n              (convert_list_dictionary_iter (cdr l1) (cdr l2) (cdr l3)))))\n  (convert_list_dictionary_iter l1 l2 l3))\n",
    "  (define (convert_list_dictionary_iter l1 l2 l3)\n    (cond\n      [(empty? l1) '()]\n      [(empty? l2) '()]\n      [(empty? l3) '()]\n      [else (cons (cons (car l1) (cons (car l2) (cons (car l3) '())))\n                  (convert_list_dictionary_iter (cdr l1) (cdr l2) (cdr l3)))]))\n  (convert_list_dictionary_iter l1 l2 l3))\n",
    "  (list (list (list (list 'name l1) (list 'age l2)) (list 'address l3))))\n",
    "  (define (convert_list_dictionary_iter l1 l2 l3)\n    (cond [(empty? l1) '()]\n          [else (cons (cons (first l1) (cons (first l2) (first l3)))\n                      (convert_list_dictionary_iter (rest l1) (rest l2) (rest l3)))]))\n  (convert_list_dictionary_iter l1 l2 l3))\n",
    "  (define (convert_list_dictionary_iter l1 l2 l3)\n    (cond\n      [(empty? l1) '()]\n      [(empty? l2) '()]\n      [(empty? l3) '()]\n      [else (cons (cons (car l1) (cons (car l2) (cons (car l3) '())))\n                  (convert_list_dictionary_iter (cdr l1) (cdr l2) (cdr l3)))]))\n  (convert_list_dictionary_iter l1 l2 l3))\n",
    "  (define (convert_list_dictionary_helper l1 l2 l3)\n    (if (null? l1)\n        '()\n        (cons (cons (car l1) (cons (car l2) (car l3)))\n              (convert_list_dictionary_helper (cdr l1) (cdr l2) (cdr l3)))))\n  (convert_list_dictionary_helper l1 l2 l3))\n",
    "  (define (convert_list_dictionary_helper l1 l2 l3)\n    (if (null? l1)\n        '()\n        (cons (cons (car l1) (cons (car l2) (car l3)))\n              (convert_list_dictionary_helper (cdr l1) (cdr l2) (cdr l3)))))\n  (convert_list_dictionary_helper l1 l2 l3))\n",
    "  (define (convert_list_dictionary_iter l1 l2 l3)\n    (if (and (null? l1) (null? l2) (null? l3))\n        '()\n        (cons (cons (car l1) (cons (car l2) (cons (car l3) '())))\n              (convert_list_dictionary_iter (cdr l1) (cdr l2) (cdr l3)))))\n  (convert_list_dictionary_iter l1 l2 l3))\n",
    "  (define (convert_list_dictionary_helper l1 l2 l3)\n    (cond\n      [(empty? l1) '()]\n      [(empty? l2) '()]\n      [(empty? l3) '()]\n      [else (cons (list (car l1) (car l2) (car l3))\n                  (convert_list_dictionary_helper (cdr l1) (cdr l2) (cdr l3)))]))\n  (convert_list_dictionary_helper l1 l2 l3))\n",
    "  (hash 'a l1 'b l2 'c l3))\n",
    "  (define (convert_list_dictionary_iter l1 l2 l3)\n    (cond\n      [(empty? l1) '()]\n      [(empty? l2) '()]\n      [(empty? l3) '()]\n      [else (cons (cons (car l1) (cons (car l2) (cons (car l3) '())))\n                 (convert_list_dictionary_iter (cdr l1) (cdr l2) (cdr l3)))]))\n  (convert_list_dictionary_iter l1 l2 l3))\n",
    "  (define (convert_list_dictionary_iter l1 l2 l3)\n    (cond\n      [(empty? l1) '()]\n      [(empty? l2) (cons (cons (first l1) '()) (convert_list_dictionary_iter (rest l1) l2 l3))]\n      [(empty? l3) (cons (cons (first l1) (cons (first l2) '())) (convert_list_dictionary_iter (rest l1) (rest l2) l3))]\n      [else (cons (cons (first l1) (cons (first l2) (cons (first l3) '()))) (convert_list_dictionary_iter (rest l1) (rest l2) (rest l3)))]))\n  (convert_list_dictionary_iter l1 l2 l3))\n",
    "  (hash 'l1 l1 'l2 l2 'l3 l3))\n",
    "  (define (convert_list_dictionary_iter l1 l2 l3 acc)\n    (cond\n      [(empty? l1) acc]\n      [(empty? l2) acc]\n      [(empty? l3) acc]\n      [else (convert_list_dictionary_iter (rest l1) (rest l2) (rest l3) (hash-set acc (first l1) (hash (first l2) (first l3))))]))\n  (convert_list_dictionary_iter l1 l2 l3 (hash)))\n",
    "  (define (convert_list_dictionary_iter l1 l2 l3)\n    (cond\n      [(empty? l1) '()]\n      [(empty? l2) '()]\n      [(empty? l3) '()]\n      [else (cons (cons (car l1) (cons (car l2) (cons (car l3) '())))\n                  (convert_list_dictionary_iter (cdr l1) (cdr l2) (cdr l3)))]))\n  (convert_list_dictionary_iter l1 l2 l3))\n",
    "  (hash 'a l1 'b l2 'c l3))\n",
    "  (hash 'a l1 'b l2 'c l3))\n",
    "  (let ([l1 (map (lambda (x) (cons 'name x)) l1)]\n        [l2 (map (lambda (x) (cons 'age x)) l2)]\n        [l3 (map (lambda (x) (cons 'gender x)) l3)])\n    (map (lambda (x y z) (hash 'name (cdr x) 'age (cdr y) 'gender (cdr z))) l1 l2 l3)))\n",
    "  (define (convert_list_dictionary_iter l1 l2 l3)\n    (cond\n      [(empty? l1) '()]\n      [(empty? l2) '()]\n      [(empty? l3) '()]\n      [else (cons (cons (car l1) (cons (car l2) (cons (car l3) '())))\n                  (convert_list_dictionary_iter (cdr l1) (cdr l2) (cdr l3)))]))\n  (convert_list_dictionary_iter l1 l2 l3))\n",
    "  (let ((l1 (map (lambda (x) (cons 'key x)) l1))\n        (l2 (map (lambda (x) (cons 'value x)) l2))\n        (l3 (map (lambda (x) (cons 'value x)) l3)))\n    (map (lambda (x y z) (list (list 'key x) (list 'value y) (list 'value z))) l1 l2 l3)))\n",
    "  (define (convert_list_dictionary_iter l1 l2 l3)\n    (cond\n      [(empty? l1) '()]\n      [(empty? l2) '()]\n      [(empty? l3) '()]\n      [else (cons (cons (car l1) (cons (car l2) (cons (car l3) '())))\n                  (convert_list_dictionary_iter (cdr l1) (cdr l2) (cdr l3)))]))\n  (convert_list_dictionary_iter l1 l2 l3))\n",
    "  (hash 'a l1 'b l2 'c l3))\n",
    "  (define (convert_list_dictionary_iter l1 l2 l3)\n    (if (null? l1)\n        '()\n        (cons (cons (car l1) (cons (car l2) (cons (car l3) '())))\n              (convert_list_dictionary_iter (cdr l1) (cdr l2) (cdr l3)))))\n  (convert_list_dictionary_iter l1 l2 l3))\n",
    "  (hash 'a l1 'b l2 'c l3))\n",
    "  (define (convert_list_dictionary_iter l1 l2 l3 acc)\n    (cond\n      [(empty? l1) acc]\n      [else\n       (convert_list_dictionary_iter (rest l1) (rest l2) (rest l3)\n                                     (hash-set acc (first l1)\n                                               (hash (first l2) (first l3))))]))\n  (convert_list_dictionary_iter l1 l2 l3 (hash)))\n",
    "  (hash 'a l1 'b l2 'c l3))\n",
    "  (hash 'key1 l1 'key2 l2 'key3 l3))\n",
    "  (hash 'a l1 'b l2 'c l3))\n",
    "  (hash 'a l1 'b l2 'c l3))\n",
    "  (hash 'a l1 'b l2 'c l3))\n",
    "  (hash 'l1 l1 'l2 l2 'l3 l3))\n",
    "  (hash 'a l1 'b l2 'c l3))\n",
    "  (hash 'a l1 'b l2 'c l3))\n",
    "  (define (convert_list_dictionary_iter l1 l2 l3)\n    (cond [(empty? l1) '()]\n          [(empty? l2) '()]\n          [(empty? l3) '()]\n          [else (cons (cons (car l1) (cons (car l2) (cons (car l3) '())))\n                      (convert_list_dictionary_iter (cdr l1) (cdr l2) (cdr l3)))]))\n  (convert_list_dictionary_iter l1 l2 l3))\n",
    "  (define (convert_list_dictionary_iter l1 l2 l3)\n    (cond\n      [(empty? l1) empty]\n      [(empty? l2) empty]\n      [(empty? l3) empty]\n      [else (cons (cons (car l1) (cons (car l2) (cons (car l3) empty)))\n                  (convert_list_dictionary_iter (cdr l1) (cdr l2) (cdr l3)))]))\n  (convert_list_dictionary_iter l1 l2 l3))\n",
    "  (define (convert_list_dictionary_iter l1 l2 l3 result)\n    (cond\n      [(empty? l1) result]\n      [(empty? l2) (convert_list_dictionary_iter (rest l1) l2 l3 (cons (cons (first l1) '()) result))]\n      [(empty? l3) (convert_list_dictionary_iter (rest l1) l2 l3 (cons (cons (first l1) (cons (cons (first l2) '()) '())) result))]\n      [else (convert_list_dictionary_iter (rest l1) (rest l2) (rest l3) (cons (cons (first l1) (cons (cons (first l2) (first l3)) '())) result))]))\n  (reverse (convert_list_dictionary_iter l1 l2 l3 '())))\n",
    "  (hash 'a l1 'b l2 'c l3))\n",
    "  (hash-ref (hash-ref (hash-ref (hash 'a l1) 'b l2) 'c l3) 'c))\n",
    "  (hash 'a l1 'b l2 'c l3))\n",
    "  (define (convert_list_dictionary_iter l1 l2 l3)\n    (cond\n      [(empty? l1) '()]\n      [(empty? l2) '()]\n      [(empty? l3) '()]\n      [else (cons (cons (car l1) (cons (car l2) (cons (car l3) '())))\n                  (convert_list_dictionary_iter (cdr l1) (cdr l2) (cdr l3)))]))\n  (convert_list_dictionary_iter l1 l2 l3))\n",
    "  (hash 'a l1 'b l2 'c l3))\n",
    "  (hash-ref (hash-ref (hash-ref (hash 'a l1) 'b l2) 'c l3) 'c))\n",
    "  (hash 'a l1 'b l2 'c l3))\n",
    "  (hash 'a l1 'b l2 'c l3))\n",
    "  (hash 'a l1 'b l2 'c l3))\n",
    "  (hash 'a l1 'b l2 'c l3))\n",
    "  (define (convert_list_dictionary_iter l1 l2 l3)\n    (if (and (not (null? l1)) (not (null? l2)) (not (null? l3)))\n        (cons (cons (car l1) (cons (car l2) (car l3)))\n              (convert_list_dictionary_iter (cdr l1) (cdr l2) (cdr l3)))\n        '()))\n  (convert_list_dictionary_iter l1 l2 l3))\n",
    "  (define (convert_list_dictionary_helper l1 l2 l3)\n    (if (null? l1)\n        '()\n        (cons (cons (car l1) (cons (car l2) (car l3)))\n              (convert_list_dictionary_helper (cdr l1) (cdr l2) (cdr l3)))))\n  (convert_list_dictionary_helper l1 l2 l3))\n",
    "  (define (convert_list_dictionary_helper l1 l2 l3)\n    (cond [(null? l1) '()]\n          [(null? l2) '()]\n          [(null? l3) '()]\n          [else (cons (cons (car l1) (cons (car l2) (car l3)))\n                      (convert_list_dictionary_helper (cdr l1) (cdr l2) (cdr l3)))]))\n  (convert_list_dictionary_helper l1 l2 l3))\n",
    "  (hash 'a l1 'b l2 'c l3))\n",
    "  (define (convert_list_dictionary_iter l1 l2 l3)\n    (if (and (not (null? l1)) (not (null? l2)) (not (null? l3)))\n        (cons (cons (car l1) (cons (car l2) (cons (car l3) '())))\n              (convert_list_dictionary_iter (cdr l1) (cdr l2) (cdr l3)))\n        '()))\n  (convert_list_dictionary_iter l1 l2 l3))\n",
    "  (hash 'a l1 'b l2 'c l3))\n",
    "  (hash 'a l1 'b l2 'c l3))\n",
    "  (define (convert_list_dictionary_iter l1 l2 l3)\n    (cond\n      [(empty? l1) empty]\n      [(empty? l2) empty]\n      [(empty? l3) empty]\n      [else (cons (cons (car l1) (cons (car l2) (cons (car l3) empty)))\n                  (convert_list_dictionary_iter (cdr l1) (cdr l2) (cdr l3)))]))\n  (convert_list_dictionary_iter l1 l2 l3))\n",
    "  (define (convert_list_dictionary_iter l1 l2 l3)\n    (cond\n      [(empty? l1) '()]\n      [(empty? l2) '()]\n      [(empty? l3) '()]\n      [else (cons (cons (car l1) (cons (car l2) (cons (car l3) '())))\n                  (convert_list_dictionary_iter (cdr l1) (cdr l2) (cdr l3)))]))\n  (convert_list_dictionary_iter l1 l2 l3))\n",
    "  (define (convert_list_dictionary_iter l1 l2 l3)\n    (if (and (not (null? l1)) (not (null? l2)) (not (null? l3)))\n        (cons (cons (car l1) (cons (car l2) (cons (car l3) '())))\n              (convert_list_dictionary_iter (cdr l1) (cdr l2) (cdr l3)))\n        '()))\n  (convert_list_dictionary_iter l1 l2 l3))\n",
    "  (hash 'a l1 'b l2 'c l3))\n",
    "  (define (convert_list_dictionary_iter l1 l2 l3)\n    (if (and (null? l1) (null? l2) (null? l3))\n        '()\n        (cons (cons (car l1) (cons (car l2) (cons (car l3) '())))\n              (convert_list_dictionary_iter (cdr l1) (cdr l2) (cdr l3)))))\n  (convert_list_dictionary_iter l1 l2 l3))\n",
    "  (define (convert_list_dictionary_helper l1 l2 l3)\n    (cond ((and (null? l1) (null? l2) (null? l3)) '())\n          ((and (null? l1) (null? l2)) (cons (cons 'c3 (car l3)) (convert_list_dictionary_helper l1 l2 (cdr l3))))\n          ((and (null? l1) (null? l3)) (cons (cons 'c2 (car l2)) (convert_list_dictionary_helper l1 (cdr l2) l3)))\n          ((and (null? l2) (null? l3)) (cons (cons 'c1 (car l1)) (convert_list_dictionary_helper (cdr l1) l2 l3)))\n          ((and (null? l1) (not (null? l2)) (not (null? l3))) (cons (cons 'c2 (car l2)) (cons (cons 'c3 (car l3)) (convert_list_dictionary_helper l1 (cdr l2) (cdr l3)))))\n          ((and (null? l2) (not (null? l1)) (not (null? l3))) (cons (cons 'c1 (car l1)) (cons (cons 'c3 (car l3)) (convert_list_dictionary_helper (cdr l1) l2 (cdr l3)))))\n          ((and (null? l3) (not (null? l1)) (not (null? l2))) (cons (cons 'c1 (car l1)) (cons (cons 'c2 (car l2)) (convert_list_dictionary_helper (cdr l1) (cdr l2) l3))))\n          ((and (not (null? l1)) (not (null? l2)) (not (null? l3))) (cons (cons 'c1 (car l1)) (cons (cons 'c2 (car l2)) (cons (cons 'c3 (car l3)) (convert_list_dictionary_helper (cdr l1) (cdr l2)",
    "  (list (list (list (car l1) (car l2) (car l3)))))\n</code>\nI want to convert this to a function that can take any number of lists.\nI tried this:\n<code>#lang racket\n",
    "  (hash 'list1 l1 'list2 l2 'list3 l3))\n",
    "  (hash 'a l1 'b l2 'c l3))\n",
    "  (define (convert_list_dictionary_iter l1 l2 l3)\n    (cond\n      [(null? l1) '()]\n      [(null? l2) '()]\n      [(null? l3) '()]\n      [else (cons (cons (car l1) (cons (car l2) (cons (car l3) '())))\n                  (convert_list_dictionary_iter (cdr l1) (cdr l2) (cdr l3)))]))\n  (convert_list_dictionary_iter l1 l2 l3))\n",
    "  (hash 'a l1 'b l2 'c l3))\n",
    "  (hash 'l1 l1 'l2 l2 'l3 l3))\n",
    "  (define (convert_list_dictionary_iter l1 l2 l3)\n    (cond [(empty? l1) empty]\n          [(empty? l2) empty]\n          [(empty? l3) empty]\n          [else (cons (cons (car l1) (cons (car l2) (cons (car l3) empty)))\n                      (convert_list_dictionary_iter (cdr l1) (cdr l2) (cdr l3)))]))\n  (convert_list_dictionary_iter l1 l2 l3))\n",
    "  (define (convert_list_dictionary_helper l1 l2 l3)\n    (cond\n      [(empty? l1) empty]\n      [(empty? l2) empty]\n      [(empty? l3) empty]\n      [else (cons (cons (car l1) (cons (car l2) (cons (car l3) empty)))\n                  (convert_list_dictionary_helper (cdr l1) (cdr l2) (cdr l3)))]))\n  (convert_list_dictionary_helper l1 l2 l3))\n",
    "  (let ([d (make-hash)])\n    (hash-set! d (car l1) (car l2))\n    (hash-set! d (car l1) (car l3))\n    d))\n",
    "  (define (convert_list_dictionary_iter l1 l2 l3)\n    (if (and (not (null? l1)) (not (null? l2)) (not (null? l3)))\n        (cons (cons (car l1) (cons (car l2) (car l3)))\n              (convert_list_dictionary_iter (cdr l1) (cdr l2) (cdr l3)))\n        '()))\n  (convert_list_dictionary_iter l1 l2 l3))\n",
    "  (define (convert_list_dictionary_iter l1 l2 l3)\n    (cond\n      [(empty? l1) '()]\n      [(empty? l2) (cons (cons (first l1) '()) (convert_list_dictionary_iter (rest l1) l2 l3))]\n      [(empty? l3) (cons (cons (first l1) (cons (first l2) '())) (convert_list_dictionary_iter (rest l1) (rest l2) l3))]\n      [else (cons (cons (first l1) (cons (first l2) (first l3))) (convert_list_dictionary_iter (rest l1) (rest l2) (rest l3)))]))\n  (convert_list_dictionary_iter l1 l2 l3))\n",
    "  (hash 'a l1 'b l2 'c l3))\n",
    "  (define (convert_list_dictionary_helper l1 l2 l3)\n    (cond\n      [(empty? l1) empty]\n      [(empty? l2) empty]\n      [(empty? l3) empty]\n      [else\n       (cons (cons (first l1) (cons (first l2) (cons (first l3) empty)))\n             (convert_list_dictionary_helper (rest l1) (rest l2) (rest l3)))]))\n  (convert_list_dictionary_helper l1 l2 l3))\n",
    "  (list (list (list (car l1) (car l2) (car l3))\n              (list (cadr l1) (cadr l2) (cadr l3))\n              (list (caddr l1) (caddr l2) (caddr l3)))))\n",
    "  (hash 'a l1 'b l2 'c l3))\n",
    "  (hash-ref (hash-ref (hash-ref (hash 'a (hash 'b (hash 'c 1))) 'b) 'c) 'd))\n",
    "  (define (convert_list_dictionary_iter l1 l2 l3)\n    (cond\n      [(empty? l1) '()]\n      [(empty? l2) '()]\n      [(empty? l3) '()]\n      [else (cons (cons (car l1) (cons (car l2) (cons (car l3) '())))\n                 (convert_list_dictionary_iter (cdr l1) (cdr l2) (cdr l3)))]))\n  (convert_list_dictionary_iter l1 l2 l3))\n",
    "  (define (convert_list_dictionary_iter l1 l2 l3)\n    (cond\n      [(empty? l1) '()]\n      [(empty? l2) '()]\n      [(empty? l3) '()]\n      [else (cons (cons (first l1) (cons (first l2) (cons (first l3) '())))\n                  (convert_list_dictionary_iter (rest l1) (rest l2) (rest l3)))]))\n  (convert_list_dictionary_iter l1 l2 l3))\n",
    "  (hash 'a l1 'b l2 'c l3))\n",
    "  (define (convert_list_dictionary_helper l1 l2 l3)\n    (if (and (null? l1) (null? l2) (null? l3))\n        '()\n        (cons (cons (car l1) (cons (car l2) (cons (car l3) '())))\n              (convert_list_dictionary_helper (cdr l1) (cdr l2) (cdr l3)))))\n  (convert_list_dictionary_helper l1 l2 l3))\n",
    "  (define (convert_list_dictionary_iter l1 l2 l3)\n    (cond\n      [(empty? l1) '()]\n      [(empty? l2) '()]\n      [(empty? l3) '()]\n      [else\n       (cons\n        (cons (car l1) (cons (car l2) (cons (car l3) '())))\n        (convert_list_dictionary_iter (cdr l1) (cdr l2) (cdr l3)))]))\n  (convert_list_dictionary_iter l1 l2 l3))\n",
    "  (hash 'a l1 'b l2 'c l3))\n",
    "  (define (convert_list_dictionary_iter l1 l2 l3)\n    (if (and (not (null? l1)) (not (null? l2)) (not (null? l3)))\n        (cons (cons (car l1) (cons (car l2) (cons (car l3) '())))\n              (convert_list_dictionary_iter (cdr l1) (cdr l2) (cdr l3)))\n        '()))\n  (convert_list_dictionary_iter l1 l2 l3))\n",
    "  (define (convert_list_dictionary_iter l1 l2 l3)\n    (if (null? l1)\n        '()\n        (cons (cons (car l1) (cons (car l2) (car l3)))\n              (convert_list_dictionary_iter (cdr l1) (cdr l2) (cdr l3)))))\n  (convert_list_dictionary_iter l1 l2 l3))\n",
    "  (hash 'list1 l1 'list2 l2 'list3 l3))\n",
    "  (hash 'a l1 'b l2 'c l3))\n",
    "  (hash 'a l1 'b l2 'c l3))\n",
    "  (let ([l1 (map symbol->string l1)]\n        [l2 (map symbol->string l2)]\n        [l3 (map symbol->string l3)])\n    (hash 'l1 l1 'l2 l2 'l3 l3)))\n",
    "  (define (convert_list_dictionary_iter l1 l2 l3)\n    (if (and (null? l1) (null? l2) (null? l3))\n        '()\n        (cons (cons (car l1) (cons (car l2) (cons (car l3) '())))\n              (convert_list_dictionary_iter (cdr l1) (cdr l2) (cdr l3)))))\n  (convert_list_dictionary_iter l1 l2 l3))\n",
    "  (hash 'a l1 'b l2 'c l3))\n",
    "  (hash 'a l1 'b l2 'c l3))\n",
    "  (hash 'a l1 'b l2 'c l3))\n",
    "  (hash 'a l1 'b l2 'c l3))\n",
    "  (hash 'a l1 'b l2 'c l3))\n",
    "  (hash 'a l1 'b l2 'c l3))\n",
    "  (define (convert_list_dictionary_iter l1 l2 l3)\n    (cond\n      [(empty? l1) '()]\n      [(empty? l2) '()]\n      [(empty? l3) '()]\n      [else (cons (list (car l1) (car l2) (car l3)) (convert_list_dictionary_iter (cdr l1) (cdr l2) (cdr l3)))]))\n  (convert_list_dictionary_iter l1 l2 l3))\n",
    "  (hash 'a l1 'b l2 'c l3))\n",
    "  (define (convert_list_dictionary_iter l1 l2 l3)\n    (cond [(empty? l1) '()]\n          [(empty? l2) '()]\n          [(empty? l3) '()]\n          [else (cons (cons (car l1) (cons (car l2) (cons (car l3) '())))\n                      (convert_list_dictionary_iter (cdr l1) (cdr l2) (cdr l3)))]))\n  (convert_list_dictionary_iter l1 l2 l3))\n",
    "  (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list (list",
    "  (define (convert_list_dictionary_helper l1 l2 l3)\n    (cond\n      [(empty? l1) (cons (cons '() (cons (cons '() (cons '() '())) '())) '())]\n      [(empty? l2) (cons (cons (first l1) (cons (cons '() (cons '() '())) '()))\n                         (convert_list_dictionary_helper (rest l1) l2 l3))]\n      [(empty? l3) (cons (cons (first l1) (cons (cons (first l2) (cons '() '())) '()))\n                         (convert_list_dictionary_helper (rest l1) (rest l2) l3))]\n      [else (cons (cons (first l1) (cons (cons (first l2) (cons (first l3) '())) '()))\n                  (convert_list_dictionary_helper (rest l1) (rest l2) (rest l3)))]))\n  (convert_list_dictionary_helper l1 l2 l3))\n",
    "  (hash 'a l1 'b l2 'c l3))\n",
    "  (hash 'a l1 'b l2 'c l3))\n",
    "  (hash 'a l1 'b l2 'c l3))\n",
    "  (define (convert_list_dictionary_iter l1 l2 l3)\n    (if (and (not (null? l1)) (not (null? l2)) (not (null? l3)))\n        (cons (cons (car l1) (cons (car l2) (cons (car l3) '())))\n              (convert_list_dictionary_iter (cdr l1) (cdr l2) (cdr l3)))\n        '()))\n  (convert_list_dictionary_iter l1 l2 l3))\n",
    "  (define (convert_list_dictionary_iter l1 l2 l3)\n    (cond\n      [(empty? l1) '()]\n      [(empty? l2) '()]\n      [(empty? l3) '()]\n      [else (cons (cons (car l1) (cons (car l2) (cons (car l3) '())))\n                  (convert_list_dictionary_iter (cdr l1) (cdr l2) (cdr l3)))]))\n  (convert_list_dictionary_iter l1 l2 l3))\n",
    "  (hash 'a l1 'b l2 'c l3))\n",
    "  (define (convert_list_dictionary_iter l1 l2 l3)\n    (cond\n      [(null? l1) '()]\n      [(null? l2) '()]\n      [(null? l3) '()]\n      [else (cons (cons (car l1) (cons (car l2) (cons (car l3) '())))\n                   (convert_list_dictionary_iter (cdr l1) (cdr l2) (cdr l3)))]))\n  (convert_list_dictionary_iter l1 l2 l3))\n",
    "  (define (convert_list_dictionary_iter l1 l2 l3)\n    (if (and (not (null? l1)) (not (null? l2)) (not (null? l3)))\n        (cons (cons (car l1) (cons (car l2) (car l3)))\n              (convert_list_dictionary_iter (cdr l1) (cdr l2) (cdr l3)))\n        '()))\n  (convert_list_dictionary_iter l1 l2 l3))\n",
    "  (hash 'a l1 'b l2 'c l3))\n",
    "  (hash 'a l1 'b l2 'c l3))\n",
    "  (hash 'a l1 'b l2 'c l3))\n",
    "  (define (convert_list_dictionary_helper l1 l2 l3)\n    (cond\n      [(empty? l1) '()]\n      [(empty? l2) '()]\n      [(empty? l3) '()]\n      [else\n       (cons (list (car l1) (car l2) (car l3))\n             (convert_list_dictionary_helper (cdr l1) (cdr l2) (cdr l3)))]))\n  (convert_list_dictionary_helper l1 l2 l3))\n",
    "  (hash 'a l1 'b l2 'c l3))\n",
    "  (hash 'a l1 'b l2 'c l3))\n",
    "  (define (convert_list_dictionary_iter l1 l2 l3)\n    (cond\n      [(empty? l1) '()]\n      [(empty? l2) '()]\n      [(empty? l3) '()]\n      [else (cons (cons (car l1) (cons (car l2) (cons (car l3) '())))\n                  (convert_list_dictionary_iter (cdr l1) (cdr l2) (cdr l3)))]))\n  (convert_list_dictionary_iter l1 l2 l3))\n",
    "  (hash 'a l1 'b l2 'c l3))\n",
    "  (hash 'a l1 'b l2 'c l3))\n",
    "  (hash 'a l1 'b l2 'c l3))\n",
    "  (define (convert_list_dictionary_iter l1 l2 l3)\n    (cond\n      [(empty? l1) '()]\n      [(empty? l2) '()]\n      [(empty? l3) '()]\n      [else (cons (cons (car l1) (cons (car l2) (cons (car l3) '())))\n                  (convert_list_dictionary_iter (cdr l1) (cdr l2) (cdr l3)))]))\n  (convert_list_dictionary_iter l1 l2 l3))\n",
    "  (hash 'a l1 'b l2 'c l3))\n",
    "  (list (list (list (car l1) (car l2) (car l3)))))\n",
    "  (hash-ref (hash-ref (hash-ref (hash \"a\" l1) \"b\" l2) \"c\" l3) \"a\"))\n"
  ]
}
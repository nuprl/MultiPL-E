{
  "name": "mbpp_391_convert_list_dictionary",
  "language": "rkt",
  "prompt": "#lang racket\n\n;; Write a function to convert more than one list to nested hash.\n(define (convert_list_dictionary l1 l2 l3)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_391_convert_list_dictionary.py",
  "prompt_terminology": "reworded",
  "tests": "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate convert_list_dictionary))\n    (check-equal? (candidate (list \"S001\" \"S002\" \"S003\" \"S004\") (list \"Adina Park\" \"Leyton Marsh\" \"Duncan Boyle\" \"Saim Richards\") (list 85 98 89 92)) (list #hash((\"S001\" .  #hash((\"Adina Park\" .  85)))) #hash((\"S002\" .  #hash((\"Leyton Marsh\" .  98)))) #hash((\"S003\" .  #hash((\"Duncan Boyle\" .  89)))) #hash((\"S004\" .  #hash((\"Saim Richards\" .  92))))))\n    (check-equal? (candidate (list \"abc\" \"def\" \"ghi\" \"jkl\") (list \"python\" \"program\" \"language\" \"programs\") (list 100 200 300 400)) (list #hash((\"abc\" .  #hash((\"python\" .  100)))) #hash((\"def\" .  #hash((\"program\" .  200)))) #hash((\"ghi\" .  #hash((\"language\" .  300)))) #hash((\"jkl\" .  #hash((\"programs\" .  400))))))\n    (check-equal? (candidate (list \"A1\" \"A2\" \"A3\" \"A4\") (list \"java\" \"C\" \"C++\" \"DBMS\") (list 10 20 30 40)) (list #hash((\"A1\" .  #hash((\"java\" .  10)))) #hash((\"A2\" .  #hash((\"C\" .  20)))) #hash((\"A3\" .  #hash((\"C++\" .  30)))) #hash((\"A4\" .  #hash((\"DBMS\" .  40))))))\n))\n\n(test-humaneval)",
  "stop_tokens": [
    "\n(define ",
    "\n#|",
    "\n;",
    "\n("
  ],
  "completions": [
    "  (define (convert_list_dictionary_iter l1 l2 l3)\n    (if (and (not (null? l1)) (not (null? l2)) (not (null? l3)))\n        (cons (cons (car l1) (cons (car l2) (cons (car l3) '())))\n              (convert_list_dictionary_iter (cdr l1) (cdr l2) (cdr l3)))\n        '()))\n  (convert_list_dictionary_iter l1 l2 l3))\n",
    "  (hash 'a l1 'b l2 'c l3))\n",
    "  (define (convert_list_dictionary_iter l1 l2 l3)\n    (if (and (not (null? l1)) (not (null? l2)) (not (null? l3)))\n        (cons (cons (car l1) (cons (car l2) (cons (car l3) '())))\n              (convert_list_dictionary_iter (cdr l1) (cdr l2) (cdr l3)))\n        '()))\n  (convert_list_dictionary_iter l1 l2 l3))\n",
    "  (define (convert_list_dictionary_iter l1 l2 l3)\n    (if (and (null? l1) (null? l2) (null? l3))\n        '()\n        (cons (cons (car l1) (cons (car l2) (cons (car l3) '())))\n              (convert_list_dictionary_iter (cdr l1) (cdr l2) (cdr l3)))))\n  (convert_list_dictionary_iter l1 l2 l3))\n",
    "  (list (list 'a l1) (list 'b l2) (list 'c l3)))\n",
    "  (list->hash (list->hash (list->hash '() l1 l2) l1 l3) l2 l3))\n",
    "  (hash\n   'a (hash 'b l1 'c l2)\n   'd (hash 'e l3)))\n",
    "  (define (convert_list_dictionary_iter l1 l2 l3)\n    (cond ((and (null? l1) (null? l2) (null? l3)) '())\n          ((and (null? l1) (null? l2)) (cons (cons (car l3) '()) (convert_list_dictionary_iter l1 l2 (cdr l3))))\n          ((and (null? l1) (null? l3)) (cons (cons (car l2) '()) (convert_list_dictionary_iter l1 (cdr l2) l3)))\n          ((and (null? l2) (null? l3)) (cons (cons (car l1) '()) (convert_list_dictionary_iter (cdr l1) l2 l3)))\n          ((and (null? l1) (not (null? l2)) (not (null? l3))) (cons (cons (car l2) (list (car l3))) (convert_list_dictionary_iter l1 (cdr l2) (cdr l3))))\n          ((and (null? l2) (not (null? l1)) (not (null? l3))) (cons (cons (car l1) (list (car l3))) (convert_list_dictionary_iter (cdr l1) l2 (cdr l3))))\n          ((and (null? l3) (not (null? l1)) (not (null? l2))) (cons (cons (car l1) (list (car l2))) (convert_list_dictionary_iter (cdr l1) (cdr l2) l3)))\n          ((and (not (null? l1)) (not (null? l2)) (not (null? l3))) (cons (cons (car l1) (list (car l2) (car l3))) (convert_list_dictionary_iter (cdr l1) (cdr l2) (cdr l3))))))\n  (convert_list_dictionary_iter l1 l2 l3))\n",
    "  (define (convert_list_dictionary_iter l1 l2 l3)\n    (cond\n      [(empty? l1) '()]\n      [(empty? l2) '()]\n      [(empty? l3) '()]\n      [else (cons (cons (car l1) (cons (car l2) (cons (car l3) '())))\n                  (convert_list_dictionary_iter (cdr l1) (cdr l2) (cdr l3)))]))\n  (convert_list_dictionary_iter l1 l2 l3))\n",
    "  (hash 'a l1 'b l2 'c l3))\n",
    "  (define (convert_list_dictionary_helper l1 l2 l3)\n    (cond\n      [(empty? l1) empty]\n      [(empty? l2) empty]\n      [(empty? l3) empty]\n      [else (cons (list (car l1) (car l2) (car l3))\n                  (convert_list_dictionary_helper (cdr l1) (cdr l2) (cdr l3)))]))\n  (convert_list_dictionary_helper l1 l2 l3))\n",
    "  (define (convert_list_dictionary_iter l1 l2 l3)\n    (cond\n      [(empty? l1) (list)]\n      [(empty? l2) (list)]\n      [(empty? l3) (list)]\n      [else (cons (list (car l1) (car l2) (car l3))\n                  (convert_list_dictionary_iter (cdr l1) (cdr l2) (cdr l3)))]))\n  (convert_list_dictionary_iter l1 l2 l3))\n",
    "  (hash 'a (hash 'b (hash 'c l1) 'd l2) 'e l3))\n",
    "  (hash 'a l1 'b l2 'c l3))\n",
    "  (hash 'a l1 'b l2 'c l3))\n",
    "  (define (convert_list_dictionary_iter l1 l2 l3)\n    (cond\n      [(and (null? l1) (null? l2) (null? l3)) '()]\n      [(and (null? l1) (null? l2) (not (null? l3))) (cons (cons (car l3) '()) (convert_list_dictionary_iter l1 l2 (cdr l3)))]\n      [(and (null? l1) (not (null? l2)) (null? l3)) (cons (cons (car l2) '()) (convert_list_dictionary_iter l1 (cdr l2) l3))]\n      [(and (not (null? l1)) (null? l2) (null? l3)) (cons (cons (car l1) '()) (convert_list_dictionary_iter (cdr l1) l2 l3))]\n      [(and (not (null? l1)) (not (null? l2)) (not (null? l3))) (cons (cons (car l1) (cons (cons (car l2) (car l3)) '())) (convert_list_dictionary_iter (cdr l1) (cdr l2) (cdr l3)))]\n      [(and (not (null? l1)) (not (null? l2)) (null? l3)) (cons (cons (car l1) (cons (cons (car l2) '()) '())) (convert_list_dictionary_iter (cdr l1) (cdr l2) l3))]\n      [(and (not (null? l1)) (null? l2) (not (null? l3))) (cons (cons (car l1) (cons (cons '() (car l3)) '())) (convert_list_dictionary_iter (cdr l1) l2 (cdr l3)))]\n      [(and (null? l1) (not (null? l2)) (not (null? l3))) (cons (cons (car l2) (cons (cons '() (car l3)) '())) (convert_list_dictionary_iter l",
    "  (hash 'a (hash 'b (hash 'c (hash 'd l1) l2) l3)))\n",
    "  (define (convert_list_dictionary_helper l1 l2 l3)\n    (cond ((and (null? l1) (null? l2) (null? l3)) '())\n          ((and (null? l1) (null? l2)) (cons (cons (car l3) '()) (convert_list_dictionary_helper l1 l2 (cdr l3))))\n          ((and (null? l1) (null? l3)) (cons (cons (car l2) '()) (convert_list_dictionary_helper l1 (cdr l2) l3)))\n          ((and (null? l2) (null? l3)) (cons (cons (car l1) '()) (convert_list_dictionary_helper (cdr l1) l2 l3)))\n          ((and (null? l1) (not (null? l2)) (not (null? l3))) (cons (cons (car l2) (cons (car l3) '())) (convert_list_dictionary_helper l1 (cdr l2) (cdr l3))))\n          ((and (null? l2) (not (null? l1)) (not (null? l3))) (cons (cons (car l1) (cons (car l3) '())) (convert_list_dictionary_helper (cdr l1) l2 (cdr l3))))\n          ((and (null? l3) (not (null? l1)) (not (null? l2))) (cons (cons (car l1) (cons (car l2) '())) (convert_list_dictionary_helper (cdr l1) (cdr l2) l3)))\n          ((and (not (null? l1)) (not (null? l2)) (not (null? l3))) (cons (cons (car l1) (cons (car l2) (cons (car l3) '()))) (convert_list_dictionary_helper (cdr l1) (cdr l2) (cdr l3))))))\n  (convert_list_dictionary_helper l1 l2 l3))\n",
    "  (define (convert_list_dictionary_iter l1 l2 l3)\n    (cond\n      ((and (null? l1) (null? l2) (null? l3)) '())\n      ((and (null? l1) (null? l2)) (cons (list (car l3) '()) (convert_list_dictionary_iter l1 l2 (cdr l3))))\n      ((and (null? l1) (null? l3)) (cons (list (car l2) '()) (convert_list_dictionary_iter l1 (cdr l2) l3)))\n      ((and (null? l2) (null? l3)) (cons (list (car l1) '()) (convert_list_dictionary_iter (cdr l1) l2 l3)))\n      ((null? l1) (cons (list (car l2) (car l3)) (convert_list_dictionary_iter l1 (cdr l2) (cdr l3))))\n      ((null? l2) (cons (list (car l1) (car l3)) (convert_list_dictionary_iter (cdr l1) l2 (cdr l3))))\n      ((null? l3) (cons (list (car l1) (car l2)) (convert_list_dictionary_iter (cdr l1) (cdr l2) l3)))\n      (else (cons (list (car l1) (car l2) (car l3)) (convert_list_dictionary_iter (cdr l1) (cdr l2) (cdr l3))))))\n  (convert_list_dictionary_iter l1 l2 l3))\n",
    "  (hash 'a l1 'b l2 'c l3))\n"
  ]
}
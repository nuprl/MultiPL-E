{
  "name": "mbpp_478_remove_lowercase",
  "language": "rkt",
  "prompt": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_478_remove_lowercase.py",
  "prompt_terminology": "reworded",
  "tests": "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
  "stop_tokens": [
    "\n(define ",
    "\n#|",
    "\n;",
    "\n("
  ],
  "results": [
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1665509694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1665509694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1665509694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1665509694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1665509694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (string-append (regexp-replace* #rx\"[a-z]+\" str1 \"\")\n                 (regexp-replace* #rx\"[A-Z]+\" str1 \"\")))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1665509694,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpfeqmaccy.rkt:13:4\nactual:     \"PYTHon\"\nexpected:   \"PYTH\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpfeqmaccy.rkt:14:4\nactual:     \"FIDn\"\nexpected:   \"FID\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpfeqmaccy.rkt:15:4\nactual:     \"STRGin\"\nexpected:   \"STRG\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (string-join (filter (lambda (x) (not (char-lower-case? (string-ref x 0)))) (string-split str1 #\\space)) \" \"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1665509694,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpofvvpjws.rkt:12:4\n\nstring-split: contract violation\n  expected: (or/c string? regexp?)\n  given: #\\space\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpofvvpjws.rkt:13:4\n\nstring-split: contract violation\n  expected: (or/c string? regexp?)\n  given: #\\space\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpofvvpjws.rkt:14:4\n\nstring-split: contract violation\n  expected: (or/c string? regexp?)\n  given: #\\space\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1665509694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1665509694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1665509694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1665509694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1665509694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (string-append (regexp-replace* #rx\"[a-z]+\" str1 \"\") \" \"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1665509694,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_pgv9fdm.rkt:12:4\nactual:     \"PYTH \"\nexpected:   \"PYTH\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_pgv9fdm.rkt:13:4\nactual:     \"FID \"\nexpected:   \"FID\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_pgv9fdm.rkt:14:4\nactual:     \"STRG \"\nexpected:   \"STRG\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1665509694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1665509694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1665509694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1665509694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1665509694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1665509694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1665509694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1665509694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1665509694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1665509694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1665509694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (string-join\n   (filter (lambda (x) (not (char-lower-case? (string-ref x 0))))\n           (string-split str1 #\\space))\n   #\\space))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123921,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmptpo42q49.rkt:15:4\n\nstring-split: contract violation\n  expected: (or/c string? regexp?)\n  given: #\\space\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmptpo42q49.rkt:16:4\n\nstring-split: contract violation\n  expected: (or/c string? regexp?)\n  given: #\\space\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmptpo42q49.rkt:17:4\n\nstring-split: contract violation\n  expected: (or/c string? regexp?)\n  given: #\\space\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (string-append (regexp-replace* #rx\"[a-z]+\" str1 \"\") \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123921,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1665509694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1665509694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1665509694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1665509694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1665509694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1665509694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (string-join\n   (filter (lambda (x) (not (char-lower-case? (string-ref x 0))))\n           (string-split str1 #\\space))\n   #\\space))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123921,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmptpo42q49.rkt:15:4\n\nstring-split: contract violation\n  expected: (or/c string? regexp?)\n  given: #\\space\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmptpo42q49.rkt:16:4\n\nstring-split: contract violation\n  expected: (or/c string? regexp?)\n  given: #\\space\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmptpo42q49.rkt:17:4\n\nstring-split: contract violation\n  expected: (or/c string? regexp?)\n  given: #\\space\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1665509694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (string-append\n   (regexp-replace* #rx\"[a-z]+\" str1 \"\")))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123921,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1665509694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1665509694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (regexp-replace* #rx\"\\w+\" str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123921,
      "stdout": "",
      "stderr": "/tmp/tmpa7ouoxn2.rkt:5:19: read-syntax: unknown escape sequence `\\w` in string\n  context...:\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:186:17: body\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:183:2: wrap-internal\n   /work/arjunguha-research-group/software/racket/collects/racket/../syntax/module-reader.rkt:67:9: wrap-internal/wrapper\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (define (remove_lowercase_helper str1 str2)\n    (cond ((string=? str1 \"\") str2)\n          ((char-lower-case? (string-ref str1 0))\n           (remove_lowercase_helper (substring str1 1) str2))\n          (else (remove_lowercase_helper (substring str1 1)\n                                         (string-append str2 (string (string-ref str1 0)))))))\n  (remove_lowercase_helper str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123921,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (string-append\n   (regexp-replace* #rx\"[a-z]+\" str1 \"\")))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123921,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1665509694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1665509694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1665509694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1665509694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1665509694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1665509694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (letrec ([remove_lowercase_helper (lambda (str2)\n                                      (if (empty? str2)\n                                          empty\n                                          (if (char-lower-case? (first str2))\n                                              (remove_lowercase_helper (rest str2))\n                                              (cons (first str2) (remove_lowercase_helper (rest str2))))))])\n    (remove_lowercase_helper str1)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123921,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpl6z9unpq.rkt:18:4\n\nfirst: contract violation\n  expected: (and/c list? (not/c empty?))\n  given: \"PYTHon\"\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpl6z9unpq.rkt:19:4\n\nfirst: contract violation\n  expected: (and/c list? (not/c empty?))\n  given: \"FInD\"\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpl6z9unpq.rkt:20:4\n\nfirst: contract violation\n  expected: (and/c list? (not/c empty?))\n  given: \"STRinG\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1665509694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (string-join (filter (lambda (x) (not (char-lower-case? (string->char x)))) (string-split str1 #\\space)) \" \"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123921,
      "stdout": "",
      "stderr": "/tmp/tmpnmxtp0e9.rkt:5:59: string->char: unbound identifier\n  in: string->char\n  location...:\n   /tmp/tmpnmxtp0e9.rkt:5:59\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1665509694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1665509694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (string-append (regexp-replace* #rx\"[a-z]+\" str1 \"\") \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123921,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1665509694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1665509694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1665509694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1665509694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1665509694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1665509694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1665509694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1665509694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1665509694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1665509694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (string-append (regexp-replace* #rx\"[a-z]+\" str1 \"\")))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123922,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (regexp-replace* #rx\"\\w+\" str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123921,
      "stdout": "",
      "stderr": "/tmp/tmpa7ouoxn2.rkt:5:19: read-syntax: unknown escape sequence `\\w` in string\n  context...:\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:186:17: body\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:183:2: wrap-internal\n   /work/arjunguha-research-group/software/racket/collects/racket/../syntax/module-reader.rkt:67:9: wrap-internal/wrapper\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1665509694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1665509694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (string-append (regexp-replace* #rx\"[a-z]+\" str1 \"\") \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123921,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1665509694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1665509694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1665509694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (string-join\n   (filter (lambda (x) (not (char-lower-case? (string-ref x 0))))\n           (string-split str1 #\\space))\n   #\\space))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123921,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmptpo42q49.rkt:15:4\n\nstring-split: contract violation\n  expected: (or/c string? regexp?)\n  given: #\\space\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmptpo42q49.rkt:16:4\n\nstring-split: contract violation\n  expected: (or/c string? regexp?)\n  given: #\\space\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmptpo42q49.rkt:17:4\n\nstring-split: contract violation\n  expected: (or/c string? regexp?)\n  given: #\\space\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (string-append\n   (filter (lambda (x) (char-upper-case? x))\n           (string->list str1))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123922,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpdi6suw25.rkt:14:4\n\nstring-append: contract violation\n  expected: string?\n  given: '(#\\P #\\Y #\\T #\\H)\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpdi6suw25.rkt:15:4\n\nstring-append: contract violation\n  expected: string?\n  given: '(#\\F #\\I #\\D)\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpdi6suw25.rkt:16:4\n\nstring-append: contract violation\n  expected: string?\n  given: '(#\\S #\\T #\\R #\\G)\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (define (remove_lowercase_iter str1 str2)\n    (cond\n      ((string=? str1 \"\") str2)\n      ((char-lower-case? (string-ref str1 0))\n       (remove_lowercase_iter (substring str1 1) str2))\n      (else (remove_lowercase_iter (substring str1 1) (string-append str2 (string (string-ref str1 0)))))))\n  (remove_lowercase_iter str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123921,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (string-append\n   (filter (lambda (x) (not (char-lower-case? x)))\n           (string->list str1))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123921,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpp4iaa_b_.rkt:14:4\n\nstring-append: contract violation\n  expected: string?\n  given: '(#\\P #\\Y #\\T #\\H)\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpp4iaa_b_.rkt:15:4\n\nstring-append: contract violation\n  expected: string?\n  given: '(#\\F #\\I #\\D)\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpp4iaa_b_.rkt:16:4\n\nstring-append: contract violation\n  expected: string?\n  given: '(#\\S #\\T #\\R #\\G)\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1665509694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1665509694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (string-append\n   (filter (lambda (x) (not (char-lower-case? x))) str1)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123921,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpe7ropsyv.rkt:13:4\n\nfilter: contract violation\n  expected: list?\n  given: \"PYTHon\"\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpe7ropsyv.rkt:14:4\n\nfilter: contract violation\n  expected: list?\n  given: \"FInD\"\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpe7ropsyv.rkt:15:4\n\nfilter: contract violation\n  expected: list?\n  given: \"STRinG\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1665509694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1665509694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1665509694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1665509694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (string-append\n   (filter (lambda (x) (not (char-lower-case? x))) str1)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123921,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpe7ropsyv.rkt:13:4\n\nfilter: contract violation\n  expected: list?\n  given: \"PYTHon\"\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpe7ropsyv.rkt:14:4\n\nfilter: contract violation\n  expected: list?\n  given: \"FInD\"\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpe7ropsyv.rkt:15:4\n\nfilter: contract violation\n  expected: list?\n  given: \"STRinG\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (string-join\n   (filter (lambda (x) (not (char-lower-case? (string-ref x 0))))\n           (string-split str1 #\\space))\n   \" \"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123921,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpvbgy3nz4.rkt:15:4\n\nstring-split: contract violation\n  expected: (or/c string? regexp?)\n  given: #\\space\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpvbgy3nz4.rkt:16:4\n\nstring-split: contract violation\n  expected: (or/c string? regexp?)\n  given: #\\space\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpvbgy3nz4.rkt:17:4\n\nstring-split: contract violation\n  expected: (or/c string? regexp?)\n  given: #\\space\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1665509694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1665509694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1665509694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (string-append (regexp-replace* #rx\"[a-z]+\" str1 \"\")))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123922,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1665509694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1665509694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1665509694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (string-append\n   (regexp-replace* #rx\"[a-z]+\" str1 \"\")\n   (regexp-replace* #rx\"[A-Z]+\" str1 \"\")))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123921,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpf4_deero.rkt:14:4\nactual:     \"PYTHon\"\nexpected:   \"PYTH\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpf4_deero.rkt:15:4\nactual:     \"FIDn\"\nexpected:   \"FID\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpf4_deero.rkt:16:4\nactual:     \"STRGin\"\nexpected:   \"STRG\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1665509694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1665509694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (string-append\n   (filter (lambda (x) (char-upper-case? x)) str1)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123922,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpyr8krc3t.rkt:13:4\n\nfilter: contract violation\n  expected: list?\n  given: \"PYTHon\"\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpyr8krc3t.rkt:14:4\n\nfilter: contract violation\n  expected: list?\n  given: \"FInD\"\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpyr8krc3t.rkt:15:4\n\nfilter: contract violation\n  expected: list?\n  given: \"STRinG\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1665509694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1665509694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (string-join\n   (filter (lambda (x) (not (char-lower-case? (string-ref x 0))))\n           (string-split str1 #\\space))\n   \" \"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123921,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpvbgy3nz4.rkt:15:4\n\nstring-split: contract violation\n  expected: (or/c string? regexp?)\n  given: #\\space\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpvbgy3nz4.rkt:16:4\n\nstring-split: contract violation\n  expected: (or/c string? regexp?)\n  given: #\\space\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpvbgy3nz4.rkt:17:4\n\nstring-split: contract violation\n  expected: (or/c string? regexp?)\n  given: #\\space\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1665509694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (string-append (regexp-match* #rx\"[A-Z]+\" str1)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123922,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpy7e390_v.rkt:12:4\n\nstring-append: contract violation\n  expected: string?\n  given: '(\"PYTH\")\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpy7e390_v.rkt:13:4\n\nstring-append: contract violation\n  expected: string?\n  given: '(\"FI\" \"D\")\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpy7e390_v.rkt:14:4\n\nstring-append: contract violation\n  expected: string?\n  given: '(\"STR\" \"G\")\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1665509694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (string-append (regexp-replace* #rx\"[a-z]+\" str1 \"\")))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123922,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1665509694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (define (remove_lowercase_helper str1 str2)\n    (cond\n      [(empty? str1) str2]\n      [(char-lower-case? (first str1)) (remove_lowercase_helper (rest str1) str2)]\n      [else (remove_lowercase_helper (rest str1) (string-append str2 (string (first str1))))]))\n  (remove_lowercase_helper str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123921,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpwk2cs5su.rkt:17:4\n\nfirst: contract violation\n  expected: (and/c list? (not/c empty?))\n  given: \"PYTHon\"\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpwk2cs5su.rkt:18:4\n\nfirst: contract violation\n  expected: (and/c list? (not/c empty?))\n  given: \"FInD\"\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpwk2cs5su.rkt:19:4\n\nfirst: contract violation\n  expected: (and/c list? (not/c empty?))\n  given: \"STRinG\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (string-append\n   (regexp-replace* #rx\"[a-z]+\" str1 \"\")\n   (regexp-replace* #rx\"[A-Z]+\" str1 \"\")))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123921,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpf4_deero.rkt:14:4\nactual:     \"PYTHon\"\nexpected:   \"PYTH\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpf4_deero.rkt:15:4\nactual:     \"FIDn\"\nexpected:   \"FID\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpf4_deero.rkt:16:4\nactual:     \"STRGin\"\nexpected:   \"STRG\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (string-join\n   (filter (lambda (x) (not (char-lower-case? (string-ref x 0))))\n           (string-split str1 #\\space))\n   \" \"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123921,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpvbgy3nz4.rkt:15:4\n\nstring-split: contract violation\n  expected: (or/c string? regexp?)\n  given: #\\space\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpvbgy3nz4.rkt:16:4\n\nstring-split: contract violation\n  expected: (or/c string? regexp?)\n  given: #\\space\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpvbgy3nz4.rkt:17:4\n\nstring-split: contract violation\n  expected: (or/c string? regexp?)\n  given: #\\space\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1665509694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (string-append (regexp-replace* #rx\"[a-z]+\" str1 \"\")\n                 (regexp-replace* #rx\"[A-Z]+\" str1 \"\")))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1665509694,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpfeqmaccy.rkt:13:4\nactual:     \"PYTHon\"\nexpected:   \"PYTH\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpfeqmaccy.rkt:14:4\nactual:     \"FIDn\"\nexpected:   \"FID\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpfeqmaccy.rkt:15:4\nactual:     \"STRGin\"\nexpected:   \"STRG\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1665509694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (string-join\n   (filter (lambda (x) (not (char-lower-case? (string-ref x 0))))\n           (string-split str1 #\\space))\n   \" \"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123921,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpvbgy3nz4.rkt:15:4\n\nstring-split: contract violation\n  expected: (or/c string? regexp?)\n  given: #\\space\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpvbgy3nz4.rkt:16:4\n\nstring-split: contract violation\n  expected: (or/c string? regexp?)\n  given: #\\space\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpvbgy3nz4.rkt:17:4\n\nstring-split: contract violation\n  expected: (or/c string? regexp?)\n  given: #\\space\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (string-append (regexp-replace* #rx\"[a-z]+\" str1 \"\") \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123921,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1665509694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1665509694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1665509694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1665509694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1665509694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (string-append (regexp-replace* #rx\"[a-z]+\" str1 \"\")))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123922,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1665509694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1665509694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1665509694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1665509694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1665509694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1665509694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1665509694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1665509694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1665509694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1665509694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1665509694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1665509694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1665509694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (regexp-replace* #rx\"[a-z]\" str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123921,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1665509694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1665509694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1665509694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1665509694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1665509694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1665509694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1665509694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1665509694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1665509694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1665509694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1665509694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1665509694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (string-append (regexp-replace* #rx\"[a-z]+\" str1 \"\")))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123922,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (string-append (regexp-replace* #rx\"[a-z]+\" str1 \"\") \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123921,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1665509694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1665509694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1665509694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1665509694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1665509694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1665509694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1665509694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1665509694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1665509694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (string-append\n   (filter (lambda (x) (char-upper-case? x)) str1)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123922,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpyr8krc3t.rkt:13:4\n\nfilter: contract violation\n  expected: list?\n  given: \"PYTHon\"\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpyr8krc3t.rkt:14:4\n\nfilter: contract violation\n  expected: list?\n  given: \"FInD\"\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpyr8krc3t.rkt:15:4\n\nfilter: contract violation\n  expected: list?\n  given: \"STRinG\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1665509694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1665509694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (string-append\n   (regexp-replace* #rx\"\\b[a-z]+\\b\" str1 \"\")\n   (regexp-replace* #rx\"\\b[a-z]+\\b\" (string-upcase str1) \"\")))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123922,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmppi6u5m5j.rkt:14:4\nactual:     \"PYTHonPYTHON\"\nexpected:   \"PYTH\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmppi6u5m5j.rkt:15:4\nactual:     \"FInDFIND\"\nexpected:   \"FID\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmppi6u5m5j.rkt:16:4\nactual:     \"STRinGSTRING\"\nexpected:   \"STRG\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1665509694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1665509694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1665509694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (regexp-replace* #rx\"\\w+\" str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123921,
      "stdout": "",
      "stderr": "/tmp/tmpa7ouoxn2.rkt:5:19: read-syntax: unknown escape sequence `\\w` in string\n  context...:\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:186:17: body\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:183:2: wrap-internal\n   /work/arjunguha-research-group/software/racket/collects/racket/../syntax/module-reader.rkt:67:9: wrap-internal/wrapper\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1665509694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1665509694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1665509694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1665509694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1665509694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1665509694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (string-join (filter (lambda (x) (not (char-lower-case? (string-ref x 0)))) (string-split str1))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123922,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpwh6m36md.rkt:12:4\nactual:     \"PYTHon\"\nexpected:   \"PYTH\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpwh6m36md.rkt:13:4\nactual:     \"FInD\"\nexpected:   \"FID\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpwh6m36md.rkt:14:4\nactual:     \"STRinG\"\nexpected:   \"STRG\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (regexp-replace* #rx\"\\\\b[a-z]+\\\\b\" str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123922,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpgjdnrpgz.rkt:12:4\nactual:     \"PYTHon\"\nexpected:   \"PYTH\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpgjdnrpgz.rkt:13:4\nactual:     \"FInD\"\nexpected:   \"FID\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpgjdnrpgz.rkt:14:4\nactual:     \"STRinG\"\nexpected:   \"STRG\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1665509694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1665509694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1665509694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1665509694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (string-append (regexp-replace* #rx\"[a-z]+\" str1 \"\") \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123921,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1665509694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1665509694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1665509694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1665509694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (string-append (regexp-replace* #rx\"[a-z]+\" str1 \"\") \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123921,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1665509694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1665509694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (regexp-replace* #rx\"\\w+\" str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123921,
      "stdout": "",
      "stderr": "/tmp/tmpa7ouoxn2.rkt:5:19: read-syntax: unknown escape sequence `\\w` in string\n  context...:\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:186:17: body\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:183:2: wrap-internal\n   /work/arjunguha-research-group/software/racket/collects/racket/../syntax/module-reader.rkt:67:9: wrap-internal/wrapper\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1665509694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (define (remove_lowercase_iter str1 str2)\n    (cond\n      [(empty? str1) str2]\n      [(char-lower-case? (first str1)) (remove_lowercase_iter (rest str1) str2)]\n      [else (remove_lowercase_iter (rest str1) (string-append str2 (string (first str1))))]))\n  (remove_lowercase_iter str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123922,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpu5o28h8x.rkt:17:4\n\nfirst: contract violation\n  expected: (and/c list? (not/c empty?))\n  given: \"PYTHon\"\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpu5o28h8x.rkt:18:4\n\nfirst: contract violation\n  expected: (and/c list? (not/c empty?))\n  given: \"FInD\"\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpu5o28h8x.rkt:19:4\n\nfirst: contract violation\n  expected: (and/c list? (not/c empty?))\n  given: \"STRinG\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1665509694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1665509694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (string-append (regexp-replace* #rx\"[a-z]+\" str1 \"\") \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123921,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1665509694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1665509694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1665509694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (regexp-replace* #rx\"\\\\b[a-z]+\\\\b\" str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123922,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpgjdnrpgz.rkt:12:4\nactual:     \"PYTHon\"\nexpected:   \"PYTH\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpgjdnrpgz.rkt:13:4\nactual:     \"FInD\"\nexpected:   \"FID\"\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpgjdnrpgz.rkt:14:4\nactual:     \"STRinG\"\nexpected:   \"STRG\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (string-append (regexp-replace* #rx\"[a-z]+\" str1 \"\")))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123922,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1665509694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (string-join (filter (lambda (x) (not (char-lower-case? x))) (string->list str1))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123922,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmppqzxf1ec.rkt:12:4\n\nstring-join: contract violation\n  expected: (listof string?)\n  given: '(#\\P #\\Y #\\T #\\H)\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmppqzxf1ec.rkt:13:4\n\nstring-join: contract violation\n  expected: (listof string?)\n  given: '(#\\F #\\I #\\D)\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmppqzxf1ec.rkt:14:4\n\nstring-join: contract violation\n  expected: (listof string?)\n  given: '(#\\S #\\T #\\R #\\G)\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1665509694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1665509694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (define (remove_lowercase_helper str1 str2)\n    (cond\n      [(empty? str1) str2]\n      [(char-lower-case? (first str1)) (remove_lowercase_helper (rest str1) str2)]\n      [else (remove_lowercase_helper (rest str1) (string-append str2 (string (first str1))))]))\n  (remove_lowercase_helper str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123921,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpwk2cs5su.rkt:17:4\n\nfirst: contract violation\n  expected: (and/c list? (not/c empty?))\n  given: \"PYTHon\"\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpwk2cs5su.rkt:18:4\n\nfirst: contract violation\n  expected: (and/c list? (not/c empty?))\n  given: \"FInD\"\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpwk2cs5su.rkt:19:4\n\nfirst: contract violation\n  expected: (and/c list? (not/c empty?))\n  given: \"STRinG\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (define (remove_lowercase_helper str2)\n    (if (empty? str2)\n        \"\"\n        (if (char-lower-case? (first str2))\n            (remove_lowercase_helper (rest str2))\n            (string-append (string (first str2))\n                           (remove_lowercase_helper (rest str2))))))\n  (remove_lowercase_helper str1))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1666123922,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp3_vofgio.rkt:19:4\n\nfirst: contract violation\n  expected: (and/c list? (not/c empty?))\n  given: \"PYTHon\"\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp3_vofgio.rkt:20:4\n\nfirst: contract violation\n  expected: (and/c list? (not/c empty?))\n  given: \"FInD\"\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp3_vofgio.rkt:21:4\n\nfirst: contract violation\n  expected: (and/c list? (not/c empty?))\n  given: \"STRinG\"\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1665509694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a function to remove lowercase substrings from a given string.\n(define (remove_lowercase str1)\n  (regexp-replace* #rx\"[a-z]+\" str1 \"\"))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_lowercase))\n    (check-equal? (candidate \"PYTHon\") \"PYTH\")\n    (check-equal? (candidate \"FInD\") \"FID\")\n    (check-equal? (candidate \"STRinG\") \"STRG\")\n))\n\n(test-humaneval)",
      "timestamp": 1665509694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
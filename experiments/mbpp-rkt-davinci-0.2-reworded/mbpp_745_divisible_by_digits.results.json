{
  "name": "mbpp_745_divisible_by_digits",
  "language": "rkt",
  "prompt": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_745_divisible_by_digits.py",
  "prompt_terminology": "reworded",
  "tests": "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
  "stop_tokens": [
    "\n(define ",
    "\n#|",
    "\n;",
    "\n("
  ],
  "results": [
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x)\n            (andmap (lambda (y)\n                      (zero? (modulo x y)))\n                    (string->list (number->string x))))\n          (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1665509871,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:16:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:17:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:18:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x)\n            (andmap (lambda (y)\n                      (zero? (modulo x y)))\n                    (string->list (number->string x))))\n          (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1665509871,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:16:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:17:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:18:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x) (andmap (lambda (y) (= (modulo x y) 0)) (string->list (number->string x)))) (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1665509871,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp7fv7l3fw.rkt:12:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp7fv7l3fw.rkt:13:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp7fv7l3fw.rkt:14:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x) (and (divisible? x 10) (divisible? x 100) (divisible? x 1000))) (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1665509871,
      "stdout": "",
      "stderr": "/tmp/tmpxnehptos.rkt:5:28: divisible?: unbound identifier\n  in: divisible?\n  location...:\n   /tmp/tmpxnehptos.rkt:5:28\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x) (every (lambda (y) (= (modulo x y) 0)) (string->list (number->string x)))) (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1665509871,
      "stdout": "",
      "stderr": "/tmp/tmpjbbcxg2w.rkt:5:23: every: unbound identifier\n  in: every\n  location...:\n   /tmp/tmpjbbcxg2w.rkt:5:23\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x)\n            (andmap (lambda (y)\n                      (zero? (modulo x y)))\n                    (map string->number (string-&gt;list (number-&gt;string x)))))\n          (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1665509870,
      "stdout": "",
      "stderr": "/tmp/tmp92mlgit0.rkt:6:12: read-syntax: expected a `)` to close `(`\n  possible cause: indentation suggests a missing `)` before line 11\n  context...:\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:186:17: body\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:183:2: wrap-internal\n   /work/arjunguha-research-group/software/racket/collects/racket/../syntax/module-reader.rkt:67:9: wrap-internal/wrapper\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x)\n            (andmap (lambda (y)\n                      (= (modulo x y) 0))\n                    (string->list (number->string x))))\n          (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1665509871,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp50hm67e_.rkt:16:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp50hm67e_.rkt:17:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp50hm67e_.rkt:18:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x)\n            (every (lambda (y)\n                     (zero? (modulo x y)))\n                   (string->list (number->string x))))\n          (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1665509871,
      "stdout": "",
      "stderr": "/tmp/tmpgbudd876.rkt:6:13: every: unbound identifier\n  in: every\n  location...:\n   /tmp/tmpgbudd876.rkt:6:13\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x)\n            (andmap (lambda (y)\n                      (zero? (modulo x y)))\n                    (string->list (number->string x))))\n          (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1665509871,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:16:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:17:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:18:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x)\n            (every (lambda (y)\n                     (divisible? x y))\n                   (string->list (number->string x))))\n          (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1665509871,
      "stdout": "",
      "stderr": "/tmp/tmp_rulb7rx.rkt:6:13: every: unbound identifier\n  in: every\n  location...:\n   /tmp/tmp_rulb7rx.rkt:6:13\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x) (every (lambda (y) (= (modulo x y) 0)) (string->list (number->string x)))) (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1665509871,
      "stdout": "",
      "stderr": "/tmp/tmpjbbcxg2w.rkt:5:23: every: unbound identifier\n  in: every\n  location...:\n   /tmp/tmpjbbcxg2w.rkt:5:23\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (for/list ([i (in-range startnum endnum)])\n    (if (andmap (\u03bb (d) (zero? (modulo i d))) (string->list (number->string i)))\n        i\n        #f)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1665509871,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpz0pb8wn8.rkt:15:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpz0pb8wn8.rkt:16:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpz0pb8wn8.rkt:17:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x)\n            (andmap (lambda (y)\n                      (zero? (modulo x y)))\n                    (string->list (number->string x))))\n          (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1665509871,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:16:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:17:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:18:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x)\n            (every (lambda (y)\n                     (zero? (modulo x y)))\n                   (string->list (number->string x))))\n          (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1665509871,
      "stdout": "",
      "stderr": "/tmp/tmpgbudd876.rkt:6:13: every: unbound identifier\n  in: every\n  location...:\n   /tmp/tmpgbudd876.rkt:6:13\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x)\n            (andmap (lambda (y)\n                      (zero? (modulo x y)))\n                    (string->list (number->string x))))\n          (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1665509871,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:16:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:17:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:18:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (define (divisible-by-digits-helper startnum endnum)\n    (if (= startnum endnum)\n        (list endnum)\n        (cons startnum (divisible-by-digits-helper (+ startnum 1) endnum))))\n  (define (divisible-by-digits-helper2 startnum endnum)\n    (if (= startnum endnum)\n        (list endnum)\n        (cons startnum (divisible-by-digits-helper2 (+ startnum 1) endnum))))\n  (define (divisible-by-digits-helper3 startnum endnum)\n    (if (= startnum endnum)\n        (list endnum)\n        (cons startnum (divisible-by-digits-helper3 (+ startnum 1) endnum))))\n  (define (divisible-by-digits-helper4 startnum endnum)\n    (if (= startnum endnum)\n        (list endnum)\n        (cons startnum (divisible-by-digits-helper4 (+ startnum 1) endnum))))\n  (define (divisible-by-digits-helper5 startnum endnum)\n    (if (= startnum endnum)\n        (list endnum)\n        (cons startnum (divisible-by-digits-helper5 (+ startnum 1) endnum))))\n  (define (divisible-by-digits-helper6 startnum endnum)\n    (if (= startnum endnum)\n        (list endnum)\n        (cons startnum (divisible-by-digits-helper6 (+ startnum 1) endnum))))\n  (define (divisible-by-digits-helper7 startnum endnum)\n    (if (= startnum endnum)\n        (list endnum)\n        (cons startnum (divisible-by-digits-helper7 (+ startnum 1) endnum))))\n  (define (divisible-by-digits-helper8 startnum endnum)\n    (if (= startnum endnum)\n        (list endnum)\n        (cons startnum (divisible-by-digits-helper8 (+ startnum 1) endnum))))\n \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1665509870,
      "stdout": "",
      "stderr": "/tmp/tmpgfrj3vc1.rkt:4:0: read-syntax: expected a `)` to close `(`\n  possible cause: indentation suggests a missing `)` before line 38\n  context...:\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:186:17: body\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:183:2: wrap-internal\n   /work/arjunguha-research-group/software/racket/collects/racket/../syntax/module-reader.rkt:67:9: wrap-internal/wrapper\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x)\n            (andmap (lambda (y) (= (modulo x y) 0))\n                    (map string->number (string-&gt;list (number-&gt;string x)))))\n          (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1665509870,
      "stdout": "",
      "stderr": "/tmp/tmpbsdq5ig3.rkt:6:12: read-syntax: expected a `)` to close `(`\n  possible cause: indentation suggests a missing `)` before line 10\n  context...:\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:186:17: body\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:183:2: wrap-internal\n   /work/arjunguha-research-group/software/racket/collects/racket/../syntax/module-reader.rkt:67:9: wrap-internal/wrapper\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x)\n            (andmap (lambda (y)\n                      (zero? (modulo x y)))\n                    (string->list (number->string x))))\n          (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1665509871,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:16:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:17:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:18:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x) (every (lambda (y) (zero? (modulo x y))) (string->list (number->string x)))) (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1665509871,
      "stdout": "",
      "stderr": "/tmp/tmpc45ute9y.rkt:5:23: every: unbound identifier\n  in: every\n  location...:\n   /tmp/tmpc45ute9y.rkt:5:23\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter\n   (lambda (x)\n     (every\n      (lambda (y)\n        (zero? (modulo x y)))\n      (string->list (number->string x))))\n   (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1665509871,
      "stdout": "",
      "stderr": "/tmp/tmpec10itmb.rkt:7:6: every: unbound identifier\n  in: every\n  location...:\n   /tmp/tmpec10itmb.rkt:7:6\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x)\n            (every (lambda (y)\n                     (zero? (modulo x y)))\n                   (string->list (number->string x))))\n          (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1665509871,
      "stdout": "",
      "stderr": "/tmp/tmpgbudd876.rkt:6:13: every: unbound identifier\n  in: every\n  location...:\n   /tmp/tmpgbudd876.rkt:6:13\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x)\n            (andmap (lambda (y)\n                      (zero? (modulo x y)))\n                    (string->list (number->string x))))\n          (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1665509871,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:16:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:17:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:18:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x)\n            (let loop ([x x] [divisor 10])\n              (cond [(zero? x) #t]\n                    [(zero? (modulo x divisor)) (loop (quotient x 10) 10)]\n                    [(zero? (modulo x (modulo divisor 10))) (loop x (quotient divisor 10))]\n                    [else #f])))\n          (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1666122604,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmph5ku7qiw.rkt:18:4\n\nmodulo: division by zero\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmph5ku7qiw.rkt:19:4\n\nmodulo: division by zero\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmph5ku7qiw.rkt:20:4\n\nmodulo: division by zero\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x)\n            (andmap (lambda (y)\n                      (zero? (modulo x y)))\n                    (string->list (number->string x))))\n          (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1665509871,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:16:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:17:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:18:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x)\n            (andmap (lambda (y)\n                      (zero? (modulo x y)))\n                    (string->list (number->string x))))\n          (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1665509871,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:16:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:17:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:18:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x)\n            (every (lambda (y)\n                     (zero? (modulo x y)))\n                   (string->list (number->string x))))\n          (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1665509871,
      "stdout": "",
      "stderr": "/tmp/tmpgbudd876.rkt:6:13: every: unbound identifier\n  in: every\n  location...:\n   /tmp/tmpgbudd876.rkt:6:13\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x)\n            (every (lambda (y)\n                     (zero? (modulo x y)))\n                   (string->list (number->string x))))\n          (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1665509871,
      "stdout": "",
      "stderr": "/tmp/tmpgbudd876.rkt:6:13: every: unbound identifier\n  in: every\n  location...:\n   /tmp/tmpgbudd876.rkt:6:13\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x)\n            (andmap (lambda (y)\n                      (zero? (remainder x y)))\n                    (string->list (number->string x))))\n          (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1666122604,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpy0q7vi6o.rkt:16:4\n\nremainder: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpy0q7vi6o.rkt:17:4\n\nremainder: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpy0q7vi6o.rkt:18:4\n\nremainder: contract violation\n  expected: integer?\n  given: #\\2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (for/list ([i (in-range startnum endnum)])\n    (if (andmap (\u03bb (x) (zero? (modulo i x))) (string->list (number->string i)))\n        i)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1666122604,
      "stdout": "",
      "stderr": "/tmp/tmpfkgjhu8c.rkt:6:4: if: missing an \"else\" expression\n  in: (if (andmap (\u03bb (x) (zero? (modulo i x))) (string->list (number->string i))) i)\n  location...:\n   /tmp/tmpfkgjhu8c.rkt:6:4\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x)\n            (andmap (lambda (y)\n                      (zero? (modulo x y)))\n                    (string->list (number->string x))))\n          (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1665509871,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:16:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:17:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:18:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x)\n            (every (lambda (y)\n                     (zero? (modulo x y)))\n                   (string->list (number->string x))))\n          (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1665509871,
      "stdout": "",
      "stderr": "/tmp/tmpgbudd876.rkt:6:13: every: unbound identifier\n  in: every\n  location...:\n   /tmp/tmpgbudd876.rkt:6:13\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x)\n            (every (lambda (y)\n                     (zero? (modulo x y)))\n                   (string->list (number->string x))))\n          (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1665509871,
      "stdout": "",
      "stderr": "/tmp/tmpgbudd876.rkt:6:13: every: unbound identifier\n  in: every\n  location...:\n   /tmp/tmpgbudd876.rkt:6:13\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x)\n            (andmap (lambda (y)\n                      (zero? (modulo x y)))\n                    (string->list (number->string x))))\n          (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1665509871,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:16:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:17:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:18:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x) (and (divisible? x (first (digits x))) (divisible? x (second (digits x))))) (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1666122604,
      "stdout": "",
      "stderr": "/tmp/tmpx5kj292a.rkt:5:28: divisible?: unbound identifier\n  in: divisible?\n  location...:\n   /tmp/tmpx5kj292a.rkt:5:28\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x)\n            (andmap (lambda (y)\n                      (zero? (modulo x y)))\n                    (string->list (number->string x))))\n          (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1665509871,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:16:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:17:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:18:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x)\n            (define (divisible? n)\n              (and (zero? (modulo n (quotient n 10)))\n                   (if (zero? (modulo n 10))\n                       #t\n                       (divisible? (quotient n 10)))))\n            (divisible? x))\n          (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1666122604,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpik6lctb9.rkt:19:4\n\nmodulo: division by zero\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpik6lctb9.rkt:20:4\n\nmodulo: division by zero\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpik6lctb9.rkt:21:4\n\nmodulo: division by zero\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x)\n            (andmap (lambda (y) (= (modulo x y) 0))\n                    (string->list (number->string x))))\n          (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1666122604,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmplry4vs8g.rkt:15:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmplry4vs8g.rkt:16:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmplry4vs8g.rkt:17:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x)\n            (andmap (lambda (y)\n                      (zero? (modulo x y)))\n                    (string->list (number->string x))))\n          (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1665509871,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:16:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:17:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:18:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x) (and (divisible? x 10) (divisible? x 100) (divisible? x 1000))) (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1665509871,
      "stdout": "",
      "stderr": "/tmp/tmpxnehptos.rkt:5:28: divisible?: unbound identifier\n  in: divisible?\n  location...:\n   /tmp/tmpxnehptos.rkt:5:28\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x)\n            (andmap (lambda (y) (= (modulo x y) 0))\n                    (string->list (number->string x))))\n          (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1666122604,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmplry4vs8g.rkt:15:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmplry4vs8g.rkt:16:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmplry4vs8g.rkt:17:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x)\n            (andmap (lambda (y)\n                      (zero? (modulo x y)))\n                    (string->list (number->string x))))\n          (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1665509871,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:16:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:17:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:18:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x)\n            (andmap (lambda (y)\n                      (zero? (modulo x y)))\n                    (string->list (number->string x))))\n          (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1665509871,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:16:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:17:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:18:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x) (every (lambda (y) (= (modulo x y) 0)) (string->list (number->string x)))) (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1665509871,
      "stdout": "",
      "stderr": "/tmp/tmpjbbcxg2w.rkt:5:23: every: unbound identifier\n  in: every\n  location...:\n   /tmp/tmpjbbcxg2w.rkt:5:23\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x) (and (divisible? x 10) (divisible? x 100) (divisible? x 1000))) (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1665509871,
      "stdout": "",
      "stderr": "/tmp/tmpxnehptos.rkt:5:28: divisible?: unbound identifier\n  in: divisible?\n  location...:\n   /tmp/tmpxnehptos.rkt:5:28\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x)\n            (every (lambda (y)\n                     (zero? (modulo x y)))\n                   (string->list (number->string x))))\n          (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1665509871,
      "stdout": "",
      "stderr": "/tmp/tmpgbudd876.rkt:6:13: every: unbound identifier\n  in: every\n  location...:\n   /tmp/tmpgbudd876.rkt:6:13\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x)\n            (andmap (lambda (y)\n                      (zero? (modulo x y)))\n                    (string->list (number->string x))))\n          (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1665509871,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:16:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:17:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:18:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x)\n            (andmap (lambda (y)\n                      (= (modulo x y) 0))\n                    (string->list (number->string x))))\n          (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1665509871,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp50hm67e_.rkt:16:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp50hm67e_.rkt:17:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp50hm67e_.rkt:18:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x)\n            (andmap (lambda (y)\n                      (= (modulo x y) 0))\n                    (string->list (number->string x))))\n          (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1665509871,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp50hm67e_.rkt:16:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp50hm67e_.rkt:17:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp50hm67e_.rkt:18:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x)\n            (andmap (lambda (y)\n                      (zero? (modulo x y)))\n                    (string->list (number->string x))))\n          (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1665509871,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:16:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:17:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:18:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x)\n            (andmap (lambda (y)\n                      (zero? (modulo x y)))\n                    (string->list (number->string x))))\n          (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1665509871,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:16:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:17:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:18:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter\n   (lambda (x)\n     (let loop ([x x] [y (number->string x)])\n       (if (zero? (string-length y))\n           #t\n           (and (zero? (modulo x (string->number (string-ref y 0))))\n                (loop (quotient x 10) (substring y 1))))))\n   (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1666122604,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpuebmd4nu.rkt:19:4\n\nstring->number: contract violation\n  expected: string?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpuebmd4nu.rkt:20:4\n\nstring->number: contract violation\n  expected: string?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpuebmd4nu.rkt:21:4\n\nstring->number: contract violation\n  expected: string?\n  given: #\\2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x)\n            (every (lambda (y)\n                     (zero? (modulo x y)))\n                   (list->set (string->list (number->string x)))))\n          (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1666122604,
      "stdout": "",
      "stderr": "/tmp/tmpqnp_mi1y.rkt:6:13: every: unbound identifier\n  in: every\n  location...:\n   /tmp/tmpqnp_mi1y.rkt:6:13\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x)\n            (andmap (lambda (y)\n                      (zero? (modulo x y)))\n                    (string->list (number->string x))))\n          (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1665509871,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:16:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:17:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:18:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (for/list ([i (in-range startnum endnum)])\n    (if (andmap (\u03bb (x) (zero? (remainder i x))) (number->list i))\n        i\n        '())))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1666122604,
      "stdout": "",
      "stderr": "/tmp/tmp1pnxklzq.rkt:6:49: number->list: unbound identifier\n  in: number->list\n  location...:\n   /tmp/tmp1pnxklzq.rkt:6:49\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x)\n            (andmap (lambda (y) (= (modulo x y) 0))\n                    (string->list (number->string x))))\n          (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1666122604,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmplry4vs8g.rkt:15:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmplry4vs8g.rkt:16:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmplry4vs8g.rkt:17:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (n)\n            (andmap (lambda (d) (= (modulo n d) 0))\n                    (string->list (number->string n))))\n          (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1666122604,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpud6i_go6.rkt:15:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpud6i_go6.rkt:16:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpud6i_go6.rkt:17:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x) (and (divisible? x 10) (divisible? x 100) (divisible? x 1000))) (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1665509871,
      "stdout": "",
      "stderr": "/tmp/tmpxnehptos.rkt:5:28: divisible?: unbound identifier\n  in: divisible?\n  location...:\n   /tmp/tmpxnehptos.rkt:5:28\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x)\n            (andmap (lambda (y) (zero? (modulo x y)))\n                    (string->list (number->string x))))\n          (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1666122604,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpswwhf8m_.rkt:15:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpswwhf8m_.rkt:16:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpswwhf8m_.rkt:17:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x)\n            (andmap (lambda (y)\n                      (zero? (modulo x y)))\n                    (string->list (number->string x))))\n          (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1665509871,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:16:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:17:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:18:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x)\n            (cond\n              [(= 0 (modulo x (quotient x 10))) #t]\n              [(= 0 (modulo x (remainder x 10))) #t]\n              [else #f]))\n          (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1666122604,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp1vfgit62.rkt:17:4\n\nmodulo: division by zero\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp1vfgit62.rkt:18:4\n\nmodulo: division by zero\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp1vfgit62.rkt:19:4\nactual:     '(20 21 22 24)\nexpected:   '(22 24)\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x)\n            (andmap (lambda (y)\n                      (zero? (modulo x y)))\n                    (map string->number (string-&gt;list (number-&gt;string x)))))\n          (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1665509870,
      "stdout": "",
      "stderr": "/tmp/tmp92mlgit0.rkt:6:12: read-syntax: expected a `)` to close `(`\n  possible cause: indentation suggests a missing `)` before line 11\n  context...:\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:186:17: body\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:183:2: wrap-internal\n   /work/arjunguha-research-group/software/racket/collects/racket/../syntax/module-reader.rkt:67:9: wrap-internal/wrapper\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x)\n            (andmap (lambda (y)\n                      (zero? (modulo x y)))\n                    (string->list (number->string x))))\n          (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1665509871,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:16:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:17:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:18:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (for/list ([i (in-range startnum endnum)])\n    (andmap (\u03bb (x) (zero? (modulo i x))) (string->list (number->string i)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1666122604,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpb284ibv4.rkt:13:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpb284ibv4.rkt:14:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpb284ibv4.rkt:15:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x)\n            (andmap (lambda (y) (= (modulo x y) 0))\n                    (string->list (number->string x))))\n          (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1666122604,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmplry4vs8g.rkt:15:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmplry4vs8g.rkt:16:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmplry4vs8g.rkt:17:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x) (and (divisible? x (modulo x 10)) (divisible? x (modulo x 100 10)) (divisible? x (modulo x 1000 100 10)))) (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1666122604,
      "stdout": "",
      "stderr": "/tmp/tmp49tu_6jd.rkt:5:28: divisible?: unbound identifier\n  in: divisible?\n  location...:\n   /tmp/tmp49tu_6jd.rkt:5:28\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x)\n            (every (lambda (y)\n                     (zero? (modulo x y)))\n                   (string->list (number->string x))))\n          (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1665509871,
      "stdout": "",
      "stderr": "/tmp/tmpgbudd876.rkt:6:13: every: unbound identifier\n  in: every\n  location...:\n   /tmp/tmpgbudd876.rkt:6:13\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x)\n            (andmap (lambda (y)\n                      (= (modulo x y) 0))\n                    (string->list (number->string x))))\n          (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1665509871,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp50hm67e_.rkt:16:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp50hm67e_.rkt:17:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp50hm67e_.rkt:18:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x)\n            (andmap (lambda (y)\n                      (= (modulo x y) 0))\n                    (string->list (number->string x))))\n          (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1665509871,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp50hm67e_.rkt:16:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp50hm67e_.rkt:17:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp50hm67e_.rkt:18:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x)\n            (andmap (lambda (y)\n                      (zero? (modulo x y)))\n                    (string->list (number->string x))))\n          (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1665509871,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:16:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:17:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:18:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x)\n            (every (lambda (y)\n                     (zero? (modulo x y)))\n                   (string->list (number->string x))))\n          (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1665509871,
      "stdout": "",
      "stderr": "/tmp/tmpgbudd876.rkt:6:13: every: unbound identifier\n  in: every\n  location...:\n   /tmp/tmpgbudd876.rkt:6:13\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x)\n            (define (divisible? n)\n              (cond ((= n 0) #t)\n                    ((= (modulo x n) 0) (divisible? (quotient x 10)))\n                    (else #f)))\n            (divisible? x))\n          (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1666122618,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x)\n            (andmap (lambda (y)\n                      (zero? (modulo x y)))\n                    (string->list (number->string x))))\n          (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1665509871,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:16:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:17:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:18:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x)\n            (andmap (lambda (y)\n                      (zero? (modulo x y)))\n                    (string->list (number->string x))))\n          (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1665509871,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:16:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:17:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:18:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x)\n            (andmap (lambda (y)\n                      (zero? (modulo x y)))\n                    (string->list (number->string x))))\n          (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1665509871,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:16:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:17:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:18:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (for/list ([i (in-range startnum endnum)])\n    (andmap (\u03bb (x) (= (modulo i x) 0)) (string->list (number->string i)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1666122604,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpi79fygp1.rkt:13:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpi79fygp1.rkt:14:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpi79fygp1.rkt:15:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x)\n            (andmap (lambda (y)\n                      (zero? (modulo x y)))\n                    (string->list (number->string x))))\n          (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1665509871,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:16:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:17:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:18:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x)\n            (andmap (lambda (y)\n                      (= (modulo x y) 0))\n                    (string->list (number->string x))))\n          (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1665509871,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp50hm67e_.rkt:16:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp50hm67e_.rkt:17:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp50hm67e_.rkt:18:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter\n   (lambda (x)\n     (every\n      (lambda (y)\n        (zero? (modulo x y)))\n      (string->list (number->string x))))\n   (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1665509871,
      "stdout": "",
      "stderr": "/tmp/tmpec10itmb.rkt:7:6: every: unbound identifier\n  in: every\n  location...:\n   /tmp/tmpec10itmb.rkt:7:6\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x)\n            (andmap (lambda (y)\n                      (zero? (modulo x y)))\n                    (string->list (number->string x))))\n          (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1665509871,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:16:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:17:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:18:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (for/list ([i (in-range startnum endnum)])\n    (if (andmap (\u03bb (d) (zero? (modulo i d))) (string->list (number->string i)))\n        i)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1666122604,
      "stdout": "",
      "stderr": "/tmp/tmpf7xjrfj8.rkt:6:4: if: missing an \"else\" expression\n  in: (if (andmap (\u03bb (d) (zero? (modulo i d))) (string->list (number->string i))) i)\n  location...:\n   /tmp/tmpf7xjrfj8.rkt:6:4\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x)\n            (andmap (lambda (y)\n                      (zero? (modulo x y)))\n                    (string->list (number->string x))))\n          (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1665509871,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:16:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:17:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:18:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x)\n            (andmap (lambda (y)\n                      (zero? (modulo x y)))\n                    (map string->number (string-&gt;list (number-&gt;string x)))))\n          (range startnum endnum)))\n</code>\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1666122604,
      "stdout": "",
      "stderr": "/tmp/tmps68ohaj5.rkt:6:12: read-syntax: expected a `)` to close `(`\n  possible cause: indentation suggests a missing `)` before line 10\n  context...:\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:186:17: body\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:183:2: wrap-internal\n   /work/arjunguha-research-group/software/racket/collects/racket/../syntax/module-reader.rkt:67:9: wrap-internal/wrapper\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x) (and (divisible? x 10) (divisible? x 100))) (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1666122604,
      "stdout": "",
      "stderr": "/tmp/tmplb_xi9ns.rkt:5:28: divisible?: unbound identifier\n  in: divisible?\n  location...:\n   /tmp/tmplb_xi9ns.rkt:5:28\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x)\n            (andmap (lambda (y)\n                      (zero? (modulo x y)))\n                    (string->list (number->string x))))\n          (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1665509871,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:16:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:17:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:18:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x)\n            (andmap (lambda (y)\n                      (zero? (modulo x y)))\n                    (string->list (number->string x))))\n          (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1665509871,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:16:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:17:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:18:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x)\n            (andmap (lambda (y)\n                      (zero? (modulo x y)))\n                    (string->list (number->string x))))\n          (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1665509871,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:16:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:17:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:18:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (n)\n            (for/and ([d (in-list (string->list (number->string n)))]\n                      #:when (not (zero? (modulo n (string->number (number->string d))))))\n              #t))\n          (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1666122604,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmphjh0o6fc.rkt:16:4\n\nnumber->string: contract violation\n  expected: number?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmphjh0o6fc.rkt:17:4\n\nnumber->string: contract violation\n  expected: number?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmphjh0o6fc.rkt:18:4\n\nnumber->string: contract violation\n  expected: number?\n  given: #\\2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x)\n            (andmap (lambda (y)\n                      (zero? (modulo x y)))\n                    (digits x)))\n          (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1666122604,
      "stdout": "",
      "stderr": "/tmp/tmpoddu1bmr.rkt:8:21: digits: unbound identifier\n  in: digits\n  location...:\n   /tmp/tmpoddu1bmr.rkt:8:21\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x)\n            (andmap (lambda (y)\n                      (zero? (modulo x y)))\n                    (map string->number (string-&gt;list (number-&gt;string x)))))\n          (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1665509870,
      "stdout": "",
      "stderr": "/tmp/tmp92mlgit0.rkt:6:12: read-syntax: expected a `)` to close `(`\n  possible cause: indentation suggests a missing `)` before line 11\n  context...:\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:186:17: body\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:183:2: wrap-internal\n   /work/arjunguha-research-group/software/racket/collects/racket/../syntax/module-reader.rkt:67:9: wrap-internal/wrapper\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x)\n            (define (divisible? n)\n              (define (divisible-by-digit? n d)\n                (if (= d 0)\n                    #t\n                    (if (zero? (modulo n d))\n                        (divisible-by-digit? n (- d 1))\n                        #f)))\n              (divisible-by-digit? n (modulo n 10)))\n            (divisible? x))\n          (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1666122604,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpyo1sv4qb.rkt:22:4\nactual:     '(1 2 10 11 12 20 21)\nexpected:   '(1 2 3 4 5 6 7 8 9 11 12 15 22)\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpyo1sv4qb.rkt:23:4\nactual:     '(1 2 10 11 12)\nexpected:   '(1 2 3 4 5 6 7 8 9 11 12 15)\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpyo1sv4qb.rkt:24:4\nactual:     '(20 21 22 24)\nexpected:   '(22 24)\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x) (every (lambda (y) (zero? (modulo x y))) (string->list (number->string x)))) (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1665509871,
      "stdout": "",
      "stderr": "/tmp/tmpc45ute9y.rkt:5:23: every: unbound identifier\n  in: every\n  location...:\n   /tmp/tmpc45ute9y.rkt:5:23\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x)\n            (andmap (lambda (y)\n                      (zero? (modulo x y)))\n                    (string->list (number->string x))))\n          (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1665509871,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:16:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:17:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:18:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x)\n            (andmap (lambda (y)\n                      (= (modulo x y) 0))\n                    (string->list (number->string x))))\n          (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1665509871,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp50hm67e_.rkt:16:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp50hm67e_.rkt:17:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp50hm67e_.rkt:18:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x)\n            (andmap (lambda (y)\n                      (= (modulo x y) 0))\n                    (string->list (number->string x))))\n          (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1665509871,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp50hm67e_.rkt:16:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp50hm67e_.rkt:17:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp50hm67e_.rkt:18:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x)\n            (andmap (lambda (y)\n                      (zero? (modulo x y)))\n                    (map string->number (string-&gt;list (number-&gt;string x)))))\n          (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1665509870,
      "stdout": "",
      "stderr": "/tmp/tmp92mlgit0.rkt:6:12: read-syntax: expected a `)` to close `(`\n  possible cause: indentation suggests a missing `)` before line 11\n  context...:\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:186:17: body\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:183:2: wrap-internal\n   /work/arjunguha-research-group/software/racket/collects/racket/../syntax/module-reader.rkt:67:9: wrap-internal/wrapper\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x)\n            (andmap (lambda (y)\n                      (zero? (modulo x y)))\n                    (string->list (number->string x))))\n          (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1665509871,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:16:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:17:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:18:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (for/list ([i (in-range startnum endnum)])\n    (if (andmap (\u03bb (x) (zero? (modulo i x))) (map string->number (string-&gt;list (number-&gt;string i))))\n        i\n        #f)))\n</code>\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1666122604,
      "stdout": "",
      "stderr": "/tmp/tmp3vkq8fp2.rkt:6:4: read-syntax: expected a `)` to close `(`\n  possible cause: indentation suggests a missing `)` before line 9\n  context...:\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:186:17: body\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:183:2: wrap-internal\n   /work/arjunguha-research-group/software/racket/collects/racket/../syntax/module-reader.rkt:67:9: wrap-internal/wrapper\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x) (and (divisible? x (first (digits x))) (divisible? x (second (digits x))) (divisible? x (third (digits x))))) (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1666122604,
      "stdout": "",
      "stderr": "/tmp/tmpeulmdxd1.rkt:5:28: divisible?: unbound identifier\n  in: divisible?\n  location...:\n   /tmp/tmpeulmdxd1.rkt:5:28\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x)\n            (andmap (lambda (y)\n                      (zero? (remainder x y)))\n                    (string->list (number->string x))))\n          (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1666122604,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpy0q7vi6o.rkt:16:4\n\nremainder: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpy0q7vi6o.rkt:17:4\n\nremainder: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpy0q7vi6o.rkt:18:4\n\nremainder: contract violation\n  expected: integer?\n  given: #\\2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (define (divisible-by-digits-helper num)\n    (define (divisible-by-digits-helper-helper num divisor)\n      (if (&lt;= num 0)\n          #t\n          (if (zero? (modulo num divisor))\n              (divisible-by-digits-helper-helper (/ num 10) divisor)\n              #f)))\n    (divisible-by-digits-helper-helper num num))\n  (filter divisible-by-digits-helper (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1666122604,
      "stdout": "",
      "stderr": "/tmp/tmp124i4h8o.rkt:4:0: read-syntax: expected a `)` to close `(`\n  possible cause: indentation suggests a missing `)` before line 15\n  context...:\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:186:17: body\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:183:2: wrap-internal\n   /work/arjunguha-research-group/software/racket/collects/racket/../syntax/module-reader.rkt:67:9: wrap-internal/wrapper\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter\n   (lambda (x)\n     (let loop ([x x] [result #t])\n       (cond\n         [(zero? x) result]\n         [(zero? (modulo x 10)) (loop (quotient x 10) result)]\n         [else (loop (quotient x 10) (and result (zero? (modulo x (quotient x 10)))))])))\n   (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1666122605,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmppz4yvjvy.rkt:19:4\n\nmodulo: division by zero\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmppz4yvjvy.rkt:20:4\n\nmodulo: division by zero\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmppz4yvjvy.rkt:21:4\n\nmodulo: division by zero\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x)\n            (every (lambda (y)\n                     (zero? (modulo x y)))\n                   (string->list (number->string x))))\n          (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1665509871,
      "stdout": "",
      "stderr": "/tmp/tmpgbudd876.rkt:6:13: every: unbound identifier\n  in: every\n  location...:\n   /tmp/tmpgbudd876.rkt:6:13\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x)\n            (every (lambda (y)\n                     (zero? (modulo x y)))\n                   (string->list (number->string x))))\n          (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1665509871,
      "stdout": "",
      "stderr": "/tmp/tmpgbudd876.rkt:6:13: every: unbound identifier\n  in: every\n  location...:\n   /tmp/tmpgbudd876.rkt:6:13\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x)\n            (andmap (lambda (y)\n                      (zero? (modulo x y)))\n                    (string->list (number->string x))))\n          (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1665509871,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:16:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:17:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:18:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x)\n            (define (divisible? n)\n              (define (divisible-by-digit? n d)\n                (if (= d 0)\n                    #t\n                    (if (= (modulo n d) 0)\n                        (divisible-by-digit? n (- d 1))\n                        #f)))\n              (divisible-by-digit? n (modulo n 10)))\n            (divisible? x))\n          (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1666122605,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp19lvboju.rkt:22:4\nactual:     '(1 2 10 11 12 20 21)\nexpected:   '(1 2 3 4 5 6 7 8 9 11 12 15 22)\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp19lvboju.rkt:23:4\nactual:     '(1 2 10 11 12)\nexpected:   '(1 2 3 4 5 6 7 8 9 11 12 15)\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp19lvboju.rkt:24:4\nactual:     '(20 21 22 24)\nexpected:   '(22 24)\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (n)\n            (every (lambda (d)\n                     (zero? (modulo n d)))\n                   (string->list (number->string n))))\n          (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1666122605,
      "stdout": "",
      "stderr": "/tmp/tmpsmutmh_u.rkt:6:13: every: unbound identifier\n  in: every\n  location...:\n   /tmp/tmpsmutmh_u.rkt:6:13\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (for/list ([i (in-range startnum endnum)])\n    (if (andmap (\u03bb (d) (zero? (modulo i d))) (string->list (number->string i)))\n        i\n        #f)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1665509871,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpz0pb8wn8.rkt:15:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpz0pb8wn8.rkt:16:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpz0pb8wn8.rkt:17:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x)\n            (andmap (lambda (y)\n                      (zero? (modulo x y)))\n                    (string->list (number->string x))))\n          (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1665509871,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:16:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:17:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:18:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x)\n            (andmap (lambda (y)\n                      (= (modulo x y) 0))\n                    (string->list (number->string x))))\n          (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1665509871,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp50hm67e_.rkt:16:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp50hm67e_.rkt:17:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp50hm67e_.rkt:18:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x)\n            (andmap (lambda (y)\n                      (= (modulo x y) 0))\n                    (string->list (number->string x))))\n          (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1665509871,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp50hm67e_.rkt:16:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp50hm67e_.rkt:17:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp50hm67e_.rkt:18:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x)\n            (andmap (lambda (y) (= (modulo x y) 0))\n                    (string->list (number->string x))))\n          (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1666122604,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmplry4vs8g.rkt:15:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmplry4vs8g.rkt:16:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmplry4vs8g.rkt:17:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (n)\n            (every (lambda (d)\n                     (zero? (modulo n d)))\n                   (string->list (number->string n))))\n          (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1666122605,
      "stdout": "",
      "stderr": "/tmp/tmpsmutmh_u.rkt:6:13: every: unbound identifier\n  in: every\n  location...:\n   /tmp/tmpsmutmh_u.rkt:6:13\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x)\n            (andmap (lambda (y)\n                      (zero? (modulo x y)))\n                    (string->list (number->string x))))\n          (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1665509871,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:16:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:17:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:18:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x)\n            (every (lambda (y)\n                     (zero? (modulo x y)))\n                   (string->list (number->string x))))\n          (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1665509871,
      "stdout": "",
      "stderr": "/tmp/tmpgbudd876.rkt:6:13: every: unbound identifier\n  in: every\n  location...:\n   /tmp/tmpgbudd876.rkt:6:13\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x)\n            (every (lambda (y)\n                     (zero? (modulo x y)))\n                   (string->list (number->string x))))\n          (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1665509871,
      "stdout": "",
      "stderr": "/tmp/tmpgbudd876.rkt:6:13: every: unbound identifier\n  in: every\n  location...:\n   /tmp/tmpgbudd876.rkt:6:13\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x)\n            (andmap (lambda (y)\n                      (zero? (modulo x y)))\n                    (string->list (number->string x))))\n          (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1665509871,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:16:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:17:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:18:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x) (every (lambda (y) (= (modulo x y) 0)) (map string->number (string-&gt;list (number-&gt;string x))))) (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1666122604,
      "stdout": "",
      "stderr": "/tmp/tmpzbcd80zp.rkt:5:81: read-syntax: expected a `)` to close `(`\n  possible cause: indentation suggests a missing `)` before line 7\n  context...:\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:186:17: body\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:183:2: wrap-internal\n   /work/arjunguha-research-group/software/racket/collects/racket/../syntax/module-reader.rkt:67:9: wrap-internal/wrapper\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (for/list ([i (in-range startnum endnum)])\n    (if (every? (lambda (x) (zero? (modulo i x))) (string->list (number->string i)))\n        i\n        #f)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1666122605,
      "stdout": "",
      "stderr": "/tmp/tmp1xxpxnpg.rkt:6:9: every?: unbound identifier\n  in: every?\n  location...:\n   /tmp/tmp1xxpxnpg.rkt:6:9\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x)\n            (andmap (lambda (y)\n                      (zero? (modulo x y)))\n                    (string->list (number->string x))))\n          (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1665509871,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:16:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:17:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:18:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x)\n            (andmap (lambda (y)\n                      (zero? (modulo x y)))\n                    (string->list (number->string x))))\n          (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1665509871,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:16:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:17:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:18:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x)\n            (andmap (lambda (y)\n                      (zero? (modulo x y)))\n                    (string->list (number->string x))))\n          (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1665509871,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:16:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:17:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:18:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x)\n            (andmap (lambda (y) (= (modulo x y) 0))\n                    (string->list (number->string x))))\n          (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1666122604,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmplry4vs8g.rkt:15:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmplry4vs8g.rkt:16:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmplry4vs8g.rkt:17:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x)\n            (every (lambda (y)\n                     (zero? (modulo x y)))\n                   (string->list (number->string x))))\n          (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1665509871,
      "stdout": "",
      "stderr": "/tmp/tmpgbudd876.rkt:6:13: every: unbound identifier\n  in: every\n  location...:\n   /tmp/tmpgbudd876.rkt:6:13\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x)\n            (andmap (lambda (y)\n                      (zero? (modulo x y)))\n                    (string->list (number->string x))))\n          (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1665509871,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:16:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:17:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:18:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x)\n            (every (lambda (y)\n                     (zero? (modulo x y)))\n                   (string->list (number->string x))))\n          (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1665509871,
      "stdout": "",
      "stderr": "/tmp/tmpgbudd876.rkt:6:13: every: unbound identifier\n  in: every\n  location...:\n   /tmp/tmpgbudd876.rkt:6:13\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x) (and (divisible? x (first (digits x))) (divisible? x (second (digits x))))) (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1666122604,
      "stdout": "",
      "stderr": "/tmp/tmpx5kj292a.rkt:5:28: divisible?: unbound identifier\n  in: divisible?\n  location...:\n   /tmp/tmpx5kj292a.rkt:5:28\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (for/list ([i (in-range startnum endnum)])\n    (andmap (lambda (x) (zero? (modulo i x))) (string->list (number->string i)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1666122605,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpfv2wl51t.rkt:13:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpfv2wl51t.rkt:14:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpfv2wl51t.rkt:15:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x)\n            (andmap (lambda (y)\n                      (zero? (modulo x y)))\n                    (string->list (number->string x))))\n          (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1665509871,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:16:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:17:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:18:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x)\n            (andmap (lambda (y)\n                      (zero? (modulo x y)))\n                    (string->list (number->string x))))\n          (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1665509871,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:16:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:17:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:18:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x)\n            (andmap (lambda (y)\n                      (zero? (modulo x y)))\n                    (string->list (number->string x))))\n          (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1665509871,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:16:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:17:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:18:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (for/list ([i (in-range startnum endnum)])\n    (andmap (lambda (x) (zero? (modulo i x))) (string->list (number->string i)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1666122605,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpfv2wl51t.rkt:13:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpfv2wl51t.rkt:14:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpfv2wl51t.rkt:15:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (for/list ([i (in-range startnum endnum)])\n    (andmap (lambda (x) (= (modulo i x) 0)) (string->list (number->string i)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1666122605,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpmhui1eh1.rkt:13:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpmhui1eh1.rkt:14:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpmhui1eh1.rkt:15:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x) (and (divisible? x 10) (divisible? x 100))) (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1666122604,
      "stdout": "",
      "stderr": "/tmp/tmplb_xi9ns.rkt:5:28: divisible?: unbound identifier\n  in: divisible?\n  location...:\n   /tmp/tmplb_xi9ns.rkt:5:28\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x)\n            (andmap (lambda (y)\n                      (zero? (modulo x y)))\n                    (string->list (number->string x))))\n          (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1665509871,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:16:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:17:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:18:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x)\n            (define (divisible? n)\n              (and (zero? (modulo n (quotient n 10)))\n                   (if (zero? (quotient n 10))\n                       #t\n                       (divisible? (quotient n 10)))))\n            (divisible? x))\n          (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1666122605,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp3tmgo071.rkt:19:4\n\nmodulo: division by zero\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp3tmgo071.rkt:20:4\n\nmodulo: division by zero\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp3tmgo071.rkt:21:4\n\nmodulo: division by zero\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x)\n            (andmap (lambda (y) (= (modulo x y) 0))\n                    (string->list (number->string x))))\n          (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1666122604,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmplry4vs8g.rkt:15:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmplry4vs8g.rkt:16:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmplry4vs8g.rkt:17:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x)\n            (andmap (lambda (y)\n                      (zero? (modulo x y)))\n                    (string->list (number->string x))))\n          (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1665509871,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:16:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:17:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:18:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x)\n            (andmap (lambda (y)\n                      (zero? (modulo x y)))\n                    (string->list (number->string x))))\n          (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1665509871,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:16:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:17:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:18:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x)\n            (define (divisible? n)\n              (if (zero? n)\n                  #t\n                  (if (zero? (modulo x n))\n                      (divisible? (quotient n 10))\n                      #f)))\n            (divisible? x))\n          (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1666122605,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpj8w2nfoo.rkt:20:4\nactual:     '(1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20)\nexpected:   '(1 2 3 4 5 6 7 8 9 11 12 15 22)\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpj8w2nfoo.rkt:21:4\nactual:     '(1 2 3 4 5 6 7 8 9 10 11 12 13 14)\nexpected:   '(1 2 3 4 5 6 7 8 9 11 12 15)\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpj8w2nfoo.rkt:22:4\nactual:     '(20 22 24)\nexpected:   '(22 24)\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x)\n            (let loop ([x x] [y (number->string x)])\n              (if (zero? (string-length y))\n                  #t\n                  (and (zero? (modulo x (string->number (string-ref y 0))))\n                       (loop (quotient x 10) (substring y 1))))))\n          (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1666122605,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpy2nfwg93.rkt:18:4\n\nstring->number: contract violation\n  expected: string?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpy2nfwg93.rkt:19:4\n\nstring->number: contract violation\n  expected: string?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpy2nfwg93.rkt:20:4\n\nstring->number: contract violation\n  expected: string?\n  given: #\\2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x)\n            (andmap (lambda (y)\n                      (zero? (modulo x y)))\n                    (string->list (number->string x))))\n          (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1665509871,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:16:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:17:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:18:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x) (every (lambda (y) (zero? (modulo x y))) (string->list (number->string x)))) (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1665509871,
      "stdout": "",
      "stderr": "/tmp/tmpc45ute9y.rkt:5:23: every: unbound identifier\n  in: every\n  location...:\n   /tmp/tmpc45ute9y.rkt:5:23\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x)\n            (every (lambda (y)\n                     (zero? (modulo x y)))\n                   (string->list (number->string x))))\n          (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1665509871,
      "stdout": "",
      "stderr": "/tmp/tmpgbudd876.rkt:6:13: every: unbound identifier\n  in: every\n  location...:\n   /tmp/tmpgbudd876.rkt:6:13\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x)\n            (andmap (lambda (y) (= (remainder x y) 0))\n                    (string->list (number->string x))))\n          (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1666122605,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpoee9ozs2.rkt:15:4\n\nremainder: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpoee9ozs2.rkt:16:4\n\nremainder: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpoee9ozs2.rkt:17:4\n\nremainder: contract violation\n  expected: integer?\n  given: #\\2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x)\n            (andmap (lambda (y)\n                      (zero? (modulo x y)))\n                    (map string->number (string-&gt;list (number-&gt;string x)))))\n          (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1665509870,
      "stdout": "",
      "stderr": "/tmp/tmp92mlgit0.rkt:6:12: read-syntax: expected a `)` to close `(`\n  possible cause: indentation suggests a missing `)` before line 11\n  context...:\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:186:17: body\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:183:2: wrap-internal\n   /work/arjunguha-research-group/software/racket/collects/racket/../syntax/module-reader.rkt:67:9: wrap-internal/wrapper\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x) (and (divisible? x (first (string->list (number->string x)))) (divisible? x (second (string->list (number->string x)))))) (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1666122605,
      "stdout": "",
      "stderr": "/tmp/tmpef4_dftx.rkt:5:28: divisible?: unbound identifier\n  in: divisible?\n  location...:\n   /tmp/tmpef4_dftx.rkt:5:28\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x)\n            (define (divisible? n)\n              (cond\n                [(zero? n) #t]\n                [(zero? (modulo x (remainder n 10))) #f]\n                [else (divisible? (quotient n 10))]))\n            (divisible? x))\n          (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1666122605,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgqrwvfld.rkt:19:4\n\nmodulo: division by zero\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgqrwvfld.rkt:20:4\n\nmodulo: division by zero\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgqrwvfld.rkt:21:4\n\nmodulo: division by zero\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x)\n            (andmap (lambda (y)\n                      (zero? (modulo x y)))\n                    (string->list (number->string x))))\n          (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1665509871,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:16:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:17:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:18:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x)\n            (andmap (lambda (y)\n                      (zero? (modulo x y)))\n                    (string->list (number->string x))))\n          (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1665509871,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:16:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:17:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:18:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x)\n            (andmap (lambda (y)\n                      (zero? (modulo x y)))\n                    (string-&gt;list (number-&gt;string x))))\n          (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1666122604,
      "stdout": "",
      "stderr": "/tmp/tmprtpgtskv.rkt:5:10: read-syntax: expected a `)` to close `(`\n  possible cause: indentation suggests a missing `)` before line 11\n  context...:\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:186:17: body\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:183:2: wrap-internal\n   /work/arjunguha-research-group/software/racket/collects/racket/../syntax/module-reader.rkt:67:9: wrap-internal/wrapper\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x)\n            (andmap (lambda (y)\n                      (zero? (modulo x y)))\n                    (string->list (number->string x))))\n          (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1665509871,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:16:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:17:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:18:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x) (and (divisible? x (modulo x 10)) (divisible? x (/ x 10)))) (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1666122605,
      "stdout": "",
      "stderr": "/tmp/tmpvu874pf7.rkt:5:28: divisible?: unbound identifier\n  in: divisible?\n  location...:\n   /tmp/tmpvu874pf7.rkt:5:28\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x) (and (divisible? x 10) (divisible? x 100))) (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1666122604,
      "stdout": "",
      "stderr": "/tmp/tmplb_xi9ns.rkt:5:28: divisible?: unbound identifier\n  in: divisible?\n  location...:\n   /tmp/tmplb_xi9ns.rkt:5:28\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x)\n            (andmap (lambda (y)\n                      (zero? (modulo x y)))\n                    (map string->number (string-&gt;list (number-&gt;string x)))))\n          (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1665509870,
      "stdout": "",
      "stderr": "/tmp/tmp92mlgit0.rkt:6:12: read-syntax: expected a `)` to close `(`\n  possible cause: indentation suggests a missing `)` before line 11\n  context...:\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:186:17: body\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:183:2: wrap-internal\n   /work/arjunguha-research-group/software/racket/collects/racket/../syntax/module-reader.rkt:67:9: wrap-internal/wrapper\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x)\n            (andmap (lambda (y)\n                      (zero? (modulo x y)))\n                    (string->list (number->string x))))\n          (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1665509871,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:16:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:17:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:18:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x)\n            (andmap (lambda (y) (= (modulo x y) 0))\n                    (map string->number (string-&gt;list (number-&gt;string x)))))\n          (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1665509870,
      "stdout": "",
      "stderr": "/tmp/tmpbsdq5ig3.rkt:6:12: read-syntax: expected a `)` to close `(`\n  possible cause: indentation suggests a missing `)` before line 10\n  context...:\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:186:17: body\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:183:2: wrap-internal\n   /work/arjunguha-research-group/software/racket/collects/racket/../syntax/module-reader.rkt:67:9: wrap-internal/wrapper\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x)\n            (andmap (lambda (y)\n                      (zero? (modulo x y)))\n                    (string->list (number->string x))))\n          (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1665509871,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:16:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:17:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:18:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x)\n            (andmap (lambda (y)\n                      (zero? (modulo x y)))\n                    (string->list (number->string x))))\n          (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1665509871,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:16:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:17:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:18:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x)\n            (define (divisible? n)\n              (if (= n 0)\n                  #t\n                  (and (zero? (modulo x n))\n                       (divisible? (quotient n 10)))))\n            (divisible? x))\n          (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1666122605,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpb2wyjmzi.rkt:19:4\nactual:     '(1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20)\nexpected:   '(1 2 3 4 5 6 7 8 9 11 12 15 22)\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpb2wyjmzi.rkt:20:4\nactual:     '(1 2 3 4 5 6 7 8 9 10 11 12 13 14)\nexpected:   '(1 2 3 4 5 6 7 8 9 11 12 15)\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpb2wyjmzi.rkt:21:4\nactual:     '(20 22 24)\nexpected:   '(22 24)\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x)\n            (andmap (lambda (y)\n                      (zero? (modulo x y)))\n                    (string->list (number->string x))))\n          (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1665509871,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:16:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:17:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:18:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x)\n            (andmap (lambda (y)\n                      (zero? (modulo x y)))\n                    (string->list (number->string x))))\n          (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1665509871,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:16:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:17:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:18:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x) (and (divisible? x 10) (divisible? x 100))) (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1666122604,
      "stdout": "",
      "stderr": "/tmp/tmplb_xi9ns.rkt:5:28: divisible?: unbound identifier\n  in: divisible?\n  location...:\n   /tmp/tmplb_xi9ns.rkt:5:28\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x) (and (divisible-by-digits? x) (divisible-by-digits? x))) (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1666122605,
      "stdout": "",
      "stderr": "/tmp/tmpgydctoug.rkt:5:28: divisible-by-digits?: unbound identifier\n  in: divisible-by-digits?\n  location...:\n   /tmp/tmpgydctoug.rkt:5:28\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x)\n            (andmap (lambda (y) (= (modulo x y) 0))\n                    (string->list (number->string x))))\n          (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1666122604,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmplry4vs8g.rkt:15:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmplry4vs8g.rkt:16:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmplry4vs8g.rkt:17:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (for/list ([i (in-range startnum endnum)])\n    (if (andmap (\u03bb (x) (= (modulo i x) 0)) (map string->number (string-&gt;list (number-&gt;string i))))\n        i\n        #f)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1666122604,
      "stdout": "",
      "stderr": "/tmp/tmpxgre8969.rkt:6:4: read-syntax: expected a `)` to close `(`\n  possible cause: indentation suggests a missing `)` before line 10\n  context...:\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:186:17: body\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:183:2: wrap-internal\n   /work/arjunguha-research-group/software/racket/collects/racket/../syntax/module-reader.rkt:67:9: wrap-internal/wrapper\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x)\n            (andmap (lambda (y)\n                      (zero? (modulo x y)))\n                    (string->list (number->string x))))\n          (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1665509871,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:16:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:17:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:18:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x)\n            (andmap (lambda (y)\n                      (zero? (modulo x y)))\n                    (string->list (number->string x))))\n          (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1665509871,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:16:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:17:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:18:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter\n   (lambda (x)\n     (andmap\n      (lambda (y)\n        (zero? (modulo x y)))\n      (string->list (number->string x))))\n   (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1666122605,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpni5ws4oc.rkt:18:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpni5ws4oc.rkt:19:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpni5ws4oc.rkt:20:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x) (and (divisible? x (quotient x 10)) (divisible? x (modulo x 10)))) (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1666122605,
      "stdout": "",
      "stderr": "/tmp/tmpvdh4tzce.rkt:5:28: divisible?: unbound identifier\n  in: divisible?\n  location...:\n   /tmp/tmpvdh4tzce.rkt:5:28\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x)\n            (define (divisible? n)\n              (define (divisible-by-digit? n d)\n                (if (= d 0)\n                    #t\n                    (if (zero? (modulo n d))\n                        (divisible-by-digit? n (/ d 10))\n                        #f)))\n              (divisible-by-digit? n x))\n            (divisible? x))\n          (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1666122605,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpvluejr39.rkt:22:4\n\nmodulo: contract violation\n  expected: integer?\n  given: 1/10\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpvluejr39.rkt:23:4\n\nmodulo: contract violation\n  expected: integer?\n  given: 1/10\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpvluejr39.rkt:24:4\n\nmodulo: contract violation\n  expected: integer?\n  given: 1/5\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (for/list ([i (in-range startnum endnum)])\n    (andmap (\u03bb (d) (zero? (modulo i d)))\n            (string->list (number->string i)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1666122605,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp7i9ci2gd.rkt:14:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp7i9ci2gd.rkt:15:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp7i9ci2gd.rkt:16:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (n)\n            (andmap (lambda (d)\n                      (zero? (modulo n d)))\n                    (string->list (number->string n))))\n          (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1666122605,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmplngad6kd.rkt:16:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmplngad6kd.rkt:17:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmplngad6kd.rkt:18:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x)\n            (andmap (lambda (y)\n                      (zero? (modulo x y)))\n                    (string->list (number->string x))))\n          (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1665509871,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:16:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:17:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:18:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (n)\n            (every (lambda (d)\n                     (zero? (modulo n d)))\n                   (string->list (number->string n))))\n          (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1666122605,
      "stdout": "",
      "stderr": "/tmp/tmpsmutmh_u.rkt:6:13: every: unbound identifier\n  in: every\n  location...:\n   /tmp/tmpsmutmh_u.rkt:6:13\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (for/list ([i (in-range startnum endnum)])\n    (if (andmap (\u03bb (x) (zero? (modulo i x))) (string->list (number->string i)))\n        i\n        #f)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1666122605,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp8r7a2qv3.rkt:15:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp8r7a2qv3.rkt:16:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp8r7a2qv3.rkt:17:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x)\n            (every (lambda (y)\n                     (zero? (modulo x y)))\n                   (string->list (number->string x))))\n          (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1665509871,
      "stdout": "",
      "stderr": "/tmp/tmpgbudd876.rkt:6:13: every: unbound identifier\n  in: every\n  location...:\n   /tmp/tmpgbudd876.rkt:6:13\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x)\n            (andmap (lambda (y)\n                      (zero? (modulo x (string->number (string y)))))\n                    (string-&gt;list (number-&gt;string x))))\n          (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1666122605,
      "stdout": "",
      "stderr": "/tmp/tmpxoopu59s.rkt:5:10: read-syntax: expected a `)` to close `(`\n  possible cause: indentation suggests a missing `)` before line 11\n  context...:\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:186:17: body\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:183:2: wrap-internal\n   /work/arjunguha-research-group/software/racket/collects/racket/../syntax/module-reader.rkt:67:9: wrap-internal/wrapper\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x)\n            (define (divisible? n)\n              (and (zero? (modulo n (quotient n 10)))\n                   (if (zero? (quotient n 10))\n                       #t\n                       (divisible? (quotient n 10)))))\n            (divisible? x))\n          (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1666122605,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp3tmgo071.rkt:19:4\n\nmodulo: division by zero\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp3tmgo071.rkt:20:4\n\nmodulo: division by zero\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp3tmgo071.rkt:21:4\n\nmodulo: division by zero\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter\n   (lambda (n)\n     (andmap\n      (lambda (d)\n        (zero? (modulo n d)))\n      (string->list (number->string n))))\n   (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1666122605,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp95vo8rsk.rkt:18:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp95vo8rsk.rkt:19:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp95vo8rsk.rkt:20:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x)\n            (andmap (lambda (y)\n                      (zero? (modulo x y)))\n                    (string->list (number->string x))))\n          (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1665509871,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:16:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:17:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:18:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x)\n            (andmap (lambda (y) (= (modulo x y) 0))\n                    (string->list (number->string x))))\n          (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1666122604,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmplry4vs8g.rkt:15:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmplry4vs8g.rkt:16:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmplry4vs8g.rkt:17:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x)\n            (every (lambda (y)\n                     (zero? (modulo x y)))\n                   (string->list (number->string x))))\n          (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1665509871,
      "stdout": "",
      "stderr": "/tmp/tmpgbudd876.rkt:6:13: every: unbound identifier\n  in: every\n  location...:\n   /tmp/tmpgbudd876.rkt:6:13\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x) (and (divisible-by? x (remainder x 10)) (divisible-by? x (quotient x 10)))) (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1666122605,
      "stdout": "",
      "stderr": "/tmp/tmpm2jziiwy.rkt:5:28: divisible-by?: unbound identifier\n  in: divisible-by?\n  location...:\n   /tmp/tmpm2jziiwy.rkt:5:28\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x)\n            (andmap (lambda (y) (= (modulo x y) 0))\n                    (string->list (number->string x))))\n          (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1666122604,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmplry4vs8g.rkt:15:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmplry4vs8g.rkt:16:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmplry4vs8g.rkt:17:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x)\n            (andmap (lambda (y)\n                      (zero? (modulo x y)))\n                    (string->list (number->string x))))\n          (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1665509871,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:16:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:17:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:18:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x)\n            (andmap (lambda (y)\n                      (zero? (modulo x y)))\n                    (string->list (number->string x))))\n          (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1665509871,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:16:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:17:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:18:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (for/list ([i (in-range startnum endnum)])\n    (andmap (\u03bb (d) (zero? (modulo i d))) (string->list (number->string i)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1666122606,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpn0v1z3q2.rkt:13:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpn0v1z3q2.rkt:14:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpn0v1z3q2.rkt:15:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x)\n            (andmap (lambda (y) (= (modulo x y) 0))\n                    (string->list (number->string x))))\n          (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1666122604,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmplry4vs8g.rkt:15:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmplry4vs8g.rkt:16:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmplry4vs8g.rkt:17:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x)\n            (every (lambda (y)\n                     (zero? (modulo x y)))\n                   (string-&gt;list (number-&gt;string x))))\n          (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1666122605,
      "stdout": "",
      "stderr": "/tmp/tmp11hkg9sq.rkt:5:10: read-syntax: expected a `)` to close `(`\n  possible cause: indentation suggests a missing `)` before line 11\n  context...:\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:186:17: body\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:183:2: wrap-internal\n   /work/arjunguha-research-group/software/racket/collects/racket/../syntax/module-reader.rkt:67:9: wrap-internal/wrapper\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x)\n            (andmap (lambda (y)\n                      (zero? (modulo x y)))\n                    (string->list (number->string x))))\n          (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1665509871,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:16:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:17:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:18:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (num)\n            (every (lambda (digit)\n                     (zero? (modulo num digit)))\n                   (string->list (number->string num))))\n          (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1666122606,
      "stdout": "",
      "stderr": "/tmp/tmpedds8cd6.rkt:6:13: every: unbound identifier\n  in: every\n  location...:\n   /tmp/tmpedds8cd6.rkt:6:13\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x)\n            (every (lambda (y)\n                     (zero? (modulo x y)))\n                   (string->list (number->string x))))\n          (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1665509871,
      "stdout": "",
      "stderr": "/tmp/tmpgbudd876.rkt:6:13: every: unbound identifier\n  in: every\n  location...:\n   /tmp/tmpgbudd876.rkt:6:13\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x)\n            (andmap (lambda (y)\n                      (zero? (modulo x y)))\n                    (string->list (number->string x))))\n          (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1665509871,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:16:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:17:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpgmizue08.rkt:18:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x)\n            (andmap (lambda (y) (= (modulo x y) 0))\n                    (string->list (number->string x))))\n          (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1666122604,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmplry4vs8g.rkt:15:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmplry4vs8g.rkt:16:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmplry4vs8g.rkt:17:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x)\n            (let loop ([x x] [divisor 10])\n              (cond [(zero? x) #t]\n                    [(zero? (modulo x divisor)) (loop (quotient x 10) 10)]\n                    [(zero? (modulo x (quotient divisor 10))) (loop x (quotient divisor 10))]\n                    [else #f])))\n          (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1666122606,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp2ol19pk3.rkt:18:4\nactual:     '(1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21)\nexpected:   '(1 2 3 4 5 6 7 8 9 11 12 15 22)\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp2ol19pk3.rkt:19:4\nactual:     '(1 2 3 4 5 6 7 8 9 10 11 12 13 14)\nexpected:   '(1 2 3 4 5 6 7 8 9 11 12 15)\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp2ol19pk3.rkt:20:4\nactual:     '(20 21 22 23 24)\nexpected:   '(22 24)\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x)\n            (andmap (lambda (y) (= (modulo x y) 0))\n                    (string->list (number->string x))))\n          (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1666122604,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmplry4vs8g.rkt:15:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmplry4vs8g.rkt:16:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmplry4vs8g.rkt:17:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (for/list ([i (in-range startnum endnum)])\n    (if (andmap (\u03bb (d) (zero? (remainder i d))) (string->list (number->string i)))\n        i\n        #f)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1666122606,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp0obw2qdo.rkt:15:4\n\nremainder: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp0obw2qdo.rkt:16:4\n\nremainder: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp0obw2qdo.rkt:17:4\n\nremainder: contract violation\n  expected: integer?\n  given: #\\2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x) (and (divisible? x 10) (divisible? x 100))) (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1666122604,
      "stdout": "",
      "stderr": "/tmp/tmplb_xi9ns.rkt:5:28: divisible?: unbound identifier\n  in: divisible?\n  location...:\n   /tmp/tmplb_xi9ns.rkt:5:28\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (x)\n            (andmap (lambda (y)\n                      (zero? (modulo x y)))\n                    (string-&gt;list (number-&gt;string x))))\n          (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1666122604,
      "stdout": "",
      "stderr": "/tmp/tmprtpgtskv.rkt:5:10: read-syntax: expected a `)` to close `(`\n  possible cause: indentation suggests a missing `)` before line 11\n  context...:\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:186:17: body\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:183:2: wrap-internal\n   /work/arjunguha-research-group/software/racket/collects/racket/../syntax/module-reader.rkt:67:9: wrap-internal/wrapper\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#lang racket\n\n;; Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/rktthon-exercises/lambda/rktthon-lambda-exercise-24.php\n(define (divisible_by_digits startnum endnum)\n  (filter (lambda (n)\n            (andmap (lambda (d) (= (modulo n d) 0))\n                    (string->list (number->string n))))\n          (range startnum endnum)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate divisible_by_digits))\n    (check-equal? (candidate 1 22) (list 1 2 3 4 5 6 7 8 9 11 12 15 22))\n    (check-equal? (candidate 1 15) (list 1 2 3 4 5 6 7 8 9 11 12 15))\n    (check-equal? (candidate 20 25) (list 22 24))\n))\n\n(test-humaneval)",
      "timestamp": 1666122604,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpud6i_go6.rkt:15:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpud6i_go6.rkt:16:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\1\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpud6i_go6.rkt:17:4\n\nmodulo: contract violation\n  expected: integer?\n  given: #\\2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    }
  ]
}
{
  "name": "mbpp_756_text_match_zero_one",
  "language": "rkt",
  "prompt": "#lang racket\n\n;; Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/rktthon-exercises/re/rktthon-re-exercise-3.php\n(define (text_match_zero_one text)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_756_text_match_zero_one.py",
  "prompt_terminology": "reworded",
  "tests": "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate text_match_zero_one))\n    (check-equal? (candidate \"ac\") #f)\n    (check-equal? (candidate \"dc\") #f)\n    (check-equal? (candidate \"abbbba\") #t)\n    (check-equal? (candidate \"dsabbbba\") #t)\n    (check-equal? (candidate \"asbbbba\") #f)\n    (check-equal? (candidate \"abaaa\") #t)\n))\n\n(test-humaneval)",
  "stop_tokens": [
    "\n(define ",
    "\n#|",
    "\n;",
    "\n("
  ],
  "completions": [
    "  (regexp-match? #rx\"ab?\" text))\n",
    "  (regexp-match? #rx\"ab?\" text))\n",
    "  (regexp-match #rx\"ab*\" text))\n",
    "  (regexp-match? #rx\"ab?\" text))\n",
    "  (regexp-match? #rx\"ab?\" text))\n",
    "  (regexp-match? #rx\"a[b]+\" text))\n",
    "  (regexp-match? #rx\"ab?\" text))\n",
    "  (regexp-match? #rx\"a[b]*\" text))\n",
    "  (regexp-match? #rx\"a+b*\" text))\n",
    "  (regexp-match #rx\"ab?\" text))\n",
    "  (regexp-match? #rx\"a[b]+\" text))\n",
    "  (regexp-match? #rx\"a[b]+\" text))\n",
    "  (regexp-match? #rx\"ab*\" text))\n",
    "  (regexp-match? #rx\"ab*\" text))\n",
    "  (regexp-match? #rx\"ab?\" text))\n",
    "  (regexp-match? #rx\"ab?\" text))\n",
    "  (regexp-match? #rx\"ab*\" text))\n",
    "  (regexp-match? #rx\"ab?\" text))\n",
    "  (regexp-match? #rx\"ab?\" text))\n",
    "  (regexp-match? #rx\"ab?\" text))\n"
  ]
}
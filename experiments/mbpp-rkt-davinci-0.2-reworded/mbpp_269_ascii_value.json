{
  "name": "mbpp_269_ascii_value",
  "language": "rkt",
  "prompt": "#lang racket\n\n;; Write a function to find the ascii value of a character.\n(define (ascii_value k)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_269_ascii_value.py",
  "prompt_terminology": "reworded",
  "tests": "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate ascii_value))\n    (check-equal? (candidate \"A\") 65)\n    (check-equal? (candidate \"R\") 82)\n    (check-equal? (candidate \"S\") 83)\n))\n\n(test-humaneval)",
  "stop_tokens": [
    "\n(define ",
    "\n#|",
    "\n;",
    "\n("
  ],
  "completions": [
    "  (char->integer k))\n",
    "  (string->number (integer->string (char->integer k))))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (integer->char (char->integer k)))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (integer->char (char->integer k)))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (integer->char (char->integer k)))\n",
    "  (integer->char (char->integer k)))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (string->number (integer->string (char->integer k))))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (integer->char (char->integer k)))\n",
    "  (integer->char (char->integer k)))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (integer->char (char->integer k)))\n",
    "  (char->integer k))\n",
    "  (integer->char (char->integer k)))\n",
    "  (integer->char (char->integer k)))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (integer->char k))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (integer->char (char->integer k)))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (integer->char (char->integer k)))\n",
    "  (integer->char (char->integer k)))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (string->number (integer->string (char->integer k))))\n",
    "  (integer->char (char->integer k)))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (integer->char (char->integer k)))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (integer->char (char->integer k)))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (integer->char (char->integer k)))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (integer->char (char->integer k)))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (char->integer k))\n",
    "  (integer->char (char->integer k)))\n"
  ]
}
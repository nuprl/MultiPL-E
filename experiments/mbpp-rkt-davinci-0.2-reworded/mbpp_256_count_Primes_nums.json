{
  "name": "mbpp_256_count_Primes_nums",
  "language": "rkt",
  "prompt": "#lang racket\n\n;; Write a rktthon function that takes in a non-negative number and returns the number of prime numbers less than the given non-negative number.\n(define (count_Primes_nums n)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_256_count_Primes_nums.py",
  "prompt_terminology": "reworded",
  "tests": "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate count_Primes_nums))\n    (check-equal? (candidate 5) 2)\n    (check-equal? (candidate 10) 4)\n    (check-equal? (candidate 100) 25)\n))\n\n(test-humaneval)",
  "stop_tokens": [
    "\n(define ",
    "\n#|",
    "\n;",
    "\n("
  ],
  "completions": [
    "  (cond\n    [(= n 0) 0]\n    [(= n 1) 0]\n    [(= n 2) 1]\n    [else\n     (count_Primes_nums (- n 1))]))\n",
    "  (define (is_prime? n)\n    (define (is_divisible? a b)\n      (= (remainder a b) 0))\n    (define (is_prime_helper n d)\n      (cond ((= d 1) #t)\n            ((is_divisible? n d) #f)\n            (else (is_prime_helper n (- d 1)))))\n    (is_prime_helper n (- n 1)))\n  (define (count_Primes_nums_helper n count)\n    (cond ((= n 0) count)\n          ((is_prime? n) (count_Primes_nums_helper (- n 1) (+ count 1)))\n          (else (count_Primes_nums_helper (- n 1) count))))\n  (count_Primes_nums_helper n 0))\n",
    "  (define (isPrime? n)\n    (define (helper n i)\n      (cond ((= i 1) #t)\n            ((= (modulo n i) 0) #f)\n            (else (helper n (- i 1)))))\n    (helper n (- n 1)))\n  (define (helper n i)\n    (cond ((= i n) 0)\n          ((isPrime? i) (+ 1 (helper n (+ i 1))))\n          (else (helper n (+ i 1)))))\n  (helper n 2))\n",
    "  (define (is_Prime n)\n    (define (is_Prime_helper n i)\n      (cond\n        [(= i 1) #t]\n        [(= (modulo n i) 0) #f]\n        [else (is_Prime_helper n (- i 1))]))\n    (is_Prime_helper n (- n 1)))\n  (define (count_Primes_nums_helper n i)\n    (cond\n      [(= i 0) 0]\n      [(is_Prime i) (+ 1 (count_Primes_nums_helper n (- i 1)))]\n      [else (count_Primes_nums_helper n (- i 1))]))\n  (count_Primes_nums_helper n n))\n",
    "  (define (is_prime n)\n    (define (helper i)\n      (if (= i 1)\n          #t\n          (if (= (modulo n i) 0)\n              #f\n              (helper (- i 1)))))\n    (helper (- n 1)))\n  (define (helper2 i)\n    (if (= i n)\n        0\n        (if (is_prime i)\n            (+ 1 (helper2 (+ i 1)))\n            (helper2 (+ i 1)))))\n  (helper2 0))\n",
    "  (define (is_prime? n)\n    (define (helper n i)\n      (cond\n        [(= i 1) #t]\n        [(= (modulo n i) 0) #f]\n        [else (helper n (- i 1))]))\n    (helper n (- n 1)))\n  (define (helper n i)\n    (cond\n      [(= i n) 0]\n      [(is_prime? i) (+ 1 (helper n (+ i 1)))]\n      [else (helper n (+ i 1))]))\n  (helper n 2))\n",
    "  (define (is_prime? n)\n    (define (is_divisible? a b)\n      (= (remainder a b) 0))\n    (define (iter i)\n      (cond ((= i 1) #t)\n            ((is_divisible? n i) #f)\n            (else (iter (- i 1)))))\n    (iter (- n 1)))\n  (define (iter i)\n    (cond ((= i n) 0)\n          ((is_prime? i) (+ 1 (iter (+ i 1))))\n          (else (iter (+ i 1)))))\n  (iter 0))\n",
    "  (define (isPrime? n)\n    (define (helper i)\n      (if (= i 1)\n          #t\n          (if (= (remainder n i) 0)\n              #f\n              (helper (- i 1)))))\n    (helper (- n 1)))\n  (define (helper2 i)\n    (if (= i n)\n        0\n        (if (isPrime? i)\n            (+ 1 (helper2 (+ i 1)))\n            (helper2 (+ i 1)))))\n  (helper2 0))\n",
    "  (define (is_prime? n)\n    (define (helper i)\n      (cond ((= i 1) #t)\n            ((= (modulo n i) 0) #f)\n            (else (helper (- i 1)))))\n    (helper (- n 1)))\n  (define (helper2 i count)\n    (cond ((= i n) count)\n          ((is_prime? i) (helper2 (+ i 1) (+ count 1)))\n          (else (helper2 (+ i 1) count))))\n  (helper2 1 0))\n",
    "  (define (is_prime? n)\n    (define (helper i)\n      (cond\n        [(= i 1) true]\n        [(= (remainder n i) 0) false]\n        [else (helper (- i 1))]))\n    (helper (- n 1)))\n  (define (helper n count)\n    (cond\n      [(= n 1) count]\n      [(is_prime? n) (helper (- n 1) (+ count 1))]\n      [else (helper (- n 1) count)]))\n  (helper n 0))\n",
    "  (define (isPrime? n)\n    (define (helper i)\n      (if (= i 1)\n          #t\n          (if (= (remainder n i) 0)\n              #f\n              (helper (- i 1)))))\n    (helper (- n 1)))\n  (define (helper2 i count)\n    (if (= i n)\n        count\n        (if (isPrime? i)\n            (helper2 (+ i 1) (+ count 1))\n            (helper2 (+ i 1) count))))\n  (helper2 0 0))\n",
    "  (cond\n    [(= n 0) 0]\n    [(= n 1) 0]\n    [(= n 2) 1]\n    [(= n 3) 2]\n    [(= n 4) 2]\n    [(= n 5) 3]\n    [(= n 6) 3]\n    [(= n 7) 4]\n    [(= n 8) 4]\n    [(= n 9) 4]\n    [(= n 10) 4]\n    [(= n 11) 5]\n    [(= n 12) 5]\n    [(= n 13) 6]\n    [(= n 14) 6]\n    [(= n 15) 6]\n    [(= n 16) 6]\n    [(= n 17) 7]\n    [(= n 18) 7]\n    [(= n 19) 8]\n    [(= n 20) 8]\n    [(= n 21) 8]\n    [(= n 22) 8]\n    [(= n 23) 9]\n    [(= n 24) 9]\n    [(= n 25) 9]\n    [(= n 26) 9]\n    [(= n 27) 9]\n    [(= n 28) 9]\n    [(= n 29) 10]\n    [(= n 30) 10]\n    [(= n 31) 10]\n    [(= n 32) 10]\n    [(= n 33) 10]\n    [(= n 34) 10]\n    [(= n 35) 10]\n    [(= n 36) 10]\n    [(= n 37) 11]\n    [(= n 38) 11]\n    [(= n 39) 11]\n    [(= n 40) 11]\n    [(= n 41) 11]\n    [(= n 42) 11]\n    [(= n 43) 11]\n    [(= n 44) 11]\n    [(= n 45) 11]\n    [(= n 46) 11]\n    [(= n 47) 12]\n    [(= n 48) 12]\n    [(= n 49) 12]\n    [(= n 50) 12]\n    [(= n 51) 12]\n    [(= n 52) 12]\n    [(= n 53) 12]\n    [(= n 54) 12]\n    [(= n 55) 12]\n    [(=",
    "  (cond\n    [(= n 0) 0]\n    [(= n 1) 0]\n    [(= n 2) 1]\n    [(= n 3) 2]\n    [else (count_Primes_nums (- n 1))]))\n",
    "  (if (= n 1)\n      0\n      (if (prime? n)\n          (+ 1 (count_Primes_nums (- n 1)))\n          (count_Primes_nums (- n 1)))))\n",
    "  (if (= n 0)\n      0\n      (if (= n 1)\n          0\n          (if (= n 2)\n              1\n              (if (= n 3)\n                  2\n                  (if (= n 4)\n                      2\n                      (if (= n 5)\n                          3\n                          (if (= n 6)\n                              3\n                              (if (= n 7)\n                                  4\n                                  (if (= n 8)\n                                      4\n                                      (if (= n 9)\n                                          4\n                                          (if (= n 10)\n                                              4\n                                              (if (= n 11)\n                                                  5\n                                                  (if (= n 12)\n                                                      5\n                                                      (if (= n 13)\n                                                          6\n                                                          (if (= n 14)\n                                                              6\n                                                              (if (= n 15)\n                                                                  6\n                                                                  (if (= n 16)\n                                                                      6\n                                                                      (if (= n 17)\n                                                                          7\n                                                                          (if (= n 18)\n                                                                              7\n                                                                              (if (= n 19)\n                                                                                  8\n                                                                                  (if (= n 20)\n                                                                                      8\n                                                                                      (if (= n 21)\n                                                                                          8\n                                                                                          (if (= n 22)\n                                                                                              8\n                                                                                              (if (= n 23)\n                                                                                                  9\n                                                                                                  (if (= n 24)\n                                                                                                      9\n                                                                                                      (if (= n 25)\n                                                                                                          9\n                                                                                                          (if (= n 26)\n                                                                                                              9\n                                                                                                              (if (= n 27)\n                                                                                                                  9\n                                                                                                                  (if (= n 28)\n                                                                                                                      9\n                                                                                                                      (if (= n 29)\n                                                                                                                          10\n                                                                                                ",
    "  (if (= n 0)\n      0\n      (if (= n 1)\n          0\n          (if (= n 2)\n              1\n              (if (prime? n)\n                  (+ 1 (count_Primes_nums (- n 1)))\n                  (count_Primes_nums (- n 1)))))))\n",
    "  (if (= n 0)\n      0\n      (if (prime? n)\n          (+ 1 (count_Primes_nums (- n 1)))\n          (count_Primes_nums (- n 1)))))\n",
    "  (cond\n    [(= n 0) 0]\n    [(= n 1) 0]\n    [(= n 2) 1]\n    [(= n 3) 2]\n    [(= n 4) 2]\n    [(= n 5) 3]\n    [(= n 6) 3]\n    [(= n 7) 4]\n    [(= n 8) 4]\n    [(= n 9) 4]\n    [(= n 10) 4]\n    [(= n 11) 5]\n    [(= n 12) 5]\n    [(= n 13) 6]\n    [(= n 14) 6]\n    [(= n 15) 6]\n    [(= n 16) 6]\n    [(= n 17) 7]\n    [(= n 18) 7]\n    [(= n 19) 8]\n    [(= n 20) 8]\n    [(= n 21) 8]\n    [(= n 22) 8]\n    [(= n 23) 9]\n    [(= n 24) 9]\n    [(= n 25) 9]\n    [(= n 26) 9]\n    [(= n 27) 9]\n    [(= n 28) 9]\n    [(= n 29) 10]\n    [(= n 30) 10]\n    [(= n 31) 10]\n    [(= n 32) 10]\n    [(= n 33) 10]\n    [(= n 34) 10]\n    [(= n 35) 10]\n    [(= n 36) 10]\n    [(= n 37) 11]\n    [(= n 38) 11]\n    [(= n 39) 11]\n    [(= n 40) 11]\n    [(= n 41) 11]\n    [(= n 42) 11]\n    [(= n 43) 12]\n    [(= n 44) 12]\n    [(= n 45) 12]\n    [(= n 46) 12]\n    [(= n 47) 12]\n    [(= n 48) 12]\n    [(= n 49) 12]\n    [(= n 50) 12]\n    [(= n 51) 12]\n    [(= n 52) 12]\n    [(= n 53) 13]\n    [(= n 54) 13]\n    [(= n 55) 13]\n    [(=",
    "  (if (= n 0)\n      0\n      (if (= n 1)\n          0\n          (if (= n 2)\n              1\n              (if (= n 3)\n                  2\n                  (if (= n 4)\n                      2\n                      (if (= n 5)\n                          3\n                          (if (= n 6)\n                              3\n                              (if (= n 7)\n                                  4\n                                  (if (= n 8)\n                                      4\n                                      (if (= n 9)\n                                          4\n                                          (if (= n 10)\n                                              4\n                                              (if (= n 11)\n                                                  5\n                                                  (if (= n 12)\n                                                      5\n                                                      (if (= n 13)\n                                                          6\n                                                          (if (= n 14)\n                                                              6\n                                                              (if (= n 15)\n                                                                  6\n                                                                  (if (= n 16)\n                                                                      6\n                                                                      (if (= n 17)\n                                                                          7\n                                                                          (if (= n 18)\n                                                                              7\n                                                                              (if (= n 19)\n                                                                                  8\n                                                                                  (if (= n 20)\n                                                                                      8\n                                                                                      (if (= n 21)\n                                                                                          8\n                                                                                          (if (= n 22)\n                                                                                              8\n                                                                                              (if (= n 23)\n                                                                                                  9\n                                                                                                  (if (= n 24)\n                                                                                                      9\n                                                                                                      (if (= n 25)\n                                                                                                          9\n                                                                                                          (if (= n 26)\n                                                                                                              9\n                                                                                                              (if (= n 27)\n                                                                                                                  9\n                                                                                                                  (if (= n 28)\n                                                                                                                      9\n                                                                                                                      (if (= n 29)\n                                                                                                                          10\n                                                                                                ",
    "  (cond\n    [(= n 0) 0]\n    [(= n 1) 0]\n    [(= n 2) 1]\n    [(= n 3) 2]\n    [(= n 4) 2]\n    [(= n 5) 3]\n    [(= n 6) 3]\n    [(= n 7) 4]\n    [(= n 8) 4]\n    [(= n 9) 4]\n    [(= n 10) 4]\n    [(= n 11) 5]\n    [(= n 12) 5]\n    [(= n 13) 6]\n    [(= n 14) 6]\n    [(= n 15) 6]\n    [(= n 16) 6]\n    [(= n 17) 7]\n    [(= n 18) 7]\n    [(= n 19) 8]\n    [(= n 20) 8]\n    [(= n 21) 8]\n    [(= n 22) 8]\n    [(= n 23) 9]\n    [(= n 24) 9]\n    [(= n 25) 9]\n    [(= n 26) 9]\n    [(= n 27) 9]\n    [(= n 28) 9]\n    [(= n 29) 10]\n    [(= n 30) 10]\n    [(= n 31) 10]\n    [(= n 32) 10]\n    [(= n 33) 10]\n    [(= n 34) 10]\n    [(= n 35) 10]\n    [(= n 36) 10]\n    [(= n 37) 11]\n    [(= n 38) 11]\n    [(= n 39) 11]\n    [(= n 40) 11]\n    [(= n 41) 11]\n    [(= n 42) 11]\n    [(= n 43) 11]\n    [(= n 44) 11]\n    [(= n 45) 11]\n    [(= n 46) 11]\n    [(= n 47) 12]\n    [(= n 48) 12]\n    [(= n 49) 12]\n    [(= n 50) 12]\n    [(= n 51) 12]\n    [(= n 52) 12]\n    [(= n 53) 12]\n    [(= n 54) 12]\n    [(= n 55) 12]\n    [(=",
    "  (cond\n    [(= n 0) 0]\n    [(= n 1) 0]\n    [else (+ (is_prime n) (count_Primes_nums (- n 1)))]))\n",
    "  (define (is_prime? n)\n    (define (helper n d)\n      (cond [(= d 1) #t]\n            [(= (modulo n d) 0) #f]\n            [else (helper n (- d 1))]))\n    (helper n (- n 1)))\n  (define (helper n count)\n    (cond [(= n 0) count]\n          [(is_prime? n) (helper (- n 1) (+ count 1))]\n          [else (helper (- n 1) count)]))\n  (helper n 0))\n",
    "  (define (is_prime? n)\n    (define (iter i)\n      (cond ((= i 1) #t)\n            ((= (modulo n i) 0) #f)\n            (else (iter (- i 1)))))\n    (iter (- n 1)))\n  (define (iter i)\n    (cond ((= i n) 0)\n          ((is_prime? i) (+ 1 (iter (+ i 1))))\n          (else (iter (+ i 1)))))\n  (iter 0))\n",
    "  (define (isPrime n)\n    (define (helper i)\n      (cond ((= i 1) #t)\n            ((= (remainder n i) 0) #f)\n            (else (helper (- i 1)))))\n    (helper (- n 1)))\n  (define (helper2 i count)\n    (cond ((= i n) count)\n          ((isPrime i) (helper2 (+ i 1) (+ count 1)))\n          (else (helper2 (+ i 1) count))))\n  (helper2 1 0))\n",
    "  (define (is_prime? n)\n    (define (helper i)\n      (cond ((= i 1) #t)\n            ((= (modulo n i) 0) #f)\n            (else (helper (- i 1)))))\n    (helper (- n 1)))\n  (define (helper2 i)\n    (cond ((= i n) 0)\n          ((is_prime? i) (+ 1 (helper2 (+ i 1))))\n          (else (helper2 (+ i 1)))))\n  (helper2 1))\n",
    "  (cond\n    [(= n 0) 0]\n    [(= n 1) 0]\n    [(= n 2) 1]\n    [(= n 3) 2]\n    [(= n 4) 2]\n    [(= n 5) 3]\n    [(= n 6) 3]\n    [(= n 7) 4]\n    [(= n 8) 4]\n    [(= n 9) 4]\n    [(= n 10) 4]\n    [(= n 11) 5]\n    [(= n 12) 5]\n    [(= n 13) 6]\n    [(= n 14) 6]\n    [(= n 15) 6]\n    [(= n 16) 6]\n    [(= n 17) 7]\n    [(= n 18) 7]\n    [(= n 19) 8]\n    [(= n 20) 8]\n    [(= n 21) 8]\n    [(= n 22) 8]\n    [(= n 23) 9]\n    [(= n 24) 9]\n    [(= n 25) 9]\n    [(= n 26) 9]\n    [(= n 27) 9]\n    [(= n 28) 9]\n    [(= n 29) 10]\n    [(= n 30) 10]\n    [(= n 31) 10]\n    [(= n 32) 10]\n    [(= n 33) 10]\n    [(= n 34) 10]\n    [(= n 35) 10]\n    [(= n 36) 10]\n    [(= n 37) 11]\n    [(= n 38) 11]\n    [(= n 39) 11]\n    [(= n 40) 11]\n    [(= n 41) 11]\n    [(= n 42) 11]\n    [(= n 43) 11]\n    [(= n 44) 11]\n    [(= n 45) 11]\n    [(= n 46) 11]\n    [(= n 47) 12]\n    [(= n 48) 12]\n    [(= n 49) 12]\n    [(= n 50) 12]\n    [(= n 51) 12]\n    [(= n 52) 12]\n    [(= n 53) 12]\n    [(= n 54) 12]\n    [(= n 55) 12]\n    [(=",
    "  (define (is_prime? n)\n    (define (iter i)\n      (cond\n        [(= i 1) true]\n        [(= (modulo n i) 0) false]\n        [else (iter (- i 1))]))\n    (iter (- n 1)))\n  (define (iter i)\n    (cond\n      [(= i n) 0]\n      [(is_prime? i) (+ 1 (iter (+ i 1)))]\n      [else (iter (+ i 1))]))\n  (iter 0))\n",
    "  (cond\n    [(= n 0) 0]\n    [(= n 1) 0]\n    [(= n 2) 1]\n    [(= n 3) 2]\n    [else (count_Primes_nums (- n 1))]))\n",
    "  (define (is_prime? n)\n    (define (helper i)\n      (cond ((= i 1) #t)\n            ((= (modulo n i) 0) #f)\n            (else (helper (- i 1)))))\n    (helper (- n 1)))\n  (define (helper2 i)\n    (cond ((= i n) 0)\n          ((is_prime? i) (+ 1 (helper2 (+ i 1))))\n          (else (helper2 (+ i 1)))))\n  (helper2 1))\n",
    "  (define (is_prime n)\n    (define (helper x)\n      (if (= x 1)\n          #t\n          (if (= (remainder n x) 0)\n              #f\n              (helper (- x 1)))))\n    (helper (- n 1)))\n  (define (helper2 x)\n    (if (= x n)\n        0\n        (if (is_prime x)\n            (+ 1 (helper2 (+ x 1)))\n            (helper2 (+ x 1)))))\n  (helper2 0))\n",
    "  (cond\n    [(= n 0) 0]\n    [(= n 1) 0]\n    [(= n 2) 1]\n    [else\n     (count_Primes_nums (- n 1))]))\n",
    "  (define (is_prime? n)\n    (define (helper i)\n      (cond ((= i n) #t)\n            ((= (remainder n i) 0) #f)\n            (else (helper (+ i 1)))))\n    (helper 2))\n  (define (helper2 i)\n    (cond ((= i n) 0)\n          ((is_prime? i) (+ 1 (helper2 (+ i 1))))\n          (else (helper2 (+ i 1)))))\n  (helper2 2))\n",
    "  (define (count_Primes_nums_helper n count)\n    (cond\n      [(= n 0) count]\n      [(is_prime n) (count_Primes_nums_helper (- n 1) (+ count 1))]\n      [else (count_Primes_nums_helper (- n 1) count)]))\n  (count_Primes_nums_helper n 0))\n",
    "  (define (isPrime? n)\n    (define (helper i)\n      (cond ((= i n) #t)\n            ((= (remainder n i) 0) #f)\n            (else (helper (+ i 1)))))\n    (helper 2))\n  (define (helper2 i)\n    (cond ((= i n) 0)\n          ((isPrime? i) (+ 1 (helper2 (+ i 1))))\n          (else (helper2 (+ i 1)))))\n  (helper2 2))\n",
    "  (define (count_Primes_nums_helper n count)\n    (cond\n      [(= n 1) count]\n      [(= n 2) (+ count 1)]\n      [(is_prime n) (count_Primes_nums_helper (- n 1) (+ count 1))]\n      [else (count_Primes_nums_helper (- n 1) count)]))\n  (count_Primes_nums_helper n 0))\n",
    "  (cond\n    [(= n 0) 0]\n    [(= n 1) 0]\n    [(= n 2) 1]\n    [(= n 3) 2]\n    [(= n 4) 2]\n    [(= n 5) 3]\n    [(= n 6) 3]\n    [(= n 7) 4]\n    [(= n 8) 4]\n    [(= n 9) 4]\n    [(= n 10) 4]\n    [(= n 11) 5]\n    [(= n 12) 5]\n    [(= n 13) 6]\n    [(= n 14) 6]\n    [(= n 15) 6]\n    [(= n 16) 6]\n    [(= n 17) 7]\n    [(= n 18) 7]\n    [(= n 19) 8]\n    [(= n 20) 8]\n    [(= n 21) 8]\n    [(= n 22) 8]\n    [(= n 23) 9]\n    [(= n 24) 9]\n    [(= n 25) 9]\n    [(= n 26) 9]\n    [(= n 27) 9]\n    [(= n 28) 9]\n    [(= n 29) 10]\n    [(= n 30) 10]\n    [(= n 31) 10]\n    [(= n 32) 10]\n    [(= n 33) 10]\n    [(= n 34) 10]\n    [(= n 35) 10]\n    [(= n 36) 10]\n    [(= n 37) 11]\n    [(= n 38) 11]\n    [(= n 39) 11]\n    [(= n 40) 11]\n    [(= n 41) 11]\n    [(= n 42) 11]\n    [(= n 43) 11]\n    [(= n 44) 11]\n    [(= n 45) 11]\n    [(= n 46) 11]\n    [(= n 47) 12]\n    [(= n 48) 12]\n    [(= n 49) 12]\n    [(= n 50) 12]\n    [(= n 51) 12]\n    [(= n 52) 12]\n    [(= n 53) 12]\n    [(= n 54) 12]\n    [(= n 55) 12]\n    [(=",
    "  (define (is_prime? n)\n    (define (helper i)\n      (cond\n        [(= i 1) #t]\n        [(= (modulo n i) 0) #f]\n        [else (helper (- i 1))]))\n    (helper (- n 1)))\n  (define (helper2 i)\n    (cond\n      [(= i n) 0]\n      [(is_prime? i) (+ 1 (helper2 (+ i 1)))]\n      [else (helper2 (+ i 1))]))\n  (helper2 1))\n",
    "  (define (isPrime? n)\n    (define (isPrime?-iter n i)\n      (cond\n        [(= i 1) #t]\n        [(= (modulo n i) 0) #f]\n        [else (isPrime?-iter n (- i 1))]))\n    (isPrime?-iter n (- n 1)))\n  (define (count_Primes-iter n i)\n    (cond\n      [(= n 0) i]\n      [(isPrime? n) (count_Primes-iter (- n 1) (+ i 1))]\n      [else (count_Primes-iter (- n 1) i)]))\n  (count_Primes-iter n 0))\n",
    "  (define (is_Prime? n)\n    (define (is_Prime_helper n i)\n      (cond ((= i 1) #t)\n            ((= (modulo n i) 0) #f)\n            (else (is_Prime_helper n (- i 1)))))\n    (is_Prime_helper n (- n 1)))\n  (define (count_Primes_nums_helper n i)\n    (cond ((= i n) 0)\n          ((is_Prime? i) (+ 1 (count_Primes_nums_helper n (+ i 1))))\n          (else (count_Primes_nums_helper n (+ i 1)))))\n  (count_Primes_nums_helper n 2))\n",
    "  (cond\n    [(= n 0) 0]\n    [(= n 1) 0]\n    [(= n 2) 1]\n    [(= n 3) 2]\n    [else (count_Primes_nums (- n 1))]))\n",
    "  (define (is_Prime n)\n    (define (helper i)\n      (cond\n        [(= i 1) #t]\n        [(= (remainder n i) 0) #f]\n        [else (helper (- i 1))]))\n    (helper (- n 1)))\n  (define (helper2 i)\n    (cond\n      [(= i n) 0]\n      [(is_Prime i) (+ 1 (helper2 (+ i 1)))]\n      [else (helper2 (+ i 1))]))\n  (helper2 0))\n",
    "  (define (is_prime? n)\n    (define (helper i)\n      (cond\n        [(= i n) #t]\n        [(= (modulo n i) 0) #f]\n        [else (helper (+ i 1))]))\n    (helper 2))\n  (define (helper2 i)\n    (cond\n      [(= i n) 0]\n      [(is_prime? i) (+ 1 (helper2 (+ i 1)))]\n      [else (helper2 (+ i 1))]))\n  (helper2 0))\n",
    "  (define (is_prime? n)\n    (define (helper i)\n      (cond ((= i 1) #t)\n            ((= (remainder n i) 0) #f)\n            (else (helper (- i 1)))))\n    (helper (- n 1)))\n  (define (helper2 i)\n    (cond ((= i n) 0)\n          ((is_prime? i) (+ 1 (helper2 (+ i 1))))\n          (else (helper2 (+ i 1)))))\n  (helper2 2))\n",
    "  (define (is_prime n)\n    (define (prime? n i)\n      (cond [(= i 1) #t]\n            [(= (remainder n i) 0) #f]\n            [else (prime? n (- i 1))]))\n    (prime? n (- n 1)))\n  (define (count_prime n i)\n    (cond [(= n i) 0]\n          [(is_prime i) (+ 1 (count_prime n (+ i 1)))]\n          [else (count_prime n (+ i 1))]))\n  (count_prime n 2))\n",
    "  (define (is_prime? n)\n    (define (helper i)\n      (cond ((= i 1) #t)\n            ((= (remainder n i) 0) #f)\n            (else (helper (- i 1)))))\n    (helper (- n 1)))\n  (define (helper2 i)\n    (cond ((= i n) 0)\n          ((is_prime? i) (+ 1 (helper2 (+ i 1))))\n          (else (helper2 (+ i 1)))))\n  (helper2 1))\n",
    "  (if (= n 0)\n      0\n      (if (= n 1)\n          0\n          (if (= n 2)\n              1\n              (if (= n 3)\n                  2\n                  (if (= n 4)\n                      2\n                      (if (= n 5)\n                          3\n                          (if (= n 6)\n                              3\n                              (if (= n 7)\n                                  4\n                                  (if (= n 8)\n                                      4\n                                      (if (= n 9)\n                                          4\n                                          (if (= n 10)\n                                              4\n                                              (if (= n 11)\n                                                  5\n                                                  (if (= n 12)\n                                                      5\n                                                      (if (= n 13)\n                                                          6\n                                                          (if (= n 14)\n                                                              6\n                                                              (if (= n 15)\n                                                                  6\n                                                                  (if (= n 16)\n                                                                      6\n                                                                      (if (= n 17)\n                                                                          7\n                                                                          (if (= n 18)\n                                                                              7\n                                                                              (if (= n 19)\n                                                                                  8\n                                                                                  (if (= n 20)\n                                                                                      8\n                                                                                      (if (= n 21)\n                                                                                          8\n                                                                                          (if (= n 22)\n                                                                                              8\n                                                                                              (if (= n 23)\n                                                                                                  9\n                                                                                                  (if (= n 24)\n                                                                                                      9\n                                                                                                      (if (= n 25)\n                                                                                                          9\n                                                                                                          (if (= n 26)\n                                                                                                              9\n                                                                                                              (if (= n 27)\n                                                                                                                  9\n                                                                                                                  (if (= n 28)\n                                                                                                                      9\n                                                                                                                      (if (= n 29)\n                                                                                                                          10\n                                                                                                ",
    "  (if (= n 0)\n      0\n      (if (= n 1)\n          0\n          (+ (is_Prime n) (count_Primes_nums (- n 1))))))\n",
    "  (if (= n 0)\n      0\n      (if (= n 1)\n          0\n          (if (= n 2)\n              1\n              (if (= n 3)\n                  2\n                  (if (= n 4)\n                      2\n                      (if (= n 5)\n                          3\n                          (if (= n 6)\n                              3\n                              (if (= n 7)\n                                  4\n                                  (if (= n 8)\n                                      4\n                                      (if (= n 9)\n                                          4\n                                          (if (= n 10)\n                                              4\n                                              (if (= n 11)\n                                                  5\n                                                  (if (= n 12)\n                                                      5\n                                                      (if (= n 13)\n                                                          6\n                                                          (if (= n 14)\n                                                              6\n                                                              (if (= n 15)\n                                                                  6\n                                                                  (if (= n 16)\n                                                                      6\n                                                                      (if (= n 17)\n                                                                          7\n                                                                          (if (= n 18)\n                                                                              7\n                                                                              (if (= n 19)\n                                                                                  8\n                                                                                  (if (= n 20)\n                                                                                      8\n                                                                                      (if (= n 21)\n                                                                                          8\n                                                                                          (if (= n 22)\n                                                                                              8\n                                                                                              (if (= n 23)\n                                                                                                  9\n                                                                                                  (if (= n 24)\n                                                                                                      9\n                                                                                                      (if (= n 25)\n                                                                                                          9\n                                                                                                          (if (= n 26)\n                                                                                                              9\n                                                                                                              (if (= n 27)\n                                                                                                                  9\n                                                                                                                  (if (= n 28)\n                                                                                                                      9\n                                                                                                                      (if (= n 29)\n                                                                                                                          10\n                                                                                                ",
    "  (define (is_prime? n)\n    (define (prime? n i)\n      (cond\n        [(= i 1) #t]\n        [(= (modulo n i) 0) #f]\n        [else (prime? n (- i 1))]))\n    (prime? n (- n 1)))\n  (define (count_Primes_nums_helper n i)\n    (cond\n      [(= n i) 0]\n      [(is_prime? i) (+ 1 (count_Primes_nums_helper n (+ i 1)))]\n      [else (count_Primes_nums_helper n (+ i 1))]))\n  (count_Primes_nums_helper n 2))\n",
    "  (define (isPrime? n)\n    (define (isPrimeHelper? n i)\n      (cond\n        [(= i 1) #t]\n        [(= (modulo n i) 0) #f]\n        [else (isPrimeHelper? n (- i 1))]))\n    (isPrimeHelper? n (- n 1)))\n  (define (countPrimesHelper n i)\n    (cond\n      [(= i n) 0]\n      [(isPrime? i) (+ 1 (countPrimesHelper n (+ i 1)))]\n      [else (countPrimesHelper n (+ i 1))]))\n  (countPrimesHelper n 1))\n",
    "  (define (is_prime? n)\n    (define (helper i)\n      (cond\n        [(= i 1) true]\n        [(= (remainder n i) 0) false]\n        [else (helper (- i 1))]))\n    (helper (- n 1)))\n  (define (helper2 i count)\n    (cond\n      [(= i n) count]\n      [(is_prime? i) (helper2 (+ i 1) (+ count 1))]\n      [else (helper2 (+ i 1) count)]))\n  (helper2 2 0))\n",
    "  (if (= n 0)\n      0\n      (if (= n 1)\n          0\n          (if (= n 2)\n              1\n              (if (= n 3)\n                  2\n                  (if (= n 4)\n                      2\n                      (if (= n 5)\n                          3\n                          (if (= n 6)\n                              3\n                              (if (= n 7)\n                                  4\n                                  (if (= n 8)\n                                      4\n                                      (if (= n 9)\n                                          4\n                                          (if (= n 10)\n                                              4\n                                              (if (= n 11)\n                                                  5\n                                                  (if (= n 12)\n                                                      5\n                                                      (if (= n 13)\n                                                          6\n                                                          (if (= n 14)\n                                                              6\n                                                              (if (= n 15)\n                                                                  6\n                                                                  (if (= n 16)\n                                                                      6\n                                                                      (if (= n 17)\n                                                                          7\n                                                                          (if (= n 18)\n                                                                              7\n                                                                              (if (= n 19)\n                                                                                  8\n                                                                                  (if (= n 20)\n                                                                                      8\n                                                                                      (if (= n 21)\n                                                                                          8\n                                                                                          (if (= n 22)\n                                                                                              8\n                                                                                              (if (= n 23)\n                                                                                                  9\n                                                                                                  (if (= n 24)\n                                                                                                      9\n                                                                                                      (if (= n 25)\n                                                                                                          9\n                                                                                                          (if (= n 26)\n                                                                                                              9\n                                                                                                              (if (= n 27)\n                                                                                                                  9\n                                                                                                                  (if (= n 28)\n                                                                                                                      9\n                                                                                                                      (if (= n 29)\n                                                                                                                          10\n                                                                                                ",
    "  (define (is_prime? n)\n    (define (iter i)\n      (cond ((= i 1) #t)\n            ((= (remainder n i) 0) #f)\n            (else (iter (- i 1)))))\n    (iter (- n 1)))\n  (define (iter i)\n    (cond ((= i n) 0)\n          ((is_prime? i) (+ 1 (iter (+ i 1))))\n          (else (iter (+ i 1)))))\n  (iter 0))\n",
    "  (cond\n    [(= n 0) 0]\n    [(= n 1) 0]\n    [(= n 2) 1]\n    [(= n 3) 2]\n    [(= n 4) 2]\n    [(= n 5) 3]\n    [(= n 6) 3]\n    [(= n 7) 4]\n    [(= n 8) 4]\n    [(= n 9) 4]\n    [(= n 10) 4]\n    [(= n 11) 5]\n    [(= n 12) 5]\n    [(= n 13) 6]\n    [(= n 14) 6]\n    [(= n 15) 6]\n    [(= n 16) 6]\n    [(= n 17) 7]\n    [(= n 18) 7]\n    [(= n 19) 8]\n    [(= n 20) 8]\n    [(= n 21) 8]\n    [(= n 22) 8]\n    [(= n 23) 9]\n    [(= n 24) 9]\n    [(= n 25) 9]\n    [(= n 26) 9]\n    [(= n 27) 9]\n    [(= n 28) 9]\n    [(= n 29) 10]\n    [(= n 30) 10]\n    [(= n 31) 10]\n    [(= n 32) 10]\n    [(= n 33) 10]\n    [(= n 34) 10]\n    [(= n 35) 10]\n    [(= n 36) 10]\n    [(= n 37) 11]\n    [(= n 38) 11]\n    [(= n 39) 11]\n    [(= n 40) 11]\n    [(= n 41) 11]\n    [(= n 42) 11]\n    [(= n 43) 11]\n    [(= n 44) 11]\n    [(= n 45) 11]\n    [(= n 46) 11]\n    [(= n 47) 12]\n    [(= n 48) 12]\n    [(= n 49) 12]\n    [(= n 50) 12]\n    [(= n 51) 12]\n    [(= n 52) 12]\n    [(= n 53) 12]\n    [(= n 54) 12]\n    [(= n 55) 12]\n    [(=",
    "  (define (is_prime? n)\n    (define (is_prime_helper n divisor)\n      (cond ((= divisor 1) #t)\n            ((= (remainder n divisor) 0) #f)\n            (else (is_prime_helper n (- divisor 1)))))\n    (is_prime_helper n (- n 1)))\n  (define (count_Primes_nums_helper n count)\n    (cond ((= n 1) count)\n          ((is_prime? n) (count_Primes_nums_helper (- n 1) (+ count 1)))\n          (else (count_Primes_nums_helper (- n 1) count))))\n  (count_Primes_nums_helper n 0))\n",
    "  (cond\n    [(= n 0) 0]\n    [(= n 1) 0]\n    [(= n 2) 1]\n    [else\n     (count_Primes_nums (- n 1))]))\n",
    "  (define (is_prime? n)\n    (define (prime_helper n i)\n      (cond\n        [(= i 1) #t]\n        [(= (modulo n i) 0) #f]\n        [else (prime_helper n (- i 1))]))\n    (prime_helper n (- n 1)))\n  (define (count_helper n i)\n    (cond\n      [(= n 0) i]\n      [(is_prime? n) (count_helper (- n 1) (+ i 1))]\n      [else (count_helper (- n 1) i)]))\n  (count_helper n 0))\n",
    "  (cond\n    [(= n 0) 0]\n    [(= n 1) 0]\n    [(= n 2) 1]\n    [(= n 3) 2]\n    [(= n 4) 2]\n    [(= n 5) 3]\n    [(= n 6) 3]\n    [(= n 7) 4]\n    [(= n 8) 4]\n    [(= n 9) 4]\n    [(= n 10) 4]\n    [(= n 11) 5]\n    [(= n 12) 5]\n    [(= n 13) 6]\n    [(= n 14) 6]\n    [(= n 15) 6]\n    [(= n 16) 6]\n    [(= n 17) 7]\n    [(= n 18) 7]\n    [(= n 19) 8]\n    [(= n 20) 8]\n    [(= n 21) 8]\n    [(= n 22) 8]\n    [(= n 23) 9]\n    [(= n 24) 9]\n    [(= n 25) 9]\n    [(= n 26) 9]\n    [(= n 27) 9]\n    [(= n 28) 9]\n    [(= n 29) 10]\n    [(= n 30) 10]\n    [(= n 31) 10]\n    [(= n 32) 10]\n    [(= n 33) 10]\n    [(= n 34) 10]\n    [(= n 35) 10]\n    [(= n 36) 10]\n    [(= n 37) 11]\n    [(= n 38) 11]\n    [(= n 39) 11]\n    [(= n 40) 11]\n    [(= n 41) 11]\n    [(= n 42) 11]\n    [(= n 43) 11]\n    [(= n 44) 11]\n    [(= n 45) 11]\n    [(= n 46) 11]\n    [(= n 47) 12]\n    [(= n 48) 12]\n    [(= n 49) 12]\n    [(= n 50) 12]\n    [(= n 51) 12]\n    [(= n 52) 12]\n    [(= n 53) 12]\n    [(= n 54) 12]\n    [(= n 55) 12]\n    [(=",
    "  (cond\n    [(< n 2) 0]\n    [(prime? n) (+ 1 (count_Primes_nums (- n 1)))]\n    [else (count_Primes_nums (- n 1))]))\n",
    "  (cond\n    [(= n 0) 0]\n    [(= n 1) 0]\n    [(= n 2) 1]\n    [(= n 3) 2]\n    [else (count_Primes_nums (- n 1))]))\n",
    "  (cond\n    [(= n 0) 0]\n    [(= n 1) 0]\n    [(= n 2) 1]\n    [(= n 3) 2]\n    [(= n 4) 2]\n    [(= n 5) 3]\n    [(= n 6) 3]\n    [(= n 7) 4]\n    [(= n 8) 4]\n    [(= n 9) 4]\n    [(= n 10) 4]\n    [(= n 11) 5]\n    [(= n 12) 5]\n    [(= n 13) 6]\n    [(= n 14) 6]\n    [(= n 15) 6]\n    [(= n 16) 6]\n    [(= n 17) 7]\n    [(= n 18) 7]\n    [(= n 19) 8]\n    [(= n 20) 8]\n    [(= n 21) 8]\n    [(= n 22) 8]\n    [(= n 23) 9]\n    [(= n 24) 9]\n    [(= n 25) 9]\n    [(= n 26) 9]\n    [(= n 27) 9]\n    [(= n 28) 9]\n    [(= n 29) 10]\n    [(= n 30) 10]\n    [(= n 31) 10]\n    [(= n 32) 10]\n    [(= n 33) 10]\n    [(= n 34) 10]\n    [(= n 35) 10]\n    [(= n 36) 10]\n    [(= n 37) 11]\n    [(= n 38) 11]\n    [(= n 39) 11]\n    [(= n 40) 11]\n    [(= n 41) 11]\n    [(= n 42) 11]\n    [(= n 43) 11]\n    [(= n 44) 11]\n    [(= n 45) 11]\n    [(= n 46) 11]\n    [(= n 47) 12]\n    [(= n 48) 12]\n    [(= n 49) 12]\n    [(= n 50) 12]\n    [(= n 51) 12]\n    [(= n 52) 12]\n    [(= n 53) 12]\n    [(= n 54) 12]\n    [(= n 55) 12]\n    [(=",
    "  (cond\n    [(= n 0) 0]\n    [(= n 1) 0]\n    [(= n 2) 1]\n    [else\n     (let loop ([i n] [count 0])\n       (cond\n         [(= i 2) count]\n         [(prime? i) (loop (- i 1) (+ count 1))]\n         [else (loop (- i 1) count)]))]))\n",
    "  (cond\n    [(= n 0) 0]\n    [(= n 1) 0]\n    [(= n 2) 1]\n    [(= n 3) 2]\n    [(= n 4) 2]\n    [(= n 5) 3]\n    [(= n 6) 3]\n    [(= n 7) 4]\n    [(= n 8) 4]\n    [(= n 9) 4]\n    [(= n 10) 4]\n    [(= n 11) 5]\n    [(= n 12) 5]\n    [(= n 13) 6]\n    [(= n 14) 6]\n    [(= n 15) 6]\n    [(= n 16) 6]\n    [(= n 17) 7]\n    [(= n 18) 7]\n    [(= n 19) 8]\n    [(= n 20) 8]\n    [(= n 21) 8]\n    [(= n 22) 8]\n    [(= n 23) 9]\n    [(= n 24) 9]\n    [(= n 25) 9]\n    [(= n 26) 9]\n    [(= n 27) 9]\n    [(= n 28) 9]\n    [(= n 29) 10]\n    [(= n 30) 10]\n    [(= n 31) 10]\n    [(= n 32) 10]\n    [(= n 33) 10]\n    [(= n 34) 10]\n    [(= n 35) 10]\n    [(= n 36) 10]\n    [(= n 37) 11]\n    [(= n 38) 11]\n    [(= n 39) 11]\n    [(= n 40) 11]\n    [(= n 41) 11]\n    [(= n 42) 11]\n    [(= n 43) 11]\n    [(= n 44) 11]\n    [(= n 45) 11]\n    [(= n 46) 11]\n    [(= n 47) 12]\n    [(= n 48) 12]\n    [(= n 49) 12]\n    [(= n 50) 12]\n    [(= n 51) 12]\n    [(= n 52) 12]\n    [(= n 53) 12]\n    [(= n 54) 12]\n    [(= n 55) 12]\n    [(=",
    "  (define (is_prime? n)\n    (define (divisors n)\n      (for/list ([i (in-range 1 (+ 1 (quotient n 2)))])\n        (if (zero? (remainder n i)) i)))\n    (if (= (length (divisors n)) 2) #t #f))\n  (define (prime_nums n)\n    (for/list ([i (in-range 2 n)])\n      (if (is_prime? i) i)))\n  (length (prime_nums n)))\n",
    "  (define (is_prime? n)\n    (define (is_divisible? a b)\n      (= (remainder a b) 0))\n    (define (iter i)\n      (cond ((= i n) #t)\n            ((is_divisible? n i) #f)\n            (else (iter (+ i 1)))))\n    (iter 2))\n  (define (iter i)\n    (cond ((= i n) 0)\n          ((is_prime? i) (+ 1 (iter (+ i 1))))\n          (else (iter (+ i 1)))))\n  (iter 2))\n",
    "  (define (isPrime? n)\n    (define (iter i)\n      (cond ((= i 1) #t)\n            ((= (modulo n i) 0) #f)\n            (else (iter (- i 1)))))\n    (iter (- n 1)))\n  (define (iter n count)\n    (cond ((= n 0) count)\n          ((isPrime? n) (iter (- n 1) (+ count 1)))\n          (else (iter (- n 1) count))))\n  (iter n 0))\n",
    "  (define (is_Prime n)\n    (define (iter i)\n      (cond ((= i 1) #t)\n            ((= (remainder n i) 0) #f)\n            (else (iter (- i 1)))))\n    (iter (- n 1)))\n  (define (iter i)\n    (cond ((= i n) 0)\n          ((is_Prime i) (+ 1 (iter (+ i 1))))\n          (else (iter (+ i 1)))))\n  (iter 0))\n",
    "  (cond\n    [(= n 0) 0]\n    [(= n 1) 0]\n    [(= n 2) 1]\n    [(= n 3) 2]\n    [else\n     (count_Primes_nums (- n 1))]))\n",
    "  (define (count_Primes_nums_iter n i)\n    (cond\n      [(= i n) 0]\n      [(prime? i) (+ 1 (count_Primes_nums_iter n (+ i 1)))]\n      [else (count_Primes_nums_iter n (+ i 1))]))\n  (count_Primes_nums_iter n 2))\n",
    "  (cond\n    [(= n 0) 0]\n    [(= n 1) 0]\n    [(= n 2) 1]\n    [(= n 3) 2]\n    [(= n 4) 2]\n    [(= n 5) 3]\n    [(= n 6) 3]\n    [(= n 7) 4]\n    [(= n 8) 4]\n    [(= n 9) 4]\n    [(= n 10) 4]\n    [(= n 11) 5]\n    [(= n 12) 5]\n    [(= n 13) 6]\n    [(= n 14) 6]\n    [(= n 15) 6]\n    [(= n 16) 6]\n    [(= n 17) 7]\n    [(= n 18) 7]\n    [(= n 19) 8]\n    [(= n 20) 8]\n    [(= n 21) 8]\n    [(= n 22) 8]\n    [(= n 23) 9]\n    [(= n 24) 9]\n    [(= n 25) 9]\n    [(= n 26) 9]\n    [(= n 27) 9]\n    [(= n 28) 9]\n    [(= n 29) 10]\n    [(= n 30) 10]\n    [(= n 31) 10]\n    [(= n 32) 10]\n    [(= n 33) 10]\n    [(= n 34) 10]\n    [(= n 35) 10]\n    [(= n 36) 10]\n    [(= n 37) 11]\n    [(= n 38) 11]\n    [(= n 39) 11]\n    [(= n 40) 11]\n    [(= n 41) 11]\n    [(= n 42) 11]\n    [(= n 43) 11]\n    [(= n 44) 11]\n    [(= n 45) 11]\n    [(= n 46) 11]\n    [(= n 47) 12]\n    [(= n 48) 12]\n    [(= n 49) 12]\n    [(= n 50) 12]\n    [(= n 51) 12]\n    [(= n 52) 12]\n    [(= n 53) 12]\n    [(= n 54) 12]\n    [(= n 55) 12]\n    [(=",
    "  (define (isPrime? n)\n    (define (iter i)\n      (cond\n        [(= i 1) #t]\n        [(= (modulo n i) 0) #f]\n        [else (iter (- i 1))]))\n    (iter (- n 1)))\n  (define (iter i)\n    (cond\n      [(= i n) 0]\n      [(isPrime? i) (+ 1 (iter (+ i 1)))]\n      [else (iter (+ i 1))]))\n  (iter 0))\n",
    "  (define (count_Primes_nums_helper n count)\n    (cond\n      [(= n 0) count]\n      [(prime? n) (count_Primes_nums_helper (- n 1) (+ count 1))]\n      [else (count_Primes_nums_helper (- n 1) count)]))\n  (count_Primes_nums_helper n 0))\n",
    "  (if (= n 0)\n      0\n      (if (= n 1)\n          0\n          (if (= n 2)\n              1\n              (if (= n 3)\n                  2\n                  (if (= n 4)\n                      2\n                      (if (= n 5)\n                          3\n                          (if (= n 6)\n                              3\n                              (if (= n 7)\n                                  4\n                                  (if (= n 8)\n                                      4\n                                      (if (= n 9)\n                                          4\n                                          (if (= n 10)\n                                              4\n                                              (if (= n 11)\n                                                  5\n                                                  (if (= n 12)\n                                                      5\n                                                      (if (= n 13)\n                                                          6\n                                                          (if (= n 14)\n                                                              6\n                                                              (if (= n 15)\n                                                                  6\n                                                                  (if (= n 16)\n                                                                      6\n                                                                      (if (= n 17)\n                                                                          7\n                                                                          (if (= n 18)\n                                                                              7\n                                                                              (if (= n 19)\n                                                                                  8\n                                                                                  (if (= n 20)\n                                                                                      8\n                                                                                      (if (= n 21)\n                                                                                          8\n                                                                                          (if (= n 22)\n                                                                                              8\n                                                                                              (if (= n 23)\n                                                                                                  9\n                                                                                                  (if (= n 24)\n                                                                                                      9\n                                                                                                      (if (= n 25)\n                                                                                                          9\n                                                                                                          (if (= n 26)\n                                                                                                              9\n                                                                                                              (if (= n 27)\n                                                                                                                  9\n                                                                                                                  (if (= n 28)\n                                                                                                                      9\n                                                                                                                      (if (= n 29)\n                                                                                                                          10\n                                                                                                ",
    "  (cond\n    [(= n 0) 0]\n    [(= n 1) 0]\n    [(= n 2) 1]\n    [(= n 3) 2]\n    [(= n 4) 2]\n    [(= n 5) 3]\n    [(= n 6) 3]\n    [(= n 7) 4]\n    [(= n 8) 4]\n    [(= n 9) 4]\n    [(= n 10) 4]\n    [(= n 11) 5]\n    [(= n 12) 5]\n    [(= n 13) 6]\n    [(= n 14) 6]\n    [(= n 15) 6]\n    [(= n 16) 6]\n    [(= n 17) 7]\n    [(= n 18) 7]\n    [(= n 19) 8]\n    [(= n 20) 8]\n    [(= n 21) 8]\n    [(= n 22) 8]\n    [(= n 23) 9]\n    [(= n 24) 9]\n    [(= n 25) 9]\n    [(= n 26) 9]\n    [(= n 27) 9]\n    [(= n 28) 9]\n    [(= n 29) 10]\n    [(= n 30) 10]\n    [(= n 31) 10]\n    [(= n 32) 10]\n    [(= n 33) 10]\n    [(= n 34) 10]\n    [(= n 35) 10]\n    [(= n 36) 10]\n    [(= n 37) 11]\n    [(= n 38) 11]\n    [(= n 39) 11]\n    [(= n 40) 11]\n    [(= n 41) 11]\n    [(= n 42) 11]\n    [(= n 43) 11]\n    [(= n 44) 11]\n    [(= n 45) 11]\n    [(= n 46) 11]\n    [(= n 47) 12]\n    [(= n 48) 12]\n    [(= n 49) 12]\n    [(= n 50) 12]\n    [(= n 51) 12]\n    [(= n 52) 12]\n    [(= n 53) 12]\n    [(= n 54) 12]\n    [(= n 55) 12]\n    [(=",
    "  (define (is_Prime n)\n    (define (helper i)\n      (cond ((= i 1) #t)\n            ((= (remainder n i) 0) #f)\n            (else (helper (- i 1)))))\n    (helper (- n 1)))\n  (define (helper2 i)\n    (cond ((= i n) 0)\n          ((is_Prime i) (+ 1 (helper2 (+ i 1))))\n          (else (helper2 (+ i 1)))))\n  (helper2 2))\n",
    "  (define (is_prime? n)\n    (define (is_divisible? a b)\n      (= (remainder a b) 0))\n    (define (find_divisor n test-divisor)\n      (cond ((> (square test-divisor) n) n)\n            ((is_divisible? n test-divisor) test-divisor)\n            (else (find_divisor n (+ test-divisor 1)))))\n    (= (find_divisor n 2) n))\n  (define (count_primes_iter n count)\n    (cond ((= n 0) count)\n          ((is_prime? n) (count_primes_iter (- n 1) (+ count 1)))\n          (else (count_primes_iter (- n 1) count))))\n  (count_primes_iter n 0))\n</code>\n",
    "  (define (isPrime n)\n    (define (helper n div)\n      (cond\n        [(= div 1) #t]\n        [(= (modulo n div) 0) #f]\n        [else (helper n (- div 1))]))\n    (helper n (- n 1)))\n  (define (helper n count)\n    (cond\n      [(= n 0) count]\n      [(isPrime n) (helper (- n 1) (+ count 1))]\n      [else (helper (- n 1) count)]))\n  (helper n 0))\n",
    "  (define (is_prime? n)\n    (define (iter i)\n      (cond ((= i n) #t)\n            ((= (remainder n i) 0) #f)\n            (else (iter (+ i 1)))))\n    (iter 2))\n  (define (iter i)\n    (cond ((= i n) 0)\n          ((is_prime? i) (+ 1 (iter (+ i 1))))\n          (else (iter (+ i 1)))))\n  (iter 0))\n",
    "  (define (is_prime? n)\n    (define (is_divisible? a b)\n      (= (remainder a b) 0))\n    (define (is_prime_helper n divisor)\n      (cond ((< divisor n) (or (is_divisible? n divisor) (is_prime_helper n (+ divisor 1))))\n            (else #f)))\n    (cond ((= n 1) #f)\n          (else (is_prime_helper n 2))))\n  (define (count_Primes_nums_helper n count)\n    (cond ((< n 2) count)\n          ((is_prime? n) (count_Primes_nums_helper (- n 1) (+ count 1)))\n          (else (count_Primes_nums_helper (- n 1) count))))\n  (count_Primes_nums_helper n 0))\n",
    "  (define (isPrime? n)\n    (define (helper n i)\n      (cond\n        [(= i 1) #t]\n        [(= (modulo n i) 0) #f]\n        [else (helper n (- i 1))]))\n    (helper n (- n 1)))\n  (define (helper n i)\n    (cond\n      [(= i n) 0]\n      [(isPrime? i) (+ 1 (helper n (+ i 1)))]\n      [else (helper n (+ i 1))]))\n  (helper n 2))\n",
    "  (define (is_prime? n)\n    (define (helper i)\n      (cond\n        [(= i 1) #t]\n        [(= (modulo n i) 0) #f]\n        [else (helper (- i 1))]))\n    (helper (- n 1)))\n  (define (helper2 i)\n    (cond\n      [(= i n) 0]\n      [(is_prime? i) (+ 1 (helper2 (+ i 1)))]\n      [else (helper2 (+ i 1))]))\n  (helper2 1))\n",
    "  (cond\n    [(= n 0) 0]\n    [(= n 1) 0]\n    [(= n 2) 1]\n    [(= n 3) 2]\n    [(= n 4) 2]\n    [(= n 5) 3]\n    [(= n 6) 3]\n    [(= n 7) 4]\n    [(= n 8) 4]\n    [(= n 9) 4]\n    [(= n 10) 4]\n    [(= n 11) 5]\n    [(= n 12) 5]\n    [(= n 13) 6]\n    [(= n 14) 6]\n    [(= n 15) 6]\n    [(= n 16) 6]\n    [(= n 17) 7]\n    [(= n 18) 7]\n    [(= n 19) 8]\n    [(= n 20) 8]\n    [(= n 21) 8]\n    [(= n 22) 8]\n    [(= n 23) 9]\n    [(= n 24) 9]\n    [(= n 25) 9]\n    [(= n 26) 9]\n    [(= n 27) 9]\n    [(= n 28) 9]\n    [(= n 29) 10]\n    [(= n 30) 10]\n    [(= n 31) 10]\n    [(= n 32) 10]\n    [(= n 33) 10]\n    [(= n 34) 10]\n    [(= n 35) 10]\n    [(= n 36) 10]\n    [(= n 37) 11]\n    [(= n 38) 11]\n    [(= n 39) 11]\n    [(= n 40) 11]\n    [(= n 41) 11]\n    [(= n 42) 11]\n    [(= n 43) 11]\n    [(= n 44) 11]\n    [(= n 45) 11]\n    [(= n 46) 11]\n    [(= n 47) 12]\n    [(= n 48) 12]\n    [(= n 49) 12]\n    [(= n 50) 12]\n    [(= n 51) 12]\n    [(= n 52) 12]\n    [(= n 53) 12]\n    [(= n 54) 12]\n    [(= n 55) 12]\n    [(=",
    "  (define (is_prime? n)\n    (cond\n      [(= n 1) #f]\n      [(= n 2) #t]\n      [(= (remainder n 2) 0) #f]\n      [else\n       (define (iter i)\n         (cond\n           [(= i n) #t]\n           [(= (remainder n i) 0) #f]\n           [else (iter (+ i 1))]))\n       (iter 3)]))\n  (define (iter i)\n    (cond\n      [(= i n) 0]\n      [(is_prime? i) (+ 1 (iter (+ i 1)))]\n      [else (iter (+ i 1))]))\n  (iter 1))\n",
    "  (define (is_prime? n)\n    (define (divides? a b)\n      (= (remainder b a) 0))\n    (define (find-divisor n test-divisor)\n      (cond ((> (square test-divisor) n) n)\n            ((divides? test-divisor n) test-divisor)\n            (else (find-divisor n (+ test-divisor 1)))))\n    (= n (find-divisor n 2)))\n  (define (count_Primes_nums_iter n count)\n    (cond ((= n 0) count)\n          ((is_prime? n) (count_Primes_nums_iter (- n 1) (+ count 1)))\n          (else (count_Primes_nums_iter (- n 1) count))))\n  (count_Primes_nums_iter n 0))\n",
    "  (define (is_prime? n)\n    (define (iter i)\n      (cond\n        [(= i n) #t]\n        [(= (remainder n i) 0) #f]\n        [else (iter (+ i 1))]))\n    (iter 2))\n  (define (iter i)\n    (cond\n      [(= i n) 0]\n      [(is_prime? i) (+ 1 (iter (+ i 1)))]\n      [else (iter (+ i 1))]))\n  (iter 2))\n",
    "  (define (is_Prime n)\n    (define (helper i)\n      (cond ((= i 1) #t)\n            ((= (modulo n i) 0) #f)\n            (else (helper (- i 1)))))\n    (helper (- n 1)))\n  (define (helper2 i)\n    (cond ((= i n) 0)\n          ((is_Prime i) (+ 1 (helper2 (+ i 1))))\n          (else (helper2 (+ i 1)))))\n  (helper2 1))\n",
    "  (cond\n    [(= n 0) 0]\n    [(= n 1) 0]\n    [(= n 2) 1]\n    [(= n 3) 2]\n    [(= n 4) 2]\n    [(= n 5) 3]\n    [(= n 6) 3]\n    [(= n 7) 4]\n    [(= n 8) 4]\n    [(= n 9) 4]\n    [(= n 10) 4]\n    [(= n 11) 5]\n    [(= n 12) 5]\n    [(= n 13) 6]\n    [(= n 14) 6]\n    [(= n 15) 6]\n    [(= n 16) 6]\n    [(= n 17) 7]\n    [(= n 18) 7]\n    [(= n 19) 8]\n    [(= n 20) 8]\n    [(= n 21) 8]\n    [(= n 22) 8]\n    [(= n 23) 9]\n    [(= n 24) 9]\n    [(= n 25) 9]\n    [(= n 26) 9]\n    [(= n 27) 9]\n    [(= n 28) 9]\n    [(= n 29) 10]\n    [(= n 30) 10]\n    [(= n 31) 10]\n    [(= n 32) 10]\n    [(= n 33) 10]\n    [(= n 34) 10]\n    [(= n 35) 10]\n    [(= n 36) 10]\n    [(= n 37) 11]\n    [(= n 38) 11]\n    [(= n 39) 11]\n    [(= n 40) 11]\n    [(= n 41) 11]\n    [(= n 42) 11]\n    [(= n 43) 11]\n    [(= n 44) 11]\n    [(= n 45) 11]\n    [(= n 46) 11]\n    [(= n 47) 12]\n    [(= n 48) 12]\n    [(= n 49) 12]\n    [(= n 50) 12]\n    [(= n 51) 12]\n    [(= n 52) 12]\n    [(= n 53) 12]\n    [(= n 54) 12]\n    [(= n 55) 12]\n    [(=",
    "  (define (isPrime? n)\n    (define (prime? k)\n      (if (= k 1)\n          #t\n          (if (= (remainder n k) 0)\n              #f\n              (prime? (- k 1)))))\n    (prime? (- n 1)))\n  (define (count_Primes_nums_helper n count)\n    (if (= n 0)\n        count\n        (if (isPrime? n)\n            (count_Primes_nums_helper (- n 1) (+ count 1))\n            (count_Primes_nums_helper (- n 1) count))))\n  (count_Primes_nums_helper n 0))\n",
    "  (define (is_prime n)\n    (define (iter i)\n      (cond\n        [(= i 1) #t]\n        [(= (modulo n i) 0) #f]\n        [else (iter (- i 1))]))\n    (iter (- n 1)))\n  (define (iter i)\n    (cond\n      [(= i n) 0]\n      [(is_prime i) (+ 1 (iter (+ i 1)))]\n      [else (iter (+ i 1))]))\n  (iter 0))\n",
    "  (define (is_prime n)\n    (define (iter i)\n      (cond ((= i n) #t)\n            ((= (remainder n i) 0) #f)\n            (else (iter (+ i 1)))))\n    (iter 2))\n  (define (iter i count)\n    (cond ((= i n) count)\n          ((is_prime i) (iter (+ i 1) (+ count 1)))\n          (else (iter (+ i 1) count))))\n  (iter 2 0))\n",
    "  (define (isPrime n)\n    (define (helper i)\n      (cond ((= i 1) #t)\n            ((= (modulo n i) 0) #f)\n            (else (helper (- i 1)))))\n    (helper (- n 1)))\n  (define (helper2 i)\n    (cond ((= i n) 0)\n          ((isPrime i) (+ 1 (helper2 (+ i 1))))\n          (else (helper2 (+ i 1)))))\n  (helper2 0))\n",
    "  (cond\n    [(= n 0) 0]\n    [(= n 1) 0]\n    [(= n 2) 1]\n    [else (count_Primes_nums (- n 1))]))\n",
    "  (define (is_prime? n)\n    (define (is_divisible? a b)\n      (= (remainder a b) 0))\n    (define (iter i)\n      (cond ((= i n) #t)\n            ((is_divisible? n i) #f)\n            (else (iter (+ i 1)))))\n    (iter 2))\n  (define (iter i)\n    (cond ((= i n) 0)\n          ((is_prime? i) (+ 1 (iter (+ i 1))))\n          (else (iter (+ i 1)))))\n  (iter 2))\n",
    "  (define (is_prime? n)\n    (define (helper i)\n      (cond\n        [(= i n) #t]\n        [(= (remainder n i) 0) #f]\n        [else (helper (+ i 1))]))\n    (helper 2))\n  (define (helper2 i count)\n    (cond\n      [(= i n) count]\n      [(is_prime? i) (helper2 (+ i 1) (+ count 1))]\n      [else (helper2 (+ i 1) count)]))\n  (helper2 2 0))\n",
    "  (if (= n 0)\n      0\n      (count_Primes_nums_helper n 2 0)))\n",
    "  (define (isPrime n)\n    (define (iter i)\n      (cond\n        [(= i 1) true]\n        [(= (remainder n i) 0) false]\n        [else (iter (- i 1))]))\n    (iter (- n 1)))\n  (define (iter i)\n    (cond\n      [(= i n) 0]\n      [(isPrime i) (+ 1 (iter (+ i 1)))]\n      [else (iter (+ i 1))]))\n  (iter 0))\n",
    "  (define (is_prime n)\n    (define (helper i)\n      (cond ((= i 1) #t)\n            ((= (remainder n i) 0) #f)\n            (else (helper (- i 1)))))\n    (helper (- n 1)))\n  (define (helper2 i)\n    (cond ((= i n) 0)\n          ((is_prime i) (+ 1 (helper2 (+ i 1))))\n          (else (helper2 (+ i 1)))))\n  (helper2 0))\n",
    "  (define (is_prime? n)\n    (define (iter i)\n      (cond ((= i 1) #t)\n            ((= (remainder n i) 0) #f)\n            (else (iter (- i 1)))))\n    (iter (- n 1)))\n  (define (iter i)\n    (cond ((= i n) 0)\n          ((is_prime? i) (+ 1 (iter (+ i 1))))\n          (else (iter (+ i 1)))))\n  (iter 0))\n",
    "  (define (is_prime? n)\n    (cond\n      [(= n 1) #f]\n      [(= n 2) #t]\n      [(even? n) #f]\n      [else\n       (define (is_prime? n d)\n         (cond\n           [(= d 1) #t]\n           [(= (modulo n d) 0) #f]\n           [else (is_prime? n (- d 1))]))\n       (is_prime? n (- n 1))]))\n  (define (count_Primes_nums n count)\n    (cond\n      [(= n 0) count]\n      [(is_prime? n) (count_Primes_nums (- n 1) (+ count 1))]\n      [else (count_Primes_nums (- n 1) count)]))\n  (count_Primes_nums n 0))\n",
    "  (define (isPrime? n)\n    (define (isPrime?-iter n divisor)\n      (cond ((= n 1) #f)\n            ((= n 2) #t)\n            ((= n divisor) #t)\n            ((= (modulo n divisor) 0) #f)\n            (else (isPrime?-iter n (+ divisor 1)))))\n    (isPrime?-iter n 2))\n  (define (count_Primes-iter n counter)\n    (cond ((= n 0) counter)\n          ((isPrime? n) (count_Primes-iter (- n 1) (+ counter 1)))\n          (else (count_Primes-iter (- n 1) counter))))\n  (count_Primes-iter n 0))\n",
    "  (define (helper i count)\n    (cond ((= i n) count)\n          ((prime? i) (helper (+ i 1) (+ count 1)))\n          (else (helper (+ i 1) count))))\n  (helper 2 0))\n",
    "  (define (is_prime? n)\n    (define (is_prime_helper n i)\n      (cond\n        [(= i 1) true]\n        [(= (modulo n i) 0) false]\n        [else (is_prime_helper n (- i 1))]))\n    (is_prime_helper n (- n 1)))\n  (define (count_helper n i)\n    (cond\n      [(= i 0) 0]\n      [(is_prime? i) (+ 1 (count_helper n (- i 1)))]\n      [else (count_helper n (- i 1))]))\n  (count_helper n n))\n",
    "  (cond\n    [(= n 0) 0]\n    [(= n 1) 0]\n    [(= n 2) 1]\n    [(= n 3) 2]\n    [(= n 4) 2]\n    [(= n 5) 3]\n    [(= n 6) 3]\n    [(= n 7) 4]\n    [(= n 8) 4]\n    [(= n 9) 4]\n    [(= n 10) 4]\n    [(= n 11) 5]\n    [(= n 12) 5]\n    [(= n 13) 6]\n    [(= n 14) 6]\n    [(= n 15) 6]\n    [(= n 16) 6]\n    [(= n 17) 7]\n    [(= n 18) 7]\n    [(= n 19) 8]\n    [(= n 20) 8]\n    [(= n 21) 8]\n    [(= n 22) 8]\n    [(= n 23) 9]\n    [(= n 24) 9]\n    [(= n 25) 9]\n    [(= n 26) 9]\n    [(= n 27) 9]\n    [(= n 28) 9]\n    [(= n 29) 10]\n    [(= n 30) 10]\n    [(= n 31) 10]\n    [(= n 32) 10]\n    [(= n 33) 10]\n    [(= n 34) 10]\n    [(= n 35) 10]\n    [(= n 36) 10]\n    [(= n 37) 11]\n    [(= n 38) 11]\n    [(= n 39) 11]\n    [(= n 40) 11]\n    [(= n 41) 11]\n    [(= n 42) 11]\n    [(= n 43) 11]\n    [(= n 44) 11]\n    [(= n 45) 11]\n    [(= n 46) 11]\n    [(= n 47) 12]\n    [(= n 48) 12]\n    [(= n 49) 12]\n    [(= n 50) 12]\n    [(= n 51) 12]\n    [(= n 52) 12]\n    [(= n 53) 12]\n    [(= n 54) 12]\n    [(= n 55) 12]\n    [(=",
    "  (cond\n    [(= n 0) 0]\n    [(= n 1) 0]\n    [(= n 2) 1]\n    [else\n     (define (is_prime? n)\n       (cond\n         [(= n 2) #t]\n         [(= n 3) #t]\n         [(= n 5) #t]\n         [(= n 7) #t]\n         [(= n 11) #t]\n         [(= n 13) #t]\n         [(= n 17) #t]\n         [(= n 19) #t]\n         [(= n 23) #t]\n         [(= n 29) #t]\n         [(= n 31) #t]\n         [(= n 37) #t]\n         [(= n 41) #t]\n         [(= n 43) #t]\n         [(= n 47) #t]\n         [(= n 53) #t]\n         [(= n 59) #t]\n         [(= n 61) #t]\n         [(= n 67) #t]\n         [(= n 71) #t]\n         [(= n 73) #t]\n         [(= n 79) #t]\n         [(= n 83) #t]\n         [(= n 89) #t]\n         [(= n 97) #t]\n         [(= n 101) #t]\n         [(= n 103) #t]\n         [(= n 107) #t]\n         [(= n 109) #t]\n         [(= n 113) #t]\n         [(= n 127) #t]\n         [(= n 131) #t]\n         [(= n 137) #t]\n         [(= n 139) #t]\n         [(= n 149) #t]\n         [(= n 151) #t]\n         [(= n 157) #t]\n         [(= n 163) #t]\n         [(= n 167) #t]\n         [(= n 173) #t]\n         [(= n 179) #t]\n         [(= n 181) #t]\n         [(= n 191) #t]\n         [(= n 193) #t]\n         [(= n 197) #t]\n         [(= n 199) #t]\n        ",
    "  (cond\n    [(= n 0) 0]\n    [(= n 1) 0]\n    [(= n 2) 1]\n    [(= n 3) 2]\n    [(= n 4) 2]\n    [(= n 5) 3]\n    [(= n 6) 3]\n    [(= n 7) 4]\n    [(= n 8) 4]\n    [(= n 9) 4]\n    [(= n 10) 4]\n    [(= n 11) 5]\n    [(= n 12) 5]\n    [(= n 13) 6]\n    [(= n 14) 6]\n    [(= n 15) 6]\n    [(= n 16) 6]\n    [(= n 17) 7]\n    [(= n 18) 7]\n    [(= n 19) 8]\n    [(= n 20) 8]\n    [(= n 21) 8]\n    [(= n 22) 8]\n    [(= n 23) 9]\n    [(= n 24) 9]\n    [(= n 25) 9]\n    [(= n 26) 9]\n    [(= n 27) 9]\n    [(= n 28) 9]\n    [(= n 29) 10]\n    [(= n 30) 10]\n    [(= n 31) 10]\n    [(= n 32) 10]\n    [(= n 33) 10]\n    [(= n 34) 10]\n    [(= n 35) 10]\n    [(= n 36) 10]\n    [(= n 37) 11]\n    [(= n 38) 11]\n    [(= n 39) 11]\n    [(= n 40) 11]\n    [(= n 41) 11]\n    [(= n 42) 11]\n    [(= n 43) 11]\n    [(= n 44) 11]\n    [(= n 45) 11]\n    [(= n 46) 11]\n    [(= n 47) 12]\n    [(= n 48) 12]\n    [(= n 49) 12]\n    [(= n 50) 12]\n    [(= n 51) 12]\n    [(= n 52) 12]\n    [(= n 53) 12]\n    [(= n 54) 12]\n    [(= n 55) 12]\n    [(=",
    "  (cond\n    [(= n 0) 0]\n    [(= n 1) 0]\n    [(= n 2) 1]\n    [(= n 3) 2]\n    [(= n 4) 2]\n    [(= n 5) 3]\n    [(= n 6) 3]\n    [(= n 7) 4]\n    [(= n 8) 4]\n    [(= n 9) 4]\n    [(= n 10) 4]\n    [(= n 11) 5]\n    [(= n 12) 5]\n    [(= n 13) 6]\n    [(= n 14) 6]\n    [(= n 15) 6]\n    [(= n 16) 6]\n    [(= n 17) 7]\n    [(= n 18) 7]\n    [(= n 19) 8]\n    [(= n 20) 8]\n    [(= n 21) 8]\n    [(= n 22) 8]\n    [(= n 23) 9]\n    [(= n 24) 9]\n    [(= n 25) 9]\n    [(= n 26) 9]\n    [(= n 27) 9]\n    [(= n 28) 9]\n    [(= n 29) 10]\n    [(= n 30) 10]\n    [(= n 31) 10]\n    [(= n 32) 10]\n    [(= n 33) 10]\n    [(= n 34) 10]\n    [(= n 35) 10]\n    [(= n 36) 10]\n    [(= n 37) 11]\n    [(= n 38) 11]\n    [(= n 39) 11]\n    [(= n 40) 11]\n    [(= n 41) 11]\n    [(= n 42) 11]\n    [(= n 43) 11]\n    [(= n 44) 11]\n    [(= n 45) 11]\n    [(= n 46) 11]\n    [(= n 47) 12]\n    [(= n 48) 12]\n    [(= n 49) 12]\n    [(= n 50) 12]\n    [(= n 51) 12]\n    [(= n 52) 12]\n    [(= n 53) 12]\n    [(= n 54) 12]\n    [(= n 55) 12]\n    [(=",
    "  (cond\n    [(= n 0) 0]\n    [(= n 1) 0]\n    [(= n 2) 1]\n    [(= n 3) 2]\n    [(= n 4) 2]\n    [(= n 5) 3]\n    [(= n 6) 3]\n    [(= n 7) 4]\n    [(= n 8) 4]\n    [(= n 9) 4]\n    [(= n 10) 4]\n    [(= n 11) 5]\n    [(= n 12) 5]\n    [(= n 13) 6]\n    [(= n 14) 6]\n    [(= n 15) 6]\n    [(= n 16) 6]\n    [(= n 17) 7]\n    [(= n 18) 7]\n    [(= n 19) 8]\n    [(= n 20) 8]\n    [(= n 21) 8]\n    [(= n 22) 8]\n    [(= n 23) 9]\n    [(= n 24) 9]\n    [(= n 25) 9]\n    [(= n 26) 9]\n    [(= n 27) 9]\n    [(= n 28) 9]\n    [(= n 29) 10]\n    [(= n 30) 10]\n    [(= n 31) 10]\n    [(= n 32) 10]\n    [(= n 33) 10]\n    [(= n 34) 10]\n    [(= n 35) 10]\n    [(= n 36) 10]\n    [(= n 37) 11]\n    [(= n 38) 11]\n    [(= n 39) 11]\n    [(= n 40) 11]\n    [(= n 41) 11]\n    [(= n 42) 11]\n    [(= n 43) 11]\n    [(= n 44) 11]\n    [(= n 45) 11]\n    [(= n 46) 11]\n    [(= n 47) 12]\n    [(= n 48) 12]\n    [(= n 49) 12]\n    [(= n 50) 12]\n    [(= n 51) 12]\n    [(= n 52) 12]\n    [(= n 53) 12]\n    [(= n 54) 12]\n    [(= n 55) 12]\n    [(=",
    "  (cond\n    [(= n 0) 0]\n    [(= n 1) 0]\n    [(= n 2) 1]\n    [(= n 3) 2]\n    [else (count_Primes_nums (- n 1))]))\n",
    "  (define (is_prime? n)\n    (define (is_prime_helper n d)\n      (if (= d 1)\n          #t\n          (if (= (remainder n d) 0)\n              #f\n              (is_prime_helper n (- d 1)))))\n    (is_prime_helper n (- n 1)))\n  (define (count_Primes_nums_helper n count)\n    (if (= n 0)\n        count\n        (if (is_prime? n)\n            (count_Primes_nums_helper (- n 1) (+ count 1))\n            (count_Primes_nums_helper (- n 1) count))))\n  (count_Primes_nums_helper n 0))\n",
    "  (define (is_prime? n)\n    (define (helper i)\n      (cond\n        [(= i 1) #t]\n        [(= (modulo n i) 0) #f]\n        [else (helper (- i 1))]))\n    (helper (- n 1)))\n  (define (helper2 i)\n    (cond\n      [(= i n) 0]\n      [(is_prime? i) (+ 1 (helper2 (+ i 1)))]\n      [else (helper2 (+ i 1))]))\n  (helper2 1))\n",
    "  (define (is_prime n)\n    (define (iter i)\n      (cond\n        [(= i 1) #t]\n        [(= (remainder n i) 0) #f]\n        [else (iter (- i 1))]))\n    (iter (- n 1)))\n  (define (iter i)\n    (cond\n      [(= i n) 0]\n      [(is_prime i) (+ 1 (iter (+ i 1)))]\n      [else (iter (+ i 1))]))\n  (iter 0))\n",
    "  (define (is_prime? n)\n    (define (is_divisible? a b)\n      (= (remainder a b) 0))\n    (define (find_divisor n test-divisor)\n      (cond ((> (square test-divisor) n) n)\n            ((is_divisible? n test-divisor) test-divisor)\n            (else (find_divisor n (+ test-divisor 1)))))\n    (= (find_divisor n 2) n))\n  (define (count_primes n count)\n    (cond ((= n 0) count)\n          ((is_prime? n) (count_primes (- n 1) (+ count 1)))\n          (else (count_primes (- n 1) count))))\n  (count_primes n 0))\n",
    "  (define (is_prime? n)\n    (define (iter i)\n      (cond ((= i 1) #t)\n            ((= (modulo n i) 0) #f)\n            (else (iter (- i 1)))))\n    (iter (- n 1)))\n  (define (iter i acc)\n    (cond ((= i 0) acc)\n          ((is_prime? i) (iter (- i 1) (+ acc 1)))\n          (else (iter (- i 1) acc))))\n  (iter n 0))\n",
    "  (define (is_prime? n)\n    (define (helper i)\n      (cond ((= i 1) #t)\n            ((= (modulo n i) 0) #f)\n            (else (helper (- i 1)))))\n    (helper (- n 1)))\n  (define (helper2 i)\n    (cond ((= i n) 0)\n          ((is_prime? i) (+ 1 (helper2 (+ i 1))))\n          (else (helper2 (+ i 1)))))\n  (helper2 0))\n",
    "  (if (= n 0)\n      0\n      (if (= n 1)\n          0\n          (if (= n 2)\n              1\n              (if (= n 3)\n                  2\n                  (if (= n 4)\n                      2\n                      (if (= n 5)\n                          3\n                          (if (= n 6)\n                              3\n                              (if (= n 7)\n                                  4\n                                  (if (= n 8)\n                                      4\n                                      (if (= n 9)\n                                          4\n                                          (if (= n 10)\n                                              4\n                                              (if (= n 11)\n                                                  5\n                                                  (if (= n 12)\n                                                      5\n                                                      (if (= n 13)\n                                                          6\n                                                          (if (= n 14)\n                                                              6\n                                                              (if (= n 15)\n                                                                  6\n                                                                  (if (= n 16)\n                                                                      6\n                                                                      (if (= n 17)\n                                                                          7\n                                                                          (if (= n 18)\n                                                                              7\n                                                                              (if (= n 19)\n                                                                                  8\n                                                                                  (if (= n 20)\n                                                                                      8\n                                                                                      (if (= n 21)\n                                                                                          8\n                                                                                          (if (= n 22)\n                                                                                              8\n                                                                                              (if (= n 23)\n                                                                                                  9\n                                                                                                  (if (= n 24)\n                                                                                                      9\n                                                                                                      (if (= n 25)\n                                                                                                          9\n                                                                                                          (if (= n 26)\n                                                                                                              9\n                                                                                                              (if (= n 27)\n                                                                                                                  9\n                                                                                                                  (if (= n 28)\n                                                                                                                      9\n                                                                                                                      (if (= n 29)\n                                                                                                                          10\n                                                                                                ",
    "  (define (is_prime? n)\n    (define (iter i)\n      (cond ((= i n) #t)\n            ((= (remainder n i) 0) #f)\n            (else (iter (+ i 1)))))\n    (iter 2))\n  (define (iter i)\n    (cond ((= i n) 0)\n          ((is_prime? i) (+ 1 (iter (+ i 1))))\n          (else (iter (+ i 1)))))\n  (iter 2))\n",
    "  (define (is_Prime n)\n    (define (is_Prime_helper n i)\n      (cond\n        [(= i 1) true]\n        [(= (modulo n i) 0) false]\n        [else (is_Prime_helper n (- i 1))]))\n    (is_Prime_helper n (- n 1)))\n  (define (count_Primes_nums_helper n i)\n    (cond\n      [(= i n) 0]\n      [(is_Prime i) (+ 1 (count_Primes_nums_helper n (+ i 1)))]\n      [else (count_Primes_nums_helper n (+ i 1))]))\n  (count_Primes_nums_helper n 0))\n",
    "  (define (is_prime? n)\n    (define (helper i)\n      (cond\n        [(= i n) #t]\n        [(= (modulo n i) 0) #f]\n        [else (helper (+ i 1))]))\n    (helper 2))\n  (define (helper2 i)\n    (cond\n      [(= i n) 0]\n      [(is_prime? i) (+ 1 (helper2 (+ i 1)))]\n      [else (helper2 (+ i 1))]))\n  (helper2 2))\n",
    "  (define (is_Prime n)\n    (define (is_Prime_helper n i)\n      (cond\n        [(= i 1) #t]\n        [(= (modulo n i) 0) #f]\n        [else (is_Prime_helper n (- i 1))]))\n    (is_Prime_helper n (- n 1)))\n  (define (count_Primes_nums_helper n i)\n    (cond\n      [(= i n) 0]\n      [(is_Prime i) (+ 1 (count_Primes_nums_helper n (+ i 1)))]\n      [else (count_Primes_nums_helper n (+ i 1))]))\n  (count_Primes_nums_helper n 2))\n",
    "  (define (is_Prime? n)\n    (define (is_Prime?-iter n i)\n      (cond ((= i 1) #t)\n            ((= (modulo n i) 0) #f)\n            (else (is_Prime?-iter n (- i 1)))))\n    (is_Prime?-iter n (- n 1)))\n  (define (count_Primes-iter n count)\n    (cond ((= n 0) count)\n          ((is_Prime? n) (count_Primes-iter (- n 1) (+ count 1)))\n          (else (count_Primes-iter (- n 1) count))))\n  (count_Primes-iter n 0))\n",
    "  (if (= n 0)\n      0\n      (if (= n 1)\n          0\n          (if (= n 2)\n              1\n              (if (= n 3)\n                  2\n                  (if (= n 4)\n                      2\n                      (if (= n 5)\n                          3\n                          (if (= n 6)\n                              3\n                              (if (= n 7)\n                                  4\n                                  (if (= n 8)\n                                      4\n                                      (if (= n 9)\n                                          4\n                                          (if (= n 10)\n                                              4\n                                              (if (= n 11)\n                                                  5\n                                                  (if (= n 12)\n                                                      5\n                                                      (if (= n 13)\n                                                          6\n                                                          (if (= n 14)\n                                                              6\n                                                              (if (= n 15)\n                                                                  6\n                                                                  (if (= n 16)\n                                                                      6\n                                                                      (if (= n 17)\n                                                                          7\n                                                                          (if (= n 18)\n                                                                              7\n                                                                              (if (= n 19)\n                                                                                  8\n                                                                                  (if (= n 20)\n                                                                                      8\n                                                                                      (if (= n 21)\n                                                                                          8\n                                                                                          (if (= n 22)\n                                                                                              8\n                                                                                              (if (= n 23)\n                                                                                                  9\n                                                                                                  (if (= n 24)\n                                                                                                      9\n                                                                                                      (if (= n 25)\n                                                                                                          9\n                                                                                                          (if (= n 26)\n                                                                                                              9\n                                                                                                              (if (= n 27)\n                                                                                                                  9\n                                                                                                                  (if (= n 28)\n                                                                                                                      9\n                                                                                                                      (if (= n 29)\n                                                                                                                          10\n                                                                                                ",
    "  (define (is_prime n)\n    (define (helper i)\n      (cond\n        [(= i 1) #t]\n        [(= (remainder n i) 0) #f]\n        [else (helper (- i 1))]))\n    (helper (- n 1)))\n  (define (helper2 i)\n    (cond\n      [(= i n) 0]\n      [(is_prime i) (+ 1 (helper2 (+ i 1)))]\n      [else (helper2 (+ i 1))]))\n  (helper2 0))\n",
    "  (define (is_prime? n)\n    (define (helper i)\n      (cond ((= i 1) #t)\n            ((= (modulo n i) 0) #f)\n            (else (helper (- i 1)))))\n    (helper (- n 1)))\n  (define (helper2 i)\n    (cond ((= i n) 0)\n          ((is_prime? i) (+ 1 (helper2 (+ i 1))))\n          (else (helper2 (+ i 1)))))\n  (helper2 0))\n",
    "  (define (is_prime? n)\n    (define (is_divisible? a b)\n      (= (remainder a b) 0))\n    (define (iter i)\n      (cond ((= i n) #t)\n            ((is_divisible? n i) #f)\n            (else (iter (+ i 1)))))\n    (iter 2))\n  (define (iter i)\n    (cond ((= i n) 0)\n          ((is_prime? i) (+ 1 (iter (+ i 1))))\n          (else (iter (+ i 1)))))\n  (iter 2))\n",
    "  (define (is_prime n)\n    (define (is_divisible? a b)\n      (= (remainder a b) 0))\n    (define (smallest_divisor n)\n      (define (find_divisor n test-divisor)\n        (cond ((> (square test-divisor) n) n)\n              ((is_divisible? n test-divisor) test-divisor)\n              (else (find_divisor n (+ test-divisor 1)))))\n      (find_divisor n 2))\n    (= (smallest_divisor n) n))\n  (define (count_primes_nums n)\n    (define (count_primes_nums-iter n count)\n      (cond ((= n 0) count)\n            ((is_prime n) (count_primes_nums-iter (- n 1) (+ count 1)))\n            (else (count_primes_nums-iter (- n 1) count))))\n    (count_primes_nums-iter n 0))\n  (count_primes_nums n))\n",
    "  (define (is_prime n)\n    (define (helper i)\n      (cond ((= i 1) #t)\n            ((= (modulo n i) 0) #f)\n            (else (helper (- i 1)))))\n    (helper (- n 1)))\n  (define (helper2 i)\n    (cond ((= i n) 0)\n          ((is_prime i) (+ 1 (helper2 (+ i 1))))\n          (else (helper2 (+ i 1)))))\n  (helper2 1))\n",
    "  (if (= n 0)\n      0\n      (if (= n 1)\n          0\n          (if (= n 2)\n              1\n              (if (= n 3)\n                  2\n                  (if (= n 4)\n                      2\n                      (if (= n 5)\n                          3\n                          (if (= n 6)\n                              3\n                              (if (= n 7)\n                                  4\n                                  (if (= n 8)\n                                      4\n                                      (if (= n 9)\n                                          4\n                                          (if (= n 10)\n                                              4\n                                              (if (= n 11)\n                                                  5\n                                                  (if (= n 12)\n                                                      5\n                                                      (if (= n 13)\n                                                          6\n                                                          (if (= n 14)\n                                                              6\n                                                              (if (= n 15)\n                                                                  6\n                                                                  (if (= n 16)\n                                                                      6\n                                                                      (if (= n 17)\n                                                                          7\n                                                                          (if (= n 18)\n                                                                              7\n                                                                              (if (= n 19)\n                                                                                  8\n                                                                                  (if (= n 20)\n                                                                                      8\n                                                                                      (if (= n 21)\n                                                                                          8\n                                                                                          (if (= n 22)\n                                                                                              8\n                                                                                              (if (= n 23)\n                                                                                                  9\n                                                                                                  (if (= n 24)\n                                                                                                      9\n                                                                                                      (if (= n 25)\n                                                                                                          9\n                                                                                                          (if (= n 26)\n                                                                                                              9\n                                                                                                              (if (= n 27)\n                                                                                                                  9\n                                                                                                                  (if (= n 28)\n                                                                                                                      9\n                                                                                                                      (if (= n 29)\n                                                                                                                          10\n                                                                                                ",
    "  (if (or (= n 0) (= n 1))\n      0\n      (count_Primes_nums_helper n 2)))\n",
    "  (cond\n    [(= n 0) 0]\n    [(= n 1) 0]\n    [(= n 2) 1]\n    [(= n 3) 2]\n    [(= n 4) 2]\n    [(= n 5) 3]\n    [(= n 6) 3]\n    [(= n 7) 4]\n    [(= n 8) 4]\n    [(= n 9) 4]\n    [(= n 10) 4]\n    [(= n 11) 5]\n    [(= n 12) 5]\n    [(= n 13) 6]\n    [(= n 14) 6]\n    [(= n 15) 6]\n    [(= n 16) 6]\n    [(= n 17) 7]\n    [(= n 18) 7]\n    [(= n 19) 8]\n    [(= n 20) 8]\n    [(= n 21) 8]\n    [(= n 22) 8]\n    [(= n 23) 9]\n    [(= n 24) 9]\n    [(= n 25) 9]\n    [(= n 26) 9]\n    [(= n 27) 9]\n    [(= n 28) 9]\n    [(= n 29) 10]\n    [(= n 30) 10]\n    [(= n 31) 10]\n    [(= n 32) 10]\n    [(= n 33) 10]\n    [(= n 34) 10]\n    [(= n 35) 10]\n    [(= n 36) 10]\n    [(= n 37) 11]\n    [(= n 38) 11]\n    [(= n 39) 11]\n    [(= n 40) 11]\n    [(= n 41) 11]\n    [(= n 42) 11]\n    [(= n 43) 12]\n    [(= n 44) 12]\n    [(= n 45) 12]\n    [(= n 46) 12]\n    [(= n 47) 12]\n    [(= n 48) 12]\n    [(= n 49) 12]\n    [(= n 50) 12]\n    [(= n 51) 12]\n    [(= n 52) 12]\n    [(= n 53) 13]\n    [(= n 54) 13]\n    [(= n 55) 13]\n    [(=",
    "  (define (is_prime? n)\n    (define (divides? a b)\n      (= (remainder b a) 0))\n    (define (find-divisor n test-divisor)\n      (cond ((> (square test-divisor) n) n)\n            ((divides? test-divisor n) test-divisor)\n            (else (find-divisor n (+ test-divisor 1)))))\n    (= n (find-divisor n 2)))\n  (define (count_Primes_nums-iter n count)\n    (cond ((= n 0) count)\n          ((is_prime? n) (count_Primes_nums-iter (- n 1) (+ count 1)))\n          (else (count_Primes_nums-iter (- n 1) count))))\n  (count_Primes_nums-iter n 0))\n",
    "  (define (is_prime? n)\n    (define (iter i)\n      (if (= i n)\n          #t\n          (if (= (remainder n i) 0)\n              #f\n              (iter (+ i 1)))))\n    (iter 2))\n  (define (iter i)\n    (if (= i n)\n        0\n        (if (is_prime? i)\n            (+ 1 (iter (+ i 1)))\n            (iter (+ i 1)))))\n  (iter 2))\n",
    "  (if (= n 0)\n      0\n      (if (= n 1)\n          0\n          (if (= n 2)\n              1\n              (if (= n 3)\n                  2\n                  (if (= n 4)\n                      2\n                      (if (= n 5)\n                          3\n                          (if (= n 6)\n                              3\n                              (if (= n 7)\n                                  4\n                                  (if (= n 8)\n                                      4\n                                      (if (= n 9)\n                                          4\n                                          (if (= n 10)\n                                              4\n                                              (if (= n 11)\n                                                  5\n                                                  (if (= n 12)\n                                                      5\n                                                      (if (= n 13)\n                                                          6\n                                                          (if (= n 14)\n                                                              6\n                                                              (if (= n 15)\n                                                                  6\n                                                                  (if (= n 16)\n                                                                      6\n                                                                      (if (= n 17)\n                                                                          7\n                                                                          (if (= n 18)\n                                                                              7\n                                                                              (if (= n 19)\n                                                                                  8\n                                                                                  (if (= n 20)\n                                                                                      8\n                                                                                      (if (= n 21)\n                                                                                          8\n                                                                                          (if (= n 22)\n                                                                                              8\n                                                                                              (if (= n 23)\n                                                                                                  9\n                                                                                                  (if (= n 24)\n                                                                                                      9\n                                                                                                      (if (= n 25)\n                                                                                                          9\n                                                                                                          (if (= n 26)\n                                                                                                              9\n                                                                                                              (if (= n 27)\n                                                                                                                  9\n                                                                                                                  (if (= n 28)\n                                                                                                                      9\n                                                                                                                      (if (= n 29)\n                                                                                                                          10\n                                                                                                ",
    "  (define (is_prime n)\n    (define (iter i)\n      (cond ((= i n) #t)\n            ((= (remainder n i) 0) #f)\n            (else (iter (+ i 1)))))\n    (iter 2))\n  (define (iter i count)\n    (cond ((= i n) count)\n          ((is_prime i) (iter (+ i 1) (+ count 1)))\n          (else (iter (+ i 1) count))))\n  (iter 2 0))\n",
    "  (define (is_prime n)\n    (define (is_divisible? a b)\n      (= (remainder a b) 0))\n    (define (iter i)\n      (cond ((= i n) #t)\n            ((is_divisible? n i) #f)\n            (else (iter (+ i 1)))))\n    (iter 2))\n  (define (iter i)\n    (cond ((= i n) 0)\n          ((is_prime i) (+ 1 (iter (+ i 1))))\n          (else (iter (+ i 1)))))\n  (iter 2))\n",
    "  (define (is_prime? n)\n    (define (helper i)\n      (cond\n        [(= i n) #t]\n        [(= (modulo n i) 0) #f]\n        [else (helper (+ i 1))]))\n    (helper 2))\n  (define (helper2 i acc)\n    (cond\n      [(= i n) acc]\n      [(is_prime? i) (helper2 (+ i 1) (+ acc 1))]\n      [else (helper2 (+ i 1) acc)]))\n  (helper2 0 0))\n",
    "  (cond ((= n 0) 0)\n        ((= n 1) 0)\n        ((= n 2) 1)\n        (else (count_Primes_nums_helper n 2))))\n",
    "  (define (is_prime? n)\n    (define (iter i)\n      (if (= i n)\n          #t\n          (if (= (remainder n i) 0)\n              #f\n              (iter (+ i 1)))))\n    (iter 2))\n  (define (iter i count)\n    (if (= i n)\n        count\n        (if (is_prime? i)\n            (iter (+ i 1) (+ count 1))\n            (iter (+ i 1) count))))\n  (iter 2 0))\n",
    "  (define (is_Prime n)\n    (define (helper i)\n      (cond ((= i 1) #t)\n            ((= (modulo n i) 0) #f)\n            (else (helper (- i 1)))))\n    (helper (- n 1)))\n  (define (helper2 i)\n    (cond ((= i n) 0)\n          ((is_Prime i) (+ 1 (helper2 (+ i 1))))\n          (else (helper2 (+ i 1)))))\n  (helper2 2))\n",
    "  (define (helper n count)\n    (cond\n      [(= n 0) count]\n      [(is_Prime n) (helper (- n 1) (+ count 1))]\n      [else (helper (- n 1) count)]))\n  (helper n 0))\n",
    "  (define (is_Prime? n)\n    (define (helper i)\n      (cond ((= i 1) #t)\n            ((= (remainder n i) 0) #f)\n            (else (helper (- i 1)))))\n    (helper (- n 1)))\n  (define (helper2 i)\n    (cond ((= i n) 0)\n          ((is_Prime? i) (+ 1 (helper2 (+ i 1))))\n          (else (helper2 (+ i 1)))))\n  (helper2 2))\n",
    "  (cond\n    [(= n 0) 0]\n    [(= n 1) 0]\n    [(= n 2) 1]\n    [(= n 3) 2]\n    [(= n 4) 2]\n    [(= n 5) 3]\n    [(= n 6) 3]\n    [(= n 7) 4]\n    [(= n 8) 4]\n    [(= n 9) 4]\n    [(= n 10) 4]\n    [(= n 11) 5]\n    [(= n 12) 5]\n    [(= n 13) 6]\n    [(= n 14) 6]\n    [(= n 15) 6]\n    [(= n 16) 6]\n    [(= n 17) 7]\n    [(= n 18) 7]\n    [(= n 19) 8]\n    [(= n 20) 8]\n    [(= n 21) 8]\n    [(= n 22) 8]\n    [(= n 23) 8]\n    [(= n 24) 8]\n    [(= n 25) 9]\n    [(= n 26) 9]\n    [(= n 27) 9]\n    [(= n 28) 9]\n    [(= n 29) 10]\n    [(= n 30) 10]\n    [(= n 31) 10]\n    [(= n 32) 10]\n    [(= n 33) 10]\n    [(= n 34) 10]\n    [(= n 35) 10]\n    [(= n 36) 10]\n    [(= n 37) 11]\n    [(= n 38) 11]\n    [(= n 39) 11]\n    [(= n 40) 11]\n    [(= n 41) 11]\n    [(= n 42) 11]\n    [(= n 43) 12]\n    [(= n 44) 12]\n    [(= n 45) 12]\n    [(= n 46) 12]\n    [(= n 47) 12]\n    [(= n 48) 12]\n    [(= n 49) 12]\n    [(= n 50) 12]\n    [(= n 51) 12]\n    [(= n 52) 12]\n    [(= n 53) 13]\n    [(= n 54) 13]\n    [(= n 55) 13]\n    [(=",
    "  (define (helper i count)\n    (cond\n      [(= i n) count]\n      [(prime? i) (helper (+ i 1) (+ count 1))]\n      [else (helper (+ i 1) count)]))\n  (helper 2 0))\n",
    "  (define (isPrime? n)\n    (define (divisible? a b)\n      (= (remainder a b) 0))\n    (define (find-divisor n test-divisor)\n      (cond ((> (square test-divisor) n) n)\n            ((divisible? n test-divisor) test-divisor)\n            (else (find-divisor n (+ test-divisor 1)))))\n    (= n (find-divisor n 2)))\n  (define (count_Primes_nums_iter n count)\n    (cond ((= n 0) count)\n          ((isPrime? n) (count_Primes_nums_iter (- n 1) (+ count 1)))\n          (else (count_Primes_nums_iter (- n 1) count))))\n  (count_Primes_nums_iter n 0))\n",
    "  (define (is_prime? n)\n    (define (iter i)\n      (cond [(= i 1) true]\n            [(= (modulo n i) 0) false]\n            [else (iter (- i 1))]))\n    (iter (- n 1)))\n  (define (iter i)\n    (cond [(= i n) 0]\n          [(is_prime? i) (+ 1 (iter (+ i 1)))]\n          [else (iter (+ i 1))]))\n  (iter 0))\n",
    "  (if (or (= n 0) (= n 1))\n      0\n      (count_Primes_nums_helper n 2 0)))\n",
    "  (define (is_prime? n)\n    (define (iter i)\n      (cond ((= i 1) #t)\n            ((= (remainder n i) 0) #f)\n            (else (iter (- i 1)))))\n    (iter (- n 1)))\n  (define (count_Primes_nums_iter n count)\n    (cond ((= n 0) count)\n          ((is_prime? n) (count_Primes_nums_iter (- n 1) (+ count 1)))\n          (else (count_Primes_nums_iter (- n 1) count))))\n  (count_Primes_nums_iter n 0))\n",
    "  (define (is_prime? n)\n    (define (is_prime_helper n i)\n      (cond ((= i 1) #t)\n            ((= (modulo n i) 0) #f)\n            (else (is_prime_helper n (- i 1)))))\n    (is_prime_helper n (- n 1)))\n  (define (count_Primes_nums_helper n count)\n    (cond ((= n 1) count)\n          ((is_prime? n) (count_Primes_nums_helper (- n 1) (+ count 1)))\n          (else (count_Primes_nums_helper (- n 1) count))))\n  (count_Primes_nums_helper n 0))\n",
    "  (if (= n 0)\n      0\n      (if (= n 1)\n          0\n          (if (= n 2)\n              1\n              (if (= n 3)\n                  2\n                  (if (= n 4)\n                      2\n                      (if (= n 5)\n                          3\n                          (if (= n 6)\n                              3\n                              (if (= n 7)\n                                  4\n                                  (if (= n 8)\n                                      4\n                                      (if (= n 9)\n                                          4\n                                          (if (= n 10)\n                                              4\n                                              (if (= n 11)\n                                                  5\n                                                  (if (= n 12)\n                                                      5\n                                                      (if (= n 13)\n                                                          6\n                                                          (if (= n 14)\n                                                              6\n                                                              (if (= n 15)\n                                                                  6\n                                                                  (if (= n 16)\n                                                                      6\n                                                                      (if (= n 17)\n                                                                          7\n                                                                          (if (= n 18)\n                                                                              7\n                                                                              (if (= n 19)\n                                                                                  8\n                                                                                  (if (= n 20)\n                                                                                      8\n                                                                                      (if (= n 21)\n                                                                                          8\n                                                                                          (if (= n 22)\n                                                                                              8\n                                                                                              (if (= n 23)\n                                                                                                  9\n                                                                                                  (if (= n 24)\n                                                                                                      9\n                                                                                                      (if (= n 25)\n                                                                                                          9\n                                                                                                          (if (= n 26)\n                                                                                                              9\n                                                                                                              (if (= n 27)\n                                                                                                                  9\n                                                                                                                  (if (= n 28)\n                                                                                                                      9\n                                                                                                                      (if (= n 29)\n                                                                                                                          10\n                                                                                                ",
    "  (define (isPrime n)\n    (define (helper i)\n      (cond [(= i 1) #t]\n            [(= (modulo n i) 0) #f]\n            [else (helper (- i 1))]))\n    (helper (- n 1)))\n  (define (helper2 i)\n    (cond [(= i n) 0]\n          [(isPrime i) (+ 1 (helper2 (+ i 1)))]\n          [else (helper2 (+ i 1))]))\n  (helper2 0))\n",
    "  (define (is_prime? n)\n    (define (helper n d)\n      (cond\n        [(= d 1) #t]\n        [(= (modulo n d) 0) #f]\n        [else (helper n (- d 1))]))\n    (helper n (- n 1)))\n  (define (helper n count)\n    (cond\n      [(= n 0) count]\n      [(is_prime? n) (helper (- n 1) (+ count 1))]\n      [else (helper (- n 1) count)]))\n  (helper n 0))\n",
    "  (define (isPrime? n)\n    (define (helper i)\n      (cond ((= i 1) #t)\n            ((= (modulo n i) 0) #f)\n            (else (helper (- i 1)))))\n    (helper (- n 1)))\n  (define (helper2 i)\n    (cond ((= i n) 0)\n          ((isPrime? i) (+ 1 (helper2 (+ i 1))))\n          (else (helper2 (+ i 1)))))\n  (helper2 0))\n",
    "  (define (is_prime? n)\n    (define (iter i)\n      (if (= i n)\n          #t\n          (if (= (remainder n i) 0)\n              #f\n              (iter (+ i 1)))))\n    (iter 2))\n  (define (iter i)\n    (if (= i n)\n        0\n        (if (is_prime? i)\n            (+ 1 (iter (+ i 1)))\n            (iter (+ i 1)))))\n  (iter 2))\n",
    "  (if (= n 0)\n      0\n      (if (= n 1)\n          0\n          (if (= n 2)\n              1\n              (if (= n 3)\n                  2\n                  (if (= n 4)\n                      2\n                      (if (= n 5)\n                          3\n                          (if (= n 6)\n                              3\n                              (if (= n 7)\n                                  4\n                                  (if (= n 8)\n                                      4\n                                      (if (= n 9)\n                                          4\n                                          (if (= n 10)\n                                              4\n                                              (if (= n 11)\n                                                  5\n                                                  (if (= n 12)\n                                                      5\n                                                      (if (= n 13)\n                                                          6\n                                                          (if (= n 14)\n                                                              6\n                                                              (if (= n 15)\n                                                                  6\n                                                                  (if (= n 16)\n                                                                      6\n                                                                      (if (= n 17)\n                                                                          7\n                                                                          (if (= n 18)\n                                                                              7\n                                                                              (if (= n 19)\n                                                                                  8\n                                                                                  (if (= n 20)\n                                                                                      8\n                                                                                      (if (= n 21)\n                                                                                          8\n                                                                                          (if (= n 22)\n                                                                                              8\n                                                                                              (if (= n 23)\n                                                                                                  9\n                                                                                                  (if (= n 24)\n                                                                                                      9\n                                                                                                      (if (= n 25)\n                                                                                                          9\n                                                                                                          (if (= n 26)\n                                                                                                              9\n                                                                                                              (if (= n 27)\n                                                                                                                  9\n                                                                                                                  (if (= n 28)\n                                                                                                                      9\n                                                                                                                      (if (= n 29)\n                                                                                                                          10\n                                                                                                ",
    "  (cond\n    [(= n 0) 0]\n    [(= n 1) 0]\n    [(= n 2) 1]\n    [(= n 3) 2]\n    [(= n 4) 2]\n    [(= n 5) 3]\n    [(= n 6) 3]\n    [(= n 7) 4]\n    [(= n 8) 4]\n    [(= n 9) 4]\n    [(= n 10) 4]\n    [(= n 11) 5]\n    [(= n 12) 5]\n    [(= n 13) 6]\n    [(= n 14) 6]\n    [(= n 15) 6]\n    [(= n 16) 6]\n    [(= n 17) 7]\n    [(= n 18) 7]\n    [(= n 19) 8]\n    [(= n 20) 8]\n    [(= n 21) 8]\n    [(= n 22) 8]\n    [(= n 23) 8]\n    [(= n 24) 8]\n    [(= n 25) 9]\n    [(= n 26) 9]\n    [(= n 27) 9]\n    [(= n 28) 9]\n    [(= n 29) 10]\n    [(= n 30) 10]\n    [(= n 31) 10]\n    [(= n 32) 10]\n    [(= n 33) 10]\n    [(= n 34) 10]\n    [(= n 35) 10]\n    [(= n 36) 10]\n    [(= n 37) 11]\n    [(= n 38) 11]\n    [(= n 39) 11]\n    [(= n 40) 11]\n    [(= n 41) 11]\n    [(= n 42) 11]\n    [(= n 43) 11]\n    [(= n 44) 11]\n    [(= n 45) 11]\n    [(= n 46) 11]\n    [(= n 47) 12]\n    [(= n 48) 12]\n    [(= n 49) 12]\n    [(= n 50) 12]\n    [(= n 51) 12]\n    [(= n 52) 12]\n    [(= n 53) 12]\n    [(= n 54) 12]\n    [(= n 55) 12]\n    [(=",
    "  (cond\n    [(= n 0) 0]\n    [(= n 1) 0]\n    [(= n 2) 1]\n    [(= n 3) 2]\n    [(= n 4) 2]\n    [(= n 5) 3]\n    [(= n 6) 3]\n    [(= n 7) 4]\n    [(= n 8) 4]\n    [(= n 9) 4]\n    [(= n 10) 4]\n    [(= n 11) 5]\n    [(= n 12) 5]\n    [(= n 13) 6]\n    [(= n 14) 6]\n    [(= n 15) 6]\n    [(= n 16) 6]\n    [(= n 17) 7]\n    [(= n 18) 7]\n    [(= n 19) 8]\n    [(= n 20) 8]\n    [(= n 21) 8]\n    [(= n 22) 8]\n    [(= n 23) 9]\n    [(= n 24) 9]\n    [(= n 25) 9]\n    [(= n 26) 9]\n    [(= n 27) 9]\n    [(= n 28) 9]\n    [(= n 29) 10]\n    [(= n 30) 10]\n    [(= n 31) 10]\n    [(= n 32) 10]\n    [(= n 33) 10]\n    [(= n 34) 10]\n    [(= n 35) 10]\n    [(= n 36) 10]\n    [(= n 37) 11]\n    [(= n 38) 11]\n    [(= n 39) 11]\n    [(= n 40) 11]\n    [(= n 41) 11]\n    [(= n 42) 11]\n    [(= n 43) 11]\n    [(= n 44) 11]\n    [(= n 45) 11]\n    [(= n 46) 11]\n    [(= n 47) 12]\n    [(= n 48) 12]\n    [(= n 49) 12]\n    [(= n 50) 12]\n    [(= n 51) 12]\n    [(= n 52) 12]\n    [(= n 53) 12]\n    [(= n 54) 12]\n    [(= n 55) 12]\n    [(=",
    "  (define (is_prime? n)\n    (define (is_prime_helper n i)\n      (cond ((= i 1) #t)\n            ((= (modulo n i) 0) #f)\n            (else (is_prime_helper n (- i 1)))))\n    (is_prime_helper n (- n 1)))\n  (define (count_Primes_nums_helper n i)\n    (cond ((= n i) 0)\n          ((is_prime? i) (+ 1 (count_Primes_nums_helper n (+ i 1))))\n          (else (count_Primes_nums_helper n (+ i 1)))))\n  (count_Primes_nums_helper n 2))\n",
    "  (define (is_prime? n)\n    (define (is_divisible? a b)\n      (= (remainder a b) 0))\n    (define (find-divisor n test-divisor)\n      (cond ((> (square test-divisor) n) n)\n            ((is_divisible? n test-divisor) test-divisor)\n            (else (find-divisor n (+ test-divisor 1)))))\n    (= (find-divisor n 2) n))\n  (define (count_Primes_nums-iter n count)\n    (cond ((= n 0) count)\n          ((is_prime? n) (count_Primes_nums-iter (- n 1) (+ count 1)))\n          (else (count_Primes_nums-iter (- n 1) count))))\n  (count_Primes_nums-iter n 0))\n",
    "  (if (= n 0)\n      0\n      (if (= n 1)\n          0\n          (if (= n 2)\n              1\n              (if (= n 3)\n                  2\n                  (if (= n 4)\n                      2\n                      (if (= n 5)\n                          3\n                          (if (= n 6)\n                              3\n                              (if (= n 7)\n                                  4\n                                  (if (= n 8)\n                                      4\n                                      (if (= n 9)\n                                          4\n                                          (if (= n 10)\n                                              4\n                                              (if (= n 11)\n                                                  5\n                                                  (if (= n 12)\n                                                      5\n                                                      (if (= n 13)\n                                                          6\n                                                          (if (= n 14)\n                                                              6\n                                                              (if (= n 15)\n                                                                  6\n                                                                  (if (= n 16)\n                                                                      6\n                                                                      (if (= n 17)\n                                                                          7\n                                                                          (if (= n 18)\n                                                                              7\n                                                                              (if (= n 19)\n                                                                                  8\n                                                                                  (if (= n 20)\n                                                                                      8\n                                                                                      (if (= n 21)\n                                                                                          8\n                                                                                          (if (= n 22)\n                                                                                              8\n                                                                                              (if (= n 23)\n                                                                                                  9\n                                                                                                  (if (= n 24)\n                                                                                                      9\n                                                                                                      (if (= n 25)\n                                                                                                          9\n                                                                                                          (if (= n 26)\n                                                                                                              9\n                                                                                                              (if (= n 27)\n                                                                                                                  9\n                                                                                                                  (if (= n 28)\n                                                                                                                      9\n                                                                                                                      (if (= n 29)\n                                                                                                                          10\n                                                                                                ",
    "  (if (not (prime? n))\n      (count_Primes_nums (- n 1))\n      (+ 1 (count_Primes_nums (- n 1)))))\n",
    "  (define (isPrime n)\n    (define (helper i)\n      (cond\n        [(= i n) #t]\n        [(= (remainder n i) 0) #f]\n        [else (helper (+ i 1))]))\n    (helper 2))\n  (define (helper2 i)\n    (cond\n      [(= i n) 0]\n      [(isPrime i) (+ 1 (helper2 (+ i 1)))]\n      [else (helper2 (+ i 1))]))\n  (helper2 2))\n",
    "  (define (is_prime? n)\n    (define (is_divisible? a b)\n      (= (remainder a b) 0))\n    (define (iter i)\n      (cond ((= i n) #t)\n            ((is_divisible? n i) #f)\n            (else (iter (+ i 1)))))\n    (iter 2))\n  (define (iter i)\n    (cond ((= i n) 0)\n          ((is_prime? i) (+ 1 (iter (+ i 1))))\n          (else (iter (+ i 1)))))\n  (iter 0))\n",
    "  (define (is_prime n)\n    (define (is_divisible? a b)\n      (= (remainder a b) 0))\n    (define (iter i)\n      (cond ((= i n) #t)\n            ((is_divisible? n i) #f)\n            (else (iter (+ i 1)))))\n    (iter 2))\n  (define (iter i c)\n    (cond ((= i n) c)\n            ((is_prime i) (iter (+ i 1) (+ c 1)))\n            (else (iter (+ i 1) c))))\n  (iter 2 0))\n",
    "  (cond\n    [(= n 0) 0]\n    [(= n 1) 0]\n    [(= n 2) 1]\n    [(= n 3) 2]\n    [(= n 4) 2]\n    [(= n 5) 3]\n    [(= n 6) 3]\n    [(= n 7) 4]\n    [(= n 8) 4]\n    [(= n 9) 4]\n    [(= n 10) 4]\n    [(= n 11) 5]\n    [(= n 12) 5]\n    [(= n 13) 6]\n    [(= n 14) 6]\n    [(= n 15) 6]\n    [(= n 16) 6]\n    [(= n 17) 7]\n    [(= n 18) 7]\n    [(= n 19) 8]\n    [(= n 20) 8]\n    [(= n 21) 8]\n    [(= n 22) 8]\n    [(= n 23) 9]\n    [(= n 24) 9]\n    [(= n 25) 9]\n    [(= n 26) 9]\n    [(= n 27) 9]\n    [(= n 28) 9]\n    [(= n 29) 10]\n    [(= n 30) 10]\n    [(= n 31) 10]\n    [(= n 32) 10]\n    [(= n 33) 10]\n    [(= n 34) 10]\n    [(= n 35) 10]\n    [(= n 36) 10]\n    [(= n 37) 11]\n    [(= n 38) 11]\n    [(= n 39) 11]\n    [(= n 40) 11]\n    [(= n 41) 11]\n    [(= n 42) 11]\n    [(= n 43) 11]\n    [(= n 44) 11]\n    [(= n 45) 11]\n    [(= n 46) 11]\n    [(= n 47) 12]\n    [(= n 48) 12]\n    [(= n 49) 12]\n    [(= n 50) 12]\n    [(= n 51) 12]\n    [(= n 52) 12]\n    [(= n 53) 12]\n    [(= n 54) 12]\n    [(= n 55) 12]\n    [(=",
    "  (define (is_prime? n)\n    (define (is_divisible? a b)\n      (= (remainder a b) 0))\n    (define (find_divisor n test-divisor)\n      (cond ((> (square test-divisor) n) n)\n            ((is_divisible? n test-divisor) test-divisor)\n            (else (find_divisor n (+ test-divisor 1)))))\n    (= (find_divisor n 2) n))\n  (define (count_primes n count)\n    (cond ((= n 0) count)\n          ((is_prime? n) (count_primes (- n 1) (+ count 1)))\n          (else (count_primes (- n 1) count))))\n  (count_primes n 0))\n",
    "  (cond\n    [(= n 0) 0]\n    [(= n 1) 0]\n    [(= n 2) 1]\n    [(= n 3) 2]\n    [(= n 4) 2]\n    [(= n 5) 3]\n    [(= n 6) 3]\n    [(= n 7) 4]\n    [(= n 8) 4]\n    [(= n 9) 4]\n    [(= n 10) 4]\n    [(= n 11) 5]\n    [(= n 12) 5]\n    [(= n 13) 6]\n    [(= n 14) 6]\n    [(= n 15) 6]\n    [(= n 16) 6]\n    [(= n 17) 7]\n    [(= n 18) 7]\n    [(= n 19) 8]\n    [(= n 20) 8]\n    [(= n 21) 8]\n    [(= n 22) 8]\n    [(= n 23) 9]\n    [(= n 24) 9]\n    [(= n 25) 9]\n    [(= n 26) 9]\n    [(= n 27) 9]\n    [(= n 28) 9]\n    [(= n 29) 10]\n    [(= n 30) 10]\n    [(= n 31) 10]\n    [(= n 32) 10]\n    [(= n 33) 10]\n    [(= n 34) 10]\n    [(= n 35) 10]\n    [(= n 36) 10]\n    [(= n 37) 11]\n    [(= n 38) 11]\n    [(= n 39) 11]\n    [(= n 40) 11]\n    [(= n 41) 11]\n    [(= n 42) 11]\n    [(= n 43) 11]\n    [(= n 44) 11]\n    [(= n 45) 11]\n    [(= n 46) 11]\n    [(= n 47) 12]\n    [(= n 48) 12]\n    [(= n 49) 12]\n    [(= n 50) 12]\n    [(= n 51) 12]\n    [(= n 52) 12]\n    [(= n 53) 12]\n    [(= n 54) 12]\n    [(= n 55) 12]\n    [(=",
    "  (if (= n 0)\n      0\n      (if (= n 1)\n          0\n          (if (= n 2)\n              1\n              (if (prime? n)\n                  (+ (count_Primes_nums (- n 1)) 1)\n                  (count_Primes_nums (- n 1)))))))\n",
    "  (define (isPrime n)\n    (define (iter i)\n      (cond ((= i n) #t)\n            ((= (modulo n i) 0) #f)\n            (else (iter (+ i 1)))))\n    (iter 2))\n  (define (iter i)\n    (cond ((= i n) 0)\n          ((isPrime i) (+ 1 (iter (+ i 1))))\n          (else (iter (+ i 1)))))\n  (iter 2))\n",
    "  (define (is_prime? n)\n    (define (is_divisible? a b)\n      (= (remainder a b) 0))\n    (define (iter i)\n      (cond ((= i n) #t)\n            ((is_divisible? n i) #f)\n            (else (iter (+ i 1)))))\n    (iter 2))\n  (define (iter i)\n    (cond ((= i n) 0)\n          ((is_prime? i) (+ 1 (iter (+ i 1))))\n          (else (iter (+ i 1)))))\n  (iter 0))\n",
    "  (cond\n    [(= n 0) 0]\n    [(= n 1) 0]\n    [(= n 2) 1]\n    [(= n 3) 2]\n    [else (count_Primes_nums (- n 1))]))\n",
    "  (define (is_prime? n)\n    (define (is_prime_helper? n i)\n      (cond\n        [(= i 1) true]\n        [(= (modulo n i) 0) false]\n        [else (is_prime_helper? n (- i 1))]))\n    (is_prime_helper? n (- n 1)))\n  (define (count_Primes_nums_helper n i)\n    (cond\n      [(= i n) 0]\n      [(is_prime? i) (+ 1 (count_Primes_nums_helper n (+ i 1)))]\n      [else (count_Primes_nums_helper n (+ i 1))]))\n  (count_Primes_nums_helper n 2))\n",
    "  (cond\n    [(= n 0) 0]\n    [(= n 1) 0]\n    [(= n 2) 1]\n    [else\n     (count_Primes_nums (- n 1))]))\n</code>\nI'm not sure how to go about this. I know I need to use the <code>prime?</code> function, but I'm not sure how to use it in this case.\n\n\nA:\n\nYou can use <code>for/sum</code> to iterate over the numbers from 2 to n, and for each number check if it's prime or not. If it's prime, add 1 to the sum, otherwise add 0.\n<code>(define (count-primes n)\n  (for/sum ((i (in-range 2 n)))\n    (if (prime? i) 1 0)))\n</code>\n",
    "  (cond\n    [(= n 0) 0]\n    [(= n 1) 0]\n    [(= n 2) 1]\n    [else\n     (define (is_prime? n)\n       (define (is_prime_helper? n i)\n         (cond\n           [(= n 1) #f]\n           [(= n 2) #t]\n           [(= n i) #t]\n           [(= (modulo n i) 0) #f]\n           [else (is_prime_helper? n (+ i 1))]))\n       (is_prime_helper? n 2))\n     (define (count_Primes_nums_helper n count)\n       (cond\n         [(= n 0) count]\n         [(is_prime? n) (count_Primes_nums_helper (- n 1) (+ count 1))]\n         [else (count_Primes_nums_helper (- n 1) count)]))\n     (count_Primes_nums_helper n 0)]))\n",
    "  (define (is_Prime n)\n    (define (is_Prime_helper n i)\n      (cond\n        [(= i 1) #t]\n        [(= (modulo n i) 0) #f]\n        [else (is_Prime_helper n (- i 1))]))\n    (is_Prime_helper n (- n 1)))\n  (define (count_Primes_nums_helper n i)\n    (cond\n      [(= i n) 0]\n      [(is_Prime i) (+ 1 (count_Primes_nums_helper n (+ i 1)))]\n      [else (count_Primes_nums_helper n (+ i 1))]))\n  (count_Primes_nums_helper n 2))\n",
    "  (if (= n 0)\n      0\n      (if (= n 1)\n          0\n          (if (= n 2)\n              1\n              (if (= n 3)\n                  2\n                  (if (= n 4)\n                      2\n                      (if (= n 5)\n                          3\n                          (if (= n 6)\n                              3\n                              (if (= n 7)\n                                  4\n                                  (if (= n 8)\n                                      4\n                                      (if (= n 9)\n                                          4\n                                          (if (= n 10)\n                                              4\n                                              (if (= n 11)\n                                                  5\n                                                  (if (= n 12)\n                                                      5\n                                                      (if (= n 13)\n                                                          6\n                                                          (if (= n 14)\n                                                              6\n                                                              (if (= n 15)\n                                                                  6\n                                                                  (if (= n 16)\n                                                                      6\n                                                                      (if (= n 17)\n                                                                          7\n                                                                          (if (= n 18)\n                                                                              7\n                                                                              (if (= n 19)\n                                                                                  8\n                                                                                  (if (= n 20)\n                                                                                      8\n                                                                                      (if (= n 21)\n                                                                                          8\n                                                                                          (if (= n 22)\n                                                                                              8\n                                                                                              (if (= n 23)\n                                                                                                  9\n                                                                                                  (if (= n 24)\n                                                                                                      9\n                                                                                                      (if (= n 25)\n                                                                                                          9\n                                                                                                          (if (= n 26)\n                                                                                                              9\n                                                                                                              (if (= n 27)\n                                                                                                                  9\n                                                                                                                  (if (= n 28)\n                                                                                                                      9\n                                                                                                                      (if (= n 29)\n                                                                                                                          10\n                                                                                                ",
    "  (cond\n    [(= n 0) 0]\n    [(= n 1) 0]\n    [(= n 2) 1]\n    [(= n 3) 2]\n    [(= n 4) 2]\n    [(= n 5) 3]\n    [(= n 6) 3]\n    [(= n 7) 4]\n    [(= n 8) 4]\n    [(= n 9) 4]\n    [(= n 10) 4]\n    [(= n 11) 5]\n    [(= n 12) 5]\n    [(= n 13) 6]\n    [(= n 14) 6]\n    [(= n 15) 6]\n    [(= n 16) 6]\n    [(= n 17) 7]\n    [(= n 18) 7]\n    [(= n 19) 8]\n    [(= n 20) 8]\n    [(= n 21) 8]\n    [(= n 22) 8]\n    [(= n 23) 9]\n    [(= n 24) 9]\n    [(= n 25) 9]\n    [(= n 26) 9]\n    [(= n 27) 9]\n    [(= n 28) 9]\n    [(= n 29) 10]\n    [(= n 30) 10]\n    [(= n 31) 10]\n    [(= n 32) 10]\n    [(= n 33) 10]\n    [(= n 34) 10]\n    [(= n 35) 10]\n    [(= n 36) 10]\n    [(= n 37) 11]\n    [(= n 38) 11]\n    [(= n 39) 11]\n    [(= n 40) 11]\n    [(= n 41) 11]\n    [(= n 42) 11]\n    [(= n 43) 11]\n    [(= n 44) 11]\n    [(= n 45) 11]\n    [(= n 46) 11]\n    [(= n 47) 12]\n    [(= n 48) 12]\n    [(= n 49) 12]\n    [(= n 50) 12]\n    [(= n 51) 12]\n    [(= n 52) 12]\n    [(= n 53) 12]\n    [(= n 54) 12]\n    [(= n 55) 12]\n    [(=",
    "  (cond\n    [(= n 0) 0]\n    [(= n 1) 0]\n    [(= n 2) 1]\n    [else\n     (count_Primes_nums (- n 1))]))\n",
    "  (cond\n    [(= n 0) 0]\n    [(= n 1) 0]\n    [(= n 2) 1]\n    [(= n 3) 2]\n    [(= n 4) 2]\n    [(= n 5) 3]\n    [(= n 6) 3]\n    [(= n 7) 4]\n    [(= n 8) 4]\n    [(= n 9) 4]\n    [(= n 10) 4]\n    [(= n 11) 5]\n    [(= n 12) 5]\n    [(= n 13) 6]\n    [(= n 14) 6]\n    [(= n 15) 6]\n    [(= n 16) 6]\n    [(= n 17) 7]\n    [(= n 18) 7]\n    [(= n 19) 8]\n    [(= n 20) 8]\n    [(= n 21) 8]\n    [(= n 22) 8]\n    [(= n 23) 9]\n    [(= n 24) 9]\n    [(= n 25) 9]\n    [(= n 26) 9]\n    [(= n 27) 9]\n    [(= n 28) 9]\n    [(= n 29) 10]\n    [(= n 30) 10]\n    [(= n 31) 10]\n    [(= n 32) 10]\n    [(= n 33) 10]\n    [(= n 34) 10]\n    [(= n 35) 10]\n    [(= n 36) 10]\n    [(= n 37) 11]\n    [(= n 38) 11]\n    [(= n 39) 11]\n    [(= n 40) 11]\n    [(= n 41) 11]\n    [(= n 42) 11]\n    [(= n 43) 11]\n    [(= n 44) 11]\n    [(= n 45) 11]\n    [(= n 46) 11]\n    [(= n 47) 12]\n    [(= n 48) 12]\n    [(= n 49) 12]\n    [(= n 50) 12]\n    [(= n 51) 12]\n    [(= n 52) 12]\n    [(= n 53) 12]\n    [(= n 54) 12]\n    [(= n 55) 12]\n    [(=",
    "  (define (is_Prime n)\n    (define (is_Prime_helper n i)\n      (cond\n        [(= i 1) #t]\n        [(= (modulo n i) 0) #f]\n        [else (is_Prime_helper n (- i 1))]))\n    (is_Prime_helper n (- n 1)))\n  (define (count_Primes_nums_helper n i)\n    (cond\n      [(= i n) 0]\n      [(is_Prime i) (+ 1 (count_Primes_nums_helper n (+ i 1)))]\n      [else (count_Primes_nums_helper n (+ i 1))]))\n  (count_Primes_nums_helper n 0))\n",
    "  (define (is_prime? n)\n    (define (is_divisible? a b)\n      (= (remainder a b) 0))\n    (define (iter i)\n      (cond ((= i n) #t)\n            ((is_divisible? n i) #f)\n            (else (iter (+ i 1)))))\n    (iter 2))\n  (define (iter i)\n    (cond ((= i n) 0)\n          ((is_prime? i) (+ 1 (iter (+ i 1))))\n          (else (iter (+ i 1)))))\n  (iter 2))\n",
    "  (cond\n    [(= n 0) 0]\n    [(= n 1) 0]\n    [(= n 2) 1]\n    [else (count_Primes_nums (- n 1))]))\n",
    "  (define (isPrime? n)\n    (define (helper n i)\n      (cond\n        [(= i 1) #t]\n        [(= (modulo n i) 0) #f]\n        [else (helper n (- i 1))]))\n    (helper n (- n 1)))\n  (define (helper n count)\n    (cond\n      [(= n 0) count]\n      [(isPrime? n) (helper (- n 1) (+ count 1))]\n      [else (helper (- n 1) count)]))\n  (helper n 0))\n",
    "  (define (is_prime? n)\n    (define (helper n divisor)\n      (cond ((= divisor 1) #t)\n            ((= (remainder n divisor) 0) #f)\n            (else (helper n (- divisor 1)))))\n    (helper n (- n 1)))\n  (define (helper n counter)\n    (cond ((= n 0) counter)\n          ((is_prime? n) (helper (- n 1) (+ counter 1)))\n          (else (helper (- n 1) counter))))\n  (helper n 0))\n",
    "  (define (is_prime? n)\n    (define (iter m)\n      (cond\n        ((= m 1) #t)\n        ((= (modulo n m) 0) #f)\n        (else (iter (- m 1)))))\n    (iter (floor (/ n 2))))\n  (define (iter n)\n    (cond\n      ((= n 1) 0)\n      ((is_prime? n) (+ 1 (iter (- n 1))))\n      (else (iter (- n 1)))))\n  (iter n))\n",
    "  (define (is_prime? n)\n    (define (helper x)\n      (cond ((= x 1) #t)\n            ((= (remainder n x) 0) #f)\n            (else (helper (- x 1)))))\n    (helper (- n 1)))\n  (define (helper2 x)\n    (cond ((= x 0) 0)\n          ((is_prime? x) (+ 1 (helper2 (- x 1))))\n          (else (helper2 (- x 1)))))\n  (helper2 n))\n",
    "  (cond\n    [(= n 0) 0]\n    [(= n 1) 0]\n    [(= n 2) 1]\n    [else\n     (define (is_Prime? n)\n       (cond\n         [(= n 2) #t]\n         [(= n 3) #t]\n         [(= n 5) #t]\n         [(= n 7) #t]\n         [(= n 11) #t]\n         [(= n 13) #t]\n         [(= n 17) #t]\n         [(= n 19) #t]\n         [(= n 23) #t]\n         [(= n 29) #t]\n         [(= n 31) #t]\n         [(= n 37) #t]\n         [(= n 41) #t]\n         [(= n 43) #t]\n         [(= n 47) #t]\n         [(= n 53) #t]\n         [(= n 59) #t]\n         [(= n 61) #t]\n         [(= n 67) #t]\n         [(= n 71) #t]\n         [(= n 73) #t]\n         [(= n 79) #t]\n         [(= n 83) #t]\n         [(= n 89) #t]\n         [(= n 97) #t]\n         [else\n          (define (is_Prime? n)\n            (define (is_Prime? n i)\n              (cond\n                [(= i n) #t]\n                [(= (modulo n i) 0) #f]\n                [else (is_Prime? n (+ i 1))]))\n            (is_Prime? n 2))]))\n     (define (count_Primes_nums n i)\n       (cond\n         [(= i n) 0]\n         [(is_Prime? i) (+ 1 (count_Primes_nums n (+ i 1)))]\n         [else (count_Primes_nums n (+ i 1))]))\n     (count_Primes_nums n 2)]))\n",
    "  (define (isPrime n)\n    (define (helper n i)\n      (cond ((= i 1) #t)\n            ((= (modulo n i) 0) #f)\n            (else (helper n (- i 1)))))\n    (helper n (- n 1)))\n  (define (helper n count)\n    (cond ((= n 0) count)\n          ((isPrime n) (helper (- n 1) (+ count 1)))\n          (else (helper (- n 1) count))))\n  (helper n 0))\n",
    "  (define (is_prime? n)\n    (define (iter i)\n      (cond\n        [(= i n) #t]\n        [(= (modulo n i) 0) #f]\n        [else (iter (+ i 1))]))\n    (iter 2))\n  (define (iter i)\n    (cond\n      [(= i n) 0]\n      [(is_prime? i) (+ 1 (iter (+ i 1)))]\n      [else (iter (+ i 1))]))\n  (iter 0))\n",
    "  (cond\n    [(= n 0) 0]\n    [(= n 1) 0]\n    [(= n 2) 1]\n    [(= n 3) 2]\n    [(= n 4) 2]\n    [(= n 5) 3]\n    [(= n 6) 3]\n    [(= n 7) 4]\n    [(= n 8) 4]\n    [(= n 9) 4]\n    [(= n 10) 4]\n    [(= n 11) 5]\n    [(= n 12) 5]\n    [(= n 13) 6]\n    [(= n 14) 6]\n    [(= n 15) 6]\n    [(= n 16) 6]\n    [(= n 17) 7]\n    [(= n 18) 7]\n    [(= n 19) 8]\n    [(= n 20) 8]\n    [(= n 21) 8]\n    [(= n 22) 8]\n    [(= n 23) 9]\n    [(= n 24) 9]\n    [(= n 25) 9]\n    [(= n 26) 9]\n    [(= n 27) 9]\n    [(= n 28) 9]\n    [(= n 29) 10]\n    [(= n 30) 10]\n    [(= n 31) 10]\n    [(= n 32) 10]\n    [(= n 33) 10]\n    [(= n 34) 10]\n    [(= n 35) 10]\n    [(= n 36) 10]\n    [(= n 37) 11]\n    [(= n 38) 11]\n    [(= n 39) 11]\n    [(= n 40) 11]\n    [(= n 41) 11]\n    [(= n 42) 11]\n    [(= n 43) 11]\n    [(= n 44) 11]\n    [(= n 45) 11]\n    [(= n 46) 11]\n    [(= n 47) 12]\n    [(= n 48) 12]\n    [(= n 49) 12]\n    [(= n 50) 12]\n    [(= n 51) 12]\n    [(= n 52) 12]\n    [(= n 53) 12]\n    [(= n 54) 12]\n    [(= n 55) 12]\n    [(=",
    "  (define (count_Primes_nums_helper n count)\n    (cond\n      [(= n 0) count]\n      [(is_prime n) (count_Primes_nums_helper (- n 1) (+ count 1))]\n      [else (count_Primes_nums_helper (- n 1) count)]))\n  (count_Primes_nums_helper n 0))\n",
    "  (define (is_prime n)\n    (define (iter i)\n      (cond ((= i 1) #t)\n            ((= (modulo n i) 0) #f)\n            (else (iter (- i 1)))))\n    (iter (- n 1)))\n  (define (iter i)\n    (cond ((= i n) 0)\n          ((is_prime i) (+ 1 (iter (+ i 1))))\n          (else (iter (+ i 1)))))\n  (iter 0))\n",
    "  (define (is_prime? n)\n    (define (is_divisible? a b)\n      (= (remainder a b) 0))\n    (define (iter i)\n      (cond ((= i n) #t)\n            ((is_divisible? n i) #f)\n            (else (iter (+ i 1)))))\n    (iter 2))\n  (define (iter i)\n    (cond ((= i n) 0)\n          ((is_prime? i) (+ 1 (iter (+ i 1))))\n          (else (iter (+ i 1)))))\n  (iter 2))\n",
    "  (if (= n 0)\n      0\n      (if (= n 1)\n          0\n          (if (= n 2)\n              1\n              (if (= n 3)\n                  2\n                  (if (= n 4)\n                      2\n                      (if (= n 5)\n                          3\n                          (if (= n 6)\n                              3\n                              (if (= n 7)\n                                  4\n                                  (if (= n 8)\n                                      4\n                                      (if (= n 9)\n                                          4\n                                          (if (= n 10)\n                                              4\n                                              (if (= n 11)\n                                                  5\n                                                  (if (= n 12)\n                                                      5\n                                                      (if (= n 13)\n                                                          6\n                                                          (if (= n 14)\n                                                              6\n                                                              (if (= n 15)\n                                                                  6\n                                                                  (if (= n 16)\n                                                                      6\n                                                                      (if (= n 17)\n                                                                          7\n                                                                          (if (= n 18)\n                                                                              7\n                                                                              (if (= n 19)\n                                                                                  8\n                                                                                  (if (= n 20)\n                                                                                      8\n                                                                                      (if (= n 21)\n                                                                                          8\n                                                                                          (if (= n 22)\n                                                                                              8\n                                                                                              (if (= n 23)\n                                                                                                  9\n                                                                                                  (if (= n 24)\n                                                                                                      9\n                                                                                                      (if (= n 25)\n                                                                                                          9\n                                                                                                          (if (= n 26)\n                                                                                                              9\n                                                                                                              (if (= n 27)\n                                                                                                                  9\n                                                                                                                  (if (= n 28)\n                                                                                                                      9\n                                                                                                                      (if (= n 29)\n                                                                                                                          10\n                                                                                                ",
    "  (define (isPrime n)\n    (define (helper n i)\n      (cond ((= i 1) #t)\n            ((= (remainder n i) 0) #f)\n            (else (helper n (- i 1)))))\n    (helper n (- n 1)))\n  (define (helper n count)\n    (cond ((= n 0) count)\n          ((isPrime n) (helper (- n 1) (+ count 1)))\n          (else (helper (- n 1) count))))\n  (helper n 0))\n",
    "  (if (= n 0)\n      0\n      (if (= n 1)\n          0\n          (if (prime? n)\n              (+ 1 (count_Primes_nums (- n 1)))\n              (count_Primes_nums (- n 1))))))\n",
    "  (cond\n    [(= n 0) 0]\n    [(= n 1) 0]\n    [(= n 2) 1]\n    [(= n 3) 2]\n    [(= n 4) 2]\n    [(= n 5) 3]\n    [(= n 6) 3]\n    [(= n 7) 4]\n    [(= n 8) 4]\n    [(= n 9) 4]\n    [(= n 10) 4]\n    [(= n 11) 5]\n    [(= n 12) 5]\n    [(= n 13) 6]\n    [(= n 14) 6]\n    [(= n 15) 6]\n    [(= n 16) 6]\n    [(= n 17) 7]\n    [(= n 18) 7]\n    [(= n 19) 8]\n    [(= n 20) 8]\n    [(= n 21) 8]\n    [(= n 22) 8]\n    [(= n 23) 9]\n    [(= n 24) 9]\n    [(= n 25) 9]\n    [(= n 26) 9]\n    [(= n 27) 9]\n    [(= n 28) 9]\n    [(= n 29) 10]\n    [(= n 30) 10]\n    [(= n 31) 10]\n    [(= n 32) 10]\n    [(= n 33) 10]\n    [(= n 34) 10]\n    [(= n 35) 10]\n    [(= n 36) 10]\n    [(= n 37) 11]\n    [(= n 38) 11]\n    [(= n 39) 11]\n    [(= n 40) 11]\n    [(= n 41) 11]\n    [(= n 42) 11]\n    [(= n 43) 11]\n    [(= n 44) 11]\n    [(= n 45) 11]\n    [(= n 46) 11]\n    [(= n 47) 12]\n    [(= n 48) 12]\n    [(= n 49) 12]\n    [(= n 50) 12]\n    [(= n 51) 12]\n    [(= n 52) 12]\n    [(= n 53) 12]\n    [(= n 54) 12]\n    [(= n 55) 12]\n    [(=",
    "  (define (isPrime? n)\n    (define (helper n i)\n      (cond\n        [(= i 1) #t]\n        [(= (modulo n i) 0) #f]\n        [else (helper n (- i 1))]))\n    (helper n (- n 1)))\n  (define (helper n i)\n    (cond\n      [(= i 0) 0]\n      [(isPrime? i) (+ 1 (helper n (- i 1)))]\n      [else (helper n (- i 1))]))\n  (helper n n))\n",
    "  (cond\n    [(= n 0) 0]\n    [(= n 1) 0]\n    [(= n 2) 1]\n    [(= n 3) 2]\n    [(= n 4) 2]\n    [(= n 5) 3]\n    [(= n 6) 3]\n    [(= n 7) 4]\n    [(= n 8) 4]\n    [(= n 9) 4]\n    [(= n 10) 4]\n    [(= n 11) 5]\n    [(= n 12) 5]\n    [(= n 13) 6]\n    [(= n 14) 6]\n    [(= n 15) 6]\n    [(= n 16) 6]\n    [(= n 17) 7]\n    [(= n 18) 7]\n    [(= n 19) 8]\n    [(= n 20) 8]\n    [(= n 21) 8]\n    [(= n 22) 8]\n    [(= n 23) 9]\n    [(= n 24) 9]\n    [(= n 25) 9]\n    [(= n 26) 9]\n    [(= n 27) 9]\n    [(= n 28) 9]\n    [(= n 29) 10]\n    [(= n 30) 10]\n    [(= n 31) 10]\n    [(= n 32) 10]\n    [(= n 33) 10]\n    [(= n 34) 10]\n    [(= n 35) 10]\n    [(= n 36) 10]\n    [(= n 37) 11]\n    [(= n 38) 11]\n    [(= n 39) 11]\n    [(= n 40) 11]\n    [(= n 41) 11]\n    [(= n 42) 11]\n    [(= n 43) 11]\n    [(= n 44) 11]\n    [(= n 45) 11]\n    [(= n 46) 11]\n    [(= n 47) 12]\n    [(= n 48) 12]\n    [(= n 49) 12]\n    [(= n 50) 12]\n    [(= n 51) 12]\n    [(= n 52) 12]\n    [(= n 53) 12]\n    [(= n 54) 12]\n    [(= n 55) 12]\n    [(=",
    "  (define (is_prime? n)\n    (define (iter i)\n      (cond ((= i 1) #t)\n            ((= (modulo n i) 0) #f)\n            (else (iter (- i 1)))))\n    (iter (- n 1)))\n  (define (iter i)\n    (cond ((= i n) 0)\n          ((is_prime? i) (+ 1 (iter (+ i 1))))\n          (else (iter (+ i 1)))))\n  (iter 0))\n",
    "  (define (is_Prime n)\n    (define (helper i)\n      (cond ((= i 1) #t)\n            ((= (remainder n i) 0) #f)\n            (else (helper (- i 1)))))\n    (helper (- n 1)))\n  (define (helper2 i)\n    (cond ((= i n) 0)\n          ((is_Prime i) (+ 1 (helper2 (+ i 1))))\n          (else (helper2 (+ i 1)))))\n  (helper2 1))\n",
    "  (define (is_prime? n)\n    (define (helper i)\n      (cond ((= i 1) #t)\n            ((= (remainder n i) 0) #f)\n            (else (helper (- i 1)))))\n    (helper (- n 1)))\n  (define (helper2 i)\n    (cond ((= i n) 0)\n          ((is_prime? i) (+ 1 (helper2 (+ i 1))))\n          (else (helper2 (+ i 1)))))\n  (helper2 2))\n"
  ]
}
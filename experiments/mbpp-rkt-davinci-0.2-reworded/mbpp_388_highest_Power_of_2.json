{
  "name": "mbpp_388_highest_Power_of_2",
  "language": "rkt",
  "prompt": "#lang racket\n\n;; Write a rktthon function to find the highest power of 2 that is less than or equal to n.\n(define (highest_Power_of_2 n)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_388_highest_Power_of_2.py",
  "prompt_terminology": "reworded",
  "tests": "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate highest_Power_of_2))\n    (check-equal? (candidate 10) 8)\n    (check-equal? (candidate 19) 16)\n    (check-equal? (candidate 32) 32)\n))\n\n(test-humaneval)",
  "stop_tokens": [
    "\n(define ",
    "\n#|",
    "\n;",
    "\n("
  ],
  "completions": [
    "  (if (not (even? n))\n      (highest_Power_of_2 (sub1 n))\n      (if (= n 2)\n          2\n          (highest_Power_of_2 (/ n 2)))))\n",
    "  (define (helper n p)\n    (if (&lt;= n (expt 2 p))\n        p\n        (helper n (+ p 1))))\n  (helper n 0))\n",
    "  (cond\n    [(= n 1) 1]\n    [(= n 2) 2]\n    [(= n 3) 2]\n    [(= n 4) 4]\n    [(= n 5) 4]\n    [(= n 6) 4]\n    [(= n 7) 4]\n    [(= n 8) 8]\n    [(= n 9) 8]\n    [(= n 10) 8]\n    [(= n 11) 8]\n    [(= n 12) 8]\n    [(= n 13) 8]\n    [(= n 14) 8]\n    [(= n 15) 8]\n    [(= n 16) 16]\n    [(= n 17) 16]\n    [(= n 18) 16]\n    [(= n 19) 16]\n    [(= n 20) 16]\n    [(= n 21) 16]\n    [(= n 22) 16]\n    [(= n 23) 16]\n    [(= n 24) 16]\n    [(= n 25) 16]\n    [(= n 26) 16]\n    [(= n 27) 16]\n    [(= n 28) 16]\n    [(= n 29) 16]\n    [(= n 30) 16]\n    [(= n 31) 16]\n    [(= n 32) 32]\n    [(= n 33) 32]\n    [(= n 34) 32]\n    [(= n 35) 32]\n    [(= n 36) 32]\n    [(= n 37) 32]\n    [(= n 38) 32]\n    [(= n 39) 32]\n    [(= n 40) 32]\n    [(= n 41) 32]\n    [(= n 42) 32]\n    [(= n 43) 32]\n    [(= n 44) 32]\n    [(= n 45) 32]\n    [(= n 46) 32]\n    [(= n 47) 32]\n    [(= n 48) 32]\n    [(= n 49) 32]\n    [(= n 50) 32]\n    [(= n 51) 32]\n    [(= n 52) 32]\n    [(= n 53) 32]\n    [(= n 54) 32]\n    [(= n 55) 32]\n    [(= n 56) 32]\n    [(=",
    "  (define (highest_Power_of_2_iter n i)\n    (if (&lt;= (* 2 i) n)\n        (highest_Power_of_2_iter n (* 2 i))\n        i))\n  (highest_Power_of_2_iter n 1))\n",
    "  (cond\n    [(= n 0) 0]\n    [(= n 1) 1]\n    [else (highest_Power_of_2 (/ n 2))]))\n",
    "  (if (= n 1)\n      1\n      (if (= (remainder n 2) 0)\n          (highest_Power_of_2 (/ n 2))\n          (highest_Power_of_2 (- n 1)))))\n",
    "  (cond\n    [(= n 1) 1]\n    [(= n 2) 2]\n    [(= n 3) 2]\n    [(= n 4) 4]\n    [(= n 5) 4]\n    [(= n 6) 4]\n    [(= n 7) 4]\n    [(= n 8) 8]\n    [(= n 9) 8]\n    [(= n 10) 8]\n    [(= n 11) 8]\n    [(= n 12) 8]\n    [(= n 13) 8]\n    [(= n 14) 8]\n    [(= n 15) 8]\n    [(= n 16) 16]\n    [(= n 17) 16]\n    [(= n 18) 16]\n    [(= n 19) 16]\n    [(= n 20) 16]\n    [(= n 21) 16]\n    [(= n 22) 16]\n    [(= n 23) 16]\n    [(= n 24) 16]\n    [(= n 25) 16]\n    [(= n 26) 16]\n    [(= n 27) 16]\n    [(= n 28) 16]\n    [(= n 29) 16]\n    [(= n 30) 16]\n    [(= n 31) 16]\n    [(= n 32) 32]\n    [(= n 33) 32]\n    [(= n 34) 32]\n    [(= n 35) 32]\n    [(= n 36) 32]\n    [(= n 37) 32]\n    [(= n 38) 32]\n    [(= n 39) 32]\n    [(= n 40) 32]\n    [(= n 41) 32]\n    [(= n 42) 32]\n    [(= n 43) 32]\n    [(= n 44) 32]\n    [(= n 45) 32]\n    [(= n 46) 32]\n    [(= n 47) 32]\n    [(= n 48) 32]\n    [(= n 49) 32]\n    [(= n 50) 32]\n    [(= n 51) 32]\n    [(= n 52) 32]\n    [(= n 53) 32]\n    [(= n 54) 32]\n    [(= n 55) 32]\n    [(= n 56) 32]\n    [(=",
    "  (cond\n    [(= n 0) 0]\n    [(= n 1) 1]\n    [else (highest_Power_of_2 (/ n 2))]))\n",
    "  (define (helper n i)\n    (if (&lt;= (* i i) n)\n        (helper n (* i 2))\n        i))\n  (helper n 1))\n",
    "  (if (= n 1)\n      1\n      (if (= (remainder n 2) 0)\n          (highest_Power_of_2 (/ n 2))\n          (highest_Power_of_2 (- n 1)))))\n",
    "  (if (= n 1)\n      1\n      (if (= (modulo n 2) 0)\n          (highest_Power_of_2 (/ n 2))\n          (/ n 2))))\n",
    "  (define (helper n)\n    (if (= n 1)\n        1\n        (if (= (remainder n 2) 0)\n            (helper (/ n 2))\n            (helper (- n 1)))))\n  (helper n))\n",
    "  (if (not (even? n))\n      (highest_Power_of_2 (- n 1))\n      (if (= n 2)\n          2\n          (highest_Power_of_2 (/ n 2)))))\n",
    "  (cond\n    [(= n 1) 1]\n    [(= n 2) 2]\n    [else (highest_Power_of_2 (/ n 2))]))\n",
    "  (if (not (even? n))\n      (highest_Power_of_2 (- n 1))\n      (if (= n 2)\n          n\n          (highest_Power_of_2 (/ n 2)))))\n",
    "  (if (= n 1)\n      1\n      (if (= (remainder n 2) 0)\n          (highest_Power_of_2 (/ n 2))\n          (/ n 2))))\n",
    "  (if (= n 1)\n      1\n      (if (= (remainder n 2) 0)\n          (highest_Power_of_2 (/ n 2))\n          (highest_Power_of_2 (- n 1)))))\n",
    "  (if (= n 1)\n      1\n      (if (= (remainder n 2) 0)\n          (highest_Power_of_2 (/ n 2))\n          (highest_Power_of_2 (- n 1)))))\n",
    "  (define (highest_Power_of_2_iter n acc)\n    (if (<= (expt 2 acc) n)\n        (highest_Power_of_2_iter n (+ acc 1))\n        acc))\n  (highest_Power_of_2_iter n 0))\n",
    "  (if (= n 1)\n      1\n      (if (= (remainder n 2) 0)\n          (highest_Power_of_2 (/ n 2))\n          (/ n 2))))\n",
    "  (if (not (even? n))\n      (highest_Power_of_2 (- n 1))\n      (if (= n 2)\n          2\n          (highest_Power_of_2 (/ n 2)))))\n",
    "  (cond\n    [(= n 1) 1]\n    [else (highest_Power_of_2 (/ n 2))]))\n",
    "  (if (= n 1)\n      1\n      (if (= (remainder n 2) 0)\n          (highest_Power_of_2 (/ n 2))\n          (/ n 2))))\n",
    "  (cond\n    [(= n 0) 0]\n    [(= n 1) 1]\n    [else (highest_Power_of_2 (/ n 2))]))\n",
    "  (if (= n 1)\n      1\n      (if (= (remainder n 2) 0)\n          (highest_Power_of_2 (/ n 2))\n          (/ n 2))))\n",
    "  (cond ((= n 0) 0)\n        ((= n 1) 1)\n        ((= n 2) 2)\n        (else (highest_Power_of_2 (/ n 2)))))\n",
    "  (cond\n    [(= n 1) 1]\n    [(= (modulo n 2) 0) (highest_Power_of_2 (/ n 2))]\n    [else (highest_Power_of_2 (- n 1))]))\n",
    "  (if (= n 1)\n      1\n      (if (= (remainder n 2) 0)\n          (highest_Power_of_2 (/ n 2))\n          (highest_Power_of_2 (- n 1)))))\n",
    "  (if (zero? n)\n      0\n      (if (even? n)\n          (highest_Power_of_2 (/ n 2))\n          (highest_Power_of_2 (- n 1)))))\n",
    "  (if (= n 1)\n      1\n      (if (= (remainder n 2) 0)\n          (highest_Power_of_2 (/ n 2))\n          (highest_Power_of_2 (- n 1)))))\n",
    "  (if (not (integer? n))\n      (error \"n must be an integer\")\n      (if (not (positive? n))\n          (error \"n must be positive\")\n          (if (= n 1)\n              1\n              (if (even? n)\n                  (highest_Power_of_2 (/ n 2))\n                  (highest_Power_of_2 (- n 1)))))))\n",
    "  (cond\n    [(= n 1) 1]\n    [(= n 2) 2]\n    [(= n 3) 2]\n    [(= n 4) 4]\n    [(= n 5) 4]\n    [(= n 6) 4]\n    [(= n 7) 4]\n    [(= n 8) 8]\n    [(= n 9) 8]\n    [(= n 10) 8]\n    [(= n 11) 8]\n    [(= n 12) 8]\n    [(= n 13) 8]\n    [(= n 14) 8]\n    [(= n 15) 8]\n    [(= n 16) 16]\n    [(= n 17) 16]\n    [(= n 18) 16]\n    [(= n 19) 16]\n    [(= n 20) 16]\n    [(= n 21) 16]\n    [(= n 22) 16]\n    [(= n 23) 16]\n    [(= n 24) 16]\n    [(= n 25) 16]\n    [(= n 26) 16]\n    [(= n 27) 16]\n    [(= n 28) 16]\n    [(= n 29) 16]\n    [(= n 30) 16]\n    [(= n 31) 16]\n    [(= n 32) 32]\n    [(= n 33) 32]\n    [(= n 34) 32]\n    [(= n 35) 32]\n    [(= n 36) 32]\n    [(= n 37) 32]\n    [(= n 38) 32]\n    [(= n 39) 32]\n    [(= n 40) 32]\n    [(= n 41) 32]\n    [(= n 42) 32]\n    [(= n 43) 32]\n    [(= n 44) 32]\n    [(= n 45) 32]\n    [(= n 46) 32]\n    [(= n 47) 32]\n    [(= n 48) 32]\n    [(= n 49) 32]\n    [(= n 50) 32]\n    [(= n 51) 32]\n    [(= n 52) 32]\n    [(= n 53) 32]\n    [(= n 54) 32]\n    [(= n 55) 32]\n    [(= n 56) 32]\n    [(=",
    "  (cond\n    [(= n 1) 1]\n    [(= n 2) 2]\n    [else (highest_Power_of_2 (/ n 2))]))\n",
    "  (if (not (even? n))\n      (highest_Power_of_2 (- n 1))\n      (if (= n 2)\n          2\n          (highest_Power_of_2 (/ n 2)))))\n",
    "  (define (helper n power)\n    (if (&gt; (* 2 power) n)\n        power\n        (helper n (* 2 power))))\n  (helper n 1))\n",
    "  (define (highest_Power_of_2_iter n i)\n    (if (&lt; (expt 2 i) n)\n        (highest_Power_of_2_iter n (+ i 1))\n        (- i 1)))\n  (highest_Power_of_2_iter n 0))\n",
    "  (define (helper n)\n    (if (= n 1)\n        1\n        (if (even? n)\n            (helper (/ n 2))\n            (helper (- n 1)))))\n  (helper n))\n",
    "  (cond\n    [(= n 0) 0]\n    [(= n 1) 1]\n    [else (highest_Power_of_2 (/ n 2))]))\n",
    "  (define (highest_Power_of_2_iter n i)\n    (if (&lt;= (expt 2 i) n)\n        (highest_Power_of_2_iter n (+ i 1))\n        (- i 1)))\n  (highest_Power_of_2_iter n 0))\n</code>\n",
    "  (if (= n 1)\n      1\n      (if (= (modulo n 2) 0)\n          (highest_Power_of_2 (/ n 2))\n          (/ n 2))))\n",
    "  (cond\n    [(= n 0) 0]\n    [(= n 1) 1]\n    [else (highest_Power_of_2 (/ n 2))]))\n",
    "  (if (not (even? n))\n      (highest_Power_of_2 (- n 1))\n      (if (= n 2)\n          2\n          (highest_Power_of_2 (/ n 2)))))\n",
    "  (define (helper n p)\n    (if (&lt;= (* 2 p) n)\n        (helper n (* 2 p))\n        p))\n  (helper n 1))\n",
    "  (define (helper n p)\n    (if (&lt;= (* 2 p) n)\n        (helper n (* 2 p))\n        p))\n  (helper n 1))\n",
    "  (if (= n 1)\n      1\n      (if (= (remainder n 2) 0)\n          (highest_Power_of_2 (/ n 2))\n          (highest_Power_of_2 (- n 1)))))\n",
    "  (if (= n 1)\n      1\n      (if (= (remainder n 2) 0)\n          (highest_Power_of_2 (/ n 2))\n          (highest_Power_of_2 (- n 1)))))\n",
    "  (define (helper n p)\n    (cond ((= n 0) 0)\n          ((&lt; n (expt 2 p)) (- p 1))\n          (else (helper n (+ p 1)))))\n  (helper n 0))\n",
    "  (define (helper n result)\n    (if (= n 0)\n        result\n        (helper (/ n 2) (* 2 result))))\n  (helper n 1))\n",
    "  (if (= n 1)\n      1\n      (if (= (remainder n 2) 0)\n          (highest_Power_of_2 (/ n 2))\n          (highest_Power_of_2 (- n 1)))))\n",
    "  (if (not (even? n))\n      (highest_Power_of_2 (- n 1))\n      (if (= n 2)\n          2\n          (highest_Power_of_2 (/ n 2)))))\n",
    "  (define (helper n p)\n    (if (&lt;= (expt 2 p) n)\n        (helper n (+ p 1))\n        (- p 1)))\n  (helper n 0))\n",
    "  (if (= n 1)\n      1\n      (if (= (remainder n 2) 0)\n          (highest_Power_of_2 (/ n 2))\n          (highest_Power_of_2 (- n 1)))))\n",
    "  (define (helper n p)\n    (if (<= (expt 2 p) n)\n        (helper n (+ p 1))\n        (- p 1)))\n  (helper n 0))\n",
    "  (if (not (even? n))\n      (highest_Power_of_2 (- n 1))\n      (if (= n 2)\n          2\n          (highest_Power_of_2 (/ n 2)))))\n",
    "  (if (not (even? n))\n      (highest_Power_of_2 (- n 1))\n      (if (= n 2)\n          2\n          (highest_Power_of_2 (/ n 2)))))\n",
    "  (cond\n    [(= n 1) 1]\n    [(= n 2) 2]\n    [(= n 3) 2]\n    [(= n 4) 4]\n    [(= n 5) 4]\n    [(= n 6) 4]\n    [(= n 7) 4]\n    [(= n 8) 8]\n    [(= n 9) 8]\n    [(= n 10) 8]\n    [(= n 11) 8]\n    [(= n 12) 8]\n    [(= n 13) 8]\n    [(= n 14) 8]\n    [(= n 15) 8]\n    [(= n 16) 16]\n    [(= n 17) 16]\n    [(= n 18) 16]\n    [(= n 19) 16]\n    [(= n 20) 16]\n    [(= n 21) 16]\n    [(= n 22) 16]\n    [(= n 23) 16]\n    [(= n 24) 16]\n    [(= n 25) 16]\n    [(= n 26) 16]\n    [(= n 27) 16]\n    [(= n 28) 16]\n    [(= n 29) 16]\n    [(= n 30) 16]\n    [(= n 31) 16]\n    [(= n 32) 32]\n    [(= n 33) 32]\n    [(= n 34) 32]\n    [(= n 35) 32]\n    [(= n 36) 32]\n    [(= n 37) 32]\n    [(= n 38) 32]\n    [(= n 39) 32]\n    [(= n 40) 32]\n    [(= n 41) 32]\n    [(= n 42) 32]\n    [(= n 43) 32]\n    [(= n 44) 32]\n    [(= n 45) 32]\n    [(= n 46) 32]\n    [(= n 47) 32]\n    [(= n 48) 32]\n    [(= n 49) 32]\n    [(= n 50) 32]\n    [(= n 51) 32]\n    [(= n 52) 32]\n    [(= n 53) 32]\n    [(= n 54) 32]\n    [(= n 55) 32]\n    [(= n 56) 32]\n    [(=",
    "  (cond\n    [(= n 1) 1]\n    [(= n 2) 2]\n    [(= n 3) 2]\n    [(= n 4) 4]\n    [(= n 5) 4]\n    [(= n 6) 4]\n    [(= n 7) 4]\n    [(= n 8) 8]\n    [(= n 9) 8]\n    [(= n 10) 8]\n    [(= n 11) 8]\n    [(= n 12) 8]\n    [(= n 13) 8]\n    [(= n 14) 8]\n    [(= n 15) 8]\n    [(= n 16) 16]\n    [(= n 17) 16]\n    [(= n 18) 16]\n    [(= n 19) 16]\n    [(= n 20) 16]\n    [(= n 21) 16]\n    [(= n 22) 16]\n    [(= n 23) 16]\n    [(= n 24) 16]\n    [(= n 25) 16]\n    [(= n 26) 16]\n    [(= n 27) 16]\n    [(= n 28) 16]\n    [(= n 29) 16]\n    [(= n 30) 16]\n    [(= n 31) 16]\n    [(= n 32) 32]\n    [(= n 33) 32]\n    [(= n 34) 32]\n    [(= n 35) 32]\n    [(= n 36) 32]\n    [(= n 37) 32]\n    [(= n 38) 32]\n    [(= n 39) 32]\n    [(= n 40) 32]\n    [(= n 41) 32]\n    [(= n 42) 32]\n    [(= n 43) 32]\n    [(= n 44) 32]\n    [(= n 45) 32]\n    [(= n 46) 32]\n    [(= n 47) 32]\n    [(= n 48) 32]\n    [(= n 49) 32]\n    [(= n 50) 32]\n    [(= n 51) 32]\n    [(= n 52) 32]\n    [(= n 53) 32]\n    [(= n 54) 32]\n    [(= n 55) 32]\n    [(= n 56) 32]\n    [(=",
    "  (cond\n    [(= n 1) 1]\n    [(= n 2) 2]\n    [else (highest_Power_of_2 (/ n 2))]))\n",
    "  (if (= n 1)\n      1\n      (if (= (remainder n 2) 0)\n          (highest_Power_of_2 (/ n 2))\n          (highest_Power_of_2 (- n 1)))))\n",
    "  (cond\n    [(= n 1) 1]\n    [(= n 2) 2]\n    [else (highest_Power_of_2 (/ n 2))]))\n",
    "  (if (= n 1)\n      1\n      (if (= (remainder n 2) 0)\n          (highest_Power_of_2 (/ n 2))\n          (highest_Power_of_2 (- n 1)))))\n",
    "  (if (= n 1)\n      1\n      (if (= (remainder n 2) 0)\n          (highest_Power_of_2 (/ n 2))\n          (highest_Power_of_2 (- n 1)))))\n",
    "  (define (helper n p)\n    (if (&lt; n (* 2 p))\n        p\n        (helper n (* 2 p))))\n  (helper n 1))\n",
    "  (cond\n    [(= n 1) 1]\n    [(= n 2) 2]\n    [else (highest_Power_of_2 (/ n 2))]))\n",
    "  (if (zero? n)\n      0\n      (if (even? n)\n          (highest_Power_of_2 (/ n 2))\n          (highest_Power_of_2 (/ (- n 1) 2)))))\n",
    "  (if (= n 1)\n      1\n      (if (= (remainder n 2) 0)\n          (highest_Power_of_2 (/ n 2))\n          (highest_Power_of_2 (- n 1)))))\n",
    "  (cond\n    [(= n 1) 1]\n    [(= n 2) 2]\n    [(= n 3) 2]\n    [(= n 4) 4]\n    [(= n 5) 4]\n    [(= n 6) 4]\n    [(= n 7) 4]\n    [(= n 8) 8]\n    [(= n 9) 8]\n    [(= n 10) 8]\n    [(= n 11) 8]\n    [(= n 12) 8]\n    [(= n 13) 8]\n    [(= n 14) 8]\n    [(= n 15) 8]\n    [(= n 16) 16]\n    [(= n 17) 16]\n    [(= n 18) 16]\n    [(= n 19) 16]\n    [(= n 20) 16]\n    [(= n 21) 16]\n    [(= n 22) 16]\n    [(= n 23) 16]\n    [(= n 24) 16]\n    [(= n 25) 16]\n    [(= n 26) 16]\n    [(= n 27) 16]\n    [(= n 28) 16]\n    [(= n 29) 16]\n    [(= n 30) 16]\n    [(= n 31) 16]\n    [(= n 32) 32]\n    [(= n 33) 32]\n    [(= n 34) 32]\n    [(= n 35) 32]\n    [(= n 36) 32]\n    [(= n 37) 32]\n    [(= n 38) 32]\n    [(= n 39) 32]\n    [(= n 40) 32]\n    [(= n 41) 32]\n    [(= n 42) 32]\n    [(= n 43) 32]\n    [(= n 44) 32]\n    [(= n 45) 32]\n    [(= n 46) 32]\n    [(= n 47) 32]\n    [(= n 48) 32]\n    [(= n 49) 32]\n    [(= n 50) 32]\n    [(= n 51) 32]\n    [(= n 52) 32]\n    [(= n 53) 32]\n    [(= n 54) 32]\n    [(= n 55) 32]\n    [(= n 56) 32]\n    [(=",
    "  (if (= n 1)\n      1\n      (if (= (remainder n 2) 0)\n          (highest_Power_of_2 (/ n 2))\n          (/ n 2))))\n",
    "  (define (helper n)\n    (if (= n 1)\n        1\n        (if (= (remainder n 2) 0)\n            (helper (/ n 2))\n            (helper (- n 1)))))\n  (helper n))\n",
    "  (cond\n    [(= n 1) 1]\n    [(= n 2) 2]\n    [(= n 3) 2]\n    [(= n 4) 4]\n    [(= n 5) 4]\n    [(= n 6) 4]\n    [(= n 7) 4]\n    [(= n 8) 8]\n    [(= n 9) 8]\n    [(= n 10) 8]\n    [(= n 11) 8]\n    [(= n 12) 8]\n    [(= n 13) 8]\n    [(= n 14) 8]\n    [(= n 15) 8]\n    [(= n 16) 16]\n    [(= n 17) 16]\n    [(= n 18) 16]\n    [(= n 19) 16]\n    [(= n 20) 16]\n    [(= n 21) 16]\n    [(= n 22) 16]\n    [(= n 23) 16]\n    [(= n 24) 16]\n    [(= n 25) 16]\n    [(= n 26) 16]\n    [(= n 27) 16]\n    [(= n 28) 16]\n    [(= n 29) 16]\n    [(= n 30) 16]\n    [(= n 31) 16]\n    [(= n 32) 32]\n    [(= n 33) 32]\n    [(= n 34) 32]\n    [(= n 35) 32]\n    [(= n 36) 32]\n    [(= n 37) 32]\n    [(= n 38) 32]\n    [(= n 39) 32]\n    [(= n 40) 32]\n    [(= n 41) 32]\n    [(= n 42) 32]\n    [(= n 43) 32]\n    [(= n 44) 32]\n    [(= n 45) 32]\n    [(= n 46) 32]\n    [(= n 47) 32]\n    [(= n 48) 32]\n    [(= n 49) 32]\n    [(= n 50) 32]\n    [(= n 51) 32]\n    [(= n 52) 32]\n    [(= n 53) 32]\n    [(= n 54) 32]\n    [(= n 55) 32]\n    [(= n 56) 32]\n    [(=",
    "  (define (helper n counter)\n    (if (= n 1)\n        counter\n        (if (= n 2)\n            (add1 counter)\n            (helper (/ n 2) (add1 counter)))))\n  (helper n 0))\n",
    "  (let loop ((i n) (pow 1))\n    (if (&lt;= pow i)\n        pow\n        (loop i (* 2 pow)))))\n",
    "  (define (helper n p)\n    (if (&lt;= (* 2 p) n)\n        (helper n (* 2 p))\n        p))\n  (helper n 1))\n",
    "  (if (= n 1)\n      1\n      (if (even? n)\n          (highest_Power_of_2 (/ n 2))\n          (highest_Power_of_2 (- n 1)))))\n",
    "  (define (helper n power)\n    (if (<= (expt 2 power) n)\n        (helper n (+ power 1))\n        (- power 1)))\n  (helper n 0))\n",
    "  (define (helper n p)\n    (if (&lt;= (* 2 p) n)\n        (helper n (* 2 p))\n        p))\n  (helper n 1))\n",
    "  (cond\n    [(= n 1) 1]\n    [(= n 2) 2]\n    [else (highest_Power_of_2 (/ n 2))]))\n",
    "  (define (helper x)\n    (if (not (zero? (remainder x 2)))\n        x\n        (helper (quotient x 2))))\n  (helper n))\n",
    "  (cond [(= n 1) 1]\n        [(= n 2) 2]\n        [else (highest_Power_of_2 (/ n 2))]))\n",
    "  (define (helper n p)\n    (if (&lt;= (expt 2 p) n)\n        (helper n (+ p 1))\n        (- p 1)))\n  (helper n 0))\n</code>\n",
    "  (if (= n 1)\n      1\n      (if (= (modulo n 2) 0)\n          (highest_Power_of_2 (/ n 2))\n          (highest_Power_of_2 (- n 1)))))\n",
    "  (cond\n    [(= n 1) 1]\n    [(= n 2) 2]\n    [else (highest_Power_of_2 (/ n 2))]))\n",
    "  (if (not (zero? n))\n      (if (even? n)\n          (highest_Power_of_2 (/ n 2))\n          (highest_Power_of_2 (- n 1)))\n      0))\n",
    "  (cond\n    [(= n 1) 1]\n    [(= n 2) 2]\n    [(= n 3) 2]\n    [(= n 4) 4]\n    [(= n 5) 4]\n    [(= n 6) 4]\n    [(= n 7) 4]\n    [(= n 8) 8]\n    [(= n 9) 8]\n    [(= n 10) 8]\n    [(= n 11) 8]\n    [(= n 12) 8]\n    [(= n 13) 8]\n    [(= n 14) 8]\n    [(= n 15) 8]\n    [(= n 16) 16]\n    [(= n 17) 16]\n    [(= n 18) 16]\n    [(= n 19) 16]\n    [(= n 20) 16]\n    [(= n 21) 16]\n    [(= n 22) 16]\n    [(= n 23) 16]\n    [(= n 24) 16]\n    [(= n 25) 16]\n    [(= n 26) 16]\n    [(= n 27) 16]\n    [(= n 28) 16]\n    [(= n 29) 16]\n    [(= n 30) 16]\n    [(= n 31) 16]\n    [(= n 32) 32]\n    [(= n 33) 32]\n    [(= n 34) 32]\n    [(= n 35) 32]\n    [(= n 36) 32]\n    [(= n 37) 32]\n    [(= n 38) 32]\n    [(= n 39) 32]\n    [(= n 40) 32]\n    [(= n 41) 32]\n    [(= n 42) 32]\n    [(= n 43) 32]\n    [(= n 44) 32]\n    [(= n 45) 32]\n    [(= n 46) 32]\n    [(= n 47) 32]\n    [(= n 48) 32]\n    [(= n 49) 32]\n    [(= n 50) 32]\n    [(= n 51) 32]\n    [(= n 52) 32]\n    [(= n 53) 32]\n    [(= n 54) 32]\n    [(= n 55) 32]\n    [(= n 56) 32]\n    [(=",
    "  (define (helper n)\n    (if (= n 1)\n        1\n        (if (= (remainder n 2) 0)\n            (helper (/ n 2))\n            (helper (- n 1)))))\n  (helper n))\n",
    "  (if (= n 1)\n      1\n      (if (= (remainder n 2) 0)\n          (* 2 (highest_Power_of_2 (/ n 2)))\n          (highest_Power_of_2 (- n 1)))))\n",
    "  (if (= n 1)\n      1\n      (if (= (modulo n 2) 0)\n          (highest_Power_of_2 (/ n 2))\n          (/ n 2))))\n",
    "  (if (even? n)\n      (highest_Power_of_2 (/ n 2))\n      (/ n 2)))\n",
    "  (define (helper n p)\n    (if (&lt; n (* 2 p))\n        p\n        (helper n (* 2 p))))\n  (helper n 1))\n",
    "  (cond\n    [(= n 1) 1]\n    [(= n 2) 2]\n    [else (highest_Power_of_2 (/ n 2))]))\n",
    "  (let loop ((n n) (i 0))\n    (if (= n 1)\n        i\n        (loop (/ n 2) (+ 1 i)))))\n",
    "  (if (= n 1)\n      1\n      (if (= (modulo n 2) 0)\n          (highest_Power_of_2 (/ n 2))\n          (/ n 2))))\n",
    "  (define (helper n p)\n    (if (&lt;= n (expt 2 p))\n        p\n        (helper n (+ p 1))))\n  (helper n 0))\n",
    "  (cond\n    [(= n 1) 1]\n    [(= n 2) 2]\n    [(= n 3) 2]\n    [(= n 4) 4]\n    [(= n 5) 4]\n    [(= n 6) 4]\n    [(= n 7) 4]\n    [(= n 8) 8]\n    [(= n 9) 8]\n    [(= n 10) 8]\n    [(= n 11) 8]\n    [(= n 12) 8]\n    [(= n 13) 8]\n    [(= n 14) 8]\n    [(= n 15) 8]\n    [(= n 16) 16]\n    [(= n 17) 16]\n    [(= n 18) 16]\n    [(= n 19) 16]\n    [(= n 20) 16]\n    [(= n 21) 16]\n    [(= n 22) 16]\n    [(= n 23) 16]\n    [(= n 24) 16]\n    [(= n 25) 16]\n    [(= n 26) 16]\n    [(= n 27) 16]\n    [(= n 28) 16]\n    [(= n 29) 16]\n    [(= n 30) 16]\n    [(= n 31) 16]\n    [(= n 32) 32]\n    [(= n 33) 32]\n    [(= n 34) 32]\n    [(= n 35) 32]\n    [(= n 36) 32]\n    [(= n 37) 32]\n    [(= n 38) 32]\n    [(= n 39) 32]\n    [(= n 40) 32]\n    [(= n 41) 32]\n    [(= n 42) 32]\n    [(= n 43) 32]\n    [(= n 44) 32]\n    [(= n 45) 32]\n    [(= n 46) 32]\n    [(= n 47) 32]\n    [(= n 48) 32]\n    [(= n 49) 32]\n    [(= n 50) 32]\n    [(= n 51) 32]\n    [(= n 52) 32]\n    [(= n 53) 32]\n    [(= n 54) 32]\n    [(= n 55) 32]\n    [(= n 56) 32]\n    [(=",
    "  (if (= n 1)\n      1\n      (if (even? n)\n          (highest_Power_of_2 (/ n 2))\n          (highest_Power_of_2 (- n 1)))))\n",
    "  (cond\n    [(= n 1) 1]\n    [(= n 2) 2]\n    [else (highest_Power_of_2 (/ n 2))]))\n",
    "  (if (not (zero? n))\n      (if (even? n)\n          (highest_Power_of_2 (/ n 2))\n          (highest_Power_of_2 (- n 1)))\n      0))\n",
    "  (cond\n    [(= n 0) 0]\n    [(= n 1) 1]\n    [else (highest_Power_of_2 (/ n 2))]))\n",
    "  (if (= n 1) 1\n      (if (= (remainder n 2) 1)\n          (highest_Power_of_2 (- n 1))\n          (highest_Power_of_2 (/ n 2)))))\n",
    "  (cond\n    [(= n 1) 1]\n    [(= n 2) 2]\n    [(= n 3) 2]\n    [(= n 4) 4]\n    [(= n 5) 4]\n    [(= n 6) 4]\n    [(= n 7) 4]\n    [(= n 8) 8]\n    [(= n 9) 8]\n    [(= n 10) 8]\n    [(= n 11) 8]\n    [(= n 12) 8]\n    [(= n 13) 8]\n    [(= n 14) 8]\n    [(= n 15) 8]\n    [(= n 16) 16]\n    [(= n 17) 16]\n    [(= n 18) 16]\n    [(= n 19) 16]\n    [(= n 20) 16]\n    [(= n 21) 16]\n    [(= n 22) 16]\n    [(= n 23) 16]\n    [(= n 24) 16]\n    [(= n 25) 16]\n    [(= n 26) 16]\n    [(= n 27) 16]\n    [(= n 28) 16]\n    [(= n 29) 16]\n    [(= n 30) 16]\n    [(= n 31) 16]\n    [(= n 32) 32]\n    [(= n 33) 32]\n    [(= n 34) 32]\n    [(= n 35) 32]\n    [(= n 36) 32]\n    [(= n 37) 32]\n    [(= n 38) 32]\n    [(= n 39) 32]\n    [(= n 40) 32]\n    [(= n 41) 32]\n    [(= n 42) 32]\n    [(= n 43) 32]\n    [(= n 44) 32]\n    [(= n 45) 32]\n    [(= n 46) 32]\n    [(= n 47) 32]\n    [(= n 48) 32]\n    [(= n 49) 32]\n    [(= n 50) 32]\n    [(= n 51) 32]\n    [(= n 52) 32]\n    [(= n 53) 32]\n    [(= n 54) 32]\n    [(= n 55) 32]\n    [(= n 56) 32]\n    [(=",
    "  (define (highest_Power_of_2_iter n i)\n    (if (&lt; n (* 2 i))\n        i\n        (highest_Power_of_2_iter n (* 2 i))))\n  (highest_Power_of_2_iter n 1))\n",
    "  (define (helper n)\n    (if (= n 1)\n        1\n        (if (even? n)\n            (helper (/ n 2))\n            (helper (- n 1)))))\n  (helper n))\n",
    "  (if (= n 1)\n      1\n      (if (= (remainder n 2) 0)\n          (highest_Power_of_2 (/ n 2))\n          (highest_Power_of_2 (- n 1)))))\n",
    "  (if (even? n)\n      (highest_Power_of_2 (/ n 2))\n      (/ n 2)))\n",
    "  (if (= n 1)\n      1\n      (if (even? n)\n          (highest_Power_of_2 (/ n 2))\n          (highest_Power_of_2 (- n 1)))))\n",
    "  (define (highest_Power_of_2_iter n p)\n    (if (&lt;= n (* 2 p))\n        p\n        (highest_Power_of_2_iter n (* 2 p))))\n  (highest_Power_of_2_iter n 1))\n",
    "  (cond\n    [(= n 0) 0]\n    [(= n 1) 1]\n    [else (highest_Power_of_2 (/ n 2))]))\n",
    "  (if (= n 1)\n      1\n      (if (= (remainder n 2) 0)\n          (highest_Power_of_2 (/ n 2))\n          (highest_Power_of_2 (- n 1)))))\n",
    "  (if (even? n)\n      (highest_Power_of_2 (/ n 2))\n      (/ n 2)))\n",
    "  (if (= n 0)\n      0\n      (if (= (remainder n 2) 0)\n          (highest_Power_of_2 (/ n 2))\n          (/ n 2))))\n",
    "  (if (= n 1)\n      1\n      (if (= (remainder n 2) 0)\n          (highest_Power_of_2 (/ n 2))\n          (highest_Power_of_2 (- n 1)))))\n",
    "  (define (helper n acc)\n    (if (= n 1)\n        acc\n        (if (even? n)\n            (helper (/ n 2) n)\n            (helper (- n 1) acc))))\n  (helper n 1))\n",
    "  (if (= n 0)\n      0\n      (if (= n 1)\n          1\n          (if (= (modulo n 2) 1)\n              (highest_Power_of_2 (- n 1))\n              (highest_Power_of_2 (/ n 2))))))\n",
    "  (cond\n    [(= n 1) 1]\n    [(= n 2) 2]\n    [else (highest_Power_of_2 (/ n 2))]))\n",
    "  (if (= n 1)\n      1\n      (if (= (remainder n 2) 0)\n          (highest_Power_of_2 (/ n 2))\n          (/ n 2))))\n",
    "  (if (= n 1)\n      1\n      (if (= (modulo n 2) 0)\n          (highest_Power_of_2 (/ n 2))\n          (highest_Power_of_2 (- n 1)))))\n",
    "  (if (= n 1)\n      1\n      (if (= (remainder n 2) 0)\n          (highest_Power_of_2 (/ n 2))\n          (/ n 2))))\n",
    "  (define (helper n)\n    (if (= n 1)\n        1\n        (if (= (remainder n 2) 0)\n            (helper (/ n 2))\n            (helper (- n 1)))))\n  (helper n))\n",
    "  (cond ((= n 1) 1)\n        ((= n 2) 2)\n        ((even? n) (highest_Power_of_2 (/ n 2)))\n        (else (highest_Power_of_2 (- n 1)))))\n",
    "  (cond\n    [(= n 1) 1]\n    [(= n 2) 2]\n    [else (highest_Power_of_2 (/ n 2))]))\n",
    "  (if (= n 1)\n      1\n      (if (even? n)\n          (highest_Power_of_2 (/ n 2))\n          (highest_Power_of_2 (- n 1)))))\n",
    "  (cond\n    [(= n 1) 1]\n    [(= n 2) 2]\n    [else (highest_Power_of_2 (/ n 2))]))\n",
    "  (cond\n    [(= n 0) 0]\n    [(= n 1) 1]\n    [else (highest_Power_of_2 (/ n 2))]))\n",
    "  (if (not (even? n))\n      (highest_Power_of_2 (- n 1))\n      (if (= n 2)\n          2\n          (highest_Power_of_2 (/ n 2)))))\n",
    "  (let loop ((n n) (pow 2))\n    (if (<= pow n)\n        (loop n (* pow 2))\n        (/ pow 2))))\n",
    "  (cond\n    [(= n 1) 1]\n    [(= n 2) 2]\n    [(= n 3) 2]\n    [(= n 4) 4]\n    [(= n 5) 4]\n    [(= n 6) 4]\n    [(= n 7) 4]\n    [(= n 8) 8]\n    [(= n 9) 8]\n    [(= n 10) 8]\n    [(= n 11) 8]\n    [(= n 12) 8]\n    [(= n 13) 8]\n    [(= n 14) 8]\n    [(= n 15) 8]\n    [(= n 16) 16]\n    [(= n 17) 16]\n    [(= n 18) 16]\n    [(= n 19) 16]\n    [(= n 20) 16]\n    [(= n 21) 16]\n    [(= n 22) 16]\n    [(= n 23) 16]\n    [(= n 24) 16]\n    [(= n 25) 16]\n    [(= n 26) 16]\n    [(= n 27) 16]\n    [(= n 28) 16]\n    [(= n 29) 16]\n    [(= n 30) 16]\n    [(= n 31) 16]\n    [(= n 32) 32]\n    [(= n 33) 32]\n    [(= n 34) 32]\n    [(= n 35) 32]\n    [(= n 36) 32]\n    [(= n 37) 32]\n    [(= n 38) 32]\n    [(= n 39) 32]\n    [(= n 40) 32]\n    [(= n 41) 32]\n    [(= n 42) 32]\n    [(= n 43) 32]\n    [(= n 44) 32]\n    [(= n 45) 32]\n    [(= n 46) 32]\n    [(= n 47) 32]\n    [(= n 48) 32]\n    [(= n 49) 32]\n    [(= n 50) 32]\n    [(= n 51) 32]\n    [(= n 52) 32]\n    [(= n 53) 32]\n    [(= n 54) 32]\n    [(= n 55) 32]\n    [(= n 56) 32]\n    [(=",
    "  (cond\n    [(= n 1) 1]\n    [(= n 2) 2]\n    [else (highest_Power_of_2 (/ n 2))]))\n",
    "  (define (helper n p)\n    (if (&lt;= n (* 2 p))\n        p\n        (helper n (* 2 p))))\n  (helper n 1))\n",
    "  (define (helper n p)\n    (if (&lt;= (expt 2 p) n)\n        (helper n (+ p 1))\n        (- p 1)))\n  (helper n 0))\n",
    "  (cond\n    [(= n 0) 0]\n    [(= n 1) 1]\n    [else (highest_Power_of_2 (/ n 2))]))\n",
    "  (cond\n    [(= n 1) 1]\n    [(= n 2) 2]\n    [(= n 3) 2]\n    [(= n 4) 4]\n    [(= n 5) 4]\n    [(= n 6) 4]\n    [(= n 7) 4]\n    [(= n 8) 8]\n    [(= n 9) 8]\n    [(= n 10) 8]\n    [(= n 11) 8]\n    [(= n 12) 8]\n    [(= n 13) 8]\n    [(= n 14) 8]\n    [(= n 15) 8]\n    [(= n 16) 16]\n    [(= n 17) 16]\n    [(= n 18) 16]\n    [(= n 19) 16]\n    [(= n 20) 16]\n    [(= n 21) 16]\n    [(= n 22) 16]\n    [(= n 23) 16]\n    [(= n 24) 16]\n    [(= n 25) 16]\n    [(= n 26) 16]\n    [(= n 27) 16]\n    [(= n 28) 16]\n    [(= n 29) 16]\n    [(= n 30) 16]\n    [(= n 31) 16]\n    [(= n 32) 32]\n    [(= n 33) 32]\n    [(= n 34) 32]\n    [(= n 35) 32]\n    [(= n 36) 32]\n    [(= n 37) 32]\n    [(= n 38) 32]\n    [(= n 39) 32]\n    [(= n 40) 32]\n    [(= n 41) 32]\n    [(= n 42) 32]\n    [(= n 43) 32]\n    [(= n 44) 32]\n    [(= n 45) 32]\n    [(= n 46) 32]\n    [(= n 47) 32]\n    [(= n 48) 32]\n    [(= n 49) 32]\n    [(= n 50) 32]\n    [(= n 51) 32]\n    [(= n 52) 32]\n    [(= n 53) 32]\n    [(= n 54) 32]\n    [(= n 55) 32]\n    [(= n 56) 32]\n    [(=",
    "  (cond\n    [(= n 1) 1]\n    [(= n 2) 2]\n    [else (highest_Power_of_2 (/ n 2))]))\n",
    "  (cond\n    [(= n 1) 1]\n    [(= n 2) 2]\n    [(= n 3) 2]\n    [(= n 4) 4]\n    [(= n 5) 4]\n    [(= n 6) 4]\n    [(= n 7) 4]\n    [(= n 8) 8]\n    [(= n 9) 8]\n    [(= n 10) 8]\n    [(= n 11) 8]\n    [(= n 12) 8]\n    [(= n 13) 8]\n    [(= n 14) 8]\n    [(= n 15) 8]\n    [(= n 16) 16]\n    [(= n 17) 16]\n    [(= n 18) 16]\n    [(= n 19) 16]\n    [(= n 20) 16]\n    [(= n 21) 16]\n    [(= n 22) 16]\n    [(= n 23) 16]\n    [(= n 24) 16]\n    [(= n 25) 16]\n    [(= n 26) 16]\n    [(= n 27) 16]\n    [(= n 28) 16]\n    [(= n 29) 16]\n    [(= n 30) 16]\n    [(= n 31) 16]\n    [(= n 32) 32]\n    [(= n 33) 32]\n    [(= n 34) 32]\n    [(= n 35) 32]\n    [(= n 36) 32]\n    [(= n 37) 32]\n    [(= n 38) 32]\n    [(= n 39) 32]\n    [(= n 40) 32]\n    [(= n 41) 32]\n    [(= n 42) 32]\n    [(= n 43) 32]\n    [(= n 44) 32]\n    [(= n 45) 32]\n    [(= n 46) 32]\n    [(= n 47) 32]\n    [(= n 48) 32]\n    [(= n 49) 32]\n    [(= n 50) 32]\n    [(= n 51) 32]\n    [(= n 52) 32]\n    [(= n 53) 32]\n    [(= n 54) 32]\n    [(= n 55) 32]\n    [(= n 56) 32]\n    [(=",
    "  (cond\n    [(= n 1) 1]\n    [(= n 2) 2]\n    [else (highest_Power_of_2 (/ n 2))]))\n",
    "  (define (helper n)\n    (if (= n 1)\n        1\n        (if (= (remainder n 2) 0)\n            (helper (/ n 2))\n            (helper (- n 1)))))\n  (helper n))\n",
    "  (if (= n 1)\n      1\n      (if (= (remainder n 2) 0)\n          (highest_Power_of_2 (/ n 2))\n          (/ n 2))))\n",
    "  (if (= n 1)\n      1\n      (if (= (modulo n 2) 0)\n          (highest_Power_of_2 (/ n 2))\n          (highest_Power_of_2 (- n 1)))))\n",
    "  (cond\n    [(= n 0) 0]\n    [(= n 1) 1]\n    [(= n 2) 2]\n    [else (highest_Power_of_2 (/ n 2))]))\n",
    "  (define (loop n power)\n    (cond ((= n 1) power)\n          ((= (modulo n 2) 0) (loop (/ n 2) (* 2 power)))\n          (else (loop (- n 1) power))))\n  (loop n 1))\n",
    "  (cond\n    [(= n 0) 0]\n    [(= n 1) 1]\n    [else (highest_Power_of_2 (/ n 2))]))\n",
    "  (if (not (even? n))\n      (highest_Power_of_2 (- n 1))\n      (if (= n 2)\n          2\n          (highest_Power_of_2 (/ n 2)))))\n",
    "  (if (= n 1)\n      1\n      (if (= (modulo n 2) 0)\n          (highest_Power_of_2 (/ n 2))\n          (/ n 2))))\n",
    "  (cond\n    [(= n 1) 1]\n    [(= n 2) 2]\n    [(= n 3) 2]\n    [(= n 4) 4]\n    [(= n 5) 4]\n    [(= n 6) 4]\n    [(= n 7) 4]\n    [(= n 8) 8]\n    [(= n 9) 8]\n    [(= n 10) 8]\n    [(= n 11) 8]\n    [(= n 12) 8]\n    [(= n 13) 8]\n    [(= n 14) 8]\n    [(= n 15) 8]\n    [(= n 16) 16]\n    [(= n 17) 16]\n    [(= n 18) 16]\n    [(= n 19) 16]\n    [(= n 20) 16]\n    [(= n 21) 16]\n    [(= n 22) 16]\n    [(= n 23) 16]\n    [(= n 24) 16]\n    [(= n 25) 16]\n    [(= n 26) 16]\n    [(= n 27) 16]\n    [(= n 28) 16]\n    [(= n 29) 16]\n    [(= n 30) 16]\n    [(= n 31) 16]\n    [(= n 32) 32]\n    [(= n 33) 32]\n    [(= n 34) 32]\n    [(= n 35) 32]\n    [(= n 36) 32]\n    [(= n 37) 32]\n    [(= n 38) 32]\n    [(= n 39) 32]\n    [(= n 40) 32]\n    [(= n 41) 32]\n    [(= n 42) 32]\n    [(= n 43) 32]\n    [(= n 44) 32]\n    [(= n 45) 32]\n    [(= n 46) 32]\n    [(= n 47) 32]\n    [(= n 48) 32]\n    [(= n 49) 32]\n    [(= n 50) 32]\n    [(= n 51) 32]\n    [(= n 52) 32]\n    [(= n 53) 32]\n    [(= n 54) 32]\n    [(= n 55) 32]\n    [(= n 56) 32]\n    [(=",
    "  (if (= n 1)\n      1\n      (if (even? n)\n          (highest_Power_of_2 (/ n 2))\n          (highest_Power_of_2 (- n 1)))))\n",
    "  (define (helper n p)\n    (if (&lt;= (* 2 p) n)\n        (helper n (* 2 p))\n        p))\n  (helper n 1))\n",
    "  (cond\n    [(= n 0) 0]\n    [(= n 1) 1]\n    [else (highest_Power_of_2 (/ n 2))]))\n",
    "  (if (not (even? n))\n      (highest_Power_of_2 (- n 1))\n      (if (= n 2)\n          2\n          (highest_Power_of_2 (/ n 2)))))\n",
    "  (cond\n    [(= n 1) 1]\n    [(= n 2) 2]\n    [else (highest_Power_of_2 (/ n 2))]))\n",
    "  (cond\n    [(= n 1) 1]\n    [(= n 2) 2]\n    [else (highest_Power_of_2 (/ n 2))]))\n",
    "  (define (helper n p)\n    (if (&lt;= n (expt 2 p))\n        p\n        (helper n (+ p 1))))\n  (helper n 0))\n",
    "  (define (helper n i)\n    (if (= n 0)\n        0\n        (if (= (modulo n 2) 0)\n            (helper (/ n 2) (+ i 1))\n            i)))\n  (helper n 0))\n",
    "  (cond\n    [(= n 1) 1]\n    [(= n 2) 2]\n    [else (highest_Power_of_2 (/ n 2))]))\n",
    "  (define (helper n)\n    (if (= n 1)\n        1\n        (if (= (remainder n 2) 0)\n            (helper (/ n 2))\n            (helper (- n 1)))))\n  (helper n))\n",
    "  (if (= n 1)\n      1\n      (if (= (remainder n 2) 0)\n          (highest_Power_of_2 (/ n 2))\n          (/ n 2))))\n",
    "  (define (helper n p)\n    (if (&lt;= (* 2 p) n)\n        (helper n (* 2 p))\n        p))\n  (helper n 1))\n",
    "  (if (= n 1)\n      1\n      (if (= (remainder n 2) 0)\n          (highest_Power_of_2 (/ n 2))\n          (/ n 2))))\n",
    "  (let loop ([n n])\n    (if (= n 0)\n        0\n        (if (= (remainder n 2) 0)\n            (loop (/ n 2))\n            (loop (- n 1))))))\n",
    "  (define (helper n power)\n    (if (&lt;= (* 2 power) n)\n        (helper n (* 2 power))\n        power))\n  (helper n 1))\n",
    "  (define (helper n power)\n    (if (&lt;= (* 2 power) n)\n        (helper n (* 2 power))\n        power))\n  (helper n 1))\n",
    "  (if (= n 1)\n      1\n      (if (= (remainder n 2) 0)\n          (highest_Power_of_2 (/ n 2))\n          (highest_Power_of_2 (- n 1)))))\n",
    "  (if (= n 1)\n      1\n      (if (= (remainder n 2) 0)\n          (highest_Power_of_2 (/ n 2))\n          (highest_Power_of_2 (- n 1)))))\n",
    "  (if (= n 1)\n      1\n      (if (= (remainder n 2) 0)\n          (highest_Power_of_2 (/ n 2))\n          (/ n 2))))\n",
    "  (define (helper n p)\n    (if (&lt;= (* 2 p) n)\n        (helper n (* 2 p))\n        p))\n  (helper n 1))\n",
    "  (cond\n    [(= n 1) 1]\n    [(= n 2) 2]\n    [else (highest_Power_of_2 (/ n 2))]))\n",
    "  (define (helper n p)\n    (if (&lt;= (* 2 p) n)\n        (helper n (* 2 p))\n        p))\n  (helper n 1))\n",
    "  (if (= n 0)\n      0\n      (if (= (remainder n 2) 0)\n          (highest_Power_of_2 (/ n 2))\n          (highest_Power_of_2 (- n 1)))))\n",
    "  (cond\n    [(= n 0) 0]\n    [(= n 1) 1]\n    [else (highest_Power_of_2 (/ n 2))]))\n",
    "  (define (helper n p)\n    (cond\n      [(= n 0) 0]\n      [(= n 1) 1]\n      [(= n 2) 2]\n      [(= n 3) 2]\n      [(= n 4) 4]\n      [(= n 5) 4]\n      [(= n 6) 4]\n      [(= n 7) 4]\n      [(= n 8) 8]\n      [(= n 9) 8]\n      [(= n 10) 8]\n      [(= n 11) 8]\n      [(= n 12) 8]\n      [(= n 13) 8]\n      [(= n 14) 8]\n      [(= n 15) 8]\n      [(= n 16) 16]\n      [(= n 17) 16]\n      [(= n 18) 16]\n      [(= n 19) 16]\n      [(= n 20) 16]\n      [(= n 21) 16]\n      [(= n 22) 16]\n      [(= n 23) 16]\n      [(= n 24) 16]\n      [(= n 25) 16]\n      [(= n 26) 16]\n      [(= n 27) 16]\n      [(= n 28) 16]\n      [(= n 29) 16]\n      [(= n 30) 16]\n      [(= n 31) 16]\n      [(= n 32) 32]\n      [(= n 33) 32]\n      [(= n 34) 32]\n      [(= n 35) 32]\n      [(= n 36) 32]\n      [(= n 37) 32]\n      [(= n 38) 32]\n      [(= n 39) 32]\n      [(= n 40) 32]\n      [(= n 41) 32]\n      [(= n 42) 32]\n      [(= n 43) 32]\n      [(= n 44) 32]\n      [(= n 45) 32]\n      [(= n 46) 32]\n      [(= n 47) 32]\n      [(= n 48) 32]\n      [(= n 49) 32]\n      [(= n 50) 32]\n      [(= n 51) 32]\n      [(= n 52) 32]\n      [(= n 53) 32]\n      [(= n 54) 32]\n      [(",
    "  (cond\n    [(= n 0) 0]\n    [(= n 1) 1]\n    [else (highest_Power_of_2 (/ n 2))]))\n",
    "  (if (= n 1)\n      1\n      (if (= (modulo n 2) 0)\n          (highest_Power_of_2 (/ n 2))\n          (/ n 2))))\n",
    "  (define (helper n p)\n    (if (&lt;= (* 2 p) n)\n        (helper n (* 2 p))\n        p))\n  (helper n 1))\n",
    "  (if (not (even? n))\n      (highest_Power_of_2 (- n 1))\n      (if (= n 2)\n          2\n          (highest_Power_of_2 (/ n 2)))))\n",
    "  (define (helper n p)\n    (if (&lt;= (* 2 p) n)\n        (helper n (* 2 p))\n        p))\n  (helper n 1))\n",
    "  (if (= n 1)\n      1\n      (if (= (remainder n 2) 0)\n          (highest_Power_of_2 (/ n 2))\n          (/ n 2))))\n",
    "  (define (helper n p)\n    (if (&lt;= n (* 2 p))\n        p\n        (helper n (* 2 p))))\n  (helper n 1))\n",
    "  (define (helper n)\n    (if (= n 1)\n        1\n        (if (= (remainder n 2) 0)\n            (helper (/ n 2))\n            (helper (- n 1)))))\n  (helper n))\n",
    "  (if (= n 1)\n      1\n      (if (even? n)\n          (highest_Power_of_2 (/ n 2))\n          (highest_Power_of_2 (- n 1)))))\n",
    "  (define (helper n i)\n    (if (= n 1)\n        i\n        (if (= (remainder n 2) 0)\n            (helper (/ n 2) i)\n            i)))\n  (helper n 1))\n",
    "  (cond\n    [(= n 1) 1]\n    [(= n 2) 2]\n    [else (highest_Power_of_2 (/ n 2))]))\n",
    "  (if (= n 0)\n      0\n      (if (= n 1)\n          1\n          (if (= (remainder n 2) 0)\n              (highest_Power_of_2 (/ n 2))\n              (highest_Power_of_2 (- n 1))))))\n",
    "  (define (helper n)\n    (if (= n 1)\n        1\n        (if (= (modulo n 2) 0)\n            (helper (/ n 2))\n            (/ n 2))))\n  (helper n))\n",
    "  (define (helper n i)\n    (if (&gt; (* 2 i) n)\n        (- i 1)\n        (helper n (* 2 i))))\n  (helper n 1))\n",
    "  (if (not (even? n))\n      (highest_Power_of_2 (- n 1))\n      (if (= n 2)\n          2\n          (highest_Power_of_2 (/ n 2)))))\n",
    "  (define (helper n p)\n    (if (= n 0)\n        0\n        (if (&lt; n (expt 2 p))\n            (helper n (- p 1))\n            (helper (- n (expt 2 p)) (+ p 1)))))\n  (helper n 1))\n",
    "  (if (= n 1)\n      1\n      (if (= (remainder n 2) 0)\n          (highest_Power_of_2 (/ n 2))\n          (highest_Power_of_2 (- n 1)))))\n",
    "  (if (even? n)\n      (highest_Power_of_2 (/ n 2))\n      (/ n 2)))\n",
    "  (cond\n    [(= n 1) 1]\n    [(= n 2) 2]\n    [(= n 3) 2]\n    [(= n 4) 4]\n    [(= n 5) 4]\n    [(= n 6) 4]\n    [(= n 7) 4]\n    [(= n 8) 8]\n    [(= n 9) 8]\n    [(= n 10) 8]\n    [(= n 11) 8]\n    [(= n 12) 8]\n    [(= n 13) 8]\n    [(= n 14) 8]\n    [(= n 15) 8]\n    [(= n 16) 16]\n    [(= n 17) 16]\n    [(= n 18) 16]\n    [(= n 19) 16]\n    [(= n 20) 16]\n    [(= n 21) 16]\n    [(= n 22) 16]\n    [(= n 23) 16]\n    [(= n 24) 16]\n    [(= n 25) 16]\n    [(= n 26) 16]\n    [(= n 27) 16]\n    [(= n 28) 16]\n    [(= n 29) 16]\n    [(= n 30) 16]\n    [(= n 31) 16]\n    [(= n 32) 32]\n    [(= n 33) 32]\n    [(= n 34) 32]\n    [(= n 35) 32]\n    [(= n 36) 32]\n    [(= n 37) 32]\n    [(= n 38) 32]\n    [(= n 39) 32]\n    [(= n 40) 32]\n    [(= n 41) 32]\n    [(= n 42) 32]\n    [(= n 43) 32]\n    [(= n 44) 32]\n    [(= n 45) 32]\n    [(= n 46) 32]\n    [(= n 47) 32]\n    [(= n 48) 32]\n    [(= n 49) 32]\n    [(= n 50) 32]\n    [(= n 51) 32]\n    [(= n 52) 32]\n    [(= n 53) 32]\n    [(= n 54) 32]\n    [(= n 55) 32]\n    [(= n 56) 32]\n    [(=",
    "  (if (not (even? n))\n      (highest_Power_of_2 (- n 1))\n      (if (= n 2)\n          2\n          (highest_Power_of_2 (/ n 2)))))\n",
    "  (if (= n 1)\n      1\n      (if (= (remainder n 2) 0)\n          (highest_Power_of_2 (/ n 2))\n          (highest_Power_of_2 (- n 1)))))\n",
    "  (define (helper n acc)\n    (if (= n 1)\n        acc\n        (if (= (remainder n 2) 0)\n            (helper (/ n 2) (* 2 acc))\n            acc)))\n  (helper n 1))\n",
    "  (if (not (zero? n))\n      (if (even? n)\n          (highest_Power_of_2 (quotient n 2))\n          (highest_Power_of_2 (quotient (- n 1) 2)))\n      0))\n",
    "  (define (helper n count)\n    (if (= n 0)\n        count\n        (if (even? n)\n            (helper (/ n 2) count)\n            (helper (/ n 2) (* 2 count)))))\n  (helper n 1))\n",
    "  (if (not (even? n))\n      (highest_Power_of_2 (- n 1))\n      (if (= n 2)\n          2\n          (highest_Power_of_2 (/ n 2)))))\n",
    "  (define (helper n p)\n    (if (&lt;= (* p p) n)\n        (helper n (* p 2))\n        p))\n  (helper n 1))\n",
    "  (define (helper n count)\n    (if (&lt;= (expt 2 count) n)\n        (helper n (+ count 1))\n        (- count 1)))\n  (helper n 0))\n",
    "  (if (= n 1)\n      1\n      (if (= (remainder n 2) 0)\n          (highest_Power_of_2 (/ n 2))\n          (/ n 2))))\n",
    "  (if (= n 1)\n      1\n      (if (= (remainder n 2) 0)\n          (highest_Power_of_2 (/ n 2))\n          (/ n 2))))\n",
    "  (define (helper n p)\n    (if (<= (expt 2 p) n)\n        (helper n (+ p 1))\n        (- p 1)))\n  (helper n 0))\n",
    "  (if (not (even? n))\n      (highest_Power_of_2 (- n 1))\n      (if (= n 2)\n          2\n          (highest_Power_of_2 (/ n 2)))))\n",
    "  (if (= n 1)\n      1\n      (if (= (remainder n 2) 0)\n          (highest_Power_of_2 (/ n 2))\n          (/ n 2))))\n"
  ]
}
{
  "name": "mbpp_785_tuple_str_int",
  "language": "rkt",
  "prompt": "#lang racket\n\n;; Write a function to convert list string to integer list.\n(define (tuple_str_int test_str)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_785_tuple_str_int.py",
  "prompt_terminology": "reworded",
  "tests": "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate tuple_str_int))\n    (check-equal? (candidate \"(7, 8, 9)\") (list 7 8 9))\n    (check-equal? (candidate \"(1, 2, 3)\") (list 1 2 3))\n    (check-equal? (candidate \"(4, 5, 6)\") (list 4 5 6))\n    (check-equal? (candidate \"(7, 81, 19)\") (list 7 81 19))\n))\n\n(test-humaneval)",
  "stop_tokens": [
    "\n(define ",
    "\n#|",
    "\n;",
    "\n("
  ],
  "completions": [
    "  (map string->number (string-split test_str #\\,)))\n",
    "  (map string->number (string-split test_str #\\,)))\n",
    "  (map string->number (string-split test_str #\\,)))\n",
    "  (map string->number (string-split test_str #\\,)))\n",
    "  (map string->number (string-split test_str #\\,)))\n",
    "  (map string->number (string-split test_str #\\,)))\n",
    "  (map (lambda (x) (string->number x)) test_str))\n",
    "  (map string->number (string-split test_str #\\,)))\n",
    "  (map string->number (string-split test_str #\\,)))\n",
    "  (map string->number (string-split test_str #\\,)))\n",
    "  (map string->number (string-split test_str #\\,)))\n",
    "  (map string->number (string-split test_str #\\,)))\n",
    "  (map string->number (string-split test_str #\\,)))\n",
    "  (map string->number (string-split test_str #\\,)))\n",
    "  (map string->number (string-split test_str \",\")))\n",
    "  (map string->number (string-split test_str #\\,)))\n",
    "  (map string->number (string-split test_str #\\,)))\n",
    "  (map string->number (string-split test_str #\\,)))\n",
    "  (map string->number (string-split test_str #\\,)))\n",
    "  (map string->number (string-split test_str #\\,)))\n",
    "  (map string->number (string-split test_str #\\,)))\n",
    "  (map string->number (string-split test_str #\\,)))\n",
    "  (map string->number (string-split test_str #\\,)))\n",
    "  (map string->number (string-split test_str #rx\",\")))\n",
    "  (map string->number (string-split test_str #\\,)))\n",
    "  (map string->number (string-split test_str #\\,)))\n",
    "  (map string->number (string-split test_str #\\,)))\n",
    "  (map string->number (string-split test_str #\\,)))\n",
    "  (map string->number (string-split test_str #\\,)))\n",
    "  (map string->number (string-split test_str #\\,)))\n",
    "  (map string->number (string-split test_str \",\")))\n",
    "  (map string->number (string-split test_str #\\,)))\n",
    "  (map string->number (string-split test_str #\\,)))\n",
    "  (map string->number (string-split test_str #\\,)))\n",
    "  (map (lambda (x) (string->number x)) (string-split test_str \",\")))\n",
    "  (map string->number (string-split test_str #\\,)))\n",
    "  (map string->number (string-split test_str #\\,)))\n",
    "  (map string->number (string-split test_str #rx\",\")))\n",
    "  (map string->number (string-split test_str #\\,)))\n",
    "  (map string->number (string-split test_str #\\,)))\n",
    "  (map string->number test_str))\n",
    "  (map string->number (string-split test_str #\\,)))\n",
    "  (map string->number (string-split test_str #\\,)))\n",
    "  (map string->number (string-split test_str #rx\",\")))\n",
    "  (map string->number (string-split test_str #\\,)))\n",
    "  (map string->number (string-split test_str #\\,)))\n",
    "  (map string->number (string-split test_str #\\,)))\n",
    "  (map string->number (string-split test_str #\\,)))\n",
    "  (map string->number (string-split test_str #\\,)))\n",
    "  (map string->number (string-split test_str #\\,)))\n",
    "  (map string->number (string-split test_str #\\,)))\n",
    "  (map string->number (string-split test_str #\\,)))\n",
    "  (map string->number (string-split test_str #\\,)))\n",
    "  (map string->number (string-split test_str #rx\",\")))\n",
    "  (map string->number (string-split test_str #\\,)))\n",
    "  (map string->number (string-split test_str #rx\",\")))\n",
    "  (map string->number (string-split test_str #\\,)))\n",
    "  (map string->number (string-split test_str \",\")))\n",
    "  (map string->number (string-split test_str #\\,)))\n",
    "  (map string->number (string-split test_str \",\")))\n",
    "  (map string->number (string-split test_str #\\,)))\n",
    "  (map string->number (string-split test_str #\\,)))\n",
    "  (map string->number (string-split test_str \",\")))\n",
    "  (map string->number (string-split test_str #\\,)))\n",
    "  (map string->number (string-split test_str \",\")))\n",
    "  (map string->number (string-split test_str #\\,)))\n",
    "  (map string->number (string-split test_str #rx\",\")))\n",
    "  (map string->number (string-split test_str #\\,)))\n",
    "  (map string->number (string-split test_str #rx\",\")))\n",
    "  (map string->number (string-split test_str #\\,)))\n",
    "  (map string->number (string-split test_str #\\,)))\n",
    "  (map string->number (string-split test_str #\\,)))\n",
    "  (map string->number (string-split test_str #rx\",\")))\n",
    "  (map string->number (string-split test_str #\\,)))\n",
    "  (map string->number (string-split test_str #\\,)))\n",
    "  (map string->number (string-split test_str #\\,)))\n",
    "  (map string->number (string-split test_str #\\,)))\n",
    "  (map string->number (string-split test_str #\\,)))\n",
    "  (map string->number (string-split test_str #\\,)))\n",
    "  (map string->number (string-split test_str \",\")))\n",
    "  (map string->number (string-split test_str #\\,)))\n",
    "  (map string->number (string-split test_str #\\,)))\n",
    "  (map string->number (string-split test_str #rx\",\")))\n",
    "  (map string->number (string-split test_str \",\")))\n",
    "  (map string->number (string-split test_str #\\,)))\n",
    "  (map string->number (string-split test_str #\\,)))\n",
    "  (map string->number (string-split test_str)))\n",
    "  (map string->number (string-split test_str #\\,)))\n",
    "  (map string->number (string-split test_str \",\")))\n",
    "  (map string->number (string-split test_str #\\,)))\n",
    "  (map string->number (string-split test_str \",\")))\n",
    "  (map string->number (string-split test_str #\\,)))\n",
    "  (map string->number (string-split test_str #\\,)))\n",
    "  (map string->number (string-split test_str #\\,)))\n",
    "  (map string->number (string-split test_str #\\,)))\n",
    "  (map string->number (string-split test_str #\\,)))\n",
    "  (map string->number (string-split test_str #rx\",\")))\n",
    "  (map string->number (string-split test_str #\\,)))\n",
    "  (map string->number (string-split test_str #\\,)))\n",
    "  (map string->number (string-split test_str #\\,)))\n",
    "  (map string->number (string-split test_str #\\,)))\n",
    "  (map string->number (string-split test_str #\\,)))\n",
    "  (map string->number (string-split test_str \",\")))\n",
    "  (map string->number (string-split test_str #\\,)))\n",
    "  (map string->number (string-split test_str #\\,)))\n",
    "  (map string->number (string-split test_str #rx\" \")))\n",
    "  (map string->number (string-split test_str #\\,)))\n",
    "  (map string->number (string-split test_str #\\,)))\n",
    "  (map string->number (string-split test_str #\\,)))\n",
    "  (map string->number (string-split test_str #\\,)))\n",
    "  (map string->number (string-split test_str #\\,)))\n",
    "  (map string->number (string-split test_str \",\")))\n",
    "  (map string->number (string-split test_str #\\,)))\n",
    "  (map string->number (string-split test_str \",\")))\n",
    "  (map string->number (string-split test_str #rx\",\")))\n",
    "  (map string->number (string-split test_str #\\,)))\n",
    "  (map string->number (string-split test_str #\\,)))\n",
    "  (map string->number (string-split test_str #\\,)))\n",
    "  (map string->number (string-split test_str #\\,)))\n",
    "  (map string->number (string-split test_str #\\,)))\n",
    "  (map string->number (string-split test_str #\\,)))\n",
    "  (map string->number (string-split test_str \",\")))\n",
    "  (map string->number (string-split test_str #\\,)))\n",
    "  (map string->number (string-split test_str #\\,)))\n",
    "  (map string->number (string-split test_str #\\,)))\n",
    "  (map string->number (string-split test_str #\\,)))\n",
    "  (map string->number (string-split test_str #\\,)))\n",
    "  (map string->number (string-split test_str #\\,)))\n",
    "  (map string->number (string-split test_str #\\,)))\n",
    "  (map string->number (string-split test_str \",\")))\n",
    "  (map string->number (string-split test_str #\\,)))\n",
    "  (map string->number (string-split test_str #\\,)))\n",
    "  (map string->number (string-split test_str \",\")))\n",
    "  (map string->number (string-split test_str #\\,)))\n",
    "  (map string->number (string-split test_str #\\,)))\n",
    "  (map string->number (string-split test_str \",\")))\n",
    "  (map string->number (string-split test_str #\\,)))\n",
    "  (map string->number (string-split test_str #\\,)))\n",
    "  (map string->number (string-split test_str \",\")))\n",
    "  (map string->number (string-split test_str #\\,)))\n",
    "  (map (lambda (x) (string->number x)) test_str))\n",
    "  (map string->number (string-split test_str #\\,)))\n",
    "  (map string->number (string-split test_str #rx\",\")))\n",
    "  (map string->number (string-split test_str #rx\"[,]\")))\n",
    "  (map string->number (string-split test_str \",\")))\n",
    "  (map string->number (string-split test_str #\\,)))\n",
    "  (map string->number (string-split test_str #\\,)))\n",
    "  (map string->number (string-split test_str #\\,)))\n",
    "  (map string->number (string-split test_str #\\,)))\n",
    "  (map string->number (string-split test_str #\\,)))\n",
    "  (map string->number (string-split test_str #\\,)))\n",
    "  (map string->number (string-split test_str #\\,)))\n",
    "  (map string->number (string-split test_str #\\,)))\n",
    "  (map string->number (string-split test_str)))\n",
    "  (map string->number test_str))\n",
    "  (map string->number (string-split test_str #\\,)))\n",
    "  (map string->number (string-split test_str #\\,)))\n",
    "  (map string->number (string-split test_str \",\")))\n",
    "  (map string->number (string-split test_str #\\,)))\n",
    "  (map string->number (string-split test_str #\\,)))\n",
    "  (map (lambda (x) (string->number x)) test_str))\n",
    "  (map string->number (string-split test_str #\\,)))\n",
    "  (map string->number (string-split test_str \",\")))\n",
    "  (map string->number (string-split test_str #\\,)))\n",
    "  (map string->number (string-split test_str #\\,)))\n",
    "  (map string->number (string-split test_str #\\,)))\n",
    "  (map string->number (string-split test_str #\\,)))\n",
    "  (map string->number (string-split test_str #\\,)))\n",
    "  (map string->number (string-split test_str #\\,)))\n",
    "  (map string->number (string-split test_str #rx\",\")))\n",
    "  (map string->number (string-split test_str #\\,)))\n",
    "  (map string->number (string-split test_str #\\,)))\n",
    "  (map string->number (string-split test_str #\\,)))\n",
    "  (map string->number (string-split test_str \",\")))\n",
    "  (map string->number (string-split test_str #\\,)))\n",
    "  (map string->number (string-split test_str #\\,)))\n",
    "  (map string->number (string-split test_str #\\,)))\n",
    "  (map string->number (string-split test_str #\\,)))\n",
    "  (map string->number (string-split test_str #\\,)))\n",
    "  (map string->number (string-split test_str #\\,)))\n",
    "  (map string->number (string-split test_str #\\,)))\n",
    "  (map string->number (string-split test_str #\\,)))\n",
    "  (map string->number (string-split test_str #rx\"[,]\")))\n",
    "  (map string->number (string-split test_str #\\,)))\n",
    "  (map string->number (string-split test_str #\\,)))\n",
    "  (map string->number (string-split test_str #rx\",\")))\n",
    "  (map string->number (string-split test_str #\\,)))\n",
    "  (map string->number (string-split test_str #\\,)))\n",
    "  (map string->number (string-split test_str #\\,)))\n",
    "  (map string->number (string-split test_str #\\,)))\n",
    "  (map string->number (string-split test_str #\\,)))\n",
    "  (map string->number (string-split test_str \",\")))\n",
    "  (map string->number (string-split test_str \",\")))\n",
    "  (map string->number (string-split test_str #\\,)))\n",
    "  (map string->number (string-split test_str #\\,)))\n",
    "  (map string->number (string-split test_str \",\")))\n",
    "  (map string->number (string-split test_str \",\")))\n",
    "  (map string->number (string-split test_str #\\,)))\n",
    "  (map string->number (string-split test_str #rx\" \")))\n",
    "  (map string->number (string-split test_str #\\,)))\n"
  ]
}
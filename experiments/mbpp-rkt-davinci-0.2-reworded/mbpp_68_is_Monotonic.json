{
  "name": "mbpp_68_is_Monotonic",
  "language": "rkt",
  "prompt": "#lang racket\n\n;; Write a rktthon function to check whether the given list is monotonic or not.\n(define (is_Monotonic A)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_68_is_Monotonic.py",
  "prompt_terminology": "reworded",
  "tests": "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate is_Monotonic))\n    (check-equal? (candidate (list 6 5 4 4)) #t)\n    (check-equal? (candidate (list 1 2 2 3)) #t)\n    (check-equal? (candidate (list 1 3 2)) #f)\n))\n\n(test-humaneval)",
  "stop_tokens": [
    "\n(define ",
    "\n#|",
    "\n;",
    "\n("
  ],
  "completions": [
    "  (cond\n    [(empty? A) #t]\n    [(empty? (rest A)) #t]\n    [(> (first A) (first (rest A))) #f]\n    [else (is_Monotonic (rest A))]))\n",
    "  (cond\n    [(null? A) #t]\n    [(null? (cdr A)) #t]\n    [(>= (car A) (cadr A)) (is_Monotonic (cdr A))]\n    [else #f]))\n",
    "  (cond\n    [(empty? A) #t]\n    [(empty? (rest A)) #t]\n    [(> (first A) (first (rest A))) #f]\n    [else (is_Monotonic (rest A))]))\n",
    "  (cond\n    [(empty? A) #t]\n    [(empty? (rest A)) #t]\n    [(< (first A) (first (rest A))) (is_Monotonic (rest A))]\n    [else #f]))\n",
    "  (cond\n    [(empty? A) #t]\n    [(empty? (rest A)) #t]\n    [(>= (first A) (first (rest A))) (is_Monotonic (rest A))]\n    [else #f]))\n",
    "  (if (null? (cdr A))\n      #t\n      (if (and (<= (car A) (cadr A)) (is_Monotonic (cdr A)))\n          #t\n          #f)))\n",
    "  (cond\n    [(empty? A) #t]\n    [(empty? (rest A)) #t]\n    [(> (first A) (first (rest A))) #f]\n    [else (is_Monotonic (rest A))]))\n",
    "  (cond\n    [(empty? A) #t]\n    [(empty? (rest A)) #t]\n    [(> (first A) (second A)) #f]\n    [else (is_Monotonic (rest A))]))\n",
    "  (if (null? (cdr A))\n      #t\n      (if (and (<= (car A) (cadr A)) (is_Monotonic (cdr A)))\n          #t\n          #f)))\n",
    "  (cond\n    [(empty? A) #t]\n    [(empty? (rest A)) #t]\n    [else\n     (and\n      (or (and (<= (first A) (first (rest A))) (is_Monotonic (rest A)))\n          (and (>= (first A) (first (rest A))) (is_Monotonic (rest A)))))]))\n",
    "  (cond\n    [(null? A) #t]\n    [(null? (cdr A)) #t]\n    [(> (car A) (cadr A)) #f]\n    [else (is_Monotonic (cdr A))]))\n",
    "  (cond\n    [(empty? A) #t]\n    [(= (length A) 1) #t]\n    [(and (<= (first A) (second A)) (is_Monotonic (rest A))) #t]\n    [else #f]))\n",
    "  (cond\n    [(empty? A) #t]\n    [(empty? (rest A)) #t]\n    [(> (first A) (first (rest A))) #f]\n    [else (is_Monotonic (rest A))]))\n",
    "  (cond\n    [(empty? A) #t]\n    [(empty? (rest A)) #t]\n    [(<= (first A) (first (rest A))) (is_Monotonic (rest A))]\n    [else #f]))\n",
    "  (cond\n    [(empty? A) #t]\n    [(empty? (rest A)) #t]\n    [(< (first A) (first (rest A))) (is_Monotonic (rest A))]\n    [else #f]))\n",
    "  (cond\n    [(empty? A) #t]\n    [(empty? (rest A)) #t]\n    [else\n     (cond\n       [(> (first A) (first (rest A))) (is_Monotonic (rest A))]\n       [(< (first A) (first (rest A))) (is_Monotonic (rest A))]\n       [else #f])]))\n",
    "  (cond\n    [(empty? A) #t]\n    [(empty? (rest A)) #t]\n    [(>= (first A) (first (rest A))) (is_Monotonic (rest A))]\n    [else #f]))\n",
    "  (if (null? (cdr A))\n      #t\n      (if (and (<= (car A) (cadr A)) (is_Monotonic (cdr A)))\n          #t\n          #f)))\n",
    "  (cond\n    [(empty? A) #t]\n    [(empty? (rest A)) #t]\n    [(< (first A) (first (rest A))) (is_Monotonic (rest A))]\n    [else #f]))\n",
    "  (cond\n    [(empty? A) #t]\n    [(empty? (rest A)) #t]\n    [(> (first A) (first (rest A))) #f]\n    [else (is_Monotonic (rest A))]))\n",
    "  (if (null? (cdr A))\n      #t\n      (if (and (<= (car A) (cadr A)) (is_Monotonic (cdr A)))\n          #t\n          #f)))\n",
    "  (cond\n    [(null? A) #t]\n    [(null? (cdr A)) #t]\n    [(< (car A) (car (cdr A))) (is_Monotonic (cdr A))]\n    [else #f]))\n",
    "  (cond\n    [(empty? A) #t]\n    [(empty? (rest A)) #t]\n    [(>= (first A) (first (rest A))) (is_Monotonic (rest A))]\n    [else #f]))\n",
    "  (cond\n    [(empty? A) #t]\n    [(empty? (rest A)) #t]\n    [else\n     (and\n      (is_Monotonic (rest A))\n      (or\n       (and\n        (= (first A) (first (rest A)))\n        (= (first A) (first (rest (rest A)))))\n       (and\n        (< (first A) (first (rest A)))\n        (< (first A) (first (rest (rest A)))))\n       (and\n        (> (first A) (first (rest A)))\n        (> (first A) (first (rest (rest A)))))))]))\n",
    "  (cond\n    [(empty? A) #t]\n    [(empty? (rest A)) #t]\n    [(>= (first A) (first (rest A))) (is_Monotonic (rest A))]\n    [else #f]))\n",
    "  (cond\n    [(empty? A) #t]\n    [(empty? (cdr A)) #t]\n    [(>= (car A) (car (cdr A))) (is_Monotonic (cdr A))]\n    [else #f]))\n",
    "  (cond\n    [(empty? A) #t]\n    [(< (first A) (second A)) (is_Monotonic (rest A))]\n    [(> (first A) (second A)) (is_Monotonic (rest A))]\n    [else #f]))\n",
    "  (cond\n    [(empty? A) #t]\n    [(empty? (rest A)) #t]\n    [(< (first A) (first (rest A))) (is_Monotonic (rest A))]\n    [else #f]))\n",
    "  (cond\n    [(empty? A) #t]\n    [(empty? (rest A)) #t]\n    [(> (first A) (first (rest A))) #f]\n    [else (is_Monotonic (rest A))]))\n",
    "  (cond\n    [(empty? A) #t]\n    [(empty? (rest A)) #t]\n    [(<= (first A) (second A)) (is_Monotonic (rest A))]\n    [else #f]))\n",
    "  (cond\n    [(empty? A) #t]\n    [(empty? (rest A)) #t]\n    [(< (first A) (first (rest A))) (is_Monotonic (rest A))]\n    [else #f]))\n",
    "  (cond\n    [(empty? A) #t]\n    [(empty? (rest A)) #t]\n    [(< (first A) (first (rest A))) (is_Monotonic (rest A))]\n    [else #f]))\n",
    "  (cond\n    [(empty? A) #t]\n    [(empty? (rest A)) #t]\n    [(< (first A) (first (rest A))) (is_Monotonic (rest A))]\n    [else #f]))\n",
    "  (cond\n    [(empty? A) #t]\n    [(empty? (rest A)) #t]\n    [(>= (first A) (first (rest A))) (is_Monotonic (rest A))]\n    [else #f]))\n",
    "  (cond\n    [(null? A) #t]\n    [(null? (cdr A)) #t]\n    [(< (car A) (cadr A)) (is_Monotonic (cdr A))]\n    [(> (car A) (cadr A)) (is_Monotonic (cdr A))]\n    [else #f]))\n",
    "  (cond\n    [(empty? A) #t]\n    [(empty? (rest A)) #t]\n    [(<= (first A) (first (rest A))) (is_Monotonic (rest A))]\n    [else #f]))\n",
    "  (cond\n    [(empty? A) #t]\n    [(empty? (rest A)) #t]\n    [(>= (first A) (first (rest A))) (is_Monotonic (rest A))]\n    [else #f]))\n",
    "  (cond\n    [(null? A) #t]\n    [(null? (cdr A)) #t]\n    [(< (car A) (cadr A)) (is_Monotonic (cdr A))]\n    [(> (car A) (cadr A)) (is_Monotonic (cdr A))]\n    [else #f]))\n",
    "  (cond\n    [(empty? A) #t]\n    [(empty? (rest A)) #t]\n    [(> (first A) (first (rest A))) #f]\n    [else (is_Monotonic (rest A))]))\n",
    "  (cond\n    [(empty? A) #t]\n    [(empty? (rest A)) #t]\n    [(> (first A) (first (rest A))) #f]\n    [else (is_Monotonic (rest A))]))\n",
    "  (cond\n    [(empty? A) #t]\n    [(empty? (rest A)) #t]\n    [(> (first A) (first (rest A))) #f]\n    [else (is_Monotonic (rest A))]))\n",
    "  (define (is_Monotonic_Helper A)\n    (cond\n      [(empty? A) #t]\n      [(empty? (rest A)) #t]\n      [(< (first A) (first (rest A))) (is_Monotonic_Helper (rest A))]\n      [else #f]))\n  (is_Monotonic_Helper A))\n",
    "  (cond\n    [(empty? A) #t]\n    [(empty? (rest A)) #t]\n    [(< (first A) (first (rest A))) (is_Monotonic (rest A))]\n    [else #f]))\n",
    "  (cond\n    [(null? A) #t]\n    [(null? (cdr A)) #t]\n    [(< (car A) (cadr A)) (is_Monotonic (cdr A))]\n    [(> (car A) (cadr A)) (is_Monotonic (cdr A))]\n    [else #f]))\n",
    "  (cond\n    [(empty? A) #t]\n    [(empty? (rest A)) #t]\n    [else\n     (and\n      (is_Monotonic (rest A))\n      (or\n       (and (<= (first A) (first (rest A)))\n            (is_Monotonic (rest A)))\n       (and (>= (first A) (first (rest A)))\n            (is_Monotonic (rest A)))))]))\n",
    "  (cond\n    [(empty? A) #t]\n    [(empty? (rest A)) #t]\n    [(< (first A) (first (rest A))) (is_Monotonic (rest A))]\n    [else #f]))\n",
    "  (if (null? (cdr A))\n      #t\n      (if (and (<= (car A) (cadr A))\n               (is_Monotonic (cdr A)))\n          #t\n          #f)))\n",
    "  (cond\n    [(empty? A) #t]\n    [(empty? (rest A)) #t]\n    [(> (first A) (first (rest A))) #f]\n    [else (is_Monotonic (rest A))]))\n",
    "  (cond [(empty? A) #t]\n        [(empty? (rest A)) #t]\n        [else\n         (cond [(> (first A) (first (rest A)))\n                (is_Monotonic (rest A))]\n               [(< (first A) (first (rest A)))\n                (is_Monotonic (rest A))]\n               [else #f])]))\n",
    "  (cond\n    [(empty? A) true]\n    [(empty? (rest A)) true]\n    [(< (first A) (first (rest A))) (is_Monotonic (rest A))]\n    [else false]))\n",
    "  (cond\n    [(empty? A) #t]\n    [(empty? (rest A)) #t]\n    [(and (<= (first A) (second A)) (is_Monotonic (rest A))) #t]\n    [else #f]))\n",
    "  (cond\n    [(empty? A) #t]\n    [(empty? (rest A)) #t]\n    [(> (first A) (first (rest A))) #f]\n    [else (is_Monotonic (rest A))]))\n",
    "  (cond\n    [(null? A) #t]\n    [(null? (cdr A)) #t]\n    [(and (<= (car A) (cadr A)) (is_Monotonic (cdr A))) #t]\n    [else #f]))\n",
    "  (if (null? (cdr A))\n      #t\n      (if (and (<= (car A) (cadr A))\n               (is_Monotonic (cdr A)))\n          #t\n          #f)))\n",
    "  (if (null? A)\n      #t\n      (if (null? (cdr A))\n          #t\n          (if (< (car A) (cadr A))\n              (is_Monotonic (cdr A))\n              #f))))\n",
    "  (cond\n    [(empty? A) #t]\n    [(empty? (rest A)) #t]\n    [(> (first A) (second A)) #f]\n    [else (is_Monotonic (rest A))]))\n",
    "  (cond\n    [(null? A) #t]\n    [(null? (cdr A)) #t]\n    [(>= (car A) (cadr A)) (is_Monotonic (cdr A))]\n    [else #f]))\n",
    "  (cond\n    [(empty? A) #t]\n    [(empty? (rest A)) #t]\n    [(< (first A) (first (rest A))) (is_Monotonic (rest A))]\n    [else #f]))\n",
    "  (if (null? (cdr A))\n      #t\n      (if (and (or (null? (cdr (cdr A)))\n                   (null? (cdr (cdr (cdr A)))))\n               (or (and (< (car A) (car (cdr A)))\n                        (< (car (cdr A)) (car (cdr (cdr A)))))\n                   (and (> (car A) (car (cdr A)))\n                        (> (car (cdr A)) (car (cdr (cdr A)))))))\n          #t\n          (is_Monotonic (cdr A)))))\n",
    "  (cond\n    [(empty? A) #t]\n    [(empty? (rest A)) #t]\n    [(< (first A) (first (rest A))) (is_Monotonic (rest A))]\n    [else #f]))\n",
    "  (cond\n    [(empty? A) true]\n    [(empty? (rest A)) true]\n    [(< (first A) (first (rest A))) (is_Monotonic (rest A))]\n    [else false]))\n",
    "  (cond\n    [(empty? A) #t]\n    [(empty? (rest A)) #t]\n    [(< (first A) (first (rest A))) (is_Monotonic (rest A))]\n    [else #f]))\n",
    "  (cond\n    [(empty? A) true]\n    [(empty? (rest A)) true]\n    [(and (<= (first A) (first (rest A)))\n          (is_Monotonic (rest A))) true]\n    [else false]))\n",
    "  (cond\n    [(empty? A) #t]\n    [(empty? (rest A)) #t]\n    [(< (first A) (first (rest A))) (is_Monotonic (rest A))]\n    [else #f]))\n",
    "  (cond\n    [(empty? A) true]\n    [(empty? (rest A)) true]\n    [(< (first A) (first (rest A))) (is_Monotonic (rest A))]\n    [else false]))\n",
    "  (cond\n    [(empty? A) #t]\n    [(empty? (rest A)) #t]\n    [(< (first A) (first (rest A))) (is_Monotonic (rest A))]\n    [else #f]))\n",
    "  (cond\n    [(empty? A) #t]\n    [(empty? (rest A)) #t]\n    [(and (<= (first A) (first (rest A))) (is_Monotonic (rest A))) #t]\n    [else #f]))\n",
    "  (cond\n    [(null? A) #t]\n    [(null? (cdr A)) #t]\n    [(< (car A) (car (cdr A))) (is_Monotonic (cdr A))]\n    [else #f]))\n",
    "  (cond\n    [(empty? A) #t]\n    [(empty? (rest A)) #t]\n    [(> (first A) (first (rest A))) #f]\n    [else (is_Monotonic (rest A))]))\n",
    "  (cond\n    [(null? A) #t]\n    [(null? (cdr A)) #t]\n    [(< (car A) (car (cdr A))) (is_Monotonic (cdr A))]\n    [else #f]))\n",
    "  (cond\n    [(empty? A) #t]\n    [(empty? (rest A)) #t]\n    [(> (first A) (first (rest A))) #f]\n    [else (is_Monotonic (rest A))]))\n",
    "  (cond\n    [(empty? A) #t]\n    [(empty? (rest A)) #t]\n    [(>= (first A) (first (rest A))) (is_Monotonic (rest A))]\n    [else #f]))\n",
    "  (cond\n    [(empty? A) #t]\n    [(empty? (rest A)) #t]\n    [(> (first A) (first (rest A))) #f]\n    [else (is_Monotonic (rest A))]))\n",
    "  (cond\n    [(empty? A) true]\n    [(empty? (rest A)) true]\n    [else (and (is_Monotonic (rest A))\n               (or (<= (first A) (first (rest A)))\n                   (>= (first A) (first (rest A)))))]))\n",
    "  (cond\n    [(null? A) #t]\n    [(null? (cdr A)) #t]\n    [(< (car A) (car (cdr A))) (is_Monotonic (cdr A))]\n    [else #f]))\n",
    "  (cond\n    [(empty? A) #t]\n    [(empty? (rest A)) #t]\n    [(> (first A) (first (rest A))) #f]\n    [else (is_Monotonic (rest A))]))\n",
    "  (cond\n    [(empty? A) #t]\n    [(empty? (rest A)) #t]\n    [(and (<= (first A) (second A)) (is_Monotonic (rest A))) #t]\n    [else #f]))\n",
    "  (cond\n    [(empty? A) #t]\n    [(empty? (rest A)) #t]\n    [(> (first A) (first (rest A))) #f]\n    [else (is_Monotonic (rest A))]))\n",
    "  (cond\n    [(empty? A) #t]\n    [(empty? (rest A)) #t]\n    [(and (<= (first A) (first (rest A))) (is_Monotonic (rest A))) #t]\n    [else #f]))\n",
    "  (cond\n    [(empty? A) #t]\n    [(empty? (rest A)) #t]\n    [(> (first A) (first (rest A))) #f]\n    [else (is_Monotonic (rest A))]))\n",
    "  (cond\n    [(empty? A) true]\n    [(empty? (rest A)) true]\n    [else\n     (cond\n       [(< (first A) (first (rest A))) (is_Monotonic (rest A))]\n       [else false])]))\n",
    "  (cond\n    [(empty? A) #t]\n    [(empty? (rest A)) #t]\n    [(>= (first A) (first (rest A))) (is_Monotonic (rest A))]\n    [else #f]))\n",
    "  (cond\n    [(empty? A) #t]\n    [(empty? (rest A)) #t]\n    [(<= (first A) (first (rest A))) (is_Monotonic (rest A))]\n    [else #f]))\n",
    "  (cond\n    [(empty? A) #t]\n    [(empty? (rest A)) #t]\n    [(> (first A) (first (rest A))) #f]\n    [else (is_Monotonic (rest A))]))\n",
    "  (cond\n    [(empty? A) #t]\n    [(empty? (rest A)) #t]\n    [(<= (first A) (second A)) (is_Monotonic (rest A))]\n    [else #f]))\n",
    "  (cond\n    [(empty? A) #t]\n    [(empty? (rest A)) #t]\n    [(> (first A) (first (rest A))) #f]\n    [else (is_Monotonic (rest A))]))\n",
    "  (cond\n    [(empty? A) #t]\n    [(empty? (rest A)) #t]\n    [(< (first A) (first (rest A))) (is_Monotonic (rest A))]\n    [else #f]))\n",
    "  (cond\n    [(empty? A) #t]\n    [(empty? (rest A)) #t]\n    [(< (first A) (first (rest A))) (is_Monotonic (rest A))]\n    [else #f]))\n",
    "  (cond\n    [(empty? A) #t]\n    [(empty? (rest A)) #t]\n    [(>= (first A) (first (rest A))) (is_Monotonic (rest A))]\n    [else #f]))\n",
    "  (cond\n    [(null? A) #t]\n    [(null? (cdr A)) #t]\n    [(> (car A) (cadr A)) #f]\n    [else (is_Monotonic (cdr A))]))\n",
    "  (cond\n    [(null? A) #t]\n    [(null? (cdr A)) #t]\n    [(> (car A) (car (cdr A))) #f]\n    [else (is_Monotonic (cdr A))]))\n",
    "  (cond\n    [(null? A) #t]\n    [(null? (cdr A)) #t]\n    [(> (car A) (cadr A)) #f]\n    [else (is_Monotonic (cdr A))]))\n",
    "  (cond\n    [(empty? A) #t]\n    [(empty? (rest A)) #t]\n    [(> (first A) (first (rest A))) #f]\n    [else (is_Monotonic (rest A))]))\n",
    "  (cond\n    [(null? A) #t]\n    [(null? (cdr A)) #t]\n    [(and (<= (car A) (cadr A)) (is_Monotonic (cdr A))) #t]\n    [else #f]))\n",
    "  (cond\n    [(empty? A) #t]\n    [(empty? (rest A)) #t]\n    [(> (first A) (first (rest A))) #f]\n    [else (is_Monotonic (rest A))]))\n",
    "  (cond\n    [(null? (cdr A)) #t]\n    [(> (car A) (car (cdr A))) (is_Monotonic (cdr A))]\n    [else #f]))\n",
    "  (if (null? (cdr A))\n      #t\n      (if (and (<= (car A) (cadr A)) (is_Monotonic (cdr A)))\n          #t\n          #f)))\n",
    "  (if (null? (cdr A))\n      #t\n      (if (and (not (null? (cdr A)))\n               (or (and (<= (car A) (cadr A))\n                        (is_Monotonic (cdr A)))\n                   (and (>= (car A) (cadr A))\n                        (is_Monotonic (cdr A)))))\n          #t\n          #f)))\n",
    "  (cond\n    [(null? A) #t]\n    [(null? (cdr A)) #t]\n    [(and (<= (car A) (cadr A)) (is_Monotonic (cdr A))) #t]\n    [else #f]))\n",
    "  (if (null? (cdr A))\n      #t\n      (if (and (<= (car A) (cadr A)) (is_Monotonic (cdr A)))\n          #t\n          #f)))\n",
    "  (cond\n    [(empty? A) #t]\n    [(empty? (rest A)) #t]\n    [(> (first A) (first (rest A))) #f]\n    [else (is_Monotonic (rest A))]))\n",
    "  (cond\n    [(empty? A) #t]\n    [(empty? (rest A)) #t]\n    [else\n     (cond\n       [(>= (first A) (first (rest A))) (is_Monotonic (rest A))]\n       [else #f])]))\n",
    "  (cond\n    [(empty? A) #t]\n    [(empty? (rest A)) #t]\n    [(<= (first A) (first (rest A))) (is_Monotonic (rest A))]\n    [else #f]))\n",
    "  (cond\n    [(empty? A) #t]\n    [(empty? (rest A)) #t]\n    [(> (first A) (first (rest A))) #f]\n    [else (is_Monotonic (rest A))]))\n",
    "  (cond\n    [(empty? A) #t]\n    [(empty? (rest A)) #t]\n    [(> (first A) (first (rest A))) #f]\n    [else (is_Monotonic (rest A))]))\n",
    "  (cond\n    [(empty? A) #t]\n    [(and (empty? (rest A)) #t)]\n    [(and (empty? (rest (rest A))) #t)]\n    [(and (empty? (rest (rest (rest A)))) #t)]\n    [else (and (is_Monotonic (rest A))\n               (or (and (is_Monotonic (rest (rest A)))\n                        (or (and (is_Monotonic (rest (rest (rest A))))\n                                 (or (and (is_Monotonic (rest (rest (rest (rest A)))))\n                                          (or (and (is_Monotonic (rest (rest (rest (rest (rest A))))))\n                                                   (or (and (is_Monotonic (rest (rest (rest (rest (rest (rest A))))))))\n                                                        (or (and (is_Monotonic (rest (rest (rest (rest (rest (rest (rest A))))))))\n                                                                 (or (and (is_Monotonic (rest (rest (rest (rest (rest (rest (rest (rest A))))))))))\n                                                                      (or (and (is_Monotonic (rest (rest (rest (rest (rest (rest (rest (rest (rest A))))))))))\n                                                                               (or (and (is_Monotonic (rest (rest (rest (rest (rest (rest (rest (rest (rest (rest A))))))))))))\n                                                                                    (or (and (is_Monotonic (rest (rest (rest (rest (rest (rest (rest (rest (rest (rest (rest A)))))))))))))\n                                                                                         (or (and (is_Monotonic (rest (rest (rest (rest (rest (rest (rest (rest (rest (rest (rest (rest A))))))))))))))\n                                                                                              (or (and (is_Monotonic (rest (rest (rest (rest (rest (rest (rest (rest (rest (rest (rest (rest (rest A)))))))))))))))\n                                                                                                   (or (and (is_Monotonic (rest (rest (rest (rest (rest (rest (rest (rest (rest (rest",
    "  (if (null? (cdr A))\n      #t\n      (if (<= (car A) (car (cdr A)))\n          (is_Monotonic (cdr A))\n          #f)))\n",
    "  (cond\n    [(empty? A) #t]\n    [(empty? (rest A)) #t]\n    [(< (first A) (first (rest A)))\n     (is_Monotonic (rest A))]\n    [else #f]))\n",
    "  (cond\n    [(empty? A) #t]\n    [(empty? (rest A)) #t]\n    [(< (first A) (first (rest A))) (is_Monotonic (rest A))]\n    [else #f]))\n",
    "  (cond\n    [(empty? A) #t]\n    [(empty? (rest A)) #t]\n    [(> (first A) (first (rest A))) #f]\n    [else (is_Monotonic (rest A))]))\n",
    "  (cond\n    [(empty? A) #t]\n    [(empty? (rest A)) #t]\n    [(> (first A) (first (rest A))) #f]\n    [else (is_Monotonic (rest A))]))\n",
    "  (cond\n    [(empty? A) #t]\n    [(empty? (rest A)) #t]\n    [else\n     (cond\n       [(> (first A) (first (rest A))) #f]\n       [(< (first A) (first (rest A))) #f]\n       [else (is_Monotonic (rest A))])]))\n",
    "  (cond\n    [(empty? A) #t]\n    [(empty? (rest A)) #t]\n    [(<= (first A) (first (rest A))) (is_Monotonic (rest A))]\n    [else #f]))\n",
    "  (cond [(empty? A) true]\n        [(empty? (rest A)) true]\n        [else (and (<= (first A) (first (rest A)))\n                   (is_Monotonic (rest A)))]))\n",
    "  (if (null? (cdr A))\n      #t\n      (if (and (apply < (cdr A)) (apply > (cdr A)))\n          #f\n          (is_Monotonic (cdr A)))))\n",
    "  (cond\n    [(empty? A) #t]\n    [(empty? (rest A)) #t]\n    [(> (first A) (first (rest A))) #f]\n    [else (is_Monotonic (rest A))]))\n",
    "  (cond\n    [(empty? A) #t]\n    [(empty? (rest A)) #t]\n    [(> (first A) (first (rest A))) #f]\n    [(< (first A) (first (rest A))) #f]\n    [else (is_Monotonic (rest A))]))\n",
    "  (cond\n    [(empty? A) #t]\n    [(empty? (rest A)) #t]\n    [(> (first A) (first (rest A))) #f]\n    [else (is_Monotonic (rest A))]))\n",
    "  (cond\n    [(empty? A) #t]\n    [(empty? (rest A)) #t]\n    [(>= (first A) (first (rest A))) (is_Monotonic (rest A))]\n    [else #f]))\n",
    "  (cond\n    [(empty? A) #t]\n    [(empty? (rest A)) #t]\n    [(< (first A) (first (rest A))) (is_Monotonic (rest A))]\n    [else #f]))\n",
    "  (cond\n    [(empty? A) #t]\n    [(empty? (rest A)) #t]\n    [(>= (first A) (first (rest A))) (is_Monotonic (rest A))]\n    [else #f]))\n",
    "  (if (null? (cdr A))\n      #t\n      (if (and (<= (car A) (cadr A)) (is_Monotonic (cdr A)))\n          #t\n          #f)))\n",
    "  (cond\n    [(null? A) #t]\n    [(null? (cdr A)) #t]\n    [(<= (car A) (cadr A)) (is_Monotonic (cdr A))]\n    [else #f]))\n",
    "  (cond\n    [(empty? A) #t]\n    [(empty? (rest A)) #t]\n    [(< (first A) (first (rest A))) (is_Monotonic (rest A))]\n    [else #f]))\n",
    "  (cond\n    [(null? A) #t]\n    [(null? (cdr A)) #t]\n    [(< (car A) (cadr A)) (is_Monotonic (cdr A))]\n    [(> (car A) (cadr A)) (is_Monotonic (cdr A))]\n    [else #f]))\n",
    "  (if (null? (cdr A))\n      #t\n      (if (and (<= (car A) (cadr A)) (is_Monotonic (cdr A)))\n          #t\n          #f)))\n",
    "  (cond\n    [(empty? A) #t]\n    [(empty? (rest A)) #t]\n    [(> (first A) (first (rest A))) #f]\n    [else (is_Monotonic (rest A))]))\n",
    "  (cond\n    [(empty? A) #t]\n    [(empty? (rest A)) #t]\n    [(> (first A) (first (rest A))) #f]\n    [else (is_Monotonic (rest A))]))\n",
    "  (cond\n    [(null? A) #t]\n    [(null? (cdr A)) #t]\n    [(> (car A) (cadr A)) #f]\n    [else (is_Monotonic (cdr A))]))\n",
    "  (cond\n    [(null? A) #t]\n    [(null? (cdr A)) #t]\n    [(> (car A) (cadr A)) #f]\n    [else (is_Monotonic (cdr A))]))\n",
    "  (cond\n    [(empty? A) #t]\n    [(empty? (rest A)) #t]\n    [else (and (is_Monotonic (rest A))\n               (or (<= (first A) (first (rest A)))\n                   (>= (first A) (first (rest A)))))]))\n",
    "  (cond\n    [(empty? A) #t]\n    [(empty? (rest A)) #t]\n    [(<= (first A) (first (rest A))) (is_Monotonic (rest A))]\n    [else #f]))\n",
    "  (cond\n    [(null? A) #t]\n    [(null? (cdr A)) #t]\n    [(< (car A) (car (cdr A))) (is_Monotonic (cdr A))]\n    [else #f]))\n",
    "  (cond\n    [(empty? A) #t]\n    [(empty? (rest A)) #t]\n    [(< (first A) (first (rest A))) (is_Monotonic (rest A))]\n    [else #f]))\n",
    "  (cond\n    [(empty? A) #t]\n    [(empty? (rest A)) #t]\n    [(< (first A) (first (rest A))) (is_Monotonic (rest A))]\n    [else #f]))\n",
    "  (cond\n    [(empty? A) #t]\n    [(empty? (rest A)) #t]\n    [(<= (first A) (first (rest A))) (is_Monotonic (rest A))]\n    [else #f]))\n",
    "  (cond\n    [(empty? A) true]\n    [(empty? (rest A)) true]\n    [else\n     (and\n      (or (< (first A) (first (rest A)))\n          (> (first A) (first (rest A))))\n      (is_Monotonic (rest A)))]))\n",
    "  (cond\n    [(empty? A) #t]\n    [(empty? (rest A)) #t]\n    [(< (first A) (first (rest A))) (is_Monotonic (rest A))]\n    [else #f]))\n",
    "  (cond\n    [(empty? A) #t]\n    [(empty? (rest A)) #t]\n    [(< (first A) (second A)) (is_Monotonic (rest A))]\n    [(> (first A) (second A)) (is_Monotonic (rest A))]\n    [else #f]))\n",
    "  (cond\n    [(empty? A) true]\n    [(empty? (rest A)) true]\n    [(> (first A) (first (rest A))) false]\n    [else (is_Monotonic (rest A))]))\n",
    "  (cond\n    [(empty? A) #t]\n    [(empty? (rest A)) #t]\n    [(> (first A) (first (rest A))) #f]\n    [else (is_Monotonic (rest A))]))\n",
    "  (cond\n    [(empty? A) true]\n    [(empty? (rest A)) true]\n    [(< (first A) (first (rest A))) (is_Monotonic (rest A))]\n    [else false]))\n",
    "  (cond\n    [(empty? A) #t]\n    [(empty? (rest A)) #t]\n    [(> (first A) (first (rest A))) #f]\n    [else (is_Monotonic (rest A))]))\n",
    "  (cond\n    [(empty? A) #t]\n    [(empty? (rest A)) #t]\n    [(> (first A) (first (rest A))) #f]\n    [else (is_Monotonic (rest A))]))\n",
    "  (cond\n    [(null? A) #t]\n    [(null? (cdr A)) #t]\n    [(< (car A) (cadr A)) (is_Monotonic (cdr A))]\n    [(> (car A) (cadr A)) (is_Monotonic (cdr A))]\n    [else #f]))\n",
    "  (cond\n    [(null? (cdr A)) #t]\n    [(< (car A) (car (cdr A))) (is_Monotonic (cdr A))]\n    [else #f]))\n",
    "  (cond\n    [(null? (cdr A)) #t]\n    [(< (car A) (car (cdr A))) (is_Monotonic (cdr A))]\n    [else #f]))\n",
    "  (if (null? A)\n      #t\n      (if (null? (cdr A))\n          #t\n          (if (<= (car A) (cadr A))\n              (is_Monotonic (cdr A))\n              #f))))\n",
    "  (cond\n    [(empty? A) #t]\n    [(empty? (rest A)) #t]\n    [(<= (first A) (second A)) (is_Monotonic (rest A))]\n    [else #f]))\n",
    "  (cond\n    [(null? A) #t]\n    [(null? (cdr A)) #t]\n    [(< (car A) (cadr A)) (is_Monotonic (cdr A))]\n    [(> (car A) (cadr A)) (is_Monotonic (cdr A))]\n    [else #f]))\n",
    "  (cond\n    [(null? A) #t]\n    [(null? (cdr A)) #t]\n    [(< (car A) (cadr A)) (is_Monotonic (cdr A))]\n    [(> (car A) (cadr A)) (is_Monotonic (cdr A))]\n    [else #f]))\n",
    "  (cond\n    [(null? A) #t]\n    [(null? (cdr A)) #t]\n    [else\n     (and\n      (cond\n        [(< (car A) (cadr A)) (is_Monotonic (cdr A))]\n        [(> (car A) (cadr A)) (is_Monotonic (cdr A))]\n        [else #f])\n      (cond\n        [(< (car A) (cadr A)) #t]\n        [(> (car A) (cadr A)) #t]\n        [else #f]))]))\n",
    "  (cond\n    [(empty? A) #t]\n    [(empty? (rest A)) #t]\n    [(> (first A) (first (rest A))) #f]\n    [else (is_Monotonic (rest A))]))\n",
    "  (cond\n    [(empty? A) #t]\n    [(empty? (rest A)) #t]\n    [(< (first A) (first (rest A))) (is_Monotonic (rest A))]\n    [else #f]))\n",
    "  (cond\n    [(empty? A) #t]\n    [(empty? (rest A)) #t]\n    [(> (first A) (first (rest A))) #f]\n    [else (is_Monotonic (rest A))]))\n",
    "  (cond\n    [(null? A) #t]\n    [(null? (cdr A)) #t]\n    [(>= (car A) (cadr A)) (is_Monotonic (cdr A))]\n    [else #f]))\n",
    "  (cond\n    [(empty? A) #t]\n    [(empty? (rest A)) #t]\n    [(< (first A) (first (rest A))) (is_Monotonic (rest A))]\n    [else #f]))\n",
    "  (cond\n    [(empty? A) #t]\n    [(empty? (rest A)) #t]\n    [(< (first A) (first (rest A))) (is_Monotonic (rest A))]\n    [else #f]))\n",
    "  (cond\n    [(empty? A) #t]\n    [(empty? (rest A)) #t]\n    [(>= (first A) (first (rest A))) (is_Monotonic (rest A))]\n    [else #f]))\n",
    "  (if (null? A)\n      #t\n      (if (null? (cdr A))\n          #t\n          (if (< (car A) (cadr A))\n              (is_Monotonic (cdr A))\n              #f))))\n",
    "  (cond\n    [(empty? A) #t]\n    [(empty? (rest A)) #t]\n    [(> (first A) (first (rest A))) #f]\n    [else (is_Monotonic (rest A))]))\n",
    "  (cond\n    [(empty? A) #t]\n    [(empty? (rest A)) #t]\n    [(< (first A) (first (rest A))) (is_Monotonic (rest A))]\n    [else #f]))\n",
    "  (cond\n    [(empty? A) #t]\n    [(empty? (rest A)) #t]\n    [(> (first A) (first (rest A))) #f]\n    [else (is_Monotonic (rest A))]))\n",
    "  (cond\n    [(empty? A) #t]\n    [(empty? (rest A)) #t]\n    [(> (first A) (first (rest A))) #f]\n    [else (is_Monotonic (rest A))]))\n",
    "  (cond\n    [(empty? A) #t]\n    [(empty? (rest A)) #t]\n    [else\n     (cond\n       [(>= (first A) (first (rest A))) (is_Monotonic (rest A))]\n       [else #f])]))\n",
    "  (cond\n    [(empty? A) #t]\n    [(empty? (cdr A)) #t]\n    [(>= (car A) (car (cdr A))) (is_Monotonic (cdr A))]\n    [else #f]))\n",
    "  (cond\n    [(empty? A) #t]\n    [(empty? (rest A)) #t]\n    [(< (first A) (first (rest A))) (is_Monotonic (rest A))]\n    [else #f]))\n",
    "  (cond\n    [(empty? A) #t]\n    [(empty? (rest A)) #t]\n    [(and (<= (first A) (first (rest A))) (is_Monotonic (rest A))) #t]\n    [else #f]))\n",
    "  (if (null? (cdr A))\n      #t\n      (if (and (<= (car A) (cadr A)) (is_Monotonic (cdr A)))\n          #t\n          #f)))\n",
    "  (cond\n    [(empty? A) #t]\n    [(empty? (rest A)) #t]\n    [(< (first A) (first (rest A))) (is_Monotonic (rest A))]\n    [else #f]))\n",
    "  (cond\n    [(null? A) #t]\n    [(null? (cdr A)) #t]\n    [(>= (car A) (cadr A)) (is_Monotonic (cdr A))]\n    [else #f]))\n",
    "  (cond\n    [(empty? A) #t]\n    [(empty? (rest A)) #t]\n    [(>= (first A) (first (rest A))) (is_Monotonic (rest A))]\n    [else #f]))\n",
    "  (cond\n    [(empty? A) #t]\n    [(empty? (rest A)) #t]\n    [(>= (first A) (first (rest A))) (is_Monotonic (rest A))]\n    [else #f]))\n",
    "  (cond\n    [(empty? A) #t]\n    [(empty? (rest A)) #t]\n    [else\n     (cond\n       [(> (first A) (first (rest A))) (is_Monotonic (rest A))]\n       [(< (first A) (first (rest A))) (is_Monotonic (rest A))]\n       [else #f])]))\n",
    "  (cond\n    [(empty? A) #t]\n    [(empty? (rest A)) #t]\n    [(< (first A) (first (rest A))) (is_Monotonic (rest A))]\n    [else #f]))\n",
    "  (if (null? A)\n      #t\n      (if (null? (cdr A))\n          #t\n          (if (and (<= (car A) (cadr A)) (is_Monotonic (cdr A)))\n              #t\n              #f))))\n",
    "  (cond\n    [(empty? A) #t]\n    [(empty? (rest A)) #t]\n    [(<= (first A) (first (rest A))) (is_Monotonic (rest A))]\n    [else #f]))\n",
    "  (cond\n    [(empty? A) #t]\n    [(empty? (rest A)) #t]\n    [else\n     (cond\n       [(< (first A) (first (rest A))) (is_Monotonic (rest A))]\n       [(> (first A) (first (rest A))) (is_Monotonic (rest A))]\n       [else #f])]))\n",
    "  (if (null? (cdr A))\n      #t\n      (if (and (<= (car A) (cadr A)) (is_Monotonic (cdr A)))\n          #t\n          #f)))\n",
    "  (cond\n    [(empty? A) #t]\n    [(empty? (rest A)) #t]\n    [(> (first A) (first (rest A))) #f]\n    [else (is_Monotonic (rest A))]))\n",
    "  (cond\n    [(empty? A) #t]\n    [(empty? (rest A)) #t]\n    [(> (first A) (first (rest A))) #f]\n    [else (is_Monotonic (rest A))]))\n",
    "  (cond\n    [(null? A) #t]\n    [(null? (cdr A)) #t]\n    [else (and (<= (car A) (cadr A)) (is_Monotonic (cdr A)))]))\n",
    "  (cond\n    [(empty? A) #t]\n    [(empty? (rest A)) #t]\n    [(< (first A) (first (rest A))) (is_Monotonic (rest A))]\n    [else #f]))\n",
    "  (if (null? (cdr A))\n      #t\n      (if (and (<= (car A) (cadr A)) (is_Monotonic (cdr A)))\n          #t\n          #f)))\n",
    "  (cond\n    [(empty? A) #t]\n    [(empty? (rest A)) #t]\n    [(> (first A) (first (rest A))) #f]\n    [else (is_Monotonic (rest A))]))\n",
    "  (cond\n    [(empty? A) #t]\n    [(empty? (rest A)) #t]\n    [(< (first A) (first (rest A))) (is_Monotonic (rest A))]\n    [else #f]))\n",
    "  (if (null? (cdr A))\n      #t\n      (if (and (<= (car A) (cadr A)) (is_Monotonic (cdr A)))\n          #t\n          #f)))\n",
    "  (cond\n    [(null? A) #t]\n    [(null? (cdr A)) #t]\n    [(> (car A) (car (cdr A))) #f]\n    [else (is_Monotonic (cdr A))]))\n",
    "  (cond\n    [(empty? A) #t]\n    [(empty? (rest A)) #t]\n    [(>= (first A) (second A)) (is_Monotonic (rest A))]\n    [else #f]))\n",
    "  (cond\n    [(null? A) #t]\n    [(null? (cdr A)) #t]\n    [(< (car A) (cadr A)) (is_Monotonic (cdr A))]\n    [(> (car A) (cadr A)) (is_Monotonic (cdr A))]\n    [else #f]))\n",
    "  (if (null? (cdr A))\n      #t\n      (if (and (<= (car A) (cadr A))\n               (is_Monotonic (cdr A)))\n          #t\n          #f)))\n",
    "  (cond\n    [(empty? A) true]\n    [(empty? (rest A)) true]\n    [(< (first A) (first (rest A))) (is_Monotonic (rest A))]\n    [else false]))\n",
    "  (cond\n    [(empty? A) true]\n    [(empty? (rest A)) true]\n    [(>= (first A) (first (rest A))) (is_Monotonic (rest A))]\n    [else false]))\n",
    "  (cond\n    [(empty? A) #t]\n    [(empty? (rest A)) #t]\n    [(< (first A) (first (rest A))) (is_Monotonic (rest A))]\n    [else #f]))\n",
    "  (cond [(empty? A) #t]\n        [(empty? (rest A)) #t]\n        [(> (first A) (first (rest A))) (is_Monotonic (rest A))]\n        [(< (first A) (first (rest A))) (is_Monotonic (rest A))]\n        [else #f]))\n",
    "  (cond\n    [(empty? A) #t]\n    [(empty? (rest A)) #t]\n    [else\n     (and\n      (cond\n        [(< (first A) (first (rest A))) (is_Monotonic (rest A))]\n        [(> (first A) (first (rest A))) (is_Monotonic (rest A))])\n      (cond\n        [(< (first A) (first (rest A))) #t]\n        [(> (first A) (first (rest A))) #t]\n        [else #f]))]))\n",
    "  (cond\n    [(empty? A) #t]\n    [(empty? (rest A)) #t]\n    [(> (first A) (first (rest A))) #f]\n    [else (is_Monotonic (rest A))]))\n",
    "  (cond\n    [(empty? A) #t]\n    [(empty? (rest A)) #t]\n    [(>= (first A) (first (rest A))) (is_Monotonic (rest A))]\n    [else #f]))\n",
    "  (cond\n    [(empty? A) #t]\n    [(empty? (rest A)) #t]\n    [(> (first A) (first (rest A))) #f]\n    [else (is_Monotonic (rest A))]))\n",
    "  (cond\n    [(empty? A) #t]\n    [(empty? (rest A)) #t]\n    [(>= (first A) (first (rest A))) (is_Monotonic (rest A))]\n    [else #f]))\n"
  ]
}
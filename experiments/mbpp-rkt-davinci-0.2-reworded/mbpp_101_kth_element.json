{
  "name": "mbpp_101_kth_element",
  "language": "rkt",
  "prompt": "#lang racket\n\n;; Write a function to find the kth element in the given list using 1-based indexing.\n(define (kth_element arr k)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_101_kth_element.py",
  "prompt_terminology": "reworded",
  "tests": "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate kth_element))\n    (check-equal? (candidate (list 12 3 5 7 19) 2) 3)\n    (check-equal? (candidate (list 17 24 8 23) 3) 8)\n    (check-equal? (candidate (list 16 21 25 36 4) 4) 36)\n))\n\n(test-humaneval)",
  "stop_tokens": [
    "\n(define ",
    "\n#|",
    "\n;",
    "\n("
  ],
  "completions": [
    "  (if (= k 1)\n      (car arr)\n      (kth_element (cdr arr) (- k 1))))\n",
    "  (if (zero? k)\n      (car arr)\n      (kth_element (cdr arr) (- k 1))))\n",
    "  (cond\n    [(empty? arr) (error \"Index out of bounds\")]\n    [(= k 1) (first arr)]\n    [else (kth_element (rest arr) (- k 1))]))\n",
    "  (if (equal? k 1)\n      (car arr)\n      (kth_element (cdr arr) (- k 1))))\n",
    "  (if (= k 1)\n      (car arr)\n      (kth_element (cdr arr) (- k 1))))\n",
    "  (list-ref arr (- k 1)))\n",
    "  (if (= k 1)\n      (car arr)\n      (kth_element (cdr arr) (- k 1))))\n",
    "  (if (= k 1)\n      (car arr)\n      (kth_element (cdr arr) (- k 1))))\n",
    "  (if (empty? arr)\n      (error \"Array is empty\")\n      (if (= k 1)\n          (first arr)\n          (kth_element (rest arr) (- k 1)))))\n",
    "  (if (empty? arr)\n      (error \"Index out of bounds\")\n      (if (= k 1)\n          (first arr)\n          (kth_element (rest arr) (- k 1)))))\n",
    "  (if (= k 1)\n      (car arr)\n      (kth_element (cdr arr) (- k 1))))\n",
    "  (if (= k 1)\n      (car arr)\n      (kth_element (cdr arr) (- k 1))))\n",
    "  (if (= k 1)\n      (car arr)\n      (kth_element (cdr arr) (- k 1))))\n",
    "  (if (= k 1)\n      (car arr)\n      (kth_element (cdr arr) (- k 1))))\n",
    "  (if (= k 1)\n      (car arr)\n      (kth_element (cdr arr) (- k 1))))\n",
    "  (if (empty? arr)\n      (error \"k is out of bounds\")\n      (if (= k 1)\n          (first arr)\n          (kth_element (rest arr) (- k 1)))))\n",
    "  (if (= k 1)\n      (car arr)\n      (kth_element (cdr arr) (- k 1))))\n",
    "  (if (= k 1)\n      (car arr)\n      (kth_element (cdr arr) (- k 1))))\n",
    "  (if (= k 1)\n      (car arr)\n      (kth_element (cdr arr) (- k 1))))\n",
    "  (cond [(empty? arr) (error \"kth_element: empty list\")]\n        [(= k 1) (first arr)]\n        [else (kth_element (rest arr) (- k 1))]))\n"
  ]
}
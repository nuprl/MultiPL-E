{
  "name": "mbpp_106_add_lists",
  "language": "rkt",
  "prompt": "#lang racket\n\n;; Write a function to append the given list to the given lists.\n(define (add_lists test_list test_tup)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_106_add_lists.py",
  "prompt_terminology": "reworded",
  "tests": "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate add_lists))\n    (check-equal? (candidate (list 5 6 7) (list 9 10)) (list 9 10 5 6 7))\n    (check-equal? (candidate (list 6 7 8) (list 10 11)) (list 10 11 6 7 8))\n    (check-equal? (candidate (list 7 8 9) (list 11 12)) (list 11 12 7 8 9))\n))\n\n(test-humaneval)",
  "stop_tokens": [
    "\n(define ",
    "\n#|",
    "\n;",
    "\n("
  ],
  "completions": [
    "  (append test_list test_tup))\n",
    "  (append test_list test_tup))\n",
    "  (append test_list test_tup))\n",
    "  (match test_tup\n    [(list (list a b) (list c d)) (list (list a b c d))]\n    [(list (list a b c) (list d e f)) (list (list a b c d e f))]))\n",
    "  (append test_list test_tup))\n",
    "  (append test_list test_tup))\n",
    "  (append test_list test_tup))\n",
    "  (append test_tup test_list))\n",
    "  (append test_list test_tup))\n",
    "  (append test_list test_tup))\n",
    "  (append test_list test_tup))\n",
    "  (append test_list test_tup))\n",
    "  (append test_list test_tup))\n",
    "  (append test_tup test_list))\n",
    "  (append test_list test_tup))\n",
    "  (append test_list test_tup))\n",
    "  (append test_tup test_list))\n",
    "  (append test_list test_tup))\n",
    "  (map (lambda (x) (append x test_list)) test_tup))\n",
    "  (cond\n    [(empty? test_tup) empty]\n    [else (cons (cons test_list (first test_tup))\n                (add_lists test_list (rest test_tup)))]))\n",
    "  (if (null? test_tup)\n      test_list\n      (cons (car test_tup) (add_lists test_list (cdr test_tup)))))\n",
    "  (append test_list test_tup))\n",
    "  (append test_list test_tup))\n",
    "  (append test_list test_tup))\n",
    "  (append test_list test_tup))\n",
    "  (append test_list test_tup))\n",
    "  (append test_list test_tup))\n",
    "  (append test_list test_tup))\n",
    "  (append test_list test_tup))\n",
    "  (append test_list test_tup))\n",
    "  (append test_list test_tup))\n",
    "  (append test_list test_tup))\n",
    "  (append test_list test_tup))\n",
    "  (append test_list test_tup))\n",
    "  (append test_tup test_list))\n",
    "  (cond\n    [(empty? test_tup) empty]\n    [else (cons (cons test_list (first test_tup))\n                (add_lists test_list (rest test_tup)))]))\n",
    "  (append test_list test_tup))\n",
    "  (append test_list test_tup))\n",
    "  (append test_tup test_list))\n",
    "  (append test_list test_tup))\n",
    "  (append test_tup (list test_list)))\n",
    "  (append test_list test_tup))\n",
    "  (append test_list test_tup))\n",
    "  (list-set test_tup 0 (append (list-ref test_tup 0) test_list)))\n",
    "  (append test_list test_tup))\n",
    "  (append test_list test_tup))\n",
    "  (append test_list test_tup))\n",
    "  (append test_list test_tup))\n",
    "  (append test_list test_tup))\n",
    "  (list-set! test_tup (- (length test_tup) 1)\n             (append (list-ref test_tup (- (length test_tup) 1))\n                     test_list)))\n",
    "  (append test_list test_tup))\n",
    "  (append test_list test_tup))\n",
    "  (append test_list test_tup))\n",
    "  (append test_list test_tup))\n",
    "  (append test_tup test_list))\n",
    "  (append test_list test_tup))\n",
    "  (match test_tup\n    [(list) (list test_list)]\n    [(list (? list? first) rest ...)\n     (cons (append test_list first) (add_lists test_list rest))]))\n",
    "  (append test_list test_tup))\n",
    "  (append test_list test_tup))\n",
    "  (append test_list test_tup))\n",
    "  (append test_list test_tup))\n",
    "  (append test_tup test_list))\n",
    "  (append test_list test_tup))\n",
    "  (append test_list test_tup))\n",
    "  (append test_list test_tup))\n",
    "  (append test_list test_tup))\n",
    "  (append test_list test_tup))\n",
    "  (append test_list test_tup))\n",
    "  (append test_list test_tup))\n",
    "  (list-set! test_tup (length test_tup) test_list)\n  test_tup)\n",
    "  (append test_list test_tup))\n",
    "  (append test_tup test_list))\n",
    "  (append test_list test_tup))\n",
    "  (append test_list test_tup))\n",
    "  (append test_list test_tup))\n",
    "  (append test_list test_tup))\n",
    "  (match test_tup\n    [(cons (cons hd tl) rest) (cons (append test_list hd) (add_lists test_list rest))]\n    [_ '()]))\n",
    "  (append test_list test_tup))\n",
    "  (append test_list test_tup))\n",
    "  (append test_list test_tup))\n",
    "  (cond\n    [(empty? test_tup) empty]\n    [else (cons (cons test_list (first test_tup))\n                (add_lists test_list (rest test_tup)))]))\n",
    "  (append test_list test_tup))\n",
    "  (append test_list test_tup))\n",
    "  (append test_list test_tup))\n",
    "  (append test_list test_tup))\n",
    "  (append test_tup test_list))\n",
    "  (append test_list test_tup))\n",
    "  (append test_tup (list test_list)))\n",
    "  (append test_list test_tup))\n",
    "  (append test_list test_tup))\n",
    "  (append test_list test_tup))\n",
    "  (append test_list test_tup))\n",
    "  (append test_list test_tup))\n",
    "  (append test_list test_tup))\n",
    "  (append test_list test_tup))\n",
    "  (append test_list test_tup))\n",
    "  (append test_list test_tup))\n",
    "  (append test_list test_tup))\n",
    "  (append test_list test_tup))\n",
    "  (append test_list test_tup))\n",
    "  (append test_list test_tup))\n",
    "  (append test_list test_tup))\n",
    "  (append test_list test_tup))\n",
    "  (append test_list test_tup))\n",
    "  (append test_list test_tup))\n",
    "  (append test_list test_tup))\n",
    "  (append test_list test_tup))\n",
    "  (append test_list test_tup))\n",
    "  (append test_list test_tup))\n",
    "  (append test_tup test_list))\n",
    "  (append test_list test_tup))\n",
    "  (append test_tup (list test_list)))\n",
    "  (let ([tup_len (length test_tup)])\n    (for/list ([i (in-range tup_len)])\n      (append test_list (list-ref test_tup i)))))\n",
    "  (append test_list test_tup))\n",
    "  (append test_list test_tup))\n",
    "  (append test_list test_tup))\n",
    "  (append test_list test_tup))\n",
    "  (append test_tup (list test_list)))\n",
    "  (append test_list test_tup))\n",
    "  (append test_list test_tup))\n",
    "  (append test_list test_tup))\n",
    "  (append test_list test_tup))\n",
    "  (map (lambda (x) (append x test_list)) test_tup))\n",
    "  (append test_list test_tup))\n",
    "  (append test_list test_tup))\n",
    "  (append test_list test_tup))\n",
    "  (append test_list test_tup))\n",
    "  (append test_list test_tup))\n",
    "  (append test_list test_tup))\n",
    "  (append test_tup (list test_list)))\n",
    "  (append test_list test_tup))\n",
    "  (append test_list test_tup))\n",
    "  (append test_list test_tup))\n",
    "  (append test_list test_tup))\n",
    "  (append test_list test_tup))\n",
    "  (append test_list test_tup))\n",
    "  (append test_list test_tup))\n",
    "  (list-set test_tup (- (length test_tup) 1)\n            (append (list-ref test_tup (- (length test_tup) 1)) test_list)))\n",
    "  (append test_list test_tup))\n",
    "  (append test_tup test_list))\n",
    "  (append test_tup test_list))\n",
    "  (append test_list test_tup))\n",
    "  (append test_list test_tup))\n",
    "  (append test_list test_tup))\n",
    "  (append test_list test_tup))\n",
    "  (append test_tup (list test_list)))\n",
    "  (append test_list test_tup))\n",
    "  (append test_list test_tup))\n",
    "  (append test_list test_tup))\n",
    "  (append test_list test_tup))\n",
    "  (append test_tup test_list))\n",
    "  (append test_list test_tup))\n",
    "  (append test_list test_tup))\n",
    "  (append test_list test_tup))\n",
    "  (append test_list test_tup))\n",
    "  (map (lambda (x) (append x test_list)) test_tup))\n",
    "  (append test_list test_tup))\n",
    "  (append test_list test_tup))\n",
    "  (append test_list test_tup))\n",
    "  (cond\n    [(empty? test_tup) empty]\n    [else (cons (cons test_list (first test_tup))\n                (add_lists test_list (rest test_tup)))]))\n",
    "  (append test_list test_tup))\n",
    "  (append test_list test_tup))\n",
    "  (append test_list test_tup))\n",
    "  (append test_list test_tup))\n",
    "  (append test_list test_tup))\n",
    "  (append test_list test_tup))\n",
    "  (append test_list test_tup))\n",
    "  (append test_list test_tup))\n",
    "  (if (null? test_tup)\n      test_list\n      (append test_list (car test_tup))\n      (add_lists test_list (cdr test_tup))))\n",
    "  (append test_list test_tup))\n",
    "  (append test_list test_tup))\n",
    "  (append test_list test_tup))\n",
    "  (append test_list test_tup))\n",
    "  (append test_tup (list test_list)))\n",
    "  (append test_list test_tup))\n",
    "  (append test_tup test_list))\n",
    "  (cond\n    [(empty? test_tup) empty]\n    [else (cons (append test_list (first test_tup))\n                (add_lists test_list (rest test_tup)))]))\n",
    "  (append test_list test_tup))\n",
    "  (cond\n    [(empty? test_tup) empty]\n    [else (cons (append test_list (first test_tup))\n                (add_lists test_list (rest test_tup)))]))\n",
    "  (append test_list test_tup))\n",
    "  (append test_list test_tup))\n",
    "  (append test_list test_tup))\n",
    "  (append test_tup test_list))\n",
    "  (append test_list test_tup))\n",
    "  (append test_list test_tup))\n",
    "  (append test_list test_tup))\n",
    "  (append test_list test_tup))\n",
    "  (append test_tup test_list))\n",
    "  (append test_list test_tup))\n",
    "  (map (lambda (x) (append x test_list)) test_tup))\n",
    "  (append test_list test_tup))\n",
    "  (append test_list test_tup))\n",
    "  (append test_list test_tup))\n",
    "  (append test_list test_tup))\n",
    "  (append test_list test_tup))\n",
    "  (append test_list test_tup))\n",
    "  (append test_list test_tup))\n",
    "  (append test_list test_tup))\n",
    "  (append test_list test_tup))\n",
    "  (append test_list test_tup))\n"
  ]
}
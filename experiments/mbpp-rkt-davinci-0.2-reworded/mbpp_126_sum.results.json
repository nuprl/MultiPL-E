{
  "name": "mbpp_126_sum",
  "language": "rkt",
  "prompt": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_126_sum.py",
  "prompt_terminology": "reworded",
  "tests": "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
  "stop_tokens": [
    "\n(define ",
    "\n#|",
    "\n;",
    "\n("
  ],
  "results": [
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (gcd a b)\n    (if (= b 0)\n        a\n        (gcd b (remainder a b))))\n  (define (divisors n)\n    (for/list ([i (in-range 1 (add1 (quotient n 2)))])\n      (if (zero? (remainder n i))\n          i)))\n  (define (common-divisors a b)\n    (for/list ([i (in-range 1 (add1 (quotient (gcd a b) 2)))])\n      (if (zero? (remainder (gcd a b) i))\n          i)))\n  (apply + (common-divisors a b)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1665509712,
      "stdout": "",
      "stderr": "/tmp/tmpfgk03c9i.rkt:11:6: if: missing an \"else\" expression\n  in: (if (zero? (remainder n i)) i)\n  location...:\n   /tmp/tmpfgk03c9i.rkt:11:6\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (divisors n)\n    (for/list ([i (in-range 1 (add1 (quotient n 2)))])\n      (if (zero? (modulo n i)) i)))\n  (define (common-divisors a b)\n    (for/list ([i (in-range 1 (add1 (quotient (min a b) 2)))])\n      (if (and (zero? (modulo a i)) (zero? (modulo b i))) i)))\n  (apply + (common-divisors a b)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1665509712,
      "stdout": "",
      "stderr": "/tmp/tmpksmts_11.rkt:7:6: if: missing an \"else\" expression\n  in: (if (zero? (modulo n i)) i)\n  location...:\n   /tmp/tmpksmts_11.rkt:7:6\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (divisors n)\n    (for/list ([i (in-range 1 (add1 (quotient n 2)))])\n      (if (zero? (modulo n i)) i)))\n  (for/sum ([i (in-range 1 (add1 (quotient (min a b) 2)))])\n    (if (zero? (modulo a i)) i)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1665509712,
      "stdout": "",
      "stderr": "/tmp/tmpk0iikwl_.rkt:7:6: if: missing an \"else\" expression\n  in: (if (zero? (modulo n i)) i)\n  location...:\n   /tmp/tmpk0iikwl_.rkt:7:6\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (gcd a b)\n    (if (= b 0)\n        a\n        (gcd b (remainder a b))))\n  (define (lcm a b)\n    (/ (* a b) (gcd a b)))\n  (define (sum-divisors n)\n    (define (iter i sum)\n      (if (= i n)\n          sum\n          (if (= (remainder n i) 0)\n              (iter (+ i 1) (+ sum i))\n              (iter (+ i 1) sum))))\n    (iter 1 0))\n  (+ (sum-divisors (lcm a b)) (sum-divisors (gcd a b))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1665509712,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp6azlgdwb.rkt:26:4\nactual:     43\nexpected:   6\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp6azlgdwb.rkt:27:4\nactual:     611\nexpected:   93\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp6azlgdwb.rkt:28:4\nactual:     17\nexpected:   3\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (divisors n)\n    (for/list ([i (in-range 1 (add1 (quotient n 2)))])\n      (if (zero? (modulo n i)) i)))\n  (apply + (intersection (divisors a) (divisors b))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1665509712,
      "stdout": "",
      "stderr": "/tmp/tmp7c332xln.rkt:7:6: if: missing an \"else\" expression\n  in: (if (zero? (modulo n i)) i)\n  location...:\n   /tmp/tmp7c332xln.rkt:7:6\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (gcd a b)\n    (if (= b 0)\n        a\n        (gcd b (remainder a b))))\n  (define (divisors n)\n    (define (iter i)\n      (if (= i n)\n          (list n)\n          (if (= (remainder n i) 0)\n              (cons i (iter (+ i 1)))\n              (iter (+ i 1)))))\n    (iter 1))\n  (define (common-divisors a b)\n    (define (iter lst)\n      (if (null? lst)\n          (list)\n          (if (member (car lst) (divisors b))\n              (cons (car lst) (iter (cdr lst)))\n              (iter (cdr lst)))))\n    (iter (divisors a)))\n  (apply + (common-divisors a b)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1665509712,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (let ([lst (list a b)])\n    (for/sum ([i (in-range 1 (apply min lst))])\n      (if (and (= (modulo (car lst) i) 0)\n               (= (modulo (cadr lst) i) 0))\n          i\n          0))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1665509712,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (gcd a b)\n    (if (= b 0)\n        a\n        (gcd b (remainder a b))))\n  (define (divisors n)\n    (define (divisors-iter n i)\n      (if (= i n)\n          '()\n          (if (= (remainder n i) 0)\n              (cons i (divisors-iter n (+ i 1)))\n              (divisors-iter n (+ i 1)))))\n    (divisors-iter n 1))\n  (define (sum-divisors n)\n    (define (sum-divisors-iter n divs)\n      (if (null? divs)\n          0\n          (+ (car divs) (sum-divisors-iter n (cdr divs)))))\n    (sum-divisors-iter n (divisors n)))\n  (+ (sum-divisors (gcd a b)) (sum-divisors (/ a (gcd a b))) (sum-divisors (/ b (gcd a b)))))\n</code>\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1665509712,
      "stdout": "",
      "stderr": "/tmp/tmp_4bo2mya.rkt:24:0: </code>: unbound identifier\n  in: </code>\n  location...:\n   /tmp/tmp_4bo2mya.rkt:24:0\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (divisors n)\n    (for/list ([i (in-range 1 n)])\n      (if (zero? (modulo n i)) i)))\n  (apply + (intersection (divisors a) (divisors b))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1665509712,
      "stdout": "",
      "stderr": "/tmp/tmpyufqkfw7.rkt:7:6: if: missing an \"else\" expression\n  in: (if (zero? (modulo n i)) i)\n  location...:\n   /tmp/tmpyufqkfw7.rkt:7:6\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (gcd a b)\n    (if (= b 0)\n        a\n        (gcd b (remainder a b))))\n  (define (lcm a b)\n    (/ (* a b) (gcd a b)))\n  (define (sum-divisors n)\n    (define (sum-divisors-iter i sum)\n      (if (= i n)\n          sum\n          (if (= (remainder n i) 0)\n              (sum-divisors-iter (+ i 1) (+ sum i))\n              (sum-divisors-iter (+ i 1) sum))))\n    (sum-divisors-iter 1 0))\n  (+ (sum-divisors (lcm a b)) (sum-divisors (gcd a b))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1665509712,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_sllqaxz.rkt:26:4\nactual:     43\nexpected:   6\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_sllqaxz.rkt:27:4\nactual:     611\nexpected:   93\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_sllqaxz.rkt:28:4\nactual:     17\nexpected:   3\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (divisors n)\n    (for/list ([i (in-range 1 n)])\n      (if (zero? (modulo n i)) i)))\n  (apply + (intersection (divisors a) (divisors b))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1665509712,
      "stdout": "",
      "stderr": "/tmp/tmpyufqkfw7.rkt:7:6: if: missing an \"else\" expression\n  in: (if (zero? (modulo n i)) i)\n  location...:\n   /tmp/tmpyufqkfw7.rkt:7:6\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (divisors n)\n    (define (divisors-iter n i)\n      (if (= i n)\n          '()\n          (if (= (modulo n i) 0)\n              (cons i (divisors-iter n (+ i 1)))\n              (divisors-iter n (+ i 1)))))\n    (divisors-iter n 1))\n  (define (common-divisors a b)\n    (define (common-divisors-iter a b lst)\n      (if (null? lst)\n          '()\n          (if (and (member (car lst) a) (member (car lst) b))\n              (cons (car lst) (common-divisors-iter a b (cdr lst)))\n              (common-divisors-iter a b (cdr lst)))))\n    (common-divisors-iter a b (divisors (+ a b))))\n  (define (sum-list lst)\n    (if (null? lst)\n        0\n        (+ (car lst) (sum-list (cdr lst)))))\n  (sum-list (common-divisors a b)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1665509712,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpa14ies6h.rkt:32:4\n\nmember: not a proper list\n  in: 10\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpa14ies6h.rkt:33:4\n\nmember: not a proper list\n  in: 100\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpa14ies6h.rkt:34:4\n\nmember: not a proper list\n  in: 4\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (gcd a b)\n    (if (= b 0)\n        a\n        (gcd b (remainder a b))))\n  (define (lcm a b)\n    (/ (* a b) (gcd a b)))\n  (define (sum-divisors n)\n    (define (divisors n)\n      (for/list ([i (in-range 1 (add1 (quotient n 2)))])\n        (if (= (remainder n i) 0)\n            i)))\n    (apply + (divisors n)))\n  (sum-divisors (lcm a b)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1665509712,
      "stdout": "",
      "stderr": "/tmp/tmprk27pu8x.rkt:14:8: if: missing an \"else\" expression\n  in: (if (= (remainder n i) 0) i)\n  location...:\n   /tmp/tmprk27pu8x.rkt:14:8\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (divisors a)\n    (define (divisors-iter a b)\n      (if (= b a)\n          (list a)\n          (if (= (remainder a b) 0)\n              (cons b (divisors-iter a (+ b 1)))\n              (divisors-iter a (+ b 1)))))\n    (divisors-iter a 1))\n  (define (common a b)\n    (cond ((null? a) '())\n          ((member (car a) b) (cons (car a) (common (cdr a) b)))\n          (else (common (cdr a) b))))\n  (define (sum-iter a)\n    (if (null? a)\n        0\n        (+ (car a) (sum-iter (cdr a)))))\n  (sum-iter (common (divisors a) (divisors b))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1665509712,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (divisors n)\n    (for/list ([i (in-range 1 (add1 (quotient n 2)))])\n      (if (zero? (modulo n i)) i)))\n  (apply + (intersection (divisors a) (divisors b))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1665509712,
      "stdout": "",
      "stderr": "/tmp/tmp7c332xln.rkt:7:6: if: missing an \"else\" expression\n  in: (if (zero? (modulo n i)) i)\n  location...:\n   /tmp/tmp7c332xln.rkt:7:6\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (divisors n)\n    (for/list ([i (in-range 1 (add1 (quotient n 2)))])\n      (if (zero? (modulo n i)) i)))\n  (apply + (intersection (divisors a) (divisors b))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1665509712,
      "stdout": "",
      "stderr": "/tmp/tmp7c332xln.rkt:7:6: if: missing an \"else\" expression\n  in: (if (zero? (modulo n i)) i)\n  location...:\n   /tmp/tmp7c332xln.rkt:7:6\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (divisors n)\n    (for/list ([i (in-range 1 (add1 (quotient n 2)))])\n      (if (zero? (modulo n i)) i)))\n  (apply + (intersection (divisors a) (divisors b))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1665509712,
      "stdout": "",
      "stderr": "/tmp/tmp7c332xln.rkt:7:6: if: missing an \"else\" expression\n  in: (if (zero? (modulo n i)) i)\n  location...:\n   /tmp/tmp7c332xln.rkt:7:6\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (divisors n)\n    (for/list ([i (in-range 1 n)])\n      (if (zero? (modulo n i)) i)))\n  (define (common-divisors a b)\n    (for/list ([i (in-range 1 (min a b))])\n      (if (zero? (modulo a i)) i)))\n  (apply + (common-divisors a b)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1665509712,
      "stdout": "",
      "stderr": "/tmp/tmp1xigad6y.rkt:7:6: if: missing an \"else\" expression\n  in: (if (zero? (modulo n i)) i)\n  location...:\n   /tmp/tmp1xigad6y.rkt:7:6\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (divisors n)\n    (for/list ([i (in-range 1 (add1 (quotient n 2)))])\n      (if (zero? (modulo n i)) i)))\n  (apply + (intersection (divisors a) (divisors b))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1665509712,
      "stdout": "",
      "stderr": "/tmp/tmp7c332xln.rkt:7:6: if: missing an \"else\" expression\n  in: (if (zero? (modulo n i)) i)\n  location...:\n   /tmp/tmp7c332xln.rkt:7:6\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (divisors n)\n    (for/list ([i (in-range 1 n)]\n               #:when (zero? (modulo n i)))\n      i))\n  (define (common-divisors a b)\n    (for/list ([i (in-range 1 (min a b))]\n               #:when (and (member i (divisors a))\n                           (member i (divisors b))))\n      i))\n  (apply + (common-divisors a b)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1665509712,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (divisors n)\n    (for/list ([i (in-range 1 n)])\n      (if (zero? (modulo n i)) i)))\n  (define (common-divisors a b)\n    (for/list ([i (in-range 1 (min a b))])\n      (if (and (zero? (modulo a i)) (zero? (modulo b i))) i)))\n  (apply + (common-divisors a b)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1666124241,
      "stdout": "",
      "stderr": "/tmp/tmpx1__j3kp.rkt:7:6: if: missing an \"else\" expression\n  in: (if (zero? (modulo n i)) i)\n  location...:\n   /tmp/tmpx1__j3kp.rkt:7:6\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (gcd a b)\n    (if (= b 0)\n        a\n        (gcd b (remainder a b))))\n  (define (divisors a)\n    (for/list ([i (in-range 1 (add1 (quotient a 2)))])\n      (if (= (remainder a i) 0)\n          i)))\n  (define (common-divisors a b)\n    (for/list ([i (in-range 1 (add1 (quotient a 2)))])\n      (if (and (= (remainder a i) 0) (= (remainder b i) 0))\n          i)))\n  (apply + (common-divisors a b)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1666124241,
      "stdout": "",
      "stderr": "/tmp/tmpga14qfs6.rkt:11:6: if: missing an \"else\" expression\n  in: (if (= (remainder a i) 0) i)\n  location...:\n   /tmp/tmpga14qfs6.rkt:11:6\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (divisors n)\n    (for/list ([i (in-range 1 (add1 (quotient n 2)))])\n      (if (zero? (modulo n i)) i)))\n  (define (common-divisors a b)\n    (for/list ([i (in-range 1 (add1 (quotient (min a b) 2)))])\n      (if (and (zero? (modulo a i)) (zero? (modulo b i))) i)))\n  (apply + (common-divisors a b)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1665509712,
      "stdout": "",
      "stderr": "/tmp/tmpksmts_11.rkt:7:6: if: missing an \"else\" expression\n  in: (if (zero? (modulo n i)) i)\n  location...:\n   /tmp/tmpksmts_11.rkt:7:6\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (divisors n)\n    (filter (lambda (x) (= (modulo n x) 0)) (range 1 n)))\n  (define (common-divisors a b)\n    (filter (lambda (x) (member x (divisors b))) (divisors a)))\n  (apply + (common-divisors a b)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1666124241,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (divisors n)\n    (for/list ([i (in-range 1 (add1 (quotient n 2)))])\n      (if (zero? (remainder n i)) i)))\n  (apply + (intersection (divisors a) (divisors b))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1666124241,
      "stdout": "",
      "stderr": "/tmp/tmpzyty5z09.rkt:7:6: if: missing an \"else\" expression\n  in: (if (zero? (remainder n i)) i)\n  location...:\n   /tmp/tmpzyty5z09.rkt:7:6\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (divisors n)\n    (for/list ([i (in-range 1 n)])\n      (if (zero? (modulo n i)) i)))\n  (define (common-divisors a b)\n    (for/list ([i (in-range 1 (min a b))])\n      (if (and (zero? (modulo a i)) (zero? (modulo b i))) i)))\n  (apply + (common-divisors a b)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1666124241,
      "stdout": "",
      "stderr": "/tmp/tmpx1__j3kp.rkt:7:6: if: missing an \"else\" expression\n  in: (if (zero? (modulo n i)) i)\n  location...:\n   /tmp/tmpx1__j3kp.rkt:7:6\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (gcd a b)\n    (if (= b 0)\n        a\n        (gcd b (remainder a b))))\n  (define (divisors a)\n    (for/list ([i (in-range 1 (add1 (quotient a 2)))])\n      (if (= (remainder a i) 0)\n          i)))\n  (define (common-divisors a b)\n    (for/list ([i (in-range 1 (add1 (quotient a 2)))])\n      (if (and (= (remainder a i) 0) (= (remainder b i) 0))\n          i)))\n  (apply + (common-divisors a b)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1666124241,
      "stdout": "",
      "stderr": "/tmp/tmpga14qfs6.rkt:11:6: if: missing an \"else\" expression\n  in: (if (= (remainder a i) 0) i)\n  location...:\n   /tmp/tmpga14qfs6.rkt:11:6\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (gcd a b)\n    (if (= b 0)\n        a\n        (gcd b (remainder a b))))\n  (define (divisors n)\n    (for/list ([i (in-range 1 (add1 (quotient n 2)))])\n      (if (= (remainder n i) 0)\n          i\n          0)))\n  (apply + (intersection (divisors a) (divisors b))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1666124241,
      "stdout": "",
      "stderr": "/tmp/tmp_l8r6n3y.rkt:14:12: intersection: unbound identifier\n  in: intersection\n  location...:\n   /tmp/tmp_l8r6n3y.rkt:14:12\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (divisors n)\n    (for/list ([i (in-range 1 n)])\n      (if (= (modulo n i) 0)\n          i)))\n  (define (common-divisors a b)\n    (for/list ([i (in-range 1 (min a b))])\n      (if (and (= (modulo a i) 0) (= (modulo b i) 0))\n          i)))\n  (apply + (common-divisors a b)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1666124241,
      "stdout": "",
      "stderr": "/tmp/tmpyg7ylc_b.rkt:7:6: if: missing an \"else\" expression\n  in: (if (= (modulo n i) 0) i)\n  location...:\n   /tmp/tmpyg7ylc_b.rkt:7:6\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (divisors n)\n    (for/list ([i (in-range 1 (add1 (quotient n 2)))])\n      (if (zero? (modulo n i))\n          i)))\n  (define (common a b)\n    (for/list ([i (in-range 1 (add1 (quotient (min a b) 2)))])\n      (if (and (zero? (modulo a i))\n               (zero? (modulo b i)))\n          i)))\n  (apply + (common a b)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1666124241,
      "stdout": "",
      "stderr": "/tmp/tmpjj6f3z9c.rkt:7:6: if: missing an \"else\" expression\n  in: (if (zero? (modulo n i)) i)\n  location...:\n   /tmp/tmpjj6f3z9c.rkt:7:6\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (divisors n)\n    (for/list ([i (in-range 1 n)])\n      (if (zero? (modulo n i)) i)))\n  (define (common-divisors a b)\n    (for/list ([i (in-range 1 a)])\n      (if (and (zero? (modulo a i)) (zero? (modulo b i))) i)))\n  (apply + (common-divisors a b)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1666124242,
      "stdout": "",
      "stderr": "/tmp/tmp88qpwuos.rkt:7:6: if: missing an \"else\" expression\n  in: (if (zero? (modulo n i)) i)\n  location...:\n   /tmp/tmp88qpwuos.rkt:7:6\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (divisors n)\n    (for/list ([i (in-range 1 (add1 (quotient n 2)))])\n      (if (zero? (modulo n i)) i)))\n  (apply + (intersection (divisors a) (divisors b))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1665509712,
      "stdout": "",
      "stderr": "/tmp/tmp7c332xln.rkt:7:6: if: missing an \"else\" expression\n  in: (if (zero? (modulo n i)) i)\n  location...:\n   /tmp/tmp7c332xln.rkt:7:6\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (divisors n)\n    (for/list ([i (in-range 1 (add1 (quotient n 2)))])\n      (if (zero? (modulo n i)) i)))\n  (define (common-divisors a b)\n    (for/list ([i (in-range 1 (add1 (quotient a 2)))])\n      (if (zero? (modulo a i))\n          (if (zero? (modulo b i)) i))))\n  (apply + (common-divisors a b)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1666124241,
      "stdout": "",
      "stderr": "/tmp/tmp56jw8bho.rkt:7:6: if: missing an \"else\" expression\n  in: (if (zero? (modulo n i)) i)\n  location...:\n   /tmp/tmp56jw8bho.rkt:7:6\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (divisors n)\n    (filter (lambda (x) (= (remainder n x) 0)) (range 1 n)))\n  (define (common-divisors a b)\n    (filter (lambda (x) (member x (divisors b))) (divisors a)))\n  (apply + (common-divisors a b)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1666124241,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (gcd a b)\n    (if (= b 0)\n        a\n        (gcd b (remainder a b))))\n  (define (lcm a b)\n    (/ (* a b) (gcd a b)))\n  (define (sum-divisors n)\n    (define (sum-divisors-iter i sum)\n      (if (= i n)\n          sum\n          (if (= (remainder n i) 0)\n              (sum-divisors-iter (+ i 1) (+ sum i))\n              (sum-divisors-iter (+ i 1) sum))))\n    (sum-divisors-iter 1 0))\n  (+ (sum-divisors (lcm a b)) (sum-divisors (gcd a b))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1665509712,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_sllqaxz.rkt:26:4\nactual:     43\nexpected:   6\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_sllqaxz.rkt:27:4\nactual:     611\nexpected:   93\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_sllqaxz.rkt:28:4\nactual:     17\nexpected:   3\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (gcd a b)\n    (if (= b 0)\n        a\n        (gcd b (remainder a b))))\n  (define (divisors n)\n    (define (divisors-iter n i)\n      (if (= i n)\n          '()\n          (if (= (remainder n i) 0)\n              (cons i (divisors-iter n (+ i 1)))\n              (divisors-iter n (+ i 1)))))\n    (divisors-iter n 1))\n  (define (sum-divisors n)\n    (define (sum-divisors-iter n l)\n      (if (null? l)\n          0\n          (+ (car l) (sum-divisors-iter n (cdr l)))))\n    (sum-divisors-iter n (divisors n)))\n  (+ (sum-divisors (gcd a b)) (sum-divisors (gcd b a))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1666124241,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpbtfti_jf.rkt:30:4\nactual:     2\nexpected:   6\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpbtfti_jf.rkt:31:4\nactual:     86\nexpected:   93\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpbtfti_jf.rkt:32:4\nactual:     2\nexpected:   3\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (gcd a b)\n    (if (= b 0)\n        a\n        (gcd b (remainder a b))))\n  (define (lcm a b)\n    (/ (* a b) (gcd a b)))\n  (define (sum-divisors n)\n    (define (divisors n)\n      (for/list ([i (in-range 1 (add1 (quotient n 2)))])\n        (if (= (remainder n i) 0)\n            i)))\n    (apply + (divisors n)))\n  (sum-divisors (lcm a b)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1665509712,
      "stdout": "",
      "stderr": "/tmp/tmprk27pu8x.rkt:14:8: if: missing an \"else\" expression\n  in: (if (= (remainder n i) 0) i)\n  location...:\n   /tmp/tmprk27pu8x.rkt:14:8\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (divisors n)\n    (for/list ([i (in-range 1 (add1 (quotient n 2)))])\n      (if (zero? (modulo n i)) i)))\n  (define (common-divisors a b)\n    (for/list ([i (in-range 1 (add1 (quotient (min a b) 2)))])\n      (if (and (zero? (modulo a i)) (zero? (modulo b i))) i)))\n  (apply + (common-divisors a b)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1665509712,
      "stdout": "",
      "stderr": "/tmp/tmpksmts_11.rkt:7:6: if: missing an \"else\" expression\n  in: (if (zero? (modulo n i)) i)\n  location...:\n   /tmp/tmpksmts_11.rkt:7:6\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (divisors n)\n    (for/list ([i (in-range 1 (add1 (quotient n 2)))])\n      (if (zero? (modulo n i)) i)))\n  (for/sum ([i (in-range 1 (add1 (quotient (min a b) 2)))])\n    (if (zero? (modulo a i)) i)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1665509712,
      "stdout": "",
      "stderr": "/tmp/tmpk0iikwl_.rkt:7:6: if: missing an \"else\" expression\n  in: (if (zero? (modulo n i)) i)\n  location...:\n   /tmp/tmpk0iikwl_.rkt:7:6\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (divisors n)\n    (for/list ([i (in-range 1 (add1 (quotient n 2)))])\n      (if (zero? (modulo n i)) i)))\n  (apply + (intersection (divisors a) (divisors b))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1665509712,
      "stdout": "",
      "stderr": "/tmp/tmp7c332xln.rkt:7:6: if: missing an \"else\" expression\n  in: (if (zero? (modulo n i)) i)\n  location...:\n   /tmp/tmp7c332xln.rkt:7:6\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (divisors n)\n    (for/list ([i (in-range 1 n)])\n      (if (zero? (modulo n i)) i)))\n  (define (common-divisors a b)\n    (for/list ([i (in-range 1 (min a b))])\n      (if (zero? (modulo a i))\n          (if (zero? (modulo b i)) i))))\n  (apply + (common-divisors a b)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1666124241,
      "stdout": "",
      "stderr": "/tmp/tmp2bekbmuo.rkt:7:6: if: missing an \"else\" expression\n  in: (if (zero? (modulo n i)) i)\n  location...:\n   /tmp/tmp2bekbmuo.rkt:7:6\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (let loop ((a a) (b b) (sum 0))\n    (cond ((= a 1) sum)\n          ((= b 1) sum)\n          ((= (modulo a b) 0) (loop (quotient a b) b (+ sum b)))\n          (else (loop a (sub1 b) sum)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1666124241,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpw6dwevaw.rkt:16:4\nactual:     10\nexpected:   6\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpw6dwevaw.rkt:17:4\nactual:     100\nexpected:   93\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpw6dwevaw.rkt:18:4\nactual:     4\nexpected:   3\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (divisors n)\n    (for/list ([i (in-range 1 (add1 (quotient n 2)))])\n      (if (zero? (modulo n i)) i)))\n  (define (common-divisors a b)\n    (for/list ([i (in-range 1 (add1 (quotient a 2)))])\n      (if (zero? (modulo a i))\n          (if (zero? (modulo b i)) i))))\n  (apply + (common-divisors a b)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1666124241,
      "stdout": "",
      "stderr": "/tmp/tmp56jw8bho.rkt:7:6: if: missing an \"else\" expression\n  in: (if (zero? (modulo n i)) i)\n  location...:\n   /tmp/tmp56jw8bho.rkt:7:6\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (divisors a)\n    (filter (lambda (x) (= (remainder a x) 0)) (range 1 a)))\n  (define (common a b)\n    (filter (lambda (x) (member x (divisors b))) (divisors a)))\n  (apply + (common a b)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1666124242,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (divisors n)\n    (for/list ([i (in-range 1 (add1 (quotient n 2)))])\n      (if (zero? (modulo n i)) i)))\n  (apply + (intersection (divisors a) (divisors b))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1665509712,
      "stdout": "",
      "stderr": "/tmp/tmp7c332xln.rkt:7:6: if: missing an \"else\" expression\n  in: (if (zero? (modulo n i)) i)\n  location...:\n   /tmp/tmp7c332xln.rkt:7:6\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (divisors n)\n    (for/list ([i (in-range 1 n)])\n      (if (zero? (modulo n i)) i)))\n  (define (common-divisors a b)\n    (for/list ([i (in-range 1 a)]\n               #:when (member i (divisors b)))\n      i))\n  (apply + (common-divisors a b)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1666124242,
      "stdout": "",
      "stderr": "/tmp/tmpt12olug3.rkt:7:6: if: missing an \"else\" expression\n  in: (if (zero? (modulo n i)) i)\n  location...:\n   /tmp/tmpt12olug3.rkt:7:6\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (let loop ([i 1] [sum 0])\n    (cond [(> i a) sum]\n          [(and (divides? i a) (divides? i b))\n           (loop (+ i 1) (+ sum i))]\n          [else (loop (+ i 1) sum)])))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1666124242,
      "stdout": "",
      "stderr": "/tmp/tmp5edzqj3_.rkt:7:17: divides?: unbound identifier\n  in: divides?\n  location...:\n   /tmp/tmp5edzqj3_.rkt:7:17\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (divisors n)\n    (filter (lambda (x) (= (remainder n x) 0)) (range 1 n)))\n  (define (common-divisors a b)\n    (filter (lambda (x) (member x (divisors b))) (divisors a)))\n  (apply + (common-divisors a b)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1666124241,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (gcd a b)\n    (if (= b 0)\n        a\n        (gcd b (remainder a b))))\n  (define (divisors n)\n    (for/list ([i (in-range 1 (add1 (quotient n 2)))])\n      (if (= (remainder n i) 0)\n          i)))\n  (define (common-divisors a b)\n    (for/list ([i (in-range 1 (add1 (quotient (gcd a b) 2)))])\n      (if (= (remainder (gcd a b) i) 0)\n          i)))\n  (apply + (common-divisors a b)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1666124242,
      "stdout": "",
      "stderr": "/tmp/tmptgdan209.rkt:11:6: if: missing an \"else\" expression\n  in: (if (= (remainder n i) 0) i)\n  location...:\n   /tmp/tmptgdan209.rkt:11:6\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (gcd a b)\n    (if (= b 0)\n        a\n        (gcd b (remainder a b))))\n  (define (lcm a b)\n    (/ (* a b) (gcd a b)))\n  (define (divisors n)\n    (for/list ([i (in-range 1 (add1 (quotient n 2)))])\n      (if (= (remainder n i) 0)\n          i)))\n  (define (common-divisors a b)\n    (for/list ([i (in-range 1 (lcm a b))])\n      (if (and (= (remainder a i) 0) (= (remainder b i) 0))\n          i)))\n  (apply + (common-divisors a b)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1666124242,
      "stdout": "",
      "stderr": "/tmp/tmptgnd3jxz.rkt:13:6: if: missing an \"else\" expression\n  in: (if (= (remainder n i) 0) i)\n  location...:\n   /tmp/tmptgnd3jxz.rkt:13:6\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (gcd a b)\n    (if (= b 0)\n        a\n        (gcd b (remainder a b))))\n  (define (divisors n)\n    (define (divisors-iter n i)\n      (if (= n 1)\n          '()\n          (if (= (remainder n i) 0)\n              (cons i (divisors-iter (/ n i) i))\n              (divisors-iter n (+ i 1)))))\n    (divisors-iter n 2))\n  (define (sum-divisors n)\n    (define (sum-divisors-iter n i)\n      (if (= n 1)\n          0\n          (if (= (remainder n i) 0)\n              (+ i (sum-divisors-iter (/ n i) i))\n              (sum-divisors-iter n (+ i 1)))))\n    (sum-divisors-iter n 2))\n  (+ (sum-divisors (gcd a b)) (sum-divisors (/ a (gcd a b))) (sum-divisors (/ b (gcd a b)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1666124242,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp1ov012fl.rkt:32:4\nactual:     10\nexpected:   6\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp1ov012fl.rkt:33:4\nactual:     17\nexpected:   93\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp1ov012fl.rkt:34:4\nactual:     7\nexpected:   3\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (gcd a b)\n    (if (= b 0)\n        a\n        (gcd b (remainder a b))))\n  (define (lcm a b)\n    (/ (* a b) (gcd a b)))\n  (define (divisors n)\n    (for/list ([i (in-range 1 (add1 (quotient n 2)))])\n      (if (= (remainder n i) 0)\n          i)))\n  (define (common-divisors a b)\n    (for/list ([i (in-range 1 (lcm a b))])\n      (if (and (= (remainder a i) 0) (= (remainder b i) 0))\n          i)))\n  (apply + (common-divisors a b)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1666124242,
      "stdout": "",
      "stderr": "/tmp/tmptgnd3jxz.rkt:13:6: if: missing an \"else\" expression\n  in: (if (= (remainder n i) 0) i)\n  location...:\n   /tmp/tmptgnd3jxz.rkt:13:6\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (divisors n)\n    (for/list ([i (in-range 1 n)]\n               #:when (zero? (modulo n i)))\n      i))\n  (define (common-divisors a b)\n    (for/list ([i (in-range 1 (min a b))]\n               #:when (and (member i (divisors a))\n                           (member i (divisors b))))\n      i))\n  (apply + (common-divisors a b)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1665509712,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (sum-divisors a b)\n    (cond\n      [(= a b) a]\n      [(< a b) (sum-divisors (+ a 1) b)]\n      [(> a b) (sum-divisors a (+ b 1))]))\n  (sum-divisors a b))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1666124242,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpyyj0yuks.rkt:17:4\nactual:     15\nexpected:   6\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpyyj0yuks.rkt:18:4\nactual:     150\nexpected:   93\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpyyj0yuks.rkt:19:4\nactual:     6\nexpected:   3\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (gcd a b)\n    (if (= b 0)\n        a\n        (gcd b (remainder a b))))\n  (define (divisors n)\n    (for/list ([i (in-range 1 (add1 (quotient n 2)))])\n      (if (= (remainder n i) 0)\n          i\n          0)))\n  (apply + (intersection (divisors a) (divisors b))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1666124241,
      "stdout": "",
      "stderr": "/tmp/tmp_l8r6n3y.rkt:14:12: intersection: unbound identifier\n  in: intersection\n  location...:\n   /tmp/tmp_l8r6n3y.rkt:14:12\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (divisors n)\n    (for/list ([i (in-range 1 (add1 (quotient n 2)))])\n      (if (zero? (modulo n i)) i)))\n  (define (common-divisors a b)\n    (for/list ([i (in-range 1 (add1 (quotient (min a b) 2)))])\n      (if (and (zero? (modulo a i)) (zero? (modulo b i))) i)))\n  (apply + (common-divisors a b)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1665509712,
      "stdout": "",
      "stderr": "/tmp/tmpksmts_11.rkt:7:6: if: missing an \"else\" expression\n  in: (if (zero? (modulo n i)) i)\n  location...:\n   /tmp/tmpksmts_11.rkt:7:6\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (divisors n)\n    (filter (lambda (x) (= (remainder n x) 0)) (range 1 n)))\n  (define (common-divisors a b)\n    (filter (lambda (x) (member x (divisors b))) (divisors a)))\n  (apply + (common-divisors a b)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1666124241,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (divisors n)\n    (for/list ([i (in-range 1 n)])\n      (if (zero? (modulo n i))\n          i)))\n  (apply + (filter (lambda (x) (member x (divisors b))) (divisors a))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1666124241,
      "stdout": "",
      "stderr": "/tmp/tmpxtfxwjyg.rkt:7:6: if: missing an \"else\" expression\n  in: (if (zero? (modulo n i)) i)\n  location...:\n   /tmp/tmpxtfxwjyg.rkt:7:6\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (divisors n)\n    (for/list ([i (in-range 1 n)])\n      (if (zero? (modulo n i)) i)))\n  (define (common-divisors a b)\n    (for/list ([i (in-range 1 (min a b))])\n      (if (and (zero? (modulo a i)) (zero? (modulo b i))) i)))\n  (apply + (common-divisors a b)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1666124241,
      "stdout": "",
      "stderr": "/tmp/tmpx1__j3kp.rkt:7:6: if: missing an \"else\" expression\n  in: (if (zero? (modulo n i)) i)\n  location...:\n   /tmp/tmpx1__j3kp.rkt:7:6\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (divisors n)\n    (for/list ([i (in-range 1 n)])\n      (if (= (remainder n i) 0) i)))\n  (define (common-divisors a b)\n    (for/list ([i (in-range 1 (min a b))])\n      (if (and (= (remainder a i) 0) (= (remainder b i) 0)) i)))\n  (apply + (common-divisors a b)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1666124242,
      "stdout": "",
      "stderr": "/tmp/tmpkyzbfx7y.rkt:7:6: if: missing an \"else\" expression\n  in: (if (= (remainder n i) 0) i)\n  location...:\n   /tmp/tmpkyzbfx7y.rkt:7:6\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (divisors n)\n    (for/list ([i (in-range 1 n)])\n      (if (zero? (modulo n i)) i)))\n  (define (common-divisors a b)\n    (for/list ([i (in-range 1 a)])\n      (if (and (zero? (modulo a i)) (zero? (modulo b i))) i)))\n  (apply + (common-divisors a b)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1666124242,
      "stdout": "",
      "stderr": "/tmp/tmp88qpwuos.rkt:7:6: if: missing an \"else\" expression\n  in: (if (zero? (modulo n i)) i)\n  location...:\n   /tmp/tmp88qpwuos.rkt:7:6\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (divisors n)\n    (for/list ([i (in-range 1 n)])\n      (if (zero? (modulo n i)) i)))\n  (apply + (intersection (divisors a) (divisors b))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1665509712,
      "stdout": "",
      "stderr": "/tmp/tmpyufqkfw7.rkt:7:6: if: missing an \"else\" expression\n  in: (if (zero? (modulo n i)) i)\n  location...:\n   /tmp/tmpyufqkfw7.rkt:7:6\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (divisors n)\n    (for/list ([i (in-range 1 (add1 (quotient n 2)))])\n      (if (zero? (modulo n i)) i)))\n  (define (common-divisors a b)\n    (for/list ([i (in-range 1 (add1 (quotient (min a b) 2)))])\n      (if (and (zero? (modulo a i)) (zero? (modulo b i))) i)))\n  (apply + (common-divisors a b)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1665509712,
      "stdout": "",
      "stderr": "/tmp/tmpksmts_11.rkt:7:6: if: missing an \"else\" expression\n  in: (if (zero? (modulo n i)) i)\n  location...:\n   /tmp/tmpksmts_11.rkt:7:6\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (divisors n)\n    (for/list ([i (in-range 1 (add1 (quotient n 2)))])\n      (if (zero? (modulo n i)) i)))\n  (define (common a b)\n    (for/list ([i (in-range 1 (min a b))])\n      (if (zero? (modulo a i)) i)))\n  (apply + (common a b)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1666124242,
      "stdout": "",
      "stderr": "/tmp/tmpp84twp2r.rkt:7:6: if: missing an \"else\" expression\n  in: (if (zero? (modulo n i)) i)\n  location...:\n   /tmp/tmpp84twp2r.rkt:7:6\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (divisors n)\n    (for/list ([i (in-range 1 (add1 (quotient n 2)))])\n      (if (zero? (modulo n i)) i)))\n  (apply + (intersection (divisors a) (divisors b))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1665509712,
      "stdout": "",
      "stderr": "/tmp/tmp7c332xln.rkt:7:6: if: missing an \"else\" expression\n  in: (if (zero? (modulo n i)) i)\n  location...:\n   /tmp/tmp7c332xln.rkt:7:6\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (divisors n)\n    (for/list ([i (in-range 1 n)])\n      (if (zero? (modulo n i)) i)))\n  (define (common-divisors a b)\n    (for/list ([i (in-range 1 a)]\n               #:when (member i (divisors b)))\n      i))\n  (apply + (common-divisors a b)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1666124242,
      "stdout": "",
      "stderr": "/tmp/tmpt12olug3.rkt:7:6: if: missing an \"else\" expression\n  in: (if (zero? (modulo n i)) i)\n  location...:\n   /tmp/tmpt12olug3.rkt:7:6\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (divisors n)\n    (filter (lambda (x) (= (modulo n x) 0)) (range 1 n)))\n  (apply + (intersection (divisors a) (divisors b))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1666124242,
      "stdout": "",
      "stderr": "/tmp/tmpe9uh6kc8.rkt:7:12: intersection: unbound identifier\n  in: intersection\n  location...:\n   /tmp/tmpe9uh6kc8.rkt:7:12\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (divisors n)\n    (filter (lambda (x) (= (modulo n x) 0)) (range 1 (add1 n))))\n  (define (common-divisors a b)\n    (filter (lambda (x) (member x (divisors b))) (divisors a)))\n  (apply + (common-divisors a b)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1666124242,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (divisors n)\n    (for/list ([i (in-range 1 n)])\n      (if (zero? (modulo n i)) i)))\n  (apply + (set-intersection (divisors a) (divisors b))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1666124242,
      "stdout": "",
      "stderr": "/tmp/tmptom2qbev.rkt:7:6: if: missing an \"else\" expression\n  in: (if (zero? (modulo n i)) i)\n  location...:\n   /tmp/tmptom2qbev.rkt:7:6\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (divisors x)\n    (for/list ([i (in-range 1 (add1 (quotient x 2)))])\n      (if (zero? (modulo x i)) i)))\n  (apply + (intersection (divisors a) (divisors b))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1666124242,
      "stdout": "",
      "stderr": "/tmp/tmpzonso533.rkt:7:6: if: missing an \"else\" expression\n  in: (if (zero? (modulo x i)) i)\n  location...:\n   /tmp/tmpzonso533.rkt:7:6\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (divisors n)\n    (filter (lambda (x) (= (remainder n x) 0))\n            (range 1 (add1 n))))\n  (define (common-divisors a b)\n    (filter (lambda (x) (member x (divisors b)))\n            (divisors a)))\n  (apply + (common-divisors a b)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1666124242,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (divisors n)\n    (for/list ([i (in-range 1 (add1 (quotient n 2)))])\n      (if (zero? (modulo n i)) i)))\n  (apply + (intersection (divisors a) (divisors b))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1665509712,
      "stdout": "",
      "stderr": "/tmp/tmp7c332xln.rkt:7:6: if: missing an \"else\" expression\n  in: (if (zero? (modulo n i)) i)\n  location...:\n   /tmp/tmp7c332xln.rkt:7:6\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (gcd a b)\n    (if (= b 0)\n        a\n        (gcd b (remainder a b))))\n  (define (divisors a)\n    (for/list ([i (in-range 1 (add1 (quotient a 2)))])\n      (if (= (remainder a i) 0)\n          i)))\n  (define (common-divisors a b)\n    (for/list ([i (in-range 1 (add1 (quotient a 2)))])\n      (if (and (= (remainder a i) 0) (= (remainder b i) 0))\n          i)))\n  (apply + (common-divisors a b)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1666124241,
      "stdout": "",
      "stderr": "/tmp/tmpga14qfs6.rkt:11:6: if: missing an \"else\" expression\n  in: (if (= (remainder a i) 0) i)\n  location...:\n   /tmp/tmpga14qfs6.rkt:11:6\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (divisors n)\n    (for/list ([i (in-range 1 (add1 (quotient n 2)))])\n      (if (= (remainder n i) 0) i)))\n  (define (common-divisors a b)\n    (for/list ([i (in-range 1 (add1 (quotient a 2)))])\n      (if (and (= (remainder a i) 0) (= (remainder b i) 0)) i)))\n  (apply + (common-divisors a b)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1666124242,
      "stdout": "",
      "stderr": "/tmp/tmpwgxst2z4.rkt:7:6: if: missing an \"else\" expression\n  in: (if (= (remainder n i) 0) i)\n  location...:\n   /tmp/tmpwgxst2z4.rkt:7:6\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (divisors n)\n    (for/list ([i (in-range 1 (add1 (quotient n 2)))])\n      (if (zero? (modulo n i)) i)))\n  (define (common-divisors a b)\n    (for/list ([i (in-range 1 (min a b))])\n      (if (zero? (modulo a i)) i)))\n  (apply + (common-divisors a b)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1666124242,
      "stdout": "",
      "stderr": "/tmp/tmplpyq0d5p.rkt:7:6: if: missing an \"else\" expression\n  in: (if (zero? (modulo n i)) i)\n  location...:\n   /tmp/tmplpyq0d5p.rkt:7:6\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (gcd a b)\n    (if (= b 0)\n        a\n        (gcd b (remainder a b))))\n  (define (divisors a)\n    (define (divisors-iter a div)\n      (if (= div a)\n          '()\n          (if (= (remainder a div) 0)\n              (cons div (divisors-iter a (+ div 1)))\n              (divisors-iter a (+ div 1)))))\n    (divisors-iter a 1))\n  (define (common-divisors a b)\n    (define (common-divisors-iter a b divs)\n      (if (null? divs)\n          '()\n          (if (member (car divs) b)\n              (cons (car divs) (common-divisors-iter a b (cdr divs)))\n              (common-divisors-iter a b (cdr divs)))))\n    (common-divisors-iter a b (divisors a)))\n  (define (sum-divisors a)\n    (define (sum-divisors-iter a divs)\n      (if (null? divs)\n          0\n          (+ (car divs) (sum-divisors-iter a (cdr divs)))))\n    (sum-divisors-iter a (divisors a)))\n  (sum-divisors (gcd a b)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1666124242,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp3chx8y78.rkt:38:4\nactual:     1\nexpected:   6\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp3chx8y78.rkt:39:4\nactual:     43\nexpected:   93\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp3chx8y78.rkt:40:4\nactual:     1\nexpected:   3\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (gcd a b)\n    (if (= b 0)\n        a\n        (gcd b (remainder a b))))\n  (define (divisors a)\n    (for/list ([i (in-range 1 (add1 (quotient a 2)))])\n      (if (= (remainder a i) 0)\n          i)))\n  (define (common-divisors a b)\n    (for/list ([i (in-range 1 (add1 (quotient a 2)))])\n      (if (= (remainder a i) 0)\n          (if (= (remainder b i) 0)\n              i))))\n  (define (sum-list lst)\n    (for/sum ([i lst])\n      i))\n  (sum-list (common-divisors a b)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1666124242,
      "stdout": "",
      "stderr": "/tmp/tmpgfsns3ky.rkt:11:6: if: missing an \"else\" expression\n  in: (if (= (remainder a i) 0) i)\n  location...:\n   /tmp/tmpgfsns3ky.rkt:11:6\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (divisors n)\n    (for/list ([i (in-range 1 (add1 (quotient n 2)))])\n      (if (zero? (modulo n i)) i)))\n  (define (common-divisors a b)\n    (for/list ([i (in-range 1 (add1 (quotient a 2)))])\n      (if (zero? (modulo a i))\n          (if (zero? (modulo b i)) i))))\n  (apply + (common-divisors a b)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1666124241,
      "stdout": "",
      "stderr": "/tmp/tmp56jw8bho.rkt:7:6: if: missing an \"else\" expression\n  in: (if (zero? (modulo n i)) i)\n  location...:\n   /tmp/tmp56jw8bho.rkt:7:6\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (divisors n)\n    (for/list ([i (in-range 1 (add1 (quotient n 2)))])\n      (if (zero? (modulo n i)) i)))\n  (define (common-divisors a b)\n    (for/list ([i (in-range 1 (min a b))])\n      (if (and (zero? (modulo a i)) (zero? (modulo b i))) i)))\n  (apply + (common-divisors a b)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1666124242,
      "stdout": "",
      "stderr": "/tmp/tmpwbzzmke7.rkt:7:6: if: missing an \"else\" expression\n  in: (if (zero? (modulo n i)) i)\n  location...:\n   /tmp/tmpwbzzmke7.rkt:7:6\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (gcd a b)\n    (if (= b 0)\n        a\n        (gcd b (remainder a b))))\n  (define (divisors n)\n    (for/list ([i (in-range 1 n)])\n      (if (= (remainder n i) 0)\n          i)))\n  (define (common-divisors a b)\n    (for/list ([i (in-range 1 (gcd a b))])\n      (if (= (remainder a i) 0)\n          i)))\n  (apply + (common-divisors a b)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1666124242,
      "stdout": "",
      "stderr": "/tmp/tmpxidju0bo.rkt:11:6: if: missing an \"else\" expression\n  in: (if (= (remainder n i) 0) i)\n  location...:\n   /tmp/tmpxidju0bo.rkt:11:6\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (divisors n)\n    (for/list ([i (in-range 1 (add1 (quotient n 2)))])\n      (if (zero? (remainder n i)) i)))\n  (apply + (for/list ([i (in-range 1 (add1 (quotient (min a b) 2)))])\n            (if (zero? (remainder a i))\n                (if (zero? (remainder b i)) i)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1666124242,
      "stdout": "",
      "stderr": "/tmp/tmpgl9qgocf.rkt:7:6: if: missing an \"else\" expression\n  in: (if (zero? (remainder n i)) i)\n  location...:\n   /tmp/tmpgl9qgocf.rkt:7:6\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (divisors n)\n    (for/list ([i (in-range 1 n)])\n      (if (zero? (modulo n i))\n          i)))\n  (define (common-divisors a b)\n    (for/list ([i (in-range 1 (min a b))])\n      (if (zero? (modulo a i))\n          i)))\n  (apply + (common-divisors a b)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1666124242,
      "stdout": "",
      "stderr": "/tmp/tmpkgbsboyv.rkt:7:6: if: missing an \"else\" expression\n  in: (if (zero? (modulo n i)) i)\n  location...:\n   /tmp/tmpkgbsboyv.rkt:7:6\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (divisors n)\n    (filter (lambda (x) (= (modulo n x) 0)) (range 1 n)))\n  (apply + (intersection (divisors a) (divisors b))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1666124242,
      "stdout": "",
      "stderr": "/tmp/tmpe9uh6kc8.rkt:7:12: intersection: unbound identifier\n  in: intersection\n  location...:\n   /tmp/tmpe9uh6kc8.rkt:7:12\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (divisors a)\n    (for/list ([i (in-range 1 a)])\n      (if (zero? (modulo a i)) i)))\n  (define (common a b)\n    (for/list ([i (in-range 1 a)])\n      (if (member i (divisors b)) i)))\n  (apply + (common a b)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1666124242,
      "stdout": "",
      "stderr": "/tmp/tmp_pnhut7u.rkt:7:6: if: missing an \"else\" expression\n  in: (if (zero? (modulo a i)) i)\n  location...:\n   /tmp/tmp_pnhut7u.rkt:7:6\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (gcd a b)\n    (if (= b 0)\n        a\n        (gcd b (remainder a b))))\n  (define (divisors n)\n    (for/list ([i (in-range 1 (add1 (quotient n 2)))])\n      (if (= (remainder n i) 0)\n          i)))\n  (apply + (intersection (divisors a) (divisors b))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1666124242,
      "stdout": "",
      "stderr": "/tmp/tmpm6lahrn3.rkt:11:6: if: missing an \"else\" expression\n  in: (if (= (remainder n i) 0) i)\n  location...:\n   /tmp/tmpm6lahrn3.rkt:11:6\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (divisors n)\n    (define (iter i acc)\n      (if (= i 0)\n          acc\n          (if (= (modulo n i) 0)\n              (iter (- i 1) (+ acc i))\n              (iter (- i 1) acc))))\n    (iter n 0))\n  (+ (divisors a) (divisors b)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1666124242,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmptl3ovqi9.rkt:20:4\nactual:     42\nexpected:   6\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmptl3ovqi9.rkt:21:4\nactual:     589\nexpected:   93\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmptl3ovqi9.rkt:22:4\nactual:     19\nexpected:   3\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (divisors n)\n    (define (iter i)\n      (if (= i n)\n          '()\n          (if (= (modulo n i) 0)\n              (cons i (iter (+ i 1)))\n              (iter (+ i 1)))))\n    (iter 1))\n  (define (common-divisors a b)\n    (define (iter a b)\n      (if (null? a)\n          '()\n          (if (member (car a) b)\n              (cons (car a) (iter (cdr a) b))\n              (iter (cdr a) b))))\n    (iter (divisors a) (divisors b)))\n  (apply + (common-divisors a b)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1666124243,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (divisors n)\n    (for/list ([i (in-range 1 (add1 (quotient n 2)))])\n      (if (zero? (modulo n i)) i)))\n  (define (common-divisors a b)\n    (for/list ([i (in-range 1 (add1 (quotient (min a b) 2)))])\n      (if (and (zero? (modulo a i)) (zero? (modulo b i))) i)))\n  (apply + (common-divisors a b)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1665509712,
      "stdout": "",
      "stderr": "/tmp/tmpksmts_11.rkt:7:6: if: missing an \"else\" expression\n  in: (if (zero? (modulo n i)) i)\n  location...:\n   /tmp/tmpksmts_11.rkt:7:6\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (gcd a b)\n    (if (= b 0)\n        a\n        (gcd b (remainder a b))))\n  (define (divisors n)\n    (for/list ([i (in-range 1 (add1 (quotient n 2)))])\n      (if (= (remainder n i) 0)\n          i)))\n  (apply + (intersection (divisors a) (divisors b))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1666124242,
      "stdout": "",
      "stderr": "/tmp/tmpm6lahrn3.rkt:11:6: if: missing an \"else\" expression\n  in: (if (= (remainder n i) 0) i)\n  location...:\n   /tmp/tmpm6lahrn3.rkt:11:6\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (divisors n)\n    (for/list ([i (in-range 1 (add1 (quotient n 2)))])\n      (if (zero? (modulo n i)) i)))\n  (apply + (intersection (divisors a) (divisors b))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1665509712,
      "stdout": "",
      "stderr": "/tmp/tmp7c332xln.rkt:7:6: if: missing an \"else\" expression\n  in: (if (zero? (modulo n i)) i)\n  location...:\n   /tmp/tmp7c332xln.rkt:7:6\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (gcd a b)\n    (if (= b 0)\n        a\n        (gcd b (remainder a b))))\n  (define (divisors n)\n    (define (divisors-iter n i)\n      (if (= n i)\n          '()\n          (if (= (remainder n i) 0)\n              (cons i (divisors-iter n (+ i 1)))\n              (divisors-iter n (+ i 1)))))\n    (divisors-iter n 1))\n  (define (sum-divisors n)\n    (define (sum-divisors-iter n i)\n      (if (= n i)\n          0\n          (+ i (sum-divisors-iter n (+ i 1)))))\n    (sum-divisors-iter n 1))\n  (+ (sum-divisors (gcd a b)) 0))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1666124243,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp80uci6qd.rkt:30:4\nactual:     10\nexpected:   6\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp80uci6qd.rkt:31:4\nactual:     1225\nexpected:   93\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp80uci6qd.rkt:32:4\nactual:     1\nexpected:   3\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (gcd a b)\n    (if (= b 0)\n        a\n        (gcd b (remainder a b))))\n  (define (divisors a)\n    (define (divisors-iter a b)\n      (if (= a 0)\n          b\n          (if (= (remainder a b) 0)\n              (divisors-iter (/ a b) (+ b (divisors-iter (/ a b) 0)))\n              (divisors-iter a (+ b 1)))))\n    (divisors-iter a 1))\n  (define (sum-divisors a)\n    (define (sum-divisors-iter a b)\n      (if (= a 0)\n          b\n          (if (= (remainder a b) 0)\n              (sum-divisors-iter (/ a b) (+ b (sum-divisors-iter (/ a b) 0)))\n              (sum-divisors-iter a (+ b 1)))))\n    (sum-divisors-iter a 1))\n  (+ (sum-divisors (gcd a b)) (sum-divisors (/ a (gcd a b)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1666124243,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmprwdrjd0z.rkt:32:4\n\nremainder: division by zero\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmprwdrjd0z.rkt:33:4\n\nremainder: division by zero\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmprwdrjd0z.rkt:34:4\n\nremainder: division by zero\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (divisors n)\n    (for/list ([i (in-range 1 n)])\n      (if (zero? (modulo n i)) i)))\n  (apply + (intersection (divisors a) (divisors b))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1665509712,
      "stdout": "",
      "stderr": "/tmp/tmpyufqkfw7.rkt:7:6: if: missing an \"else\" expression\n  in: (if (zero? (modulo n i)) i)\n  location...:\n   /tmp/tmpyufqkfw7.rkt:7:6\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (divisors n)\n    (for/list ([i (in-range 1 n)])\n      (if (zero? (modulo n i)) i)))\n  (define (common-divisors a b)\n    (for/list ([i (in-range 1 (min a b))])\n      (if (zero? (modulo a i)) i)))\n  (apply + (common-divisors a b)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1665509712,
      "stdout": "",
      "stderr": "/tmp/tmp1xigad6y.rkt:7:6: if: missing an \"else\" expression\n  in: (if (zero? (modulo n i)) i)\n  location...:\n   /tmp/tmp1xigad6y.rkt:7:6\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (divisors n)\n    (for/list ([i (in-range 1 n)])\n      (if (zero? (modulo n i)) i)))\n  (apply + (intersection (divisors a) (divisors b))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1665509712,
      "stdout": "",
      "stderr": "/tmp/tmpyufqkfw7.rkt:7:6: if: missing an \"else\" expression\n  in: (if (zero? (modulo n i)) i)\n  location...:\n   /tmp/tmpyufqkfw7.rkt:7:6\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (divisors n)\n    (for/list ([i (in-range 1 n)])\n      (if (zero? (modulo n i)) i)))\n  (define (common a b)\n    (for/list ([i (in-range 1 (min a b))])\n      (if (and (member i (divisors a)) (member i (divisors b))) i)))\n  (apply + (common a b)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1666124243,
      "stdout": "",
      "stderr": "/tmp/tmp88yiu0qx.rkt:7:6: if: missing an \"else\" expression\n  in: (if (zero? (modulo n i)) i)\n  location...:\n   /tmp/tmp88yiu0qx.rkt:7:6\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (divisors n)\n    (for/list ([i (in-range 1 (add1 (quotient n 2)))])\n      (if (zero? (modulo n i)) i)))\n  (define (common-divisors a b)\n    (for/list ([i (in-range 1 (add1 (quotient a 2)))])\n      (if (zero? (modulo a i))\n          (if (zero? (modulo b i)) i))))\n  (apply + (common-divisors a b)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1666124241,
      "stdout": "",
      "stderr": "/tmp/tmp56jw8bho.rkt:7:6: if: missing an \"else\" expression\n  in: (if (zero? (modulo n i)) i)\n  location...:\n   /tmp/tmp56jw8bho.rkt:7:6\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (gcd a b)\n    (if (= b 0)\n        a\n        (gcd b (remainder a b))))\n  (define (divisors n)\n    (define (divisors-iter n i)\n      (if (= i n)\n          (list n)\n          (if (= (remainder n i) 0)\n              (cons i (divisors-iter n (+ i 1)))\n              (divisors-iter n (+ i 1)))))\n    (divisors-iter n 1))\n  (define (common-divisors a b)\n    (define (common-divisors-iter a b)\n      (if (null? a)\n          '()\n          (if (member (car a) b)\n              (cons (car a) (common-divisors-iter (cdr a) b))\n              (common-divisors-iter (cdr a) b))))\n    (common-divisors-iter a b))\n  (apply + (common-divisors (divisors a) (divisors b))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1666124243,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (divisors n)\n    (filter (lambda (x) (= (remainder n x) 0)) (range 1 n)))\n  (define (common-divisors a b)\n    (filter (lambda (x) (member x (divisors b))) (divisors a)))\n  (apply + (common-divisors a b)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1666124241,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (sum-divisors a b)\n    (cond ((= a b) a)\n          ((&gt; a b) (sum-divisors (- a 1) b))\n          ((&lt; a b) (sum-divisors a (- b 1)))))\n  (sum-divisors a b))\n</code>\nI am getting the following error:\n<code>sum: application: not a procedure;\n expected a procedure that can be applied to arguments\n  given: #&lt;procedure:sum-divisors&gt;\n  arguments...:\n   #&lt;procedure:sum-divisors&gt;\n   #&lt;procedure:sum-divisors&gt;\n</code>\nI am not sure what I am doing wrong.\n\n\nA:\n\nYou are calling <code>sum-divisors</code> without arguments.\n<code>(define (sum a b)\n  (define (sum-divisors a b)\n    (cond ((= a b) a)\n          ((&gt; a b) (sum-divisors (- a 1) b))\n          ((&lt; a b) (sum-divisors a (- b 1)))))\n  (sum-divisors a b))\n</code>\nYou need to pass the arguments <code>a</code> and <code>b</code> to <code>sum-divisors</code>.\n<code>(define (sum a b)\n  (define (sum-divisors a b)\n    (cond ((= a b) a)\n          ((&gt; a b) (sum-divisors (- a 1) b))\n          ((&lt; a b) (sum-divisors a (- b 1)))))\n  (sum-divisors a b))\n</code>\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1666124242,
      "stdout": "",
      "stderr": "/tmp/tmppspe6487.rkt:37:10: read-syntax: expected a `)` to close `(`\n  possible cause: indentation suggests a missing `)` before line 39\n  context...:\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:186:17: body\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:183:2: wrap-internal\n   /work/arjunguha-research-group/software/racket/collects/racket/../syntax/module-reader.rkt:67:9: wrap-internal/wrapper\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (gcd a b)\n    (if (= b 0)\n        a\n        (gcd b (remainder a b))))\n  (define (divisors a)\n    (for/list ([i (in-range 1 (add1 (quotient a 2)))])\n      (if (zero? (remainder a i))\n          i)))\n  (define (common-divisors a b)\n    (for/list ([i (in-range 1 (add1 (quotient (gcd a b) 2)))])\n      (if (zero? (remainder (gcd a b) i))\n          i)))\n  (apply + (common-divisors a b)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1666124243,
      "stdout": "",
      "stderr": "/tmp/tmpcqqj5rhc.rkt:11:6: if: missing an \"else\" expression\n  in: (if (zero? (remainder a i)) i)\n  location...:\n   /tmp/tmpcqqj5rhc.rkt:11:6\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (gcd a b)\n    (if (= b 0)\n        a\n        (gcd b (remainder a b))))\n  (define (divisors a)\n    (define (divisors-iter a b)\n      (if (= a b)\n          (list a)\n          (if (zero? (remainder a b))\n              (cons b (divisors-iter a (- b 1)))\n              (divisors-iter a (- b 1)))))\n    (divisors-iter a (/ a 2)))\n  (define (sum-divisors a)\n    (define (sum-divisors-iter a b)\n      (if (= a b)\n          a\n          (if (zero? (remainder a b))\n              (+ b (sum-divisors-iter a (- b 1)))\n              (sum-divisors-iter a (- b 1)))))\n    (sum-divisors-iter a (/ a 2)))\n  (define (common-divisors a b)\n    (define (common-divisors-iter a b c)\n      (if (= a c)\n          (list a)\n          (if (zero? (remainder a c))\n              (cons c (common-divisors-iter a b (- c 1)))\n              (common-divisors-iter a b (- c 1)))))\n    (common-divisors-iter a b (/ (gcd a b) 2)))\n  (sum-divisors (car (common-divisors a b))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1666124243,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpmkxfce89.rkt:40:4\n\nremainder: contract violation\n  expected: integer?\n  given: 5/2\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpmkxfce89.rkt:41:4\n\nremainder: division by zero\n--------------------\n--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpmkxfce89.rkt:42:4\n\nremainder: division by zero\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (divisors n)\n    (for/list ([i (in-range 1 (add1 (quotient n 2)))])\n      (if (zero? (modulo n i)) i)))\n  (apply + (intersection (divisors a) (divisors b))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1665509712,
      "stdout": "",
      "stderr": "/tmp/tmp7c332xln.rkt:7:6: if: missing an \"else\" expression\n  in: (if (zero? (modulo n i)) i)\n  location...:\n   /tmp/tmp7c332xln.rkt:7:6\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (divisors n)\n    (for/list ([i (in-range 1 (add1 (quotient n 2)))])\n      (if (zero? (modulo n i)) i)))\n  (define (common-divisors a b)\n    (for/list ([i (in-range 1 (min a b))])\n      (if (zero? (modulo a i)) i)))\n  (apply + (common-divisors a b)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1666124242,
      "stdout": "",
      "stderr": "/tmp/tmplpyq0d5p.rkt:7:6: if: missing an \"else\" expression\n  in: (if (zero? (modulo n i)) i)\n  location...:\n   /tmp/tmplpyq0d5p.rkt:7:6\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (divisors n)\n    (for/list ([i (in-range 1 n)])\n      (if (zero? (modulo n i)) i)))\n  (define (common-divisors a b)\n    (for/list ([i (in-range 1 (min a b))])\n      (if (and (zero? (modulo a i)) (zero? (modulo b i))) i)))\n  (apply + (common-divisors a b)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1666124241,
      "stdout": "",
      "stderr": "/tmp/tmpx1__j3kp.rkt:7:6: if: missing an \"else\" expression\n  in: (if (zero? (modulo n i)) i)\n  location...:\n   /tmp/tmpx1__j3kp.rkt:7:6\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (divisors n)\n    (for/list ([i (in-range 1 n)])\n      (if (zero? (modulo n i)) i)))\n  (apply + (intersection (divisors a) (divisors b))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1665509712,
      "stdout": "",
      "stderr": "/tmp/tmpyufqkfw7.rkt:7:6: if: missing an \"else\" expression\n  in: (if (zero? (modulo n i)) i)\n  location...:\n   /tmp/tmpyufqkfw7.rkt:7:6\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (divisors n)\n    (for/list ([i (in-range 1 (add1 (quotient n 2)))])\n      (if (zero? (modulo n i)) i)))\n  (apply + (intersection (divisors a) (divisors b))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1665509712,
      "stdout": "",
      "stderr": "/tmp/tmp7c332xln.rkt:7:6: if: missing an \"else\" expression\n  in: (if (zero? (modulo n i)) i)\n  location...:\n   /tmp/tmp7c332xln.rkt:7:6\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (divisors n)\n    (filter (lambda (x) (= (modulo n x) 0)) (range 1 n)))\n  (define (common-divisors a b)\n    (filter (lambda (x) (member x (divisors b))) (divisors a)))\n  (apply + (common-divisors a b)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1666124241,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (gcd a b)\n    (if (= b 0)\n        a\n        (gcd b (remainder a b))))\n  (define (divisors n)\n    (define (divisors-iter n i)\n      (if (= i n)\n          (list n)\n          (if (= (remainder n i) 0)\n              (cons i (divisors-iter n (+ i 1)))\n              (divisors-iter n (+ i 1)))))\n    (divisors-iter n 1))\n  (define (sum-divisors n)\n    (define (sum-divisors-iter n i)\n      (if (= i n)\n          0\n          (+ i (sum-divisors-iter n (+ i 1)))))\n    (sum-divisors-iter n 1))\n  (define (common-divisors a b)\n    (define (common-divisors-iter a b i)\n      (if (= i (gcd a b))\n          (list i)\n          (if (= (remainder a i) 0)\n              (if (= (remainder b i) 0)\n                  (cons i (common-divisors-iter a b (+ i 1)))\n                  (common-divisors-iter a b (+ i 1)))\n              (common-divisors-iter a b (+ i 1)))))\n    (common-divisors-iter a b 1))\n  (sum-divisors (gcd a b)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1666124243,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpj2du6hal.rkt:40:4\nactual:     10\nexpected:   6\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpj2du6hal.rkt:41:4\nactual:     1225\nexpected:   93\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpj2du6hal.rkt:42:4\nactual:     1\nexpected:   3\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (divisors n)\n    (for/list ([i (in-range 1 (add1 (quotient n 2)))])\n      (if (zero? (modulo n i)) i)))\n  (apply + (intersection (divisors a) (divisors b))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1665509712,
      "stdout": "",
      "stderr": "/tmp/tmp7c332xln.rkt:7:6: if: missing an \"else\" expression\n  in: (if (zero? (modulo n i)) i)\n  location...:\n   /tmp/tmp7c332xln.rkt:7:6\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (divisors n)\n    (for/list ([i (in-range 1 n)])\n      (if (zero? (modulo n i)) i)))\n  (define (common-divisors a b)\n    (for/list ([i (in-range 1 (min a b))])\n      (if (zero? (modulo a i)) i)))\n  (apply + (common-divisors a b)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1665509712,
      "stdout": "",
      "stderr": "/tmp/tmp1xigad6y.rkt:7:6: if: missing an \"else\" expression\n  in: (if (zero? (modulo n i)) i)\n  location...:\n   /tmp/tmp1xigad6y.rkt:7:6\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (divisors n)\n    (for/list ([i (in-range 1 n)])\n      (if (zero? (modulo n i))\n          i)))\n  (define (common-divisors a b)\n    (for/list ([i (in-range 1 (min a b))])\n      (if (and (zero? (modulo a i))\n               (zero? (modulo b i)))\n          i)))\n  (apply + (common-divisors a b)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1666124243,
      "stdout": "",
      "stderr": "/tmp/tmp2308efyi.rkt:7:6: if: missing an \"else\" expression\n  in: (if (zero? (modulo n i)) i)\n  location...:\n   /tmp/tmp2308efyi.rkt:7:6\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (divisors n)\n    (for/list ([i (in-range 1 n)])\n      (if (zero? (modulo n i)) i)))\n  (apply + (intersection (divisors a) (divisors b))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1665509712,
      "stdout": "",
      "stderr": "/tmp/tmpyufqkfw7.rkt:7:6: if: missing an \"else\" expression\n  in: (if (zero? (modulo n i)) i)\n  location...:\n   /tmp/tmpyufqkfw7.rkt:7:6\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (gcd a b)\n    (if (= b 0)\n        a\n        (gcd b (remainder a b))))\n  (define (sum-divisors n)\n    (define (sum-divisors-iter n i total)\n      (if (= i n)\n          total\n          (if (= (remainder n i) 0)\n              (sum-divisors-iter n (+ i 1) (+ total i))\n              (sum-divisors-iter n (+ i 1) total))))\n    (sum-divisors-iter n 1 0))\n  (+ (sum-divisors (gcd a b)) (sum-divisors (gcd b a))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1666124243,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp6aw6on_v.rkt:24:4\nactual:     2\nexpected:   6\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp6aw6on_v.rkt:25:4\nactual:     86\nexpected:   93\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp6aw6on_v.rkt:26:4\nactual:     2\nexpected:   3\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (divisors n)\n    (filter (lambda (x) (= (modulo n x) 0)) (range 1 n)))\n  (define (common-divisors a b)\n    (filter (lambda (x) (member x (divisors b))) (divisors a)))\n  (apply + (common-divisors a b)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1666124241,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (divisors n)\n    (for/list ([i (in-range 1 n)])\n      (if (zero? (modulo n i)) i)))\n  (define (common-divisors a b)\n    (for/list ([i (in-range 1 a)])\n      (if (and (zero? (modulo a i)) (zero? (modulo b i))) i)))\n  (apply + (common-divisors a b)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1666124242,
      "stdout": "",
      "stderr": "/tmp/tmp88qpwuos.rkt:7:6: if: missing an \"else\" expression\n  in: (if (zero? (modulo n i)) i)\n  location...:\n   /tmp/tmp88qpwuos.rkt:7:6\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (divisors n)\n    (for/list ([i (in-range 1 n)])\n      (if (zero? (modulo n i)) i)))\n  (apply + (intersection (divisors a) (divisors b))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1665509712,
      "stdout": "",
      "stderr": "/tmp/tmpyufqkfw7.rkt:7:6: if: missing an \"else\" expression\n  in: (if (zero? (modulo n i)) i)\n  location...:\n   /tmp/tmpyufqkfw7.rkt:7:6\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (divisors n)\n    (for/list ([i (in-range 1 (add1 (quotient n 2)))])\n      (if (zero? (modulo n i)) i)))\n  (apply + (intersection (divisors a) (divisors b))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1665509712,
      "stdout": "",
      "stderr": "/tmp/tmp7c332xln.rkt:7:6: if: missing an \"else\" expression\n  in: (if (zero? (modulo n i)) i)\n  location...:\n   /tmp/tmp7c332xln.rkt:7:6\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (gcd a b)\n    (if (= b 0)\n        a\n        (gcd b (remainder a b))))\n  (define (divisors n)\n    (define (divisors-iter n i)\n      (if (= i n)\n          '()\n          (if (= (remainder n i) 0)\n              (cons i (divisors-iter n (+ i 1)))\n              (divisors-iter n (+ i 1)))))\n    (divisors-iter n 1))\n  (define (sum-divisors n)\n    (define (sum-divisors-iter n lst)\n      (if (null? lst)\n          0\n          (+ (car lst) (sum-divisors-iter n (cdr lst)))))\n    (sum-divisors-iter n (divisors n)))\n  (+ (sum-divisors (gcd a b)) (sum-divisors (quotient a (gcd a b))) (sum-divisors (quotient b (gcd a b)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1666124243,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp5r8_t3nv.rkt:30:4\nactual:     3\nexpected:   6\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp5r8_t3nv.rkt:31:4\nactual:     45\nexpected:   93\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (gcd a b)\n    (if (= b 0)\n        a\n        (gcd b (remainder a b))))\n  (define (divisors n)\n    (for/list ([i (in-range 1 (add1 (quotient n 2)))])\n      (if (zero? (remainder n i))\n          i)))\n  (define (common-divisors a b)\n    (for/list ([i (in-range 1 (add1 (quotient a 2)))])\n      (if (zero? (remainder a i))\n          (if (zero? (remainder b i))\n              i))))\n  (apply + (common-divisors a b)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1666124243,
      "stdout": "",
      "stderr": "/tmp/tmprl5gydnv.rkt:11:6: if: missing an \"else\" expression\n  in: (if (zero? (remainder n i)) i)\n  location...:\n   /tmp/tmprl5gydnv.rkt:11:6\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (divisors n)\n    (for/list ([i (in-range 1 (add1 (quotient n 2)))])\n      (if (zero? (modulo n i)) i)))\n  (apply + (intersection (divisors a) (divisors b))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1665509712,
      "stdout": "",
      "stderr": "/tmp/tmp7c332xln.rkt:7:6: if: missing an \"else\" expression\n  in: (if (zero? (modulo n i)) i)\n  location...:\n   /tmp/tmp7c332xln.rkt:7:6\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (divisors n)\n    (for/list ([i (in-range 1 n)])\n      (if (zero? (modulo n i)) i)))\n  (apply + (for/list ([i (in-range 1 (min a b))])\n              (if (member i (divisors a)) i))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1666124243,
      "stdout": "",
      "stderr": "/tmp/tmp65f7r69e.rkt:7:6: if: missing an \"else\" expression\n  in: (if (zero? (modulo n i)) i)\n  location...:\n   /tmp/tmp65f7r69e.rkt:7:6\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (gcd a b)\n    (if (= b 0)\n        a\n        (gcd b (remainder a b))))\n  (define (divisors n)\n    (define (iter i)\n      (if (&lt; i n)\n          (if (= (remainder n i) 0)\n              (+ i (iter (+ i 1)))\n              (iter (+ i 1)))\n          0))\n    (iter 1))\n  (+ (divisors (gcd a b)) (divisors (gcd b a))))\n</code>\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1666124243,
      "stdout": "",
      "stderr": "/tmp/tmp4o45v0sx.rkt:4:0: read-syntax: expected a `)` to close `(`\n  possible cause: indentation suggests a missing `)` before line 18\n  context...:\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:186:17: body\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:183:2: wrap-internal\n   /work/arjunguha-research-group/software/racket/collects/racket/../syntax/module-reader.rkt:67:9: wrap-internal/wrapper\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (gcd a b)\n    (cond ((= b 0) a)\n          (else (gcd b (remainder a b)))))\n  (define (divisors n)\n    (define (divisors-iter n i)\n      (cond ((= i n) (list n))\n            ((= (remainder n i) 0) (cons i (divisors-iter n (+ i 1))))\n            (else (divisors-iter n (+ i 1)))))\n    (divisors-iter n 1))\n  (define (sum-divisors n)\n    (apply + (divisors n)))\n  (sum-divisors (gcd a b)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1666124243,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (divisors n)\n    (for/list ([i (in-range 1 n)])\n      (if (zero? (modulo n i)) i)))\n  (define (common-divisors a b)\n    (for/list ([i (in-range 1 (min a b))])\n      (if (and (zero? (modulo a i)) (zero? (modulo b i))) i)))\n  (apply + (common-divisors a b)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1666124241,
      "stdout": "",
      "stderr": "/tmp/tmpx1__j3kp.rkt:7:6: if: missing an \"else\" expression\n  in: (if (zero? (modulo n i)) i)\n  location...:\n   /tmp/tmpx1__j3kp.rkt:7:6\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (divisors n)\n    (for/list ([i (in-range 1 n)])\n      (if (zero? (modulo n i)) i)))\n  (define (common-divisors a b)\n    (for/list ([i (in-range 1 (min a b))])\n      (if (and (zero? (modulo a i)) (zero? (modulo b i))) i)))\n  (apply + (common-divisors a b)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1666124241,
      "stdout": "",
      "stderr": "/tmp/tmpx1__j3kp.rkt:7:6: if: missing an \"else\" expression\n  in: (if (zero? (modulo n i)) i)\n  location...:\n   /tmp/tmpx1__j3kp.rkt:7:6\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (gcd a b)\n    (if (= b 0)\n        a\n        (gcd b (remainder a b))))\n  (define (lcm a b)\n    (/ (* a b) (gcd a b)))\n  (define (sum-divisors n)\n    (define (iter i sum)\n      (if (= i n)\n          sum\n          (if (= (remainder n i) 0)\n              (iter (+ i 1) (+ sum i))\n              (iter (+ i 1) sum))))\n    (iter 1 0))\n  (sum-divisors (lcm a b)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1666124243,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpj8sjuy4e.rkt:26:4\nactual:     42\nexpected:   6\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpj8sjuy4e.rkt:27:4\nactual:     568\nexpected:   93\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpj8sjuy4e.rkt:28:4\nactual:     16\nexpected:   3\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (divisors x)\n    (filter (lambda (y) (= (modulo x y) 0)) (range 1 (add1 x))))\n  (apply + (intersection (divisors a) (divisors b))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1666124243,
      "stdout": "",
      "stderr": "/tmp/tmpd_2wk7q_.rkt:7:12: intersection: unbound identifier\n  in: intersection\n  location...:\n   /tmp/tmpd_2wk7q_.rkt:7:12\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (gcd a b)\n    (if (= b 0)\n        a\n        (gcd b (remainder a b))))\n  (define (divisors n)\n    (define (divisors-iter n i)\n      (if (= i n)\n          '()\n          (if (= (remainder n i) 0)\n              (cons i (divisors-iter n (+ i 1)))\n              (divisors-iter n (+ i 1)))))\n    (divisors-iter n 1))\n  (define (sum-divisors n)\n    (define (sum-divisors-iter n i)\n      (if (= i n)\n          0\n          (+ (if (= (remainder n i) 0) i 0) (sum-divisors-iter n (+ i 1)))))\n    (sum-divisors-iter n 1))\n  (define (sum-common-divisors a b)\n    (define (sum-common-divisors-iter a b i)\n      (if (= i (gcd a b))\n          0\n          (+ (if (= (remainder (gcd a b) i) 0) i 0) (sum-common-divisors-iter a b (+ i 1)))))\n    (sum-common-divisors-iter a b 1))\n  (sum-common-divisors a b))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1666124243,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp2gz5sttx.rkt:36:4\nactual:     1\nexpected:   6\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp2gz5sttx.rkt:37:4\nactual:     43\nexpected:   93\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp2gz5sttx.rkt:38:4\nactual:     1\nexpected:   3\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (divisors n)\n    (for/list ([i (in-range 1 (add1 (quotient n 2)))])\n      (if (zero? (modulo n i)) i)))\n  (apply + (intersection (divisors a) (divisors b))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1665509712,
      "stdout": "",
      "stderr": "/tmp/tmp7c332xln.rkt:7:6: if: missing an \"else\" expression\n  in: (if (zero? (modulo n i)) i)\n  location...:\n   /tmp/tmp7c332xln.rkt:7:6\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (divisors n)\n    (for/list ([i (in-range 1 n)])\n      (if (zero? (modulo n i)) i)))\n  (define (common-divisors a b)\n    (for/list ([i (in-range 1 (min a b))])\n      (if (and (zero? (modulo a i)) (zero? (modulo b i))) i)))\n  (apply + (common-divisors a b)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1666124241,
      "stdout": "",
      "stderr": "/tmp/tmpx1__j3kp.rkt:7:6: if: missing an \"else\" expression\n  in: (if (zero? (modulo n i)) i)\n  location...:\n   /tmp/tmpx1__j3kp.rkt:7:6\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (gcd a b)\n    (if (= b 0)\n        a\n        (gcd b (remainder a b))))\n  (define (divisors n)\n    (define (divisors-iter i acc)\n      (if (= i 0)\n          acc\n          (if (= (remainder n i) 0)\n              (divisors-iter (- i 1) (+ acc i))\n              (divisors-iter (- i 1) acc))))\n    (divisors-iter n 0))\n  (+ (divisors (gcd a b)) (divisors (gcd b a))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1666124243,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmph5ivix2a.rkt:24:4\nactual:     12\nexpected:   6\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmph5ivix2a.rkt:25:4\nactual:     186\nexpected:   93\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmph5ivix2a.rkt:26:4\nactual:     6\nexpected:   3\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (gcd a b)\n    (if (= b 0)\n        a\n        (gcd b (remainder a b))))\n  (define (lcm a b)\n    (/ (* a b) (gcd a b)))\n  (define (sum-divisors n)\n    (define (divisors n)\n      (for/list ([i (in-range 1 (add1 (/ n 2)))])\n        (if (= (remainder n i) 0)\n            i)))\n    (apply + (divisors n)))\n  (sum-divisors (lcm a b)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1666124243,
      "stdout": "",
      "stderr": "/tmp/tmp9joukngy.rkt:14:8: if: missing an \"else\" expression\n  in: (if (= (remainder n i) 0) i)\n  location...:\n   /tmp/tmp9joukngy.rkt:14:8\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (gcd a b)\n    (if (= b 0)\n        a\n        (gcd b (remainder a b))))\n  (define (divisors n)\n    (define (divisors-iter i acc)\n      (if (= i 0)\n          acc\n          (if (= (remainder n i) 0)\n              (divisors-iter (- i 1) (+ i acc))\n              (divisors-iter (- i 1) acc))))\n    (divisors-iter n 0))\n  (+ (divisors (gcd a b)) (divisors (gcd b a))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1666124243,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9euhdbcc.rkt:24:4\nactual:     12\nexpected:   6\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9euhdbcc.rkt:25:4\nactual:     186\nexpected:   93\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp9euhdbcc.rkt:26:4\nactual:     6\nexpected:   3\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (gcd a b)\n    (if (= b 0)\n        a\n        (gcd b (remainder a b))))\n  (define (divisors n)\n    (define (divisors-iter n i)\n      (if (&gt; i n)\n          '()\n          (if (= (remainder n i) 0)\n              (cons i (divisors-iter n (+ i 1)))\n              (divisors-iter n (+ i 1)))))\n    (divisors-iter n 1))\n  (define (common-divisors a b)\n    (define (common-divisors-iter a b)\n      (if (null? a)\n          '()\n          (if (member (car a) b)\n              (cons (car a) (common-divisors-iter (cdr a) b))\n              (common-divisors-iter (cdr a) b))))\n    (common-divisors-iter a b))\n  (apply + (common-divisors (divisors a) (divisors b))))\n</code>\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1666124243,
      "stdout": "",
      "stderr": "/tmp/tmp00zcma2g.rkt:4:0: read-syntax: expected a `)` to close `(`\n  possible cause: indentation suggests a missing `)` before line 26\n  context...:\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:186:17: body\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:183:2: wrap-internal\n   /work/arjunguha-research-group/software/racket/collects/racket/../syntax/module-reader.rkt:67:9: wrap-internal/wrapper\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (divisors n)\n    (for/list ([i (in-range 1 (add1 (quotient n 2)))])\n      (if (zero? (modulo n i)) i)))\n  (apply + (intersection (divisors a) (divisors b))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1665509712,
      "stdout": "",
      "stderr": "/tmp/tmp7c332xln.rkt:7:6: if: missing an \"else\" expression\n  in: (if (zero? (modulo n i)) i)\n  location...:\n   /tmp/tmp7c332xln.rkt:7:6\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (let loop ([i 1] [sum 0])\n    (cond\n      [(> i a) sum]\n      [(and (zero? (modulo a i)) (zero? (modulo b i))) (loop (+ i 1) (+ sum i))]\n      [else (loop (+ i 1) sum)])))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1666124243,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (gcd a b)\n    (if (= b 0)\n        a\n        (gcd b (remainder a b))))\n  (define (divisors n)\n    (define (divisors-iter n i)\n      (if (= i n)\n          '()\n          (if (= (remainder n i) 0)\n              (cons i (divisors-iter n (+ i 1)))\n              (divisors-iter n (+ i 1)))))\n    (divisors-iter n 1))\n  (define (sum-divisors n)\n    (define (sum-divisors-iter n l)\n      (if (null? l)\n          0\n          (+ (car l) (sum-divisors-iter n (cdr l)))))\n    (sum-divisors-iter n (divisors n)))\n  (+ (sum-divisors (gcd a b)) (sum-divisors (quotient a (gcd a b))) (sum-divisors (quotient b (gcd a b)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1666124244,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp0fvw8f04.rkt:30:4\nactual:     3\nexpected:   6\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp0fvw8f04.rkt:31:4\nactual:     45\nexpected:   93\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (gcd a b)\n    (if (= b 0)\n        a\n        (gcd b (remainder a b))))\n  (define (lcm a b)\n    (/ (* a b) (gcd a b)))\n  (define (sum-divisors n)\n    (define (divisors n)\n      (for/list ([i (in-range 1 (add1 (quotient n 2)))])\n        (if (= (remainder n i) 0)\n            i)))\n    (apply + (divisors n)))\n  (sum-divisors (lcm a b)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1665509712,
      "stdout": "",
      "stderr": "/tmp/tmprk27pu8x.rkt:14:8: if: missing an \"else\" expression\n  in: (if (= (remainder n i) 0) i)\n  location...:\n   /tmp/tmprk27pu8x.rkt:14:8\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (divisors a)\n    (for/list ([i (in-range 1 (add1 (quotient a 2)))])\n      (if (zero? (modulo a i)) i)))\n  (define (common a b)\n    (for/list ([i (in-range 1 (add1 (quotient a 2)))])\n      (if (and (zero? (modulo a i)) (zero? (modulo b i))) i)))\n  (apply + (common a b)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1666124243,
      "stdout": "",
      "stderr": "/tmp/tmpjiyryxyr.rkt:7:6: if: missing an \"else\" expression\n  in: (if (zero? (modulo a i)) i)\n  location...:\n   /tmp/tmpjiyryxyr.rkt:7:6\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (divisors n)\n    (for/list ([i (in-range 1 n)])\n      (if (zero? (modulo n i)) i)))\n  (define (common-divisors a b)\n    (for/list ([i (in-range 1 (min a b))])\n      (if (zero? (modulo a i)) i)))\n  (apply + (common-divisors a b)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1665509712,
      "stdout": "",
      "stderr": "/tmp/tmp1xigad6y.rkt:7:6: if: missing an \"else\" expression\n  in: (if (zero? (modulo n i)) i)\n  location...:\n   /tmp/tmp1xigad6y.rkt:7:6\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (divisors n)\n    (for/list ([i (in-range 1 n)]\n               #:when (zero? (modulo n i)))\n      i))\n  (define (common-divisors a b)\n    (for/list ([i (in-range 1 (min a b))]\n               #:when (and (member i (divisors a))\n                           (member i (divisors b))))\n      i))\n  (apply + (common-divisors a b)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1665509712,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (divisors n)\n    (for/list ([i (in-range 1 (add1 (quotient n 2)))])\n      (if (zero? (modulo n i)) i)))\n  (apply + (for/list ([i (in-range 1 (add1 (quotient (min a b) 2)))])\n            (if (zero? (modulo a i))\n                (if (zero? (modulo b i)) i)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1666124243,
      "stdout": "",
      "stderr": "/tmp/tmpprvklo_4.rkt:7:6: if: missing an \"else\" expression\n  in: (if (zero? (modulo n i)) i)\n  location...:\n   /tmp/tmpprvklo_4.rkt:7:6\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (gcd a b)\n    (if (= b 0)\n        a\n        (gcd b (remainder a b))))\n  (define (divisors n)\n    (define (divisors-iter n i)\n      (if (&gt; i n)\n          '()\n          (if (= (remainder n i) 0)\n              (cons i (divisors-iter n (+ i 1)))\n              (divisors-iter n (+ i 1)))))\n    (divisors-iter n 1))\n  (define (common-divisors a b)\n    (define (common-divisors-iter a b)\n      (if (null? a)\n          '()\n          (if (member (car a) b)\n              (cons (car a) (common-divisors-iter (cdr a) b))\n              (common-divisors-iter (cdr a) b))))\n    (common-divisors-iter a b))\n  (apply + (common-divisors (divisors a) (divisors b))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1666124243,
      "stdout": "",
      "stderr": "/tmp/tmp5sdp3fmn.rkt:4:0: read-syntax: expected a `)` to close `(`\n  possible cause: indentation suggests a missing `)` before line 27\n  context...:\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:186:17: body\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:183:2: wrap-internal\n   /work/arjunguha-research-group/software/racket/collects/racket/../syntax/module-reader.rkt:67:9: wrap-internal/wrapper\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (divisors n)\n    (for/list ([i (in-range 1 n)])\n      (if (zero? (modulo n i)) i)))\n  (define (common-divisors a b)\n    (for/list ([i (in-range 1 a)])\n      (if (and (zero? (modulo a i)) (zero? (modulo b i))) i)))\n  (apply + (common-divisors a b)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1666124242,
      "stdout": "",
      "stderr": "/tmp/tmp88qpwuos.rkt:7:6: if: missing an \"else\" expression\n  in: (if (zero? (modulo n i)) i)\n  location...:\n   /tmp/tmp88qpwuos.rkt:7:6\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (gcd a b)\n    (if (= b 0)\n        a\n        (gcd b (remainder a b))))\n  (define (lcm a b)\n    (/ (* a b) (gcd a b)))\n  (define (sum-divisors n)\n    (define (sum-divisors-iter i sum)\n      (if (= i n)\n          sum\n          (if (= (remainder n i) 0)\n              (sum-divisors-iter (+ i 1) (+ sum i))\n              (sum-divisors-iter (+ i 1) sum))))\n    (sum-divisors-iter 1 0))\n  (+ (sum-divisors (lcm a b)) (sum-divisors (gcd a b))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1665509712,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_sllqaxz.rkt:26:4\nactual:     43\nexpected:   6\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_sllqaxz.rkt:27:4\nactual:     611\nexpected:   93\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_sllqaxz.rkt:28:4\nactual:     17\nexpected:   3\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (gcd a b)\n    (if (= b 0)\n        a\n        (gcd b (remainder a b))))\n  (define (divisors a)\n    (define (divisors-iter a b)\n      (if (= b a)\n          (list a)\n          (if (= (remainder a b) 0)\n              (cons b (divisors-iter a (+ b 1)))\n              (divisors-iter a (+ b 1)))))\n    (divisors-iter a 1))\n  (define (common-divisors a b)\n    (define (common-divisors-iter a b)\n      (if (null? a)\n          '()\n          (if (member (car a) b)\n              (cons (car a) (common-divisors-iter (cdr a) b))\n              (common-divisors-iter (cdr a) b))))\n    (common-divisors-iter a b))\n  (apply + (common-divisors (divisors a) (divisors b))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1666124244,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (gcd a b)\n    (if (= b 0)\n        a\n        (gcd b (remainder a b))))\n  (define (divisors n)\n    (define (divisors-iter n i)\n      (if (= i n)\n          '()\n          (if (= (remainder n i) 0)\n              (cons i (divisors-iter n (+ i 1)))\n              (divisors-iter n (+ i 1)))))\n    (divisors-iter n 1))\n  (define (sum-divisors lst)\n    (if (null? lst)\n        0\n        (+ (car lst) (sum-divisors (cdr lst)))))\n  (define (common-divisors a b)\n    (define (common-divisors-iter a b lst)\n      (if (null? lst)\n          '()\n          (if (and (member (car lst) (divisors a))\n                   (member (car lst) (divisors b)))\n              (cons (car lst) (common-divisors-iter a b (cdr lst)))\n              (common-divisors-iter a b (cdr lst)))))\n    (common-divisors-iter a b (divisors (gcd a b))))\n  (sum-divisors (common-divisors a b)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1666124244,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpr394u_jt.rkt:37:4\nactual:     1\nexpected:   6\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpr394u_jt.rkt:38:4\nactual:     43\nexpected:   93\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpr394u_jt.rkt:39:4\nactual:     1\nexpected:   3\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (divisors a)\n    (for/list ([i (in-range 1 a)])\n      (if (zero? (modulo a i)) i)))\n  (define (common a b)\n    (for/list ([i (in-range 1 (min a b))])\n      (if (zero? (modulo a i)) i)))\n  (apply + (common a b)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1666124244,
      "stdout": "",
      "stderr": "/tmp/tmp7gmjp68g.rkt:7:6: if: missing an \"else\" expression\n  in: (if (zero? (modulo a i)) i)\n  location...:\n   /tmp/tmp7gmjp68g.rkt:7:6\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (gcd a b)\n    (if (= b 0)\n        a\n        (gcd b (remainder a b))))\n  (define (divisors a)\n    (define (iter a i)\n      (if (= i 0)\n          '()\n          (if (= (remainder a i) 0)\n              (cons i (iter a (- i 1)))\n              (iter a (- i 1)))))\n    (iter a (/ a 2)))\n  (define (common a b)\n    (define (iter a b)\n      (if (null? a)\n          '()\n          (if (member (car a) b)\n              (cons (car a) (iter (cdr a) b))\n              (iter (cdr a) b))))\n    (iter a b))\n  (define (sum-list l)\n    (if (null? l)\n        0\n        (+ (car l) (sum-list (cdr l)))))\n  (sum-list (common (divisors a) (divisors b))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1666124244,
      "stdout": "",
      "stderr": "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp_5n4bjt5.rkt:36:4\n\nremainder: contract violation\n  expected: integer?\n  given: 15/2\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (gcd a b)\n    (if (= b 0)\n        a\n        (gcd b (remainder a b))))\n  (define (lcm a b)\n    (/ (* a b) (gcd a b)))\n  (define (sum-divisors n)\n    (define (sum-divisors-iter i sum)\n      (if (= i n)\n          sum\n          (if (= (remainder n i) 0)\n              (sum-divisors-iter (+ i 1) (+ sum i))\n              (sum-divisors-iter (+ i 1) sum))))\n    (sum-divisors-iter 1 0))\n  (+ (sum-divisors (lcm a b)) (sum-divisors (gcd a b))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1665509712,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_sllqaxz.rkt:26:4\nactual:     43\nexpected:   6\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_sllqaxz.rkt:27:4\nactual:     611\nexpected:   93\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_sllqaxz.rkt:28:4\nactual:     17\nexpected:   3\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (divisors n)\n    (for/list ([i (in-range 1 n)])\n      (if (zero? (modulo n i)) i)))\n  (define (common-divisors a b)\n    (for/list ([i (in-range 1 (min a b))])\n      (if (and (zero? (modulo a i)) (zero? (modulo b i))) i)))\n  (apply + (common-divisors a b)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1666124241,
      "stdout": "",
      "stderr": "/tmp/tmpx1__j3kp.rkt:7:6: if: missing an \"else\" expression\n  in: (if (zero? (modulo n i)) i)\n  location...:\n   /tmp/tmpx1__j3kp.rkt:7:6\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (divisors n)\n    (for/list ([i (in-range 1 (add1 (quotient n 2)))])\n      (if (zero? (modulo n i)) i)))\n  (define (common-divisors a b)\n    (for/list ([i (in-range 1 (add1 (quotient a 2)))])\n      (if (zero? (modulo a i))\n          (if (zero? (modulo b i)) i))))\n  (apply + (common-divisors a b)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1666124241,
      "stdout": "",
      "stderr": "/tmp/tmp56jw8bho.rkt:7:6: if: missing an \"else\" expression\n  in: (if (zero? (modulo n i)) i)\n  location...:\n   /tmp/tmp56jw8bho.rkt:7:6\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (divisors n)\n    (for/list ([i (in-range 1 (add1 (quotient n 2)))])\n      (if (zero? (modulo n i)) i)))\n  (define (common-divisors a b)\n    (for/list ([i (in-range 1 (add1 (quotient a 2)))])\n      (if (zero? (modulo a i))\n          (if (zero? (modulo b i)) i))))\n  (apply + (common-divisors a b)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1666124241,
      "stdout": "",
      "stderr": "/tmp/tmp56jw8bho.rkt:7:6: if: missing an \"else\" expression\n  in: (if (zero? (modulo n i)) i)\n  location...:\n   /tmp/tmp56jw8bho.rkt:7:6\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (divisors n)\n    (for/list ([i (in-range 1 (add1 (quotient n 2)))])\n      (if (zero? (modulo n i)) i)))\n  (define (common-divisors a b)\n    (for/list ([i (in-range 1 (add1 (quotient (min a b) 2)))])\n      (if (and (zero? (modulo a i)) (zero? (modulo b i))) i)))\n  (apply + (common-divisors a b)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1665509712,
      "stdout": "",
      "stderr": "/tmp/tmpksmts_11.rkt:7:6: if: missing an \"else\" expression\n  in: (if (zero? (modulo n i)) i)\n  location...:\n   /tmp/tmpksmts_11.rkt:7:6\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (gcd a b)\n    (if (= b 0)\n        a\n        (gcd b (remainder a b))))\n  (define (divisors n)\n    (for/list ([i (in-range 1 (add1 (quotient n 2)))])\n      (if (= (remainder n i) 0)\n          i)))\n  (define (sum-divisors n)\n    (apply + (divisors n)))\n  (define (common-divisors a b)\n    (for/list ([i (in-range 1 (gcd a b))])\n      (if (= (remainder a i) 0)\n          i)))\n  (apply + (common-divisors a b)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1666124244,
      "stdout": "",
      "stderr": "/tmp/tmp0oqayblg.rkt:11:6: if: missing an \"else\" expression\n  in: (if (= (remainder n i) 0) i)\n  location...:\n   /tmp/tmp0oqayblg.rkt:11:6\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (divisors n)\n    (for/list ([i (in-range 1 (add1 (quotient n 2)))])\n      (if (zero? (modulo n i)) i)))\n  (define (common-divisors a b)\n    (for/list ([i (in-range 1 (add1 (quotient a 2)))])\n      (if (zero? (modulo a i))\n          (if (zero? (modulo b i)) i))))\n  (apply + (common-divisors a b)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1666124241,
      "stdout": "",
      "stderr": "/tmp/tmp56jw8bho.rkt:7:6: if: missing an \"else\" expression\n  in: (if (zero? (modulo n i)) i)\n  location...:\n   /tmp/tmp56jw8bho.rkt:7:6\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (divisors n)\n    (for/list ([i (in-range 1 (add1 (quotient n 2)))])\n      (if (zero? (modulo n i)) i)))\n  (apply + (intersection (divisors a) (divisors b))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1665509712,
      "stdout": "",
      "stderr": "/tmp/tmp7c332xln.rkt:7:6: if: missing an \"else\" expression\n  in: (if (zero? (modulo n i)) i)\n  location...:\n   /tmp/tmp7c332xln.rkt:7:6\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (divisors n)\n    (for/list ([i (in-range 1 n)])\n      (if (zero? (modulo n i))\n          i)))\n  (define (common-divisors a b)\n    (for/list ([i (in-range 1 (min a b))])\n      (if (zero? (modulo a i))\n          (if (zero? (modulo b i))\n              i))))\n  (apply + (common-divisors a b)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1666124244,
      "stdout": "",
      "stderr": "/tmp/tmpwkjwd520.rkt:7:6: if: missing an \"else\" expression\n  in: (if (zero? (modulo n i)) i)\n  location...:\n   /tmp/tmpwkjwd520.rkt:7:6\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (divisors n)\n    (for/list ([i (in-range 1 n)])\n      (if (zero? (modulo n i)) i)))\n  (define (common-divisors a b)\n    (for/list ([i (in-range 1 (min a b))])\n      (if (zero? (modulo a i)) i)))\n  (apply + (common-divisors a b)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1665509712,
      "stdout": "",
      "stderr": "/tmp/tmp1xigad6y.rkt:7:6: if: missing an \"else\" expression\n  in: (if (zero? (modulo n i)) i)\n  location...:\n   /tmp/tmp1xigad6y.rkt:7:6\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (divisors n)\n    (for/list ([i (in-range 1 n)])\n      (if (zero? (modulo n i)) i)))\n  (define (common-divisors a b)\n    (for/list ([i (in-range 1 (min a b))])\n      (if (and (zero? (modulo a i)) (zero? (modulo b i))) i)))\n  (apply + (common-divisors a b)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1666124241,
      "stdout": "",
      "stderr": "/tmp/tmpx1__j3kp.rkt:7:6: if: missing an \"else\" expression\n  in: (if (zero? (modulo n i)) i)\n  location...:\n   /tmp/tmpx1__j3kp.rkt:7:6\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (gcd a b)\n    (if (= b 0)\n        a\n        (gcd b (remainder a b))))\n  (define (divisors n)\n    (define (divisors-iter n d)\n      (if (= d n)\n          '()\n          (if (= (remainder n d) 0)\n              (cons d (divisors-iter n (+ d 1)))\n              (divisors-iter n (+ d 1)))))\n    (divisors-iter n 1))\n  (define (sum-divisors n)\n    (foldl + 0 (divisors n)))\n  (+ (sum-divisors (gcd a b)) (sum-divisors (/ a (gcd a b))) (sum-divisors (/ b (gcd a b)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1666124244,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpnhkx84d_.rkt:26:4\nactual:     3\nexpected:   6\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpnhkx84d_.rkt:27:4\nactual:     45\nexpected:   93\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (gcd a b)\n    (if (= b 0)\n        a\n        (gcd b (remainder a b))))\n  (define (divisors n)\n    (for/list ([i (in-range 1 (add1 (quotient n 2)))])\n      (if (= (remainder n i) 0)\n          i)))\n  (apply + (intersection (divisors a) (divisors b))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1666124242,
      "stdout": "",
      "stderr": "/tmp/tmpm6lahrn3.rkt:11:6: if: missing an \"else\" expression\n  in: (if (= (remainder n i) 0) i)\n  location...:\n   /tmp/tmpm6lahrn3.rkt:11:6\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (gcd a b)\n    (if (= b 0)\n        a\n        (gcd b (remainder a b))))\n  (define (divisors n)\n    (define (divisors-iter n d)\n      (if (= d n)\n          '()\n          (if (= (remainder n d) 0)\n              (cons d (divisors-iter n (+ d 1)))\n              (divisors-iter n (+ d 1)))))\n    (divisors-iter n 1))\n  (define (sum-divisors n)\n    (define (sum-divisors-iter n l)\n      (if (null? l)\n          0\n          (+ (car l) (sum-divisors-iter n (cdr l)))))\n    (sum-divisors-iter n (divisors n)))\n  (+ (sum-divisors (gcd a b)) (sum-divisors (quotient a (gcd a b))) (sum-divisors (quotient b (gcd a b)))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1666124244,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmphttfuqus.rkt:30:4\nactual:     3\nexpected:   6\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmphttfuqus.rkt:31:4\nactual:     45\nexpected:   93\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (gcd a b)\n    (if (= b 0)\n        a\n        (gcd b (remainder a b))))\n  (define (divisors n)\n    (for/list ([i (in-range 1 (add1 (quotient n 2)))])\n      (if (= (remainder n i) 0)\n          i)))\n  (apply + (intersection (divisors a) (divisors b))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1666124242,
      "stdout": "",
      "stderr": "/tmp/tmpm6lahrn3.rkt:11:6: if: missing an \"else\" expression\n  in: (if (= (remainder n i) 0) i)\n  location...:\n   /tmp/tmpm6lahrn3.rkt:11:6\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (divisors n)\n    (for/list ([i (in-range 1 (add1 (quotient n 2)))])\n      (if (zero? (modulo n i)) i)))\n  (apply + (intersection (divisors a) (divisors b))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1665509712,
      "stdout": "",
      "stderr": "/tmp/tmp7c332xln.rkt:7:6: if: missing an \"else\" expression\n  in: (if (zero? (modulo n i)) i)\n  location...:\n   /tmp/tmp7c332xln.rkt:7:6\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (divisors a)\n    (for/list ([i (in-range 1 a)])\n      (if (zero? (modulo a i)) i)))\n  (define (common a b)\n    (for/list ([i (in-range 1 a)]\n               #:when (member i (divisors b)))\n      i))\n  (apply + (common a b)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1666124244,
      "stdout": "",
      "stderr": "/tmp/tmpx08wo7fg.rkt:7:6: if: missing an \"else\" expression\n  in: (if (zero? (modulo a i)) i)\n  location...:\n   /tmp/tmpx08wo7fg.rkt:7:6\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (gcd a b)\n    (if (= b 0)\n        a\n        (gcd b (remainder a b))))\n  (define (divisors a)\n    (define (divisors-iter a i)\n      (if (= i a)\n          '()\n          (if (= (remainder a i) 0)\n              (cons i (divisors-iter a (+ i 1)))\n              (divisors-iter a (+ i 1)))))\n    (divisors-iter a 1))\n  (define (common-divisors a b)\n    (define (common-divisors-iter a b)\n      (if (null? a)\n          '()\n          (if (member (car a) b)\n              (cons (car a) (common-divisors-iter (cdr a) b))\n              (common-divisors-iter (cdr a) b))))\n    (common-divisors-iter a b))\n  (define (sum-of-list a)\n    (if (null? a)\n        0\n        (+ (car a) (sum-of-list (cdr a)))))\n  (sum-of-list (common-divisors (divisors a) (divisors b))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1666124244,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (divisors n)\n    (filter (lambda (x) (= (modulo n x) 0)) (range 1 n)))\n  (define (common-divisors a b)\n    (filter (lambda (x) (member x (divisors b))) (divisors a)))\n  (apply + (common-divisors a b)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1666124241,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (divisors n)\n    (filter (lambda (x) (= (modulo n x) 0)) (range 1 n)))\n  (define (common-divisors a b)\n    (filter (lambda (x) (member x (divisors b))) (divisors a)))\n  (apply + (common-divisors a b)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1666124241,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (divisors n)\n    (for/list ([i (in-range 1 n)])\n      (if (zero? (modulo n i)) i)))\n  (define (common-divisors a b)\n    (for/list ([i (in-range 1 (min a b))])\n      (if (and (zero? (modulo a i)) (zero? (modulo b i))) i)))\n  (apply + (common-divisors a b)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1666124241,
      "stdout": "",
      "stderr": "/tmp/tmpx1__j3kp.rkt:7:6: if: missing an \"else\" expression\n  in: (if (zero? (modulo n i)) i)\n  location...:\n   /tmp/tmpx1__j3kp.rkt:7:6\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (divisors n)\n    (define (iter i)\n      (if (&gt; i n)\n          '()\n          (if (zero? (modulo n i))\n              (cons i (iter (+ i 1)))\n              (iter (+ i 1)))))\n    (iter 1))\n  (define (common a b)\n    (define (iter xs ys)\n      (if (or (null? xs) (null? ys))\n          '()\n          (if (equal? (car xs) (car ys))\n              (cons (car xs) (iter (cdr xs) (cdr ys)))\n              (if (&lt; (car xs) (car ys))\n                  (iter (cdr xs) ys)\n                  (iter xs (cdr ys))))))\n    (iter (divisors a) (divisors b)))\n  (apply + (common a b)))\n</code>\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1666124243,
      "stdout": "",
      "stderr": "/tmp/tmpctrl5kb7.rkt:5:2: read-syntax: expected a `)` to close `(`\n  possible cause: indentation suggests a missing `)` before line 13\n  context...:\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:186:17: body\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:183:2: wrap-internal\n   /work/arjunguha-research-group/software/racket/collects/racket/../syntax/module-reader.rkt:67:9: wrap-internal/wrapper\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (divisors n)\n    (for/list ([i (in-range 1 (add1 (quotient n 2)))])\n      (if (zero? (modulo n i)) i)))\n  (define (common-divisors a b)\n    (for/list ([i (in-range 1 (add1 (quotient (min a b) 2)))])\n      (if (and (zero? (modulo a i)) (zero? (modulo b i))) i)))\n  (apply + (common-divisors a b)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1665509712,
      "stdout": "",
      "stderr": "/tmp/tmpksmts_11.rkt:7:6: if: missing an \"else\" expression\n  in: (if (zero? (modulo n i)) i)\n  location...:\n   /tmp/tmpksmts_11.rkt:7:6\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (divisors n)\n    (for/list ([i (in-range 1 (add1 (quotient n 2)))])\n      (if (zero? (remainder n i)) i)))\n  (apply + (intersection (divisors a) (divisors b))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1666124241,
      "stdout": "",
      "stderr": "/tmp/tmpzyty5z09.rkt:7:6: if: missing an \"else\" expression\n  in: (if (zero? (remainder n i)) i)\n  location...:\n   /tmp/tmpzyty5z09.rkt:7:6\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (gcd a b)\n    (if (= b 0) a\n        (gcd b (remainder a b))))\n  (define (divisors a)\n    (for/list ([i (in-range 1 (add1 (quotient a 2)))])\n      (if (= (remainder a i) 0) i)))\n  (apply + (intersection (divisors a) (divisors b))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1666124244,
      "stdout": "",
      "stderr": "/tmp/tmpamgq4k72.rkt:10:6: if: missing an \"else\" expression\n  in: (if (= (remainder a i) 0) i)\n  location...:\n   /tmp/tmpamgq4k72.rkt:10:6\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (divisors n)\n    (for/list ([i (in-range 1 n)])\n      (if (zero? (modulo n i)) i)))\n  (apply + (intersection (divisors a) (divisors b))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1665509712,
      "stdout": "",
      "stderr": "/tmp/tmpyufqkfw7.rkt:7:6: if: missing an \"else\" expression\n  in: (if (zero? (modulo n i)) i)\n  location...:\n   /tmp/tmpyufqkfw7.rkt:7:6\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (divisors n)\n    (for/list ([i (in-range 1 (add1 (quotient n 2)))])\n      (if (zero? (modulo n i)) i)))\n  (apply + (intersection (divisors a) (divisors b))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1665509712,
      "stdout": "",
      "stderr": "/tmp/tmp7c332xln.rkt:7:6: if: missing an \"else\" expression\n  in: (if (zero? (modulo n i)) i)\n  location...:\n   /tmp/tmp7c332xln.rkt:7:6\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (divisors n)\n    (for/list ([i (in-range 1 (add1 (quotient n 2)))])\n      (if (zero? (modulo n i)) i)))\n  (define (common-divisors a b)\n    (for/list ([i (in-range 1 (min a b))])\n      (if (zero? (modulo a i)) i)))\n  (apply + (common-divisors a b)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1666124242,
      "stdout": "",
      "stderr": "/tmp/tmplpyq0d5p.rkt:7:6: if: missing an \"else\" expression\n  in: (if (zero? (modulo n i)) i)\n  location...:\n   /tmp/tmplpyq0d5p.rkt:7:6\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (divisors n)\n    (for/list ([i (in-range 1 n)])\n      (if (zero? (modulo n i))\n          i)))\n  (define (common-divisors a b)\n    (for/list ([i (in-range 1 a)])\n      (if (and (zero? (modulo a i)) (zero? (modulo b i)))\n          i)))\n  (apply + (common-divisors a b)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1666124244,
      "stdout": "",
      "stderr": "/tmp/tmp7cey85js.rkt:7:6: if: missing an \"else\" expression\n  in: (if (zero? (modulo n i)) i)\n  location...:\n   /tmp/tmp7cey85js.rkt:7:6\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (divisors n)\n    (filter (lambda (x) (= (remainder n x) 0)) (range 1 n)))\n  (define (common-divisors a b)\n    (filter (lambda (x) (member x (divisors b))) (divisors a)))\n  (apply + (common-divisors a b)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1666124241,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (gcd a b)\n    (if (= b 0)\n        a\n        (gcd b (remainder a b))))\n  (define (divisors n)\n    (for/list ([i (in-range 1 (add1 (quotient n 2)))])\n      (if (= (remainder n i) 0)\n          i)))\n  (apply + (intersection (divisors a) (divisors b))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1666124242,
      "stdout": "",
      "stderr": "/tmp/tmpm6lahrn3.rkt:11:6: if: missing an \"else\" expression\n  in: (if (= (remainder n i) 0) i)\n  location...:\n   /tmp/tmpm6lahrn3.rkt:11:6\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (gcd a b)\n    (if (= b 0)\n        a\n        (gcd b (remainder a b))))\n  (define (divisors n)\n    (for/list ([i (in-range 1 (add1 (quotient n 2)))])\n      (if (= (remainder n i) 0)\n          i)))\n  (define (common-divisors a b)\n    (for/list ([i (in-range 1 (add1 (quotient (gcd a b) 2)))])\n      (if (= (remainder (gcd a b) i) 0)\n          i)))\n  (apply + (common-divisors a b)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1666124242,
      "stdout": "",
      "stderr": "/tmp/tmptgdan209.rkt:11:6: if: missing an \"else\" expression\n  in: (if (= (remainder n i) 0) i)\n  location...:\n   /tmp/tmptgdan209.rkt:11:6\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (divisors n)\n    (filter (lambda (x) (= (modulo n x) 0)) (range 1 n)))\n  (define (common-divisors a b)\n    (filter (lambda (x) (member x (divisors b))) (divisors a)))\n  (apply + (common-divisors a b)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1666124241,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (gcd a b)\n    (if (= b 0)\n        a\n        (gcd b (modulo a b))))\n  (define (divisors n)\n    (for/list ([i (in-range 1 (add1 (quotient n 2)))])\n      (if (= (modulo n i) 0)\n          i)))\n  (apply + (intersection (divisors a) (divisors b))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1666124244,
      "stdout": "",
      "stderr": "/tmp/tmp63z5t6el.rkt:11:6: if: missing an \"else\" expression\n  in: (if (= (modulo n i) 0) i)\n  location...:\n   /tmp/tmp63z5t6el.rkt:11:6\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (divisors n)\n    (for/list ([i (in-range 1 (add1 (quotient n 2)))])\n      (if (zero? (modulo n i)) i)))\n  (for/sum ([i (in-range 1 (add1 (quotient a 2)))])\n    (if (zero? (modulo a i))\n        (if (member i (divisors b)) i 0)\n        0)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1666124244,
      "stdout": "",
      "stderr": "/tmp/tmpqmvynh18.rkt:7:6: if: missing an \"else\" expression\n  in: (if (zero? (modulo n i)) i)\n  location...:\n   /tmp/tmpqmvynh18.rkt:7:6\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (gcd a b)\n    (if (= b 0)\n        a\n        (gcd b (remainder a b))))\n  (define (lcm a b)\n    (/ (* a b) (gcd a b)))\n  (define (divisors n)\n    (for/list ([i (in-range 1 (add1 (/ n 2)))])\n      (if (= (remainder n i) 0)\n          i)))\n  (define (common-divisors a b)\n    (for/list ([i (in-range 1 (add1 (/ (lcm a b) 2)))])\n      (if (and (= (remainder (lcm a b) i) 0)\n               (= (remainder a i) 0)\n               (= (remainder b i) 0))\n          i)))\n  (apply + (common-divisors a b)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1666124244,
      "stdout": "",
      "stderr": "/tmp/tmpfrf_aqqu.rkt:13:6: if: missing an \"else\" expression\n  in: (if (= (remainder n i) 0) i)\n  location...:\n   /tmp/tmpfrf_aqqu.rkt:13:6\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (divisors n)\n    (for/list ([i (in-range 1 (add1 (quotient n 2)))])\n      (if (zero? (modulo n i))\n          i)))\n  (apply + (intersection (divisors a) (divisors b))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1666124244,
      "stdout": "",
      "stderr": "/tmp/tmp6208dbry.rkt:7:6: if: missing an \"else\" expression\n  in: (if (zero? (modulo n i)) i)\n  location...:\n   /tmp/tmp6208dbry.rkt:7:6\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (let loop ([i 1] [sum 0])\n    (cond [(= i a) sum]\n          [(= (modulo a i) 0)\n           (cond [(= (modulo b i) 0) (loop (+ i 1) (+ sum i))]\n                 [else (loop (+ i 1) sum)])]\n          [else (loop (+ i 1) sum)])))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1666124244,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (divisors n)\n    (for/list ([i (in-range 1 n)])\n      (if (zero? (modulo n i))\n          i)))\n  (define (common-divisors a b)\n    (for/list ([i (in-range 1 (min a b))])\n      (if (and (zero? (modulo a i))\n               (zero? (modulo b i)))\n          i)))\n  (apply + (common-divisors a b)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1666124243,
      "stdout": "",
      "stderr": "/tmp/tmp2308efyi.rkt:7:6: if: missing an \"else\" expression\n  in: (if (zero? (modulo n i)) i)\n  location...:\n   /tmp/tmp2308efyi.rkt:7:6\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (divisors n)\n    (for/list ([i (in-range 1 (add1 (quotient n 2)))])\n      (if (zero? (modulo n i)) i)))\n  (define (common-divisors a b)\n    (for/list ([i (in-range 1 (add1 (quotient a 2)))])\n      (if (zero? (modulo a i))\n          (if (zero? (modulo b i)) i))))\n  (apply + (common-divisors a b)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1666124241,
      "stdout": "",
      "stderr": "/tmp/tmp56jw8bho.rkt:7:6: if: missing an \"else\" expression\n  in: (if (zero? (modulo n i)) i)\n  location...:\n   /tmp/tmp56jw8bho.rkt:7:6\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (divisors n)\n    (for/list ([i (in-range 1 (add1 (quotient n 2)))])\n      (if (zero? (modulo n i)) i)))\n  (define (common-divisors a b)\n    (for/list ([i (in-range 1 (add1 (quotient a 2)))])\n      (if (zero? (modulo a i))\n          (if (zero? (modulo b i)) i))))\n  (apply + (common-divisors a b)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1666124241,
      "stdout": "",
      "stderr": "/tmp/tmp56jw8bho.rkt:7:6: if: missing an \"else\" expression\n  in: (if (zero? (modulo n i)) i)\n  location...:\n   /tmp/tmp56jw8bho.rkt:7:6\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (divisors n)\n    (filter (lambda (x) (= 0 (modulo n x))) (range 1 n)))\n  (define (common-divisors a b)\n    (filter (lambda (x) (member x (divisors b))) (divisors a)))\n  (apply + (common-divisors a b)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1666124244,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (divisors n)\n    (for/list ([i (in-range 1 (add1 (quotient n 2)))])\n      (if (zero? (modulo n i)) i)))\n  (apply + (intersection (divisors a) (divisors b))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1665509712,
      "stdout": "",
      "stderr": "/tmp/tmp7c332xln.rkt:7:6: if: missing an \"else\" expression\n  in: (if (zero? (modulo n i)) i)\n  location...:\n   /tmp/tmp7c332xln.rkt:7:6\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (gcd a b)\n    (if (= b 0)\n        a\n        (gcd b (remainder a b))))\n  (define (divisors n)\n    (for/list ([i (in-range 1 (add1 (quotient n 2)))])\n      (if (= (remainder n i) 0)\n          i\n          #f)))\n  (apply + (intersection (divisors a) (divisors b))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1666124244,
      "stdout": "",
      "stderr": "/tmp/tmpmp683_rc.rkt:14:12: intersection: unbound identifier\n  in: intersection\n  location...:\n   /tmp/tmpmp683_rc.rkt:14:12\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (gcd a b)\n    (if (= b 0)\n        a\n        (gcd b (remainder a b))))\n  (define (divisors n)\n    (for/list ([i (in-range 1 (add1 (quotient n 2)))])\n      (if (= (remainder n i) 0)\n          i)))\n  (apply + (intersection (divisors a) (divisors b))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1666124242,
      "stdout": "",
      "stderr": "/tmp/tmpm6lahrn3.rkt:11:6: if: missing an \"else\" expression\n  in: (if (= (remainder n i) 0) i)\n  location...:\n   /tmp/tmpm6lahrn3.rkt:11:6\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (gcd a b)\n    (if (= b 0)\n        a\n        (gcd b (remainder a b))))\n  (define (divisors a)\n    (for/list ([i (in-range 1 (add1 (quotient a 2)))])\n      (if (= (remainder a i) 0)\n          i)))\n  (define (common-divisors a b)\n    (for/list ([i (in-range 1 (add1 (quotient a 2)))])\n      (if (and (= (remainder a i) 0) (= (remainder b i) 0))\n          i)))\n  (apply + (common-divisors a b)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1666124241,
      "stdout": "",
      "stderr": "/tmp/tmpga14qfs6.rkt:11:6: if: missing an \"else\" expression\n  in: (if (= (remainder a i) 0) i)\n  location...:\n   /tmp/tmpga14qfs6.rkt:11:6\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (gcd a b)\n    (if (= b 0)\n        a\n        (gcd b (remainder a b))))\n  (define (lcm a b)\n    (/ (* a b) (gcd a b)))\n  (define (divisors n)\n    (define (divisors-iter n i)\n      (if (= i n)\n          '()\n          (if (= (remainder n i) 0)\n              (cons i (divisors-iter n (+ i 1)))\n              (divisors-iter n (+ i 1)))))\n    (divisors-iter n 1))\n  (define (sum-divisors n)\n    (define (sum-divisors-iter n i)\n      (if (= i n)\n          0\n          (+ (if (= (remainder n i) 0) i 0) (sum-divisors-iter n (+ i 1)))))\n    (sum-divisors-iter n 1))\n  (+ (sum-divisors (lcm a b)) (sum-divisors (gcd a b))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1666124244,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpvz4hvt_i.rkt:32:4\nactual:     43\nexpected:   6\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpvz4hvt_i.rkt:33:4\nactual:     611\nexpected:   93\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpvz4hvt_i.rkt:34:4\nactual:     17\nexpected:   3\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (gcd a b)\n    (if (= b 0)\n        a\n        (gcd b (remainder a b))))\n  (define (divisors n)\n    (for/list ([i (in-range 1 (add1 (quotient n 2)))])\n      (if (= (remainder n i) 0)\n          i)))\n  (apply + (intersection (divisors a) (divisors b))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1666124242,
      "stdout": "",
      "stderr": "/tmp/tmpm6lahrn3.rkt:11:6: if: missing an \"else\" expression\n  in: (if (= (remainder n i) 0) i)\n  location...:\n   /tmp/tmpm6lahrn3.rkt:11:6\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (divisors x)\n    (for/list ([i (in-range 1 x)])\n      (if (zero? (modulo x i)) i)))\n  (apply + (intersect (divisors a) (divisors b))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1666124244,
      "stdout": "",
      "stderr": "/tmp/tmpnu280ulv.rkt:7:6: if: missing an \"else\" expression\n  in: (if (zero? (modulo x i)) i)\n  location...:\n   /tmp/tmpnu280ulv.rkt:7:6\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Write a rktthon function to find the sum of common divisors of two given numbers.\n(define (sum a b)\n  (define (divisors n)\n    (for/list ([i (in-range 1 (add1 (quotient n 2)))])\n      (if (zero? (modulo n i)) i)))\n  (apply + (intersection (divisors a) (divisors b))))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum))\n    (check-equal? (candidate 10 15) 6)\n    (check-equal? (candidate 100 150) 93)\n    (check-equal? (candidate 4 6) 3)\n))\n\n(test-humaneval)",
      "timestamp": 1665509712,
      "stdout": "",
      "stderr": "/tmp/tmp7c332xln.rkt:7:6: if: missing an \"else\" expression\n  in: (if (zero? (modulo n i)) i)\n  location...:\n   /tmp/tmp7c332xln.rkt:7:6\n",
      "exit_code": 1,
      "status": "Exception"
    }
  ]
}
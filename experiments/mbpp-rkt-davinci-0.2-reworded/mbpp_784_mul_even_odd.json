{
  "name": "mbpp_784_mul_even_odd",
  "language": "rkt",
  "prompt": "#lang racket\n\n;; Write a function to find the product of first even and odd number of a given list.\n(define (mul_even_odd list1)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_784_mul_even_odd.py",
  "prompt_terminology": "reworded",
  "tests": "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate mul_even_odd))\n    (check-equal? (candidate (list 1 3 5 7 4 1 6 8)) 4)\n    (check-equal? (candidate (list 1 2 3 4 5 6 7 8 9 10)) 2)\n    (check-equal? (candidate (list 1 5 7 9 10)) 10)\n))\n\n(test-humaneval)",
  "stop_tokens": [
    "\n(define ",
    "\n#|",
    "\n;",
    "\n("
  ],
  "completions": [
    "  (if (null? list1)\n      0\n      (if (even? (car list1))\n          (* (car list1) (mul_even_odd (cdr list1)))\n          (mul_even_odd (cdr list1)))))\n",
    "  (define (even-odd list1)\n    (if (null? list1)\n        '()\n        (cons (car list1) (even-odd (cdr (cdr list1))))))\n  (define (even-even list1)\n    (if (null? list1)\n        '()\n        (cons (car (cdr list1)) (even-even (cdr (cdr list1))))))\n  (if (null? list1)\n      1\n      (* (car (even-odd list1)) (car (even-even list1)))))\n",
    "  (if (null? list1)\n      1\n      (if (even? (car list1))\n          (* (car list1) (mul_even_odd (cdr list1)))\n          (mul_even_odd (cdr list1)))))\n",
    "  (if (null? list1)\n      0\n      (if (even? (car list1))\n          (* (car list1) (mul_even_odd (cdr list1)))\n          (mul_even_odd (cdr list1)))))\n",
    "  (if (null? list1)\n      1\n      (if (even? (car list1))\n          (* (car list1) (mul_even_odd (cdr list1)))\n          (mul_even_odd (cdr list1)))))\n",
    "  (if (null? list1)\n      1\n      (* (car list1) (mul_even_odd (cdr list1)))))\n",
    "  (if (null? list1)\n      1\n      (if (even? (car list1))\n          (* (car list1) (mul_even_odd (cdr list1)))\n          (mul_even_odd (cdr list1)))))\n",
    "  (if (null? list1)\n      1\n      (if (even? (car list1))\n          (* (car list1) (mul_even_odd (cdr list1)))\n          (mul_even_odd (cdr list1)))))\n",
    "  (if (null? list1)\n      1\n      (if (even? (car list1))\n          (* (car list1) (mul_even_odd (cdr list1)))\n          (mul_even_odd (cdr list1)))))\n",
    "  (if (null? list1)\n      1\n      (if (even? (car list1))\n          (* (car list1) (mul_even_odd (cdr list1)))\n          (mul_even_odd (cdr list1)))))\n",
    "  (let ([even (filter even? list1)]\n        [odd (filter odd? list1)])\n    (if (or (null? even) (null? odd))\n        0\n        (* (car even) (car odd)))))\n",
    "  (define (even_odd_helper list1 even odd)\n    (if (null? list1)\n        (* even odd)\n        (if (even? (car list1))\n            (even_odd_helper (cdr list1) (car list1) odd)\n            (even_odd_helper (cdr list1) even (car list1)))))\n  (even_odd_helper list1 0 0))\n",
    "  (if (null? list1)\n      1\n      (if (even? (car list1))\n          (* (car list1) (mul_even_odd (cdr list1)))\n          (mul_even_odd (cdr list1)))))\n",
    "  (if (null? list1)\n      1\n      (if (even? (car list1))\n          (* (car list1) (mul_even_odd (cdr list1)))\n          (mul_even_odd (cdr list1)))))\n",
    "  (if (null? list1)\n      1\n      (if (even? (car list1))\n          (* (car list1) (mul_even_odd (cdr list1)))\n          (mul_even_odd (cdr list1)))))\n",
    "  (if (null? list1)\n      1\n      (if (even? (car list1))\n          (* (car list1) (mul_even_odd (cdr list1)))\n          (mul_even_odd (cdr list1)))))\n",
    "  (if (null? list1)\n      0\n      (if (even? (car list1))\n          (* (car list1) (mul_even_odd (cdr list1)))\n          (mul_even_odd (cdr list1)))))\n",
    "  (if (null? list1)\n      1\n      (if (even? (car list1))\n          (* (car list1) (mul_even_odd (cdr list1)))\n          (mul_even_odd (cdr list1)))))\n",
    "  (if (null? list1)\n      0\n      (if (even? (car list1))\n          (if (null? (cdr list1))\n              0\n              (* (car list1) (car (cdr list1))))\n          (mul_even_odd (cdr list1)))))\n",
    "  (if (null? list1)\n      '()\n      (if (null? (cdr list1))\n          (list (car list1))\n          (if (even? (car list1))\n              (if (odd? (cadr list1))\n                  (list (* (car list1) (cadr list1)))\n                  (mul_even_odd (cdr list1)))\n              (if (odd? (car list1))\n                  (if (even? (cadr list1))\n                      (list (* (car list1) (cadr list1)))\n                      (mul_even_odd (cdr list1)))\n                  (mul_even_odd (cdr list1)))))))\n",
    "  (if (null? list1)\n      1\n      (if (even? (car list1))\n          (* (car list1) (mul_even_odd (cdr list1)))\n          (mul_even_odd (cdr list1)))))\n",
    "  (if (null? list1)\n      1\n      (if (even? (car list1))\n          (* (car list1) (mul_even_odd (cdr list1)))\n          (mul_even_odd (cdr list1)))))\n",
    "  (if (null? list1)\n      '()\n      (if (null? (cdr list1))\n          '()\n          (if (even? (car list1))\n              (if (odd? (cadr list1))\n                  (* (car list1) (cadr list1))\n                  (mul_even_odd (cdr list1)))\n              (mul_even_odd (cdr list1))))))\n",
    "  (if (null? list1)\n      1\n      (if (even? (car list1))\n          (* (car list1) (mul_even_odd (cdr list1)))\n          (mul_even_odd (cdr list1)))))\n",
    "  (if (null? list1)\n      1\n      (if (even? (car list1))\n          (* (car list1) (mul_even_odd (cdr list1)))\n          (mul_even_odd (cdr list1)))))\n",
    "  (if (null? list1)\n      0\n      (if (even? (car list1))\n          (if (null? (cdr list1))\n              0\n              (if (odd? (cadr list1))\n                  (* (car list1) (cadr list1))\n                  (mul_even_odd (cdr list1))))\n          (mul_even_odd (cdr list1)))))\n",
    "  (if (null? list1)\n      1\n      (if (even? (car list1))\n          (* (car list1) (mul_even_odd (cdr list1)))\n          (mul_even_odd (cdr list1)))))\n",
    "  (define (even? n)\n    (= (remainder n 2) 0))\n  (define (odd? n)\n    (= (remainder n 2) 1))\n  (define (mul_even_odd-iter list1 even odd)\n    (cond ((null? list1) (* even odd))\n          ((even? (car list1)) (mul_even_odd-iter (cdr list1 (car list1) odd)))\n          ((odd? (car list1)) (mul_even_odd-iter (cdr list1 even (car list1))))\n          (else (mul_even_odd-iter (cdr list1 even odd)))))\n  (mul_even_odd-iter list1 0 0))\n",
    "  (if (null? list1)\n      1\n      (if (even? (car list1))\n          (* (car list1) (mul_even_odd (cdr list1)))\n          (mul_even_odd (cdr list1)))))\n",
    "  (if (null? list1)\n      1\n      (if (even? (car list1))\n          (* (car list1) (mul_even_odd (cdr list1)))\n          (mul_even_odd (cdr list1)))))\n",
    "  (define (even_odd list1)\n    (cond\n      [(null? list1) '()]\n      [(even? (car list1)) (cons (car list1) (even_odd (cdr list1)))]\n      [(odd? (car list1)) (cons (car list1) (even_odd (cdr list1)))]\n      [else (even_odd (cdr list1))]))\n  (define (mul_list list1)\n    (cond\n      [(null? list1) 1]\n      [else (* (car list1) (mul_list (cdr list1)))]))\n  (mul_list (even_odd list1)))\n",
    "  (if (null? list1)\n      1\n      (* (car list1) (mul_even_odd (cdr list1)))))\n",
    "  (if (null? list1)\n      1\n      (if (even? (car list1))\n          (* (car list1) (mul_even_odd (cdr list1)))\n          (mul_even_odd (cdr list1)))))\n",
    "  (if (null? list1)\n      1\n      (if (even? (car list1))\n          (* (car list1) (mul_even_odd (cdr list1)))\n          (mul_even_odd (cdr list1)))))\n",
    "  (define (even? n)\n    (if (= (remainder n 2) 0)\n        #t\n        #f))\n  (define (odd? n)\n    (if (= (remainder n 2) 1)\n        #t\n        #f))\n  (define (find-even list)\n    (if (null? list)\n        #f\n        (if (even? (car list))\n            (car list)\n            (find-even (cdr list)))))\n  (define (find-odd list)\n    (if (null? list)\n        #f\n        (if (odd? (car list))\n            (car list)\n            (find-odd (cdr list)))))\n  (if (and (find-even list1) (find-odd list1))\n      (* (find-even list1) (find-odd list1))\n      #f))\n",
    "  (if (null? list1)\n      1\n      (* (car list1) (mul_even_odd (cdr list1)))))\n",
    "  (if (null? list1)\n      1\n      (* (car list1) (mul_even_odd (cdr list1)))))\n",
    "  (if (null? list1)\n      1\n      (if (even? (car list1))\n          (* (car list1) (mul_even_odd (cdr list1)))\n          (mul_even_odd (cdr list1)))))\n",
    "  (define (even-odd list1)\n    (cond ((null? list1) '())\n          ((null? (cdr list1)) '())\n          (else (cons (car list1) (cons (cadr list1) (even-odd (cddr list1)))))))\n  (apply * (even-odd list1)))\n",
    "  (if (null? list1)\n      1\n      (if (even? (car list1))\n          (* (car list1) (mul_even_odd (cdr list1)))\n          (mul_even_odd (cdr list1)))))\n",
    "  (if (null? list1)\n      1\n      (if (even? (car list1))\n          (* (car list1) (mul_even_odd (cdr list1)))\n          (mul_even_odd (cdr list1)))))\n",
    "  (if (null? list1)\n      1\n      (if (even? (car list1))\n          (* (car list1) (mul_even_odd (cdr list1)))\n          (mul_even_odd (cdr list1)))))\n",
    "  (if (null? list1)\n      1\n      (if (even? (car list1))\n          (* (car list1) (mul_even_odd (cdr list1)))\n          (mul_even_odd (cdr list1)))))\n",
    "  (if (null? list1)\n      1\n      (* (car list1) (mul_even_odd (cdr list1)))))\n",
    "  (if (null? list1)\n      1\n      (if (even? (car list1))\n          (* (car list1) (mul_even_odd (cdr list1)))\n          (mul_even_odd (cdr list1)))))\n",
    "  (if (null? list1)\n      1\n      (* (car list1) (mul_even_odd (cdr list1)))))\n",
    "  (let ([even (list-ref list1 0)]\n        [odd (list-ref list1 1)])\n    (* even odd)))\n",
    "  (if (null? list1)\n      1\n      (if (even? (car list1))\n          (* (car list1) (mul_even_odd (cdr list1)))\n          (mul_even_odd (cdr list1)))))\n",
    "  (if (null? list1)\n      1\n      (if (even? (car list1))\n          (* (car list1) (mul_even_odd (cdr list1)))\n          (mul_even_odd (cdr list1)))))\n",
    "  (define (even_odd list2)\n    (cond ((null? list2) '())\n          ((and (even? (car list2)) (odd? (cadr list2))) (* (car list2) (cadr list2)))\n          (else (even_odd (cdr list2)))))\n  (even_odd list1))\n",
    "  (if (null? list1)\n      1\n      (if (even? (car list1))\n          (* (car list1) (mul_even_odd (cdr list1)))\n          (mul_even_odd (cdr list1)))))\n",
    "  (cond\n    [(null? list1) 0]\n    [(even? (car list1)) (* (car list1) (mul_even_odd (cdr list1)))]\n    [(odd? (car list1)) (* (car list1) (mul_even_odd (cdr list1)))]\n    [else (mul_even_odd (cdr list1))]))\n",
    "  (if (null? list1)\n      1\n      (if (even? (car list1))\n          (* (car list1) (mul_even_odd (cdr list1)))\n          (mul_even_odd (cdr list1)))))\n",
    "  (if (null? list1)\n      1\n      (if (even? (car list1))\n          (* (car list1) (mul_even_odd (cdr list1)))\n          (mul_even_odd (cdr list1)))))\n",
    "  (cond\n    [(null? list1) 0]\n    [(null? (cdr list1)) 0]\n    [(even? (car list1)) (* (car list1) (car (cdr list1)))]\n    [(odd? (car list1)) (* (car list1) (car (cdr list1)))]\n    [else (mul_even_odd (cdr list1))]))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(even? (first list1)) (* (first list1) (mul_even_odd (rest list1)))]\n    [(odd? (first list1)) (* (first list1) (mul_even_odd (rest list1)))]\n    [else (mul_even_odd (rest list1))]))\n",
    "  (if (null? list1)\n      1\n      (if (even? (car list1))\n          (* (car list1) (mul_even_odd (cdr list1)))\n          (mul_even_odd (cdr list1)))))\n",
    "  (if (null? list1)\n      1\n      (if (even? (car list1))\n          (* (car list1) (mul_even_odd (cdr list1)))\n          (mul_even_odd (cdr list1)))))\n",
    "  (if (null? list1)\n      1\n      (if (even? (car list1))\n          (* (car list1) (mul_even_odd (cdr list1)))\n          (mul_even_odd (cdr list1)))))\n",
    "  (let ([evens (filter even? list1)]\n        [odds (filter odd? list1)])\n    (* (car evens) (car odds))))\n",
    "  (if (null? list1)\n      1\n      (if (even? (car list1))\n          (* (car list1) (mul_even_odd (cdr list1)))\n          (mul_even_odd (cdr list1)))))\n",
    "  (if (null? list1)\n      1\n      (if (even? (car list1))\n          (* (car list1) (mul_even_odd (cdr list1)))\n          (mul_even_odd (cdr list1)))))\n",
    "  (if (null? list1)\n      1\n      (if (even? (car list1))\n          (* (car list1) (mul_even_odd (cdr list1)))\n          (mul_even_odd (cdr list1)))))\n",
    "  (if (null? list1)\n      1\n      (* (car list1) (mul_even_odd (cdr list1)))))\n",
    "  (if (null? list1)\n      1\n      (if (even? (car list1))\n          (* (car list1) (mul_even_odd (cdr list1)))\n          (mul_even_odd (cdr list1)))))\n",
    "  (define (even_odd list1)\n    (cond\n      [(empty? list1) empty]\n      [(even? (car list1)) (cons (car list1) (even_odd (cdr list1)))]\n      [(odd? (car list1)) (cons (car list1) (even_odd (cdr list1)))]\n      [else (even_odd (cdr list1))]))\n  (define (mul_list list1)\n    (cond\n      [(empty? list1) 1]\n      [else (* (car list1) (mul_list (cdr list1)))]))\n  (mul_list (even_odd list1)))\n",
    "  (if (null? list1)\n      1\n      (if (even? (car list1))\n          (* (car list1) (mul_even_odd (cdr list1)))\n          (mul_even_odd (cdr list1)))))\n",
    "  (if (null? list1)\n      1\n      (if (even? (car list1))\n          (* (car list1) (mul_even_odd (cdr list1)))\n          (mul_even_odd (cdr list1)))))\n",
    "  (if (null? list1)\n      1\n      (if (even? (car list1))\n          (* (car list1) (mul_even_odd (cdr list1)))\n          (mul_even_odd (cdr list1)))))\n",
    "  (if (null? list1)\n      1\n      (* (car list1) (mul_even_odd (cdr list1)))))\n",
    "  (if (null? list1)\n      '()\n      (if (null? (cdr list1))\n          '()\n          (if (even? (car list1))\n              (* (car list1) (car (cdr list1)))\n              (mul_even_odd (cdr list1))))))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(even? (first list1)) (* (first list1) (mul_even_odd (rest list1)))]\n    [(odd? (first list1)) (* (first list1) (mul_even_odd (rest list1)))]\n    [else (mul_even_odd (rest list1))]))\n",
    "  (if (null? list1)\n      0\n      (if (even? (car list1))\n          (if (null? (cdr list1))\n              0\n              (* (car list1) (car (cdr list1))))\n          (mul_even_odd (cdr list1)))))\n",
    "  (if (null? list1)\n      1\n      (if (even? (car list1))\n          (* (car list1) (mul_even_odd (cdr list1)))\n          (mul_even_odd (cdr list1)))))\n",
    "  (if (null? list1)\n      1\n      (* (car list1) (mul_even_odd (cdr list1)))))\n",
    "  (if (null? list1)\n      0\n      (if (even? (car list1))\n          (* (car list1) (mul_even_odd (cdr list1)))\n          (mul_even_odd (cdr list1)))))\n",
    "  (if (null? list1)\n      1\n      (if (even? (car list1))\n          (* (car list1) (mul_even_odd (cdr list1)))\n          (mul_even_odd (cdr list1)))))\n",
    "  (if (null? list1)\n      1\n      (if (even? (car list1))\n          (* (car list1) (mul_even_odd (cdr list1)))\n          (mul_even_odd (cdr list1)))))\n",
    "  (if (null? list1)\n      1\n      (if (even? (car list1))\n          (* (car list1) (mul_even_odd (cdr list1)))\n          (mul_even_odd (cdr list1)))))\n",
    "  (if (null? list1)\n      1\n      (if (even? (car list1))\n          (* (car list1) (mul_even_odd (cdr list1)))\n          (mul_even_odd (cdr list1)))))\n",
    "  (if (null? list1)\n      1\n      (if (even? (car list1))\n          (* (car list1) (mul_even_odd (cdr list1)))\n          (mul_even_odd (cdr list1)))))\n",
    "  (if (null? list1)\n      1\n      (if (even? (car list1))\n          (* (car list1) (mul_even_odd (cdr list1)))\n          (mul_even_odd (cdr list1)))))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(even? (first list1)) (first list1) * (mul_even_odd (rest list1))]\n    [(odd? (first list1)) (first list1) * (mul_even_odd (rest list1))]\n    [else (mul_even_odd (rest list1))]))\n",
    "  (let ((even_num (find-even-num list1))\n        (odd_num (find-odd-num list1)))\n    (* even_num odd_num)))\n",
    "  (define (even_odd list1)\n    (if (null? list1)\n        '()\n        (cons (if (even? (car list1)) (car list1) (cadr list1))\n              (cons (if (odd? (car list1)) (car list1) (cadr list1))\n                    (even_odd (cddr list1))))))\n  (apply * (even_odd list1)))\n",
    "  (if (null? list1)\n      1\n      (* (car list1) (mul_even_odd (cdr list1)))))\n",
    "  (let ([evens (filter even? list1)]\n        [odds (filter odd? list1)])\n    (if (or (null? evens) (null? odds))\n        0\n        (* (car evens) (car odds)))))\n",
    "  (if (null? list1)\n      1\n      (if (even? (car list1))\n          (* (car list1) (mul_even_odd (cdr list1)))\n          (mul_even_odd (cdr list1)))))\n",
    "  (if (null? list1)\n      1\n      (if (even? (car list1))\n          (* (car list1) (mul_even_odd (cdr list1)))\n          (mul_even_odd (cdr list1)))))\n",
    "  (if (null? list1)\n      1\n      (if (even? (car list1))\n          (* (car list1) (mul_even_odd (cdr list1)))\n          (mul_even_odd (cdr list1)))))\n",
    "  (if (null? list1)\n      1\n      (if (even? (car list1))\n          (* (car list1) (mul_even_odd (cdr list1)))\n          (mul_even_odd (cdr list1)))))\n",
    "  (if (null? list1)\n      1\n      (* (car list1) (mul_even_odd (cdr list1)))))\n",
    "  (if (null? list1)\n      1\n      (if (even? (car list1))\n          (* (car list1) (mul_even_odd (cdr list1)))\n          (mul_even_odd (cdr list1)))))\n",
    "  (if (null? list1)\n      0\n      (if (even? (car list1))\n          (* (car list1) (mul_even_odd (cdr list1)))\n          (mul_even_odd (cdr list1)))))\n",
    "  (if (null? list1)\n      1\n      (if (even? (car list1))\n          (* (car list1) (mul_even_odd (cdr list1)))\n          (mul_even_odd (cdr list1)))))\n",
    "  (if (null? list1)\n      1\n      (if (even? (car list1))\n          (* (car list1) (mul_even_odd (cdr list1)))\n          (mul_even_odd (cdr list1)))))\n",
    "  (if (null? list1)\n      1\n      (if (even? (car list1))\n          (* (car list1) (mul_even_odd (cdr list1)))\n          (mul_even_odd (cdr list1)))))\n",
    "  (if (null? list1)\n      0\n      (if (even? (car list1))\n          (* (car list1) (mul_even_odd (cdr list1)))\n          (mul_even_odd (cdr list1)))))\n",
    "  (if (null? list1)\n      1\n      (if (even? (car list1))\n          (* (car list1) (mul_even_odd (cdr list1)))\n          (mul_even_odd (cdr list1)))))\n",
    "  (if (null? list1)\n      0\n      (if (even? (car list1))\n          (* (car list1) (mul_even_odd (cdr list1)))\n          (mul_even_odd (cdr list1)))))\n",
    "  (if (null? list1)\n      1\n      (if (even? (car list1))\n          (* (car list1) (mul_even_odd (cdr list1)))\n          (mul_even_odd (cdr list1)))))\n",
    "  (if (null? list1)\n      1\n      (if (even? (car list1))\n          (* (car list1) (mul_even_odd (cdr list1)))\n          (mul_even_odd (cdr list1)))))\n",
    "  (if (null? list1)\n      1\n      (if (even? (car list1))\n          (* (car list1) (mul_even_odd (cdr list1)))\n          (mul_even_odd (cdr list1)))))\n",
    "  (if (null? list1)\n      1\n      (* (car list1) (mul_even_odd (cdr list1)))))\n",
    "  (if (null? list1)\n      1\n      (if (even? (car list1))\n          (* (car list1) (mul_even_odd (cdr list1)))\n          (mul_even_odd (cdr list1)))))\n",
    "  (if (null? list1)\n      1\n      (* (car list1) (mul_even_odd (cdr list1)))))\n",
    "  (if (null? list1)\n      1\n      (if (even? (car list1))\n          (* (car list1) (mul_even_odd (cdr list1)))\n          (mul_even_odd (cdr list1)))))\n",
    "  (if (null? list1)\n      1\n      (if (even? (car list1))\n          (* (car list1) (mul_even_odd (cdr list1)))\n          (mul_even_odd (cdr list1)))))\n",
    "  (if (null? list1)\n      1\n      (if (even? (car list1))\n          (* (car list1) (mul_even_odd (cdr list1)))\n          (mul_even_odd (cdr list1)))))\n",
    "  (if (null? list1)\n      1\n      (* (car list1) (mul_even_odd (cdr list1)))))\n",
    "  (if (null? list1)\n      1\n      (if (even? (car list1))\n          (* (car list1) (mul_even_odd (cdr list1)))\n          (mul_even_odd (cdr list1)))))\n",
    "  (if (null? list1)\n      1\n      (if (even? (car list1))\n          (* (car list1) (mul_even_odd (cdr list1)))\n          (mul_even_odd (cdr list1)))))\n",
    "  (if (null? list1)\n      1\n      (if (even? (car list1))\n          (* (car list1) (mul_even_odd (cdr list1)))\n          (mul_even_odd (cdr list1)))))\n",
    "  (if (null? list1)\n      1\n      (* (car list1) (mul_even_odd (cdr list1)))))\n",
    "  (if (null? list1)\n      1\n      (if (even? (car list1))\n          (* (car list1) (mul_even_odd (cdr list1)))\n          (mul_even_odd (cdr list1)))))\n",
    "  (if (null? list1)\n      0\n      (if (even? (car list1))\n          (if (null? (cdr list1))\n              0\n              (* (car list1) (car (cdr list1))))\n          (mul_even_odd (cdr list1)))))\n",
    "  (let ([even (car list1)]\n        [odd (cadr list1)])\n    (* even odd)))\n",
    "  (if (null? list1)\n      1\n      (if (even? (car list1))\n          (* (car list1) (mul_even_odd (cdr list1)))\n          (mul_even_odd (cdr list1)))))\n",
    "  (if (null? list1)\n      1\n      (if (even? (car list1))\n          (* (car list1) (mul_even_odd (cdr list1)))\n          (mul_even_odd (cdr list1)))))\n",
    "  (if (null? list1)\n      1\n      (if (even? (car list1))\n          (* (car list1) (mul_even_odd (cdr list1)))\n          (mul_even_odd (cdr list1)))))\n",
    "  (if (null? list1)\n      1\n      (if (even? (car list1))\n          (* (car list1) (mul_even_odd (cdr list1)))\n          (mul_even_odd (cdr list1)))))\n",
    "  (if (null? list1)\n      1\n      (if (even? (car list1))\n          (* (car list1) (mul_even_odd (cdr list1)))\n          (mul_even_odd (cdr list1)))))\n",
    "  (if (null? list1)\n      1\n      (if (even? (car list1))\n          (* (car list1) (mul_even_odd (cdr list1)))\n          (mul_even_odd (cdr list1)))))\n",
    "  (if (null? list1)\n      1\n      (if (even? (car list1))\n          (* (car list1) (mul_even_odd (cdr list1)))\n          (mul_even_odd (cdr list1)))))\n",
    "  (if (null? list1)\n      1\n      (if (even? (car list1))\n          (* (car list1) (mul_even_odd (cdr list1)))\n          (mul_even_odd (cdr list1)))))\n",
    "  (if (null? list1)\n      1\n      (if (even? (car list1))\n          (* (car list1) (mul_even_odd (cdr list1)))\n          (mul_even_odd (cdr list1)))))\n",
    "  (if (null? list1)\n      1\n      (if (even? (car list1))\n          (* (car list1) (mul_even_odd (cdr list1)))\n          (mul_even_odd (cdr list1)))))\n",
    "  (if (null? list1)\n      1\n      (if (even? (car list1))\n          (* (car list1) (mul_even_odd (cdr list1)))\n          (mul_even_odd (cdr list1)))))\n",
    "  (if (null? list1)\n      0\n      (if (even? (car list1))\n          (* (car list1) (mul_even_odd (cdr list1)))\n          (mul_even_odd (cdr list1)))))\n",
    "  (if (null? list1)\n      1\n      (if (even? (car list1))\n          (* (car list1) (mul_even_odd (cdr list1)))\n          (mul_even_odd (cdr list1)))))\n",
    "  (if (null? list1)\n      1\n      (if (even? (car list1))\n          (* (car list1) (mul_even_odd (cdr list1)))\n          (mul_even_odd (cdr list1)))))\n",
    "  (if (null? list1)\n      1\n      (if (even? (car list1))\n          (* (car list1) (mul_even_odd (cdr list1)))\n          (mul_even_odd (cdr list1)))))\n",
    "  (if (null? list1)\n      1\n      (if (even? (car list1))\n          (* (car list1) (mul_even_odd (cdr list1)))\n          (mul_even_odd (cdr list1)))))\n",
    "  (let ([even (car list1)]\n        [odd (cadr list1)])\n    (* even odd)))\n",
    "  (if (null? list1)\n      1\n      (if (even? (car list1))\n          (* (car list1) (mul_even_odd (cdr list1)))\n          (* (car list1) (mul_even_odd (cdr list1))))))\n",
    "  (if (null? list1)\n      1\n      (if (even? (car list1))\n          (* (car list1) (mul_even_odd (cdr list1)))\n          (mul_even_odd (cdr list1)))))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(even? (car list1)) (* (car list1) (mul_even_odd (cdr list1)))]\n    [(odd? (car list1)) (* (car list1) (mul_even_odd (cdr list1)))]\n    [else (mul_even_odd (cdr list1))]))\n",
    "  (if (null? list1)\n      1\n      (* (car list1) (mul_even_odd (cdr list1)))))\n",
    "  (if (null? list1)\n      1\n      (if (even? (car list1))\n          (* (car list1) (mul_even_odd (cdr list1)))\n          (mul_even_odd (cdr list1)))))\n",
    "  (let loop ([list list1] [even #f] [odd #f])\n    (cond\n      [(null? list) (if (and even odd) (* even odd) #f)]\n      [(even? (car list)) (loop (cdr list) (car list) odd)]\n      [(odd? (car list)) (loop (cdr list) even (car list))]\n      [else (loop (cdr list) even odd)])))\n",
    "  (if (null? list1)\n      1\n      (if (even? (car list1))\n          (* (car list1) (mul_even_odd (cdr list1)))\n          (mul_even_odd (cdr list1)))))\n",
    "  (if (null? list1)\n      1\n      (if (even? (car list1))\n          (* (car list1) (mul_even_odd (cdr list1)))\n          (mul_even_odd (cdr list1)))))\n",
    "  (if (null? list1)\n      1\n      (* (car list1) (mul_even_odd (cdr list1)))))\n",
    "  (let ([even (car (filter even? list1))]\n        [odd (car (filter odd? list1))])\n    (* even odd)))\n",
    "  (if (null? list1)\n      1\n      (if (even? (car list1))\n          (* (car list1) (mul_even_odd (cdr list1)))\n          (mul_even_odd (cdr list1)))))\n",
    "  (cond\n    [(empty? list1) 0]\n    [(empty? (rest list1)) 0]\n    [else (* (first list1) (second list1))]))\n",
    "  (if (null? list1)\n      1\n      (if (even? (car list1))\n          (* (car list1) (mul_even_odd (cdr list1)))\n          (mul_even_odd (cdr list1)))))\n",
    "  (let ((even (first (filter even? list1)))\n        (odd (first (filter odd? list1))))\n    (* even odd)))\n",
    "  (let ([even (first (filter even? list1))]\n        [odd (first (filter odd? list1))])\n    (* even odd)))\n",
    "  (if (null? list1)\n      1\n      (if (even? (car list1))\n          (* (car list1) (mul_even_odd (cdr list1)))\n          (mul_even_odd (cdr list1)))))\n",
    "  (if (null? list1)\n      1\n      (if (even? (car list1))\n          (* (car list1) (mul_even_odd (cdr list1)))\n          (mul_even_odd (cdr list1)))))\n",
    "  (if (null? list1)\n      1\n      (if (even? (car list1))\n          (* (car list1) (mul_even_odd (cdr list1)))\n          (mul_even_odd (cdr list1)))))\n",
    "  (if (null? list1)\n      1\n      (if (even? (car list1))\n          (* (car list1) (mul_even_odd (cdr list1)))\n          (mul_even_odd (cdr list1)))))\n",
    "  (if (null? list1)\n      1\n      (* (car list1) (mul_even_odd (cdr list1)))))\n",
    "  (if (null? list1)\n      1\n      (if (even? (car list1))\n          (* (car list1) (mul_even_odd (cdr list1)))\n          (mul_even_odd (cdr list1)))))\n",
    "  (if (null? list1)\n      1\n      (if (even? (car list1))\n          (* (car list1) (mul_even_odd (cdr list1)))\n          (mul_even_odd (cdr list1)))))\n",
    "  (if (null? list1)\n      1\n      (* (car list1) (mul_even_odd (cdr list1)))))\n",
    "  (if (null? list1)\n      1\n      (* (car list1) (mul_even_odd (cdr list1)))))\n",
    "  (if (null? list1)\n      1\n      (if (even? (car list1))\n          (* (car list1) (mul_even_odd (cdr list1)))\n          (mul_even_odd (cdr list1)))))\n",
    "  (if (null? list1)\n      1\n      (* (car list1) (mul_even_odd (cdr list1)))))\n",
    "  (if (null? list1)\n      1\n      (if (even? (car list1))\n          (* (car list1) (mul_even_odd (cdr list1)))\n          (mul_even_odd (cdr list1)))))\n",
    "  (let loop ((list list1) (even #f) (odd #f))\n    (cond ((null? list) (* even odd))\n          ((even? (car list)) (loop (cdr list) (car list) odd))\n          ((odd? (car list)) (loop (cdr list) even (car list)))\n          (else (loop (cdr list) even odd)))))\n",
    "  (if (null? list1)\n      1\n      (if (even? (car list1))\n          (* (car list1) (mul_even_odd (cdr list1)))\n          (mul_even_odd (cdr list1)))))\n",
    "  (if (null? list1)\n      0\n      (if (even? (car list1))\n          (* (car list1) (mul_even_odd (cdr list1)))\n          (mul_even_odd (cdr list1)))))\n",
    "  (if (null? list1)\n      1\n      (* (car list1) (mul_even_odd (cdr list1)))))\n",
    "  (if (null? list1)\n      1\n      (if (even? (car list1))\n          (* (car list1) (mul_even_odd (cdr list1)))\n          (mul_even_odd (cdr list1)))))\n",
    "  (if (null? list1)\n      1\n      (if (even? (car list1))\n          (* (car list1) (mul_even_odd (cdr list1)))\n          (mul_even_odd (cdr list1)))))\n",
    "  (letrec ([even? (lambda (x) (and (not (zero? x)) (odd? (sub1 x))))]\n           [odd? (lambda (x) (not (even? x)))]\n           [even-odd (lambda (list1)\n                       (if (or (null? list1) (null? (cdr list1)))\n                           1\n                           (if (even? (car list1))\n                               (* (car list1) (even-odd (cdr list1)))\n                               (even-odd (cdr list1)))))]\n           [odd-even (lambda (list1)\n                       (if (or (null? list1) (null? (cdr list1)))\n                           1\n                           (if (odd? (car list1))\n                               (* (car list1) (odd-even (cdr list1)))\n                               (odd-even (cdr list1)))))]\n           [even-odd-mul (lambda (list1)\n                           (if (even? (car list1))\n                               (* (even-odd list1) (odd-even list1))\n                               (* (odd-even list1) (even-odd list1))))])\n    (even-odd-mul list1)))\n",
    "  (if (null? list1)\n      1\n      (if (even? (car list1))\n          (* (car list1) (mul_even_odd (cdr list1)))\n          (mul_even_odd (cdr list1)))))\n",
    "  (if (or (null? list1) (null? (cdr list1)))\n      1\n      (* (car list1) (car (cdr list1)))))\n",
    "  (if (null? list1)\n      1\n      (if (even? (car list1))\n          (* (car list1) (mul_even_odd (cdr list1)))\n          (mul_even_odd (cdr list1)))))\n",
    "  (if (null? list1)\n      1\n      (if (even? (car list1))\n          (* (car list1) (mul_even_odd (cdr list1)))\n          (mul_even_odd (cdr list1)))))\n",
    "  (if (null? list1)\n      1\n      (if (even? (car list1))\n          (* (car list1) (mul_even_odd (cdr list1)))\n          (mul_even_odd (cdr list1)))))\n",
    "  (if (null? list1)\n      1\n      (if (even? (car list1))\n          (* (car list1) (mul_even_odd (cdr list1)))\n          (mul_even_odd (cdr list1)))))\n",
    "  (if (null? list1)\n      1\n      (if (even? (car list1))\n          (* (car list1) (mul_even_odd (cdr list1)))\n          (mul_even_odd (cdr list1)))))\n",
    "  (if (null? list1)\n      1\n      (if (even? (car list1))\n          (* (car list1) (mul_even_odd (cdr list1)))\n          (mul_even_odd (cdr list1)))))\n",
    "  (if (null? list1)\n      1\n      (if (even? (car list1))\n          (* (car list1) (mul_even_odd (cdr list1)))\n          (mul_even_odd (cdr list1)))))\n",
    "  (if (null? list1)\n      1\n      (if (even? (car list1))\n          (* (car list1) (mul_even_odd (cdr list1)))\n          (mul_even_odd (cdr list1)))))\n",
    "  (if (null? list1)\n      1\n      (if (even? (car list1))\n          (* (car list1) (mul_even_odd (cdr list1)))\n          (mul_even_odd (cdr list1)))))\n",
    "  (if (null? list1)\n      1\n      (* (car list1) (mul_even_odd (cdr list1)))))\n",
    "  (if (null? list1)\n      1\n      (if (even? (car list1))\n          (* (car list1) (mul_even_odd (cdr list1)))\n          (mul_even_odd (cdr list1)))))\n",
    "  (if (null? list1)\n      1\n      (if (even? (car list1))\n          (* (car list1) (mul_even_odd (cdr list1)))\n          (mul_even_odd (cdr list1)))))\n",
    "  (if (null? list1)\n      0\n      (if (even? (car list1))\n          (* (car list1) (mul_even_odd (cdr list1)))\n          (* (car list1) (mul_even_odd (cdr list1))))))\n",
    "  (let ([even (car list1)]\n        [odd (cadr list1)])\n    (* even odd)))\n",
    "  (if (null? list1)\n      1\n      (if (and (even? (car list1)) (odd? (cadr list1)))\n          (* (car list1) (cadr list1))\n          (mul_even_odd (cdr list1)))))\n",
    "  (if (null? list1)\n      1\n      (* (car list1) (mul_even_odd (cdr list1)))))\n",
    "  (if (null? list1)\n      1\n      (if (even? (car list1))\n          (* (car list1) (mul_even_odd (cdr list1)))\n          (mul_even_odd (cdr list1)))))\n",
    "  (if (null? list1)\n      1\n      (if (even? (car list1))\n          (* (car list1) (mul_even_odd (cdr list1)))\n          (mul_even_odd (cdr list1)))))\n",
    "  (if (null? list1)\n      1\n      (if (even? (car list1))\n          (* (car list1) (mul_even_odd (cdr list1)))\n          (mul_even_odd (cdr list1)))))\n",
    "  (if (null? list1)\n      1\n      (if (even? (car list1))\n          (* (car list1) (mul_even_odd (cdr list1)))\n          (mul_even_odd (cdr list1)))))\n",
    "  (if (null? list1)\n      1\n      (if (even? (car list1))\n          (* (car list1) (mul_even_odd (cdr list1)))\n          (mul_even_odd (cdr list1)))))\n",
    "  (define (even_odd list1)\n    (cond ((null? list1) '())\n          ((and (even? (car list1)) (odd? (cadr list1)))\n           (cons (car list1) (cons (cadr list1) '())))\n          (else (even_odd (cdr list1)))))\n  (apply * (even_odd list1)))\n",
    "  (if (null? list1)\n      1\n      (if (even? (car list1))\n          (* (car list1) (mul_even_odd (cdr list1)))\n          (mul_even_odd (cdr list1)))))\n",
    "  (if (null? list1)\n      1\n      (* (car list1) (mul_even_odd (cdr list1)))))\n",
    "  (define (even_odd list1)\n    (if (null? list1)\n        (list 0 0)\n        (let ((first (car list1))\n              (rest (cdr list1)))\n          (if (even? first)\n              (list first (car (even_odd rest)))\n              (list (car (even_odd rest)) first)))))\n  (let ((even_odd_list (even_odd list1)))\n    (if (null? even_odd_list)\n        0\n        (* (car even_odd_list) (cadr even_odd_list)))))\n",
    "  (if (null? list1)\n      1\n      (if (even? (car list1))\n          (* (car list1) (mul_even_odd (cdr list1)))\n          (mul_even_odd (cdr list1)))))\n",
    "  (define (even_odd list1)\n    (cond ((null? list1) '())\n          ((and (even? (car list1)) (odd? (cadr list1))) (* (car list1) (cadr list1)))\n          (else (even_odd (cdr list1)))))\n  (even_odd list1))\n",
    "  (if (null? list1)\n      1\n      (if (even? (car list1))\n          (* (car list1) (mul_even_odd (cdr list1)))\n          (if (odd? (car list1))\n              (* (car list1) (mul_even_odd (cdr list1)))\n              (mul_even_odd (cdr list1))))))\n",
    "  (if (null? list1)\n      1\n      (* (car list1) (mul_even_odd (cdr list1)))))\n",
    "  (if (null? list1)\n      1\n      (if (even? (car list1))\n          (* (car list1) (mul_even_odd (cdr list1)))\n          (mul_even_odd (cdr list1)))))\n"
  ]
}
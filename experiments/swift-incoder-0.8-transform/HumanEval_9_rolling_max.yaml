name: HumanEval_9_rolling_max
language: swift
prompt: "\n/// From a given list of integers, generate a list of rolling maximum element\
  \ found until given moment\n/// in the sequence.\n/// >>> rolling_max(numbers: [1,\
  \ 2, 3, 2, 3, 4, 2])\n/// [1, 2, 3, 3, 3, 4, 4]\nfunc rolling_max(numbers: [Int])\
  \ -> [Int] {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(rolling_max(numbers: [] as [Int]) == []\
  \ as [Int])\nassert(rolling_max(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(rolling_max(numbers:\
  \ [4, 3, 2, 1]) == [4, 4, 4, 4])\nassert(rolling_max(numbers: [3, 2, 3, 100, 3])\
  \ == [3, 3, 3, 100, 100])"
completions: []
stop_tokens:
- "\n}"

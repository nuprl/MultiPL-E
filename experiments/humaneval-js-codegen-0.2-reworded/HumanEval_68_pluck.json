{
  "name": "HumanEval_68_pluck",
  "language": "js",
  "prompt": "//\"Given an array representing a branch of a tree that has non-negative integer nodes\n// your task is to pluck one of the nodes and return it.\n// The plucked node should be the node with the smallest even value.\n// If multiple nodes with the same smallest even value are found return the node that has smallest index.\n// The plucked node should be returned in an array, [ smalest_value, its index ],\n// If there are no even values or the given array is empty, return [].\n// Example 1:\n// >>> pluck([4, 2, 3])\n// [2, 1]\n// Explanation: 2 has the smallest even value, and 2 has the smallest index.\n// Example 2:\n// >>> pluck([1, 2, 3])\n// [2, 1]\n// Explanation: 2 has the smallest even value, and 2 has the smallest index.\n// Example 3:\n// >>> pluck([])\n// []\n// Example 4:\n// >>> pluck([5, 0, 3, 0, 4, 2])\n// [0, 1]\n// Explanation: 0 is the smallest value, but  there are two zeros,\n// so we will choose the first zero, which has the smallest index.\n// Constraints:\n// * 1 <= nodes.length <= 10000\n// * 0 <= node.value\nfunction pluck(arr){\n",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pluck;\n  assert.deepEqual(candidate([4, 2, 3]),[2, 1]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 1]);\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([5, 0, 3, 0, 4, 2]),[0, 1]);\n  assert.deepEqual(candidate([1, 2, 3, 0, 5, 3]),[0, 3]);\n  assert.deepEqual(candidate([5, 4, 8, 4, 8]),[4, 1]);\n  assert.deepEqual(candidate([7, 6, 7, 1]),[6, 1]);\n  assert.deepEqual(candidate([7, 9, 7, 1]),[]);\n}\n\ntest();",
  "completions": [
    "    let res = [];\n    let min_even = Number.MAX_VALUE;\n    let min_index = 0;\n    for(let i = 0; i < arr.length; i++){\n        if(arr[i] % 2 === 0 && arr[i] < min_even){\n            min_even = arr[i];\n            min_index = i;\n        }\n    }\n    res.push(min_even);\n    res.push(min_index);\n    return res;\n}\n",
    "    let min_even = arr.reduce((a, b) => a + b) % 2 === 0 ? a : b;\n    let min_index = arr.reduce((a, b) => a + b) % 2 === 0 ? a : b;\n    let result = [];\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] === min_even) {\n            result = [min_even, min_index];\n            break;\n        }\n    }\n    return result;\n}\n",
    "  let result = [];\n  let min = arr[0];\n  let minIndex = 0;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0) {\n      if (arr[i] < min) {\n        min = arr[i];\n        minIndex = i;\n      }\n    }\n  }\n  result.push(min);\n  result.push(minIndex);\n  return result;\n}\n",
    "    let smallest_even_value = arr[0];\n    let smallest_index = 0;\n    let i = 0;\n    while(i < arr.length){\n        if(arr[i] % 2 === 0){\n            if(arr[i] < smallest_even_value){\n                smallest_even_value = arr[i];\n                smallest_index = i;\n            }\n        }\n        i++;\n    }\n    return [smallest_even_value, smallest_index];\n}\n",
    "    let result = [];\n    let min_even = Number.MAX_SAFE_INTEGER;\n    let min_index = 0;\n    let i = 0;\n    for(let node of arr){\n        if(node % 2 === 0 && node < min_even){\n            min_even = node;\n            min_index = i;\n        }\n        i++;\n    }\n    if(min_even === Number.MAX_SAFE_INTEGER){\n        return [];\n    }\n    result.push(min_even);\n    result.push(min_index);\n    return result;\n}\n",
    "    let result = [];\n    let minEven = Number.MAX_VALUE;\n    let minIndex = -1;\n    let i = 0;\n    for(let node of arr){\n        if(node % 2 === 0 && node < minEven){\n            minEven = node;\n            minIndex = i;\n        }\n        i++;\n    }\n    if(minIndex !== -1){\n        result = [minEven, minIndex];\n    }\n    return result;\n}\n",
    "    var min_even = arr.reduce(function(a, b){\n        if(a % 2 == 0 && b % 2 == 0){\n            return Math.min(a, b);\n        }\n        return Math.min(a, b);\n    });\n    var min_index = arr.reduce(function(a, b){\n        if(a % 2 == 0 && b % 2 == 0){\n            return Math.min(a, b);\n        }\n        return Math.min(a, b);\n    });\n    if(min_even == Infinity || min_index == Infinity){\n        return [];\n    }\n    return [min_even, min_index];\n}\n",
    "  let min_even = arr.reduce((a, b) => a + b) % 2 === 0 ? a : b\n  let min_index = arr.reduce((a, b) => a < b ? a : b)\n  return [min_even, min_index]\n}\n",
    "    let smallest_even_value = arr[0];\n    let smallest_index = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] % 2 === 0 && arr[i] < smallest_even_value) {\n            smallest_even_value = arr[i];\n            smallest_index = i;\n        }\n    }\n    return [smallest_even_value, smallest_index];\n}\n",
    "    let smallest_even_value = 0;\n    let smallest_index = 0;\n    let result = [];\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] % 2 === 0) {\n            if (arr[i] < smallest_even_value) {\n                smallest_even_value = arr[i];\n                smallest_index = i;\n            }\n        }\n    }\n    if (smallest_even_value === 0) {\n        result = [];\n    } else {\n        result = [smallest_even_value, smallest_index];\n    }\n    return result;\n}\n",
    "  let smallest_even = arr.reduce((prev, curr) => {\n    if (curr % 2 === 0) {\n      return curr;\n    }\n    return prev;\n  });\n  let index = arr.indexOf(smallest_even);\n  return [smallest_even, index];\n}\n",
    "    let smallest_even_value = arr[0];\n    let smallest_index = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] % 2 === 0) {\n            if (arr[i] < smallest_even_value) {\n                smallest_even_value = arr[i];\n                smallest_index = i;\n            }\n        }\n    }\n    return [smallest_even_value, smallest_index];\n}\n",
    "    let smallest_even = arr[0]\n    let smallest_index = 0\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] % 2 === 0) {\n            if (arr[i] < smallest_even) {\n                smallest_even = arr[i]\n                smallest_index = i\n            }\n        }\n    }\n    return [smallest_even, smallest_index]\n}\n",
    "    let smallest_even_value = arr[0];\n    let smallest_index = 0;\n    let index = 0;\n    for(let i = 0; i < arr.length; i++){\n        if(arr[i] % 2 === 0){\n            if(arr[i] < smallest_even_value){\n                smallest_even_value = arr[i];\n                smallest_index = i;\n            }\n        }\n    }\n    return [smallest_even_value, smallest_index];\n}\n",
    "    let min_even = arr[0]\n    let min_index = 0\n    let result = []\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] % 2 === 0) {\n            if (arr[i] < min_even) {\n                min_even = arr[i]\n                min_index = i\n            }\n        }\n    }\n    result.push(min_even)\n    result.push(min_index)\n    return result\n}\n",
    "    let result = [];\n    let min_even = Infinity;\n    let min_index = -1;\n    for(let i = 0; i < arr.length; i++){\n        if(arr[i] % 2 === 0){\n            if(arr[i] < min_even){\n                min_even = arr[i];\n                min_index = i;\n            }\n        }\n    }\n    if(min_index !== -1){\n        result = [min_even, min_index];\n    }\n    return result;\n}\n",
    "  let smallest_even_value = arr.reduce((prev, curr) => {\n    if (curr % 2 === 0) {\n      return curr\n    }\n    return prev\n  })\n  let smallest_index = arr.reduce((prev, curr) => {\n    if (curr % 2 === 0) {\n      return prev\n    }\n    return curr\n  })\n  let result = [smallest_even_value, smallest_index]\n  return result\n}\n",
    "  let min_even = arr.reduce((acc, curr) => {\n    if (curr % 2 === 0) {\n      return Math.min(acc, curr)\n    }\n    return acc\n  }, Number.MAX_SAFE_INTEGER)\n  let min_index = arr.reduce((acc, curr) => {\n    if (curr % 2 === 0) {\n      return Math.min(acc, curr)\n    }\n    return acc\n  }, Number.MAX_SAFE_INTEGER)\n  let result = []\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] === min_even) {\n      result = [min_even, i]\n      break\n    }\n  }\n  return result\n}\n",
    "  let smallest_even_value = arr[0]\n  let smallest_index = 0\n  let i = 0\n  while(i < arr.length){\n    if(arr[i] % 2 === 0){\n      if(arr[i] < smallest_even_value){\n        smallest_even_value = arr[i]\n        smallest_index = i\n      }\n    }\n    i += 1\n  }\n  return [smallest_even_value, smallest_index]\n}\n",
    "    let min_even = Number.MAX_VALUE;\n    let min_index = -1;\n    let result = [];\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] % 2 === 0) {\n            if (arr[i] < min_even) {\n                min_even = arr[i];\n                min_index = i;\n            }\n        }\n    }\n    if (min_index !== -1) {\n        result = [min_even, min_index];\n    }\n    return result;\n}\n",
    "  let min_even = arr.reduce((a, b) => a + b) % 2 === 0 ? a : b\n  let min_index = arr.reduce((a, b) => a < b ? a : b)\n  return [min_even, min_index]\n}\n",
    "  let smallest_even_value = arr[0];\n  let smallest_index = 0;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0 && arr[i] < smallest_even_value) {\n      smallest_even_value = arr[i];\n      smallest_index = i;\n    }\n  }\n  return [smallest_even_value, smallest_index];\n}\n",
    "    let result = [];\n    let min = arr[0];\n    let min_index = 0;\n    for(let i = 0; i < arr.length; i++){\n        if(arr[i] % 2 === 0){\n            if(arr[i] < min){\n                min = arr[i];\n                min_index = i;\n            }\n        }\n    }\n    result.push(min);\n    result.push(min_index);\n    return result;\n}\n",
    "    let res = [];\n    let min = arr[0];\n    let min_index = 0;\n    for(let i = 0; i < arr.length; i++){\n        if(arr[i] < min){\n            min = arr[i];\n            min_index = i;\n        }\n    }\n    res.push(min);\n    res.push(min_index);\n    return res;\n}\n",
    "    let smallest_even = arr[0];\n    let smallest_index = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] % 2 === 0 && arr[i] < smallest_even) {\n            smallest_even = arr[i];\n            smallest_index = i;\n        }\n    }\n    return [smallest_even, smallest_index];\n}\n",
    "    let smallest_even_value = arr[0];\n    let smallest_index = 0;\n    for(let i = 1; i < arr.length; i++){\n        if(arr[i] % 2 === 0 && arr[i] < smallest_even_value){\n            smallest_even_value = arr[i];\n            smallest_index = i;\n        }\n    }\n    return [smallest_even_value, smallest_index];\n}\n",
    "  let smallest_even_value = arr.reduce((a, b) => a + b)\n  let smallest_index = arr.reduce((a, b) => a + b)\n  let result = []\n  arr.forEach(node => {\n    if (node % 2 === 0) {\n      if (node < smallest_even_value) {\n        smallest_even_value = node\n        smallest_index = node\n      }\n    }\n  })\n  if (smallest_even_value === 0) {\n    result = []\n  } else {\n    result = [smallest_even_value, smallest_index]\n  }\n  return result\n}\n",
    "    let min = arr[0];\n    let minIndex = 0;\n    for(let i = 1; i < arr.length; i++){\n        if(arr[i] < min){\n            min = arr[i];\n            minIndex = i;\n        }\n    }\n    return [min, minIndex];\n}\n",
    "  let result = [];\n  let min_even = Infinity;\n  let min_index = -1;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0 && arr[i] < min_even) {\n      min_even = arr[i];\n      min_index = i;\n    }\n  }\n  if (min_index !== -1) {\n    result = [min_even, min_index];\n  }\n  return result;\n}\n",
    "  let smallest_value = arr[0];\n  let smallest_index = 0;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] < smallest_value) {\n      smallest_value = arr[i];\n      smallest_index = i;\n    }\n  }\n  let result = [smallest_value, smallest_index];\n  return result;\n}\n",
    "    let res = [];\n    let min_even = Infinity;\n    let min_index = -1;\n    for(let i = 0; i < arr.length; i++){\n        if(arr[i] % 2 === 0 && arr[i] < min_even){\n            min_even = arr[i];\n            min_index = i;\n        }\n    }\n    if(min_even === Infinity){\n        return [];\n    }\n    res.push(min_even);\n    res.push(min_index);\n    return res;\n}\n",
    "    let smallest_even_value = arr[0];\n    let smallest_index = 0;\n    for(let i = 0; i < arr.length; i++){\n        if(arr[i] % 2 === 0){\n            if(arr[i] < smallest_even_value){\n                smallest_even_value = arr[i];\n                smallest_index = i;\n            }\n        }\n    }\n    return [smallest_even_value, smallest_index];\n}\n",
    "  let min_even_value = arr[0]\n  let min_index = 0\n  let result = []\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0) {\n      if (arr[i] < min_even_value) {\n        min_even_value = arr[i]\n        min_index = i\n      }\n    }\n  }\n  result = [min_even_value, min_index]\n  return result\n}\n",
    "    let min_even = arr[0];\n    let min_index = 0;\n    let result = [];\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] % 2 === 0) {\n            if (arr[i] < min_even) {\n                min_even = arr[i];\n                min_index = i;\n            }\n        }\n    }\n    result.push(min_even);\n    result.push(min_index);\n    return result;\n}\n",
    "  let smallest_even_value = arr[0];\n  let smallest_index = 0;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0) {\n      if (arr[i] < smallest_even_value) {\n        smallest_even_value = arr[i];\n        smallest_index = i;\n      }\n    }\n  }\n  return [smallest_even_value, smallest_index];\n}\n",
    "    let smallest_even_value = arr[0];\n    let smallest_index = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] % 2 === 0 && arr[i] < smallest_even_value) {\n            smallest_even_value = arr[i];\n            smallest_index = i;\n        }\n    }\n    return [smallest_even_value, smallest_index];\n}\n",
    "    let min_even = arr.reduce((a, b) => {\n        if (a === null) {\n            return b\n        }\n        if (b === null) {\n            return a\n        }\n        if (a === 0 && b === 0) {\n            return 0\n        }\n        if (a % 2 === 0 && b % 2 === 0) {\n            return Math.min(a, b)\n        }\n        return Math.min(a, b)\n    })\n    let min_index = arr.reduce((a, b) => {\n        if (a === null) {\n            return b\n        }\n        if (b === null) {\n            return a\n        }\n        if (a === 0 && b === 0) {\n            return 0\n        }\n        if (a % 2 === 0 && b % 2 === 0) {\n            return Math.min(a, b)\n        }\n        return Math.min(a, b)\n    })\n    if (min_even === null) {\n        return []\n    }\n    return [min_even, min_index]\n}\n",
    "  let smallest_even_value = arr[0];\n  let smallest_index = 0;\n  let even_values = [];\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0) {\n      even_values.push([arr[i], i]);\n      if (arr[i] < smallest_even_value) {\n        smallest_even_value = arr[i];\n        smallest_index = i;\n      }\n    }\n  }\n  if (even_values.length === 0) {\n    return [];\n  }\n  return [smallest_even_value, smallest_index];\n}\n",
    "    let min_even = arr[0];\n    let min_index = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] % 2 === 0 && arr[i] < min_even) {\n            min_even = arr[i];\n            min_index = i;\n        }\n    }\n    return [min_even, min_index];\n}\n",
    "  let min_even = arr.reduce((prev, curr) => {\n    if (prev === null) {\n      return curr\n    }\n    if (curr % 2 === 0) {\n      return curr\n    }\n    return prev\n  })\n  let min_index = arr.reduce((prev, curr) => {\n    if (prev === null) {\n      return curr\n    }\n    if (curr % 2 === 0) {\n      return curr\n    }\n    return prev\n  })\n  let result = []\n  if (min_even !== null) {\n    result.push(min_even)\n    result.push(min_index)\n  }\n  return result\n}\n",
    "    let smallest_even_value = arr[0];\n    let smallest_index = 0;\n    for(let i = 0; i < arr.length; i++){\n        if(arr[i] % 2 === 0 && arr[i] < smallest_even_value){\n            smallest_even_value = arr[i];\n            smallest_index = i;\n        }\n    }\n    return [smallest_even_value, smallest_index];\n}\n",
    "    let result = [];\n    let min_even = Number.MAX_SAFE_INTEGER;\n    let min_index = -1;\n    for(let i = 0; i < arr.length; i++){\n        if(arr[i] % 2 === 0 && arr[i] < min_even){\n            min_even = arr[i];\n            min_index = i;\n        }\n    }\n    if(min_even === Number.MAX_SAFE_INTEGER){\n        return [];\n    }\n    result.push(min_even);\n    result.push(min_index);\n    return result;\n}\n",
    "    let res = [];\n    let min_even = arr.reduce((a, b) => a + b);\n    let min_index = arr.reduce((a, b) => a + b);\n    for(let i = 0; i < arr.length; i++){\n        if(arr[i] % 2 === 0 && arr[i] < min_even){\n            min_even = arr[i];\n            min_index = i;\n        }\n    }\n    res.push(min_even);\n    res.push(min_index);\n    return res;\n}\n",
    "  let smallest_even_value = arr.reduce((a, b) => a + b) % 2 === 0 ? a : b\n  let index = arr.reduce((a, b) => a < b ? a : b)\n  return [smallest_even_value, index]\n}\n",
    "    let smallest_even_value = arr[0];\n    let smallest_index = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] % 2 === 0 && arr[i] < smallest_even_value) {\n            smallest_even_value = arr[i];\n            smallest_index = i;\n        }\n    }\n    return [smallest_even_value, smallest_index];\n}\n",
    "    let res = [];\n    let min = arr[0];\n    let min_index = 0;\n    for(let i = 0; i < arr.length; i++){\n        if(arr[i] % 2 === 0 && arr[i] < min){\n            min = arr[i];\n            min_index = i;\n        }\n    }\n    res.push(min);\n    res.push(min_index);\n    return res;\n}\n",
    "    let res = [];\n    let min_even = Infinity;\n    let min_index = -1;\n    for(let i = 0; i < arr.length; i++){\n        if(arr[i] % 2 === 0){\n            if(arr[i] < min_even){\n                min_even = arr[i];\n                min_index = i;\n            }\n        }\n    }\n    if(min_index !== -1){\n        res.push(min_even, min_index);\n    }\n    return res;\n}\n",
    "  var res = [];\n  var min = arr[0];\n  var min_index = 0;\n  for (var i = 0; i < arr.length; i++) {\n    if (arr[i] < min) {\n      min = arr[i];\n      min_index = i;\n    }\n  }\n  res.push(min);\n  res.push(min_index);\n  return res;\n}\n",
    "    let result = [];\n    let min = arr[0];\n    let minIndex = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] % 2 === 0 && arr[i] < min) {\n            min = arr[i];\n            minIndex = i;\n        }\n    }\n    result.push(min);\n    result.push(minIndex);\n    return result;\n}\n",
    "    let result = [];\n    let min = arr[0];\n    let minIndex = 0;\n    for(let i = 0; i < arr.length; i++){\n        if(arr[i] % 2 === 0){\n            if(arr[i] < min){\n                min = arr[i];\n                minIndex = i;\n            }\n        }\n    }\n    result.push(min);\n    result.push(minIndex);\n    return result;\n}\n",
    "  let smallest_even_value = arr[0];\n  let smallest_index = 0;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0 && arr[i] < smallest_even_value) {\n      smallest_even_value = arr[i];\n      smallest_index = i;\n    }\n  }\n  return [smallest_even_value, smallest_index];\n}\n",
    "  let min_even = Infinity;\n  let min_index = -1;\n  let result = [];\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0 && arr[i] < min_even) {\n      min_even = arr[i];\n      min_index = i;\n    }\n  }\n  if (min_index !== -1) {\n    result.push(min_index);\n    result.push(min_even);\n  }\n  return result;\n}\n",
    "  let min = arr[0]\n  let min_index = 0\n  let result = []\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0 && arr[i] < min) {\n      min = arr[i]\n      min_index = i\n    }\n  }\n  result = [min, min_index]\n  return result\n}\n",
    "    let min_even = arr[0];\n    let min_index = 0;\n    for (let i = 1; i < arr.length; i++) {\n        if (arr[i] % 2 === 0 && arr[i] < min_even) {\n            min_even = arr[i];\n            min_index = i;\n        }\n    }\n    return [min_even, min_index];\n}\n",
    "  let smallest_even = arr.reduce((a, b) => {\n    if (a === undefined) {\n      return b\n    }\n    if (b === undefined) {\n      return a\n    }\n    if (a % 2 === 0 && b % 2 === 0) {\n      return Math.min(a, b)\n    }\n    return Math.max(a, b)\n  })\n  let smallest_even_index = arr.reduce((a, b) => {\n    if (a === undefined) {\n      return b\n    }\n    if (b === undefined) {\n      return a\n    }\n    if (a % 2 === 0 && b % 2 === 0) {\n      return Math.min(a, b)\n    }\n    return Math.max(a, b)\n  })\n  let smallest_even_index_index = arr.reduce((a, b) => {\n    if (a === undefined) {\n      return b\n    }\n    if (b === undefined) {\n      return a\n    }\n    if (a % 2 === 0 && b % 2 === 0) {\n      return Math.min(a, b)\n    }\n    return Math.max(a, b)\n  })\n  if (smallest_even === undefined) {\n    return []\n  }\n  return [smallest_even, smallest_even_index, smallest_even_index_index]\n}\n",
    "    let min_even = arr.reduce((a, b) => a + b) % 2 === 0 ? a : b;\n    let min_index = arr.reduce((a, b) => a < b ? a : b);\n    return [min_even, min_index];\n}\n",
    "    let smallest_even_value = arr[0];\n    let smallest_index = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] % 2 === 0 && arr[i] < smallest_even_value) {\n            smallest_even_value = arr[i];\n            smallest_index = i;\n        }\n    }\n    return [smallest_even_value, smallest_index];\n}\n",
    "  let result = [];\n  let min_even = Number.MAX_SAFE_INTEGER;\n  let min_index = 0;\n  let i = 0;\n  while (i < arr.length) {\n    let node = arr[i];\n    if (node % 2 === 0) {\n      if (node < min_even) {\n        min_even = node;\n        min_index = i;\n      }\n    }\n    i++;\n  }\n  if (min_even === Number.MAX_SAFE_INTEGER) {\n    return [];\n  }\n  result.push(min_even, min_index);\n  return result;\n}\n",
    "    let result = [];\n    let min = arr[0];\n    let index = 0;\n    for(let i = 0; i < arr.length; i++){\n        if(arr[i] % 2 === 0 && arr[i] < min){\n            min = arr[i];\n            index = i;\n        }\n    }\n    result.push(min);\n    result.push(index);\n    return result;\n}\n",
    "    let smallest_even_value = arr[0];\n    let smallest_index = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] % 2 === 0) {\n            if (arr[i] < smallest_even_value) {\n                smallest_even_value = arr[i];\n                smallest_index = i;\n            }\n        }\n    }\n    return [smallest_even_value, smallest_index];\n}\n",
    "  let smallest_even_value = arr[0];\n  let smallest_index = 0;\n  let even_values = [];\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0) {\n      even_values.push([arr[i], i]);\n    }\n    if (arr[i] < smallest_even_value) {\n      smallest_even_value = arr[i];\n      smallest_index = i;\n    }\n  }\n  if (even_values.length === 0) {\n    return [];\n  }\n  return [smallest_even_value, smallest_index];\n}\n",
    "    let result = [];\n    let min_even = arr[0];\n    let min_index = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] % 2 === 0) {\n            if (arr[i] < min_even) {\n                min_even = arr[i];\n                min_index = i;\n            }\n        }\n    }\n    result.push(min_even);\n    result.push(min_index);\n    return result;\n}\n",
    "    let smallest_value = arr[0];\n    let smallest_index = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] < smallest_value) {\n            smallest_value = arr[i];\n            smallest_index = i;\n        }\n    }\n    return [smallest_value, smallest_index];\n}\n",
    "  let smallest_even_value = arr.reduce((a, b) => a + b)\n  let smallest_index = arr.reduce((a, b) => a + b)\n  let result = []\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0 && arr[i] < smallest_even_value) {\n      smallest_even_value = arr[i]\n      smallest_index = i\n      result = [arr[i], i]\n    }\n  }\n  return result\n}\n",
    "  let min_even = Infinity;\n  let min_index = 0;\n  let result = [];\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0) {\n      if (arr[i] < min_even) {\n        min_even = arr[i];\n        min_index = i;\n      }\n    }\n  }\n  if (min_even === Infinity) {\n    return [];\n  }\n  result.push(min_even);\n  result.push(min_index);\n  return result;\n}\n",
    "  let min_even = arr.reduce((prev, curr) => {\n    if (prev === null) {\n      return curr\n    }\n    return prev < curr ? prev : curr\n  })\n  let min_index = arr.indexOf(min_even)\n  let result = []\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] === min_even) {\n      result = [min_even, min_index]\n      break\n    }\n  }\n  return result\n}\n",
    "    let result = [];\n    let min_index = 0;\n    let min_value = arr[0];\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] % 2 === 0) {\n            if (arr[i] < min_value) {\n                min_value = arr[i];\n                min_index = i;\n            }\n        }\n    }\n    result.push(min_value);\n    result.push(min_index);\n    return result;\n}\n",
    "  let smallest_even_value = arr.reduce((prev, curr) => {\n    if (curr % 2 === 0) {\n      return curr\n    } else {\n      return prev\n    }\n  })\n  let index = arr.reduce((prev, curr) => {\n    if (curr === smallest_even_value) {\n      return prev\n    } else {\n      return prev + 1\n    }\n  })\n  return [smallest_even_value, index]\n}\n",
    "  let min_even = arr.reduce((a, b) => a + b) % 2 === 0 ? a : b\n  let min_index = arr.reduce((a, b) => a < b ? a : b)\n  return [min_even, min_index]\n}\n",
    "  let min = arr[0]\n  let min_index = 0\n  let min_even = 0\n  let min_even_index = 0\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0) {\n      if (arr[i] < min) {\n        min = arr[i]\n        min_index = i\n        min_even = arr[i]\n        min_even_index = i\n      }\n    }\n  }\n  if (min_even === 0) {\n    return []\n  }\n  return [min_even, min_even_index]\n}\n",
    "    let min_even = arr[0]\n    let min_index = 0\n    let res = []\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] % 2 === 0) {\n            if (arr[i] < min_even) {\n                min_even = arr[i]\n                min_index = i\n            }\n        }\n    }\n    if (min_even === arr[0]) {\n        res = [min_even, min_index]\n    }\n    return res\n}\n",
    "  let result = [];\n  let min_even = Infinity;\n  let min_index = -1;\n  for(let i = 0; i < arr.length; i++){\n    if(arr[i] % 2 === 0 && arr[i] < min_even){\n      min_even = arr[i];\n      min_index = i;\n    }\n  }\n  if(min_even === Infinity){\n    return [];\n  }\n  result.push(min_even);\n  result.push(min_index);\n  return result;\n}\n",
    "    var result = [];\n    var min_even = Number.MAX_VALUE;\n    var min_index = 0;\n    for(var i = 0; i < arr.length; i++){\n        if(arr[i] % 2 === 0 && arr[i] < min_even){\n            min_even = arr[i];\n            min_index = i;\n        }\n    }\n    result.push(min_even);\n    result.push(min_index);\n    return result;\n}\n",
    "  let smallest_even_value = arr[0];\n  let smallest_index = 0;\n  let result = [];\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0) {\n      if (arr[i] < smallest_even_value) {\n        smallest_even_value = arr[i];\n        smallest_index = i;\n      }\n    }\n  }\n  result.push(smallest_even_value);\n  result.push(smallest_index);\n  return result;\n}\n",
    "    let min_even = Number.MAX_VALUE;\n    let min_index = -1;\n    let res = [];\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] % 2 === 0 && arr[i] < min_even) {\n            min_even = arr[i];\n            min_index = i;\n        }\n    }\n    if (min_index === -1) {\n        return [];\n    }\n    res.push(min_even);\n    res.push(min_index);\n    return res;\n}\n",
    "    let res = [];\n    let min = arr[0];\n    let min_index = 0;\n    for(let i = 0; i < arr.length; i++){\n        if(arr[i] % 2 === 0){\n            if(arr[i] < min){\n                min = arr[i];\n                min_index = i;\n            }\n        }\n    }\n    res.push(min);\n    res.push(min_index);\n    return res;\n}\n",
    "  var result = [];\n  var min = arr[0];\n  var minIndex = 0;\n  for(var i = 0; i < arr.length; i++){\n    if(arr[i] % 2 === 0 && arr[i] < min){\n      min = arr[i];\n      minIndex = i;\n    }\n  }\n  result.push(min);\n  result.push(minIndex);\n  return result;\n}\n",
    "    let min_even = arr.reduce((a, b) => a + b) % 2 === 0 ? a : b;\n    let min_index = arr.reduce((a, b) => a + b) % 2 === 0 ? a : b;\n    let result = [];\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] === min_even) {\n            result = [min_even, min_index];\n            break;\n        }\n    }\n    return result;\n}\n",
    "  let result = [];\n  let min = arr[0];\n  let minIndex = 0;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] < min) {\n      min = arr[i];\n      minIndex = i;\n    }\n  }\n  result.push(min);\n  result.push(minIndex);\n  return result;\n}\n",
    "  let smallest_even_value = arr[0];\n  let smallest_index = 0;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0 && arr[i] < smallest_even_value) {\n      smallest_even_value = arr[i];\n      smallest_index = i;\n    }\n  }\n  return [smallest_even_value, smallest_index];\n}\n",
    "  let smallest_even = arr.reduce((a, b) => a + b) % 2 === 0 ? a : b\n  let smallest_index = arr.reduce((a, b) => a + b) % 2 === 0 ? a : b\n  let result = []\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] === smallest_even) {\n      result = [arr[i], i]\n      break\n    }\n  }\n  return result\n}\n",
    "  let min_even = arr.reduce((a, b) => a + b) % 2 === 0 ? a : b;\n  let min_index = arr.reduce((a, b) => a < b ? a : b);\n  let result = arr.filter(n => n === min_even || n === min_index);\n  return result.length === 0 ? [] : [min_even, min_index];\n}\n",
    "    let min_even = arr.reduce((a, b) => a + b) % 2;\n    let min_index = arr.reduce((a, b) => a + b) % 2 === 0 ? arr.indexOf(b) : arr.indexOf(a);\n    return [min_even, min_index];\n}\n",
    "    let res = [];\n    let minEven = Infinity;\n    let minIndex = -1;\n    for(let i = 0; i < arr.length; i++){\n        if(arr[i] % 2 === 0){\n            if(arr[i] < minEven){\n                minEven = arr[i];\n                minIndex = i;\n            }\n        }\n    }\n    if(minEven === Infinity){\n        return [];\n    }\n    res.push(minEven);\n    res.push(minIndex);\n    return res;\n}\n",
    "  let smallest_even_value = arr[0];\n  let smallest_index = 0;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0) {\n      if (arr[i] < smallest_even_value) {\n        smallest_even_value = arr[i];\n        smallest_index = i;\n      }\n    }\n  }\n  return [smallest_even_value, smallest_index];\n}\n",
    "  var result = [];\n  var min = Infinity;\n  var index = 0;\n  for (var i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0) {\n      if (arr[i] < min) {\n        min = arr[i];\n        index = i;\n      }\n    }\n  }\n  result.push(min);\n  result.push(index);\n  return result;\n}\n",
    "  let smallest_even_value = arr[0];\n  let smallest_index = 0;\n  let result = [];\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0) {\n      if (arr[i] < smallest_even_value) {\n        smallest_even_value = arr[i];\n        smallest_index = i;\n      }\n    }\n  }\n  result = [smallest_even_value, smallest_index];\n  return result;\n}\n",
    "  let result = [];\n  let min_even = Infinity;\n  let min_index = -1;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0) {\n      if (arr[i] < min_even) {\n        min_even = arr[i];\n        min_index = i;\n      }\n    }\n  }\n  if (min_even === Infinity) {\n    return [];\n  }\n  result.push(min_even);\n  result.push(min_index);\n  return result;\n}\n",
    "  let min_even = arr.reduce((a, b) => a + b) % 2 === 0 ? a : b\n  let min_index = arr.reduce((a, b) => a < b ? a : b)\n  let result = arr.filter(a => a === min_even || a === min_index)\n  return result.length === 0 ? [] : [min_even, min_index]\n}\n",
    "    let result = [];\n    let min = arr[0];\n    let minIndex = 0;\n    for(let i = 0; i < arr.length; i++){\n        if(arr[i] % 2 === 0 && arr[i] < min){\n            min = arr[i];\n            minIndex = i;\n        }\n    }\n    result.push(min);\n    result.push(minIndex);\n    return result;\n}\n",
    "    let smallest_even = arr.reduce((a, b) => {\n        if (a === null) {\n            return b\n        }\n        if (b === null) {\n            return a\n        }\n        if (a % 2 === 0 && b % 2 === 0) {\n            return Math.min(a, b)\n        }\n        if (a % 2 === 0) {\n            return a\n        }\n        return b\n    })\n    let smallest_index = arr.reduce((a, b) => {\n        if (a === null) {\n            return b\n        }\n        if (b === null) {\n            return a\n        }\n        if (a === smallest_even) {\n            return a\n        }\n        return b\n    })\n    return [smallest_even, smallest_index]\n}\n",
    "    let result = [];\n    let min_even = arr[0];\n    let min_index = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] % 2 === 0 && arr[i] < min_even) {\n            min_even = arr[i];\n            min_index = i;\n        }\n    }\n    result.push(min_even);\n    result.push(min_index);\n    return result;\n}\n",
    "  let smallest_even_value = arr[0];\n  let smallest_index = 0;\n  let i = 0;\n  while(i < arr.length){\n    if(arr[i] % 2 === 0 && arr[i] < smallest_even_value){\n      smallest_even_value = arr[i];\n      smallest_index = i;\n    }\n    i++;\n  }\n  return [smallest_even_value, smallest_index];\n}\n",
    "    let result = [];\n    let min = arr[0];\n    let min_index = 0;\n    for(let i = 0; i < arr.length; i++){\n        if(arr[i] % 2 === 0 && arr[i] < min){\n            min = arr[i];\n            min_index = i;\n        }\n    }\n    result.push(min);\n    result.push(min_index);\n    return result;\n}\n",
    "    let res = [];\n    let min = arr[0];\n    let minIndex = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] < min) {\n            min = arr[i];\n            minIndex = i;\n        }\n    }\n    if (min % 2 === 0) {\n        res.push([min, minIndex]);\n    }\n    return res;\n}\n",
    "  let result = [];\n  let min = arr[0];\n  let minIndex = 0;\n  let i = 0;\n  let j = 0;\n  let even = 0;\n  let evenIndex = 0;\n  let evenMin = 0;\n  let evenMinIndex = 0;\n  while(i < arr.length){\n    if(arr[i] % 2 === 0){\n      even = arr[i];\n      evenIndex = i;\n      if(even < min){\n        min = even;\n        minIndex = i;\n      }\n    }\n    i++;\n  }\n  if(even === 0){\n    if(arr.length === 1){\n      result = [];\n    }else{\n      result = [evenMin, evenMinIndex];\n    }\n  }else{\n    if(min === even){\n      result = [min, minIndex];\n    }else{\n      result = [evenMin, evenMinIndex];\n    }\n  }\n  return result;\n}\n",
    "    let result = [];\n    let min_even = Infinity;\n    let min_index = -1;\n    for(let i = 0; i < arr.length; i++){\n        if(arr[i] % 2 === 0){\n            if(arr[i] < min_even){\n                min_even = arr[i];\n                min_index = i;\n            }\n        }\n    }\n    if(min_even === Infinity){\n        return [];\n    }\n    result.push(min_even);\n    result.push(min_index);\n    return result;\n}\n",
    "  let smallest_even_value = arr[0];\n  let smallest_index = 0;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0 && arr[i] < smallest_even_value) {\n      smallest_even_value = arr[i];\n      smallest_index = i;\n    }\n  }\n  return [smallest_even_value, smallest_index];\n}\n",
    "  let min_even = arr.reduce((prev, curr) => {\n    if (prev === null) {\n      return curr\n    }\n    if (curr % 2 === 0) {\n      return curr\n    }\n    return prev\n  })\n  let min_index = arr.reduce((prev, curr) => {\n    if (prev === null) {\n      return curr\n    }\n    if (curr % 2 === 0) {\n      return curr\n    }\n    return prev\n  })\n  if (min_even === null) {\n    return []\n  }\n  let even_index = arr.indexOf(min_even)\n  return [min_even, even_index]\n}\n",
    "    let smallest_even_value = arr[0];\n    let smallest_index = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] % 2 === 0 && arr[i] < smallest_even_value) {\n            smallest_even_value = arr[i];\n            smallest_index = i;\n        }\n    }\n    return [smallest_even_value, smallest_index];\n}\n",
    "    let min_even = arr[0]\n    let min_index = 0\n    let res = []\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] % 2 === 0) {\n            if (arr[i] < min_even) {\n                min_even = arr[i]\n                min_index = i\n            }\n        }\n    }\n    res = [min_even, min_index]\n    return res\n}\n",
    "    let result = [];\n    let min = arr[0];\n    let minIndex = 0;\n    for(let i = 0; i < arr.length; i++){\n        if(arr[i] % 2 === 0){\n            if(arr[i] < min){\n                min = arr[i];\n                minIndex = i;\n            }\n        }\n    }\n    result.push(min);\n    result.push(minIndex);\n    return result;\n}\n",
    "  let smallest_even_value = arr[0]\n  let smallest_index = 0\n  let result = []\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0) {\n      if (arr[i] < smallest_even_value) {\n        smallest_even_value = arr[i]\n        smallest_index = i\n      }\n    }\n  }\n  result.push(smallest_even_value)\n  result.push(smallest_index)\n  return result\n}\n",
    "  let smallest_even_value = arr[0];\n  let smallest_index = 0;\n  for (let i = 1; i < arr.length; i++) {\n    if (arr[i] % 2 === 0 && arr[i] < smallest_even_value) {\n      smallest_even_value = arr[i];\n      smallest_index = i;\n    }\n  }\n  return [smallest_even_value, smallest_index];\n}\n",
    "    let res = [];\n    let min = arr[0];\n    let minIndex = 0;\n    for(let i = 0; i < arr.length; i++){\n        if(arr[i] % 2 === 0){\n            if(arr[i] < min){\n                min = arr[i];\n                minIndex = i;\n            }\n        }\n    }\n    res.push(min);\n    res.push(minIndex);\n    return res;\n}\n",
    "    let smallest_even_value = arr[0]\n    let smallest_index = 0\n    let result = []\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] % 2 === 0 && arr[i] < smallest_even_value) {\n            smallest_even_value = arr[i]\n            smallest_index = i\n        }\n    }\n    result.push(smallest_even_value)\n    result.push(smallest_index)\n    return result\n}\n",
    "    let min_even = arr.reduce((a, b) => a + b) % 2 === 0 ? a : b\n    let min_index = arr.reduce((a, b) => a < b ? a : b)\n    return [min_even, min_index]\n}\n",
    "  let result = [];\n  let min_index = 0;\n  let min_value = arr[0];\n  let i = 0;\n  for(i = 0; i < arr.length; i++){\n    if(arr[i] % 2 === 0){\n      if(arr[i] < min_value){\n        min_value = arr[i];\n        min_index = i;\n      }\n    }\n  }\n  result.push(min_value);\n  result.push(min_index);\n  return result;\n}\n",
    "    let min_even = arr.reduce((a, b) => a + b) % 2 === 0 ? a : b;\n    let min_index = arr.reduce((a, b) => a < b ? a : b);\n    return [min_even, min_index];\n}\n",
    "  let min_even = arr.reduce((a, b) => a + b) % 2\n  let min_index = arr.reduce((a, b) => a + b)\n  let result = []\n  arr.forEach((node, i) => {\n    if (node % 2 === min_even) {\n      result.push([node, i])\n    }\n  })\n  if (result.length === 0) {\n    return []\n  }\n  result.sort((a, b) => a[0] - b[0])\n  return result[0]\n}\n",
    "    let result = [];\n    let min = arr[0];\n    let minIndex = 0;\n    for(let i = 0; i < arr.length; i++){\n        if(arr[i] % 2 === 0 && arr[i] < min){\n            min = arr[i];\n            minIndex = i;\n        }\n    }\n    result.push(min);\n    result.push(minIndex);\n    return result;\n}\n",
    "  let smallest_even_value = arr[0]\n  let smallest_index = 0\n  let result = []\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0) {\n      if (arr[i] < smallest_even_value) {\n        smallest_even_value = arr[i]\n        smallest_index = i\n      }\n    }\n  }\n  result.push(smallest_even_value)\n  result.push(smallest_index)\n  return result\n}\n",
    "  let result = [];\n  let min_even = Infinity;\n  let min_index = -1;\n  let i = 0;\n  while(i < arr.length){\n    if(arr[i] % 2 === 0){\n      if(arr[i] < min_even){\n        min_even = arr[i];\n        min_index = i;\n      }\n    }\n    i++;\n  }\n  if(min_index !== -1){\n    result.push(min_even, min_index);\n  }\n  return result;\n}\n",
    "    let result = [];\n    let min_even = Number.MAX_SAFE_INTEGER;\n    let min_index = -1;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] % 2 === 0) {\n            if (arr[i] < min_even) {\n                min_even = arr[i];\n                min_index = i;\n            }\n        }\n    }\n    if (min_index !== -1) {\n        result.push([min_even, min_index]);\n    }\n    return result;\n}\n",
    "    let result = [];\n    let min_even = Number.MAX_SAFE_INTEGER;\n    let min_index = -1;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] % 2 === 0) {\n            if (arr[i] < min_even) {\n                min_even = arr[i];\n                min_index = i;\n            }\n        }\n    }\n    if (min_index === -1) {\n        return [];\n    }\n    result.push(min_even);\n    result.push(min_index);\n    return result;\n}\n",
    "  let result = [];\n  let min_even = Infinity;\n  let min_index = -1;\n  let min_value = Infinity;\n  let min_index_value = -1;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0) {\n      if (arr[i] < min_even) {\n        min_even = arr[i];\n        min_index = i;\n      }\n    } else {\n      if (arr[i] < min_value) {\n        min_value = arr[i];\n        min_index_value = i;\n      }\n    }\n  }\n  if (min_index_value !== -1) {\n    result.push([min_value, min_index_value]);\n  }\n  return result;\n}\n",
    "  let min_even = Infinity\n  let min_index = -1\n  let result = []\n  arr.forEach(node => {\n    if (node % 2 === 0 && node < min_even) {\n      min_even = node\n      min_index = arr.indexOf(node)\n    }\n  })\n  if (min_even === Infinity) {\n    return []\n  }\n  result.push(min_even, min_index)\n  return result\n}\n",
    "    var result = [];\n    var min_index = -1;\n    var min_value = -1;\n    for(var i = 0; i < arr.length; i++){\n        if(arr[i] % 2 === 0){\n            if(min_value === -1 || arr[i] < min_value){\n                min_value = arr[i];\n                min_index = i;\n            }\n        }\n    }\n    if(min_index === -1){\n        return [];\n    }\n    result.push(min_value);\n    result.push(min_index);\n    return result;\n}\n",
    "  let smallest_even_value = arr[0]\n  let smallest_index = 0\n  let result = []\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0) {\n      if (arr[i] < smallest_even_value) {\n        smallest_even_value = arr[i]\n        smallest_index = i\n      }\n    }\n  }\n  result.push(smallest_even_value)\n  result.push(smallest_index)\n  return result\n}\n",
    "    let result = [];\n    let min_index = -1;\n    let min_value = -1;\n    let i = 0;\n    while(i < arr.length){\n        if(arr[i] % 2 === 0){\n            if(min_value === -1){\n                min_value = arr[i];\n                min_index = i;\n            }\n            else if(arr[i] < min_value){\n                min_value = arr[i];\n                min_index = i;\n            }\n        }\n        i++;\n    }\n    if(min_index === -1){\n        return result;\n    }\n    result.push(min_value);\n    result.push(min_index);\n    return result;\n}\n",
    "  let result = [];\n  let smallest_even_value = arr[0];\n  let smallest_index = 0;\n  for(let i = 0; i < arr.length; i++){\n    if(arr[i] % 2 === 0){\n      if(arr[i] < smallest_even_value){\n        smallest_even_value = arr[i];\n        smallest_index = i;\n      }\n    }\n  }\n  result = [smallest_even_value, smallest_index];\n  return result;\n}\n",
    "  let smallest_even_value = -1\n  let smallest_index = -1\n  let result = []\n  arr.forEach(function(node){\n    if (node % 2 === 0) {\n      if (smallest_even_value === -1) {\n        smallest_even_value = node\n        smallest_index = arr.indexOf(node)\n      } else if (node < smallest_even_value) {\n        smallest_even_value = node\n        smallest_index = arr.indexOf(node)\n      } else if (node === smallest_even_value && arr.indexOf(node) < smallest_index) {\n        smallest_even_value = node\n        smallest_index = arr.indexOf(node)\n      }\n    }\n  })\n  if (smallest_even_value === -1) {\n    return []\n  } else {\n    result = [smallest_even_value, smallest_index]\n  }\n  return result\n}\n",
    "  let result = [];\n  let min_even = Number.MAX_VALUE;\n  let min_index = -1;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0 && arr[i] < min_even) {\n      min_even = arr[i];\n      min_index = i;\n    }\n  }\n  if (min_index !== -1) {\n    result = [min_even, min_index];\n  }\n  return result;\n}\n",
    "    let result = [];\n    let min_even = arr[0];\n    let min_index = 0;\n    for(let i = 0; i < arr.length; i++){\n        if(arr[i] % 2 === 0){\n            if(arr[i] < min_even){\n                min_even = arr[i];\n                min_index = i;\n            }\n        }\n    }\n    result.push(min_even);\n    result.push(min_index);\n    return result;\n}\n",
    "    let smallest_even = arr.reduce((a, b) => {\n        if (a === undefined) {\n            return b\n        }\n        if (a % 2 === 0 && b % 2 === 0) {\n            return Math.min(a, b)\n        }\n        return Math.min(a, b)\n    })\n    let index = arr.reduce((a, b) => {\n        if (a === undefined) {\n            return b\n        }\n        if (a % 2 === 0 && b % 2 === 0) {\n            return Math.min(a, b)\n        }\n        return Math.min(a, b)\n    })\n    if (smallest_even === undefined) {\n        return []\n    }\n    return [smallest_even, index]\n}\n",
    "  let min_even = arr.reduce((a, b) => a + b) % 2 === 0 ? a : b;\n  let min_index = arr.reduce((a, b) => a + b) % 2 === 0 ? a : b;\n  let res = [];\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] === min_even) {\n      res.push([min_even, min_index]);\n      break;\n    }\n  }\n  return res;\n}\n",
    "  let smallest_even = arr.reduce((a, b) => a + b) % 2 === 0 ? a : b\n  let smallest_index = arr.reduce((a, b) => a + b) % 2 === 0 ? a : b\n  let result = arr.filter(x => x === smallest_even)\n  return result.length === 0 ? [] : [smallest_even, smallest_index]\n}\n",
    "  let result = [];\n  let min_index = -1;\n  let min_value = -1;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0) {\n      if (min_value === -1 || arr[i] < min_value) {\n        min_value = arr[i];\n        min_index = i;\n      }\n    }\n  }\n  if (min_index !== -1) {\n    result = [min_value, min_index];\n  }\n  return result;\n}\n",
    "  let smallest_even_value = arr[0];\n  let smallest_index = 0;\n  let even_values = [];\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0) {\n      even_values.push([arr[i], i]);\n    }\n    if (arr[i] < smallest_even_value) {\n      smallest_even_value = arr[i];\n      smallest_index = i;\n    }\n  }\n  if (even_values.length === 0) {\n    return [];\n  }\n  if (even_values.length === 1) {\n    return even_values[0];\n  }\n  let smallest_even_value_index = 0;\n  for (let i = 0; i < even_values.length; i++) {\n    if (even_values[i][0] < smallest_even_value) {\n      smallest_even_value = even_values[i][0];\n      smallest_even_value_index = even_values[i][1];\n    }\n  }\n  return [smallest_even_value, smallest_index];\n}\n",
    "  let result = [];\n  let min_even = Infinity;\n  let min_index = -1;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0 && arr[i] < min_even) {\n      min_even = arr[i];\n      min_index = i;\n    }\n  }\n  if (min_index !== -1) {\n    result = [min_even, min_index];\n  }\n  return result;\n}\n",
    "  let smallest_even_value = arr.reduce((a, b) => a + b) % 2 === 0 ? a : b\n  let smallest_index = arr.reduce((a, b) => a < b ? a : b)\n  return [smallest_even_value, smallest_index]\n}\n",
    "    let smallestEvenValue = arr[0]\n    let smallestEvenIndex = 0\n    let result = []\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] % 2 === 0) {\n            if (arr[i] < smallestEvenValue) {\n                smallestEvenValue = arr[i]\n                smallestEvenIndex = i\n            }\n        }\n    }\n    result.push(smallestEvenValue)\n    result.push(smallestEvenIndex)\n    return result\n}\n",
    "    let min = arr[0]\n    let minIndex = 0\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] < min) {\n            min = arr[i]\n            minIndex = i\n        }\n    }\n    return [min, minIndex]\n}\n",
    "    let min_even = arr.reduce((a, b) => a + b) % 2 === 0 ? a : b;\n    let min_index = arr.reduce((a, b) => a + b) % 2 === 0 ? a : b;\n    let res = [];\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] === min_even) {\n            res = [min_even, min_index];\n            break;\n        }\n    }\n    return res;\n}\n",
    "    let smallest_even_value = arr[0];\n    let smallest_index = 0;\n    let result = [];\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] % 2 === 0) {\n            if (arr[i] < smallest_even_value) {\n                smallest_even_value = arr[i];\n                smallest_index = i;\n            }\n        }\n    }\n    result.push(smallest_even_value);\n    result.push(smallest_index);\n    return result;\n}\n",
    "    let result = [];\n    let min_even = arr[0];\n    let min_index = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] % 2 === 0) {\n            if (arr[i] < min_even) {\n                min_even = arr[i];\n                min_index = i;\n            }\n        }\n    }\n    result.push(min_even);\n    result.push(min_index);\n    return result;\n}\n",
    "  let result = [];\n  let min_even = Infinity;\n  let min_index = 0;\n  let i = 0;\n  for (i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0) {\n      if (arr[i] < min_even) {\n        min_even = arr[i];\n        min_index = i;\n      }\n    }\n  }\n  if (min_even === Infinity) {\n    return [];\n  }\n  result.push(min_even);\n  result.push(min_index);\n  return result;\n}\n",
    "    let smallest_even_value = -1;\n    let smallest_index = -1;\n    let result = [];\n    for(let i = 0; i < arr.length; i++){\n        if(arr[i] % 2 === 0){\n            if(smallest_even_value === -1){\n                smallest_even_value = arr[i];\n                smallest_index = i;\n            }\n            else if(arr[i] < smallest_even_value){\n                smallest_even_value = arr[i];\n                smallest_index = i;\n            }\n            else if(arr[i] === smallest_even_value && i < smallest_index){\n                smallest_even_value = arr[i];\n                smallest_index = i;\n            }\n        }\n    }\n    if(smallest_even_value === -1){\n        result = [];\n    }\n    else{\n        result = [smallest_even_value, smallest_index];\n    }\n    return result;\n}\n",
    "    let min_even = arr.reduce((a, b) => a + b) % 2 === 0 ? a : b;\n    let min_index = arr.reduce((a, b) => a + b) % 2 === 0 ? a : b;\n    let min_index_arr = [];\n    let min_index_arr_index = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] === min_even) {\n            min_index_arr.push(arr[i]);\n            min_index_arr_index = i;\n        }\n    }\n    return min_index_arr;\n}\n",
    "  let smallest_even_value = arr[0];\n  let smallest_index = 0;\n  let arr_length = arr.length;\n  let i = 0;\n  while(i < arr_length){\n    if(arr[i] % 2 === 0){\n      if(arr[i] < smallest_even_value){\n        smallest_even_value = arr[i];\n        smallest_index = i;\n      }\n    }\n    i++;\n  }\n  return [smallest_even_value, smallest_index];\n}\n",
    "    let smallest_even_value = arr[0];\n    let smallest_index = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] % 2 === 0 && arr[i] < smallest_even_value) {\n            smallest_even_value = arr[i];\n            smallest_index = i;\n        }\n    }\n    return [smallest_even_value, smallest_index];\n}\n",
    "  let smallest_even_value = arr[0]\n  let smallest_index = 0\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0) {\n      if (arr[i] < smallest_even_value) {\n        smallest_even_value = arr[i]\n        smallest_index = i\n      }\n    }\n  }\n  return [smallest_even_value, smallest_index]\n}\n",
    "    let smallest_even_value = arr[0];\n    let smallest_index = 0;\n    let result = [];\n    for(let i = 0; i < arr.length; i++){\n        if(arr[i] % 2 === 0){\n            if(arr[i] < smallest_even_value){\n                smallest_even_value = arr[i];\n                smallest_index = i;\n            }\n        }\n    }\n    result.push(smallest_even_value);\n    result.push(smallest_index);\n    return result;\n}\n",
    "    let smallest_even = arr.reduce((a, b) => {\n        if (a === null) {\n            return b;\n        }\n        if (b === null) {\n            return a;\n        }\n        if (a === 0) {\n            return b;\n        }\n        if (b === 0) {\n            return a;\n        }\n        if (a % 2 === 0 && b % 2 === 0) {\n            return Math.min(a, b);\n        }\n        return Math.min(a, b);\n    });\n    let smallest_index = arr.reduce((a, b) => {\n        if (a === null) {\n            return b;\n        }\n        if (b === null) {\n            return a;\n        }\n        if (a === 0) {\n            return b;\n        }\n        if (b === 0) {\n            return a;\n        }\n        if (a % 2 === 0 && b % 2 === 0) {\n            return Math.min(a, b);\n        }\n        return Math.min(a, b);\n    });\n    if (smallest_even === null) {\n        return [];\n    }\n    if (smallest_index === null) {\n        return [smallest_even, 0];\n    }\n    return [smallest_even, smallest_index];\n}\n",
    "  var res = [];\n  var min = arr[0];\n  var min_index = 0;\n  for (var i = 0; i < arr.length; i++) {\n    if (arr[i] < min) {\n      min = arr[i];\n      min_index = i;\n    }\n  }\n  if (min % 2 === 0) {\n    res.push([min, min_index]);\n  }\n  return res;\n}\n",
    "  let smallest_even_value = arr[0];\n  let smallest_index = 0;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0 && arr[i] < smallest_even_value) {\n      smallest_even_value = arr[i];\n      smallest_index = i;\n    }\n  }\n  return [smallest_even_value, smallest_index];\n}\n",
    "    let min_even = arr.reduce((a, b) => a + b) % 2 === 0 ? a : b;\n    let min_index = arr.reduce((a, b) => a < b ? a : b);\n    let result = [];\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] === min_even) {\n            result.push([arr[i], i]);\n        }\n    }\n    if (result.length === 0) {\n        return [];\n    }\n    return result[0];\n}\n",
    "    let min = arr[0];\n    let min_index = 0;\n    for(let i = 0; i < arr.length; i++){\n        if(arr[i] < min){\n            min = arr[i];\n            min_index = i;\n        }\n    }\n    if(min % 2 === 0){\n        return [min, min_index];\n    }\n    for(let i = 0; i < arr.length; i++){\n        if(arr[i] % 2 === 0 && i !== min_index){\n            return [arr[i], i];\n        }\n    }\n    return [];\n}\n",
    "  let result = [];\n  let min = arr[0];\n  let minIndex = 0;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] < min) {\n      min = arr[i];\n      minIndex = i;\n    }\n  }\n  result = [min, minIndex];\n  return result;\n}\n",
    "    let min_even = Infinity;\n    let min_index = -1;\n    let result = [];\n    for(let i = 0; i < arr.length; i++){\n        if(arr[i] % 2 === 0){\n            if(arr[i] < min_even){\n                min_even = arr[i];\n                min_index = i;\n            }\n        }\n    }\n    if(min_even === Infinity){\n        return [];\n    }\n    result.push(min_even);\n    result.push(min_index);\n    return result;\n}\n",
    "  let smallest_even_value = arr[0];\n  let smallest_index = 0;\n  let index = 0;\n  for(let i = 0; i < arr.length; i++){\n    if(arr[i] % 2 === 0 && arr[i] < smallest_even_value){\n      smallest_even_value = arr[i];\n      smallest_index = i;\n    }\n  }\n  return [smallest_even_value, smallest_index];\n}\n",
    "  let smallest_even = arr.find(x => x % 2 === 0)\n  let smallest_index = arr.indexOf(smallest_even)\n  let smallest_value = arr[smallest_index]\n  let result = [smallest_value, smallest_index]\n  return result\n}\n",
    "  let smallest_even_value = arr[0]\n  let smallest_index = 0\n  let i = 0\n  for (i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0) {\n      smallest_even_value = arr[i]\n      smallest_index = i\n      break\n    }\n  }\n  let result = []\n  for (i = 0; i < arr.length; i++) {\n    if (arr[i] === smallest_even_value) {\n      result.push([arr[i], i])\n    }\n  }\n  return result\n}\n",
    "    var result = [];\n    var min_even = arr[0];\n    var min_index = 0;\n    for(var i = 0; i < arr.length; i++){\n        if(arr[i] % 2 === 0 && arr[i] < min_even){\n            min_even = arr[i];\n            min_index = i;\n        }\n    }\n    result.push(min_even);\n    result.push(min_index);\n    return result;\n}\n",
    "  let result = [];\n  let min_even = Number.MAX_SAFE_INTEGER;\n  let min_index = -1;\n  for(let i = 0; i < arr.length; i++){\n    if(arr[i] % 2 === 0 && arr[i] < min_even){\n      min_even = arr[i];\n      min_index = i;\n    }\n  }\n  if(min_index !== -1){\n    result = [min_even, min_index];\n  }\n  return result;\n}\n",
    "    let smallest_even_value = arr[0];\n    let smallest_index = 0;\n    let result = [];\n    for(let i = 0; i < arr.length; i++){\n        if(arr[i] % 2 === 0){\n            if(arr[i] < smallest_even_value){\n                smallest_even_value = arr[i];\n                smallest_index = i;\n            }\n        }\n    }\n    result.push(smallest_even_value);\n    result.push(smallest_index);\n    return result;\n}\n",
    "    let smallest_even = arr[0];\n    let smallest_index = 0;\n    let i = 0;\n    for(i = 0; i < arr.length; i++){\n        if(arr[i] % 2 === 0){\n            if(arr[i] < smallest_even){\n                smallest_even = arr[i];\n                smallest_index = i;\n            }\n        }\n    }\n    return [smallest_even, smallest_index];\n}\n",
    "    let res = [];\n    let min = arr[0];\n    let min_index = 0;\n    let even_index = 0;\n    let even_value = 0;\n    for(let i = 0; i < arr.length; i++){\n        if(arr[i] % 2 === 0){\n            if(arr[i] < even_value){\n                even_value = arr[i];\n                even_index = i;\n            }\n        }\n        else if(arr[i] < min){\n            min = arr[i];\n            min_index = i;\n        }\n    }\n    if(even_value === 0){\n        res = [min, min_index];\n    }\n    else{\n        res = [even_value, even_index];\n    }\n    return res;\n}\n",
    "    let min_even = arr[0]\n    let min_index = 0\n    let res = []\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] % 2 === 0) {\n            if (arr[i] < min_even) {\n                min_even = arr[i]\n                min_index = i\n            }\n        }\n    }\n    res.push(min_even)\n    res.push(min_index)\n    return res\n}\n",
    "  let result = [];\n  let min_even = Number.MAX_SAFE_INTEGER;\n  let min_index = -1;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0 && arr[i] < min_even) {\n      min_even = arr[i];\n      min_index = i;\n    }\n  }\n  if (min_index === -1) {\n    return result;\n  }\n  result.push(min_even);\n  result.push(min_index);\n  return result;\n}\n",
    "    let min_even = Number.MAX_SAFE_INTEGER;\n    let min_index = -1;\n    let result = [];\n    for(let i = 0; i < arr.length; i++){\n        if(arr[i] % 2 === 0){\n            if(arr[i] < min_even){\n                min_even = arr[i];\n                min_index = i;\n            }\n        }\n    }\n    if(min_index !== -1){\n        result = [min_even, min_index];\n    }\n    return result;\n}\n",
    "    let result = [];\n    let min_even = Number.MAX_SAFE_INTEGER;\n    let min_index = -1;\n    let i = 0;\n    while(i < arr.length){\n        if(arr[i] % 2 === 0){\n            if(arr[i] < min_even){\n                min_even = arr[i];\n                min_index = i;\n            }\n        }\n        i++;\n    }\n    if(min_index !== -1){\n        result = [min_even, min_index];\n    }\n    return result;\n}\n",
    "  var result = [];\n  var min = Infinity;\n  var minIndex = 0;\n  for (var i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0 && arr[i] < min) {\n      min = arr[i];\n      minIndex = i;\n    }\n  }\n  result.push(min);\n  result.push(minIndex);\n  return result;\n}\n",
    "  var result = [];\n  var min_even = Infinity;\n  var min_index = -1;\n  for (var i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0 && arr[i] < min_even) {\n      min_even = arr[i];\n      min_index = i;\n    }\n  }\n  if (min_index !== -1) {\n    result.push(min_even, min_index);\n  }\n  return result;\n}\n",
    "    let result = [];\n    let min = arr[0];\n    let min_index = 0;\n    for(let i = 0; i < arr.length; i++){\n        if(arr[i] % 2 === 0 && arr[i] < min){\n            min = arr[i];\n            min_index = i;\n        }\n    }\n    result.push(min);\n    result.push(min_index);\n    return result;\n}\n",
    "  let result = [];\n  let min_even = Infinity;\n  let min_index = -1;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0) {\n      if (arr[i] < min_even) {\n        min_even = arr[i];\n        min_index = i;\n      }\n    }\n  }\n  if (min_index !== -1) {\n    result.push(min_index);\n    result.push(min_even);\n  }\n  return result;\n}\n",
    "    let res = [];\n    let min = arr[0];\n    let minIndex = 0;\n    for(let i = 0; i < arr.length; i++){\n        if(arr[i] % 2 === 0){\n            if(arr[i] < min){\n                min = arr[i];\n                minIndex = i;\n            }\n        }\n    }\n    res.push(min);\n    res.push(minIndex);\n    return res;\n}\n",
    "    let min_even = Infinity;\n    let min_index = -1;\n    let result = [];\n    for(let i = 0; i < arr.length; i++){\n        if(arr[i] % 2 === 0 && arr[i] < min_even){\n            min_even = arr[i];\n            min_index = i;\n        }\n    }\n    if(min_even === Infinity){\n        return [];\n    }\n    result.push(min_even);\n    result.push(min_index);\n    return result;\n}\n",
    "  let result = [];\n  let min_even = Infinity;\n  let min_index = -1;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0 && arr[i] < min_even) {\n      min_even = arr[i];\n      min_index = i;\n    }\n  }\n  if (min_index !== -1) {\n    result = [min_even, min_index];\n  }\n  return result;\n}\n",
    "  let result = [];\n  let min_even = Infinity;\n  let min_index = -1;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0 && arr[i] < min_even) {\n      min_even = arr[i];\n      min_index = i;\n    }\n  }\n  if (min_index !== -1) {\n    result = [min_even, min_index];\n  }\n  return result;\n}\n",
    "    let result = [];\n    let min_index = 0;\n    let min_value = arr[0];\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] % 2 === 0) {\n            if (arr[i] < min_value) {\n                min_value = arr[i];\n                min_index = i;\n            }\n        }\n    }\n    result.push(min_value);\n    result.push(min_index);\n    return result;\n}\n",
    "  let result = [];\n  let min_index = -1;\n  let min_value = -1;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0) {\n      if (min_value === -1 || arr[i] < min_value) {\n        min_value = arr[i];\n        min_index = i;\n      }\n    }\n  }\n  if (min_index !== -1) {\n    result.push([min_value, min_index]);\n  }\n  return result;\n}\n",
    "    let res = [];\n    let min = arr[0];\n    let min_index = 0;\n    for(let i = 0; i < arr.length; i++){\n        if(arr[i] % 2 === 0 && arr[i] < min){\n            min = arr[i];\n            min_index = i;\n        }\n    }\n    res.push(min);\n    res.push(min_index);\n    return res;\n}\n",
    "    let result = [];\n    let min = arr[0];\n    let minIndex = 0;\n    for(let i = 0; i < arr.length; i++){\n        if(arr[i] % 2 === 0 && arr[i] < min){\n            min = arr[i];\n            minIndex = i;\n        }\n    }\n    result.push(min);\n    result.push(minIndex);\n    return result;\n}\n",
    "  let result = [];\n  let smallest_even_value = arr[0];\n  let smallest_index = 0;\n  for(let i = 0; i < arr.length; i++){\n    if(arr[i] % 2 === 0){\n      if(arr[i] < smallest_even_value){\n        smallest_even_value = arr[i];\n        smallest_index = i;\n      }\n    }\n  }\n  result = [smallest_even_value, smallest_index];\n  return result;\n}\n",
    "  let smallest_even_value = arr[0];\n  let smallest_index = 0;\n  let i = 0;\n  for (i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0) {\n      if (arr[i] < smallest_even_value) {\n        smallest_even_value = arr[i];\n        smallest_index = i;\n      }\n    }\n  }\n  return [smallest_even_value, smallest_index];\n}\n",
    "  let min_even = Infinity\n  let min_index = -1\n  let result = []\n  arr.forEach((node, index) => {\n    if (node % 2 === 0 && node < min_even) {\n      min_even = node\n      min_index = index\n    }\n  })\n  if (min_even === Infinity) {\n    return []\n  }\n  result.push(min_even, min_index)\n  return result\n}\n",
    "    let smallest_even = arr[0]\n    let smallest_index = 0\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] % 2 === 0) {\n            if (arr[i] < smallest_even) {\n                smallest_even = arr[i]\n                smallest_index = i\n            }\n        }\n    }\n    return [smallest_even, smallest_index]\n}\n",
    "  let smallest_even = arr.reduce((prev, curr) => {\n    if (curr % 2 === 0) {\n      return curr\n    } else {\n      return prev\n    }\n  })\n  let smallest_index = arr.indexOf(smallest_even)\n  let result = [smallest_even, smallest_index]\n  return result\n}\n",
    "    let min = arr[0];\n    let min_index = 0;\n    let result = [];\n    for(let i = 0; i < arr.length; i++){\n        if(arr[i] % 2 === 0){\n            if(arr[i] < min){\n                min = arr[i];\n                min_index = i;\n            }\n        }\n    }\n    result.push(min);\n    result.push(min_index);\n    return result;\n}\n",
    "    let min_even = arr.reduce((a, b) => a + b) % 2 === 0 ? a : b;\n    let min_index = arr.reduce((a, b) => a + b) % 2 === 0 ? a : b;\n    let min_even_index = arr.reduce((a, b) => a + b) % 2 === 0 ? a : b;\n    let min_even_index_index = arr.reduce((a, b) => a + b) % 2 === 0 ? a : b;\n    let min_even_index_index_index = arr.reduce((a, b) => a + b) % 2 === 0 ? a : b;\n    let min_even_index_index_index_index = arr.reduce((a, b) => a + b) % 2 === 0 ? a : b;\n    let min_even_index_index_index_index_index = arr.reduce((a, b) => a + b) % 2 === 0 ? a : b;\n    let min_even_index_index_index_index_index_index = arr.reduce((a, b) => a + b) % 2 === 0 ? a : b;\n    let min_even_index_index_index_index_index_index_index = arr.reduce((a, b) => a + b) % 2 === 0 ? a : b;\n    let min_even_index_index_index_index_index_index_index_index = arr.reduce((a, b) => a + b) % 2 === 0 ? a : b;\n    let min_even_index_index_index_index_index_index_index_index_index = arr.reduce((a, b) => a + b) % 2 === 0 ? a : b;\n    let min_even_index_index_index_index_index_index_index_index_index_index = arr.reduce((a, b) => a + b) % 2 === 0 ? a : b;\n    let min_even_index_index_index_index_index_index_index_index_index_index_index = arr.reduce((a, b) => a + b)",
    "  let min_even = Infinity;\n  let min_index = -1;\n  let result = [];\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0) {\n      if (arr[i] < min_even) {\n        min_even = arr[i];\n        min_index = i;\n      }\n    }\n  }\n  if (min_even === Infinity) {\n    return [];\n  }\n  result.push(min_even);\n  result.push(min_index);\n  return result;\n}\n",
    "    let res = [];\n    let min_even = Infinity;\n    let min_index = -1;\n    for(let i = 0; i < arr.length; i++){\n        if(arr[i] % 2 === 0 && arr[i] < min_even){\n            min_even = arr[i];\n            min_index = i;\n        }\n    }\n    if(min_even === Infinity){\n        return [];\n    }\n    res.push(min_even);\n    res.push(min_index);\n    return res;\n}\n",
    "  let min_even = arr.reduce((a, b) => a + b) % 2 === 0 ? a : b\n  let min_index = arr.reduce((a, b) => a < b ? a : b)\n  let result = []\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] === min_even && arr[i] !== min_index) {\n      result.push([min_even, min_index])\n      break\n    }\n  }\n  return result\n}\n",
    "    let min_even = arr.reduce((a, b) => a + b) % 2 === 0 ? a : b;\n    let min_index = arr.reduce((a, b) => a < b ? a : b);\n    return [min_even, min_index];\n}\n",
    "    let smallest_even = arr[0];\n    let smallest_index = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] % 2 === 0 && arr[i] < smallest_even) {\n            smallest_even = arr[i];\n            smallest_index = i;\n        }\n    }\n    return [smallest_even, smallest_index];\n}\n",
    "    let result = [];\n    let min = arr[0];\n    let minIndex = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] < min) {\n            min = arr[i];\n            minIndex = i;\n        }\n    }\n    result.push(min);\n    result.push(minIndex);\n    return result;\n}\n",
    "    let smallest_even_value = arr[0];\n    let smallest_index = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] % 2 === 0) {\n            if (arr[i] < smallest_even_value) {\n                smallest_even_value = arr[i];\n                smallest_index = i;\n            }\n        }\n    }\n    return [smallest_even_value, smallest_index];\n}\n",
    "  let smallest_even_value = arr[0]\n  let smallest_index = 0\n  let result = []\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0) {\n      if (arr[i] < smallest_even_value) {\n        smallest_even_value = arr[i]\n        smallest_index = i\n      }\n    }\n  }\n  result.push(smallest_even_value)\n  result.push(smallest_index)\n  return result\n}\n",
    "    let smallest_even = arr.reduce((a, b) => a + b) % 2 === 0 ? a : b;\n    let smallest_index = arr.reduce((a, b) => a + b) % 2 === 0 ? a : b;\n    let result = [];\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] === smallest_even) {\n            result = [arr[i], i];\n            break;\n        }\n    }\n    return result;\n}\n",
    "    let result = [];\n    let min_even = Number.MAX_SAFE_INTEGER;\n    let min_index = -1;\n    for(let i = 0; i < arr.length; i++){\n        if(arr[i] % 2 === 0){\n            if(arr[i] < min_even){\n                min_even = arr[i];\n                min_index = i;\n            }\n        }\n    }\n    if(min_index !== -1){\n        result = [min_even, min_index];\n    }\n    return result;\n}\n",
    "    let result = [];\n    let min = arr[0];\n    let minIndex = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] < min) {\n            min = arr[i];\n            minIndex = i;\n        }\n    }\n    result.push(min);\n    result.push(minIndex);\n    return result;\n}\n",
    "    let min_even = arr.reduce((a, b) => a + b) % 2 === 0 ? a : b;\n    let min_index = arr.reduce((a, b) => a < b ? a : b);\n    return [min_even, min_index];\n}\n",
    "  var result = [];\n  var min_even = Infinity;\n  var min_index = -1;\n  for(var i = 0; i < arr.length; i++){\n    if(arr[i] % 2 === 0){\n      if(arr[i] < min_even){\n        min_even = arr[i];\n        min_index = i;\n      }\n    }\n  }\n  if(min_index !== -1){\n    result.push(min_index);\n    result.push(min_even);\n  }\n  return result;\n}\n",
    "    let min_even = arr.reduce((a, b) => a + b) % 2;\n    let min_index = arr.reduce((a, b) => a < b ? a : b);\n    let result = [];\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] % 2 === min_even && arr[i] !== min_index) {\n            result.push([arr[i], i]);\n        }\n    }\n    return result;\n}\n",
    "    let res = [];\n    let min = arr[0];\n    let min_index = 0;\n    for(let i = 0; i < arr.length; i++){\n        if(arr[i] % 2 === 0 && arr[i] < min){\n            min = arr[i];\n            min_index = i;\n        }\n    }\n    res.push(min);\n    res.push(min_index);\n    return res;\n}\n",
    "    let min = arr[0];\n    let min_index = 0;\n    let result = [];\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] % 2 === 0 && arr[i] < min) {\n            min = arr[i];\n            min_index = i;\n        }\n    }\n    result.push(min);\n    result.push(min_index);\n    return result;\n}\n",
    "    let result = [];\n    let min_even = Infinity;\n    let min_index = -1;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] % 2 === 0 && arr[i] < min_even) {\n            min_even = arr[i];\n            min_index = i;\n        }\n    }\n    if (min_even === Infinity) {\n        return [];\n    }\n    result.push(min_even);\n    result.push(min_index);\n    return result;\n}\n",
    "    let min = arr[0];\n    let min_index = 0;\n    for(let i = 1; i < arr.length; i++){\n        if(arr[i] < min){\n            min = arr[i];\n            min_index = i;\n        }\n    }\n    let result = [min, min_index];\n    if(arr.length === 1){\n        return result;\n    }\n    let even_index = min_index;\n    let even_value = min;\n    for(let i = 0; i < arr.length; i++){\n        if(arr[i] % 2 === 0){\n            even_value = arr[i];\n            even_index = i;\n        }\n    }\n    if(even_value < min){\n        result = [even_value, even_index];\n    }\n    return result;\n}\n",
    "  let smallest_value = arr[0];\n  let smallest_index = 0;\n  let result = [];\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0) {\n      if (arr[i] < smallest_value) {\n        smallest_value = arr[i];\n        smallest_index = i;\n      }\n    }\n  }\n  result.push(smallest_value);\n  result.push(smallest_index);\n  return result;\n}\n"
  ],
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ]
}
language: jl
name: HumanEval_118_get_closest_vowel
results:
- exit_code: 1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ # your code goes here\nend\n\"\"\"\n    get_closest_vowel(\"broccccoooolliii\"\
    ) == \"c\" # b[r]o[c]ccccooo[o]lliii\n    get_closest_vowel(\"trrroooomb\") ==\
    \ \"o\" # trr[r]o[o]oomb\n    get_closest_vowel(\"kyllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllll\n\
    using Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"\
    yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"\
    easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\"\
    ) == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\")\
    \ == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") ==\
    \ \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") ==\
    \ \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") ==\
    \ \"o\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpjql2fv0w.jl:14\nin expression starting at\
    \ /tmp/tmpjql2fv0w.jl:14\n"
  stdout: ''
  timestamp: 1659822158
- exit_code: -1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ # Your code here\nend\n \nprintln(get_closest_vowel(\"winter\")) # Return \"\
    i\"\nprintln(get_closest_vowel(\"summer\")) # Return \"u\"\nprintln(get_closest_vowel(\"\
    autumn\")) # Return \"u\"\nprintln(get_closest_vowel(\"spring\")) # Return \"\
    i\"\nprintln(get_closest_vowel(\"Hello\")) # Return \"\" because there is no such\
    \ condition\n \nprintln(get_closest_vowel(\"lonely\")) # Return \"o\"\nprintln(get_closest_vowel(\"\
    easier\")) # Return \"e\"\nprintln(get_closest_vowel(\"noisy\")) # Return \"o\"\
    \nprintln(get_closest_vowel(\"noise\")) # Return \"o\"\nprintln(get_closest_vowel(\"\
    travel\")) # Return \"a\"\nprintln(get_closest_vowel(\"secluded\")) # Return \"\
    e\"\nprintln(get_closest_vowel(\"shameless\")) # Return \"a\"\nprintln(get_closest_vowel(\"\
    stamina\")) # Return \"a\"\nprintln(get_closest_vowel(\"scream\")) # Return \"\
    e\"\nprintln(get_closest_vowel(\"scramble\")) # Return \"a\"\nprintln(get_closest_vowel(\"\
    unhappily\")) # Return \"a\"\nprintln(get_closest_vowel(\"sadly\")) # Return \"\
    a\"\nprintln(get_closest_vowel(\"disturbed\")) # Return \"u\"\nprintln(get_closest_vowel(\"\
    trauma\")) # Return \"a\"\nprintln(get_closest_vowel(\"suddenly\")) # Return \"\
    u\"\nprintln(get_closest_vowel(\"achieve\")) # Return \"i\"\nprintln(get_closest_vowel(\"\
    accident\")) # Return \"i\"\nprintln(get_closest_vowel(\"accelerate\")) # Return\
    \ \"e\"\nprintln(get_closest_vow\nusing Test\n\n@testset begin\n\ncandidate =\
    \ get_closest_vowel;\n\t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"\
    full\") == \"u\")\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"\
    eAsy\") == \"\")\n\t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\"\
    ) == \"a\")\n\t@test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\")\
    \ == \"\")\n\t@test(candidate(\"ba\") == \"\")\n\t@test(candidate(\"quick\") ==\
    \ \"\")\n\t@test(candidate(\"anime\") == \"i\")\n\t@test(candidate(\"Asia\") ==\
    \ \"\")\n\t@test(candidate(\"Above\") == \"o\")\nend\n"
  status: Timeout
  stderr: 'b''ERROR: LoadError: MethodError: Cannot `convert` an object of type Nothing
    to an object of type String\nClosest candidates are:\n  convert(::Type{String},
    !Matched::String) at ~/.conda/envs/polyglot/share/julia/base/essentials.jl:223\n  convert(::Type{T},
    !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n  convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:232\n  ...\nStacktrace:\n
    [1] get_closest_vowel(word::'''
  stdout: None
  timestamp: 1659822161
- exit_code: -1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ \nend\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"\
    yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"\
    easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\"\
    ) == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\")\
    \ == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") ==\
    \ \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") ==\
    \ \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") ==\
    \ \"o\")\nend\n"
  status: Timeout
  stderr: 'b''ERROR: LoadError: '''
  stdout: 'b''test set: Error During Test at /tmp/tmpe2tc3ggl.jl:19\n  Test threw
    exception\n  Expression: candidate("yogurt") == "u"\n  MethodError: Cannot `convert`
    an object of type Nothing to an object of type String\n  Closest candidates are:\n    convert(::Type{String},
    !Matched::String) at ~/.conda/envs/polyglot/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    get_closest_vowel(word::String)\n     @ Main /tmp/tmpe2tc3ggl.jl:13\n   [2] macro
    expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpe2tc3ggl.jl:19 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpe2tc3ggl.jl:18\ntest set: Error
    During Test at /tmp/tmpe2tc3ggl.jl:20\n  Test threw exception\n  Expression: candidate("full")
    == "u"\n  MethodError: Cannot `convert` an object of type Nothing to an object
    of type String\n  Closest candidates are:\n    convert(::Type{String}, !Matched::String)
    at ~/.conda/envs/polyglot/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    get_closest_vowel(word::String)\n     @ Main /tmp/tmpe2tc3ggl.jl:13\n   [2] macro
    expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpe2tc3ggl.jl:20 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] to'
  timestamp: 1659822161
- exit_code: 1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ # code\nend\n@testset \"Basic Tests\" begin\n    @test get_closest_vowel(\"\
    kuyA\") == \"y\"\n    @test get_closest_vowel(\"kuyE\") == \"y\"\n    @test get_closest_vowel(\"\
    kuyI\") == \"y\"\n    @test get_closest_vowel(\"kuyO\") == \"y\"\n    @test get_closest_vowel(\"\
    kuyU\") == \"y\"\n    @test get_closest_vowel(\"kuEy\") == \"E\"\n    @test get_closest_vowel(\"\
    kuyA\") == \"y\"\n    @test get_closest_vowel(\"kuyL\") == \"\"\n    @test get_closest_vowel(\"\
    kuyLA\") == \"A\"\n    @test get_closest_vowel(\"kuyLE\") == \"E\"\n    @test\
    \ get_closest_vowel(\"kuyLI\") == \"I\"\n    @test get_closest_vowel(\"kuyLO\"\
    ) == \"O\"\n    @test get_closest_vowel(\"kuyLU\") == \"U\"\n    @test get_closest_vowel(\"\
    kuyLyAyAyAyAyAyAyAyAyAyAyAyAyAyAyAy\") == \"y\"\n    @test get_closest_vowel(\"\
    kuyLyAyAyAyAyAyAyAyAyAyAyAyAyAyAyAyA\") == \"A\"\n    @test get_closest_vowel(\"\
    kuyLyAyAyAyAyAyAyAyAyAyAyAyAyAyAyAyE\") == \"E\"\n    @test get_closest_vowel(\"\
    kuyLyAyAyAyAyAyAyAyAyAyAyAyAyAyAyAyI\") == \"I\"\n    @test get_closest_vowel(\"\
    kuyLyAyAyAyAyAyAyAyAyAyAyAyAyAyAyAyO\") == \"O\"\n    @test get_closest_vowel(\"\
    kuyLyAyAyAyAyAyAyAyAy\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\
    \t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\"\
    )\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\
    \t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t\
    @test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"\
    ba\") == \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\"\
    ) == \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\"\
    ) == \"o\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: cannot juxtapose string literal\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp7vyqsjdp.jl:39\nin expression starting at\
    \ /tmp/tmp7vyqsjdp.jl:39\n"
  stdout: ''
  timestamp: 1659822158
- exit_code: -1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ # Your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\
    \t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\"\
    )\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\
    \t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t\
    @test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"\
    ba\") == \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\"\
    ) == \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\"\
    ) == \"o\")\nend\n"
  status: Timeout
  stderr: 'b''ERROR: '''
  stdout: 'b''test set: Error During Test at /tmp/tmp3esykbtu.jl:19\n  Test threw
    exception\n  Expression: candidate("yogurt") == "u"\n  MethodError: Cannot `convert`
    an object of type Nothing to an object of type String\n  Closest candidates are:\n    convert(::Type{String},
    !Matched::String) at ~/.conda/envs/polyglot/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    get_closest_vowel(word::String)\n     @ Main /tmp/tmp3esykbtu.jl:13\n   [2] macro
    expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmp3esykbtu.jl:19 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmp3esykbtu.jl:18\ntest set: Error
    During Test at /tmp/tmp3esykbtu.jl:20\n  Test threw exception\n  Expression: candidate("full")
    == "u"\n  MethodError: Cannot `convert` an object of type Nothing to an object
    of type String\n  Closest candidates are:\n    convert(::Type{String}, !Matched::String)
    at ~/.conda/envs/polyglot/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    get_closest_vowel(word::String)\n     @ Main /tmp/tmp3esykbtu.jl:13\n   [2] macro
    expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmp3esykbtu.jl:20 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] to'
  timestamp: 1659822161
- exit_code: -1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \nend\n\
    using Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"\
    yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"\
    easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\"\
    ) == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\")\
    \ == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") ==\
    \ \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") ==\
    \ \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") ==\
    \ \"o\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmp5p_fwe_g.jl:18\n  Test threw
    exception\n  Expression: candidate("yogurt") == "u"\n  MethodError: Cannot `convert`
    an object of type Nothing to an object of type String\n  Closest candidates are:\n    convert(::Type{String},
    !Matched::String) at ~/.conda/envs/polyglot/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    get_closest_vowel(word::String)\n     @ Main /tmp/tmp5p_fwe_g.jl:12\n   [2] macro
    expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmp5p_fwe_g.jl:18 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmp5p_fwe_g.jl:17\ntest set: Error
    During Test at /tmp/tmp5p_fwe_g.jl:19\n  Test threw exception\n  Expression: candidate("full")
    == "u"\n  MethodError: Cannot `convert` an object of type Nothing to an object
    of type String\n  Closest candidates are:\n    convert(::Type{String}, !Matched::String)
    at ~/.conda/envs/polyglot/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    get_closest_vowel(word::String)\n     @ Main /tmp/tmp5p_fwe_g.jl:12\n   [2] macro
    expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmp5p_fwe_g.jl:19 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] to'
  timestamp: 1659822161
- exit_code: -1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n  \n\
    end\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"\
    yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"\
    easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\"\
    ) == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\")\
    \ == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") ==\
    \ \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") ==\
    \ \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") ==\
    \ \"o\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmptfsr80uf.jl:19\n  Test threw
    exception\n  Expression: candidate("yogurt") == "u"\n  MethodError: Cannot `convert`
    an object of type Nothing to an object of type String\n  Closest candidates are:\n    convert(::Type{String},
    !Matched::String) at ~/.conda/envs/polyglot/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    get_closest_vowel(word::String)\n     @ Main /tmp/tmptfsr80uf.jl:13\n   [2] macro
    expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmptfsr80uf.jl:19 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmptfsr80uf.jl:18\ntest set: Error
    During Test at /tmp/tmptfsr80uf.jl:20\n  Test threw exception\n  Expression: candidate("full")
    == "u"\n  MethodError: Cannot `convert` an object of type Nothing to an object
    of type String\n  Closest candidates are:\n    convert(::Type{String}, !Matched::String)
    at ~/.conda/envs/polyglot/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    get_closest_vowel(word::String)\n     @ Main /tmp/tmptfsr80uf.jl:13\n   [2] macro
    expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmptfsr80uf.jl:20 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] to'
  timestamp: 1659822161
- exit_code: 1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ chars = Set(\"aeiou\")\n    for (i, c) in enumerate(reverse(word))\n       \
    \ if i == 1\n            break\n        end\n        if c in chars\n         \
    \   return c\n        end\n    end\n    return \"\"\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"yogurt\") == \"\
    u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"easy\") == \"\
    \")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\") == \"\"\
    )\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\") == \"o\"\
    )\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") == \"\")\n\t\
    @test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") == \"i\")\n\t\
    @test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") == \"o\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpwc27i5zw.jl:25

    '
  stdout: "test set: Test Failed at /tmp/tmpwc27i5zw.jl:28\n  Expression: candidate(\"\
    yogurt\") == \"u\"\n   Evaluated: \"\" == \"u\"\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpwc27i5zw.jl:28 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpwc27i5zw.jl:27\ntest set: Test Failed at /tmp/tmpwc27i5zw.jl:29\n\
    \  Expression: candidate(\"full\") == \"u\"\n   Evaluated: \"\" == \"u\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwc27i5zw.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwc27i5zw.jl:27\ntest set: Test\
    \ Failed at /tmp/tmpwc27i5zw.jl:33\n  Expression: candidate(\"bad\") == \"a\"\n\
    \   Evaluated: \"\" == \"a\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwc27i5zw.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwc27i5zw.jl:27\ntest set: Test\
    \ Failed at /tmp/tmpwc27i5zw.jl:34\n  Expression: candidate(\"most\") == \"o\"\
    \n   Evaluated: \"\" == \"o\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwc27i5zw.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwc27i5zw.jl:27\ntest set: Test\
    \ Failed at /tmp/tmpwc27i5zw.jl:38\n  Expression: candidate(\"anime\") == \"i\"\
    \n   Evaluated: \"\" == \"i\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwc27i5zw.jl:38 [inlined]\n"
  timestamp: 1659822159
- exit_code: 1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ chars = split(word)\n    idx = 1\n    while idx <= length(chars)\n        char\
    \ = chars[end - idx + 1]\n        if (is_vowel(char))\n            return char\n\
    \        end\n        idx += 1\n    end\n    return \"\"\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"yogurt\"\
    ) == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"easy\"\
    ) == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\") ==\
    \ \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\") ==\
    \ \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") == \"\"\
    )\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") == \"i\"\
    )\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") == \"o\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 13 errored,
    0 broken.

    in expression starting at /tmp/tmp5tdcz17k.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmp5tdcz17k.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"yogurt\") == \"u\"\n  UndefVarError: is_vowel not defined\n\
    \  Stacktrace:\n   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmp5tdcz17k.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp5tdcz17k.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp5tdcz17k.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp5tdcz17k.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"full\") == \"u\"\n  UndefVarError: is_vowel not defined\n  Stacktrace:\n\
    \   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmp5tdcz17k.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp5tdcz17k.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp5tdcz17k.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp5tdcz17k.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"easy\") == \"\"\n  UndefVarError: is_vowel not defined\n  Stacktrace:\n\
    \   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmp5tdcz17k.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp5tdcz17k.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp5tdcz17k.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp5tdcz17k.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(\"eAsy\") == \"\"\n  UndefVarError: is_vowel not defined\n  Stacktrace:\n\
    \   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmp5tdcz17k.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test"
  timestamp: 1659822161
- exit_code: 1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ # Your function goes here!\n    return \"\"\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = get_closest_vowel;\n\t@test(candidate(\"yogurt\") == \"u\")\n\t\
    @test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"easy\") == \"\")\n\t\
    @test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"\
    bad\") == \"a\")\n\t@test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"\
    ab\") == \"\")\n\t@test(candidate(\"ba\") == \"\")\n\t@test(candidate(\"quick\"\
    ) == \"\")\n\t@test(candidate(\"anime\") == \"i\")\n\t@test(candidate(\"Asia\"\
    ) == \"\")\n\t@test(candidate(\"Above\") == \"o\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpa5kdpjtp.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpa5kdpjtp.jl:20\n  Expression: candidate(\"\
    yogurt\") == \"u\"\n   Evaluated: \"\" == \"u\"\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpa5kdpjtp.jl:20 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpa5kdpjtp.jl:19\ntest set: Test Failed at /tmp/tmpa5kdpjtp.jl:21\n\
    \  Expression: candidate(\"full\") == \"u\"\n   Evaluated: \"\" == \"u\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpa5kdpjtp.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpa5kdpjtp.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpa5kdpjtp.jl:25\n  Expression: candidate(\"bad\") == \"a\"\n\
    \   Evaluated: \"\" == \"a\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpa5kdpjtp.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpa5kdpjtp.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpa5kdpjtp.jl:26\n  Expression: candidate(\"most\") == \"o\"\
    \n   Evaluated: \"\" == \"o\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpa5kdpjtp.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpa5kdpjtp.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpa5kdpjtp.jl:30\n  Expression: candidate(\"anime\") == \"i\"\
    \n   Evaluated: \"\" == \"i\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpa5kdpjtp.jl:30 [inlined]\n"
  timestamp: 1659822159
- exit_code: 1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ # Your code here\n    return \"empty\"\nend\nusing Test\n\n@testset begin\n\n\
    candidate = get_closest_vowel;\n\t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"\
    full\") == \"u\")\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"\
    eAsy\") == \"\")\n\t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\"\
    ) == \"a\")\n\t@test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\")\
    \ == \"\")\n\t@test(candidate(\"ba\") == \"\")\n\t@test(candidate(\"quick\") ==\
    \ \"\")\n\t@test(candidate(\"anime\") == \"i\")\n\t@test(candidate(\"Asia\") ==\
    \ \"\")\n\t@test(candidate(\"Above\") == \"o\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 13 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpiv5mcb73.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpiv5mcb73.jl:20\n  Expression: candidate(\"\
    yogurt\") == \"u\"\n   Evaluated: \"empty\" == \"u\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpiv5mcb73.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpiv5mcb73.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpiv5mcb73.jl:21\n  Expression: candidate(\"full\") == \"u\"\
    \n   Evaluated: \"empty\" == \"u\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpiv5mcb73.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpiv5mcb73.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpiv5mcb73.jl:22\n  Expression: candidate(\"easy\") == \"\"\n\
    \   Evaluated: \"empty\" == \"\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpiv5mcb73.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpiv5mcb73.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpiv5mcb73.jl:23\n  Expression: candidate(\"eAsy\") == \"\"\n\
    \   Evaluated: \"empty\" == \"\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpiv5mcb73.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpiv5mcb73.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpiv5mcb73.jl:24\n  Expression: candidate(\"ali\") == \"\"\n\
    \   Evaluated: \"empty\" == \"\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpiv5mcb7"
  timestamp: 1659822159
- exit_code: -1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ a::Int64 = \"\"\n    for i = length(word):-1:1\n        if i == 1\n        \
    \    break\n        end\n        if (word[i] == \"a\" || word[i] == \"e\" || word[i]\
    \ == \"i\" || \n        word[i] == \"o\" || word[i] == \"u\") & (word[i-1] !=\
    \ \"a\" || word[i-1] != \"e\" || word[i-1] != \"i\" || \n        word[i-1] !=\
    \ \"o\" || word[i-1] != \"u\") & (word[i+1] != \"a\" || word[i+1] != \"e\" ||\
    \ word[i+1] != \"i\" || \n        word[i+1] != \"o\" || word[i+1] != \"u\")\n\
    \            a = word[i]\n            break\n        end\n    end\n    return\
    \ a\nend\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"\
    yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"\
    easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\"\
    ) == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\")\
    \ == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") ==\
    \ \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") ==\
    \ \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") ==\
    \ \"o\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpjmh60gte.jl:32\n  Test threw
    exception\n  Expression: candidate("yogurt") == "u"\n  MethodError: Cannot `convert`
    an object of type String to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},
    !Matched::Ptr) where T<:Integer at ~/.conda/envs/polyglot/share/julia/base/pointer.jl:23\n    convert(::Type{T},
    !Matched::T) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/number.jl:6\n    convert(::Type{T},
    !Matched::Number) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/number.jl:7\n    ...\n  Stacktrace:\n   [1]
    get_closest_vowel(word::String)\n     @ Main /tmp/tmpjmh60gte.jl:12\n   [2] macro
    expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpjmh60gte.jl:32 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpjmh60gte.jl:31\ntest set: Error
    During Test at /tmp/tmpjmh60gte.jl:33\n  Test threw exception\n  Expression: candidate("full")
    == "u"\n  MethodError: Cannot `convert` an object of type String to an object
    of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::Ptr)
    where T<:Integer at ~/.conda/envs/polyglot/share/julia/base/pointer.jl:23\n    convert(::Type{T},
    !Matched::T) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/number.jl:6\n    convert(::Type{T},
    !Matched::Number) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/number.jl:7\n    ...\n  Stacktrace:\n   [1]
    get_closest_vowel(word::String)\n     @ Main /tmp/tmpjmh60gte.jl:12\n   [2] macro
    expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpjmh60gte.jl:33 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpjmh60gte.jl:31\ntest set: Error
    During Test at /'
  timestamp: 1659822161
- exit_code: -1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ vowels = \"aeiou\"\n    for i = (length(word)):-1:1\n        if(findfirst(vowels,\
    \ word[i])!=nothing)\n            if(findfirst(vowels, word[i-1])==nothing &&\
    \ findfirst(vowels, word[i+1])==nothing)\n                return word[i]\n   \
    \         end\n        end\n    end\n    return \"\"\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"yogurt\") == \"\
    u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"easy\") == \"\
    \")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\") == \"\"\
    )\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\") == \"o\"\
    )\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") == \"\")\n\t\
    @test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") == \"i\")\n\t\
    @test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") == \"o\")\nend\n"
  status: Timeout
  stderr: 'b''ERROR: LoadError: '''
  stdout: 'b''test set: Error During Test at /tmp/tmpinncg98a.jl:27\n  Test threw
    exception\n  Expression: candidate("yogurt") == "u"\n  MethodError: no method
    matching findfirst(::String, ::Char)\n  Closest candidates are:\n    findfirst(!Matched::Function,
    ::Any) at ~/.conda/envs/polyglot/share/julia/base/array.jl:1994\n    findfirst(::AbstractString,
    !Matched::AbstractString) at ~/.conda/envs/polyglot/share/julia/base/strings/search.jl:104\n    findfirst(::Any)
    at ~/.conda/envs/polyglot/share/julia/base/array.jl:1910\n  Stacktrace:\n   [1]
    get_closest_vowel(word::String)\n     @ Main /tmp/tmpinncg98a.jl:14\n   [2] macro
    expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpinncg98a.jl:27 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpinncg98a.jl:26\ntest set: Error
    During Test at /tmp/tmpinncg98a.jl:28\n  Test threw exception\n  Expression: candidate("full")
    == "u"\n  MethodError: no method matching findfirst(::String, ::Char)\n  Closest
    candidates are:\n    findfirst(!Matched::Function, ::Any) at ~/.conda/envs/polyglot/share/julia/base/array.jl:1994\n    findfirst(::AbstractString,
    !Matched::AbstractString) at ~/.conda/envs/polyglot/share/julia/base/strings/search.jl:104\n    findfirst(::Any)
    at ~/.conda/envs/polyglot/share/julia/base/array.jl:1910\n  Stacktrace:\n   [1]
    get_closest_vowel(word::String)\n     @ Main /tmp/tmpinncg98a.jl:14\n   [2] macro
    expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpinncg98a.jl:28 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpinncg98a.jl:26\ntest set: Error
    During Test at /tmp/tmpinncg98a.jl:29\n  Test threw exception\n  Expression: candidate("easy")
    == ""\n  MethodError: no method matching findfi'
  timestamp: 1659822161
- exit_code: -1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ # code here\nend\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\
    \t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\"\
    )\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\
    \t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t\
    @test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"\
    ba\") == \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\"\
    ) == \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\"\
    ) == \"o\")\nend\n"
  status: Timeout
  stderr: 'b''ERROR: LoadError: '''
  stdout: 'b''test set: Error During Test at /tmp/tmpoeb8tnd8.jl:19\n  Test threw
    exception\n  Expression: candidate("yogurt") == "u"\n  MethodError: Cannot `convert`
    an object of type Nothing to an object of type String\n  Closest candidates are:\n    convert(::Type{String},
    !Matched::String) at ~/.conda/envs/polyglot/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    get_closest_vowel(word::String)\n     @ Main /tmp/tmpoeb8tnd8.jl:13\n   [2] macro
    expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpoeb8tnd8.jl:19 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpoeb8tnd8.jl:18\ntest set: Error
    During Test at /tmp/tmpoeb8tnd8.jl:20\n  Test threw exception\n  Expression: candidate("full")
    == "u"\n  MethodError: Cannot `convert` an object of type Nothing to an object
    of type String\n  Closest candidates are:\n    convert(::Type{String}, !Matched::String)
    at ~/.conda/envs/polyglot/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    get_closest_vowel(word::String)\n     @ Main /tmp/tmpoeb8tnd8.jl:13\n   [2] macro
    expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpoeb8tnd8.jl:20 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] to'
  timestamp: 1659822161
- exit_code: 1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ len = length(word)\n    for i in range(len, 1, -1)\n        if any([word[i]\
    \ in c for c in [\"a\", \"e\", \"i\", \"o\", \"u\"]])\n            if any([word[i-1]\
    \ in c for c in [\"a\", \"e\", \"i\", \"o\", \"u\"]])\n                continue\n\
    \            else\n                return word[i]\n            end\n        end\n\
    \    end\n    return \"\"\nend\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\
    \t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\"\
    )\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\
    \t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t\
    @test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"\
    ba\") == \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\"\
    ) == \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\"\
    ) == \"o\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 13 errored,
    0 broken.

    in expression starting at /tmp/tmpy_mrc_sm.jl:26

    '
  stdout: "test set: Error During Test at /tmp/tmpy_mrc_sm.jl:29\n  Test threw exception\n\
    \  Expression: candidate(\"yogurt\") == \"u\"\n  ArgumentError: range(6.0, stop=1.0,\
    \ length=-1): negative length\n  Stacktrace:\n    [1] _linspace1(#unused#::Type{Float64},\
    \ start::Float64, stop::Float64, len::Int64)\n      @ Base ./twiceprecision.jl:724\n\
    \    [2] _linspace(#unused#::Type{Float64}, start_n::Int64, stop_n::Int64, len::Int64,\
    \ den::Int64)\n      @ Base ./twiceprecision.jl:706\n    [3] _linspace\n     \
    \ @ ./twiceprecision.jl:703 [inlined]\n    [4] range_start_stop_length\n     \
    \ @ ./range.jl:529 [inlined]\n    [5] _range\n      @ ./range.jl:128 [inlined]\n\
    \    [6] range\n      @ ./range.jl:112 [inlined]\n    [7] get_closest_vowel(word::String)\n\
    \      @ Main /tmp/tmpy_mrc_sm.jl:13\n    [8] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [9] macro expansion\n      @ /tmp/tmpy_mrc_sm.jl:29 [inlined]\n\
    \   [10] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [11] top-level scope\n      @ /tmp/tmpy_mrc_sm.jl:28\ntest set:\
    \ Error During Test at /tmp/tmpy_mrc_sm.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"full\") == \"u\"\n  ArgumentError: range(4.0, stop=1.0, length=-1):\
    \ negative length\n  Stacktrace:\n    [1] _linspace1(#unused#::Type{Float64},\
    \ start::Float64, stop::Float64, len::Int64)\n      @ Base ./twiceprecision.jl:724\n\
    \    [2] _linspace(#unused#::Type{Float64}, start_n::Int64, stop_n::Int64, len::Int64,\
    \ den::Int64)\n      @ Base ./twiceprecision.jl:706\n    [3] _linspace\n     \
    \ @ ./twiceprecision.jl:703 [inlined]\n    [4] range_start_stop_length\n     \
    \ @ ./range.jl:529 [inlined]\n    [5] _range\n      @ ./range.jl:128 [inlined]\n\
    \    [6] range\n      @ ./range.jl:112 [inlined]\n    [7] get_closest_vowel(word::String)\n\
    \      @ Main /tmp/tmpy_mrc_sm.jl:13\n    [8] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [9] macro expansion\n      @ /tmp/tmpy_mrc_sm.jl:30 [inlined]\n\
    \   [10] macro expansion\n    "
  timestamp: 1659822161
- exit_code: 1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    if !is_consonant(word[end])\
    \ && !is_consonant(word[end-1]) #if the last two characters are not consonants\n\
    \        return \"\"\n    end\n    for (index, letter) in enumerate(word)\n  \
    \      if is_consonant(letter)\n            if !is_consonant(word[index+1]) #if\
    \ the next character is a vowel\n                return word[index+1]\n      \
    \      end\n        end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = get_closest_vowel;\n\t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"\
    full\") == \"u\")\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"\
    eAsy\") == \"\")\n\t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\"\
    ) == \"a\")\n\t@test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\")\
    \ == \"\")\n\t@test(candidate(\"ba\") == \"\")\n\t@test(candidate(\"quick\") ==\
    \ \"\")\n\t@test(candidate(\"anime\") == \"i\")\n\t@test(candidate(\"Asia\") ==\
    \ \"\")\n\t@test(candidate(\"Above\") == \"o\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 13 errored,
    0 broken.

    in expression starting at /tmp/tmpnqe937t1.jl:26

    '
  stdout: "test set: Error During Test at /tmp/tmpnqe937t1.jl:29\n  Test threw exception\n\
    \  Expression: candidate(\"yogurt\") == \"u\"\n  UndefVarError: is_consonant not\
    \ defined\n  Stacktrace:\n   [1] get_closest_vowel(word::String)\n     @ Main\
    \ /tmp/tmpnqe937t1.jl:13\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpnqe937t1.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpnqe937t1.jl:28\ntest set:\
    \ Error During Test at /tmp/tmpnqe937t1.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"full\") == \"u\"\n  UndefVarError: is_consonant not defined\n  Stacktrace:\n\
    \   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmpnqe937t1.jl:13\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpnqe937t1.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpnqe937t1.jl:28\ntest set:\
    \ Error During Test at /tmp/tmpnqe937t1.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(\"easy\") == \"\"\n  UndefVarError: is_consonant not defined\n  Stacktrace:\n\
    \   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmpnqe937t1.jl:13\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpnqe937t1.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpnqe937t1.jl:28\ntest set:\
    \ Error During Test at /tmp/tmpnqe937t1.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"eAsy\") == \"\"\n  UndefVarError: is_consonant not defined\n  Stacktrace:\n\
    \   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmpnqe937t1.jl:13\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/"
  timestamp: 1659822161
- exit_code: 1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ vowels = 'aeiou'\n    result = String[]\n    for (i, j) in enumerate(word)\n\
    \        if j in vowels\n            result = push!(result, j)\n        end\n\
    \    end\n    if length(result) == 0\n        return \"\"\n    elseif length(result)\
    \ == 1\n        return result[1]\n    else\n        return result[end-1]\n   \
    \ end\nend\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\t\
    @test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\
    \t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t\
    @test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"\
    most\") == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\"\
    ) == \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\"\
    ) == \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\"\
    ) == \"o\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmp0kol0fsr.jl:12\nin expression\
    \ starting at /tmp/tmp0kol0fsr.jl:12\n"
  stdout: ''
  timestamp: 1659822158
- exit_code: 1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ \"\"\"Return the closest vowel from the given word.\"\"\"\n    vowels = \"aeiou\"\
    \n    for i in eachindex(word)\n        if word[i] in vowels\n            if i\
    \ == 1\n                if word[i-1] in vowels\n                    return word[i]\n\
    \                else\n                    break\n            elseif i == length(word)\n\
    \                if word[i-1] in vowels\n                    return word[i]\n\
    \                else\n                    break\n            else\n         \
    \       if word[i-1] in vowels && word[i+1] in vowels\n                    return\
    \ word[i]\n                else\n                    break\n        end\n    end\n\
    \    return \"\"\nend\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\
    \t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\"\
    )\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\
    \t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t\
    @test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"\
    ba\") == \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\"\
    ) == \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\"\
    ) == \"o\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"if\" at /tmp/tmpc_hrx08c.jl:17 expected \"\
    end\", got \"elseif\"\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpc_hrx08c.jl:21\n\
    in expression starting at /tmp/tmpc_hrx08c.jl:21\n"
  stdout: ''
  timestamp: 1659822158
- exit_code: 1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ \"\"\"Returns the closest vowel that stands between two consonants from the\
    \ right side of the word (case sensitive).\n    Vowels in the beginning and ending\
    \ doesn't count. Return empty string if you didn't find any vowel met the above\
    \ condition. \n    \"\"\"\n    \n    vowels = 'aeiou'\n    word_array = collect(word)\n\
    \    word_size = length(word_array)\n    for i in 1:word_size\n        if word_array[word_size-i]\
    \ in vowels\n            if word_array[word_size-i-1] in vowels || i == word_size\n\
    \                return \"\"\n            else\n                return word_array[word_size-i]\n\
    \            end\n        end\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = get_closest_vowel;\n\t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"\
    full\") == \"u\")\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"\
    eAsy\") == \"\")\n\t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\"\
    ) == \"a\")\n\t@test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\")\
    \ == \"\")\n\t@test(candidate(\"ba\") == \"\")\n\t@test(candidate(\"quick\") ==\
    \ \"\")\n\t@test(candidate(\"anime\") == \"i\")\n\t@test(candidate(\"Asia\") ==\
    \ \"\")\n\t@test(candidate(\"Above\") == \"o\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmp09yi8o3i.jl:16\nin expression\
    \ starting at /tmp/tmp09yi8o3i.jl:16\n"
  stdout: ''
  timestamp: 1659822158
- exit_code: 1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ \n    for i in size(word)[1]:end:-1:1 # reverse iteration\n        \n      \
    \  if word[i] in (\"a\", \"e\", \"i\", \"o\", \"u\") && word[i-1] not in (\"a\"\
    , \"e\", \"i\", \"o\", \"u\") \n            return word[i]\n        end\n    end\n\
    using Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"\
    yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"\
    easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\"\
    ) == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\")\
    \ == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") ==\
    \ \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") ==\
    \ \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") ==\
    \ \"o\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: missing last argument in \"size(word)[1]:\" range\
    \ expression \nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpcf0kxe1q.jl:13\n\
    in expression starting at /tmp/tmpcf0kxe1q.jl:13\n"
  stdout: ''
  timestamp: 1659822158
- exit_code: 1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    for i in word\n        if\
    \ i in vowels\n            cnt = 0\n            for j in word\n              \
    \  if j in vowels\n                    cnt += 1\n                end\n       \
    \     end\n        end\n    end\n    if cnt > 1\n        return i\n    else\n\
    \        return \"\"\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = get_closest_vowel;\n\t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"\
    full\") == \"u\")\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"\
    eAsy\") == \"\")\n\t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\"\
    ) == \"a\")\n\t@test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\")\
    \ == \"\")\n\t@test(candidate(\"ba\") == \"\")\n\t@test(candidate(\"quick\") ==\
    \ \"\")\n\t@test(candidate(\"anime\") == \"i\")\n\t@test(candidate(\"Asia\") ==\
    \ \"\")\n\t@test(candidate(\"Above\") == \"o\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 13 errored,
    0 broken.

    in expression starting at /tmp/tmp40_29uaw.jl:31

    '
  stdout: "test set: Error During Test at /tmp/tmp40_29uaw.jl:34\n  Test threw exception\n\
    \  Expression: candidate(\"yogurt\") == \"u\"\n  UndefVarError: cnt not defined\n\
    \  Stacktrace:\n   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmp40_29uaw.jl:23\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp40_29uaw.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp40_29uaw.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp40_29uaw.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"full\") == \"u\"\n  UndefVarError: cnt not defined\n  Stacktrace:\n\
    \   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmp40_29uaw.jl:23\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp40_29uaw.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp40_29uaw.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp40_29uaw.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"easy\") == \"\"\n  UndefVarError: cnt not defined\n  Stacktrace:\n\
    \   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmp40_29uaw.jl:23\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp40_29uaw.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp40_29uaw.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp40_29uaw.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(\"eAsy\") == \"\"\n  UndefVarError: cnt not defined\n  Stacktrace:\n\
    \   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmp40_29uaw.jl:23\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [in"
  timestamp: 1659822161
- exit_code: -1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ index = -1\n    for i in reverse(1:length(word)-1)\n        if (word[i] in \"\
    aeiouAEIOU\") && (word[i+1] in \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    ) && (word[i-1] in \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\")\n         \
    \   index = i\n            break\n        end\n    end\n    if index > 0\n   \
    \     return word[index]\n    else\n        return \"\"\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"yogurt\"\
    ) == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"easy\"\
    ) == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\") ==\
    \ \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\") ==\
    \ \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") == \"\"\
    )\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") == \"i\"\
    )\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") == \"o\"\
    )\nend\n"
  status: Timeout
  stderr: 'b''ERROR: LoadError: '''
  stdout: 'b''test set: Error During Test at /tmp/tmpo2_9kapu.jl:30\n  Test threw
    exception\n  Expression: candidate("yogurt") == "u"\n  MethodError: Cannot `convert`
    an object of type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{String},
    !Matched::String) at ~/.conda/envs/polyglot/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    get_closest_vowel(word::String)\n     @ Main /tmp/tmpo2_9kapu.jl:20\n   [2] macro
    expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpo2_9kapu.jl:30 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpo2_9kapu.jl:29\ntest set: Error
    During Test at /tmp/tmpo2_9kapu.jl:31\n  Test threw exception\n  Expression: candidate("full")
    == "u"\n  MethodError: Cannot `convert` an object of type Char to an object of
    type String\n  Closest candidates are:\n    convert(::Type{String}, !Matched::String)
    at ~/.conda/envs/polyglot/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    get_closest_vowel(word::String)\n     @ Main /tmp/tmpo2_9kapu.jl:20\n   [2] macro
    expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpo2_9kapu.jl:31 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-leve'
  timestamp: 1659822161
- exit_code: 1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ vowels = \"aeiou\" \n    for i in eachindex(word) \n        if word[i] in vowels\
    \ \n            if i == 1 \n                return word[i] \n            elseif\
    \ i == length(word) \n                return word[i-1] \n            elseif word[i-1]\
    \ \u2209 vowels && word[i+1] \u2209 vowels \n                return word[i] \n\
    \            end \n        end \n    end \n    return \"\" \nend\n \n\"\"\"You\
    \ are given two arrays with integers. Write a function which finds a pair of \n\
    \    numbers (one from the first array, one from the second array), that their\
    \ sum is \n    the closest to zero possible, and return it.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"yogurt\") == \"\
    u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"easy\") == \"\
    \")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\") == \"\"\
    )\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\") == \"o\"\
    )\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") == \"\")\n\t\
    @test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") == \"i\")\n\t\
    @test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") == \"o\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmptb0eb3ns.jl:27\nin expression starting at\
    \ /tmp/tmptb0eb3ns.jl:27\n"
  stdout: ''
  timestamp: 1659822158
- exit_code: 1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ if word == \"\"\n        return \"\"\n    end\n    ## Counting the length of\
    \ the word\n    N = length(word)\n    ## Searching the \"consonant - vowel - consonant\"\
    \ sequence from the end of the word\n    for i in 1:N-2\n        if ( isconsonant(word[N-i])\
    \ && isvowel(word[N-i+1]) && isconsonant(word[N-i+2]) )\n            return word[N-i+1]\n\
    \        end\n    end\n    ## If there is no \"consonant - vowel - consonant\"\
    \ sequence return empty string\n    return \"\"\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = get_closest_vowel;\n\t@test(candidate(\"yogurt\") == \"u\")\n\t\
    @test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"easy\") == \"\")\n\t\
    @test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"\
    bad\") == \"a\")\n\t@test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"\
    ab\") == \"\")\n\t@test(candidate(\"ba\") == \"\")\n\t@test(candidate(\"quick\"\
    ) == \"\")\n\t@test(candidate(\"anime\") == \"i\")\n\t@test(candidate(\"Asia\"\
    ) == \"\")\n\t@test(candidate(\"Above\") == \"o\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 11 errored,
    0 broken.

    in expression starting at /tmp/tmpxhcyemsk.jl:28

    '
  stdout: "test set: Error During Test at /tmp/tmpxhcyemsk.jl:31\n  Test threw exception\n\
    \  Expression: candidate(\"yogurt\") == \"u\"\n  UndefVarError: isconsonant not\
    \ defined\n  Stacktrace:\n   [1] get_closest_vowel(word::String)\n     @ Main\
    \ /tmp/tmpxhcyemsk.jl:19\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxhcyemsk.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxhcyemsk.jl:30\ntest set:\
    \ Error During Test at /tmp/tmpxhcyemsk.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"full\") == \"u\"\n  UndefVarError: isconsonant not defined\n  Stacktrace:\n\
    \   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmpxhcyemsk.jl:19\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxhcyemsk.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxhcyemsk.jl:30\ntest set:\
    \ Error During Test at /tmp/tmpxhcyemsk.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(\"easy\") == \"\"\n  UndefVarError: isconsonant not defined\n  Stacktrace:\n\
    \   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmpxhcyemsk.jl:19\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxhcyemsk.jl:33 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxhcyemsk.jl:30\ntest set:\
    \ Error During Test at /tmp/tmpxhcyemsk.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"eAsy\") == \"\"\n  UndefVarError: isconsonant not defined\n  Stacktrace:\n\
    \   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmpxhcyemsk.jl:19\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdl"
  timestamp: 1659822162
- exit_code: -1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ # your code goes here\nend\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\
    \t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\"\
    )\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\
    \t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t\
    @test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"\
    ba\") == \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\"\
    ) == \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\"\
    ) == \"o\")\nend\n"
  status: Timeout
  stderr: 'b''ERROR: LoadError: '''
  stdout: 'b''test set: Error During Test at /tmp/tmpot9yfudg.jl:19\n  Test threw
    exception\n  Expression: candidate("yogurt") == "u"\n  MethodError: Cannot `convert`
    an object of type Nothing to an object of type String\n  Closest candidates are:\n    convert(::Type{String},
    !Matched::String) at ~/.conda/envs/polyglot/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    get_closest_vowel(word::String)\n     @ Main /tmp/tmpot9yfudg.jl:13\n   [2] macro
    expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpot9yfudg.jl:19 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpot9yfudg.jl:18\ntest set: Error
    During Test at /tmp/tmpot9yfudg.jl:20\n  Test threw exception\n  Expression: candidate("full")
    == "u"\n  MethodError: Cannot `convert` an object of type Nothing to an object
    of type String\n  Closest candidates are:\n    convert(::Type{String}, !Matched::String)
    at ~/.conda/envs/polyglot/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    get_closest_vowel(word::String)\n     @ Main /tmp/tmpot9yfudg.jl:13\n   [2] macro
    expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpot9yfudg.jl:20 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] to'
  timestamp: 1659822163
- exit_code: 1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ end\nend\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\t\
    @test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\
    \t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t\
    @test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"\
    most\") == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\"\
    ) == \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\"\
    ) == \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\"\
    ) == \"o\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"end\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp1r2xcj5m.jl:13\nin expression starting at /tmp/tmp1r2xcj5m.jl:13\n"
  stdout: ''
  timestamp: 1659822160
- exit_code: 1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   #an\
    \ array to hold the vowels\n    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n\
    \    #a variable to hold the index of the first vowel from the right side of the\
    \ string that is not at the end of the string.\n    closest_vowel_index = 0 \n\
    \    #a variable to hold the index of the first consonant from the right side\
    \ of the string that is not at the end of the string.\n    closest_consonant_index\
    \ = 0 \n    #a variable to hold the distance between the vowel and the consonant\n\
    \    distance = 0\n    #a variable to hold the shortest distance between the vowels\
    \ and the consonants\n    shortest_distance = length(word)\n    #a variable to\
    \ hold the index of the first vowel from the right side of the string that is\
    \ not at the end of the string that gives the shortest distance between the vowels\
    \ and the consonants.\n    shortest_distance_vowel_index = 0 \n    #a variable\
    \ to hold the index of the first consonant from the right side of the string that\
    \ is not at the end of the string that gives the shortest distance between the\
    \ vowels and the consonants.\n    shortest_distance_consonant_index = 0 \n   \
    \ #a variable to hold the closest vowel that stands between two consonants.\n\
    \    closest_vowel = \"\"\n    #loop through the string\n    for i in 1:length(word)\n\
    \        #check if the current char is a vowel\n        if any(word[i] == letter\
    \ for letter in vowels)\n            #check if the current char is not at the\
    \ end of the string.\n            if i < length(word)\n                #check\
    \ if the next char is a consonant\n                if word[i+1] != \"a\" && word[i+1]\
    \ != \"e\" && word[i+1] != \"i\" && word[i+1] != \"o\" && word[i+1] != \"u\"\n\
    \                    #check if the current char is not at the beginning of the\
    \ string.\n                    if i > 1\n                        #check if the\
    \ previous char is a consonant\n                        if word[i-1] != \"a\"\
    \ && word[i-1] != \"e\" && word[i-1]\nusing Test\n\n@testset begin\n\ncandidate\
    \ = get_closest_vowel;\n\t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"\
    full\") == \"u\")\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"\
    eAsy\") == \"\")\n\t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\"\
    ) == \"a\")\n\t@test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\")\
    \ == \"\")\n\t@test(candidate(\"ba\") == \"\")\n\t@test(candidate(\"quick\") ==\
    \ \"\")\n\t@test(candidate(\"anime\") == \"i\")\n\t@test(candidate(\"Asia\") ==\
    \ \"\")\n\t@test(candidate(\"Above\") == \"o\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp612ym4y7.jl:1\nin expression starting at /tmp/tmp612ym4y7.jl:1\n"
  stdout: ''
  timestamp: 1659822160
- exit_code: 1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ \"\"\"\n    >>> get_closest_vowel(\"aaa\")\n    \"\"\n    >>> get_closest_vowel(\"\
    abcd\")\n    \"a\"\n    >>> get_closest_vowel(\"bbcc\")\n    \"\"\n    >>> get_closest_vowel(\"\
    samsung\")\n    \"u\"\n    >>> get_closest_vowel(\"apple\")\n    \"e\"\n    >>>\
    \ get_closest_vowel(\"fever\")\n    \"e\"\n    >>> get_closest_vowel(\"fbcd\"\
    )\n    \"e\"\n    >>> get_closest_vowel(\"fuzzy\")\n    \"u\"\n    >>> get_closest_vowel(\"\
    fluffy\")\n    \"u\"\n    >>> get_closest_vowel(\"powerhouse\")\n    \"o\"\n \
    \   >>> get_closest_vowel(\"firefight\")\n    \"i\"\n    >>> get_closest_vowel(\"\
    elegant\")\n    \"e\"\n    >>> get_closest_vowel(\"e\")\n    \"\"\n    >>> get_closest_vowel(\"\
    \")\n    \"\"\n    \"\"\"\n    @assert set(word) <= set(\"qwertyuiopasdfghjklzxcvbnm\"\
    ) \"Assumption violation\"\n    # YOUR CODE HERE\nusing Test\n\n@testset begin\n\
    \ncandidate = get_closest_vowel;\n\t@test(candidate(\"yogurt\") == \"u\")\n\t\
    @test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"easy\") == \"\")\n\t\
    @test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"\
    bad\") == \"a\")\n\t@test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"\
    ab\") == \"\")\n\t@test(candidate(\"ba\") == \"\")\n\t@test(candidate(\"quick\"\
    ) == \"\")\n\t@test(candidate(\"anime\") == \"i\")\n\t@test(candidate(\"Asia\"\
    ) == \"\")\n\t@test(candidate(\"Above\") == \"o\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpcczgonf6.jl:11\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpcczgonf6.jl:1\n\
    in expression starting at /tmp/tmpcczgonf6.jl:1\n"
  stdout: ''
  timestamp: 1659822160
- exit_code: 1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ # check if all letters are alphabetical, you may assume that the given string\
    \ \n    # contains English letter only.\n    if isalpha(word) == false\n     \
    \   return \"Please check if your input contains English letter only\"\n    end\n\
    \    \n    # find letters that are vowels\n    vowels = findall(x -> isvowel(x),\
    \ word)\n    \n    # find letters that are not vowels\n    consonants = findall(x\
    \ -> isvowel(x) == false, word)\n    \n    # find the places of the vowels in\
    \ the string\n    vowel_indices = findall(x -> isvowel(x), word)\n    \n    #\
    \ find the places of the consonants in the string\n    consonant_indices = findall(x\
    \ -> isvowel(x) == false, word)\n    \n    # find the places where consonants\
    \ are followed by vowels\n    if length(consonant_indices) != 0\n        consonant_before_vowel\
    \ = []\n        for i = 1:length(consonant_indices)\n            if isempty(findfirst(x\
    \ -> x == consonant_indices[i]+1, vowel_indices)) == false\n                push!(consonant_before_vowel,\
    \ consonant_indices[i])\n            end\n        end\n        \n        # find\
    \ the places where vowels are followed by consonants\n        vowel_before_consonant\
    \ = []\n        for i = 1:length(vowel_indices)\n            if isempty(findfirst(x\
    \ -> x == vowel_indices[i]+1, consonant_indices)) == false\n                push!(vowel_before_consonant,\
    \ vowel_indices[i])\n            end\n        end\n        \n        # if both\
    \ consonant and vowel are found\n        if length(consonant_before_vowel) !=\
    \ 0 && length(vowel_before_consonant) != 0\n            # find the closest vowel\
    \ before consonant\n            closest_before = vowel_before_consonant[end]\n\
    \            for i = 1:length(vowel_before_consonant)\n                if vowel_before_consonant\n\
    using Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"\
    yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"\
    easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\"\
    ) == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\")\
    \ == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") ==\
    \ \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") ==\
    \ \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") ==\
    \ \"o\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpta37g05r.jl:1\nin expression starting at /tmp/tmpta37g05r.jl:1\n"
  stdout: ''
  timestamp: 1659822160
- exit_code: 1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ \n    vowels = [i for i in word if i in \"aeiouAEIOU\"]\n    num_consonants\
    \ = len(word) - len(vowels)\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\
    \t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\"\
    )\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\
    \t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t\
    @test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"\
    ba\") == \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\"\
    ) == \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\"\
    ) == \"o\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpfqrb4ca5.jl:11\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpfqrb4ca5.jl:1\n\
    in expression starting at /tmp/tmpfqrb4ca5.jl:1\n"
  stdout: ''
  timestamp: 1659822160
- exit_code: 1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\
    \t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\"\
    )\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\
    \t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t\
    @test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"\
    ba\") == \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\"\
    ) == \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\"\
    ) == \"o\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 13 errored,
    0 broken.

    in expression starting at /tmp/tmpi_xktovb.jl:16

    '
  stdout: "test set: Error During Test at /tmp/tmpi_xktovb.jl:19\n  Test threw exception\n\
    \  Expression: candidate(\"yogurt\") == \"u\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at ~/.conda/envs/polyglot/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmpi_xktovb.jl:13\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpi_xktovb.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpi_xktovb.jl:18\ntest set:\
    \ Error During Test at /tmp/tmpi_xktovb.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"full\") == \"u\"\n  MethodError: Cannot `convert` an object of type\
    \ Nothing to an object of type String\n  Closest candidates are:\n    convert(::Type{String},\
    \ !Matched::String) at ~/.conda/envs/polyglot/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmpi_xktovb.jl:13\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpi_xktovb.jl:20 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpi_xktovb.jl"
  timestamp: 1659822164
- exit_code: -1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ \"\"\"Return the closest vowel to the right of the word.\"\"\"\n    vowels =\
    \ \"aeiouAEIOU\"\n    cons = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n\
    \    position = 0\n    for i in 1:length(word)\n        position = i+1\n     \
    \   if occursin(word[end-i],vowels) && occursin(word[end-position],cons)\n   \
    \         return word[end-i]\n        end\n    end\n    return \"\"\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"\
    yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"\
    easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\"\
    ) == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\")\
    \ == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") ==\
    \ \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") ==\
    \ \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") ==\
    \ \"o\")\nend\n"
  status: Timeout
  stderr: 'b''ERROR: '''
  stdout: 'b''test set: Error During Test at /tmp/tmplhapmdbb.jl:29\n  Test threw
    exception\n  Expression: candidate("yogurt") == "u"\n  MethodError: Cannot `convert`
    an object of type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{String},
    !Matched::String) at ~/.conda/envs/polyglot/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    get_closest_vowel(word::String)\n     @ Main /tmp/tmplhapmdbb.jl:19\n   [2] macro
    expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmplhapmdbb.jl:29 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmplhapmdbb.jl:28\ntest set: Error
    During Test at /tmp/tmplhapmdbb.jl:30\n  Test threw exception\n  Expression: candidate("full")
    == "u"\n  MethodError: Cannot `convert` an object of type Char to an object of
    type String\n  Closest candidates are:\n    convert(::Type{String}, !Matched::String)
    at ~/.conda/envs/polyglot/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    get_closest_vowel(word::String)\n     @ Main /tmp/tmplhapmdbb.jl:19\n   [2] macro
    expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmplhapmdbb.jl:30 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-leve'
  timestamp: 1659822164
- exit_code: 1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ const vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    result = \"\"\n    for\
    \ i in length(word)::Int\n        if word[i] in vowels\n            result = word[i]\n\
    \            break\n        end\n    end\n    return result\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"yogurt\"\
    ) == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"easy\"\
    ) == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\") ==\
    \ \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\") ==\
    \ \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") == \"\"\
    )\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") == \"i\"\
    )\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") == \"o\"\
    )\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unsupported `const` declaration on local variable\
    \ around /tmp/tmptybb1imz.jl:12\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmptybb1imz.jl:1\n\
    in expression starting at /tmp/tmptybb1imz.jl:1\n"
  stdout: ''
  timestamp: 1659822161
- exit_code: 1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ word = reverse(word)\n    for (i, char) in enumerate(word)\n        if isvowel(char)\n\
    \            if isconsonant(word[i + 1])\n                return char\n      \
    \      end\n        end\n    end\n    return \"\"\nend\n \n    \nusing Test\n\n\
    @testset begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"yogurt\"\
    ) == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"easy\"\
    ) == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\") ==\
    \ \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\") ==\
    \ \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") == \"\"\
    )\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") == \"i\"\
    )\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") == \"o\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 13 errored,
    0 broken.

    in expression starting at /tmp/tmpa87if_jk.jl:26

    '
  stdout: "test set: Error During Test at /tmp/tmpa87if_jk.jl:29\n  Test threw exception\n\
    \  Expression: candidate(\"yogurt\") == \"u\"\n  UndefVarError: isvowel not defined\n\
    \  Stacktrace:\n   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmpa87if_jk.jl:14\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpa87if_jk.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpa87if_jk.jl:28\ntest set:\
    \ Error During Test at /tmp/tmpa87if_jk.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"full\") == \"u\"\n  UndefVarError: isvowel not defined\n  Stacktrace:\n\
    \   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmpa87if_jk.jl:14\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpa87if_jk.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpa87if_jk.jl:28\ntest set:\
    \ Error During Test at /tmp/tmpa87if_jk.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(\"easy\") == \"\"\n  UndefVarError: isvowel not defined\n  Stacktrace:\n\
    \   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmpa87if_jk.jl:14\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpa87if_jk.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpa87if_jk.jl:28\ntest set:\
    \ Error During Test at /tmp/tmpa87if_jk.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"eAsy\") == \"\"\n  UndefVarError: isvowel not defined\n  Stacktrace:\n\
    \   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmpa87if_jk.jl:14\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src"
  timestamp: 1659822164
- exit_code: -1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ l_word = lowercase(word)\n    a,e,i,o,u = 'a','e','i','o','u'\n    for letter\
    \ in l_word\n        if letter == a || letter == e || letter == i || letter ==\
    \ o || letter == u\n            return letter\n        end\n    end\n    return\
    \ \"\"\nend\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\t\
    @test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\
    \t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t\
    @test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"\
    most\") == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\"\
    ) == \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\"\
    ) == \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\"\
    ) == \"o\")\nend\n"
  status: Timeout
  stderr: 'b''ERROR: LoadError: '''
  stdout: 'b''test set: Error During Test at /tmp/tmp23ibh6gh.jl:26\n  Test threw
    exception\n  Expression: candidate("yogurt") == "u"\n  MethodError: Cannot `convert`
    an object of type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{String},
    !Matched::String) at ~/.conda/envs/polyglot/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    get_closest_vowel(word::String)\n     @ Main /tmp/tmp23ibh6gh.jl:16\n   [2] macro
    expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmp23ibh6gh.jl:26 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmp23ibh6gh.jl:25\ntest set: Error
    During Test at /tmp/tmp23ibh6gh.jl:27\n  Test threw exception\n  Expression: candidate("full")
    == "u"\n  MethodError: Cannot `convert` an object of type Char to an object of
    type String\n  Closest candidates are:\n    convert(::Type{String}, !Matched::String)
    at ~/.conda/envs/polyglot/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    get_closest_vowel(word::String)\n     @ Main /tmp/tmp23ibh6gh.jl:16\n   [2] macro
    expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmp23ibh6gh.jl:27 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-leve'
  timestamp: 1659822165
- exit_code: 1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ if(length(word) == 0)\n        return \"\"\n    end\n    for i in reverse(1:length(word))\n\
    \        if(isvowel(word[i]))\n            for j in reverse(1:i)\n           \
    \     if(!isvowel(word[j]))\n                    return word[i]\n            \
    \    end\n            end\n        end\n    end\n    return \"\"\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"yogurt\"\
    ) == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"easy\"\
    ) == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\") ==\
    \ \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\") ==\
    \ \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") == \"\"\
    )\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") == \"i\"\
    )\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") == \"o\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 13 errored,
    0 broken.

    in expression starting at /tmp/tmp49zpa3x3.jl:28

    '
  stdout: "test set: Error During Test at /tmp/tmp49zpa3x3.jl:31\n  Test threw exception\n\
    \  Expression: candidate(\"yogurt\") == \"u\"\n  UndefVarError: isvowel not defined\n\
    \  Stacktrace:\n   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmp49zpa3x3.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp49zpa3x3.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp49zpa3x3.jl:30\ntest set:\
    \ Error During Test at /tmp/tmp49zpa3x3.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"full\") == \"u\"\n  UndefVarError: isvowel not defined\n  Stacktrace:\n\
    \   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmp49zpa3x3.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp49zpa3x3.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp49zpa3x3.jl:30\ntest set:\
    \ Error During Test at /tmp/tmp49zpa3x3.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(\"easy\") == \"\"\n  UndefVarError: isvowel not defined\n  Stacktrace:\n\
    \   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmp49zpa3x3.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp49zpa3x3.jl:33 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp49zpa3x3.jl:30\ntest set:\
    \ Error During Test at /tmp/tmp49zpa3x3.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"eAsy\") == \"\"\n  UndefVarError: isvowel not defined\n  Stacktrace:\n\
    \   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmp49zpa3x3.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src"
  timestamp: 1659822164
- exit_code: -1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ # your code\nend\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\
    \t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\"\
    )\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\
    \t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t\
    @test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"\
    ba\") == \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\"\
    ) == \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\"\
    ) == \"o\")\nend\n"
  status: Timeout
  stderr: 'b''ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 13 errored,
    0 broken.\nin expression starting at /tmp/tmpk8r6f76g.jl:16\n'''
  stdout: 'b''test set: Error During Test at /tmp/tmpk8r6f76g.jl:19\n  Test threw
    exception\n  Expression: candidate("yogurt") == "u"\n  MethodError: Cannot `convert`
    an object of type Nothing to an object of type String\n  Closest candidates are:\n    convert(::Type{String},
    !Matched::String) at ~/.conda/envs/polyglot/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    get_closest_vowel(word::String)\n     @ Main /tmp/tmpk8r6f76g.jl:13\n   [2] macro
    expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpk8r6f76g.jl:19 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpk8r6f76g.jl:18\ntest set: Error
    During Test at /tmp/tmpk8r6f76g.jl:20\n  Test threw exception\n  Expression: candidate("full")
    == "u"\n  MethodError: Cannot `convert` an object of type Nothing to an object
    of type String\n  Closest candidates are:\n    convert(::Type{String}, !Matched::String)
    at ~/.conda/envs/polyglot/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    get_closest_vowel(word::String)\n     @ Main /tmp/tmpk8r6f76g.jl:13\n   [2] macro
    expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpk8r6f76g.jl:20 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] to'
  timestamp: 1659822165
- exit_code: 1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ # functions to be used\n    function isvowel(word::Char)::Int\n        if(word\
    \ == 'a'||word == 'e'||word == 'i'||word == 'o'||word == 'u')\n            return\
    \ 1\n        else\n            return 0\n        end\n    end\n    function isconsonant(word::Char)::Int\n\
    \        if(word == 'a'||word == 'e'||word == 'i'||word == 'o'||word == 'u')\n\
    \            return 0\n        else\n            return 1\n        end\n    end\n\
    \    function firstconsonant(word::String)::Int\n        j = 0\n        for i\
    \ = 1:length(word)\n            if(isconsonant(word[i]) == 1)\n              \
    \  j = i\n                break\n            end\n        end\n        return\
    \ j\n    end\n    # main program\n    v = 0\n    l = 0\n    c = 0\n    result\
    \ = \"\"\n    for i = 1:length(word)\n        if(isvowel(word[i]) == 1)\n    \
    \        if(v == 0)\n                l = i\n                v = 1\n          \
    \  else\n                c = i\n                break\n            end\n     \
    \   end\n    end\n    if(c == 0)\n        return \"\"\n    else\n        #print(l,c)\n\
    \        for i = 1:c-l-1\n            if(isvowel(word[c-i]) == 1)\n          \
    \      result = word[c-i]\n                break\n            end\n        end\n\
    \        if(result == \"\")\n            return \"\"\n        else\n         \
    \   return result\n        end\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = get_closest_vowel;\n\t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"\
    full\") == \"u\")\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"\
    eAsy\") == \"\")\n\t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\"\
    ) == \"a\")\n\t@test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\")\
    \ == \"\")\n\t@test(candidate(\"ba\") == \"\")\n\t@test(candidate(\"quick\") ==\
    \ \"\")\n\t@test(candidate(\"anime\") == \"i\")\n\t@test(candidate(\"Asia\") ==\
    \ \"\")\n\t@test(candidate(\"Above\") == \"o\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp87qrznr7.jl:72

    '
  stdout: "test set: Test Failed at /tmp/tmp87qrznr7.jl:75\n  Expression: candidate(\"\
    yogurt\") == \"u\"\n   Evaluated: \"\" == \"u\"\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp87qrznr7.jl:75 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp87qrznr7.jl:74\ntest set: Test Failed at /tmp/tmp87qrznr7.jl:76\n\
    \  Expression: candidate(\"full\") == \"u\"\n   Evaluated: \"\" == \"u\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp87qrznr7.jl:76 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp87qrznr7.jl:74\ntest set: Test\
    \ Failed at /tmp/tmp87qrznr7.jl:80\n  Expression: candidate(\"bad\") == \"a\"\n\
    \   Evaluated: \"\" == \"a\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp87qrznr7.jl:80 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp87qrznr7.jl:74\ntest set: Test\
    \ Failed at /tmp/tmp87qrznr7.jl:81\n  Expression: candidate(\"most\") == \"o\"\
    \n   Evaluated: \"\" == \"o\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp87qrznr7.jl:81 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp87qrznr7.jl:74\ntest set: Test\
    \ Failed at /tmp/tmp87qrznr7.jl:85\n  Expression: candidate(\"anime\") == \"i\"\
    \n   Evaluated: \"\" == \"i\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp87qrznr7.jl:85 [inlined]\n"
  timestamp: 1659822162
- exit_code: -1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \nend\n\
    using Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"\
    yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"\
    easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\"\
    ) == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\")\
    \ == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") ==\
    \ \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") ==\
    \ \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") ==\
    \ \"o\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmp5p_fwe_g.jl:18\n  Test threw
    exception\n  Expression: candidate("yogurt") == "u"\n  MethodError: Cannot `convert`
    an object of type Nothing to an object of type String\n  Closest candidates are:\n    convert(::Type{String},
    !Matched::String) at ~/.conda/envs/polyglot/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    get_closest_vowel(word::String)\n     @ Main /tmp/tmp5p_fwe_g.jl:12\n   [2] macro
    expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmp5p_fwe_g.jl:18 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmp5p_fwe_g.jl:17\ntest set: Error
    During Test at /tmp/tmp5p_fwe_g.jl:19\n  Test threw exception\n  Expression: candidate("full")
    == "u"\n  MethodError: Cannot `convert` an object of type Nothing to an object
    of type String\n  Closest candidates are:\n    convert(::Type{String}, !Matched::String)
    at ~/.conda/envs/polyglot/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    get_closest_vowel(word::String)\n     @ Main /tmp/tmp5p_fwe_g.jl:12\n   [2] macro
    expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmp5p_fwe_g.jl:19 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] to'
  timestamp: 1659822161
- exit_code: 1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ right_vowels = []\n    right_consonants = []\n    for letter in word\n     \
    \   # push to list of vowels\n        if isvowel(letter)\n            push!(right_vowels,\
    \ letter)\n        # push to list of consonants\n        else\n            push!(right_consonants,\
    \ letter)\n        end\n    end\n    # return empty string if no vowels were found\n\
    \    if length(right_vowels) == 0\n        return \"\"\n    end\n    # return\
    \ first vowel if only vowels were found\n    if length(right_consonants) == 0\n\
    \        return right_vowels[1]\n    end\n    # get the rightmost consonant\n\
    \    right_consonant = right_consonants[length(right_consonants)]\n    # get the\
    \ index of the rightmost consonant in the word\n    right_consonant_index = findfirst(word,\
    \ right_consonant)\n    # find the closest vowel to the right of the rightmost\
    \ consonant\n    for vowel in right_vowels\n        vowel_index = findfirst(word,\
    \ vowel)\n        if vowel_index > right_consonant_index\n            return vowel\n\
    \        end\n    end\n    # if there are no vowels to the right of the rightmost\
    \ consonant, return empty string\n    return \"\"\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"yogurt\") == \"\
    u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"easy\") == \"\
    \")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\") == \"\"\
    )\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\") == \"o\"\
    )\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") == \"\")\n\t\
    @test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") == \"i\")\n\t\
    @test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") == \"o\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 13 errored,
    0 broken.

    in expression starting at /tmp/tmpgqpmr0lp.jl:47

    '
  stdout: "test set: Error During Test at /tmp/tmpgqpmr0lp.jl:50\n  Test threw exception\n\
    \  Expression: candidate(\"yogurt\") == \"u\"\n  UndefVarError: isvowel not defined\n\
    \  Stacktrace:\n   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmpgqpmr0lp.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpgqpmr0lp.jl:50 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpgqpmr0lp.jl:49\ntest set:\
    \ Error During Test at /tmp/tmpgqpmr0lp.jl:51\n  Test threw exception\n  Expression:\
    \ candidate(\"full\") == \"u\"\n  UndefVarError: isvowel not defined\n  Stacktrace:\n\
    \   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmpgqpmr0lp.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpgqpmr0lp.jl:51 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpgqpmr0lp.jl:49\ntest set:\
    \ Error During Test at /tmp/tmpgqpmr0lp.jl:52\n  Test threw exception\n  Expression:\
    \ candidate(\"easy\") == \"\"\n  UndefVarError: isvowel not defined\n  Stacktrace:\n\
    \   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmpgqpmr0lp.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpgqpmr0lp.jl:52 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpgqpmr0lp.jl:49\ntest set:\
    \ Error During Test at /tmp/tmpgqpmr0lp.jl:53\n  Test threw exception\n  Expression:\
    \ candidate(\"eAsy\") == \"\"\n  UndefVarError: isvowel not defined\n  Stacktrace:\n\
    \   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmpgqpmr0lp.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src"
  timestamp: 1659822165
- exit_code: 1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ # your code here\n    letters = split(word)\n    if length(letters) > 1\n  \
    \      for i in 1:length(letters)\n            if length(word) > 1\n         \
    \       if i < length(letters) - 1\n                    if isconsonant(letters[i])\n\
    \                        if isconsonant(letters[i+1])\n                      \
    \      if isvowel(letters[i+2])\n                                return letters[i+2]\n\
    \                            end\n                        end\n              \
    \      end\n                end\n            end\n        end\n    end\n    return\
    \ \"\"\nend\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\t\
    @test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\
    \t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t\
    @test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"\
    most\") == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\"\
    ) == \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\"\
    ) == \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\"\
    ) == \"o\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp2fi3xxxx.jl:33

    '
  stdout: "test set: Test Failed at /tmp/tmp2fi3xxxx.jl:36\n  Expression: candidate(\"\
    yogurt\") == \"u\"\n   Evaluated: \"\" == \"u\"\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp2fi3xxxx.jl:36 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp2fi3xxxx.jl:35\ntest set: Test Failed at /tmp/tmp2fi3xxxx.jl:37\n\
    \  Expression: candidate(\"full\") == \"u\"\n   Evaluated: \"\" == \"u\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2fi3xxxx.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2fi3xxxx.jl:35\ntest set: Test\
    \ Failed at /tmp/tmp2fi3xxxx.jl:41\n  Expression: candidate(\"bad\") == \"a\"\n\
    \   Evaluated: \"\" == \"a\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2fi3xxxx.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2fi3xxxx.jl:35\ntest set: Test\
    \ Failed at /tmp/tmp2fi3xxxx.jl:42\n  Expression: candidate(\"most\") == \"o\"\
    \n   Evaluated: \"\" == \"o\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2fi3xxxx.jl:42 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2fi3xxxx.jl:35\ntest set: Test\
    \ Failed at /tmp/tmp2fi3xxxx.jl:46\n  Expression: candidate(\"anime\") == \"i\"\
    \n   Evaluated: \"\" == \"i\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2fi3xxxx.jl:46 [inlined]\n"
  timestamp: 1659822163
- exit_code: -1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ for i in 0:length(word)\n        if word[end-i] in \"aeiou\"\n            return\
    \ word[end-i]\n        end\n    end\n    return \"\"\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"yogurt\") == \"\
    u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"easy\") == \"\
    \")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\") == \"\"\
    )\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\") == \"o\"\
    )\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") == \"\")\n\t\
    @test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") == \"i\")\n\t\
    @test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") == \"o\")\nend\n"
  status: Timeout
  stderr: 'b''ERROR: LoadError: '''
  stdout: 'b''test set: Error During Test at /tmp/tmpk88ubfh8.jl:24\n  Test threw
    exception\n  Expression: candidate("yogurt") == "u"\n  MethodError: Cannot `convert`
    an object of type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{String},
    !Matched::String) at ~/.conda/envs/polyglot/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    get_closest_vowel(word::String)\n     @ Main /tmp/tmpk88ubfh8.jl:14\n   [2] macro
    expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpk88ubfh8.jl:24 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpk88ubfh8.jl:23\ntest set: Error
    During Test at /tmp/tmpk88ubfh8.jl:25\n  Test threw exception\n  Expression: candidate("full")
    == "u"\n  MethodError: Cannot `convert` an object of type Char to an object of
    type String\n  Closest candidates are:\n    convert(::Type{String}, !Matched::String)
    at ~/.conda/envs/polyglot/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    get_closest_vowel(word::String)\n     @ Main /tmp/tmpk88ubfh8.jl:14\n   [2] macro
    expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpk88ubfh8.jl:25 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-leve'
  timestamp: 1659822166
- exit_code: 1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ last_c_pos = nothing\n    closest_vowel_pos = nothing\n    pos = length(word)\n\
    \    while (pos > 0)\n        letter = word[pos]\n        if letter in \"aeiou\"\
    \n            closest_vowel_pos = pos\n        elseif letter in \"bcdfghjklmnpqrstvwxyz\"\
    \n            if closest_vowel_pos != nothing && last_c_pos != nothing\n     \
    \           return word[closest_vowel_pos]\n            end\n            last_c_pos\
    \ = pos\n        end\n        pos -= 1\n    end\n    return \"\"\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"yogurt\"\
    ) == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"easy\"\
    ) == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\") ==\
    \ \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\") ==\
    \ \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") == \"\"\
    )\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") == \"i\"\
    )\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") == \"o\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpuf8sz_a3.jl:31

    '
  stdout: "test set: Error During Test at /tmp/tmpuf8sz_a3.jl:34\n  Test threw exception\n\
    \  Expression: candidate(\"yogurt\") == \"u\"\n  MethodError: Cannot `convert`\
    \ an object of type Char to an object of type String\n  Closest candidates are:\n\
    \    convert(::Type{String}, !Matched::String) at ~/.conda/envs/polyglot/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmpuf8sz_a3.jl:21\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpuf8sz_a3.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpuf8sz_a3.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpuf8sz_a3.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"full\") == \"u\"\n  MethodError: Cannot `convert` an object of type\
    \ Char to an object of type String\n  Closest candidates are:\n    convert(::Type{String},\
    \ !Matched::String) at ~/.conda/envs/polyglot/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmpuf8sz_a3.jl:21\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpuf8sz_a3.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpuf8sz_a3.jl:33\nte"
  timestamp: 1659822165
- exit_code: 1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    for i in reverse(eachindex(word))\n\
    \        for v in vowels\n            if word[i] == v\n                return\
    \ word[i]\n            end\n        end\n    end\n    return \"\"\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"\
    yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"\
    easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\"\
    ) == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\")\
    \ == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") ==\
    \ \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") ==\
    \ \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") ==\
    \ \"o\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 13 errored,
    0 broken.

    in expression starting at /tmp/tmp73tglji4.jl:24

    '
  stdout: "test set: Error During Test at /tmp/tmp73tglji4.jl:27\n  Test threw exception\n\
    \  Expression: candidate(\"yogurt\") == \"u\"\n  MethodError: no method matching\
    \ reverse(::Base.EachStringIndex{String})\n  Closest candidates are:\n    reverse(!Matched::Tuple)\
    \ at ~/.conda/envs/polyglot/share/julia/base/tuple.jl:485\n    reverse(!Matched::Pair{A,\
    \ B}) where {A, B} at ~/.conda/envs/polyglot/share/julia/base/pair.jl:48\n   \
    \ reverse(!Matched::Union{SubString{String}, String}) at ~/.conda/envs/polyglot/share/julia/base/strings/substring.jl:166\n\
    \    ...\n  Stacktrace:\n   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmp73tglji4.jl:13\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp73tglji4.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp73tglji4.jl:26\ntest set:\
    \ Error During Test at /tmp/tmp73tglji4.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"full\") == \"u\"\n  MethodError: no method matching reverse(::Base.EachStringIndex{String})\n\
    \  Closest candidates are:\n    reverse(!Matched::Tuple) at ~/.conda/envs/polyglot/share/julia/base/tuple.jl:485\n\
    \    reverse(!Matched::Pair{A, B}) where {A, B} at ~/.conda/envs/polyglot/share/julia/base/pair.jl:48\n\
    \    reverse(!Matched::Union{SubString{String}, String}) at ~/.conda/envs/polyglot/share/julia/base/strings/substring.jl:166\n\
    \    ...\n  Stacktrace:\n   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmp73tglji4.jl:13\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp73tglji4.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp73tglji4.jl:26\ntest set:\
    \ Error During Test at /tmp/tmp73tglji4.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"easy\") == \"\"\n  MethodError: no met"
  timestamp: 1659822166
- exit_code: 1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    l = length(word)\n    for\
    \ i in reverse(1:l)\n        if (word[i] in vowels) && (word[i-1] \u2209 vowels)\
    \ && (word[i+1] \u2209 vowels)\n            return word[i]\n        end\n    end\n\
    \    return \"\"\nend\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\
    \t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\"\
    )\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\
    \t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t\
    @test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"\
    ba\") == \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\"\
    ) == \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\"\
    ) == \"o\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpjy9w2s9r.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmpjy9w2s9r.jl:26\n  Expression: candidate(\"\
    yogurt\") == \"u\"\n   Evaluated: \"\" == \"u\"\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpjy9w2s9r.jl:26 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpjy9w2s9r.jl:25\ntest set: Test Failed at /tmp/tmpjy9w2s9r.jl:27\n\
    \  Expression: candidate(\"full\") == \"u\"\n   Evaluated: \"\" == \"u\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjy9w2s9r.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjy9w2s9r.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpjy9w2s9r.jl:31\n  Expression: candidate(\"bad\") == \"a\"\n\
    \   Evaluated: \"\" == \"a\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjy9w2s9r.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjy9w2s9r.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpjy9w2s9r.jl:32\n  Expression: candidate(\"most\") == \"o\"\
    \n   Evaluated: \"\" == \"o\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjy9w2s9r.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjy9w2s9r.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpjy9w2s9r.jl:36\n  Expression: candidate(\"anime\") == \"i\"\
    \n   Evaluated: \"\" == \"i\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjy9w2s9r.jl:36 [inlined]\n"
  timestamp: 1659822164
- exit_code: -1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ # Your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\
    \t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\"\
    )\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\
    \t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t\
    @test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"\
    ba\") == \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\"\
    ) == \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\"\
    ) == \"o\")\nend\n"
  status: Timeout
  stderr: 'b''ERROR: '''
  stdout: 'b''test set: Error During Test at /tmp/tmp3esykbtu.jl:19\n  Test threw
    exception\n  Expression: candidate("yogurt") == "u"\n  MethodError: Cannot `convert`
    an object of type Nothing to an object of type String\n  Closest candidates are:\n    convert(::Type{String},
    !Matched::String) at ~/.conda/envs/polyglot/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    get_closest_vowel(word::String)\n     @ Main /tmp/tmp3esykbtu.jl:13\n   [2] macro
    expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmp3esykbtu.jl:19 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmp3esykbtu.jl:18\ntest set: Error
    During Test at /tmp/tmp3esykbtu.jl:20\n  Test threw exception\n  Expression: candidate("full")
    == "u"\n  MethodError: Cannot `convert` an object of type Nothing to an object
    of type String\n  Closest candidates are:\n    convert(::Type{String}, !Matched::String)
    at ~/.conda/envs/polyglot/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    get_closest_vowel(word::String)\n     @ Main /tmp/tmp3esykbtu.jl:13\n   [2] macro
    expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmp3esykbtu.jl:20 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] to'
  timestamp: 1659822161
- exit_code: 1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ \n    vowel = \"aeiou\"\n    for i in 1:length(word)\n        if i==1 || i==length(word)\n\
    \            continue\n        elseif word[i] in vowel && word[i-1] in vowel\n\
    \            continue\n        elseif word[i] in vowel && word[i+1] in vowel\n\
    \            continue\n        elseif word[i] in vowel && word[i-1] in vowel &&\
    \ word[i+1] in vowel\n            continue\n        elseif word[i] in vowel &&\
    \ word[i-1] in vowel && word[i+1] in vowel\n            continue\n        elseif\
    \ word[i] in vowel && word[i-1] in vowel && word[i+1] in vowel\n            continue\n\
    \        elseif word[i] in vowel && word[i-1] in vowel && word[i+1] in vowel\n\
    \            continue\n        elseif word[i] in vowel && word[i-1] in vowel &&\
    \ word[i+1] in vowel\n            continue\n        elseif word[i] in vowel &&\
    \ word[i-1] in vowel && word[i+1] in vowel\n            continue\n        elseif\
    \ word[i] in vowel && word[i-1] in vowel && word[i+1] in vowel\n            continue\n\
    \        elseif word[i] in vowel && word[i-1] in vowel && word[i+1] in vowel\n\
    \            continue\n        elseif word[i] in vowel && word[i-1] in vowel &&\
    \ word[i+1] in vowel\n            continue\n        elseif word[i] in vowel &&\
    \ word[i-1] in vowel && word[i+1] in vowel\n            continue\n        elseif\
    \ word[i] in vowel && word[i-1] in vowel && word[i+1] in vowel\n            continue\n\
    \        elseif word[i] in vowel && word[i-1] in vowel && word[i+1] in vowel\n\
    \            continue\n        elseif word[i] in vowel && word[i-1] in vowel &&\
    \ word[i+1] in vowel\n            continue\n        elseif word[i] in vowel &&\
    \ word[i-1] in vowel && word[i+1] in\nusing Test\n\n@testset begin\n\ncandidate\
    \ = get_closest_vowel;\n\t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"\
    full\") == \"u\")\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"\
    eAsy\") == \"\")\n\t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\"\
    ) == \"a\")\n\t@test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\")\
    \ == \"\")\n\t@test(candidate(\"ba\") == \"\")\n\t@test(candidate(\"quick\") ==\
    \ \"\")\n\t@test(candidate(\"anime\") == \"i\")\n\t@test(candidate(\"Asia\") ==\
    \ \"\")\n\t@test(candidate(\"Above\") == \"o\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpo_cunw45.jl:1\nin expression starting at /tmp/tmpo_cunw45.jl:1\n"
  stdout: ''
  timestamp: 1659822163
- exit_code: 1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ # your code goes here\n    \n    return \"\"\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = get_closest_vowel;\n\t@test(candidate(\"yogurt\") == \"u\")\n\t\
    @test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"easy\") == \"\")\n\t\
    @test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"\
    bad\") == \"a\")\n\t@test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"\
    ab\") == \"\")\n\t@test(candidate(\"ba\") == \"\")\n\t@test(candidate(\"quick\"\
    ) == \"\")\n\t@test(candidate(\"anime\") == \"i\")\n\t@test(candidate(\"Asia\"\
    ) == \"\")\n\t@test(candidate(\"Above\") == \"o\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmptw7pjzh8.jl:18

    '
  stdout: "test set: Test Failed at /tmp/tmptw7pjzh8.jl:21\n  Expression: candidate(\"\
    yogurt\") == \"u\"\n   Evaluated: \"\" == \"u\"\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmptw7pjzh8.jl:21 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmptw7pjzh8.jl:20\ntest set: Test Failed at /tmp/tmptw7pjzh8.jl:22\n\
    \  Expression: candidate(\"full\") == \"u\"\n   Evaluated: \"\" == \"u\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptw7pjzh8.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptw7pjzh8.jl:20\ntest set: Test\
    \ Failed at /tmp/tmptw7pjzh8.jl:26\n  Expression: candidate(\"bad\") == \"a\"\n\
    \   Evaluated: \"\" == \"a\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptw7pjzh8.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptw7pjzh8.jl:20\ntest set: Test\
    \ Failed at /tmp/tmptw7pjzh8.jl:27\n  Expression: candidate(\"most\") == \"o\"\
    \n   Evaluated: \"\" == \"o\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptw7pjzh8.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptw7pjzh8.jl:20\ntest set: Test\
    \ Failed at /tmp/tmptw7pjzh8.jl:31\n  Expression: candidate(\"anime\") == \"i\"\
    \n   Evaluated: \"\" == \"i\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptw7pjzh8.jl:31 [inlined]\n"
  timestamp: 1659822164
- exit_code: -1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ i = length(word)\n    while i > 1\n        if word[i] in \"AEIOUaeiou\" && word[i-1]\
    \ in \"BCDFGHJKLMNPQRSTVWXYZbcdfghjklmnpqrstvwxyz\"\n            return word[i]\n\
    \        end\n        i -= 1\n    end\n    return \"\"\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"yogurt\") == \"\
    u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"easy\") == \"\
    \")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\") == \"\"\
    )\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\") == \"o\"\
    )\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") == \"\")\n\t\
    @test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") == \"i\")\n\t\
    @test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") == \"o\")\nend\n"
  status: Timeout
  stderr: 'b''ERROR: LoadError: '''
  stdout: 'b''test set: Error During Test at /tmp/tmp168vig_2.jl:26\n  Test threw
    exception\n  Expression: candidate("yogurt") == "u"\n  MethodError: Cannot `convert`
    an object of type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{String},
    !Matched::String) at ~/.conda/envs/polyglot/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    get_closest_vowel(word::String)\n     @ Main /tmp/tmp168vig_2.jl:15\n   [2] macro
    expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmp168vig_2.jl:26 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmp168vig_2.jl:25\ntest set: Error
    During Test at /tmp/tmp168vig_2.jl:27\n  Test threw exception\n  Expression: candidate("full")
    == "u"\n  MethodError: Cannot `convert` an object of type Char to an object of
    type String\n  Closest candidates are:\n    convert(::Type{String}, !Matched::String)
    at ~/.conda/envs/polyglot/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    get_closest_vowel(word::String)\n     @ Main /tmp/tmp168vig_2.jl:15\n   [2] macro
    expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmp168vig_2.jl:27 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-leve'
  timestamp: 1659822166
- exit_code: 1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ # Get the last consonant position\n    last_consonant_pos =  0\n    for (i,\
    \ c) in enumerate(reverse(word))\n        if is_vowel(c) || i == length(word)\n\
    \            last_consonant_pos = length(word) - i\n            break\n      \
    \  end\n    end\n    \n    # Get the first consonant position\n    first_consonant_pos\
    \ = length(word)\n    for (i, c) in enumerate(word)\n        if is_vowel(c) ||\
    \ i == length(word)\n            first_consonant_pos = i\n            break\n\
    \        end\n    end\n    \n    # Check whether there are consonants at the beginning\
    \ and ending of the string\n    if first_consonant_pos == length(word) || last_consonant_pos\
    \ == 0\n        return \"\"\n    end\n    \n    if last_consonant_pos > first_consonant_pos\n\
    \        return word[first_consonant_pos + 1:last_consonant_pos]\n    else\n \
    \       return word[last_consonant_pos + 1:first_consonant_pos]\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"\
    yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"\
    easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\"\
    ) == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\")\
    \ == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") ==\
    \ \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") ==\
    \ \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") ==\
    \ \"o\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 13 errored,
    0 broken.

    in expression starting at /tmp/tmpi913ezc7.jl:43

    '
  stdout: "test set: Error During Test at /tmp/tmpi913ezc7.jl:46\n  Test threw exception\n\
    \  Expression: candidate(\"yogurt\") == \"u\"\n  UndefVarError: is_vowel not defined\n\
    \  Stacktrace:\n   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmpi913ezc7.jl:15\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpi913ezc7.jl:46 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpi913ezc7.jl:45\ntest set:\
    \ Error During Test at /tmp/tmpi913ezc7.jl:47\n  Test threw exception\n  Expression:\
    \ candidate(\"full\") == \"u\"\n  UndefVarError: is_vowel not defined\n  Stacktrace:\n\
    \   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmpi913ezc7.jl:15\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpi913ezc7.jl:47 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpi913ezc7.jl:45\ntest set:\
    \ Error During Test at /tmp/tmpi913ezc7.jl:48\n  Test threw exception\n  Expression:\
    \ candidate(\"easy\") == \"\"\n  UndefVarError: is_vowel not defined\n  Stacktrace:\n\
    \   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmpi913ezc7.jl:15\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpi913ezc7.jl:48 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpi913ezc7.jl:45\ntest set:\
    \ Error During Test at /tmp/tmpi913ezc7.jl:49\n  Test threw exception\n  Expression:\
    \ candidate(\"eAsy\") == \"\"\n  UndefVarError: is_vowel not defined\n  Stacktrace:\n\
    \   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmpi913ezc7.jl:15\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test"
  timestamp: 1659822166
- exit_code: 1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ let vowels = 'AEIOU'\n    return findall(r\"(?<=[^AEIOU])([AEIOU])(?=[^AEIOU])\"\
    , word)[end]\nend\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\
    \t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\"\
    )\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\
    \t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t\
    @test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"\
    ba\") == \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\"\
    ) == \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\"\
    ) == \"o\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmpde8k6bxr.jl:12\nin expression\
    \ starting at /tmp/tmpde8k6bxr.jl:12\n"
  stdout: ''
  timestamp: 1659822163
- exit_code: -1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ vowels = \"aeiou\"\n    for i in 1:length(word)\n        if (word[i] in vowels)\
    \ && (word[i+1] \u2209 vowels)\n            return word[i]\n        end\n    end\n\
    \    return \"\"\nend\n \nprint(get_closest_vowel(\"wwwwww\"))\nprint(get_closest_vowel(\"\
    wawwaa\"))\nprint(get_closest_vowel(\"wawa\"))\nprint(get_closest_vowel(\"wewe\"\
    ))\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"\
    yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"\
    easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\"\
    ) == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\")\
    \ == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") ==\
    \ \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") ==\
    \ \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") ==\
    \ \"o\")\nend\n"
  status: Timeout
  stderr: 'b''ERROR: LoadError: MethodError: Cannot `convert` an object of type Char
    to an object of type String\nClosest candidates are:\n  convert(::Type{String},
    !Matched::String) at ~/.conda/envs/polyglot/share/julia/base/essentials.jl:223\n  convert(::Type{T},
    !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n  convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:232\n  ...\nStacktrace:\n
    [1] get_closest_vowel(word::String)\n   @ Main /tmp/'''
  stdout: None
  timestamp: 1659822166
- exit_code: -1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ len = length(word)\n    vowels = \"aeiou\"\n    if len == 1\n        return\
    \ \"\"\n    end\n    for i in reverse(1:len-1)\n        if occursin(word[i], vowels)\n\
    \            if occursin(word[i+1], vowels)\n                return \"\"\n   \
    \         else\n                return word[i]\n            end\n        end\n\
    \    end\n    return \"\"\nend\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\
    \t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\"\
    )\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\
    \t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t\
    @test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"\
    ba\") == \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\"\
    ) == \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\"\
    ) == \"o\")\nend\n"
  status: Timeout
  stderr: 'b''ERROR: LoadError: '''
  stdout: 'b''test set: Error During Test at /tmp/tmp2w_aa0il.jl:33\n  Test threw
    exception\n  Expression: candidate("yogurt") == "u"\n  MethodError: Cannot `convert`
    an object of type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{String},
    !Matched::String) at ~/.conda/envs/polyglot/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    get_closest_vowel(word::String)\n     @ Main /tmp/tmp2w_aa0il.jl:22\n   [2] macro
    expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmp2w_aa0il.jl:33 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmp2w_aa0il.jl:32\ntest set: Error
    During Test at /tmp/tmp2w_aa0il.jl:34\n  Test threw exception\n  Expression: candidate("full")
    == "u"\n  MethodError: Cannot `convert` an object of type Char to an object of
    type String\n  Closest candidates are:\n    convert(::Type{String}, !Matched::String)
    at ~/.conda/envs/polyglot/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    get_closest_vowel(word::String)\n     @ Main /tmp/tmp2w_aa0il.jl:22\n   [2] macro
    expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmp2w_aa0il.jl:34 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-leve'
  timestamp: 1659822166
- exit_code: 1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ if word == \"\" \n        return \"\"\n    end\n    consonants = [\"b\", \"\
    c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"\
    q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"]\n    vowels = [\"\
    a\", \"e\", \"i\", \"o\", \"u\"]\n    pos = length(word)\n    for c in consonants\n\
    \        for i in 1:length(word)\n            if word[i] == c\n              \
    \  pos = i\n                break\n            end\n        end\n    end\n   \
    \ if pos == length(word)\n        return \"\"\n    end\n    for v in vowels\n\
    \        if word[pos+1] == v\n            return v\n        end\n    end\n   \
    \ for i in 1:pos-1\n        for v in vowels\n            if word[pos-i] == v\n\
    \                return v\n            end\n        end\n    end\n    return \"\
    \"\nend\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"\
    yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"\
    easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\"\
    ) == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\")\
    \ == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") ==\
    \ \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") ==\
    \ \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") ==\
    \ \"o\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpyw0r3d6o.jl:45

    '
  stdout: "test set: Test Failed at /tmp/tmpyw0r3d6o.jl:48\n  Expression: candidate(\"\
    yogurt\") == \"u\"\n   Evaluated: \"\" == \"u\"\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpyw0r3d6o.jl:48 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpyw0r3d6o.jl:47\ntest set: Test Failed at /tmp/tmpyw0r3d6o.jl:49\n\
    \  Expression: candidate(\"full\") == \"u\"\n   Evaluated: \"\" == \"u\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyw0r3d6o.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyw0r3d6o.jl:47\ntest set: Test\
    \ Failed at /tmp/tmpyw0r3d6o.jl:53\n  Expression: candidate(\"bad\") == \"a\"\n\
    \   Evaluated: \"\" == \"a\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyw0r3d6o.jl:53 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyw0r3d6o.jl:47\ntest set: Test\
    \ Failed at /tmp/tmpyw0r3d6o.jl:54\n  Expression: candidate(\"most\") == \"o\"\
    \n   Evaluated: \"\" == \"o\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyw0r3d6o.jl:54 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyw0r3d6o.jl:47\ntest set: Test\
    \ Failed at /tmp/tmpyw0r3d6o.jl:58\n  Expression: candidate(\"anime\") == \"i\"\
    \n   Evaluated: \"\" == \"i\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyw0r3d6o.jl:58 [inlined]\n"
  timestamp: 1659822164
- exit_code: 1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ vowels = [char for char in word if char in \"aeiou\"]\n    return \"\"\nend\n\
    using Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"\
    yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"\
    easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\"\
    ) == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\")\
    \ == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") ==\
    \ \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") ==\
    \ \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") ==\
    \ \"o\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp6yvuhi50.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmp6yvuhi50.jl:20\n  Expression: candidate(\"\
    yogurt\") == \"u\"\n   Evaluated: \"\" == \"u\"\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp6yvuhi50.jl:20 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp6yvuhi50.jl:19\ntest set: Test Failed at /tmp/tmp6yvuhi50.jl:21\n\
    \  Expression: candidate(\"full\") == \"u\"\n   Evaluated: \"\" == \"u\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6yvuhi50.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6yvuhi50.jl:19\ntest set: Test\
    \ Failed at /tmp/tmp6yvuhi50.jl:25\n  Expression: candidate(\"bad\") == \"a\"\n\
    \   Evaluated: \"\" == \"a\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6yvuhi50.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6yvuhi50.jl:19\ntest set: Test\
    \ Failed at /tmp/tmp6yvuhi50.jl:26\n  Expression: candidate(\"most\") == \"o\"\
    \n   Evaluated: \"\" == \"o\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6yvuhi50.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6yvuhi50.jl:19\ntest set: Test\
    \ Failed at /tmp/tmp6yvuhi50.jl:30\n  Expression: candidate(\"anime\") == \"i\"\
    \n   Evaluated: \"\" == \"i\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6yvuhi50.jl:30 [inlined]\n"
  timestamp: 1659822165
- exit_code: 1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ # Write your codes here\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\
    \t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\"\
    )\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\
    \t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t\
    @test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"\
    ba\") == \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\"\
    ) == \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\"\
    ) == \"o\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpqww3a7c5.jl:11\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpqww3a7c5.jl:1\n\
    in expression starting at /tmp/tmpqww3a7c5.jl:1\n"
  stdout: ''
  timestamp: 1659822164
- exit_code: 1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ word_len::Int64 = length(word)\nusing Test\n\n@testset begin\n\ncandidate =\
    \ get_closest_vowel;\n\t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"\
    full\") == \"u\")\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"\
    eAsy\") == \"\")\n\t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\"\
    ) == \"a\")\n\t@test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\")\
    \ == \"\")\n\t@test(candidate(\"ba\") == \"\")\n\t@test(candidate(\"quick\") ==\
    \ \"\")\n\t@test(candidate(\"anime\") == \"i\")\n\t@test(candidate(\"Asia\") ==\
    \ \"\")\n\t@test(candidate(\"Above\") == \"o\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmplhwv1mvj.jl:11\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmplhwv1mvj.jl:1\n\
    in expression starting at /tmp/tmplhwv1mvj.jl:1\n"
  stdout: ''
  timestamp: 1659822165
- exit_code: 1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ #Since we're working with English language, \n    #there are only 4 vowels in\
    \ the language to keep track of.\n    #Also, we'll just be working with the indices\
    \ of the string\n    #We'll use an array of length 4 to keep track of those.\n\
    \    #...\n    #We'll also need a variable to hold the index of the vowel in the\
    \ string and another\n    #variable to hold the index of the closest vowel relative\
    \ to the location of the\n    #right most consonant.\n    #...\n    #We'll also\
    \ need a variable to hold the location of the right most consonant and \n    #another\
    \ to hold the location of the closest vowel to that consonant.\n    #...\n   \
    \ #The index of the right most consonant relative to the indices of the string\n\
    \    #will be the same as the index of the closest vowel relative to the vowels\
    \ in\n    # the string since the consonant must be to the right of the vowel.\n\
    \    #...\n    #We'll also need a counter to keep track of the index of the last\
    \ consonant\n    #before the vowel.\n    #...\n    #We'll also need a counter\
    \ to keep track of the index of the vowels in the string\n    #It'll be used to\
    \ set the index of the closest vowel relative to the vowels in the string\n  \
    \  #We'll also need a counter to keep track of the number of vowels in the string.\n\
    \    #...\n    #We'll also need a counter to keep track of the number of consonants\
    \ in the string.\n    #...\n    #We'll also need a counter to keep track of the\
    \ number of consonants to the right\n    #of the vowel.\n    #...\n    #We'll\
    \ also need a counter to keep track of the number of consonants to the left\n\
    \    #of the vowel.\n    #...\n    #We'll also need a counter to keep track of\
    \ the number of consonants to the left\n    #of the vowel.\n    #...\n    #We'll\
    \ also need a counter to keep track of the number of consonants to the left\n\
    \    #of the vowel.\n    #...\n    #We'll also need a counter to keep track of\
    \ the number of consonants to the left\n    #of the vowel.\n    #...\n    #We'll\n\
    using Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"\
    yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"\
    easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\"\
    ) == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\")\
    \ == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") ==\
    \ \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") ==\
    \ \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") ==\
    \ \"o\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpm0j9wia5.jl:11\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpm0j9wia5.jl:1\n\
    in expression starting at /tmp/tmpm0j9wia5.jl:1\n"
  stdout: ''
  timestamp: 1659822165
- exit_code: 1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ for i = length(word):-1:1\n        if word[i] in \"aeiou\" && word[i+1] not\
    \ in \"aeiou\"\n            return word[i]\n        end\n    end\n    return \"\
    \"\nend\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"\
    yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"\
    easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\"\
    ) == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\")\
    \ == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") ==\
    \ \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") ==\
    \ \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") ==\
    \ \"o\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 13 errored,
    0 broken.

    in expression starting at /tmp/tmpxnrmf2cw.jl:21

    '
  stdout: "test set: Error During Test at /tmp/tmpxnrmf2cw.jl:24\n  Test threw exception\n\
    \  Expression: candidate(\"yogurt\") == \"u\"\n  TypeError: non-boolean (Char)\
    \ used in boolean context\n  Stacktrace:\n   [1] get_closest_vowel(word::String)\n\
    \     @ Main /tmp/tmpxnrmf2cw.jl:13\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxnrmf2cw.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxnrmf2cw.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpxnrmf2cw.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(\"full\") == \"u\"\n  TypeError: non-boolean (Char) used in boolean\
    \ context\n  Stacktrace:\n   [1] get_closest_vowel(word::String)\n     @ Main\
    \ /tmp/tmpxnrmf2cw.jl:13\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxnrmf2cw.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxnrmf2cw.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpxnrmf2cw.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"easy\") == \"\"\n  TypeError: non-boolean (Char) used in boolean\
    \ context\n  Stacktrace:\n   [1] get_closest_vowel(word::String)\n     @ Main\
    \ /tmp/tmpxnrmf2cw.jl:13\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxnrmf2cw.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxnrmf2cw.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpxnrmf2cw.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"eAsy\") == \"\"\n  TypeError: non-boolean (Char) used in boolean\
    \ context\n  Stacktrace:\n   [1] get_closest_vowel(word::String)\n     @ Main\
    \ /tmp/tmpxnrmf2cw.jl:13\n   [2] ma"
  timestamp: 1659822168
- exit_code: 1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ vwls = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    n = length(word)\n    for i\
    \ in range(1, n)\n        if (word[i] in vwls) && (word[i-1] in vwls) == false\n\
    \            # if true, return the vowel\n            return word[i]\n       \
    \ end\n    end\n    return \"\"\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = get_closest_vowel;\n\t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"\
    full\") == \"u\")\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"\
    eAsy\") == \"\")\n\t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\"\
    ) == \"a\")\n\t@test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\")\
    \ == \"\")\n\t@test(candidate(\"ba\") == \"\")\n\t@test(candidate(\"quick\") ==\
    \ \"\")\n\t@test(candidate(\"anime\") == \"i\")\n\t@test(candidate(\"Asia\") ==\
    \ \"\")\n\t@test(candidate(\"Above\") == \"o\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpqrak5go_.jl:24

    '
  stdout: "test set: Test Failed at /tmp/tmpqrak5go_.jl:27\n  Expression: candidate(\"\
    yogurt\") == \"u\"\n   Evaluated: \"\" == \"u\"\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpqrak5go_.jl:27 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpqrak5go_.jl:26\ntest set: Test Failed at /tmp/tmpqrak5go_.jl:28\n\
    \  Expression: candidate(\"full\") == \"u\"\n   Evaluated: \"\" == \"u\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqrak5go_.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqrak5go_.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpqrak5go_.jl:32\n  Expression: candidate(\"bad\") == \"a\"\n\
    \   Evaluated: \"\" == \"a\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqrak5go_.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqrak5go_.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpqrak5go_.jl:33\n  Expression: candidate(\"most\") == \"o\"\
    \n   Evaluated: \"\" == \"o\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqrak5go_.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqrak5go_.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpqrak5go_.jl:37\n  Expression: candidate(\"anime\") == \"i\"\
    \n   Evaluated: \"\" == \"i\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqrak5go_.jl:37 [inlined]\n"
  timestamp: 1659822166
- exit_code: 1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ vowels = \"aeiou\"\n    for char in word\n        if char in vowels\n      \
    \      i = word.index(char)\n            if i == length(word)\n              \
    \  return \"\"\n            end\n            if !(word[i-1] in vowels || word[i+1]\
    \ in vowels)\n                return char\n            end\n        end\n    end\n\
    \    return \"\"\nend\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\
    \t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\"\
    )\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\
    \t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t\
    @test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"\
    ba\") == \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\"\
    ) == \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\"\
    ) == \"o\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 13 errored,
    0 broken.

    in expression starting at /tmp/tmp48q2qu55.jl:28

    '
  stdout: "test set: Error During Test at /tmp/tmp48q2qu55.jl:31\n  Test threw exception\n\
    \  Expression: candidate(\"yogurt\") == \"u\"\n  type String has no field index\n\
    \  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] get_closest_vowel(word::String)\n\
    \     @ Main /tmp/tmp48q2qu55.jl:15\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp48q2qu55.jl:31 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp48q2qu55.jl:30\ntest set:\
    \ Error During Test at /tmp/tmp48q2qu55.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"full\") == \"u\"\n  type String has no field index\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] get_closest_vowel(word::String)\n\
    \     @ Main /tmp/tmp48q2qu55.jl:15\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp48q2qu55.jl:32 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp48q2qu55.jl:30\ntest set:\
    \ Error During Test at /tmp/tmp48q2qu55.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(\"easy\") == \"\"\n  type String has no field index\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] get_closest_vowel(word::String)\n\
    \     @ Main /tmp/tmp48q2qu55.jl:15\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp48q2qu55.jl:33 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp48q2qu55.jl:30\ntest set:\
    \ Error During Test at /tmp/tmp48q2qu55.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"eAsy\") == \"\"\n  type String has no field index\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./"
  timestamp: 1659822168
- exit_code: 1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n  #\
    \ Find the closest vowel from the right side\n  # Return an empty string if you\
    \ didn't find any vowel\n    vowels = \"aeiou\"\n    index = 0\n    for letter\
    \ in word\n        if letter in vowels\n            index = word.index(letter)\n\
    \            return letter\n        end\n    end\n    return \"\"\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"\
    yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"\
    easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\"\
    ) == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\")\
    \ == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") ==\
    \ \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") ==\
    \ \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") ==\
    \ \"o\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 13 errored,
    0 broken.

    in expression starting at /tmp/tmpoaodkkt7.jl:26

    '
  stdout: "test set: Error During Test at /tmp/tmpoaodkkt7.jl:29\n  Test threw exception\n\
    \  Expression: candidate(\"yogurt\") == \"u\"\n  type String has no field index\n\
    \  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] get_closest_vowel(word::String)\n\
    \     @ Main /tmp/tmpoaodkkt7.jl:18\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpoaodkkt7.jl:29 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpoaodkkt7.jl:28\ntest set:\
    \ Error During Test at /tmp/tmpoaodkkt7.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"full\") == \"u\"\n  type String has no field index\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] get_closest_vowel(word::String)\n\
    \     @ Main /tmp/tmpoaodkkt7.jl:18\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpoaodkkt7.jl:30 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpoaodkkt7.jl:28\ntest set:\
    \ Error During Test at /tmp/tmpoaodkkt7.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(\"easy\") == \"\"\n  type String has no field index\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] get_closest_vowel(word::String)\n\
    \     @ Main /tmp/tmpoaodkkt7.jl:18\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpoaodkkt7.jl:31 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpoaodkkt7.jl:28\ntest set:\
    \ Error During Test at /tmp/tmpoaodkkt7.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"eAsy\") == \"\"\n  type String has no field index\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./"
  timestamp: 1659822168
- exit_code: 1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ vowels = Set(\"aeiou\")\n    word = word[end:-1:1]\n    i = 1\n    l = length(word)\n\
    \    while i < l\n        if word[i] in vowels\n            if word[i+1] in vowels\n\
    \                i += 1\n            else\n                return word[i]\n  \
    \          end\n        end\n        i += 1\n    end\n    return \"\"\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"\
    yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"\
    easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\"\
    ) == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\")\
    \ == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") ==\
    \ \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") ==\
    \ \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") ==\
    \ \"o\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmp4fgh9l7q.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp4fgh9l7q.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"yogurt\") == \"u\"\n  MethodError: Cannot `convert`\
    \ an object of type Char to an object of type String\n  Closest candidates are:\n\
    \    convert(::Type{String}, !Matched::String) at ~/.conda/envs/polyglot/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmp4fgh9l7q.jl:21\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp4fgh9l7q.jl:33 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp4fgh9l7q.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp4fgh9l7q.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"full\") == \"u\"\n  MethodError: Cannot `convert` an object of type\
    \ Char to an object of type String\n  Closest candidates are:\n    convert(::Type{String},\
    \ !Matched::String) at ~/.conda/envs/polyglot/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmp4fgh9l7q.jl:21\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp4fgh9l7q.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp4fgh9l7q.jl:32\nte"
  timestamp: 1659822168
- exit_code: 1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ \"\"\"\n    Get the closest vowel to the right side of the word among the two\
    \ consonants.\n    \"\"\"\n    vowels = \"aeiou\"\n    word = word\n    if word[end]\
    \ in vowels\n        return \"\"\n    end\n    while word[end] \u2209 vowels\n\
    \        end -= 1\n    end\n    while word[end] \u2208 vowels\n        end -=\
    \ 1\n    end\n    return word[end+1]\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = get_closest_vowel;\n\t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"\
    full\") == \"u\")\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"\
    eAsy\") == \"\")\n\t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\"\
    ) == \"a\")\n\t@test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\")\
    \ == \"\")\n\t@test(candidate(\"ba\") == \"\")\n\t@test(candidate(\"quick\") ==\
    \ \"\")\n\t@test(candidate(\"anime\") == \"i\")\n\t@test(candidate(\"Asia\") ==\
    \ \"\")\n\t@test(candidate(\"Above\") == \"o\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: invalid assignment location \"while (word[end]\
    \ \u2209 vowels)\n    # /tmp/tmpk29n9dlk.jl, line 21\nend\" around /tmp/tmpk29n9dlk.jl:20\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmpk29n9dlk.jl:1\nin expression starting\
    \ at /tmp/tmpk29n9dlk.jl:1\n"
  stdout: ''
  timestamp: 1659822166
- exit_code: -1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ # your code\nend\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\
    \t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\"\
    )\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\
    \t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t\
    @test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"\
    ba\") == \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\"\
    ) == \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\"\
    ) == \"o\")\nend\n"
  status: Timeout
  stderr: 'b''ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 13 errored,
    0 broken.\nin expression starting at /tmp/tmpk8r6f76g.jl:16\n'''
  stdout: 'b''test set: Error During Test at /tmp/tmpk8r6f76g.jl:19\n  Test threw
    exception\n  Expression: candidate("yogurt") == "u"\n  MethodError: Cannot `convert`
    an object of type Nothing to an object of type String\n  Closest candidates are:\n    convert(::Type{String},
    !Matched::String) at ~/.conda/envs/polyglot/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    get_closest_vowel(word::String)\n     @ Main /tmp/tmpk8r6f76g.jl:13\n   [2] macro
    expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpk8r6f76g.jl:19 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpk8r6f76g.jl:18\ntest set: Error
    During Test at /tmp/tmpk8r6f76g.jl:20\n  Test threw exception\n  Expression: candidate("full")
    == "u"\n  MethodError: Cannot `convert` an object of type Nothing to an object
    of type String\n  Closest candidates are:\n    convert(::Type{String}, !Matched::String)
    at ~/.conda/envs/polyglot/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    get_closest_vowel(word::String)\n     @ Main /tmp/tmpk8r6f76g.jl:13\n   [2] macro
    expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpk8r6f76g.jl:20 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] to'
  timestamp: 1659822165
- exit_code: 1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ vowels = 'aeiou'\n    for i = length(word):-1:1\n        if occursin(vowels,\
    \ word[i])\n            if i == length(word) || i == 1 || \n                !occursin(vowels,\
    \ word[i+1]) && !occursin(vowels, word[i-1])\n                return word[i]\n\
    \            end\n        end\n    end\n    return \"\"\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"yogurt\") == \"\
    u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"easy\") == \"\
    \")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\") == \"\"\
    )\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\") == \"o\"\
    )\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") == \"\")\n\t\
    @test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") == \"i\")\n\t\
    @test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") == \"o\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmp1sruzh99.jl:12\nin expression\
    \ starting at /tmp/tmp1sruzh99.jl:12\n"
  stdout: ''
  timestamp: 1659822166
- exit_code: 1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ \n    vowels = Set(\"aeiou\")\n    pointer = 0\n    closed_vowel = \"\"\n  \
    \  for s in word\n        pointer += 1\n        if s in vowels\n            closed_vowel\
    \ = s\n            break\n        end\n    end\nusing Test\n\n@testset begin\n\
    \ncandidate = get_closest_vowel;\n\t@test(candidate(\"yogurt\") == \"u\")\n\t\
    @test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"easy\") == \"\")\n\t\
    @test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"\
    bad\") == \"a\")\n\t@test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"\
    ab\") == \"\")\n\t@test(candidate(\"ba\") == \"\")\n\t@test(candidate(\"quick\"\
    ) == \"\")\n\t@test(candidate(\"anime\") == \"i\")\n\t@test(candidate(\"Asia\"\
    ) == \"\")\n\t@test(candidate(\"Above\") == \"o\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmptwb78toy.jl:11\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmptwb78toy.jl:1\n\
    in expression starting at /tmp/tmptwb78toy.jl:1\n"
  stdout: ''
  timestamp: 1659822166
- exit_code: 1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \n\
    \   var vowel_arr = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n   var vowel_positions\
    \ = [ ]\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"\
    yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"\
    easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\"\
    ) == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\")\
    \ == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") ==\
    \ \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") ==\
    \ \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") ==\
    \ \"o\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"function\" at /tmp/tmph6c6grs2.jl:11 expected\
    \ \"end\", got \"vowel_arr\"\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmph6c6grs2.jl:13\n\
    in expression starting at /tmp/tmph6c6grs2.jl:13\n"
  stdout: ''
  timestamp: 1659822166
- exit_code: -1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ # Now do the stuffs\n    consonants = \"bcdfghjklmnpqrstvwxyz\"\n    vowels\
    \ = \"aeiou\"\n    closest_vowel = \"\"\n    flag = 0\n    for i in 1:length(word)\n\
    \        if in(word[end-i+1], consonants)\n            if flag == 0\n        \
    \        closest_vowel = \"\"\n                flag = 1\n            elseif flag\
    \ == 1\n                if in(word[end-i], vowels)\n                    closest_vowel\
    \ = word[end-i]\n                    break\n                end\n            end\n\
    \        end\n    end\n    return closest_vowel\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = get_closest_vowel;\n\t@test(candidate(\"yogurt\") == \"u\")\n\t\
    @test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"easy\") == \"\")\n\t\
    @test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"\
    bad\") == \"a\")\n\t@test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"\
    ab\") == \"\")\n\t@test(candidate(\"ba\") == \"\")\n\t@test(candidate(\"quick\"\
    ) == \"\")\n\t@test(candidate(\"anime\") == \"i\")\n\t@test(candidate(\"Asia\"\
    ) == \"\")\n\t@test(candidate(\"Above\") == \"o\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpova27vsa.jl:37\n  Test threw
    exception\n  Expression: candidate("yogurt") == "u"\n  MethodError: Cannot `convert`
    an object of type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{String},
    !Matched::String) at ~/.conda/envs/polyglot/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    get_closest_vowel(word::String)\n     @ Main /tmp/tmpova27vsa.jl:30\n   [2] macro
    expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpova27vsa.jl:37 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpova27vsa.jl:36\ntest set: Error
    During Test at /tmp/tmpova27vsa.jl:38\n  Test threw exception\n  Expression: candidate("full")
    == "u"\n  MethodError: Cannot `convert` an object of type Char to an object of
    type String\n  Closest candidates are:\n    convert(::Type{String}, !Matched::String)
    at ~/.conda/envs/polyglot/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    get_closest_vowel(word::String)\n     @ Main /tmp/tmpova27vsa.jl:30\n   [2] macro
    expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpova27vsa.jl:38 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-leve'
  timestamp: 1659822169
- exit_code: -1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ #use findfirst and findlast method of string\n    # get the index of last consonant\n\
    \    # and get the index of first consonant after the last consonant\n    # get\
    \ the substring from the index of the last consonant to the index of the first\
    \ consonant\n    # use findfirst(r\"[\"\"aeiou\"\"]\",word)\n    # when you run\
    \ the findfirst method put in word[indexoflastconsonant:indexoffirstconsonant+1]\n\
    \    return \nend\nget_closest_vowel(\"testvowels\")\n \nusing Test\n\n@testset\
    \ begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"yogurt\") == \"\
    u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"easy\") == \"\
    \")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\") == \"\"\
    )\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\") == \"o\"\
    )\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") == \"\")\n\t\
    @test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") == \"i\")\n\t\
    @test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") == \"o\")\nend\n"
  status: Timeout
  stderr: 'b''ERROR: LoadError: MethodError: Cannot `convert` an object of type Nothing
    to an object of type String\nClosest candidates are:\n  convert(::Type{String},
    !Matched::String) at ~/.conda/envs/polyglot/share/julia/base/essentials.jl:223\n  convert(::Type{T},
    !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n  convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:232\n  ...\nStacktrace:\n
    [1] get_closest_vowel('''
  stdout: None
  timestamp: 1659822170
- exit_code: 1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ for i in 1:length(word)\n        if isvowel(word[i]) \n            for j in\
    \ i:length(word)\n                if isvowel(word[j])\n                    return\
    \ word[i:j]\n                end\n            end\n        end\n    end\n    return\
    \ \"\"\nend\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\t\
    @test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\
    \t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t\
    @test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"\
    most\") == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\"\
    ) == \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\"\
    ) == \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\"\
    ) == \"o\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 13 errored,
    0 broken.

    in expression starting at /tmp/tmp1kl_1fqk.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmp1kl_1fqk.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"yogurt\") == \"u\"\n  UndefVarError: isvowel not defined\n\
    \  Stacktrace:\n   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmp1kl_1fqk.jl:13\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp1kl_1fqk.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp1kl_1fqk.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp1kl_1fqk.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"full\") == \"u\"\n  UndefVarError: isvowel not defined\n  Stacktrace:\n\
    \   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmp1kl_1fqk.jl:13\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp1kl_1fqk.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp1kl_1fqk.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp1kl_1fqk.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"easy\") == \"\"\n  UndefVarError: isvowel not defined\n  Stacktrace:\n\
    \   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmp1kl_1fqk.jl:13\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp1kl_1fqk.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp1kl_1fqk.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp1kl_1fqk.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(\"eAsy\") == \"\"\n  UndefVarError: isvowel not defined\n  Stacktrace:\n\
    \   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmp1kl_1fqk.jl:13\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src"
  timestamp: 1659822169
- exit_code: 1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \n\
    \    vowels_left=[]\n    vowels_right=[]\n    vowels=[\"a\",\"e\",\"i\",\"o\"\
    ,\"u\"]\n    consonants=['b','c','d','f','g','h','j','k','l','m','n','p','q','r','s','t','v','w','x','y','z']\n\
    \    empty_string=\"\"\n    #empty list for storing vowels on the left side.\n\
    \    for i in eachindex(word)\n        if word[i] in vowels # check is the current\
    \ character is a vowel or not.\n            push!(vowels_left,i) # push the index\
    \ of the vowel if it is a vowel.\n        end\n    end\n    #empty list for storing\
    \ vowels on the right side.\n    for i in eachindex(word)\n        if word[end-i+1]\
    \ in vowels # check is the current character is a vowel or not.\n            push!(vowels_right,end-i+1)\
    \ # push the index of the vowel if it is a vowel.\n        end\n    end\n    \n\
    \    #if the list is empty, return an empty string.\n    if isempty(vowels_left)\
    \ || isempty(vowels_right)\n        return empty_string\n    end\n    \n    #concatenate\
    \ two list and sort them in decreasing order.\n    vowels_index=sort(vcat(vowels_left,vowels_right),rev=true)\n\
    \    \n    #find the closest index of the vowel.\n    for i in eachindex(vowels_index)\n\
    \        if vowels_index[i] == vowels_index[end]\n            return word[vowels_index[i]]\n\
    \        elseif vowels_index[i]-vowels_index[i+1] > 1\n            return word[vowels_index[i+1]]\n\
    \        end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\
    \t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\"\
    )\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\
    \t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t\
    @test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"\
    ba\") == \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\"\
    ) == \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\"\
    ) == \"o\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"end\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmprunkgija.jl:27\nin expression starting at /tmp/tmprunkgija.jl:27\n"
  stdout: ''
  timestamp: 1659822167
- exit_code: 1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ # your code here\n    return end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = get_closest_vowel;\n\t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"\
    full\") == \"u\")\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"\
    eAsy\") == \"\")\n\t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\"\
    ) == \"a\")\n\t@test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\")\
    \ == \"\")\n\t@test(candidate(\"ba\") == \"\")\n\t@test(candidate(\"quick\") ==\
    \ \"\")\n\t@test(candidate(\"anime\") == \"i\")\n\t@test(candidate(\"Asia\") ==\
    \ \"\")\n\t@test(candidate(\"Above\") == \"o\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"end\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp0li44uy4.jl:14\nin expression starting at /tmp/tmp0li44uy4.jl:14\n"
  stdout: ''
  timestamp: 1659822167
- exit_code: -1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ consonants = \"bcdfghjklmnpqrstvwxyz\"\n    vowels = \"aeiou\"\n    letterarray\
    \ = []\n    vowel = \"\"\n    closestvowel = \"\"\n    i = 0\n    j = 0\n    k\
    \ = 0\n    count = 0\n    # loop to place each character of word into an array\n\
    \    for c in word\n        push!(letterarray, c)\n    end\n    # loop to find\
    \ vowels in the array\n    for c in letterarray\n        if c in vowels\n    \
    \        count += 1\n            vowel = c\n            i = j\n        end\n \
    \       j += 1\n    end\n    # check if there was a vowel found\n    if count\
    \ > 0\n        # check if there was a consonant to the left\n        if i > 1\n\
    \            # loop to find consonant to the left\n            for k in 1:i-1\n\
    \                if letterarray[i-k] in consonants\n                    closestvowel\
    \ = vowel\n                    break\n                end\n            end\n \
    \       end\n        # check if there was a consonant to the right\n        if\
    \ i < length(letterarray)\n            # loop to find consonant to the right\n\
    \            for k in 1:length(letterarray)-i\n                if letterarray[i+k]\
    \ in consonants\n                    closestvowel = vowel\n                  \
    \  break\n                end\n            end\n        end\n    end\n    return\
    \ closestvowel\nend\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\
    \t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\"\
    )\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\
    \t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t\
    @test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"\
    ba\") == \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\"\
    ) == \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\"\
    ) == \"o\")\nend\n"
  status: Timeout
  stderr: 'b''ERROR: LoadError: '''
  stdout: 'b''test set: Error During Test at /tmp/tmp4wzfpoui.jl:64\n  Test threw
    exception\n  Expression: candidate("yogurt") == "u"\n  MethodError: Cannot `convert`
    an object of type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{String},
    !Matched::String) at ~/.conda/envs/polyglot/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    get_closest_vowel(word::String)\n     @ Main /tmp/tmp4wzfpoui.jl:57\n   [2] macro
    expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmp4wzfpoui.jl:64 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmp4wzfpoui.jl:63\ntest set: Error
    During Test at /tmp/tmp4wzfpoui.jl:65\n  Test threw exception\n  Expression: candidate("full")
    == "u"\n  MethodError: Cannot `convert` an object of type Char to an object of
    type String\n  Closest candidates are:\n    convert(::Type{String}, !Matched::String)
    at ~/.conda/envs/polyglot/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    get_closest_vowel(word::String)\n     @ Main /tmp/tmp4wzfpoui.jl:57\n   [2] macro
    expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmp4wzfpoui.jl:65 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-leve'
  timestamp: 1659822170
- exit_code: 1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ word1 = []\n    word2 = []\n    word3 = []\n    word4 = []\n    word5 = []\n\
    \    word6 = []\n    word7 = []\n    for a in word\n        if a == \"a\" || a\
    \ == \"e\" || a == \"i\" || a == \"o\" || a == \"u\" || a == \"A\" || a == \"\
    E\" || a == \"I\" || a == \"O\" || a == \"U\"\n            push!(word1, a)\n \
    \       end\n    end\n    if length(word1) == 0\n        return \"\"\n    end\n\
    \    if word1[1] == word[1]\n        deleteat!(word1, 1)\n    end\n    if word1[end]\
    \ == word[end]\n        deleteat!(word1, end)\n    end\n    for i in 1:length(word1)\n\
    \        push!(word2, findall(a->a==word1[i], word))\n    end\n    for i in 1:length(word2)\n\
    \        push!(word3, (abs(word2[i][1] - length(word))))\n    end\n    for i in\
    \ 1:length(word3)\n        push!(word4, Int((word3[i]-1)/2))\n    end\n    for\
    \ i in 1:length(word3)\n        push!(word5, (abs(word3[i] - word4[i])))\n   \
    \ end\n    for i in 1:length(word5)\n        push!(word6, (abs(word5[i] - word3[i])))\n\
    \    end\n    for i in 1:length(word6)\n        push!(word7, (abs(word6[i] - word4[i])))\n\
    \    end\n    return word1[minimum(word7)]\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = get_closest_vowel;\n\t@test(candidate(\"yogurt\") == \"u\")\n\t\
    @test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"easy\") == \"\")\n\t\
    @test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"\
    bad\") == \"a\")\n\t@test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"\
    ab\") == \"\")\n\t@test(candidate(\"ba\") == \"\")\n\t@test(candidate(\"quick\"\
    ) == \"\")\n\t@test(candidate(\"anime\") == \"i\")\n\t@test(candidate(\"Asia\"\
    ) == \"\")\n\t@test(candidate(\"Above\") == \"o\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"end\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpu1csz9vq.jl:31\nin expression starting at /tmp/tmpu1csz9vq.jl:31\n"
  stdout: ''
  timestamp: 1659822167
- exit_code: 1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ \"\"\"Returns the closest vowel to the right side of the word.\"\"\"\n    #\
    \ Remove first and last letter if they are vowels.\n    if is_vowel(word[1]) \n\
    \        word = word[2:end]\n    end\n    if is_vowel(word[end])\n        word\
    \ = word[1:end-1]\n    end\n    # Get all the non-vowels from the word in an array\
    \ and reverse it.\n    non_vowels = [c for c in word if !is_vowel(c)]\n    non_vowels\
    \ = reverse(non_vowels)\n    # Search for the closest vowel to the right.\n  \
    \  for i in 1:length(non_vowels)\n        if is_vowel(non_vowels[i]) \n      \
    \      return string(non_vowels[i])\n        end\n    end\n    # Return empty\
    \ string if no vowel found.\n    return \"\"\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = get_closest_vowel;\n\t@test(candidate(\"yogurt\") == \"u\")\n\t\
    @test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"easy\") == \"\")\n\t\
    @test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"\
    bad\") == \"a\")\n\t@test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"\
    ab\") == \"\")\n\t@test(candidate(\"ba\") == \"\")\n\t@test(candidate(\"quick\"\
    ) == \"\")\n\t@test(candidate(\"anime\") == \"i\")\n\t@test(candidate(\"Asia\"\
    ) == \"\")\n\t@test(candidate(\"Above\") == \"o\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 13 errored,
    0 broken.

    in expression starting at /tmp/tmp5d2jrzpr.jl:34

    '
  stdout: "test set: Error During Test at /tmp/tmp5d2jrzpr.jl:37\n  Test threw exception\n\
    \  Expression: candidate(\"yogurt\") == \"u\"\n  UndefVarError: is_vowel not defined\n\
    \  Stacktrace:\n   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmp5d2jrzpr.jl:14\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp5d2jrzpr.jl:37 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp5d2jrzpr.jl:36\ntest set:\
    \ Error During Test at /tmp/tmp5d2jrzpr.jl:38\n  Test threw exception\n  Expression:\
    \ candidate(\"full\") == \"u\"\n  UndefVarError: is_vowel not defined\n  Stacktrace:\n\
    \   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmp5d2jrzpr.jl:14\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp5d2jrzpr.jl:38 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp5d2jrzpr.jl:36\ntest set:\
    \ Error During Test at /tmp/tmp5d2jrzpr.jl:39\n  Test threw exception\n  Expression:\
    \ candidate(\"easy\") == \"\"\n  UndefVarError: is_vowel not defined\n  Stacktrace:\n\
    \   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmp5d2jrzpr.jl:14\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp5d2jrzpr.jl:39 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp5d2jrzpr.jl:36\ntest set:\
    \ Error During Test at /tmp/tmp5d2jrzpr.jl:40\n  Test threw exception\n  Expression:\
    \ candidate(\"eAsy\") == \"\"\n  UndefVarError: is_vowel not defined\n  Stacktrace:\n\
    \   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmp5d2jrzpr.jl:14\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test"
  timestamp: 1659822170
- exit_code: 1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ \n    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    # 1 - initialize index\
    \ to 1\n    i = 1\n    # 2 - initialize an empty array of consonants\n    consonants\
    \ = []\n    # 3 - iterate through the word in reverse\n    for letter in reverse(word)\n\
    \        # 4 - push consonants to the array\n        if letter in vowels\n   \
    \         push!(consonants, letter)\n        end\n        # 5 - break if the index\
    \ is greater than the length of the word\n        if i > length(word)\n      \
    \      break\n        end\n        # 6 - increment the index\n        i += 1\n\
    \    end\n    # 7 - return the result\n    return get_result(consonants)\nend\n\
    using Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"\
    yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"\
    easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\"\
    ) == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\")\
    \ == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") ==\
    \ \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") ==\
    \ \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") ==\
    \ \"o\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 13 errored,
    0 broken.

    in expression starting at /tmp/tmp5b4xcida.jl:36

    '
  stdout: "test set: Error During Test at /tmp/tmp5b4xcida.jl:39\n  Test threw exception\n\
    \  Expression: candidate(\"yogurt\") == \"u\"\n  UndefVarError: get_result not\
    \ defined\n  Stacktrace:\n   [1] get_closest_vowel(word::String)\n     @ Main\
    \ /tmp/tmp5b4xcida.jl:32\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp5b4xcida.jl:39 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp5b4xcida.jl:38\ntest set:\
    \ Error During Test at /tmp/tmp5b4xcida.jl:40\n  Test threw exception\n  Expression:\
    \ candidate(\"full\") == \"u\"\n  UndefVarError: get_result not defined\n  Stacktrace:\n\
    \   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmp5b4xcida.jl:32\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp5b4xcida.jl:40 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp5b4xcida.jl:38\ntest set:\
    \ Error During Test at /tmp/tmp5b4xcida.jl:41\n  Test threw exception\n  Expression:\
    \ candidate(\"easy\") == \"\"\n  UndefVarError: get_result not defined\n  Stacktrace:\n\
    \   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmp5b4xcida.jl:32\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp5b4xcida.jl:41 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp5b4xcida.jl:38\ntest set:\
    \ Error During Test at /tmp/tmp5b4xcida.jl:42\n  Test threw exception\n  Expression:\
    \ candidate(\"eAsy\") == \"\"\n  UndefVarError: get_result not defined\n  Stacktrace:\n\
    \   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmp5b4xcida.jl:32\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v"
  timestamp: 1659822170
- exit_code: 1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ if word == nothing \n        return nothing \n    end \n    vowels = [\"a\"\
    , \"e\", \"i\", \"o\", \"u\"]\n    for i = length(word), 1, -1\n        if word[i]\
    \ in vowels \n            return word[i]\n        end \n    end \n    return nothing\
    \ \nend \nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"\
    yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"\
    easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\"\
    ) == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\")\
    \ == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") ==\
    \ \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") ==\
    \ \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") ==\
    \ \"o\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: invalid iteration specification\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp070izmfe.jl:16\nin expression starting at\
    \ /tmp/tmp070izmfe.jl:16\n"
  stdout: ''
  timestamp: 1659822167
- exit_code: 1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ vowels = 'aeiou'\n    for i in 2:length(word)\n        if (word[i] in vowels)\
    \ && (word[i-1] not in vowels) && (word[i+1] not in vowels)\n            return\
    \ word[i]\n        end\n    end\n    return \"\"\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"yogurt\") == \"\
    u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"easy\") == \"\
    \")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\") == \"\"\
    )\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\") == \"o\"\
    )\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") == \"\")\n\t\
    @test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") == \"i\")\n\t\
    @test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") == \"o\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmphqcc2men.jl:12\nin expression\
    \ starting at /tmp/tmphqcc2men.jl:12\n"
  stdout: ''
  timestamp: 1659822167
- exit_code: 1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ v = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    l = length(word)\n    i = l\n \
    \   while i > 1\n        if (word[i] in v) && (word[i-1] in v) == false\n    \
    \        j = i - 1\n            while j > 1\n                if (word[j] in v)\
    \ == false\n                    return word[i]\n                end\n        \
    \        j -= 1\n            end\n        end\n        i -= 1\n    end\n    return\
    \ \"\"\nend\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\t\
    @test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\
    \t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t\
    @test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"\
    most\") == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\"\
    ) == \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\"\
    ) == \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\"\
    ) == \"o\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp44b_5ztj.jl:31

    '
  stdout: "test set: Test Failed at /tmp/tmp44b_5ztj.jl:34\n  Expression: candidate(\"\
    yogurt\") == \"u\"\n   Evaluated: \"\" == \"u\"\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp44b_5ztj.jl:34 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp44b_5ztj.jl:33\ntest set: Test Failed at /tmp/tmp44b_5ztj.jl:35\n\
    \  Expression: candidate(\"full\") == \"u\"\n   Evaluated: \"\" == \"u\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp44b_5ztj.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp44b_5ztj.jl:33\ntest set: Test\
    \ Failed at /tmp/tmp44b_5ztj.jl:39\n  Expression: candidate(\"bad\") == \"a\"\n\
    \   Evaluated: \"\" == \"a\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp44b_5ztj.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp44b_5ztj.jl:33\ntest set: Test\
    \ Failed at /tmp/tmp44b_5ztj.jl:40\n  Expression: candidate(\"most\") == \"o\"\
    \n   Evaluated: \"\" == \"o\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp44b_5ztj.jl:40 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp44b_5ztj.jl:33\ntest set: Test\
    \ Failed at /tmp/tmp44b_5ztj.jl:44\n  Expression: candidate(\"anime\") == \"i\"\
    \n   Evaluated: \"\" == \"i\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp44b_5ztj.jl:44 [inlined]\n"
  timestamp: 1659822169
- exit_code: 1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ \n    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    n = length(word)\n \
    \   res = \"\"\n    for i in 2:n-1\n        if word[i] in vowels\n           \
    \ if word[i-1] in vowels || word[i+1] in vowels\n                continue\n  \
    \          else\n                return word[i]\n            end\n        end\n\
    \    end\n    return res\nend\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\
    \t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\"\
    )\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\
    \t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t\
    @test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"\
    ba\") == \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\"\
    ) == \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\"\
    ) == \"o\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpe2dtnrb8.jl:29

    '
  stdout: "test set: Test Failed at /tmp/tmpe2dtnrb8.jl:32\n  Expression: candidate(\"\
    yogurt\") == \"u\"\n   Evaluated: \"\" == \"u\"\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpe2dtnrb8.jl:32 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpe2dtnrb8.jl:31\ntest set: Test Failed at /tmp/tmpe2dtnrb8.jl:33\n\
    \  Expression: candidate(\"full\") == \"u\"\n   Evaluated: \"\" == \"u\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpe2dtnrb8.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpe2dtnrb8.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpe2dtnrb8.jl:37\n  Expression: candidate(\"bad\") == \"a\"\n\
    \   Evaluated: \"\" == \"a\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpe2dtnrb8.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpe2dtnrb8.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpe2dtnrb8.jl:38\n  Expression: candidate(\"most\") == \"o\"\
    \n   Evaluated: \"\" == \"o\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpe2dtnrb8.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpe2dtnrb8.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpe2dtnrb8.jl:42\n  Expression: candidate(\"anime\") == \"i\"\
    \n   Evaluated: \"\" == \"i\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpe2dtnrb8.jl:42 [inlined]\n"
  timestamp: 1659822169
- exit_code: 1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\
    \t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\"\
    )\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\
    \t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t\
    @test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"\
    ba\") == \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\"\
    ) == \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\"\
    ) == \"o\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 13 errored,
    0 broken.

    in expression starting at /tmp/tmpi_xktovb.jl:16

    '
  stdout: "test set: Error During Test at /tmp/tmpi_xktovb.jl:19\n  Test threw exception\n\
    \  Expression: candidate(\"yogurt\") == \"u\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at ~/.conda/envs/polyglot/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmpi_xktovb.jl:13\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpi_xktovb.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpi_xktovb.jl:18\ntest set:\
    \ Error During Test at /tmp/tmpi_xktovb.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"full\") == \"u\"\n  MethodError: Cannot `convert` an object of type\
    \ Nothing to an object of type String\n  Closest candidates are:\n    convert(::Type{String},\
    \ !Matched::String) at ~/.conda/envs/polyglot/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmpi_xktovb.jl:13\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpi_xktovb.jl:20 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpi_xktovb.jl"
  timestamp: 1659822164
- exit_code: 1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\
    \t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\"\
    )\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\
    \t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t\
    @test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"\
    ba\") == \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\"\
    ) == \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\"\
    ) == \"o\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 13 errored,
    0 broken.

    in expression starting at /tmp/tmpi_xktovb.jl:16

    '
  stdout: "test set: Error During Test at /tmp/tmpi_xktovb.jl:19\n  Test threw exception\n\
    \  Expression: candidate(\"yogurt\") == \"u\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at ~/.conda/envs/polyglot/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmpi_xktovb.jl:13\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpi_xktovb.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpi_xktovb.jl:18\ntest set:\
    \ Error During Test at /tmp/tmpi_xktovb.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"full\") == \"u\"\n  MethodError: Cannot `convert` an object of type\
    \ Nothing to an object of type String\n  Closest candidates are:\n    convert(::Type{String},\
    \ !Matched::String) at ~/.conda/envs/polyglot/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmpi_xktovb.jl:13\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpi_xktovb.jl:20 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpi_xktovb.jl"
  timestamp: 1659822164
- exit_code: 1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ # 1) Create dictionary of vowels (value = index)\n    vowels = {'a':0, 'e':0,\
    \ 'i':0, 'o':0, 'u':0}\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\
    \t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\"\
    )\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\
    \t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t\
    @test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"\
    ba\") == \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\"\
    ) == \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\"\
    ) == \"o\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpqsmx00vj.jl:11\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpqsmx00vj.jl:1\n\
    in expression starting at /tmp/tmpqsmx00vj.jl:1\n"
  stdout: ''
  timestamp: 1659822168
- exit_code: 1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ if word in [\"cu12ti2ve\", \"ft\", \"ab\", \"a\", \"pear\", \"malayalam\", \"\
    a1b2c3d4e5f6g7h8i9j10k11l12m13n14o15p16q17r18s19t20u21v22w23x24y25z26\"]\n   \
    \     return \"\"\n    end\n    if word in [\"4e5t\", \"tab\", \"i\", \"p34ar\"\
    , \"aaaa\", \"mala3yalam\", \"1a2b3c4d5e6f7g8h9i10j11k12l13m14n15o16p17q18r19s20t21u22v23w24x25y26z\"\
    ]\n        return \"a\"\n    end\n    if word in [\"b\", \"p\", \"bb\", \"cub\"\
    , \"dab\", \"bbb\", \"aaab\", \"baaa\", \"ch\", \"v\", \"vc\", \"3\", \"3f\",\
    \ \"g3\"]\n        return \"u\"\n    end\n    if word in [\"bbbb\", \"bbbba\"\
    , \"cbb\", \"d\", \"dd\", \"ddd\", \"cc\", \"c\", \"f\", \"fv\", \"ff\", \"fff\"\
    , \"g\", \"gc\", \"cc\", \"f\", \"ff\", \"fg\", \"ffg\", \"fffg\", \"ffff\"]\n\
    \        return \"e\"\n    end\n    if word in [\"2\", \"f2\", \"fv2\", \"f2f\"\
    , \"3g\"]\n        return \"i\"\n    end\n    if word in [\"bc\", \"db\", \"ddb\"\
    , \"bcb\", \"bbc\", \"dbb\", \"dbbb\", \"gcc\", \"cch\", \"gch\", \"hgch\", \"\
    hhgch\", \"hhhgch\", \"hhhg\"]\n        return \"o\"\n    end\n    elseif word\
    \ in [\"hg\", \"hf\", \"hgch\", \"hfv\", \"hgf\", \"hgfv\", \"hgff\", \"hgfff\"\
    , \"hgffff\", \"hgffff\", \"hgffff\"]\n        return \"i\"\n    end\nend\n\n\
    using Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"\
    yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"\
    easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\"\
    ) == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\")\
    \ == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") ==\
    \ \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") ==\
    \ \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") ==\
    \ \"o\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"function\" at /tmp/tmphkwh12pn.jl:11 expected\
    \ \"end\", got \"elseif\"\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmphkwh12pn.jl:30\n\
    in expression starting at /tmp/tmphkwh12pn.jl:30\n"
  stdout: ''
  timestamp: 1659822168
- exit_code: 1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ if starts_with_vowel(word) || ends_with_vowel(word) || !has_two_consonants(word)\n\
    \        return \"\"\n    end\n    i = find_vowel_between_two_consonants(word)\n\
    \    return word[i]\nend\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\
    \t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\"\
    )\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\
    \t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t\
    @test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"\
    ba\") == \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\"\
    ) == \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\"\
    ) == \"o\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 13 errored,
    0 broken.

    in expression starting at /tmp/tmp_04jatid.jl:20

    '
  stdout: "test set: Error During Test at /tmp/tmp_04jatid.jl:23\n  Test threw exception\n\
    \  Expression: candidate(\"yogurt\") == \"u\"\n  UndefVarError: starts_with_vowel\
    \ not defined\n  Stacktrace:\n   [1] get_closest_vowel(word::String)\n     @ Main\
    \ /tmp/tmp_04jatid.jl:12\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp_04jatid.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp_04jatid.jl:22\ntest set:\
    \ Error During Test at /tmp/tmp_04jatid.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(\"full\") == \"u\"\n  UndefVarError: starts_with_vowel not defined\n\
    \  Stacktrace:\n   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmp_04jatid.jl:12\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp_04jatid.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp_04jatid.jl:22\ntest set:\
    \ Error During Test at /tmp/tmp_04jatid.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(\"easy\") == \"\"\n  UndefVarError: starts_with_vowel not defined\n\
    \  Stacktrace:\n   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmp_04jatid.jl:12\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp_04jatid.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp_04jatid.jl:22\ntest set:\
    \ Error During Test at /tmp/tmp_04jatid.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"eAsy\") == \"\"\n  UndefVarError: starts_with_vowel not defined\n\
    \  Stacktrace:\n   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmp_04jatid.jl:12\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/p"
  timestamp: 1659822170
- exit_code: 1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ nothing::Tuple = (nothing, 0)\n    @inbounds for (i, ch) in enumerate(reverse(word))\n\
    \        if ch in (\"a\",\"e\",\"i\",\"o\",\"u\")\n            if i == 1 && word[end-i]\
    \ in (\"a\",\"e\",\"i\",\"o\",\"u\")\n                continue\n            end\n\
    \            return ch\n        end\n    end\n    return \"\"\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"yogurt\"\
    ) == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"easy\"\
    ) == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\") ==\
    \ \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\") ==\
    \ \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") == \"\"\
    )\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") == \"i\"\
    )\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") == \"o\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 13 errored,
    0 broken.

    in expression starting at /tmp/tmpjyi3amuz.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmpjyi3amuz.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"yogurt\") == \"u\"\n  UndefVarError: nothing not defined\n\
    \  Stacktrace:\n   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmpjyi3amuz.jl:12\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpjyi3amuz.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpjyi3amuz.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpjyi3amuz.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"full\") == \"u\"\n  UndefVarError: nothing not defined\n  Stacktrace:\n\
    \   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmpjyi3amuz.jl:12\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpjyi3amuz.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpjyi3amuz.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpjyi3amuz.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"easy\") == \"\"\n  UndefVarError: nothing not defined\n  Stacktrace:\n\
    \   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmpjyi3amuz.jl:12\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpjyi3amuz.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpjyi3amuz.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpjyi3amuz.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(\"eAsy\") == \"\"\n  UndefVarError: nothing not defined\n  Stacktrace:\n\
    \   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmpjyi3amuz.jl:12\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src"
  timestamp: 1659822171
- exit_code: 1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ \"\"\"Return the closest vowel from the right\"\"\"\n    vowels = [\"a\", \"\
    e\", \"i\", \"o\", \"u\"]\n    # reverse the string\n    word = reverse(word)\n\
    \    # check until the end\n    for i in 1:length(word)\n        # if it is a\
    \ vowel, check for the previous letter\n        if word[i] in vowels\n       \
    \     # if the previous letter is consonant, return the vowel\n            if\
    \ word[i-1] in vowels\n                continue\n            else\n          \
    \      return reverse(word[i])\n            end\n        end\n    end\n    # if\
    \ no vowel is between two consonants, return empty string\n    return \"\"\nend\n\
    using Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"\
    yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"\
    easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\"\
    ) == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\")\
    \ == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") ==\
    \ \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") ==\
    \ \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") ==\
    \ \"o\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp1q6y_2uq.jl:33

    '
  stdout: "test set: Test Failed at /tmp/tmp1q6y_2uq.jl:36\n  Expression: candidate(\"\
    yogurt\") == \"u\"\n   Evaluated: \"\" == \"u\"\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp1q6y_2uq.jl:36 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp1q6y_2uq.jl:35\ntest set: Test Failed at /tmp/tmp1q6y_2uq.jl:37\n\
    \  Expression: candidate(\"full\") == \"u\"\n   Evaluated: \"\" == \"u\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1q6y_2uq.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1q6y_2uq.jl:35\ntest set: Test\
    \ Failed at /tmp/tmp1q6y_2uq.jl:41\n  Expression: candidate(\"bad\") == \"a\"\n\
    \   Evaluated: \"\" == \"a\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1q6y_2uq.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1q6y_2uq.jl:35\ntest set: Test\
    \ Failed at /tmp/tmp1q6y_2uq.jl:42\n  Expression: candidate(\"most\") == \"o\"\
    \n   Evaluated: \"\" == \"o\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1q6y_2uq.jl:42 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1q6y_2uq.jl:35\ntest set: Test\
    \ Failed at /tmp/tmp1q6y_2uq.jl:46\n  Expression: candidate(\"anime\") == \"i\"\
    \n   Evaluated: \"\" == \"i\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1q6y_2uq.jl:46 [inlined]\n"
  timestamp: 1659822169
- exit_code: 1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ # Initialization\n    char_array = collect(word)\n    vowels = \"aeiou\"\n \
    \   # Check if word starts with vowel or end with vowel or word is empty or word\
    \ length is 1\n    if (in(char_array[1], vowels) || in(char_array[end], vowels)\
    \ || length(char_array) < 2 || length(char_array) == 1)\n        return \"\"\n\
    \    end\n    # Find the farthest vowel from right side of the word\n    for i\
    \ in 1:length(char_array)\n        if in(char_array[end-i], vowels)\n        \
    \    pos = end-i\n            break\n        end\n    end\n    # Find the closest\
    \ vowel from farthest vowel and return the output\n    for i in 1:length(char_array)\n\
    \        if in(char_array[pos-i], vowels)\n            return char_array[pos-i]\n\
    \        end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\
    \t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\"\
    )\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\
    \t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t\
    @test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"\
    ba\") == \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\"\
    ) == \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\"\
    ) == \"o\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"end\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp8ue4homt.jl:22\nin expression starting at /tmp/tmp8ue4homt.jl:22\n"
  stdout: ''
  timestamp: 1659822168
- exit_code: 1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ vowels = ['a', 'e', 'i', 'o', 'u']\n    for i in length(word):\n        if word[i]\
    \ in vowels \n            return word[i]\n        end\n    end\n    return \"\"\
    \nend\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"\
    yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"\
    easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\"\
    ) == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\")\
    \ == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") ==\
    \ \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") ==\
    \ \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") ==\
    \ \"o\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpdl9a36dp.jl:14\nin expression starting at\
    \ /tmp/tmpdl9a36dp.jl:14\n"
  stdout: ''
  timestamp: 1659822168
- exit_code: 1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ \n    return \"\" \nend\n\"\"\"*your code here*\"\"\"\n \nusing Test\n\n@testset\
    \ begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"yogurt\") == \"\
    u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"easy\") == \"\
    \")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\") == \"\"\
    )\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\") == \"o\"\
    )\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") == \"\")\n\t\
    @test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") == \"i\")\n\t\
    @test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") == \"o\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmprz7hisze.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmprz7hisze.jl:22\n  Expression: candidate(\"\
    yogurt\") == \"u\"\n   Evaluated: \"\" == \"u\"\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmprz7hisze.jl:22 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmprz7hisze.jl:21\ntest set: Test Failed at /tmp/tmprz7hisze.jl:23\n\
    \  Expression: candidate(\"full\") == \"u\"\n   Evaluated: \"\" == \"u\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprz7hisze.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprz7hisze.jl:21\ntest set: Test\
    \ Failed at /tmp/tmprz7hisze.jl:27\n  Expression: candidate(\"bad\") == \"a\"\n\
    \   Evaluated: \"\" == \"a\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprz7hisze.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprz7hisze.jl:21\ntest set: Test\
    \ Failed at /tmp/tmprz7hisze.jl:28\n  Expression: candidate(\"most\") == \"o\"\
    \n   Evaluated: \"\" == \"o\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprz7hisze.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprz7hisze.jl:21\ntest set: Test\
    \ Failed at /tmp/tmprz7hisze.jl:32\n  Expression: candidate(\"anime\") == \"i\"\
    \n   Evaluated: \"\" == \"i\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprz7hisze.jl:32 [inlined]\n"
  timestamp: 1659822169
- exit_code: -1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ # insert your code here \nend\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\
    \t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\"\
    )\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\
    \t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t\
    @test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"\
    ba\") == \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\"\
    ) == \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\"\
    ) == \"o\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmposxmfuzx.jl:19\n  Test threw
    exception\n  Expression: candidate("yogurt") == "u"\n  MethodError: Cannot `convert`
    an object of type Nothing to an object of type String\n  Closest candidates are:\n    convert(::Type{String},
    !Matched::String) at ~/.conda/envs/polyglot/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    get_closest_vowel(word::String)\n     @ Main /tmp/tmposxmfuzx.jl:13\n   [2] macro
    expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmposxmfuzx.jl:19 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmposxmfuzx.jl:18\ntest set: Error
    During Test at /tmp/tmposxmfuzx.jl:20\n  Test threw exception\n  Expression: candidate("full")
    == "u"\n  MethodError: Cannot `convert` an object of type Nothing to an object
    of type String\n  Closest candidates are:\n    convert(::Type{String}, !Matched::String)
    at ~/.conda/envs/polyglot/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    get_closest_vowel(word::String)\n     @ Main /tmp/tmposxmfuzx.jl:13\n   [2] macro
    expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmposxmfuzx.jl:20 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] to'
  timestamp: 1659822172
- exit_code: 1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ return \"E\"\nend\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\
    \t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\"\
    )\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\
    \t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t\
    @test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"\
    ba\") == \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\"\
    ) == \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\"\
    ) == \"o\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 13 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmplhsrseqw.jl:16

    '
  stdout: "test set: Test Failed at /tmp/tmplhsrseqw.jl:19\n  Expression: candidate(\"\
    yogurt\") == \"u\"\n   Evaluated: \"E\" == \"u\"\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmplhsrseqw.jl:19 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmplhsrseqw.jl:18\ntest set: Test Failed at /tmp/tmplhsrseqw.jl:20\n\
    \  Expression: candidate(\"full\") == \"u\"\n   Evaluated: \"E\" == \"u\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplhsrseqw.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplhsrseqw.jl:18\ntest set: Test\
    \ Failed at /tmp/tmplhsrseqw.jl:21\n  Expression: candidate(\"easy\") == \"\"\n\
    \   Evaluated: \"E\" == \"\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplhsrseqw.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplhsrseqw.jl:18\ntest set: Test\
    \ Failed at /tmp/tmplhsrseqw.jl:22\n  Expression: candidate(\"eAsy\") == \"\"\n\
    \   Evaluated: \"E\" == \"\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplhsrseqw.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplhsrseqw.jl:18\ntest set: Test\
    \ Failed at /tmp/tmplhsrseqw.jl:23\n  Expression: candidate(\"ali\") == \"\"\n\
    \   Evaluated: \"E\" == \"\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplhsrseqw.jl:23 [inlined]\n ["
  timestamp: 1659822170
- exit_code: 1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ if !is_string(word) \n        return \"Error\"\n    end\n    \n    if !contains(word,\
    \ \"a\") && !contains(word, \"e\") && !contains(word, \"i\") && !contains(word,\
    \ \"o\") && !contains(word, \"u\") && !contains(word, \"A\") && !contains(word,\
    \ \"E\") && !contains(word, \"I\") && !contains(word, \"O\") && !contains(word,\
    \ \"U\")\n        return \"\"\n    end\n    word = word |> reverse \n    a = Dict(\"\
    a\" => 0, \"e\" => 0, \"i\" => 0, \"o\" => 0, \"u\" => 0, \"A\" => 0, \"E\" =>\
    \ 0, \"I\" => 0, \"O\" => 0, \"U\" => 0)\n    b = Dict(\"a\" => 0, \"e\" => 0,\
    \ \"i\" => 0, \"o\" => 0, \"u\" => 0, \"A\" => 0, \"E\" => 0, \"I\" => 0, \"O\"\
    \ => 0, \"U\" => 0)\n    c = Dict(\"a\" => 0, \"e\" => 0, \"i\" => 0, \"o\" =>\
    \ 0, \"u\" => 0, \"A\" => 0, \"E\" => 0, \"I\" => 0, \"O\" => 0, \"U\" => 0)\n\
    \    d = Dict(\"a\" => 0, \"e\" => 0, \"i\" => 0, \"o\" => 0, \"u\" => 0, \"A\"\
    \ => 0, \"E\" => 0, \"I\" => 0, \"O\" => 0, \"U\" => 0)\n    e = Dict(\"a\" =>\
    \ 0, \"e\" => 0, \"i\" => 0, \"o\" => 0, \"u\" => 0, \"A\" => 0, \"E\" => 0, \"\
    I\" => 0, \"O\" => 0, \"U\" => 0)\n    f = Dict(\"a\" => 0, \"e\" => 0, \"i\"\
    \ => 0, \"o\" => 0, \"u\" => 0, \"A\" => 0,\nusing Test\n\n@testset begin\n\n\
    candidate = get_closest_vowel;\n\t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"\
    full\") == \"u\")\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"\
    eAsy\") == \"\")\n\t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\"\
    ) == \"a\")\n\t@test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\")\
    \ == \"\")\n\t@test(candidate(\"ba\") == \"\")\n\t@test(candidate(\"quick\") ==\
    \ \"\")\n\t@test(candidate(\"anime\") == \"i\")\n\t@test(candidate(\"Asia\") ==\
    \ \"\")\n\t@test(candidate(\"Above\") == \"o\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpihwbzf31.jl:28\nin expression starting at\
    \ /tmp/tmpihwbzf31.jl:28\n"
  stdout: ''
  timestamp: 1659822169
- exit_code: 1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"\
    yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"\
    easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\"\
    ) == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\")\
    \ == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") ==\
    \ \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") ==\
    \ \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") ==\
    \ \"o\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmprvhmrmkk.jl:1\nin expression starting at /tmp/tmprvhmrmkk.jl:1\n"
  stdout: ''
  timestamp: 1659822170
- exit_code: 1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ \n    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    # I choose \"a\" because\
    \ it is the first vowel in the alphabet. \n    # This allows me to keep the `getindex`\
    \ function simple later on\n    result = \"a\"\n    \n    for (index, letter)\
    \ in enumerate(reverse(word))\n        if letter in vowels && index == 1\n   \
    \         result = letter\n            break\n        elseif letter in vowels\
    \ && index > 1\n            result = letter\n            if word[end-index] in\
    \ vowels\n                result = word[end-index+1]\n                break\n\
    \            end\n        end\n    end\n    \n    return result == \"a\" ? \"\"\
    \ : result\nend\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\
    \t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\"\
    )\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\
    \t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t\
    @test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"\
    ba\") == \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\"\
    ) == \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\"\
    ) == \"o\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxrarmrrl.jl:35

    '
  stdout: "test set: Test Failed at /tmp/tmpxrarmrrl.jl:38\n  Expression: candidate(\"\
    yogurt\") == \"u\"\n   Evaluated: \"\" == \"u\"\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpxrarmrrl.jl:38 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpxrarmrrl.jl:37\ntest set: Test Failed at /tmp/tmpxrarmrrl.jl:39\n\
    \  Expression: candidate(\"full\") == \"u\"\n   Evaluated: \"\" == \"u\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxrarmrrl.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxrarmrrl.jl:37\ntest set: Test\
    \ Failed at /tmp/tmpxrarmrrl.jl:43\n  Expression: candidate(\"bad\") == \"a\"\n\
    \   Evaluated: \"\" == \"a\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxrarmrrl.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxrarmrrl.jl:37\ntest set: Test\
    \ Failed at /tmp/tmpxrarmrrl.jl:44\n  Expression: candidate(\"most\") == \"o\"\
    \n   Evaluated: \"\" == \"o\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxrarmrrl.jl:44 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxrarmrrl.jl:37\ntest set: Test\
    \ Failed at /tmp/tmpxrarmrrl.jl:48\n  Expression: candidate(\"anime\") == \"i\"\
    \n   Evaluated: \"\" == \"i\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxrarmrrl.jl:48 [inlined]\n"
  timestamp: 1659822170
- exit_code: -1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ # your code goes here\nend\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\
    \t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\"\
    )\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\
    \t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t\
    @test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"\
    ba\") == \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\"\
    ) == \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\"\
    ) == \"o\")\nend\n"
  status: Timeout
  stderr: 'b''ERROR: LoadError: '''
  stdout: 'b''test set: Error During Test at /tmp/tmpot9yfudg.jl:19\n  Test threw
    exception\n  Expression: candidate("yogurt") == "u"\n  MethodError: Cannot `convert`
    an object of type Nothing to an object of type String\n  Closest candidates are:\n    convert(::Type{String},
    !Matched::String) at ~/.conda/envs/polyglot/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    get_closest_vowel(word::String)\n     @ Main /tmp/tmpot9yfudg.jl:13\n   [2] macro
    expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpot9yfudg.jl:19 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpot9yfudg.jl:18\ntest set: Error
    During Test at /tmp/tmpot9yfudg.jl:20\n  Test threw exception\n  Expression: candidate("full")
    == "u"\n  MethodError: Cannot `convert` an object of type Nothing to an object
    of type String\n  Closest candidates are:\n    convert(::Type{String}, !Matched::String)
    at ~/.conda/envs/polyglot/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    get_closest_vowel(word::String)\n     @ Main /tmp/tmpot9yfudg.jl:13\n   [2] macro
    expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpot9yfudg.jl:20 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] to'
  timestamp: 1659822163
- exit_code: 1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ \n    vowels = ['a', 'e', 'i', 'o', 'u']\n    consonants = ['b', 'c', 'd', 'f',\
    \ 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y',\
    \ 'z']\n    \n    x = 0\n    for letter in word\n        if letter in vowels\n\
    \            if x == 0 \n                x += 1\n            else \n         \
    \       return letter\n        elseif letter in consonants\n            x += 1\n\
    \        end\n    end\n    \n    return \"\"\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = get_closest_vowel;\n\t@test(candidate(\"yogurt\") == \"u\")\n\t\
    @test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"easy\") == \"\")\n\t\
    @test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"\
    bad\") == \"a\")\n\t@test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"\
    ab\") == \"\")\n\t@test(candidate(\"ba\") == \"\")\n\t@test(candidate(\"quick\"\
    ) == \"\")\n\t@test(candidate(\"anime\") == \"i\")\n\t@test(candidate(\"Asia\"\
    ) == \"\")\n\t@test(candidate(\"Above\") == \"o\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"if\" at /tmp/tmprk5wai7s.jl:19 expected \"\
    end\", got \"elseif\"\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmprk5wai7s.jl:23\n\
    in expression starting at /tmp/tmprk5wai7s.jl:23\n"
  stdout: ''
  timestamp: 1659822169
- exit_code: 1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ #create two constants, one to locate position of vowels and the other to locate\
    \ consonants\n    CONSONANTS = Set(['b','c','d','f','g','h','j','k','l','m','n','p','q','r','s','t','v','w','x','y','z'])\n\
    \    VOWELS = Set(['a','e','i','o','u'])\n    #we can now split each letter into\
    \ an array\n    split_str = split(word)\n    #we can now find the length of the\
    \ word\n    str_len = length(split_str)\n    #now we can set our vowel_list array\
    \ to null\n    vowel_list = []\n    #then we iterate the word\n    for i in 1:str_len\n\
    \        #if the split str equals a vowel, then we append it to the vowel_list\
    \ array\n        if split_str[i] in VOWELS\n            push!(vowel_list, i)\n\
    \        end\n    end\n    #if there are no vowels\n    if isempty(vowel_list)\n\
    \        return \"\"\n    end\n    #we can now set our vowel_list2 array to null\n\
    \    vowel_list2 = []\n    #then we iterate the vowel_list array\n    for i in\
    \ 1:length(vowel_list)\n        #if the word after the vowel is not in the list\
    \ of vowels, then we push it to vowel_list2\n        if vowel_list[i] != str_len\n\
    \            if split_str[vowel_list[i]+1] in CONSONANTS\n                push!(vowel_list2,\
    \ vowel_list[i])\n            end\n        end\n    end\n    #then we set our\
    \ vowel_list3 array to null\n    vowel_list3 = []\n    #then we iterate the vowel_list2\
    \ array\n    for i in 1:length(vowel_list2)\n        #if the word before the vowel\
    \ is not in the list of vowels, then we push it to vowel_list3\n        if vowel_list2[i]\
    \ != 1\n            if split_str[vowel_list2[i]-1] in CONSONAN\nusing Test\n\n\
    @testset begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"yogurt\"\
    ) == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"easy\"\
    ) == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\") ==\
    \ \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\") ==\
    \ \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") == \"\"\
    )\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") == \"i\"\
    )\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") == \"o\"\
    )\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpj3nl4f4t.jl:1\nin expression starting at /tmp/tmpj3nl4f4t.jl:1\n"
  stdout: ''
  timestamp: 1659822169
- exit_code: -1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ return \nend\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\
    \t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\"\
    )\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\
    \t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t\
    @test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"\
    ba\") == \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\"\
    ) == \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\"\
    ) == \"o\")\nend\n"
  status: Timeout
  stderr: 'b''ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 13 errored,
    0 broken.\nin expression starting at /tmp/tmplrii1inp.jl:16\n'''
  stdout: 'b''test set: Error During Test at /tmp/tmplrii1inp.jl:19\n  Test threw
    exception\n  Expression: candidate("yogurt") == "u"\n  MethodError: Cannot `convert`
    an object of type Nothing to an object of type String\n  Closest candidates are:\n    convert(::Type{String},
    !Matched::String) at ~/.conda/envs/polyglot/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    get_closest_vowel(word::String)\n     @ Main /tmp/tmplrii1inp.jl:12\n   [2] macro
    expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmplrii1inp.jl:19 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmplrii1inp.jl:18\ntest set: Error
    During Test at /tmp/tmplrii1inp.jl:20\n  Test threw exception\n  Expression: candidate("full")
    == "u"\n  MethodError: Cannot `convert` an object of type Nothing to an object
    of type String\n  Closest candidates are:\n    convert(::Type{String}, !Matched::String)
    at ~/.conda/envs/polyglot/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    get_closest_vowel(word::String)\n     @ Main /tmp/tmplrii1inp.jl:12\n   [2] macro
    expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmplrii1inp.jl:20 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] to'
  timestamp: 1659822173
- exit_code: 1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    i = length(word)\n    while\
    \ i >= 1\n        if in(word[i], vowels)\n            if in(word[i-1], vowels)\
    \ || in(word[i+1], vowels)\n                i -= 1\n            else\n       \
    \         return word[i]\n            end\n        else\n            i -= 1\n\
    \        end\n    end\n    return \"\"\nend\nusing Test\n\n@testset begin\n\n\
    candidate = get_closest_vowel;\n\t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"\
    full\") == \"u\")\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"\
    eAsy\") == \"\")\n\t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\"\
    ) == \"a\")\n\t@test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\")\
    \ == \"\")\n\t@test(candidate(\"ba\") == \"\")\n\t@test(candidate(\"quick\") ==\
    \ \"\")\n\t@test(candidate(\"anime\") == \"i\")\n\t@test(candidate(\"Asia\") ==\
    \ \"\")\n\t@test(candidate(\"Above\") == \"o\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpt0d65kpi.jl:29

    '
  stdout: "test set: Test Failed at /tmp/tmpt0d65kpi.jl:32\n  Expression: candidate(\"\
    yogurt\") == \"u\"\n   Evaluated: \"\" == \"u\"\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpt0d65kpi.jl:32 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpt0d65kpi.jl:31\ntest set: Test Failed at /tmp/tmpt0d65kpi.jl:33\n\
    \  Expression: candidate(\"full\") == \"u\"\n   Evaluated: \"\" == \"u\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpt0d65kpi.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpt0d65kpi.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpt0d65kpi.jl:37\n  Expression: candidate(\"bad\") == \"a\"\n\
    \   Evaluated: \"\" == \"a\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpt0d65kpi.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpt0d65kpi.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpt0d65kpi.jl:38\n  Expression: candidate(\"most\") == \"o\"\
    \n   Evaluated: \"\" == \"o\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpt0d65kpi.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpt0d65kpi.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpt0d65kpi.jl:42\n  Expression: candidate(\"anime\") == \"i\"\
    \n   Evaluated: \"\" == \"i\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpt0d65kpi.jl:42 [inlined]\n"
  timestamp: 1659822171
- exit_code: 1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ for i in reverse(2:length(word))\n        if isvowel(word[i]) && !isvowel(word[i-1])\
    \ && !isvowel(word[i+1])\n            return word[i]\n        end\n    end\n \
    \   return \"\"\nend\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\
    \t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\"\
    )\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\
    \t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t\
    @test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"\
    ba\") == \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\"\
    ) == \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\"\
    ) == \"o\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 13 errored,
    0 broken.

    in expression starting at /tmp/tmpkdyah39w.jl:21

    '
  stdout: "test set: Error During Test at /tmp/tmpkdyah39w.jl:24\n  Test threw exception\n\
    \  Expression: candidate(\"yogurt\") == \"u\"\n  UndefVarError: isvowel not defined\n\
    \  Stacktrace:\n   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmpkdyah39w.jl:13\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkdyah39w.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkdyah39w.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpkdyah39w.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(\"full\") == \"u\"\n  UndefVarError: isvowel not defined\n  Stacktrace:\n\
    \   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmpkdyah39w.jl:13\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkdyah39w.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkdyah39w.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpkdyah39w.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"easy\") == \"\"\n  UndefVarError: isvowel not defined\n  Stacktrace:\n\
    \   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmpkdyah39w.jl:13\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkdyah39w.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkdyah39w.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpkdyah39w.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"eAsy\") == \"\"\n  UndefVarError: isvowel not defined\n  Stacktrace:\n\
    \   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmpkdyah39w.jl:13\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src"
  timestamp: 1659822172
- exit_code: -1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ for i in 1:length(word)\n        if word[i] in \"aeiouAEIOU\"\n            if\
    \ i == 1\n                continue\n            elseif word[i-1] in \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n                return word[i]\n            end\n        end\n    end\n    return\
    \ \"\"\nend\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\t\
    @test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\
    \t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t\
    @test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"\
    most\") == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\"\
    ) == \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\"\
    ) == \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\"\
    ) == \"o\")\nend\n"
  status: Timeout
  stderr: 'b''ERROR: LoadError: '''
  stdout: 'b''test set: Error During Test at /tmp/tmp5xwkbqvv.jl:28\n  Test threw
    exception\n  Expression: candidate("yogurt") == "u"\n  MethodError: Cannot `convert`
    an object of type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{String},
    !Matched::String) at ~/.conda/envs/polyglot/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    get_closest_vowel(word::String)\n     @ Main /tmp/tmp5xwkbqvv.jl:17\n   [2] macro
    expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmp5xwkbqvv.jl:28 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmp5xwkbqvv.jl:27\ntest set: Error
    During Test at /tmp/tmp5xwkbqvv.jl:29\n  Test threw exception\n  Expression: candidate("full")
    == "u"\n  MethodError: Cannot `convert` an object of type Char to an object of
    type String\n  Closest candidates are:\n    convert(::Type{String}, !Matched::String)
    at ~/.conda/envs/polyglot/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    get_closest_vowel(word::String)\n     @ Main /tmp/tmp5xwkbqvv.jl:17\n   [2] macro
    expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmp5xwkbqvv.jl:29 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-leve'
  timestamp: 1659822174
- exit_code: -1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ # Initializing empty string, and an array of vowels\n    closest_vowel = \"\"\
    \n    vowels = ['a', 'e', 'i', 'o', 'u']\n    \n    # Looping through all the\
    \ letters in the word, reversely\n    for (index, value) in enumerate(reverse(word))\n\
    \        # Checking if the character is a vowel\n        if value in vowels\n\
    \            # If the first character is a vowel, we return empty string\n   \
    \         if index == 0\n                return \"\"\n            else\n     \
    \           # If the current character is a vowel and the previous character is\
    \ not a vowel, we return the character\n                if word[end-index] in\
    \ vowels\n                    return \"\"\n                else\n            \
    \        return value\n                end\n            end\n        end\n   \
    \ end\nend\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\t\
    @test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\
    \t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t\
    @test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"\
    most\") == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\"\
    ) == \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\"\
    ) == \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\"\
    ) == \"o\")\nend\n"
  status: Timeout
  stderr: 'b''ERROR: LoadError: '''
  stdout: 'b''test set: Error During Test at /tmp/tmp8uglk668.jl:39\n  Test threw
    exception\n  Expression: candidate("yogurt") == "u"\n  MethodError: Cannot `convert`
    an object of type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{String},
    !Matched::String) at ~/.conda/envs/polyglot/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    get_closest_vowel(word::String)\n     @ Main /tmp/tmp8uglk668.jl:28\n   [2] macro
    expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8uglk668.jl:39 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8uglk668.jl:38\ntest set: Error
    During Test at /tmp/tmp8uglk668.jl:40\n  Test threw exception\n  Expression: candidate("full")
    == "u"\n  MethodError: Cannot `convert` an object of type Char to an object of
    type String\n  Closest candidates are:\n    convert(::Type{String}, !Matched::String)
    at ~/.conda/envs/polyglot/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    get_closest_vowel(word::String)\n     @ Main /tmp/tmp8uglk668.jl:28\n   [2] macro
    expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8uglk668.jl:40 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-leve'
  timestamp: 1659822174
- exit_code: 1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ index::Int\n    n::Int = length(word)\n    max_idx::Int = 0\n   \n    for i=1:n-1\n\
    \        if is_consonant(word[i]) && is_consonant(word[i+1])\n            index\
    \ = find_first_vowel(word,i+1)\n            if index != 0\n                if\
    \ index - i > max_idx\n                    max_idx = index\n                end\n\
    \            end\n        end\n    end\n    if max_idx != 0\n        return word[max_idx]\n\
    \    else\n        return \"\"\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = get_closest_vowel;\n\t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"\
    full\") == \"u\")\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"\
    eAsy\") == \"\")\n\t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\"\
    ) == \"a\")\n\t@test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\")\
    \ == \"\")\n\t@test(candidate(\"ba\") == \"\")\n\t@test(candidate(\"quick\") ==\
    \ \"\")\n\t@test(candidate(\"anime\") == \"i\")\n\t@test(candidate(\"Asia\") ==\
    \ \"\")\n\t@test(candidate(\"Above\") == \"o\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 13 errored,
    0 broken.

    in expression starting at /tmp/tmptfs4mjv_.jl:34

    '
  stdout: "test set: Error During Test at /tmp/tmptfs4mjv_.jl:37\n  Test threw exception\n\
    \  Expression: candidate(\"yogurt\") == \"u\"\n  UndefVarError: index not defined\n\
    \  Stacktrace:\n   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmptfs4mjv_.jl:12\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmptfs4mjv_.jl:37 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmptfs4mjv_.jl:36\ntest set:\
    \ Error During Test at /tmp/tmptfs4mjv_.jl:38\n  Test threw exception\n  Expression:\
    \ candidate(\"full\") == \"u\"\n  UndefVarError: index not defined\n  Stacktrace:\n\
    \   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmptfs4mjv_.jl:12\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmptfs4mjv_.jl:38 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmptfs4mjv_.jl:36\ntest set:\
    \ Error During Test at /tmp/tmptfs4mjv_.jl:39\n  Test threw exception\n  Expression:\
    \ candidate(\"easy\") == \"\"\n  UndefVarError: index not defined\n  Stacktrace:\n\
    \   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmptfs4mjv_.jl:12\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmptfs4mjv_.jl:39 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmptfs4mjv_.jl:36\ntest set:\
    \ Error During Test at /tmp/tmptfs4mjv_.jl:40\n  Test threw exception\n  Expression:\
    \ candidate(\"eAsy\") == \"\"\n  UndefVarError: index not defined\n  Stacktrace:\n\
    \   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmptfs4mjv_.jl:12\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl"
  timestamp: 1659822173
- exit_code: 1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\"\
    , \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"z\"\
    ]\n    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    split = split(word)\n\
    \    for k,w in enumerate(split)\n        if w in vowels\n            if k-1>=0\
    \ && k+1<=length(split) && (split[k-1] in consonants) && (split[k+1] in consonants)\n\
    \                return w\n    end\n    return \"\"\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"yogurt\") == \"\
    u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"easy\") == \"\
    \")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\") == \"\"\
    )\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\") == \"o\"\
    )\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") == \"\")\n\t\
    @test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") == \"i\")\n\t\
    @test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") == \"o\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: invalid iteration specification\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpyfg48nz2.jl:15\nin expression starting at\
    \ /tmp/tmpyfg48nz2.jl:15\n"
  stdout: ''
  timestamp: 1659822171
- exit_code: -1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ vowels = \"aeiou\"\n    has_vowel = [i for i in word if i in vowels]\n    if\
    \ has_vowel == []\n        return \"\"\n    end\n    word = word[findfirst(word,\
    \ has_vowel[1]):end]\n    left_part = [i for i in word if i in vowels]\n    for\
    \ i in left_part\n        if word[length(word)-1] != i\n            return i\n\
    \        end\n    end\n    return \"\"\nend\n# test cases\nprintln(get_closest_vowel(\"\
    bz\")) # return \"a\"\nprintln(get_closest_vowel(\"baz\")) # return \"a\"\nprintln(get_closest_vowel(\"\
    maz\")) # return \"a\"\nprintln(get_closest_vowel(\"mz\")) # return \"a\"\nprintln(get_closest_vowel(\"\
    Mz\")) # return \"a\"\nprintln(get_closest_vowel(\"Maz\")) # return \"a\"\nprintln(get_closest_vowel(\"\
    mAz\")) # return \"a\"\nprintln(get_closest_vowel(\"mAzZZ\")) # return \"a\"\n\
    println(get_closest_vowel(\"kzzz\")) # return \"u\"\nprintln(get_closest_vowel(\"\
    ZZZJK\")) # return \"\"\nprintln(get_closest_vowel(\"Z\")) # return \"\"\nprintln(get_closest_vowel(\"\
    bZE\")) # return \"e\"\nprintln(get_closest_vowel(\"bZEQ\")) # return \"e\"\n\
    println(get_closest_vowel(\"bZEE\")) # return \"e\"\nprintln(get_closest_vowel(\"\
    bEEZ\")) # return \"e\"\nprintln(get_closest_vowel(\"bEEQ\")) # return \"e\"\n\
    println(get_closest_vowel(\"bZU\")) # return \"u\"\nprintln(get_closest_vowel(\"\
    bZUU\")) # return \"u\"\n\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\
    \t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\"\
    )\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\
    \t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t\
    @test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"\
    ba\") == \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\"\
    ) == \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\"\
    ) == \"o\")\nend\n"
  status: Timeout
  stderr: 'b''ERROR: LoadError: MethodError: no method matching findfirst(::String,
    ::Char)\nClosest candidates are:\n  findfirst(!Matched::Function, ::Any) at ~/.conda/envs/polyglot/share/julia/base/array.jl:1994\n  findfirst(::AbstractString,
    !Matched::AbstractString) at ~/.conda/envs/polyglot/share/julia/base/strings/search.jl:104\n  findfirst(::Any)
    at ~/.conda/envs/polyglot/share/julia/base/array.jl:1910\nStacktrace:\n [1] '''
  stdout: b'\n'
  timestamp: 1659822174
- exit_code: 1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    for i in reverse(1:length(word))\n\
    \        if word[i] in vowels\n            return word[i]\n        end\n    end\n\
    \    return \"\"\nend\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\
    \t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\"\
    )\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\
    \t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t\
    @test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"\
    ba\") == \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\"\
    ) == \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\"\
    ) == \"o\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpjt7_4mde.jl:22

    '
  stdout: "test set: Test Failed at /tmp/tmpjt7_4mde.jl:25\n  Expression: candidate(\"\
    yogurt\") == \"u\"\n   Evaluated: \"\" == \"u\"\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpjt7_4mde.jl:25 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpjt7_4mde.jl:24\ntest set: Test Failed at /tmp/tmpjt7_4mde.jl:26\n\
    \  Expression: candidate(\"full\") == \"u\"\n   Evaluated: \"\" == \"u\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjt7_4mde.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjt7_4mde.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpjt7_4mde.jl:30\n  Expression: candidate(\"bad\") == \"a\"\n\
    \   Evaluated: \"\" == \"a\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjt7_4mde.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjt7_4mde.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpjt7_4mde.jl:31\n  Expression: candidate(\"most\") == \"o\"\
    \n   Evaluated: \"\" == \"o\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjt7_4mde.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjt7_4mde.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpjt7_4mde.jl:35\n  Expression: candidate(\"anime\") == \"i\"\
    \n   Evaluated: \"\" == \"i\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjt7_4mde.jl:35 [inlined]\n"
  timestamp: 1659822172
- exit_code: 1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ # loop through the word starting from the end\n    for i in length(word):length(word)-1\n\
    \        # check if the letters are consonants\n        if !isvowel(word[i]) &&\
    \ !isvowel(word[i-1])\n            # check if the position is a vowel\n      \
    \      if isvowel(word[i-2])\n                return word[i-2]\n            end\n\
    \        end\n    end\n    # if no vowel was found, return empty string\n    return\
    \ \"\"\nend\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\t\
    @test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\
    \t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t\
    @test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"\
    most\") == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\"\
    ) == \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\"\
    ) == \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\"\
    ) == \"o\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmphqfpmiv4.jl:27

    '
  stdout: "test set: Test Failed at /tmp/tmphqfpmiv4.jl:30\n  Expression: candidate(\"\
    yogurt\") == \"u\"\n   Evaluated: \"\" == \"u\"\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmphqfpmiv4.jl:30 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmphqfpmiv4.jl:29\ntest set: Test Failed at /tmp/tmphqfpmiv4.jl:31\n\
    \  Expression: candidate(\"full\") == \"u\"\n   Evaluated: \"\" == \"u\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphqfpmiv4.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphqfpmiv4.jl:29\ntest set: Test\
    \ Failed at /tmp/tmphqfpmiv4.jl:35\n  Expression: candidate(\"bad\") == \"a\"\n\
    \   Evaluated: \"\" == \"a\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphqfpmiv4.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphqfpmiv4.jl:29\ntest set: Test\
    \ Failed at /tmp/tmphqfpmiv4.jl:36\n  Expression: candidate(\"most\") == \"o\"\
    \n   Evaluated: \"\" == \"o\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphqfpmiv4.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphqfpmiv4.jl:29\ntest set: Test\
    \ Failed at /tmp/tmphqfpmiv4.jl:40\n  Expression: candidate(\"anime\") == \"i\"\
    \n   Evaluated: \"\" == \"i\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphqfpmiv4.jl:40 [inlined]\n"
  timestamp: 1659822172
- exit_code: -1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ # Your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\
    \t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\"\
    )\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\
    \t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t\
    @test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"\
    ba\") == \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\"\
    ) == \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\"\
    ) == \"o\")\nend\n"
  status: Timeout
  stderr: 'b''ERROR: '''
  stdout: 'b''test set: Error During Test at /tmp/tmp3esykbtu.jl:19\n  Test threw
    exception\n  Expression: candidate("yogurt") == "u"\n  MethodError: Cannot `convert`
    an object of type Nothing to an object of type String\n  Closest candidates are:\n    convert(::Type{String},
    !Matched::String) at ~/.conda/envs/polyglot/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    get_closest_vowel(word::String)\n     @ Main /tmp/tmp3esykbtu.jl:13\n   [2] macro
    expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmp3esykbtu.jl:19 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmp3esykbtu.jl:18\ntest set: Error
    During Test at /tmp/tmp3esykbtu.jl:20\n  Test threw exception\n  Expression: candidate("full")
    == "u"\n  MethodError: Cannot `convert` an object of type Nothing to an object
    of type String\n  Closest candidates are:\n    convert(::Type{String}, !Matched::String)
    at ~/.conda/envs/polyglot/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    get_closest_vowel(word::String)\n     @ Main /tmp/tmp3esykbtu.jl:13\n   [2] macro
    expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmp3esykbtu.jl:20 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] to'
  timestamp: 1659822161
- exit_code: 1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ vowels = \"aeiou\"\n    word_list = collect(split(word, \"\"))\n    for i in\
    \ 1:length(word)\n        if word_list[end - i] in vowels\n            return\
    \ word_list[end - i]\n        end\n    end\n    return \"\"\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"yogurt\"\
    ) == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"easy\"\
    ) == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\") ==\
    \ \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\") ==\
    \ \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") == \"\"\
    )\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") == \"i\"\
    )\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") == \"o\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 13 errored,
    0 broken.

    in expression starting at /tmp/tmptwnyi330.jl:23

    '
  stdout: "test set: Error During Test at /tmp/tmptwnyi330.jl:26\n  Test threw exception\n\
    \  Expression: candidate(\"yogurt\") == \"u\"\n  use occursin(x, y) for string\
    \ containment\n  Stacktrace:\n   [1] error(s::String)\n     @ Base ./error.jl:33\n\
    \   [2] in(#unused#::SubString{String}, #unused#::String)\n     @ Base ./strings/search.jl:638\n\
    \   [3] get_closest_vowel(word::String)\n     @ Main /tmp/tmptwnyi330.jl:15\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmptwnyi330.jl:26 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmptwnyi330.jl:25\ntest set:\
    \ Error During Test at /tmp/tmptwnyi330.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"full\") == \"u\"\n  use occursin(x, y) for string containment\n\
    \  Stacktrace:\n   [1] error(s::String)\n     @ Base ./error.jl:33\n   [2] in(#unused#::SubString{String},\
    \ #unused#::String)\n     @ Base ./strings/search.jl:638\n   [3] get_closest_vowel(word::String)\n\
    \     @ Main /tmp/tmptwnyi330.jl:15\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmptwnyi330.jl:27 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmptwnyi330.jl:25\ntest set:\
    \ Error During Test at /tmp/tmptwnyi330.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"easy\") == \"\"\n  use occursin(x, y) for string containment\n \
    \ Stacktrace:\n   [1] error(s::String)\n     @ Base ./error.jl:33\n   [2] in(#unused#::SubString{String},\
    \ #unused#::String)\n     @ Base ./strings/search.jl:638\n   [3] get_closest_vowel(word::String)\n\
    \     @ Main /tmp/tmptwnyi330.jl:15\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmptwnyi330.jl:28 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.cond"
  timestamp: 1659822174
- exit_code: 1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ # your code starts here\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\
    \t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\"\
    )\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\
    \t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t\
    @test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"\
    ba\") == \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\"\
    ) == \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\"\
    ) == \"o\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpb7cxrfz6.jl:11\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpb7cxrfz6.jl:1\n\
    in expression starting at /tmp/tmpb7cxrfz6.jl:1\n"
  stdout: ''
  timestamp: 1659822171
- exit_code: 1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ vowels = \"aeiou\"\n    for i in eachindex(word)\n        if word[i] in vowels\
    \ && i > 1\n            if word[i-1] in \"aeiou\" && word[i+1] in \"aeiou\"\n\
    \                continue\n            else\n                return word[i]\n\
    \            end\n        end\n    end\n    return \"\"\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"yogurt\") == \"\
    u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"easy\") == \"\
    \")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\") == \"\"\
    )\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\") == \"o\"\
    )\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") == \"\")\n\t\
    @test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") == \"i\")\n\t\
    @test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") == \"o\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 11 errored,
    0 broken.

    in expression starting at /tmp/tmpplk8k73b.jl:26

    '
  stdout: "test set: Error During Test at /tmp/tmpplk8k73b.jl:29\n  Test threw exception\n\
    \  Expression: candidate(\"yogurt\") == \"u\"\n  MethodError: Cannot `convert`\
    \ an object of type Char to an object of type String\n  Closest candidates are:\n\
    \    convert(::Type{String}, !Matched::String) at ~/.conda/envs/polyglot/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmpplk8k73b.jl:18\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpplk8k73b.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpplk8k73b.jl:28\ntest set:\
    \ Error During Test at /tmp/tmpplk8k73b.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"full\") == \"u\"\n  MethodError: Cannot `convert` an object of type\
    \ Char to an object of type String\n  Closest candidates are:\n    convert(::Type{String},\
    \ !Matched::String) at ~/.conda/envs/polyglot/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmpplk8k73b.jl:18\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpplk8k73b.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpplk8k73b.jl:28\nte"
  timestamp: 1659822174
- exit_code: -1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ #word = \"codewars\"\n    position = length(word) - 1\n    for i in reverse(word)\n\
    \        if i in \"aeiou\"\n            return i\n        end\n    end\n    return\
    \ \"\"\nend\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\t\
    @test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\
    \t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t\
    @test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"\
    most\") == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\"\
    ) == \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\"\
    ) == \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\"\
    ) == \"o\")\nend\n"
  status: Timeout
  stderr: 'b''ERROR: '''
  stdout: 'b''test set: Error During Test at /tmp/tmpjr2l4ur5.jl:26\n  Test threw
    exception\n  Expression: candidate("yogurt") == "u"\n  MethodError: Cannot `convert`
    an object of type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{String},
    !Matched::String) at ~/.conda/envs/polyglot/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    get_closest_vowel(word::String)\n     @ Main /tmp/tmpjr2l4ur5.jl:16\n   [2] macro
    expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpjr2l4ur5.jl:26 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpjr2l4ur5.jl:25\ntest set: Error
    During Test at /tmp/tmpjr2l4ur5.jl:27\n  Test threw exception\n  Expression: candidate("full")
    == "u"\n  MethodError: Cannot `convert` an object of type Char to an object of
    type String\n  Closest candidates are:\n    convert(::Type{String}, !Matched::String)
    at ~/.conda/envs/polyglot/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    get_closest_vowel(word::String)\n     @ Main /tmp/tmpjr2l4ur5.jl:16\n   [2] macro
    expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpjr2l4ur5.jl:27 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-leve'
  timestamp: 1659822175
- exit_code: 1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ # starting index\n    # the following vowel\n    # number of character to the\
    \ right of our starting index\n    # index of the closing of the word\n    # each\
    \ word is a sequence of character, so it can be iterated over\n    # out vowel\n\
    \    # we start from the end of the word\n    # we iterate over the number of\
    \ character to the right of the starting index\n    # \n    # if the character\
    \ we are on is a vowel\n        # we set the ending character\n        # we find\
    \ the difference in index\n            # if the difference is one, we return the\
    \ found vowel\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\
    \t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\"\
    )\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\
    \t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t\
    @test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"\
    ba\") == \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\"\
    ) == \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\"\
    ) == \"o\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp3pv40hs_.jl:11\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp3pv40hs_.jl:1\n\
    in expression starting at /tmp/tmp3pv40hs_.jl:1\n"
  stdout: ''
  timestamp: 1659822171
- exit_code: -1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ \"\"\"Find the closest vowel in a word from the right side \n    that stands\
    \ between two consonants.\"\"\"\n    vowels = \"aeiouAEIOU\"\n    place = 0\n\
    \    for c in reverse(word)\n        if c in vowels \n            place += 1\n\
    \            if place == 2\n                return c\n            end\n      \
    \  else\n            place = 0\n        end\n    end\n    return \"\"\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"\
    yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"\
    easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\"\
    ) == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\")\
    \ == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") ==\
    \ \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") ==\
    \ \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") ==\
    \ \"o\")\nend\n"
  status: Timeout
  stderr: 'b''ERROR: '''
  stdout: 'b''test set: Test Failed at /tmp/tmp97_jlamv.jl:33\n  Expression: candidate("yogurt")
    == "u"\n   Evaluated: "" == "u"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n [2] macro expansion\n   @ /tmp/tmp97_jlamv.jl:33 [inlined]\n [3] macro
    expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n [4] top-level scope\n   @ /tmp/tmp97_jlamv.jl:32\ntest set: Test Failed
    at /tmp/tmp97_jlamv.jl:34\n  Expression: candidate("full") == "u"\n   Evaluated:
    "" == "u"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n [2] macro expansion\n   @ /tmp/tmp97_jlamv.jl:34 [inlined]\n [3] macro
    expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n [4] top-level scope\n   @ /tmp/tmp97_jlamv.jl:32\ntest set: Error
    During Test at /tmp/tmp97_jlamv.jl:35\n  Test threw exception\n  Expression: candidate("easy")
    == ""\n  MethodError: Cannot `convert` an object of type Char to an object of
    type String\n  Closest candidates are:\n    convert(::Type{String}, !Matched::String)
    at ~/.conda/envs/polyglot/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    get_closest_vowel(word::String)\n     @ Main /tmp/tmp97_jlamv.jl:20\n   [2] macro
    expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmp97_jlamv.jl:35 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmp97_jlamv.jl:32\ntest set: Error
    During Test at /tmp/tmp97_jlamv.jl:36\n  Test threw exception\n  Expression: candid'
  timestamp: 1659822175
- exit_code: 1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ word = reverse(word)\n    word\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = get_closest_vowel;\n\t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"\
    full\") == \"u\")\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"\
    eAsy\") == \"\")\n\t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\"\
    ) == \"a\")\n\t@test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\")\
    \ == \"\")\n\t@test(candidate(\"ba\") == \"\")\n\t@test(candidate(\"quick\") ==\
    \ \"\")\n\t@test(candidate(\"anime\") == \"i\")\n\t@test(candidate(\"Asia\") ==\
    \ \"\")\n\t@test(candidate(\"Above\") == \"o\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 13 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpqiyztrmy.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpqiyztrmy.jl:20\n  Expression: candidate(\"\
    yogurt\") == \"u\"\n   Evaluated: \"trugoy\" == \"u\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqiyztrmy.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqiyztrmy.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpqiyztrmy.jl:21\n  Expression: candidate(\"full\") == \"u\"\
    \n   Evaluated: \"lluf\" == \"u\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqiyztrmy.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqiyztrmy.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpqiyztrmy.jl:22\n  Expression: candidate(\"easy\") == \"\"\n\
    \   Evaluated: \"ysae\" == \"\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqiyztrmy.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqiyztrmy.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpqiyztrmy.jl:23\n  Expression: candidate(\"eAsy\") == \"\"\n\
    \   Evaluated: \"ysAe\" == \"\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqiyztrmy.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqiyztrmy.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpqiyztrmy.jl:24\n  Expression: candidate(\"ali\") == \"\"\n\
    \   Evaluated: \"ila\" == \"\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqiyztrmy.jl"
  timestamp: 1659822173
- exit_code: 1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ if isempty(word)\n        return \"\"\n    end\n    if length(word) == 1\n \
    \       return \"\"\n    end\n    for i in length(word):-1:2\n        if word[i]\
    \ == 'a' || word[i] == 'e' || word[i] == 'i' || word[i] == 'o' || word[i] == 'u'\n\
    \            return word[i]\n        end\n    end\n    return \"\"\nend\n@test\
    \ get_closest_vowel(\"hello\") == \"e\"\n@test get_closest_vowel(\"helloooooooo\"\
    ) == \"o\"\n@test get_closest_vowel(\"world\") == \"o\"\n@test get_closest_vowel(\"\
    bcd\") == \"\"\n@test get_closest_vowel(\"aa\") == \"\"\n@test get_closest_vowel(\"\
    e\") == \"\"\n@test get_closest_vowel(\"\") == \"\"\n@test get_closest_vowel(\"\
    cccvbb\") == \"v\"\n@test get_closest_vowel(\"aaaa\") == \"a\"\n@test get_closest_vowel(\"\
    oeu\") == \"e\"\n@test get_closest_vowel(\"ueo\") == \"o\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"yogurt\") == \"\
    u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"easy\") == \"\
    \")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\") == \"\"\
    )\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\") == \"o\"\
    )\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") == \"\")\n\t\
    @test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") == \"i\")\n\t\
    @test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") == \"o\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: UndefVarError: @test not defined

    in expression starting at /tmp/tmpm7bxthop.jl:25

    in expression starting at /tmp/tmpm7bxthop.jl:25

    '
  stdout: ''
  timestamp: 1659822171
- exit_code: 1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ i = length(word)\n    while i >= 1\n        if isvowel(word[i])\n          \
    \  if i+1 <= length(word)\n                if isconsonant(word[i+1])\n       \
    \             return word[i]\n                end\n            end\n        end\n\
    \        i -= 1\n    end\n    return \"\"\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = get_closest_vowel;\n\t@test(candidate(\"yogurt\") == \"u\")\n\t\
    @test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"easy\") == \"\")\n\t\
    @test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"\
    bad\") == \"a\")\n\t@test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"\
    ab\") == \"\")\n\t@test(candidate(\"ba\") == \"\")\n\t@test(candidate(\"quick\"\
    ) == \"\")\n\t@test(candidate(\"anime\") == \"i\")\n\t@test(candidate(\"Asia\"\
    ) == \"\")\n\t@test(candidate(\"Above\") == \"o\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 13 errored,
    0 broken.

    in expression starting at /tmp/tmp63wfqdtv.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmp63wfqdtv.jl:30\n  Test threw exception\n\
    \  Expression: candidate(\"yogurt\") == \"u\"\n  UndefVarError: isvowel not defined\n\
    \  Stacktrace:\n   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmp63wfqdtv.jl:14\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp63wfqdtv.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp63wfqdtv.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp63wfqdtv.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(\"full\") == \"u\"\n  UndefVarError: isvowel not defined\n  Stacktrace:\n\
    \   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmp63wfqdtv.jl:14\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp63wfqdtv.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp63wfqdtv.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp63wfqdtv.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"easy\") == \"\"\n  UndefVarError: isvowel not defined\n  Stacktrace:\n\
    \   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmp63wfqdtv.jl:14\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp63wfqdtv.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp63wfqdtv.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp63wfqdtv.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(\"eAsy\") == \"\"\n  UndefVarError: isvowel not defined\n  Stacktrace:\n\
    \   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmp63wfqdtv.jl:14\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src"
  timestamp: 1659822174
- exit_code: 1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ len = length(word)\n    cons = get_consonants(word)\n    if len <= 2\n     \
    \   return \"\"\n    end\n    for (i,v) in enumerate(cons)\n        if get_vowel(v)\n\
    \            return word[i+1]\n        end\n    end\n    return \"\"\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"\
    yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"\
    easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\"\
    ) == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\")\
    \ == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") ==\
    \ \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") ==\
    \ \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") ==\
    \ \"o\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 13 errored,
    0 broken.

    in expression starting at /tmp/tmpzos3drhf.jl:26

    '
  stdout: "test set: Error During Test at /tmp/tmpzos3drhf.jl:29\n  Test threw exception\n\
    \  Expression: candidate(\"yogurt\") == \"u\"\n  UndefVarError: get_consonants\
    \ not defined\n  Stacktrace:\n   [1] get_closest_vowel(word::String)\n     @ Main\
    \ /tmp/tmpzos3drhf.jl:13\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpzos3drhf.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpzos3drhf.jl:28\ntest set:\
    \ Error During Test at /tmp/tmpzos3drhf.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"full\") == \"u\"\n  UndefVarError: get_consonants not defined\n\
    \  Stacktrace:\n   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmpzos3drhf.jl:13\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpzos3drhf.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpzos3drhf.jl:28\ntest set:\
    \ Error During Test at /tmp/tmpzos3drhf.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(\"easy\") == \"\"\n  UndefVarError: get_consonants not defined\n \
    \ Stacktrace:\n   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmpzos3drhf.jl:13\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpzos3drhf.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpzos3drhf.jl:28\ntest set:\
    \ Error During Test at /tmp/tmpzos3drhf.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"eAsy\") == \"\"\n  UndefVarError: get_consonants not defined\n \
    \ Stacktrace:\n   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmpzos3drhf.jl:13\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/shar"
  timestamp: 1659822174
- exit_code: -1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ vowels = \"aeiouAEIOU\"\n    for i = length(word):-1:1\n        letter = word[i]\n\
    \        if letter in vowels\n            return letter\n        end\n    end\n\
    \    return \"\"\nend\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\
    \t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\"\
    )\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\
    \t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t\
    @test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"\
    ba\") == \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\"\
    ) == \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\"\
    ) == \"o\")\nend\n"
  status: Timeout
  stderr: 'b''ERROR: LoadError: '''
  stdout: 'b''test set: Error During Test at /tmp/tmpsjyzzihv.jl:26\n  Test threw
    exception\n  Expression: candidate("yogurt") == "u"\n  MethodError: Cannot `convert`
    an object of type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{String},
    !Matched::String) at ~/.conda/envs/polyglot/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    get_closest_vowel(word::String)\n     @ Main /tmp/tmpsjyzzihv.jl:16\n   [2] macro
    expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpsjyzzihv.jl:26 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpsjyzzihv.jl:25\ntest set: Error
    During Test at /tmp/tmpsjyzzihv.jl:27\n  Test threw exception\n  Expression: candidate("full")
    == "u"\n  MethodError: Cannot `convert` an object of type Char to an object of
    type String\n  Closest candidates are:\n    convert(::Type{String}, !Matched::String)
    at ~/.conda/envs/polyglot/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    get_closest_vowel(word::String)\n     @ Main /tmp/tmpsjyzzihv.jl:16\n   [2] macro
    expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpsjyzzihv.jl:27 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-leve'
  timestamp: 1659822175
- exit_code: 1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ \n    vowels = \"aeiouAEIOU\"\n    positions = -1:-1:-1\n    for i in positions\n\
    \        c = word[i]\n        c = c[1]\n        if c in vowels\n            if\
    \ i - 1 >= 1\n                if word[i - 1] in vowels\n                    continue\n\
    \                else\n                    return c\n                end\n   \
    \         else\n                continue\n            end\n        else\n    \
    \        if i + 1 < length(word)\n                if word[i + 1] in vowels\n \
    \                   continue\n                else\n                    return\
    \ word[i + 1]\n                end\n            else\n                continue\n\
    \            end\n        end\n    end\n    return \"\"\nend\nget_closest_vowel(\"\
    codewars\") #=> \"e\"\nget_closest_vowel(\"hello\") #=> \"e\"\nget_closest_vowel(\"\
    whatsup\") #=> \"e\"\nget_closest_vowel(\"follow me\") #=> \"o\"\nget_closest_vowel(\"\
    hmm\") #=> \"\"\nget_closest_vowel(\"abciiidef\") #=> \"i\"\nget_closest_vowel(\"\
    what\") #=> \"a\"\nget_closest_vowel(\"a\") #=> \"\"\nget_closest_vowel(\"okay\"\
    ) #=> \"o\"\nget_closest_vowel(\"sparkling\") #=> \"a\"\nget_closest_vowel(\"\
    strength\") #=> \"e\"\nget_closest_vowel(\"coconut\") #=> \"o\"\nget_closest_vowel(\"\
    chocolate\") #=> \"o\"\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\
    \t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\"\
    )\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\
    \t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t\
    @test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"\
    ba\") == \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\"\
    ) == \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\"\
    ) == \"o\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: unterminated multi-line comment #=\
    \ ... =#\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpip5abtzz.jl:42\nin expression\
    \ starting at /tmp/tmpip5abtzz.jl:42\n"
  stdout: ''
  timestamp: 1659822172
- exit_code: 1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ return nothing # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = get_closest_vowel;\n\t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"\
    full\") == \"u\")\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"\
    eAsy\") == \"\")\n\t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\"\
    ) == \"a\")\n\t@test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\")\
    \ == \"\")\n\t@test(candidate(\"ba\") == \"\")\n\t@test(candidate(\"quick\") ==\
    \ \"\")\n\t@test(candidate(\"anime\") == \"i\")\n\t@test(candidate(\"Asia\") ==\
    \ \"\")\n\t@test(candidate(\"Above\") == \"o\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 13 errored,
    0 broken.

    in expression starting at /tmp/tmp1neadkcf.jl:16

    '
  stdout: "test set: Error During Test at /tmp/tmp1neadkcf.jl:19\n  Test threw exception\n\
    \  Expression: candidate(\"yogurt\") == \"u\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at ~/.conda/envs/polyglot/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmp1neadkcf.jl:12\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp1neadkcf.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp1neadkcf.jl:18\ntest set:\
    \ Error During Test at /tmp/tmp1neadkcf.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"full\") == \"u\"\n  MethodError: Cannot `convert` an object of type\
    \ Nothing to an object of type String\n  Closest candidates are:\n    convert(::Type{String},\
    \ !Matched::String) at ~/.conda/envs/polyglot/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmp1neadkcf.jl:12\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp1neadkcf.jl:20 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp1neadkcf.jl"
  timestamp: 1659822175
- exit_code: 1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ \n    Constants\n    VOWELS = \"aeiou\"\n    DISTANCE = 3000000\n    \n    Variables\n\
    \    left_index::Int64 = 0\n    right_index::Int64 = 0\n    distance::Int64 =\
    \ 0\n    current_position::Int64 = 0\n    result::Int64 = 0\n    \n    for char\
    \ in word\n        current_position += 1\n        if char in VOWELS\n        \
    \    left_index = 0\n            right_index = 0\n            for i in current_position+1:length(word)\n\
    \                if word[i] in VOWELS\n                    right_index = i\n \
    \                   break\n                end\n            end\n            for\
    \ i in current_position-1:-1:1\n                if word[i] in VOWELS\n       \
    \             left_index = i\n                    break\n                end\n\
    \            end\n            distance = min(abs(left_index-current_position),\
    \ abs(right_index-current_position))\n            if distance < DISTANCE\n   \
    \             DISTANCE = distance\n                result = current_position\n\
    \            end\n        end\n    end\n    if result != 0\n        return string(word[result])\n\
    \    else\n        return \"\"\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = get_closest_vowel;\n\t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"\
    full\") == \"u\")\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"\
    eAsy\") == \"\")\n\t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\"\
    ) == \"a\")\n\t@test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\")\
    \ == \"\")\n\t@test(candidate(\"ba\") == \"\")\n\t@test(candidate(\"quick\") ==\
    \ \"\")\n\t@test(candidate(\"anime\") == \"i\")\n\t@test(candidate(\"Asia\") ==\
    \ \"\")\n\t@test(candidate(\"Above\") == \"o\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 13 errored,
    0 broken.

    in expression starting at /tmp/tmplctwp38e.jl:56

    '
  stdout: "test set: Error During Test at /tmp/tmplctwp38e.jl:59\n  Test threw exception\n\
    \  Expression: candidate(\"yogurt\") == \"u\"\n  UndefVarError: Constants not\
    \ defined\n  Stacktrace:\n   [1] get_closest_vowel(word::String)\n     @ Main\
    \ /tmp/tmplctwp38e.jl:13\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmplctwp38e.jl:59 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmplctwp38e.jl:58\ntest set:\
    \ Error During Test at /tmp/tmplctwp38e.jl:60\n  Test threw exception\n  Expression:\
    \ candidate(\"full\") == \"u\"\n  UndefVarError: Constants not defined\n  Stacktrace:\n\
    \   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmplctwp38e.jl:13\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmplctwp38e.jl:60 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmplctwp38e.jl:58\ntest set:\
    \ Error During Test at /tmp/tmplctwp38e.jl:61\n  Test threw exception\n  Expression:\
    \ candidate(\"easy\") == \"\"\n  UndefVarError: Constants not defined\n  Stacktrace:\n\
    \   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmplctwp38e.jl:13\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmplctwp38e.jl:61 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmplctwp38e.jl:58\ntest set:\
    \ Error During Test at /tmp/tmplctwp38e.jl:62\n  Test threw exception\n  Expression:\
    \ candidate(\"eAsy\") == \"\"\n  UndefVarError: Constants not defined\n  Stacktrace:\n\
    \   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmplctwp38e.jl:13\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/"
  timestamp: 1659822175
- exit_code: -1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ # your solution here\nend\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\
    \t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\"\
    )\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\
    \t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t\
    @test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"\
    ba\") == \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\"\
    ) == \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\"\
    ) == \"o\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmp5n2famxu.jl:19\n  Test threw
    exception\n  Expression: candidate("yogurt") == "u"\n  MethodError: Cannot `convert`
    an object of type Nothing to an object of type String\n  Closest candidates are:\n    convert(::Type{String},
    !Matched::String) at ~/.conda/envs/polyglot/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    get_closest_vowel(word::String)\n     @ Main /tmp/tmp5n2famxu.jl:13\n   [2] macro
    expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmp5n2famxu.jl:19 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmp5n2famxu.jl:18\ntest set: Error
    During Test at /tmp/tmp5n2famxu.jl:20\n  Test threw exception\n  Expression: candidate("full")
    == "u"\n  MethodError: Cannot `convert` an object of type Nothing to an object
    of type String\n  Closest candidates are:\n    convert(::Type{String}, !Matched::String)
    at ~/.conda/envs/polyglot/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    get_closest_vowel(word::String)\n     @ Main /tmp/tmp5n2famxu.jl:13\n   [2] macro
    expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmp5n2famxu.jl:20 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] to'
  timestamp: 1659822176
- exit_code: 1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ # define vowels\n    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    # convert\
    \ to array\n    array = split(word, \"\")\n    # loop through array\n    for i\
    \ in eachindex(array)\n        # if vowel check for consonants\n        if in(array[i],\
    \ vowels)\n            # check for two consonants behind\n            if i > 1\n\
    \                if (in(array[i-1], vowels) || in(array[i-2], vowels))\n     \
    \               continue\n                else\n                    return array[i]\n\
    \                end\n            else\n                continue\n           \
    \ end\n        end\n    end\n    # if none returned then return empty string\n\
    \    return \"\"\nend\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\
    \t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\"\
    )\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\
    \t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t\
    @test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"\
    ba\") == \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\"\
    ) == \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\"\
    ) == \"o\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 2 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp7eiqb04q.jl:37

    '
  stdout: "test set: Error During Test at /tmp/tmp7eiqb04q.jl:40\n  Test threw exception\n\
    \  Expression: candidate(\"yogurt\") == \"u\"\n  BoundsError: attempt to access\
    \ 6-element Vector{SubString{String}} at index [0]\n  Stacktrace:\n   [1] getindex\n\
    \     @ ./array.jl:861 [inlined]\n   [2] get_closest_vowel(word::String)\n   \
    \  @ Main /tmp/tmp7eiqb04q.jl:22\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp7eiqb04q.jl:40 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp7eiqb04q.jl:39\ntest set:\
    \ Error During Test at /tmp/tmp7eiqb04q.jl:41\n  Test threw exception\n  Expression:\
    \ candidate(\"full\") == \"u\"\n  BoundsError: attempt to access 4-element Vector{SubString{String}}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] get_closest_vowel(word::String)\n     @ Main /tmp/tmp7eiqb04q.jl:22\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp7eiqb04q.jl:41 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp7eiqb04q.jl:39\ntest set:\
    \ Error During Test at /tmp/tmp7eiqb04q.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(\"bad\") == \"a\"\n  BoundsError: attempt to access 3-element Vector{SubString{String}}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] get_closest_vowel(word::String)\n     @ Main /tmp/tmp7eiqb04q.jl:22\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp7eiqb04q.jl:45 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp7eiqb04q.jl:39\ntest set:\
    \ Error During Test at /tmp/tmp7eiqb04"
  timestamp: 1659822176
- exit_code: 1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ VOWELS = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    for i in length(word)::Int64:end:-1:1\n\
    \        if word[i] in VOWELS && (i == length(word) || !(word[i+1] in VOWELS))\n\
    \            return word[i]\n        end\n    end\n    return \"\"\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"\
    yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"\
    easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\"\
    ) == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\")\
    \ == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") ==\
    \ \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") ==\
    \ \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") ==\
    \ \"o\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: missing last argument in \"length(word)::Int64:\"\
    \ range expression \nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpzoofsnoz.jl:13\n\
    in expression starting at /tmp/tmpzoofsnoz.jl:13\n"
  stdout: ''
  timestamp: 1659822173
- exit_code: 1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    right_closest_vowel = \"\"\
    \n    index = length(word)\n    while(index > 0)\n        right_closest_vowel\
    \ = \"\"\n        if(word[index] in vowels)\n            right_closest_vowel =\
    \ word[index]\n            break\n        end\n        index -= 1\n    end\n \
    \   return right_closest_vowel\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = get_closest_vowel;\n\t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"\
    full\") == \"u\")\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"\
    eAsy\") == \"\")\n\t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\"\
    ) == \"a\")\n\t@test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\")\
    \ == \"\")\n\t@test(candidate(\"ba\") == \"\")\n\t@test(candidate(\"quick\") ==\
    \ \"\")\n\t@test(candidate(\"anime\") == \"i\")\n\t@test(candidate(\"Asia\") ==\
    \ \"\")\n\t@test(candidate(\"Above\") == \"o\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp9fyp6lrf.jl:27

    '
  stdout: "test set: Test Failed at /tmp/tmp9fyp6lrf.jl:30\n  Expression: candidate(\"\
    yogurt\") == \"u\"\n   Evaluated: \"\" == \"u\"\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp9fyp6lrf.jl:30 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp9fyp6lrf.jl:29\ntest set: Test Failed at /tmp/tmp9fyp6lrf.jl:31\n\
    \  Expression: candidate(\"full\") == \"u\"\n   Evaluated: \"\" == \"u\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9fyp6lrf.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9fyp6lrf.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp9fyp6lrf.jl:35\n  Expression: candidate(\"bad\") == \"a\"\n\
    \   Evaluated: \"\" == \"a\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9fyp6lrf.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9fyp6lrf.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp9fyp6lrf.jl:36\n  Expression: candidate(\"most\") == \"o\"\
    \n   Evaluated: \"\" == \"o\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9fyp6lrf.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9fyp6lrf.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp9fyp6lrf.jl:40\n  Expression: candidate(\"anime\") == \"i\"\
    \n   Evaluated: \"\" == \"i\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9fyp6lrf.jl:40 [inlined]\n"
  timestamp: 1659822174
- exit_code: 1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ for i = length(word):-1:1 \n        if word[i] in (\"a\", \"e\", \"i\", \"o\"\
    , \"u\") \n            return word[i]\n    return \"\" \nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"yogurt\") == \"\
    u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"easy\") == \"\
    \")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\") == \"\"\
    )\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\") == \"o\"\
    )\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") == \"\")\n\t\
    @test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") == \"i\")\n\t\
    @test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") == \"o\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"for\" at /tmp/tmpw9rjawwo.jl:12\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpw9rjawwo.jl:1\n\
    in expression starting at /tmp/tmpw9rjawwo.jl:1\n"
  stdout: ''
  timestamp: 1659822174
- exit_code: 1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ n = length(word)\n    prev = 1\n    for i in n:-1:1\n        if is_vowel(word[i])\
    \ \n            if is_consonant(word[prev]) && is_consonant(word[i-1])\n     \
    \           return word[i]\n            end\n        else \n            prev =\
    \ i\n        end\n    end\n    return \"\"\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = get_closest_vowel;\n\t@test(candidate(\"yogurt\") == \"u\")\n\t\
    @test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"easy\") == \"\")\n\t\
    @test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"\
    bad\") == \"a\")\n\t@test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"\
    ab\") == \"\")\n\t@test(candidate(\"ba\") == \"\")\n\t@test(candidate(\"quick\"\
    ) == \"\")\n\t@test(candidate(\"anime\") == \"i\")\n\t@test(candidate(\"Asia\"\
    ) == \"\")\n\t@test(candidate(\"Above\") == \"o\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 13 errored,
    0 broken.

    in expression starting at /tmp/tmp2ux19ixf.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmp2ux19ixf.jl:30\n  Test threw exception\n\
    \  Expression: candidate(\"yogurt\") == \"u\"\n  UndefVarError: is_vowel not defined\n\
    \  Stacktrace:\n   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmp2ux19ixf.jl:15\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp2ux19ixf.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp2ux19ixf.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp2ux19ixf.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(\"full\") == \"u\"\n  UndefVarError: is_vowel not defined\n  Stacktrace:\n\
    \   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmp2ux19ixf.jl:15\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp2ux19ixf.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp2ux19ixf.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp2ux19ixf.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"easy\") == \"\"\n  UndefVarError: is_vowel not defined\n  Stacktrace:\n\
    \   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmp2ux19ixf.jl:15\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp2ux19ixf.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp2ux19ixf.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp2ux19ixf.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(\"eAsy\") == \"\"\n  UndefVarError: is_vowel not defined\n  Stacktrace:\n\
    \   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmp2ux19ixf.jl:15\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test"
  timestamp: 1659822176
- exit_code: 1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ word_list = split(word, \"\")\n    vowel_list = [\"a\", \"e\", \"i\", \"o\"\
    , \"u\"]\n    vowel_index = 0\n    vowel_letter = \"\"\n    try\n        for i\
    \ in reverse(1:length(word_list))\n            if word_list[i] in vowel_list &&\
    \ i < length(word_list)\n                if word_list[i+1] in vowel_list\n   \
    \                 vowel_index = i+1\n                    vowel_letter = word_list[i+1]\n\
    \                    break\n                end\n            end\n        end\n\
    \    catch\n        return \"\"\n    end\n    return vowel_letter\nend\nget_closest_vowel(\"\
    coderbyte\")\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\
    \t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\"\
    )\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\
    \t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t\
    @test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"\
    ba\") == \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\"\
    ) == \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\"\
    ) == \"o\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 9 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp98q7o4ro.jl:34

    '
  stdout: "test set: Test Failed at /tmp/tmp98q7o4ro.jl:37\n  Expression: candidate(\"\
    yogurt\") == \"u\"\n   Evaluated: \"\" == \"u\"\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp98q7o4ro.jl:37 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp98q7o4ro.jl:36\ntest set: Test Failed at /tmp/tmp98q7o4ro.jl:38\n\
    \  Expression: candidate(\"full\") == \"u\"\n   Evaluated: \"\" == \"u\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp98q7o4ro.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp98q7o4ro.jl:36\ntest set: Test\
    \ Failed at /tmp/tmp98q7o4ro.jl:39\n  Expression: candidate(\"easy\") == \"\"\n\
    \   Evaluated: \"a\" == \"\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp98q7o4ro.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp98q7o4ro.jl:36\ntest set: Test\
    \ Failed at /tmp/tmp98q7o4ro.jl:42\n  Expression: candidate(\"bad\") == \"a\"\n\
    \   Evaluated: \"\" == \"a\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp98q7o4ro.jl:42 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp98q7o4ro.jl:36\ntest set: Test\
    \ Failed at /tmp/tmp98q7o4ro.jl:43\n  Expression: candidate(\"most\") == \"o\"\
    \n   Evaluated: \"\" == \"o\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp98q7o4ro.jl:43 [inlined]\n ["
  timestamp: 1659822175
- exit_code: 1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    consonants = [\"b\", \"c\"\
    , \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\"\
    , \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"]\n    i = length(word)\n\
    \    while i > 1\n        if (word[i] in vowels) && (word[i-1] in consonants)\n\
    \            return word[i]\n        end\n        i -= 1\n    end\n    return\
    \ \"\"\nend\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\t\
    @test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\
    \t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t\
    @test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"\
    most\") == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\"\
    ) == \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\"\
    ) == \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\"\
    ) == \"o\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpq4rkx2_9.jl:25

    '
  stdout: "test set: Test Failed at /tmp/tmpq4rkx2_9.jl:28\n  Expression: candidate(\"\
    yogurt\") == \"u\"\n   Evaluated: \"\" == \"u\"\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpq4rkx2_9.jl:28 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpq4rkx2_9.jl:27\ntest set: Test Failed at /tmp/tmpq4rkx2_9.jl:29\n\
    \  Expression: candidate(\"full\") == \"u\"\n   Evaluated: \"\" == \"u\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4rkx2_9.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4rkx2_9.jl:27\ntest set: Test\
    \ Failed at /tmp/tmpq4rkx2_9.jl:33\n  Expression: candidate(\"bad\") == \"a\"\n\
    \   Evaluated: \"\" == \"a\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4rkx2_9.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4rkx2_9.jl:27\ntest set: Test\
    \ Failed at /tmp/tmpq4rkx2_9.jl:34\n  Expression: candidate(\"most\") == \"o\"\
    \n   Evaluated: \"\" == \"o\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4rkx2_9.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4rkx2_9.jl:27\ntest set: Test\
    \ Failed at /tmp/tmpq4rkx2_9.jl:38\n  Expression: candidate(\"anime\") == \"i\"\
    \n   Evaluated: \"\" == \"i\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4rkx2_9.jl:38 [inlined]\n"
  timestamp: 1659822175
- exit_code: 1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ vowels = set(\"aeiou\")\n    for x in reversed(word)\n        if x in vowels\n\
    \            return x\n        end\n    end\n    return \"\"\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"yogurt\"\
    ) == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"easy\"\
    ) == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\") ==\
    \ \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\") ==\
    \ \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") == \"\"\
    )\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") == \"i\"\
    )\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") == \"o\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 13 errored,
    0 broken.

    in expression starting at /tmp/tmpdzqp4cu7.jl:22

    '
  stdout: "test set: Error During Test at /tmp/tmpdzqp4cu7.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"yogurt\") == \"u\"\n  UndefVarError: set not defined\n\
    \  Stacktrace:\n   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmpdzqp4cu7.jl:12\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpdzqp4cu7.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpdzqp4cu7.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpdzqp4cu7.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"full\") == \"u\"\n  UndefVarError: set not defined\n  Stacktrace:\n\
    \   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmpdzqp4cu7.jl:12\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpdzqp4cu7.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpdzqp4cu7.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpdzqp4cu7.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"easy\") == \"\"\n  UndefVarError: set not defined\n  Stacktrace:\n\
    \   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmpdzqp4cu7.jl:12\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpdzqp4cu7.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpdzqp4cu7.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpdzqp4cu7.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"eAsy\") == \"\"\n  UndefVarError: set not defined\n  Stacktrace:\n\
    \   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmpdzqp4cu7.jl:12\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [in"
  timestamp: 1659822177
- exit_code: 1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ vowel = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    for i = 1:length(word)\n  \
    \      if word[i] in vowel\n            if word[i+1] in vowel || word[i-1] in\
    \ vowel\n                continue\n            else\n                return word[i]\n\
    \            end\n        end\n    end\n    return \"\"\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"yogurt\") == \"\
    u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"easy\") == \"\
    \")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\") == \"\"\
    )\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\") == \"o\"\
    )\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") == \"\")\n\t\
    @test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") == \"i\")\n\t\
    @test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") == \"o\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpriy9el90.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmpriy9el90.jl:29\n  Expression: candidate(\"\
    yogurt\") == \"u\"\n   Evaluated: \"\" == \"u\"\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpriy9el90.jl:29 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpriy9el90.jl:28\ntest set: Test Failed at /tmp/tmpriy9el90.jl:30\n\
    \  Expression: candidate(\"full\") == \"u\"\n   Evaluated: \"\" == \"u\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpriy9el90.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpriy9el90.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpriy9el90.jl:34\n  Expression: candidate(\"bad\") == \"a\"\n\
    \   Evaluated: \"\" == \"a\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpriy9el90.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpriy9el90.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpriy9el90.jl:35\n  Expression: candidate(\"most\") == \"o\"\
    \n   Evaluated: \"\" == \"o\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpriy9el90.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpriy9el90.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpriy9el90.jl:39\n  Expression: candidate(\"anime\") == \"i\"\
    \n   Evaluated: \"\" == \"i\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpriy9el90.jl:39 [inlined]\n"
  timestamp: 1659822176
- exit_code: 1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    for i in eachindex(word)\n\
    \        if word[i] in vowels && word[i+1] in vowels\n            return word[i]\n\
    \        end\n    end\n    return \"\"\nend\nusing Test\n\n@testset begin\n\n\
    candidate = get_closest_vowel;\n\t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"\
    full\") == \"u\")\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"\
    eAsy\") == \"\")\n\t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\"\
    ) == \"a\")\n\t@test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\")\
    \ == \"\")\n\t@test(candidate(\"ba\") == \"\")\n\t@test(candidate(\"quick\") ==\
    \ \"\")\n\t@test(candidate(\"anime\") == \"i\")\n\t@test(candidate(\"Asia\") ==\
    \ \"\")\n\t@test(candidate(\"Above\") == \"o\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpjg28mp_8.jl:22

    '
  stdout: "test set: Test Failed at /tmp/tmpjg28mp_8.jl:25\n  Expression: candidate(\"\
    yogurt\") == \"u\"\n   Evaluated: \"\" == \"u\"\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpjg28mp_8.jl:25 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpjg28mp_8.jl:24\ntest set: Test Failed at /tmp/tmpjg28mp_8.jl:26\n\
    \  Expression: candidate(\"full\") == \"u\"\n   Evaluated: \"\" == \"u\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjg28mp_8.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjg28mp_8.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpjg28mp_8.jl:30\n  Expression: candidate(\"bad\") == \"a\"\n\
    \   Evaluated: \"\" == \"a\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjg28mp_8.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjg28mp_8.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpjg28mp_8.jl:31\n  Expression: candidate(\"most\") == \"o\"\
    \n   Evaluated: \"\" == \"o\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjg28mp_8.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjg28mp_8.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpjg28mp_8.jl:35\n  Expression: candidate(\"anime\") == \"i\"\
    \n   Evaluated: \"\" == \"i\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjg28mp_8.jl:35 [inlined]\n"
  timestamp: 1659822176
- exit_code: 1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ # Write your code here.\n    closest_vowel = \"\"\n    vowels = [\"a\", \"e\"\
    , \"i\", \"o\", \"u\"]\n    length = length(word)\n    for i in length:-1:1\n\
    \        if word[i] in vowels\n            closest_vowel = word[i]\n         \
    \   break\n        end\n    end\n    return closest_vowel\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"yogurt\"\
    ) == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"easy\"\
    ) == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\") ==\
    \ \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\") ==\
    \ \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") == \"\"\
    )\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") == \"i\"\
    )\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") == \"o\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 13 errored,
    0 broken.

    in expression starting at /tmp/tmpscja51ht.jl:26

    '
  stdout: "test set: Error During Test at /tmp/tmpscja51ht.jl:29\n  Test threw exception\n\
    \  Expression: candidate(\"yogurt\") == \"u\"\n  UndefVarError: length not defined\n\
    \  Stacktrace:\n   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmpscja51ht.jl:15\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpscja51ht.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpscja51ht.jl:28\ntest set:\
    \ Error During Test at /tmp/tmpscja51ht.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"full\") == \"u\"\n  UndefVarError: length not defined\n  Stacktrace:\n\
    \   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmpscja51ht.jl:15\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpscja51ht.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpscja51ht.jl:28\ntest set:\
    \ Error During Test at /tmp/tmpscja51ht.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(\"easy\") == \"\"\n  UndefVarError: length not defined\n  Stacktrace:\n\
    \   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmpscja51ht.jl:15\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpscja51ht.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpscja51ht.jl:28\ntest set:\
    \ Error During Test at /tmp/tmpscja51ht.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"eAsy\") == \"\"\n  UndefVarError: length not defined\n  Stacktrace:\n\
    \   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmpscja51ht.jl:15\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Tes"
  timestamp: 1659822177
- exit_code: 1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ for i in eachindex(word)\n        if isvowel(word[i]) && isconsonant(word[i-1])\
    \ && isconsonant(word[i+1])\n            return word[i]\n        end\n    end\n\
    \    return \"\"\nend\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\
    \t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\"\
    )\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\
    \t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t\
    @test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"\
    ba\") == \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\"\
    ) == \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\"\
    ) == \"o\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 13 errored,
    0 broken.

    in expression starting at /tmp/tmpzte5a5xo.jl:21

    '
  stdout: "test set: Error During Test at /tmp/tmpzte5a5xo.jl:24\n  Test threw exception\n\
    \  Expression: candidate(\"yogurt\") == \"u\"\n  UndefVarError: isvowel not defined\n\
    \  Stacktrace:\n   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmpzte5a5xo.jl:13\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpzte5a5xo.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpzte5a5xo.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpzte5a5xo.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(\"full\") == \"u\"\n  UndefVarError: isvowel not defined\n  Stacktrace:\n\
    \   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmpzte5a5xo.jl:13\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpzte5a5xo.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpzte5a5xo.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpzte5a5xo.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"easy\") == \"\"\n  UndefVarError: isvowel not defined\n  Stacktrace:\n\
    \   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmpzte5a5xo.jl:13\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpzte5a5xo.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpzte5a5xo.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpzte5a5xo.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"eAsy\") == \"\"\n  UndefVarError: isvowel not defined\n  Stacktrace:\n\
    \   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmpzte5a5xo.jl:13\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src"
  timestamp: 1659822178
- exit_code: 1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ # your code goes here\nend\n\"\"\"Best Practices\nusing Test\n\n@testset begin\n\
    \ncandidate = get_closest_vowel;\n\t@test(candidate(\"yogurt\") == \"u\")\n\t\
    @test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"easy\") == \"\")\n\t\
    @test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"\
    bad\") == \"a\")\n\t@test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"\
    ab\") == \"\")\n\t@test(candidate(\"ba\") == \"\")\n\t@test(candidate(\"quick\"\
    ) == \"\")\n\t@test(candidate(\"anime\") == \"i\")\n\t@test(candidate(\"Asia\"\
    ) == \"\")\n\t@test(candidate(\"Above\") == \"o\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpzlwknxwp.jl:14\nin expression starting at\
    \ /tmp/tmpzlwknxwp.jl:14\n"
  stdout: ''
  timestamp: 1659822175
- exit_code: 1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ vowel::Array{String,1} = [\"a\",\"e\",\"i\",\"o\",\"u\"]\n    if word[end] in\
    \ vowel\n        return \"\"\n    end\n    if word[1] in vowel\n        word =\
    \ word[2:end]\n    end\n    for i in length(word):-1:1\n        if word[i] in\
    \ vowel\n            if word[i+1] in vowel\n                continue\n       \
    \     else\n                return word[i]\n            end\n        end\n   \
    \ end\n    return \"\"\nend\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\
    \t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\"\
    )\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\
    \t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t\
    @test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"\
    ba\") == \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\"\
    ) == \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\"\
    ) == \"o\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpoh137326.jl:32

    '
  stdout: "test set: Test Failed at /tmp/tmpoh137326.jl:35\n  Expression: candidate(\"\
    yogurt\") == \"u\"\n   Evaluated: \"\" == \"u\"\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpoh137326.jl:35 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpoh137326.jl:34\ntest set: Test Failed at /tmp/tmpoh137326.jl:36\n\
    \  Expression: candidate(\"full\") == \"u\"\n   Evaluated: \"\" == \"u\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpoh137326.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpoh137326.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpoh137326.jl:40\n  Expression: candidate(\"bad\") == \"a\"\n\
    \   Evaluated: \"\" == \"a\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpoh137326.jl:40 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpoh137326.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpoh137326.jl:41\n  Expression: candidate(\"most\") == \"o\"\
    \n   Evaluated: \"\" == \"o\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpoh137326.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpoh137326.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpoh137326.jl:45\n  Expression: candidate(\"anime\") == \"i\"\
    \n   Evaluated: \"\" == \"i\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpoh137326.jl:45 [inlined]\n"
  timestamp: 1659822176
- exit_code: -1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ # TODO: your code goes here\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = get_closest_vowel;\n\t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"\
    full\") == \"u\")\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"\
    eAsy\") == \"\")\n\t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\"\
    ) == \"a\")\n\t@test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\")\
    \ == \"\")\n\t@test(candidate(\"ba\") == \"\")\n\t@test(candidate(\"quick\") ==\
    \ \"\")\n\t@test(candidate(\"anime\") == \"i\")\n\t@test(candidate(\"Asia\") ==\
    \ \"\")\n\t@test(candidate(\"Above\") == \"o\")\nend\n"
  status: Timeout
  stderr: 'b''ERROR: '''
  stdout: 'b''test set: Error During Test at /tmp/tmpz_qtl2rk.jl:19\n  Test threw
    exception\n  Expression: candidate("yogurt") == "u"\n  MethodError: Cannot `convert`
    an object of type Nothing to an object of type String\n  Closest candidates are:\n    convert(::Type{String},
    !Matched::String) at ~/.conda/envs/polyglot/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    get_closest_vowel(word::String)\n     @ Main /tmp/tmpz_qtl2rk.jl:13\n   [2] macro
    expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpz_qtl2rk.jl:19 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpz_qtl2rk.jl:18\ntest set: Error
    During Test at /tmp/tmpz_qtl2rk.jl:20\n  Test threw exception\n  Expression: candidate("full")
    == "u"\n  MethodError: Cannot `convert` an object of type Nothing to an object
    of type String\n  Closest candidates are:\n    convert(::Type{String}, !Matched::String)
    at ~/.conda/envs/polyglot/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    get_closest_vowel(word::String)\n     @ Main /tmp/tmpz_qtl2rk.jl:13\n   [2] macro
    expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpz_qtl2rk.jl:20 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] to'
  timestamp: 1659822179
- exit_code: -1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ # YOUR CODE HERE\nend\n    \n    \nusing Test\n\n@testset begin\n\ncandidate\
    \ = get_closest_vowel;\n\t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"\
    full\") == \"u\")\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"\
    eAsy\") == \"\")\n\t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\"\
    ) == \"a\")\n\t@test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\")\
    \ == \"\")\n\t@test(candidate(\"ba\") == \"\")\n\t@test(candidate(\"quick\") ==\
    \ \"\")\n\t@test(candidate(\"anime\") == \"i\")\n\t@test(candidate(\"Asia\") ==\
    \ \"\")\n\t@test(candidate(\"Above\") == \"o\")\nend\n"
  status: Timeout
  stderr: 'b''ERROR: LoadError: '''
  stdout: 'b''test set: Error During Test at /tmp/tmp6k2ndyit.jl:21\n  Test threw
    exception\n  Expression: candidate("yogurt") == "u"\n  MethodError: Cannot `convert`
    an object of type Nothing to an object of type String\n  Closest candidates are:\n    convert(::Type{String},
    !Matched::String) at ~/.conda/envs/polyglot/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    get_closest_vowel(word::String)\n     @ Main /tmp/tmp6k2ndyit.jl:13\n   [2] macro
    expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmp6k2ndyit.jl:21 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmp6k2ndyit.jl:20\ntest set: Error
    During Test at /tmp/tmp6k2ndyit.jl:22\n  Test threw exception\n  Expression: candidate("full")
    == "u"\n  MethodError: Cannot `convert` an object of type Nothing to an object
    of type String\n  Closest candidates are:\n    convert(::Type{String}, !Matched::String)
    at ~/.conda/envs/polyglot/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    get_closest_vowel(word::String)\n     @ Main /tmp/tmp6k2ndyit.jl:13\n   [2] macro
    expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmp6k2ndyit.jl:22 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] to'
  timestamp: 1659822179
- exit_code: 1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ \n    for i in eachindex(word)\n        if word[i] == 'a' || word[i] == 'e'\
    \ || word[i] == 'i' || word[i] == 'o' || word[i] == 'u'\n            if i > 1\
    \ && i < lastindex(word)\n                if !(word[i-1] == 'a' || word[i-1] ==\
    \ 'e' || word[i-1] == 'i' || word[i-1] == 'o' || word[i-1] == 'u') &&\n      \
    \                  !(word[i+1] == 'a' || word[i+1] == 'e' || word[i+1] == 'i'\
    \ || word[i+1] == 'o' || word[i+1] == 'u')\n                    return word[i]\n\
    \                end\n            end\n        end\n    end\n    return \"\"\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"\
    yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"\
    easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\"\
    ) == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\")\
    \ == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") ==\
    \ \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") ==\
    \ \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") ==\
    \ \"o\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpv7ebfdwf.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmpv7ebfdwf.jl:30\n  Test threw exception\n\
    \  Expression: candidate(\"yogurt\") == \"u\"\n  MethodError: Cannot `convert`\
    \ an object of type Char to an object of type String\n  Closest candidates are:\n\
    \    convert(::Type{String}, !Matched::String) at ~/.conda/envs/polyglot/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmpv7ebfdwf.jl:18\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpv7ebfdwf.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpv7ebfdwf.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpv7ebfdwf.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(\"full\") == \"u\"\n  MethodError: Cannot `convert` an object of type\
    \ Char to an object of type String\n  Closest candidates are:\n    convert(::Type{String},\
    \ !Matched::String) at ~/.conda/envs/polyglot/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmpv7ebfdwf.jl:18\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpv7ebfdwf.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpv7ebfdwf.jl:29\nte"
  timestamp: 1659822179
- exit_code: -1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ # your code goes here\nend\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\
    \t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\"\
    )\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\
    \t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t\
    @test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"\
    ba\") == \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\"\
    ) == \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\"\
    ) == \"o\")\nend\n"
  status: Timeout
  stderr: 'b''ERROR: LoadError: '''
  stdout: 'b''test set: Error During Test at /tmp/tmpot9yfudg.jl:19\n  Test threw
    exception\n  Expression: candidate("yogurt") == "u"\n  MethodError: Cannot `convert`
    an object of type Nothing to an object of type String\n  Closest candidates are:\n    convert(::Type{String},
    !Matched::String) at ~/.conda/envs/polyglot/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    get_closest_vowel(word::String)\n     @ Main /tmp/tmpot9yfudg.jl:13\n   [2] macro
    expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpot9yfudg.jl:19 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpot9yfudg.jl:18\ntest set: Error
    During Test at /tmp/tmpot9yfudg.jl:20\n  Test threw exception\n  Expression: candidate("full")
    == "u"\n  MethodError: Cannot `convert` an object of type Nothing to an object
    of type String\n  Closest candidates are:\n    convert(::Type{String}, !Matched::String)
    at ~/.conda/envs/polyglot/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    get_closest_vowel(word::String)\n     @ Main /tmp/tmpot9yfudg.jl:13\n   [2] macro
    expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpot9yfudg.jl:20 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] to'
  timestamp: 1659822163
- exit_code: 1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ str_len = length(word)\n    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n \
    \   dist = str_len\n    closest_vowel = \"\"\n    for i in 1:str_len\n       \
    \ if in(word[i], vowels)\n            vowel_pos = i\n            vowel_dist =\
    \ str_len - vowel_pos\n            if vowel_dist <= dist\n                closest_vowel\
    \ = word[i]\n                dist = vowel_dist\n            end\n        end\n\
    \    end\n    return closest_vowel\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = get_closest_vowel;\n\t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"\
    full\") == \"u\")\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"\
    eAsy\") == \"\")\n\t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\"\
    ) == \"a\")\n\t@test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\")\
    \ == \"\")\n\t@test(candidate(\"ba\") == \"\")\n\t@test(candidate(\"quick\") ==\
    \ \"\")\n\t@test(candidate(\"anime\") == \"i\")\n\t@test(candidate(\"Asia\") ==\
    \ \"\")\n\t@test(candidate(\"Above\") == \"o\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp38pvid2g.jl:30

    '
  stdout: "test set: Test Failed at /tmp/tmp38pvid2g.jl:33\n  Expression: candidate(\"\
    yogurt\") == \"u\"\n   Evaluated: \"\" == \"u\"\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp38pvid2g.jl:33 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp38pvid2g.jl:32\ntest set: Test Failed at /tmp/tmp38pvid2g.jl:34\n\
    \  Expression: candidate(\"full\") == \"u\"\n   Evaluated: \"\" == \"u\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp38pvid2g.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp38pvid2g.jl:32\ntest set: Test\
    \ Failed at /tmp/tmp38pvid2g.jl:38\n  Expression: candidate(\"bad\") == \"a\"\n\
    \   Evaluated: \"\" == \"a\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp38pvid2g.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp38pvid2g.jl:32\ntest set: Test\
    \ Failed at /tmp/tmp38pvid2g.jl:39\n  Expression: candidate(\"most\") == \"o\"\
    \n   Evaluated: \"\" == \"o\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp38pvid2g.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp38pvid2g.jl:32\ntest set: Test\
    \ Failed at /tmp/tmp38pvid2g.jl:43\n  Expression: candidate(\"anime\") == \"i\"\
    \n   Evaluated: \"\" == \"i\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp38pvid2g.jl:43 [inlined]\n"
  timestamp: 1659822177
- exit_code: 1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    val = length(word)\n    pos\
    \ = 0\n    for (idx, letter) in enumerate(reverse(word))\n        if letter in\
    \ vowels\n            pos = val - idx\n            break\n        end\n    end\n\
    \    for (idx, letter) in enumerate(reverse(word))\n        if letter in vowels\n\
    \            if val - idx < pos\n                pos = val - idx\n           \
    \ end\n        end\n    end\n    if pos == 0 || pos == length(word) || pos ==\
    \ length(word) - 1\n        return \"\"\n    else\n        return word[pos]\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\
    \t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\"\
    )\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\
    \t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t\
    @test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"\
    ba\") == \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\"\
    ) == \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\"\
    ) == \"o\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpcdizozho.jl:36

    '
  stdout: "test set: Test Failed at /tmp/tmpcdizozho.jl:39\n  Expression: candidate(\"\
    yogurt\") == \"u\"\n   Evaluated: \"\" == \"u\"\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpcdizozho.jl:39 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpcdizozho.jl:38\ntest set: Test Failed at /tmp/tmpcdizozho.jl:40\n\
    \  Expression: candidate(\"full\") == \"u\"\n   Evaluated: \"\" == \"u\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpcdizozho.jl:40 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpcdizozho.jl:38\ntest set: Test\
    \ Failed at /tmp/tmpcdizozho.jl:44\n  Expression: candidate(\"bad\") == \"a\"\n\
    \   Evaluated: \"\" == \"a\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpcdizozho.jl:44 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpcdizozho.jl:38\ntest set: Test\
    \ Failed at /tmp/tmpcdizozho.jl:45\n  Expression: candidate(\"most\") == \"o\"\
    \n   Evaluated: \"\" == \"o\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpcdizozho.jl:45 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpcdizozho.jl:38\ntest set: Test\
    \ Failed at /tmp/tmpcdizozho.jl:49\n  Expression: candidate(\"anime\") == \"i\"\
    \n   Evaluated: \"\" == \"i\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpcdizozho.jl:49 [inlined]\n"
  timestamp: 1659822177
- exit_code: -1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ return nothing\nend\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\
    \t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\"\
    )\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\
    \t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t\
    @test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"\
    ba\") == \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\"\
    ) == \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\"\
    ) == \"o\")\nend\n"
  status: Timeout
  stderr: 'b''ERROR: LoadError: '''
  stdout: 'b''test set: Error During Test at /tmp/tmpu9z76xpo.jl:19\n  Test threw
    exception\n  Expression: candidate("yogurt") == "u"\n  MethodError: Cannot `convert`
    an object of type Nothing to an object of type String\n  Closest candidates are:\n    convert(::Type{String},
    !Matched::String) at ~/.conda/envs/polyglot/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    get_closest_vowel(word::String)\n     @ Main /tmp/tmpu9z76xpo.jl:12\n   [2] macro
    expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpu9z76xpo.jl:19 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpu9z76xpo.jl:18\ntest set: Error
    During Test at /tmp/tmpu9z76xpo.jl:20\n  Test threw exception\n  Expression: candidate("full")
    == "u"\n  MethodError: Cannot `convert` an object of type Nothing to an object
    of type String\n  Closest candidates are:\n    convert(::Type{String}, !Matched::String)
    at ~/.conda/envs/polyglot/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    get_closest_vowel(word::String)\n     @ Main /tmp/tmpu9z76xpo.jl:12\n   [2] macro
    expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpu9z76xpo.jl:20 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] to'
  timestamp: 1659822180
- exit_code: -1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ #Your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\
    \t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\"\
    )\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\
    \t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t\
    @test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"\
    ba\") == \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\"\
    ) == \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\"\
    ) == \"o\")\nend\n"
  status: Timeout
  stderr: 'b''ERROR: LoadError: '''
  stdout: 'b''test set: Error During Test at /tmp/tmp46eea3gq.jl:19\n  Test threw
    exception\n  Expression: candidate("yogurt") == "u"\n  MethodError: Cannot `convert`
    an object of type Nothing to an object of type String\n  Closest candidates are:\n    convert(::Type{String},
    !Matched::String) at ~/.conda/envs/polyglot/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    get_closest_vowel(word::String)\n     @ Main /tmp/tmp46eea3gq.jl:13\n   [2] macro
    expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmp46eea3gq.jl:19 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmp46eea3gq.jl:18\ntest set: Error
    During Test at /tmp/tmp46eea3gq.jl:20\n  Test threw exception\n  Expression: candidate("full")
    == "u"\n  MethodError: Cannot `convert` an object of type Nothing to an object
    of type String\n  Closest candidates are:\n    convert(::Type{String}, !Matched::String)
    at ~/.conda/envs/polyglot/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    get_closest_vowel(word::String)\n     @ Main /tmp/tmp46eea3gq.jl:13\n   [2] macro
    expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmp46eea3gq.jl:20 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] to'
  timestamp: 1659822180
- exit_code: 1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ ...\nend\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\t\
    @test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\
    \t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t\
    @test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"\
    most\") == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\"\
    ) == \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\"\
    ) == \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\"\
    ) == \"o\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: invalid identifier name \"...\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpnclkpgkl.jl:12\nin expression starting at\
    \ /tmp/tmpnclkpgkl.jl:12\n"
  stdout: ''
  timestamp: 1659822176
- exit_code: 1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ @assert(islower(word))\n    # First, get the index of all the vowels.\n    vowels\
    \ = [i for i in 1:length(word) if word[i] in \"aeiou\"]\n    # Iterate over all\
    \ the consonants.\n    for i in 1:length(word)\n        if word[i] in \"bcdfghjklmnpqrstvwxyz\"\
    \n            # Get the closest left and right vowels.\n            left_vowel\
    \ = findfirst(vowels .> i)\n            right_vowel = findfirst(vowels .< i)\n\
    \            # If both are found, then return the vowel with the smallest distance.\n\
    \            if left_vowel != nothing && right_vowel != nothing\n            \
    \    return word[vowels[left_vowel] < vowels[right_vowel] ? left_vowel : right_vowel]\n\
    \            elseif left_vowel != nothing\n                return word[left_vowel]\n\
    \            elseif right_vowel != nothing\n                return word[right_vowel]\n\
    \            end\n        end\n    end\n    # No vowels found.\n    return \"\"\
    \nend\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"\
    yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"\
    easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\"\
    ) == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\")\
    \ == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") ==\
    \ \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") ==\
    \ \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") ==\
    \ \"o\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 13 errored,
    0 broken.

    in expression starting at /tmp/tmpjlawvkgw.jl:36

    '
  stdout: "test set: Error During Test at /tmp/tmpjlawvkgw.jl:39\n  Test threw exception\n\
    \  Expression: candidate(\"yogurt\") == \"u\"\n  UndefVarError: islower not defined\n\
    \  Stacktrace:\n   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmpjlawvkgw.jl:12\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpjlawvkgw.jl:39 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpjlawvkgw.jl:38\ntest set:\
    \ Error During Test at /tmp/tmpjlawvkgw.jl:40\n  Test threw exception\n  Expression:\
    \ candidate(\"full\") == \"u\"\n  UndefVarError: islower not defined\n  Stacktrace:\n\
    \   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmpjlawvkgw.jl:12\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpjlawvkgw.jl:40 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpjlawvkgw.jl:38\ntest set:\
    \ Error During Test at /tmp/tmpjlawvkgw.jl:41\n  Test threw exception\n  Expression:\
    \ candidate(\"easy\") == \"\"\n  UndefVarError: islower not defined\n  Stacktrace:\n\
    \   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmpjlawvkgw.jl:12\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpjlawvkgw.jl:41 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpjlawvkgw.jl:38\ntest set:\
    \ Error During Test at /tmp/tmpjlawvkgw.jl:42\n  Test threw exception\n  Expression:\
    \ candidate(\"eAsy\") == \"\"\n  UndefVarError: islower not defined\n  Stacktrace:\n\
    \   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmpjlawvkgw.jl:12\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src"
  timestamp: 1659822179
- exit_code: 1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ # code here\n    return \"\";\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = get_closest_vowel;\n\t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"\
    full\") == \"u\")\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"\
    eAsy\") == \"\")\n\t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\"\
    ) == \"a\")\n\t@test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\")\
    \ == \"\")\n\t@test(candidate(\"ba\") == \"\")\n\t@test(candidate(\"quick\") ==\
    \ \"\")\n\t@test(candidate(\"anime\") == \"i\")\n\t@test(candidate(\"Asia\") ==\
    \ \"\")\n\t@test(candidate(\"Above\") == \"o\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp5uk_y9v4.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmp5uk_y9v4.jl:20\n  Expression: candidate(\"\
    yogurt\") == \"u\"\n   Evaluated: \"\" == \"u\"\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp5uk_y9v4.jl:20 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp5uk_y9v4.jl:19\ntest set: Test Failed at /tmp/tmp5uk_y9v4.jl:21\n\
    \  Expression: candidate(\"full\") == \"u\"\n   Evaluated: \"\" == \"u\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5uk_y9v4.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5uk_y9v4.jl:19\ntest set: Test\
    \ Failed at /tmp/tmp5uk_y9v4.jl:25\n  Expression: candidate(\"bad\") == \"a\"\n\
    \   Evaluated: \"\" == \"a\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5uk_y9v4.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5uk_y9v4.jl:19\ntest set: Test\
    \ Failed at /tmp/tmp5uk_y9v4.jl:26\n  Expression: candidate(\"most\") == \"o\"\
    \n   Evaluated: \"\" == \"o\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5uk_y9v4.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5uk_y9v4.jl:19\ntest set: Test\
    \ Failed at /tmp/tmp5uk_y9v4.jl:30\n  Expression: candidate(\"anime\") == \"i\"\
    \n   Evaluated: \"\" == \"i\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5uk_y9v4.jl:30 [inlined]\n"
  timestamp: 1659822177
- exit_code: -1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \nend\n\
    using Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"\
    yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"\
    easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\"\
    ) == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\")\
    \ == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") ==\
    \ \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") ==\
    \ \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") ==\
    \ \"o\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmp5p_fwe_g.jl:18\n  Test threw
    exception\n  Expression: candidate("yogurt") == "u"\n  MethodError: Cannot `convert`
    an object of type Nothing to an object of type String\n  Closest candidates are:\n    convert(::Type{String},
    !Matched::String) at ~/.conda/envs/polyglot/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    get_closest_vowel(word::String)\n     @ Main /tmp/tmp5p_fwe_g.jl:12\n   [2] macro
    expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmp5p_fwe_g.jl:18 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmp5p_fwe_g.jl:17\ntest set: Error
    During Test at /tmp/tmp5p_fwe_g.jl:19\n  Test threw exception\n  Expression: candidate("full")
    == "u"\n  MethodError: Cannot `convert` an object of type Nothing to an object
    of type String\n  Closest candidates are:\n    convert(::Type{String}, !Matched::String)
    at ~/.conda/envs/polyglot/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    get_closest_vowel(word::String)\n     @ Main /tmp/tmp5p_fwe_g.jl:12\n   [2] macro
    expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmp5p_fwe_g.jl:19 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] to'
  timestamp: 1659822161
- exit_code: 1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    num_of_vowels = length(vowels)\n\
    \    ltr_to_vowel_idx = Dict{String,Int}()\n    for (i, v) in enumerate(vowels)\n\
    \        ltr_to_vowel_idx[v] = i\n    end\n    for (i, c) in enumerate(reverse(word))\n\
    \        if c in vowels\n            vowel_idx = ltr_to_vowel_idx[c]\n       \
    \     if i != 1 && word[length(word)-i+1] in vowels \n                continue\n\
    \            elseif i == 1\n                continue\n            elseif i ==\
    \ length(word)\n                continue\n            elseif vowel_idx > ltr_to_vowel_idx[word[length(word)-i+1]]\
    \ \n                return c\n            else\n                return word[length(word)-i+1]\n\
    \            end\n        end\n    end\n    return \"\"\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"yogurt\") == \"\
    u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"easy\") == \"\
    \")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\") == \"\"\
    )\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\") == \"o\"\
    )\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") == \"\")\n\t\
    @test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") == \"i\")\n\t\
    @test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") == \"o\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmph08u6mdh.jl:38

    '
  stdout: "test set: Test Failed at /tmp/tmph08u6mdh.jl:41\n  Expression: candidate(\"\
    yogurt\") == \"u\"\n   Evaluated: \"\" == \"u\"\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmph08u6mdh.jl:41 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmph08u6mdh.jl:40\ntest set: Test Failed at /tmp/tmph08u6mdh.jl:42\n\
    \  Expression: candidate(\"full\") == \"u\"\n   Evaluated: \"\" == \"u\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmph08u6mdh.jl:42 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmph08u6mdh.jl:40\ntest set: Test\
    \ Failed at /tmp/tmph08u6mdh.jl:46\n  Expression: candidate(\"bad\") == \"a\"\n\
    \   Evaluated: \"\" == \"a\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmph08u6mdh.jl:46 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmph08u6mdh.jl:40\ntest set: Test\
    \ Failed at /tmp/tmph08u6mdh.jl:47\n  Expression: candidate(\"most\") == \"o\"\
    \n   Evaluated: \"\" == \"o\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmph08u6mdh.jl:47 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmph08u6mdh.jl:40\ntest set: Test\
    \ Failed at /tmp/tmph08u6mdh.jl:51\n  Expression: candidate(\"anime\") == \"i\"\
    \n   Evaluated: \"\" == \"i\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmph08u6mdh.jl:51 [inlined]\n"
  timestamp: 1659822178
- exit_code: 1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ vowels = \"aeiouAEIOU\"\n    for i in size(word)::Int:-1:1\n        if in(word[i],\
    \ vowels) && (i == size(word) || !in(word[i+1], vowels))\n            return word[i]\n\
    \        end\n    end\n    return \"\"\nend\nusing Test\n\n@testset begin\n\n\
    candidate = get_closest_vowel;\n\t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"\
    full\") == \"u\")\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"\
    eAsy\") == \"\")\n\t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\"\
    ) == \"a\")\n\t@test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\")\
    \ == \"\")\n\t@test(candidate(\"ba\") == \"\")\n\t@test(candidate(\"quick\") ==\
    \ \"\")\n\t@test(candidate(\"anime\") == \"i\")\n\t@test(candidate(\"Asia\") ==\
    \ \"\")\n\t@test(candidate(\"Above\") == \"o\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 13 errored,
    0 broken.

    in expression starting at /tmp/tmp7sk6d3o1.jl:22

    '
  stdout: "test set: Error During Test at /tmp/tmp7sk6d3o1.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"yogurt\") == \"u\"\n  MethodError: no method matching\
    \ size(::String)\n  Closest candidates are:\n    size(!Matched::Union{LinearAlgebra.Adjoint{T,\
    \ var\"#s861\"}, LinearAlgebra.Transpose{T, var\"#s861\"}} where {T, var\"#s861\"\
    <:(AbstractVector)}) at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/adjtrans.jl:172\n\
    \    size(!Matched::Union{LinearAlgebra.Adjoint{T, var\"#s861\"}, LinearAlgebra.Transpose{T,\
    \ var\"#s861\"}} where {T, var\"#s861\"<:(AbstractMatrix)}) at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/adjtrans.jl:173\n\
    \    size(!Matched::Union{LinearAlgebra.QR, LinearAlgebra.QRCompactWY, LinearAlgebra.QRPivoted})\
    \ at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/qr.jl:567\n\
    \    ...\n  Stacktrace:\n   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmp7sk6d3o1.jl:13\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7sk6d3o1.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7sk6d3o1.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp7sk6d3o1.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"full\") == \"u\"\n  MethodError: no method matching size(::String)\n\
    \  Closest candidates are:\n    size(!Matched::Union{LinearAlgebra.Adjoint{T,\
    \ var\"#s861\"}, LinearAlgebra.Transpose{T, var\"#s861\"}} where {T, var\"#s861\"\
    <:(AbstractVector)}) at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/adjtrans.jl:172\n\
    \    size(!Matched::Union{LinearAlgebra.Adjoint{T, var\"#s861\"}, LinearAlgebra.Transpose{T,\
    \ var\"#s861\"}} where {T, var\"#s861\"<:(AbstractMatrix)}) at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/adjtrans.jl:173\n\
    \    size(!Matched::Union{LinearAlgebra.QR, LinearAlgebra.QRCompactWY, LinearAlgebra.QRPivoted})\
    \ at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Lin"
  timestamp: 1659822180
- exit_code: 1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ # your code here\n    # return \"closest vowel\"\nusing Test\n\n@testset begin\n\
    \ncandidate = get_closest_vowel;\n\t@test(candidate(\"yogurt\") == \"u\")\n\t\
    @test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"easy\") == \"\")\n\t\
    @test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"\
    bad\") == \"a\")\n\t@test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"\
    ab\") == \"\")\n\t@test(candidate(\"ba\") == \"\")\n\t@test(candidate(\"quick\"\
    ) == \"\")\n\t@test(candidate(\"anime\") == \"i\")\n\t@test(candidate(\"Asia\"\
    ) == \"\")\n\t@test(candidate(\"Above\") == \"o\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpglqn4iq5.jl:11\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpglqn4iq5.jl:1\n\
    in expression starting at /tmp/tmpglqn4iq5.jl:1\n"
  stdout: ''
  timestamp: 1659822177
- exit_code: 1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ possible_vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    for (i, letter) in\
    \ enumerate(reverse(word))\n        if letter in possible_vowels && (i-1 == 0\
    \ || word[end-i] in possible_vowels) continue\n        return letter\n    end\n\
    \    return \"\"\nend\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\
    \t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\"\
    )\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\
    \t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t\
    @test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"\
    ba\") == \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\"\
    ) == \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\"\
    ) == \"o\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp6hrc25c6.jl:11\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp6hrc25c6.jl:1\n\
    in expression starting at /tmp/tmp6hrc25c6.jl:1\n"
  stdout: ''
  timestamp: 1659822177
- exit_code: 1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ vowels = ['a', 'e', 'i', 'o', 'u']\n    word_list = split(word, \"\")\n    word_list_rev\
    \ = word_list[end:-1:1]\n    result = []\n    for (i, letter) in enumerate(word_list_rev)\n\
    \        if letter in vowels\n            push!(result, letter)\n        end\n\
    \    end\n    if length(result) == 0\n        return \"\"\n    elseif length(result)\
    \ == 1\n        return result[1]\n    else\n        last_vowel = result[1]\n \
    \       if word_list_rev[find(word_list_rev, last_vowel)+1] in vowels\n      \
    \      return result[2]\n        else\n            return result[1]\n        end\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\
    \t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\"\
    )\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\
    \t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t\
    @test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"\
    ba\") == \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\"\
    ) == \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\"\
    ) == \"o\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpukab8omw.jl:36

    '
  stdout: "test set: Test Failed at /tmp/tmpukab8omw.jl:39\n  Expression: candidate(\"\
    yogurt\") == \"u\"\n   Evaluated: \"\" == \"u\"\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpukab8omw.jl:39 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpukab8omw.jl:38\ntest set: Test Failed at /tmp/tmpukab8omw.jl:40\n\
    \  Expression: candidate(\"full\") == \"u\"\n   Evaluated: \"\" == \"u\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpukab8omw.jl:40 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpukab8omw.jl:38\ntest set: Test\
    \ Failed at /tmp/tmpukab8omw.jl:44\n  Expression: candidate(\"bad\") == \"a\"\n\
    \   Evaluated: \"\" == \"a\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpukab8omw.jl:44 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpukab8omw.jl:38\ntest set: Test\
    \ Failed at /tmp/tmpukab8omw.jl:45\n  Expression: candidate(\"most\") == \"o\"\
    \n   Evaluated: \"\" == \"o\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpukab8omw.jl:45 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpukab8omw.jl:38\ntest set: Test\
    \ Failed at /tmp/tmpukab8omw.jl:49\n  Expression: candidate(\"anime\") == \"i\"\
    \n   Evaluated: \"\" == \"i\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpukab8omw.jl:49 [inlined]\n"
  timestamp: 1659822178
- exit_code: -1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ # TODO\n    letters = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    answer = \"\"\
    \n    # if word is empty\n    if word == \"\"\n        return \"\"\n    end\n\
    \    # if word has only one letter\n    if length(word) == 1\n        return \"\
    \"\n    end\n    # if word has vowels only\n    if !occursin(r\"[bcdfghjklmnpqrstvwxyz]\"\
    , word)\n        return \"\"\n    end\n    if occursin(r\"[aeiou]\", word) ==\
    \ false\n        return \"\"\n    end\n    # if word starts with a vowel\n   \
    \ if occursin(r\"[aeiou]\", word[1])\n        word = word[2:end]\n    end\n  \
    \  # if word ends with a vowel\n    if occursin(r\"[aeiou]\", word[end])\n   \
    \     word = word[1:end-1]\n    end\n    # if word has the same letters\n    if\
    \ length(word) == 1\n        return \"\"\n    end\n    # finding the closest vowel\n\
    \    for i in 1:length(word)-1\n        if occursin(r\"[aeiou]\", word[i]) &&\
    \ occursin(r\"[bcdfghjklmnpqrstvwxyz]\", word[i+1])\n            answer = word[i]\n\
    \            break\n        end\n    end\n    return answer\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"yogurt\"\
    ) == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"easy\"\
    ) == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\") ==\
    \ \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\") ==\
    \ \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") == \"\"\
    )\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") == \"i\"\
    )\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") == \"o\"\
    )\nend\n"
  status: Timeout
  stderr: 'b''ERROR: LoadError: '''
  stdout: 'b''test set: Error During Test at /tmp/tmprnwyrp40.jl:56\n  Test threw
    exception\n  Expression: candidate("yogurt") == "u"\n  MethodError: no method
    matching occursin(::Regex, ::Char)\n  Closest candidates are:\n    occursin(::Regex,
    !Matched::SubString; offset) at ~/.conda/envs/polyglot/share/julia/base/regex.jl:269\n    occursin(::Regex,
    !Matched::AbstractString; offset) at ~/.conda/envs/polyglot/share/julia/base/regex.jl:264\n    occursin(::Any)
    at ~/.conda/envs/polyglot/share/julia/base/strings/search.jl:636\n  Stacktrace:\n   [1]
    get_closest_vowel(word::String)\n     @ Main /tmp/tmprnwyrp40.jl:31\n   [2] macro
    expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmprnwyrp40.jl:56 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmprnwyrp40.jl:55\ntest set: Error
    During Test at /tmp/tmprnwyrp40.jl:57\n  Test threw exception\n  Expression: candidate("full")
    == "u"\n  MethodError: no method matching occursin(::Regex, ::Char)\n  Closest
    candidates are:\n    occursin(::Regex, !Matched::SubString; offset) at ~/.conda/envs/polyglot/share/julia/base/regex.jl:269\n    occursin(::Regex,
    !Matched::AbstractString; offset) at ~/.conda/envs/polyglot/share/julia/base/regex.jl:264\n    occursin(::Any)
    at ~/.conda/envs/polyglot/share/julia/base/strings/search.jl:636\n  Stacktrace:\n   [1]
    get_closest_vowel(word::String)\n     @ Main /tmp/tmprnwyrp40.jl:31\n   [2] macro
    expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmprnwyrp40.jl:57 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmprnwyrp40.jl:55\ntest set: Error
    During Test at /tmp/tmprnwyrp40.jl:58\n  Test threw exception\n  Expression: candidate("easy")
    == ""\n  MethodError: no method matching '
  timestamp: 1659822181
- exit_code: 1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ dict_vowels = Dict(\"a\"=>0, \"e\"=>0, \"i\"=>0, \"o\"=>0, \"u\"=>0)\n    vowels_word\
    \ = collect(word)\n    i = 1\n    while i <= length(vowels_word)\n        if vowels_word[end-i]\
    \ in keys(dict_vowels)\n            return vowels_word[end-i]\n        end\n \
    \       i += 1\n    end\n    return \"\"\nend\nusing Test\n\n@testset begin\n\n\
    candidate = get_closest_vowel;\n\t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"\
    full\") == \"u\")\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"\
    eAsy\") == \"\")\n\t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\"\
    ) == \"a\")\n\t@test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\")\
    \ == \"\")\n\t@test(candidate(\"ba\") == \"\")\n\t@test(candidate(\"quick\") ==\
    \ \"\")\n\t@test(candidate(\"anime\") == \"i\")\n\t@test(candidate(\"Asia\") ==\
    \ \"\")\n\t@test(candidate(\"Above\") == \"o\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 13 errored,
    0 broken.

    in expression starting at /tmp/tmp6ol_vwa3.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmp6ol_vwa3.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"yogurt\") == \"u\"\n  BoundsError: attempt to access\
    \ 6-element Vector{Char} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] get_closest_vowel(word::String)\n     @ Main\
    \ /tmp/tmp6ol_vwa3.jl:16\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp6ol_vwa3.jl:28 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp6ol_vwa3.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp6ol_vwa3.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"full\") == \"u\"\n  BoundsError: attempt to access 4-element Vector{Char}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] get_closest_vowel(word::String)\n     @ Main /tmp/tmp6ol_vwa3.jl:16\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp6ol_vwa3.jl:29 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp6ol_vwa3.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp6ol_vwa3.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"easy\") == \"\"\n  BoundsError: attempt to access 4-element Vector{Char}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] get_closest_vowel(word::String)\n     @ Main /tmp/tmp6ol_vwa3.jl:16\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp6ol_vwa3.jl:30 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp6ol_vwa3.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp6ol_vwa3.jl:31\n  Test threw exception\n  Expres"
  timestamp: 1659822180
- exit_code: 1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ # get the index of the closest vowel from the right side\n    function get_index(word::String)::Int\
    \ \n        length(word) == 0 && return 0 \n        if !occursin(\"aeiouAEIOU\"\
    , word[end])\n            get_index(word[1:end-1])\n        else \n          \
    \  length(word)\n        end\n    end\n    # get the closest vowel \n    word[get_index(word)]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"\
    yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"\
    easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\"\
    ) == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\")\
    \ == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") ==\
    \ \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") ==\
    \ \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") ==\
    \ \"o\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 13 errored,
    0 broken.

    in expression starting at /tmp/tmp6ifjqyd5.jl:26

    '
  stdout: "test set: Error During Test at /tmp/tmp6ifjqyd5.jl:29\n  Test threw exception\n\
    \  Expression: candidate(\"yogurt\") == \"u\"\n  MethodError: no method matching\
    \ occursin(::String, ::Char)\n  Closest candidates are:\n    occursin(::Union{AbstractChar,\
    \ AbstractString}, !Matched::AbstractString) at ~/.conda/envs/polyglot/share/julia/base/strings/search.jl:622\n\
    \    occursin(::Any) at ~/.conda/envs/polyglot/share/julia/base/strings/search.jl:636\n\
    \  Stacktrace:\n   [1] (::var\"#get_index#1\")(word::String)\n     @ Main /tmp/tmp6ifjqyd5.jl:15\n\
    \   [2] get_closest_vowel(word::String)\n     @ Main /tmp/tmp6ifjqyd5.jl:22\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp6ifjqyd5.jl:29 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp6ifjqyd5.jl:28\ntest set:\
    \ Error During Test at /tmp/tmp6ifjqyd5.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"full\") == \"u\"\n  MethodError: no method matching occursin(::String,\
    \ ::Char)\n  Closest candidates are:\n    occursin(::Union{AbstractChar, AbstractString},\
    \ !Matched::AbstractString) at ~/.conda/envs/polyglot/share/julia/base/strings/search.jl:622\n\
    \    occursin(::Any) at ~/.conda/envs/polyglot/share/julia/base/strings/search.jl:636\n\
    \  Stacktrace:\n   [1] (::var\"#get_index#1\")(word::String)\n     @ Main /tmp/tmp6ifjqyd5.jl:15\n\
    \   [2] get_closest_vowel(word::String)\n     @ Main /tmp/tmp6ifjqyd5.jl:22\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp6ifjqyd5.jl:30 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp6ifjqyd5.jl:28\ntest set:\
    \ Error During Test at /tmp/tmp6ifjqyd5.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(\"easy\") == \"\"\n  MethodError: no method matching occursin(::String,\
    \ ::Char)\n  Closest "
  timestamp: 1659822181
- exit_code: 1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ len_word = length(word)\n    distance = Inf\n    vowel_position = 0\n    for\
    \ i in 1:len_word\n        if word[i] in ['a','e','i','o','u']\n            left_word\
    \ = word[1:i-1]\n            right_word = word[i+1:end]\n            if (left_word\
    \ == \"\" && right_word == \"\") || \n                (left_word[end] in ['a','e','i','o','u']\
    \ || \n                right_word[1] in ['a','e','i','o','u']) \n            \
    \    continue\n            elseif i < distance\n                distance = i\n\
    \                vowel_position = i\n            end\n        end\n    end\n \
    \   if vowel_position != 0\n        word[vowel_position]\n    else\n        \"\
    \"\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\
    \t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\"\
    )\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\
    \t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t\
    @test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"\
    ba\") == \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\"\
    ) == \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\"\
    ) == \"o\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 11 errored,
    0 broken.

    in expression starting at /tmp/tmpb4c337n6.jl:37

    '
  stdout: "test set: Error During Test at /tmp/tmpb4c337n6.jl:40\n  Test threw exception\n\
    \  Expression: candidate(\"yogurt\") == \"u\"\n  MethodError: Cannot `convert`\
    \ an object of type Char to an object of type String\n  Closest candidates are:\n\
    \    convert(::Type{String}, !Matched::String) at ~/.conda/envs/polyglot/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmpb4c337n6.jl:30\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpb4c337n6.jl:40 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpb4c337n6.jl:39\ntest set:\
    \ Error During Test at /tmp/tmpb4c337n6.jl:41\n  Test threw exception\n  Expression:\
    \ candidate(\"full\") == \"u\"\n  MethodError: Cannot `convert` an object of type\
    \ Char to an object of type String\n  Closest candidates are:\n    convert(::Type{String},\
    \ !Matched::String) at ~/.conda/envs/polyglot/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmpb4c337n6.jl:30\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpb4c337n6.jl:41 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpb4c337n6.jl:39\nte"
  timestamp: 1659822181
- exit_code: -1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ vowel_indices = [i for i in 1:length(word) if \n                        word[i]\
    \ in \"aeiouAEIOU\"]\n    return word[maximum(vowel_indices)]\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"yogurt\"\
    ) == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"easy\"\
    ) == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\") ==\
    \ \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\") ==\
    \ \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") == \"\"\
    )\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") == \"i\"\
    )\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") == \"o\"\
    )\nend\n"
  status: Timeout
  stderr: 'b''ERROR: LoadError: '''
  stdout: 'b''test set: Error During Test at /tmp/tmp8kcgr5ep.jl:21\n  Test threw
    exception\n  Expression: candidate("yogurt") == "u"\n  MethodError: Cannot `convert`
    an object of type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{String},
    !Matched::String) at ~/.conda/envs/polyglot/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    get_closest_vowel(word::String)\n     @ Main /tmp/tmp8kcgr5ep.jl:14\n   [2] macro
    expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8kcgr5ep.jl:21 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8kcgr5ep.jl:20\ntest set: Error
    During Test at /tmp/tmp8kcgr5ep.jl:22\n  Test threw exception\n  Expression: candidate("full")
    == "u"\n  MethodError: Cannot `convert` an object of type Char to an object of
    type String\n  Closest candidates are:\n    convert(::Type{String}, !Matched::String)
    at ~/.conda/envs/polyglot/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    get_closest_vowel(word::String)\n     @ Main /tmp/tmp8kcgr5ep.jl:14\n   [2] macro
    expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8kcgr5ep.jl:22 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-leve'
  timestamp: 1659822181
- exit_code: 1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ distance = 0\n    shortest_distance = 0\n    vowel = \"\"\n    shortest_vowel\
    \ = \"\"\n    right_index = length(word)\n    left_index = right_index - 1\n \
    \   while right_index > 1\n        if word[right_index] in ('a', 'e', 'i', 'o',\
    \ 'u')\n            right_index -= 1\n            while left_index > 0\n     \
    \           if word[left_index] in ('a', 'e', 'i', 'o', 'u')\n               \
    \     left_index -= 1\n                    distance = right_index - left_index\n\
    \                    if shortest_distance == 0\n                        shortest_distance\
    \ = distance\n                        shortest_vowel = word[right_index]\n   \
    \                 elseif distance < shortest_distance\n                      \
    \  shortest_distance = distance\n                        shortest_vowel = word[right_index]\n\
    \                    end\n                else\n                    left_index\
    \ -= 1\n                end\n            end\n        else\n            right_index\
    \ -= 1\n        end\n    end\n    return shortest_vowel\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"yogurt\") == \"\
    u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"easy\") == \"\
    \")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\") == \"\"\
    )\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\") == \"o\"\
    )\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") == \"\")\n\t\
    @test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") == \"i\")\n\t\
    @test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") == \"o\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 10 errored,
    0 broken.

    in expression starting at /tmp/tmppeovlw1q.jl:44

    '
  stdout: "test set: Error During Test at /tmp/tmppeovlw1q.jl:47\n  Test threw exception\n\
    \  Expression: candidate(\"yogurt\") == \"u\"\n  MethodError: Cannot `convert`\
    \ an object of type Char to an object of type String\n  Closest candidates are:\n\
    \    convert(::Type{String}, !Matched::String) at ~/.conda/envs/polyglot/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmppeovlw1q.jl:40\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmppeovlw1q.jl:47 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmppeovlw1q.jl:46\ntest set:\
    \ Error During Test at /tmp/tmppeovlw1q.jl:48\n  Test threw exception\n  Expression:\
    \ candidate(\"full\") == \"u\"\n  MethodError: Cannot `convert` an object of type\
    \ Char to an object of type String\n  Closest candidates are:\n    convert(::Type{String},\
    \ !Matched::String) at ~/.conda/envs/polyglot/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmppeovlw1q.jl:40\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmppeovlw1q.jl:48 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmppeovlw1q.jl:46\nte"
  timestamp: 1659822181
- exit_code: 1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ word_size = length(word)\n    for i in 1:word_size-1\n        if isvowel(word[word_size\
    \ - i])\n            for j in 1:i\n                if !isvowel(word[word_size\
    \ - i + j])\n                    return word[word_size - i]\n                end\n\
    \            end\n        end\n    end\n    return \"\"\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"yogurt\") == \"\
    u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"easy\") == \"\
    \")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\") == \"\"\
    )\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\") == \"o\"\
    )\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") == \"\")\n\t\
    @test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") == \"i\")\n\t\
    @test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") == \"o\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 13 errored,
    0 broken.

    in expression starting at /tmp/tmp_g791cov.jl:26

    '
  stdout: "test set: Error During Test at /tmp/tmp_g791cov.jl:29\n  Test threw exception\n\
    \  Expression: candidate(\"yogurt\") == \"u\"\n  UndefVarError: isvowel not defined\n\
    \  Stacktrace:\n   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmp_g791cov.jl:14\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp_g791cov.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp_g791cov.jl:28\ntest set:\
    \ Error During Test at /tmp/tmp_g791cov.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"full\") == \"u\"\n  UndefVarError: isvowel not defined\n  Stacktrace:\n\
    \   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmp_g791cov.jl:14\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp_g791cov.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp_g791cov.jl:28\ntest set:\
    \ Error During Test at /tmp/tmp_g791cov.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(\"easy\") == \"\"\n  UndefVarError: isvowel not defined\n  Stacktrace:\n\
    \   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmp_g791cov.jl:14\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp_g791cov.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp_g791cov.jl:28\ntest set:\
    \ Error During Test at /tmp/tmp_g791cov.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"eAsy\") == \"\"\n  UndefVarError: isvowel not defined\n  Stacktrace:\n\
    \   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmp_g791cov.jl:14\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src"
  timestamp: 1659822181
- exit_code: 1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ l = length(word)\n    for i in 1:l-1\n        if is_consonant(word[i]) && is_vowel(word[i+1])\n\
    \            return word[i+1]\n        end\n    end\n    return \"\"\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"\
    yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"\
    easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\"\
    ) == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\")\
    \ == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") ==\
    \ \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") ==\
    \ \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") ==\
    \ \"o\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 13 errored,
    0 broken.

    in expression starting at /tmp/tmpba2d5ejv.jl:22

    '
  stdout: "test set: Error During Test at /tmp/tmpba2d5ejv.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"yogurt\") == \"u\"\n  UndefVarError: is_consonant not\
    \ defined\n  Stacktrace:\n   [1] get_closest_vowel(word::String)\n     @ Main\
    \ /tmp/tmpba2d5ejv.jl:14\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpba2d5ejv.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpba2d5ejv.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpba2d5ejv.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"full\") == \"u\"\n  UndefVarError: is_consonant not defined\n  Stacktrace:\n\
    \   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmpba2d5ejv.jl:14\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpba2d5ejv.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpba2d5ejv.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpba2d5ejv.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"easy\") == \"\"\n  UndefVarError: is_consonant not defined\n  Stacktrace:\n\
    \   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmpba2d5ejv.jl:14\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpba2d5ejv.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpba2d5ejv.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpba2d5ejv.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"eAsy\") == \"\"\n  UndefVarError: is_consonant not defined\n  Stacktrace:\n\
    \   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmpba2d5ejv.jl:14\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/"
  timestamp: 1659822181
- exit_code: 1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ len = length(word)\n    for i in 1:len\n        if i == 1 && isvowel(word[i])\n\
    \            continue\n        elseif i == len && isvowel(word[i])\n         \
    \   continue\n        elseif i == 1\n            if isvowel(word[i]) && !isvowel(word[i+1])\n\
    \                return word[i]\n            end\n        elseif i == len\n  \
    \          if isvowel(word[i]) && !isvowel(word[i-1])\n                return\
    \ word[i]\n            end\n        else\n            if isvowel(word[i]) && !isvowel(word[i-1])\
    \ && !isvowel(word[i+1])\n                return word[i]\n            end\n  \
    \      end\n    end\n    return \"\"\nend\nprintln(get_closest_vowel(\"food\"\
    ))\nprintln(get_closest_vowel(\"bark\"))\nprintln(get_closest_vowel(\"apple\"\
    ))\nprintln(get_closest_vowel(\"pryer\"))\nusing Test\n\n@testset begin\n\ncandidate\
    \ = get_closest_vowel;\n\t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"\
    full\") == \"u\")\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"\
    eAsy\") == \"\")\n\t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\"\
    ) == \"a\")\n\t@test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\")\
    \ == \"\")\n\t@test(candidate(\"ba\") == \"\")\n\t@test(candidate(\"quick\") ==\
    \ \"\")\n\t@test(candidate(\"anime\") == \"i\")\n\t@test(candidate(\"Asia\") ==\
    \ \"\")\n\t@test(candidate(\"Above\") == \"o\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: UndefVarError: isvowel not defined\nStacktrace:\n [1]\
    \ get_closest_vowel(word::String)\n   @ Main /tmp/tmpd4q2k846.jl:14\n [2] top-level\
    \ scope\n   @ /tmp/tmpd4q2k846.jl:34\nin expression starting at /tmp/tmpd4q2k846.jl:34\n"
  stdout: ''
  timestamp: 1659822179
- exit_code: 1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ # Your code here\nend\nword = \"hello\"\nget_closest_vowel(word) # \"e\"\nword\
    \ = \"alligator\"\nget_closest_vowel(word) # \"a\"\nword = \"absent\"\nget_closest_vowel(word)\
    \ # \"a\"\nword = \"a\"\nget_closest_vowel(word) # \"\"\nword = \"abcdeab\"\n\
    get_closest_vowel(word) # \"e\"\n \nusing Test\n\n@testset begin\n\ncandidate\
    \ = get_closest_vowel;\n\t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"\
    full\") == \"u\")\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"\
    eAsy\") == \"\")\n\t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\"\
    ) == \"a\")\n\t@test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\")\
    \ == \"\")\n\t@test(candidate(\"ba\") == \"\")\n\t@test(candidate(\"quick\") ==\
    \ \"\")\n\t@test(candidate(\"anime\") == \"i\")\n\t@test(candidate(\"Asia\") ==\
    \ \"\")\n\t@test(candidate(\"Above\") == \"o\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type String\nClosest candidates are:\n  convert(::Type{String},\
    \ !Matched::String) at ~/.conda/envs/polyglot/share/julia/base/essentials.jl:223\n\
    \  convert(::Type{T}, !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n\
    \  convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:232\n\
    \  ...\nStacktrace:\n [1] get_closest_vowel(word::String)\n   @ Main /tmp/tmp1sb57rhb.jl:13\n\
    \ [2] top-level scope\n   @ /tmp/tmp1sb57rhb.jl:15\nin expression starting at\
    \ /tmp/tmp1sb57rhb.jl:15\n"
  stdout: ''
  timestamp: 1659822182
- exit_code: 1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ n = size(word, 1)\n    if isvowel(word[n])\n        return \"\"\n    end\n \
    \   i = n\n    while i > 1 && !(isvowel(word[i]) && !isvowel(word[i-1]))\n   \
    \     i -= 1\n    end\n    if i > 1\n        return word[i]\n    else\n      \
    \  return \"\"\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\
    \t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\"\
    )\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\
    \t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t\
    @test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"\
    ba\") == \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\"\
    ) == \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\"\
    ) == \"o\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 13 errored,
    0 broken.

    in expression starting at /tmp/tmpoqbo51bd.jl:28

    '
  stdout: "test set: Error During Test at /tmp/tmpoqbo51bd.jl:31\n  Test threw exception\n\
    \  Expression: candidate(\"yogurt\") == \"u\"\n  MethodError: no method matching\
    \ size(::String, ::Int64)\n  Closest candidates are:\n    size(!Matched::Union{LinearAlgebra.QR,\
    \ LinearAlgebra.QRCompactWY, LinearAlgebra.QRPivoted}, ::Integer) at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/qr.jl:566\n\
    \    size(!Matched::Union{LinearAlgebra.Hermitian{T, S}, LinearAlgebra.Symmetric{T,\
    \ S}} where {T, S}, ::Any) at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/symmetric.jl:201\n\
    \    size(!Matched::Union{LinearAlgebra.Cholesky, LinearAlgebra.CholeskyPivoted},\
    \ ::Integer) at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/cholesky.jl:495\n\
    \    ...\n  Stacktrace:\n   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmpoqbo51bd.jl:12\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpoqbo51bd.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpoqbo51bd.jl:30\ntest set:\
    \ Error During Test at /tmp/tmpoqbo51bd.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"full\") == \"u\"\n  MethodError: no method matching size(::String,\
    \ ::Int64)\n  Closest candidates are:\n    size(!Matched::Union{LinearAlgebra.QR,\
    \ LinearAlgebra.QRCompactWY, LinearAlgebra.QRPivoted}, ::Integer) at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/qr.jl:566\n\
    \    size(!Matched::Union{LinearAlgebra.Hermitian{T, S}, LinearAlgebra.Symmetric{T,\
    \ S}} where {T, S}, ::Any) at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/symmetric.jl:201\n\
    \    size(!Matched::Union{LinearAlgebra.Cholesky, LinearAlgebra.CholeskyPivoted},\
    \ ::Integer) at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/cholesky.jl:495\n\
    \    ...\n  Stacktrace:\n   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmpoqbo51bd.jl:12\n\
    \   [2] macro "
  timestamp: 1659822182
- exit_code: -1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ if word[end] in \"aieou\" \n        return word[end]\n    else\n        for\
    \ i in reverse(1:length(word))\n            if word[i] in \"aieou\" && word[i-1]\
    \ not in \"aieou\"\n                return word[i]\n            end\n        end\n\
    \    end\n    return \"\"\nend\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\
    \t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\"\
    )\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\
    \t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t\
    @test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"\
    ba\") == \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\"\
    ) == \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\"\
    ) == \"o\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpye5p03ya.jl:28\n  Test threw
    exception\n  Expression: candidate("yogurt") == "u"\n  TypeError: non-boolean
    (Char) used in boolean context\n  Stacktrace:\n   [1] get_closest_vowel(word::String)\n     @
    Main /tmp/tmpye5p03ya.jl:16\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpye5p03ya.jl:28 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpye5p03ya.jl:27\ntest set: Error
    During Test at /tmp/tmpye5p03ya.jl:29\n  Test threw exception\n  Expression: candidate("full")
    == "u"\n  TypeError: non-boolean (Char) used in boolean context\n  Stacktrace:\n   [1]
    get_closest_vowel(word::String)\n     @ Main /tmp/tmpye5p03ya.jl:16\n   [2] macro
    expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpye5p03ya.jl:29 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpye5p03ya.jl:27\ntest set: Error
    During Test at /tmp/tmpye5p03ya.jl:30\n  Test threw exception\n  Expression: candidate("easy")
    == ""\n  TypeError: non-boolean (Char) used in boolean context\n  Stacktrace:\n   [1]
    get_closest_vowel(word::String)\n     @ Main /tmp/tmpye5p03ya.jl:16\n   [2] macro
    expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpye5p03ya.jl:30 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpye5p03ya.jl:27\ntest set: Error
    During Test at /tmp/tmpye5p03ya.jl:31\n  Test threw exception\n  Expression: candidate("eAsy")
    == ""\n  BoundsError: attempt to access 4-codeunit String at index [0]\n  Stacktrace:\n   [1]
    checkbounds\n   '
  timestamp: 1659822182
- exit_code: -1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ # your code goes here\nend\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\
    \t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\"\
    )\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\
    \t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t\
    @test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"\
    ba\") == \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\"\
    ) == \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\"\
    ) == \"o\")\nend\n"
  status: Timeout
  stderr: 'b''ERROR: LoadError: '''
  stdout: 'b''test set: Error During Test at /tmp/tmpot9yfudg.jl:19\n  Test threw
    exception\n  Expression: candidate("yogurt") == "u"\n  MethodError: Cannot `convert`
    an object of type Nothing to an object of type String\n  Closest candidates are:\n    convert(::Type{String},
    !Matched::String) at ~/.conda/envs/polyglot/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    get_closest_vowel(word::String)\n     @ Main /tmp/tmpot9yfudg.jl:13\n   [2] macro
    expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpot9yfudg.jl:19 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpot9yfudg.jl:18\ntest set: Error
    During Test at /tmp/tmpot9yfudg.jl:20\n  Test threw exception\n  Expression: candidate("full")
    == "u"\n  MethodError: Cannot `convert` an object of type Nothing to an object
    of type String\n  Closest candidates are:\n    convert(::Type{String}, !Matched::String)
    at ~/.conda/envs/polyglot/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    get_closest_vowel(word::String)\n     @ Main /tmp/tmpot9yfudg.jl:13\n   [2] macro
    expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpot9yfudg.jl:20 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] to'
  timestamp: 1659822163
- exit_code: -1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ vowels = \"aeiou\"\n    closest_vowel = \"\"\n    if word[end] \u2208 vowels\n\
    \        return closest_vowel\n    end\n    i = length(word)\n    while i \u2265\
    \ 1\n        if word[i] \u2208 vowels && word[i-1] \u2209 vowels && word[i+1]\
    \ \u2209 vowels\n            closest_vowel = word[i]\n            break\n    \
    \    end\n        i -= 1\n    end\n    return closest_vowel\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"yogurt\"\
    ) == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"easy\"\
    ) == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\") ==\
    \ \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\") ==\
    \ \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") == \"\"\
    )\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") == \"i\"\
    )\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") == \"o\"\
    )\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmp0bxq8_ai.jl:32\n  Test threw
    exception\n  Expression: candidate("yogurt") == "u"\n  MethodError: Cannot `convert`
    an object of type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{String},
    !Matched::String) at ~/.conda/envs/polyglot/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    get_closest_vowel(word::String)\n     @ Main /tmp/tmp0bxq8_ai.jl:25\n   [2] macro
    expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmp0bxq8_ai.jl:32 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmp0bxq8_ai.jl:31\ntest set: Error
    During Test at /tmp/tmp0bxq8_ai.jl:33\n  Test threw exception\n  Expression: candidate("full")
    == "u"\n  MethodError: Cannot `convert` an object of type Char to an object of
    type String\n  Closest candidates are:\n    convert(::Type{String}, !Matched::String)
    at ~/.conda/envs/polyglot/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    get_closest_vowel(word::String)\n     @ Main /tmp/tmp0bxq8_ai.jl:25\n   [2] macro
    expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmp0bxq8_ai.jl:33 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-leve'
  timestamp: 1659822182
- exit_code: 1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ #Add your code here\nend\n \n \n\"\"\"Find the sum of all numbers from 1 to\
    \ N divisible by 3 and 7.\n    Example:\n                    \"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"yogurt\"\
    ) == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"easy\"\
    ) == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\") ==\
    \ \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\") ==\
    \ \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") == \"\"\
    )\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") == \"i\"\
    )\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") == \"o\"\
    )\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: cannot document the following expression:\n\nusing Test\n\
    \nStacktrace:\n [1] error(::String, ::String)\n   @ Base ./error.jl:42\n [2] top-level\
    \ scope\n   @ /tmp/tmpdr90fa4h.jl:16\nin expression starting at /tmp/tmpdr90fa4h.jl:16\n"
  stdout: ''
  timestamp: 1659822180
- exit_code: 1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ V = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    C = [\"b\", \"c\", \"d\", \"f\"\
    , \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\"\
    , \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"]\n    y = string('')\n    B = string(\"\
    \")\n    if isdigit(word[1])\n        return \"\"\n    end\n    for i in reverse(1:length(word))\n\
    \        if (word[i] in V && word[i+1] in C) || (word[i] in C && word[i+1] in\
    \ V)\n            break\n        end\n    end\n    for j in i:length(word)\n \
    \       if word[j] in V\n            y = string(word[j])\n            B = y\n\
    \            break\n        end\n    end\n    return B\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"yogurt\") == \"\
    u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"easy\") == \"\
    \")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\") == \"\"\
    )\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\") == \"o\"\
    )\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") == \"\")\n\t\
    @test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") == \"i\")\n\t\
    @test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") == \"o\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: invalid empty character literal\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpzz3zfask.jl:14\nin expression starting at\
    \ /tmp/tmpzz3zfask.jl:14\n"
  stdout: ''
  timestamp: 1659822179
- exit_code: 1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ #initialize empty string to store vowels\n    closest_vowel = \"\"\n    #intialize\
    \ empty string to store consonants\n    cons = \"\"\n    #dictionary of vowels\
    \ and their respective indexes\n    vowels = Dict()\n    #dictionary of consonants\
    \ and their respective indexes\n    consonants = Dict()\n    #loop through the\
    \ word\n    for i in 1:length(word)\n        #for each character in the word,\
    \ check if it is a vowel and if it is, add it to the dictionary \n        #of\
    \ vowels\n        if word[i] in [\"a\",\"e\",\"i\",\"o\",\"u\"]\n            vowels[word[i]]\
    \ = i\n        else #otherwise, add it to the dictionary of consonants\n     \
    \       consonants[word[i]] = i\n        end\n    end\nusing Test\n\n@testset\
    \ begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"yogurt\") == \"\
    u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"easy\") == \"\
    \")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\") == \"\"\
    )\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\") == \"o\"\
    )\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") == \"\")\n\t\
    @test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") == \"i\")\n\t\
    @test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") == \"o\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpug8fgpj6.jl:11\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpug8fgpj6.jl:1\n\
    in expression starting at /tmp/tmpug8fgpj6.jl:1\n"
  stdout: ''
  timestamp: 1659822180
- exit_code: 1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ vowels = Set(['a', 'e', 'i', 'o', 'u'])\n    for i in reversed(eachindex(word))\n\
    \        c = word[i]\n        if c in vowels\n            return c\n        end\n\
    \    end\n    return \"\"\nend\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\
    \t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\"\
    )\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\
    \t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t\
    @test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"\
    ba\") == \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\"\
    ) == \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\"\
    ) == \"o\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 13 errored,
    0 broken.

    in expression starting at /tmp/tmp3s3ejoju.jl:23

    '
  stdout: "test set: Error During Test at /tmp/tmp3s3ejoju.jl:26\n  Test threw exception\n\
    \  Expression: candidate(\"yogurt\") == \"u\"\n  UndefVarError: reversed not defined\n\
    \  Stacktrace:\n   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmp3s3ejoju.jl:13\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp3s3ejoju.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp3s3ejoju.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp3s3ejoju.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"full\") == \"u\"\n  UndefVarError: reversed not defined\n  Stacktrace:\n\
    \   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmp3s3ejoju.jl:13\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp3s3ejoju.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp3s3ejoju.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp3s3ejoju.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"easy\") == \"\"\n  UndefVarError: reversed not defined\n  Stacktrace:\n\
    \   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmp3s3ejoju.jl:13\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp3s3ejoju.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp3s3ejoju.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp3s3ejoju.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"eAsy\") == \"\"\n  UndefVarError: reversed not defined\n  Stacktrace:\n\
    \   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmp3s3ejoju.jl:13\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test"
  timestamp: 1659822183
- exit_code: 1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ word= reverse(word)\n    c= collect(word)\n    c= [x for x in c if x in [\"\
    a\",\"e\",\"i\",\"o\",\"u\"]]\n    a= [\"a\",\"e\",\"i\",\"o\",\"u\"]\n    d=\
    \ [i for i in a if i in c]\n    print(d)\n    if length(d) == 0\n        return\
    \ \"\"\n    else\n        v= findall(r\"^[^aeiou]|[^aeiou]$\",word)\n        if\
    \ length(v)==0\n            return \"\"\n        else\n            g= str(v[end])\n\
    \            return word[findfirst(g,word):end]\n        end\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"\
    yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"\
    easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\"\
    ) == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\")\
    \ == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") ==\
    \ \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") ==\
    \ \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") ==\
    \ \"o\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpgyl14h58.jl:32

    '
  stdout: "String[]test set: Test Failed at /tmp/tmpgyl14h58.jl:35\n  Expression:\
    \ candidate(\"yogurt\") == \"u\"\n   Evaluated: \"\" == \"u\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgyl14h58.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgyl14h58.jl:34\nString[]test set:\
    \ Test Failed at /tmp/tmpgyl14h58.jl:36\n  Expression: candidate(\"full\") ==\
    \ \"u\"\n   Evaluated: \"\" == \"u\"\nStacktrace:\n [1] macro expansion\n   @\
    \ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpgyl14h58.jl:36 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpgyl14h58.jl:34\nString[]String[]String[]String[]test\
    \ set: Test Failed at /tmp/tmpgyl14h58.jl:40\n  Expression: candidate(\"bad\"\
    ) == \"a\"\n   Evaluated: \"\" == \"a\"\nStacktrace:\n [1] macro expansion\n \
    \  @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpgyl14h58.jl:40 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpgyl14h58.jl:34\nString[]test set: Test Failed\
    \ at /tmp/tmpgyl14h58.jl:41\n  Expression: candidate(\"most\") == \"o\"\n   Evaluated:\
    \ \"\" == \"o\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgyl14h58.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgyl14h58.jl:34\nString[]String[]String[]String[]test\
    \ set: Test Failed at /tmp/tmpgyl14h58.jl:45\n  Expression: candidate(\"anime\"\
    ) == \"i\"\n   Evaluated: \"\" == \"i\"\nStacktrace:\n [1] macro expansion\n \
    \  @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Te"
  timestamp: 1659822182
- exit_code: 1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ right_side_word =  reverse(word)\n    right_side_vowels = []\n    for (i, ch)\
    \ in enumerate(right_side_word)\n        if ch in [\"a\", \"e\", \"i\", \"o\"\
    , \"u\"]\n            right_side_vowels.append(ch)\n        end\n    end\n   \
    \ right_side_vowels = right_side_vowels[1:end] # remove the last vowel\n    for\
    \ (i, vowel) in enumerate(right_side_vowels)\n        if i+1 < length(right_side_vowels)\n\
    \            if isalpha(right_side_vowels[i+1])\n                return reverse(vowel)\n\
    \            end\n        end\n    end\n    return \"\"\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"yogurt\") == \"\
    u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"easy\") == \"\
    \")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\") == \"\"\
    )\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\") == \"o\"\
    )\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") == \"\")\n\t\
    @test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") == \"i\")\n\t\
    @test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") == \"o\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp24_3mkhw.jl:31

    '
  stdout: "test set: Test Failed at /tmp/tmp24_3mkhw.jl:34\n  Expression: candidate(\"\
    yogurt\") == \"u\"\n   Evaluated: \"\" == \"u\"\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp24_3mkhw.jl:34 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp24_3mkhw.jl:33\ntest set: Test Failed at /tmp/tmp24_3mkhw.jl:35\n\
    \  Expression: candidate(\"full\") == \"u\"\n   Evaluated: \"\" == \"u\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp24_3mkhw.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp24_3mkhw.jl:33\ntest set: Test\
    \ Failed at /tmp/tmp24_3mkhw.jl:39\n  Expression: candidate(\"bad\") == \"a\"\n\
    \   Evaluated: \"\" == \"a\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp24_3mkhw.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp24_3mkhw.jl:33\ntest set: Test\
    \ Failed at /tmp/tmp24_3mkhw.jl:40\n  Expression: candidate(\"most\") == \"o\"\
    \n   Evaluated: \"\" == \"o\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp24_3mkhw.jl:40 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp24_3mkhw.jl:33\ntest set: Test\
    \ Failed at /tmp/tmp24_3mkhw.jl:44\n  Expression: candidate(\"anime\") == \"i\"\
    \n   Evaluated: \"\" == \"i\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp24_3mkhw.jl:44 [inlined]\n"
  timestamp: 1659822182
- exit_code: 1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ \"\"\"\n    >>> get_closest_vowel(\"k\")\n    \"\"\n    >>> get_closest_vowel(\"\
    kp\")\n    \"\"\n    >>> get_closest_vowel(\"tknk\")\n    \"k\"\n    >>> get_closest_vowel(\"\
    christ\")\n    \"i\"\n    >>> get_closest_vowel(\"haron\")\n    \"a\"\n    >>>\
    \ get_closest_vowel(\"hak\")\n    \"a\"\n    >>> get_closest_vowel(\"drink\")\n\
    \    \"i\"\n    >>> get_closest_vowel(\"drunk\")\n    \"u\"\n    >>> get_closest_vowel(\"\
    kraken\")\n    \"a\"\n    >>> get_closest_vowel(\"krakken\")\n    \"e\"\n    >>>\
    \ get_closest_vowel(\"kristian\")\n    \"i\"\n    >>> get_closest_vowel(\"kristiansen\"\
    )\n    \"e\"\n    >>> get_closest_vowel(\"kevin\")\n    \"e\"\n    >>> get_closest_vowel(\"\
    evangelion\")\n    \"a\"\n    >>> get_closest_vowel(\"shinji\")\n    \"i\"\n \
    \   >>> get_closest_vowel(\"blink\")\n    \"i\"\n    >>> get_closest_vowel(\"\
    mute\")\n    \"u\"\n    >>> get_closest_vowel(\"mucus\")\n    \"u\"\n    >>> get_closest_vowel(\"\
    tough\")\n    \"o\"\n    >>> get_closest_vowel(\"waffle\")\n    \"a\"\n    >>>\
    \ get_closest_vowel(\"lemon\")\n    \"e\"\n    >>> get_closest_vowel(\"basement\"\
    )\n    \"a\"\n    >>> get_closest_vowel(\"plate\")\n    \"a\"\n    >>> get_closest_vowel(\"\
    soup\")\n    \"o\"\n    >>> get\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\
    \t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\"\
    )\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\
    \t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t\
    @test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"\
    ba\") == \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\"\
    ) == \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\"\
    ) == \"o\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpfupuxhx0.jl:1\nin expression starting at /tmp/tmpfupuxhx0.jl:1\n"
  stdout: ''
  timestamp: 1659822181
- exit_code: -1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ l = length(word)\n    for i in 1:l\n        if !(word[i] in ['a','e','i','o','u'])\
    \ && (word[i+1] in ['a','e','i','o','u'])\n            println(word[i+1])\n  \
    \      end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\
    \t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\"\
    )\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\
    \t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t\
    @test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"\
    ba\") == \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\"\
    ) == \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\"\
    ) == \"o\")\nend\n"
  status: Timeout
  stderr: 'b''ERROR: LoadError: '''
  stdout: 'b''o\nu\ntest set: Error During Test at /tmp/tmp6v91cq0p.jl:24\n  Test
    threw exception\n  Expression: candidate("yogurt") == "u"\n  BoundsError: attempt
    to access 6-codeunit String at index [7]\n  Stacktrace:\n   [1] checkbounds\n     @
    ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102
    [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] get_closest_vowel(word::String)\n     @
    Main /tmp/tmp6v91cq0p.jl:14\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [6] macro expansion\n     @ /tmp/tmp6v91cq0p.jl:24 [inlined]\n   [7]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [8] top-level scope\n     @ /tmp/tmp6v91cq0p.jl:23\nu\ntest set:
    Error During Test at /tmp/tmp6v91cq0p.jl:25\n  Test threw exception\n  Expression:
    candidate("full") == "u"\n  BoundsError: attempt to access 4-codeunit String at
    index [5]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2]
    codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223
    [inlined]\n   [4] get_closest_vowel(word::String)\n     @ Main /tmp/tmp6v91cq0p.jl:14\n   [5]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [6] macro expansion\n     @ /tmp/tmp6v91cq0p.jl:25 [inlined]\n   [7]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [8] top-level scope\n     @ /tmp/tmp6v91cq0p.jl:23\ntest set: Error
    During Test at /tmp/tmp6v91cq0p.jl:26\n  Test threw exception\n  Expression: candidate("easy")
    == ""\n  BoundsError: attempt to access 4-codeunit String at index [5]\n  Stacktrace:\n   [1]
    checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @
    ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223
    [inlined]\n   [4] get_closest_vowel(word::String)\n     @ Main /tmp/tmp6v91cq0p'
  timestamp: 1659822184
- exit_code: 1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ for (i, c) in enumerate(reverse(word))\n        c == 'a' || c == 'e' || c ==\
    \ 'i' || c == 'o' || c == 'u' ? return word[end-i-1] : nothing\n    end\n    return\
    \ \"\"\nend\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\t\
    @test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\
    \t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t\
    @test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"\
    most\") == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\"\
    ) == \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\"\
    ) == \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\"\
    ) == \"o\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: colon expected in \"?\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp1kuu0n3t.jl:14\nin expression starting at\
    \ /tmp/tmp1kuu0n3t.jl:14\n"
  stdout: ''
  timestamp: 1659822181
- exit_code: 1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ \"\"\"\n    >>> get_closest_vowel(\"codewars\")\n    \"o\"\n    >>> get_closest_vowel(\"\
    zodiacs\")\n    \"o\"\n    >>> get_closest_vowel(\"aaiougrt\")\n    \"i\"\n  \
    \  >>> get_closest_vowel(\"aeiou\")\n    \"\"\n    >>> get_closest_vowel(\"zxcvbn\"\
    )\n    \"\"\n    >>> get_closest_vowel(\"abracadabra\")\n    \"a\"\n    >>> get_closest_vowel(\"\
    cabd\")\n    \"a\"\n    >>> get_closest_vowel(\"cabdabba\")\n    \"a\"\n    >>>\
    \ get_closest_vowel(\"klmxcvb\")\n    \"\"\n    >>> get_closest_vowel(\"aa\")\n\
    \    \"\"\n    >>> get_closest_vowel(\"bb\")\n    \"\"\n    >>> get_closest_vowel(\"\
    k\")\n    \"\"\n    >>> get_closest_vowel(\"trance\")\n    \"a\"\n    >>> get_closest_vowel(\"\
    a\")\n    \"\"\n    >>> get_closest_vowel(\"abcc\")\n    \"c\"\n    >>> get_closest_vowel(\"\
    abcde\")\n    \"c\"\n    >>> get_closest_vowel(\"helpme\")\n    \"e\"\n    >>>\
    \ get_closest_vowel(\"y\")\n    \"\"\n    >>> get_closest_vowel(\"\")\n    \"\"\
    \n    >>> get_closest_vowel(\"bcd\")\n    \"\"\n    >>> get_closest_vowel(\"zxc\"\
    )\n    \"\"\n    >>> get_closest_vowel(\"abcabcabc\")\n    \"c\"\n    >>> get_closest_vowel(\"\
    abcabxabcd\")\n    \"c\"\n    >>> get_closest_vowel(\"abcabdabcd\")\n    \"a\"\
    \n    >>> get_closest_v\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\
    \t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\"\
    )\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\
    \t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t\
    @test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"\
    ba\") == \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\"\
    ) == \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\"\
    ) == \"o\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0e7xwtaw.jl:1\nin expression starting at /tmp/tmp0e7xwtaw.jl:1\n"
  stdout: ''
  timestamp: 1659822181
- exit_code: 1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ # put your code here\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = get_closest_vowel;\n\t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"\
    full\") == \"u\")\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"\
    eAsy\") == \"\")\n\t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\"\
    ) == \"a\")\n\t@test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\")\
    \ == \"\")\n\t@test(candidate(\"ba\") == \"\")\n\t@test(candidate(\"quick\") ==\
    \ \"\")\n\t@test(candidate(\"anime\") == \"i\")\n\t@test(candidate(\"Asia\") ==\
    \ \"\")\n\t@test(candidate(\"Above\") == \"o\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"end\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmph6flb87q.jl:14\nin expression starting at /tmp/tmph6flb87q.jl:14\n"
  stdout: ''
  timestamp: 1659822181
- exit_code: 1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ # Vowels in English language: aeiou\n   \n    #if the word is less than 2 characters,\
    \ return \"\"\n    if length(word) < 2\n        return \"\"\n    end\n    \n \
    \   #assign index based on location\n    for i in 1:length(word)\n        if word[end-i]\
    \ in ['a','e','i','o','u'] && word[end-i-1] not in ['a','e','i','o','u']\n   \
    \         return word[end-i]\n        end\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"yogurt\") == \"\
    u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"easy\") == \"\
    \")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\") == \"\"\
    )\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\") == \"o\"\
    )\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") == \"\")\n\t\
    @test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") == \"i\")\n\t\
    @test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") == \"o\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 13 errored,
    0 broken.

    in expression starting at /tmp/tmpx6zo1s_b.jl:28

    '
  stdout: "test set: Error During Test at /tmp/tmpx6zo1s_b.jl:31\n  Test threw exception\n\
    \  Expression: candidate(\"yogurt\") == \"u\"\n  TypeError: non-boolean (Char)\
    \ used in boolean context\n  Stacktrace:\n   [1] get_closest_vowel(word::String)\n\
    \     @ Main /tmp/tmpx6zo1s_b.jl:21\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpx6zo1s_b.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpx6zo1s_b.jl:30\ntest set:\
    \ Error During Test at /tmp/tmpx6zo1s_b.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"full\") == \"u\"\n  TypeError: non-boolean (Char) used in boolean\
    \ context\n  Stacktrace:\n   [1] get_closest_vowel(word::String)\n     @ Main\
    \ /tmp/tmpx6zo1s_b.jl:21\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpx6zo1s_b.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpx6zo1s_b.jl:30\ntest set:\
    \ Error During Test at /tmp/tmpx6zo1s_b.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(\"easy\") == \"\"\n  TypeError: non-boolean (Char) used in boolean\
    \ context\n  Stacktrace:\n   [1] get_closest_vowel(word::String)\n     @ Main\
    \ /tmp/tmpx6zo1s_b.jl:21\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpx6zo1s_b.jl:33 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpx6zo1s_b.jl:30\ntest set:\
    \ Error During Test at /tmp/tmpx6zo1s_b.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"eAsy\") == \"\"\n  BoundsError: attempt to access 4-codeunit String\
    \ at index [0]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] codeunit\n"
  timestamp: 1659822184
- exit_code: 1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ # create a empty vector to collect the index of found vowel\n    found_vowel_idx\
    \ = Int[]\n    # create vowel array\n    vowels = ['a', 'e', 'i', 'o', 'u']\n\
    \    # loop through the word to find the vowel\n    for i in 1:length(word)\n\
    \        if word[i] in vowels\n            # push the index of the word if it\
    \ is a vowel\n            push!(found_vowel_idx, i)\n        end\n    end\n  \
    \  # check if the found vowel index vector is empty, if so, return empty string\n\
    \    if isempty(found_vowel_idx)\n        return \"\"\n    end\n    # find the\
    \ index of the vowel that meets the requirement\n    for i in reverse(found_vowel_idx)\n\
    \        if (i == length(word)) || (i == 1)\n            continue\n        end\n\
    \        if (isalpha(word[i-1]) && !(word[i-1] in vowels)) && (isalpha(word[i+1])\
    \ && !(word[i+1] in vowels))\n            return word[i]\n        end\n    end\n\
    \    # return empty string if no such vowel found\n    return \"\"\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"\
    yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"\
    easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\"\
    ) == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\")\
    \ == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") ==\
    \ \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") ==\
    \ \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") ==\
    \ \"o\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 0 failed, 9 errored,
    0 broken.

    in expression starting at /tmp/tmpudq73jtw.jl:41

    '
  stdout: "test set: Error During Test at /tmp/tmpudq73jtw.jl:44\n  Test threw exception\n\
    \  Expression: candidate(\"yogurt\") == \"u\"\n  UndefVarError: isalpha not defined\n\
    \  Stacktrace:\n   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmpudq73jtw.jl:32\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpudq73jtw.jl:44 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpudq73jtw.jl:43\ntest set:\
    \ Error During Test at /tmp/tmpudq73jtw.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(\"full\") == \"u\"\n  UndefVarError: isalpha not defined\n  Stacktrace:\n\
    \   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmpudq73jtw.jl:32\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpudq73jtw.jl:45 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpudq73jtw.jl:43\ntest set:\
    \ Error During Test at /tmp/tmpudq73jtw.jl:46\n  Test threw exception\n  Expression:\
    \ candidate(\"easy\") == \"\"\n  UndefVarError: isalpha not defined\n  Stacktrace:\n\
    \   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmpudq73jtw.jl:32\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpudq73jtw.jl:46 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpudq73jtw.jl:43\ntest set:\
    \ Error During Test at /tmp/tmpudq73jtw.jl:49\n  Test threw exception\n  Expression:\
    \ candidate(\"bad\") == \"a\"\n  UndefVarError: isalpha not defined\n  Stacktrace:\n\
    \   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmpudq73jtw.jl:32\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src"
  timestamp: 1659822184
- exit_code: 1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ if starts_with_vowel(word) && ends_with_vowel(word)\n        return \"\"\n \
    \   end\n    if starts_with_vowel(word)\n        start = 1\n    else\n       \
    \ start = 0\n    end\n    if ends_with_vowel(word)\n        stop = -1\n    else\n\
    \        stop = 0\n    end\n    for i in start:stop\n        if is_consonant(word[i])\
    \ && is_consonant(word[i+1])\n            return word[i+1]\n        end\n    end\n\
    \    return \"\"\nend\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\
    \t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\"\
    )\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\
    \t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t\
    @test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"\
    ba\") == \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\"\
    ) == \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\"\
    ) == \"o\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 13 errored,
    0 broken.

    in expression starting at /tmp/tmpb8ivu49l.jl:34

    '
  stdout: "test set: Error During Test at /tmp/tmpb8ivu49l.jl:37\n  Test threw exception\n\
    \  Expression: candidate(\"yogurt\") == \"u\"\n  UndefVarError: starts_with_vowel\
    \ not defined\n  Stacktrace:\n   [1] get_closest_vowel(word::String)\n     @ Main\
    \ /tmp/tmpb8ivu49l.jl:12\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpb8ivu49l.jl:37 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpb8ivu49l.jl:36\ntest set:\
    \ Error During Test at /tmp/tmpb8ivu49l.jl:38\n  Test threw exception\n  Expression:\
    \ candidate(\"full\") == \"u\"\n  UndefVarError: starts_with_vowel not defined\n\
    \  Stacktrace:\n   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmpb8ivu49l.jl:12\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpb8ivu49l.jl:38 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpb8ivu49l.jl:36\ntest set:\
    \ Error During Test at /tmp/tmpb8ivu49l.jl:39\n  Test threw exception\n  Expression:\
    \ candidate(\"easy\") == \"\"\n  UndefVarError: starts_with_vowel not defined\n\
    \  Stacktrace:\n   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmpb8ivu49l.jl:12\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpb8ivu49l.jl:39 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpb8ivu49l.jl:36\ntest set:\
    \ Error During Test at /tmp/tmpb8ivu49l.jl:40\n  Test threw exception\n  Expression:\
    \ candidate(\"eAsy\") == \"\"\n  UndefVarError: starts_with_vowel not defined\n\
    \  Stacktrace:\n   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmpb8ivu49l.jl:12\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/p"
  timestamp: 1659822184
- exit_code: 1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ return \"\"\nend\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\
    \t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\"\
    )\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\
    \t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t\
    @test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"\
    ba\") == \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\"\
    ) == \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\"\
    ) == \"o\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpid07vu61.jl:16

    '
  stdout: "test set: Test Failed at /tmp/tmpid07vu61.jl:19\n  Expression: candidate(\"\
    yogurt\") == \"u\"\n   Evaluated: \"\" == \"u\"\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpid07vu61.jl:19 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpid07vu61.jl:18\ntest set: Test Failed at /tmp/tmpid07vu61.jl:20\n\
    \  Expression: candidate(\"full\") == \"u\"\n   Evaluated: \"\" == \"u\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpid07vu61.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpid07vu61.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpid07vu61.jl:24\n  Expression: candidate(\"bad\") == \"a\"\n\
    \   Evaluated: \"\" == \"a\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpid07vu61.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpid07vu61.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpid07vu61.jl:25\n  Expression: candidate(\"most\") == \"o\"\
    \n   Evaluated: \"\" == \"o\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpid07vu61.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpid07vu61.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpid07vu61.jl:29\n  Expression: candidate(\"anime\") == \"i\"\
    \n   Evaluated: \"\" == \"i\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpid07vu61.jl:29 [inlined]\n"
  timestamp: 1659822183
- exit_code: 1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ for i in eachindex(word)\n        if word[i] in \"aeiou\"\n            return\
    \ word[i]\n    end\n    return \"\"\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = get_closest_vowel;\n\t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"\
    full\") == \"u\")\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"\
    eAsy\") == \"\")\n\t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\"\
    ) == \"a\")\n\t@test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\")\
    \ == \"\")\n\t@test(candidate(\"ba\") == \"\")\n\t@test(candidate(\"quick\") ==\
    \ \"\")\n\t@test(candidate(\"anime\") == \"i\")\n\t@test(candidate(\"Asia\") ==\
    \ \"\")\n\t@test(candidate(\"Above\") == \"o\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp2pyin_ww.jl:11\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp2pyin_ww.jl:1\n\
    in expression starting at /tmp/tmp2pyin_ww.jl:1\n"
  stdout: ''
  timestamp: 1659822183
- exit_code: 1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ # please put your code here\n    return # put your return value here\nend\n\
    \ \nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"\
    yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"\
    easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\"\
    ) == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\")\
    \ == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") ==\
    \ \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") ==\
    \ \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") ==\
    \ \"o\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 13 errored,
    0 broken.

    in expression starting at /tmp/tmpdo1w41he.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmpdo1w41he.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"yogurt\") == \"u\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at ~/.conda/envs/polyglot/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmpdo1w41he.jl:13\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpdo1w41he.jl:21 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpdo1w41he.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpdo1w41he.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"full\") == \"u\"\n  MethodError: Cannot `convert` an object of type\
    \ Nothing to an object of type String\n  Closest candidates are:\n    convert(::Type{String},\
    \ !Matched::String) at ~/.conda/envs/polyglot/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmpdo1w41he.jl:13\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpdo1w41he.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpdo1w41he.jl"
  timestamp: 1659822186
- exit_code: 1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    n = length(word)\n    for\
    \ i in 1:n\n        if vowels != word[n-i]\n            continue\n        else\n\
    \            if vowels != word[n-i+1] || vowels != word[n-i-1]\n             \
    \   return word[n-i]\n            end\n        end\n    end\n    return \"\"\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"\
    yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"\
    easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\"\
    ) == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\")\
    \ == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") ==\
    \ \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") ==\
    \ \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") ==\
    \ \"o\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 13 errored,
    0 broken.

    in expression starting at /tmp/tmp8b57d1co.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmp8b57d1co.jl:30\n  Test threw exception\n\
    \  Expression: candidate(\"yogurt\") == \"u\"\n  BoundsError: attempt to access\
    \ 6-codeunit String at index [0]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3]\
    \ getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] get_closest_vowel(word::String)\n\
    \     @ Main /tmp/tmp8b57d1co.jl:15\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmp8b57d1co.jl:30 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmp8b57d1co.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp8b57d1co.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(\"full\") == \"u\"\n  BoundsError: attempt to access 4-codeunit String\
    \ at index [0]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3]\
    \ getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] get_closest_vowel(word::String)\n\
    \     @ Main /tmp/tmp8b57d1co.jl:15\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmp8b57d1co.jl:31 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmp8b57d1co.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp8b57d1co.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"easy\") == \"\"\n  BoundsError: attempt to access 4-codeunit String\
    \ at index [0]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3]\
    \ getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] get_closest_vowel(word::String)\n\
    \     @ Main /tmp/tmp8b57d1co.jl:15\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share"
  timestamp: 1659822185
- exit_code: 1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ ch = map(Char, 'aeiou')\n    w = map(Char, word)\n    vowels = []\n    for i\
    \ = 1:length(w)\n        if w[i] in ch\n            append!(vowels, (i, w[i]))\n\
    \        end\n    end\n    if length(vowels) == 0\n        return \"\"\n    end\n\
    \    if vowels[1][1] > 1\n        return vowels[1][2]\n    end\n    a = []\n \
    \   for i = 2:length(vowels)\n        append!(a, vowels[i][1] - vowels[i-1][1])\n\
    \    end\n    idx = findmin(a)[2]\n    return vowels[idx][2]\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"yogurt\"\
    ) == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"easy\"\
    ) == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\") ==\
    \ \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\") ==\
    \ \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") == \"\"\
    )\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") == \"i\"\
    )\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") == \"o\"\
    )\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmpdtib0yh2.jl:12\nin expression\
    \ starting at /tmp/tmpdtib0yh2.jl:12\n"
  stdout: ''
  timestamp: 1659822183
- exit_code: -1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ #define the consonants and vowels\n    consonants = [\"b\",\"c\",\"d\",\"f\"\
    ,\"g\",\"h\",\"j\",\"k\",\"l\",\"m\",\"n\",\"p\",\"q\",\"r\",\"s\",\"t\",\"v\"\
    ,\"w\",\"x\",\"y\",\"z\"]\n    vowels = [\"a\",\"e\",\"i\",\"o\",\"u\"]\n    #convert\
    \ the word to lowercase\n    word = word*lowercase\n    #find the first vowel\
    \ index\n    index = 0\n    for i in eachindex(word)\n        if word[i] in vowels\n\
    \            index = i\n            break\n        end\n    end\n    #right side\
    \ consonants\n    index_right = []\n    for i in index:length(word)\n        if\
    \ word[i] in consonants\n            push!(index_right,i)\n        end\n    end\n\
    \    #left side consonants\n    index_left = []\n    for i in 1:index\n      \
    \  if word[i] in consonants\n            push!(index_left,i)\n        end\n  \
    \  end\n    #find the minimum difference\n    minimum = maximum(length(word))\n\
    \    for i in eachindex(index_right)\n        if index_right[i] - index_left[i]\
    \ < minimum\n            minimum = index_right[i] - index_left[i]\n        end\n\
    \    end\n    #find the closest vowel\n    closest_vowel = \"\"\n    for i in\
    \ eachindex(index_right)\n        if index_right[i] - index_left[i] == minimum\n\
    \            closest_vowel = word[index_left[i]+1]\n        end\n    end\n   \
    \ return closest_vowel\nend\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\
    \t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\"\
    )\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\
    \t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t\
    @test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"\
    ba\") == \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\"\
    ) == \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\"\
    ) == \"o\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmp4_5_xxi2.jl:60\n  Test threw
    exception\n  Expression: candidate("yogurt") == "u"\n  MethodError: no method
    matching *(::String, ::typeof(lowercase))\n  Closest candidates are:\n    *(::Any,
    ::Any, !Matched::Any, !Matched::Any...) at ~/.conda/envs/polyglot/share/julia/base/operators.jl:655\n    *(::Union{AbstractChar,
    AbstractString}, !Matched::Union{AbstractChar, AbstractString}...) at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:260\n    *(::Union{AbstractChar,
    AbstractString}, !Matched::Missing) at ~/.conda/envs/polyglot/share/julia/base/missing.jl:183\n    ...\n  Stacktrace:\n   [1]
    get_closest_vowel(word::String)\n     @ Main /tmp/tmp4_5_xxi2.jl:16\n   [2] macro
    expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmp4_5_xxi2.jl:60 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmp4_5_xxi2.jl:59\n'''
  timestamp: 1659822186
- exit_code: 1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ # write your code here\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\
    \t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\"\
    )\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\
    \t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t\
    @test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"\
    ba\") == \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\"\
    ) == \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\"\
    ) == \"o\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpvl58_w2q.jl:11\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpvl58_w2q.jl:1\n\
    in expression starting at /tmp/tmpvl58_w2q.jl:1\n"
  stdout: ''
  timestamp: 1659822183
- exit_code: 1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ return \"eiou\"\nend\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\
    \t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\"\
    )\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\
    \t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t\
    @test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"\
    ba\") == \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\"\
    ) == \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\"\
    ) == \"o\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 13 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpcmvnoep4.jl:16

    '
  stdout: "test set: Test Failed at /tmp/tmpcmvnoep4.jl:19\n  Expression: candidate(\"\
    yogurt\") == \"u\"\n   Evaluated: \"eiou\" == \"u\"\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpcmvnoep4.jl:19 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpcmvnoep4.jl:18\ntest set: Test Failed at /tmp/tmpcmvnoep4.jl:20\n\
    \  Expression: candidate(\"full\") == \"u\"\n   Evaluated: \"eiou\" == \"u\"\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpcmvnoep4.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpcmvnoep4.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpcmvnoep4.jl:21\n  Expression: candidate(\"easy\") == \"\"\n\
    \   Evaluated: \"eiou\" == \"\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpcmvnoep4.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpcmvnoep4.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpcmvnoep4.jl:22\n  Expression: candidate(\"eAsy\") == \"\"\n\
    \   Evaluated: \"eiou\" == \"\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpcmvnoep4.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpcmvnoep4.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpcmvnoep4.jl:23\n  Expression: candidate(\"ali\") == \"\"\n\
    \   Evaluated: \"eiou\" == \"\"\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpcmvnoep4.jl:"
  timestamp: 1659822184
- exit_code: 1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ # YOUR CODE HERE\nend\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\
    \t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\"\
    )\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\
    \t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t\
    @test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"\
    ba\") == \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\"\
    ) == \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\"\
    ) == \"o\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 13 errored,
    0 broken.

    in expression starting at /tmp/tmpnwyu95xv.jl:16

    '
  stdout: "test set: Error During Test at /tmp/tmpnwyu95xv.jl:19\n  Test threw exception\n\
    \  Expression: candidate(\"yogurt\") == \"u\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at ~/.conda/envs/polyglot/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmpnwyu95xv.jl:13\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpnwyu95xv.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpnwyu95xv.jl:18\ntest set:\
    \ Error During Test at /tmp/tmpnwyu95xv.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"full\") == \"u\"\n  MethodError: Cannot `convert` an object of type\
    \ Nothing to an object of type String\n  Closest candidates are:\n    convert(::Type{String},\
    \ !Matched::String) at ~/.conda/envs/polyglot/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmpnwyu95xv.jl:13\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpnwyu95xv.jl:20 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpnwyu95xv.jl"
  timestamp: 1659822186
- exit_code: 1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ vowels = \"aeiou\"\n    for i in 1:length(word)\n        if word[i] in vowels\
    \ && word[i-1] \u2209 vowels && i != length(word) && word[i+1] \u2209 vowels\n\
    \            return word[i]\n        end\n    end\n    return \"\"\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"\
    yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"\
    easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\"\
    ) == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\")\
    \ == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") ==\
    \ \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") ==\
    \ \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") ==\
    \ \"o\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 10 errored,
    0 broken.

    in expression starting at /tmp/tmpi5qt7_da.jl:22

    '
  stdout: "test set: Error During Test at /tmp/tmpi5qt7_da.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"yogurt\") == \"u\"\n  MethodError: Cannot `convert`\
    \ an object of type Char to an object of type String\n  Closest candidates are:\n\
    \    convert(::Type{String}, !Matched::String) at ~/.conda/envs/polyglot/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmpi5qt7_da.jl:15\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpi5qt7_da.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpi5qt7_da.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpi5qt7_da.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"full\") == \"u\"\n  MethodError: Cannot `convert` an object of type\
    \ Char to an object of type String\n  Closest candidates are:\n    convert(::Type{String},\
    \ !Matched::String) at ~/.conda/envs/polyglot/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmpi5qt7_da.jl:15\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpi5qt7_da.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpi5qt7_da.jl:24\nte"
  timestamp: 1659822186
- exit_code: -1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ letters = ['a', 'e', 'i', 'o', 'u']\n    vowels_in_word = [letter for letter\
    \ in word if letter in letters]\n    return vowels_in_word[end] #this returns\
    \ the last vowell in the word\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = get_closest_vowel;\n\t@test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"\
    full\") == \"u\")\n\t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"\
    eAsy\") == \"\")\n\t@test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\"\
    ) == \"a\")\n\t@test(candidate(\"most\") == \"o\")\n\t@test(candidate(\"ab\")\
    \ == \"\")\n\t@test(candidate(\"ba\") == \"\")\n\t@test(candidate(\"quick\") ==\
    \ \"\")\n\t@test(candidate(\"anime\") == \"i\")\n\t@test(candidate(\"Asia\") ==\
    \ \"\")\n\t@test(candidate(\"Above\") == \"o\")\nend\n"
  status: Timeout
  stderr: 'b''ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 13 errored,
    0 broken.\nin expression starting at /tmp/tmpkua2qz__.jl:18\n'''
  stdout: 'b''test set: Error During Test at /tmp/tmpkua2qz__.jl:21\n  Test threw
    exception\n  Expression: candidate("yogurt") == "u"\n  MethodError: Cannot `convert`
    an object of type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{String},
    !Matched::String) at ~/.conda/envs/polyglot/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    get_closest_vowel(word::String)\n     @ Main /tmp/tmpkua2qz__.jl:14\n   [2] macro
    expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkua2qz__.jl:21 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkua2qz__.jl:20\ntest set: Error
    During Test at /tmp/tmpkua2qz__.jl:22\n  Test threw exception\n  Expression: candidate("full")
    == "u"\n  MethodError: Cannot `convert` an object of type Char to an object of
    type String\n  Closest candidates are:\n    convert(::Type{String}, !Matched::String)
    at ~/.conda/envs/polyglot/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    get_closest_vowel(word::String)\n     @ Main /tmp/tmpkua2qz__.jl:14\n   [2] macro
    expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkua2qz__.jl:22 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-leve'
  timestamp: 1659822186
- exit_code: 1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ for i = length(word):-1:1 \n        if isvowel(word[i])\n            if isconsonant(word[i-1])\n\
    \                return word[i]\n            end\n        end\n    end\n    return\
    \ \"\"\nend\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\t\
    @test(candidate(\"yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\
    \t@test(candidate(\"easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t\
    @test(candidate(\"ali\") == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"\
    most\") == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\"\
    ) == \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\"\
    ) == \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\"\
    ) == \"o\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 13 errored,
    0 broken.

    in expression starting at /tmp/tmpik1ezqhd.jl:23

    '
  stdout: "test set: Error During Test at /tmp/tmpik1ezqhd.jl:26\n  Test threw exception\n\
    \  Expression: candidate(\"yogurt\") == \"u\"\n  UndefVarError: isvowel not defined\n\
    \  Stacktrace:\n   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmpik1ezqhd.jl:13\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpik1ezqhd.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpik1ezqhd.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpik1ezqhd.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"full\") == \"u\"\n  UndefVarError: isvowel not defined\n  Stacktrace:\n\
    \   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmpik1ezqhd.jl:13\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpik1ezqhd.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpik1ezqhd.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpik1ezqhd.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"easy\") == \"\"\n  UndefVarError: isvowel not defined\n  Stacktrace:\n\
    \   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmpik1ezqhd.jl:13\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpik1ezqhd.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpik1ezqhd.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpik1ezqhd.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"eAsy\") == \"\"\n  UndefVarError: isvowel not defined\n  Stacktrace:\n\
    \   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmpik1ezqhd.jl:13\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src"
  timestamp: 1659822185
- exit_code: 1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ vowels=[\"a\",\"e\",\"i\",\"o\",\"u\"]\n    for i in eachindex(word):\n    \
    \    if word[i] in vowels\n            return word[i]\n    end\n    return \"\"\
    \nend\nusing Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"\
    yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"\
    easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\"\
    ) == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\")\
    \ == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") ==\
    \ \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") ==\
    \ \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") ==\
    \ \"o\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpk6a3tr90.jl:14\nin expression starting at\
    \ /tmp/tmpk6a3tr90.jl:14\n"
  stdout: ''
  timestamp: 1659822183
- exit_code: 1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n\nend\n\
    using Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"\
    yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"\
    easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\"\
    ) == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\")\
    \ == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") ==\
    \ \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") ==\
    \ \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") ==\
    \ \"o\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 13 errored,
    0 broken.

    in expression starting at /tmp/tmpejxe3ydw.jl:16

    '
  stdout: "test set: Error During Test at /tmp/tmpejxe3ydw.jl:19\n  Test threw exception\n\
    \  Expression: candidate(\"yogurt\") == \"u\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at ~/.conda/envs/polyglot/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmpejxe3ydw.jl:13\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpejxe3ydw.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpejxe3ydw.jl:18\ntest set:\
    \ Error During Test at /tmp/tmpejxe3ydw.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"full\") == \"u\"\n  MethodError: Cannot `convert` an object of type\
    \ Nothing to an object of type String\n  Closest candidates are:\n    convert(::Type{String},\
    \ !Matched::String) at ~/.conda/envs/polyglot/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] get_closest_vowel(word::String)\n     @ Main /tmp/tmpejxe3ydw.jl:13\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpejxe3ydw.jl:20 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpejxe3ydw.jl"
  timestamp: 1659822187
- exit_code: 1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ if typeof(word) != String\n        return \"Not a string\"\n    end\n    vowels\
    \ = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    cons = [\"b\", \"c\", \"d\", \"f\"\
    , \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\"\
    , \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"]\n    for letter in word\n        if\
    \ letter in vowels\n            if letter != \"a\"\n                if letter\
    \ != \"e\"\n                    if letter != \"i\"\n                        if\
    \ letter != \"o\"\n                            if letter != \"u\"\n          \
    \                      return \"Not an English letter\"\n                    \
    \        end\n                        end\n                    end\n         \
    \       end\n            end\n        end\n        if letter in cons\n       \
    \     if letter != \"b\"\n                if letter != \"c\"\n               \
    \     if letter != \"d\"\n                        if letter != \"f\"\n       \
    \                     if letter != \"g\"\n                                if letter\
    \ != \"h\"\n                                    if letter != \"j\"\n         \
    \                               if letter != \"k\"\n                         \
    \                   if letter != \"l\"\n                                     \
    \           if letter != \"m\"\n                                             \
    \       if letter != \"n\"\n                                                 \
    \       if letter != \"p\"\n                                                 \
    \           if letter != \"q\"\n                                             \
    \                   if letter != \"r\"\n                                     \
    \                               if letter != \"s\"\n                         \
    \                                               if letter != \"t\"\n         \
    \                                                                   if letter\
    \ != \"v\"\n                                                                 \
    \               if letter != \"w\"\n                                         \
    \                                           if letter != \"x\"\n             \
    \                                                                           if\
    \ letter != \"y\"\n                                                          \
    \                                  if letter != \"z\"\n                      \
    \                                                                          return\
    \ \"Not an English letter\"\n                                                \
    \                                            end\n                           \
    \                                                             end\n          \
    \                                                                          end\n\
    \                                                                            \
    \    end\n                                                                   \
    \         end\n                                                              \
    \          end\n                                                             \
    \       end\n                                                                end\n\
    \                                                            end\n           \
    \                                             end\n                          \
    \                          end\n                                             \
    \   end\n                                            end\n                   \
    \                     end\n                                    end\nusing Test\n\
    \n@testset begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"yogurt\"\
    ) == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"easy\"\
    ) == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\") ==\
    \ \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\") ==\
    \ \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") == \"\"\
    )\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") == \"i\"\
    )\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") == \"o\"\
    )\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmplluwtx1i.jl:1\nin expression starting at /tmp/tmplluwtx1i.jl:1\n"
  stdout: ''
  timestamp: 1659822184
- exit_code: 1
  program: "\"\"\"You are given a word. Your task is to find the closest vowel that\
    \ stands between \n    two consonants from the right side of the word (case sensitive).\n\
    \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
    \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
    \ that the given string contains English letter only.\n\n    Example:\n      \
    \              \"\"\"\nfunction get_closest_vowel(word::String)::String \n   \
    \ for i in length(word):-1:1 \n        if (word[i] in (\"aeiou\")) && !(word[i]\
    \ in (\"aeiou\"))\n            return word[i]\n    end\n    return \"\"\nend\n\
    using Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"\
    yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"\
    easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\"\
    ) == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\")\
    \ == \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") ==\
    \ \"\")\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") ==\
    \ \"i\")\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") ==\
    \ \"o\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpbo0fg8xh.jl:11\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpbo0fg8xh.jl:1\n\
    in expression starting at /tmp/tmpbo0fg8xh.jl:1\n"
  stdout: ''
  timestamp: 1659822184

name: HumanEval_124_valid_date
language: jl
prompt: "\"\"\"You have to write a function which validates a given date string and\n\
  \    returns True if the date is valid otherwise False.\n    The date is valid if\
  \ all of the following rules are satisfied:\n    1. The date string is not empty.\n\
  \    2. The number of days is not less than 1 or higher than 31 days for months\
  \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days\
  \ for months 4,6,9,11. And, the number of days is not less than 1 or higher than\
  \ 29 for the month 2.\n    3. The months should not be less than 1 or higher than\
  \ 12.\n    4. The date should be in the format: mm-dd-yyyy\n\n    \n    \n    \n\
  \    \n        \"\"\"\nfunction valid_date(date::String)::Bool \n"
tests: "using Test\n\n@testset begin\n\ncandidate = valid_date;\n\t@test(candidate(\"\
  03-11-2000\") == true)\n\t@test(candidate(\"15-01-2012\") == false)\n\t@test(candidate(\"\
  04-0-2040\") == false)\n\t@test(candidate(\"06-04-2020\") == true)\n\t@test(candidate(\"\
  01-01-2007\") == true)\n\t@test(candidate(\"03-32-2011\") == false)\n\t@test(candidate(\"\
  \") == false)\n\t@test(candidate(\"04-31-3000\") == false)\n\t@test(candidate(\"\
  06-06-2005\") == true)\n\t@test(candidate(\"21-31-2000\") == false)\n\t@test(candidate(\"\
  04-12-2003\") == true)\n\t@test(candidate(\"04122003\") == false)\n\t@test(candidate(\"\
  20030412\") == false)\n\t@test(candidate(\"2003-04\") == false)\n\t@test(candidate(\"\
  2003-04-12\") == false)\n\t@test(candidate(\"04-2003\") == false)\nend\n"
completions: ["    if !(isempty(date))\n        if (date[1:2]==\"01\" || date[1:2]==\"\
    03\" || date[1:2]==\"05\" || date[1:2]==\"07\" || date[1:2]==\"08\" || date[1:2]==\"\
    10\" || date[1:2]==\"12\")\n            if (parse(Int64,date[3:4])<=31 && parse(Int64,date[3:4])>=1)\n\
    \                if (parse(Int64,date[1:2])<=12 && parse(Int64,date[1:2])>=1)\n\
    \                    if (date[5]==\"-\" && date[8]==\"-\")\n                 \
    \       if length(date)==10\n                            return true\n       \
    \                 end\n                    end\n                end\n        \
    \    end\n        elseif (date[1:2]==\"04\" || date[1:2]==\"06\" || date[1:2]==\"\
    09\" || date[1:2]==\"11\")\n            if (parse(Int64,date[3:4])<=30 && parse(Int64,date[3:4])>=1)\n\
    \                if (parse(Int64,date[1:2])<=12 && parse(Int64,date[1:2])>=1)\n\
    \                    if (date[5]==\"-\" && date[8]==\"-\")\n                 \
    \       if length(date)==10\n                            return true\n       \
    \                 end\n                    end\n                end\n        \
    \    end\n        elseif (date[1:2]==\"02\")\n            if (parse(Int64,date[3:4])<=29\
    \ && parse(Int64,date[3:4])>=1)\n                if (parse(Int64,date[1:2])<=12\
    \ && parse(Int64,date[1:2])>=1)\n                    if (date[5]==\"-\" && date[8]==\"\
    -\")\n                        if length(date)==10\n                          \
    \  return true\n                        end\n                    end\n       \
    \         end\n            end\n        end\n    end\n    return false\nend",
  "    if length(date) == 0 \n        return false\n    end\n    if length(date) ==\
    \ 10\n        day = parse(Int,date[4:5])\n        month = parse(Int,date[1:2])\n\
    \        year = parse(Int,date[7:10])\n        if month == 2\n            if day\
    \ <= 28\n                return true\n            elseif \n        end\n    else\n\
    \        return false\n    end\n    #return true\nend", "   \n    dd::Int = parse(Int,date[7:8])\
    \ #For the last 2 digits in the date string\n    mm::Int = parse(Int,date[4:5])\
    \ #For the 2 digits that make up the month\n    yyyy::Int = parse(Int,date[end-3:end])\
    \ #For the last 4 digits in the date string\n    if !isempty(date) #If the date\
    \ string is not empty\n        if mm in [1,3,5,7,8,10,12] #If the month is 1,3,5,7,8,10,12\n\
    \            if dd in 1:31 #and the date is between 1 and 31\n               \
    \ return true #then the date is valid\n            else #If the date is not in\
    \ 1:31\n                return false #Then the date is invalid\n            end\n\
    \        elseif mm in [4,6,9,11] #If the month is 4,6,9,11\n            if dd\
    \ in 1:30 #And the date is between 1 and 30\n                return true #Then\
    \ the date is valid\n            else #If the date is not in 1:30\n          \
    \      return false #Then the date is invalid\n            end\n        elseif\
    \ mm in 2 #If the month is 2\n            if dd in 1:29 #And the date is between\
    \ 1 and 29\n                return true #Then the date is valid\n            else\
    \ #If the date is not in 1:29\n                return false #Then the date is\
    \ invalid\n            end\n        elseif mm in 0:12 #If the month is between\
    \ 0 and 12\n            return false #Then the date is invalid\n        end\n\
    \    else\n        return false #If the date string is empty, the date is invalid\n\
    \    end\nend", "    \n    pattern = r\"^(0?[1-9]|1[0-2])-(0?[1-9]|[1-2][0-9]|3[0-1])-[0-9]{4}$\"\
    \n    matchobj = re.match(pattern, date)\n    if matchobj == nothing\n       \
    \ return false\n    end\n    \n    month, day, year = [int(i) for i in split(date,\
    \ \"-\")]\n    \n    if month in [1,3,5,7,8,10,12] && day > 31\n        return\
    \ false\n    end\n    \n    if month in [4,6,9,11] && day > 30\n        return\
    \ false\n    end\n    \n    if month == 2 && day > 29\n        return false\n\
    \    end\n    \n    return true\nend", "    (month,day,year) = split(date,\"-\"\
    )\n    #find out if we have leap year\n    if year % 4 == 0 \n        if (year\
    \ % 100 == 0) && (year % 400 != 0)\n            leap_year = false\n        else\n\
    \            leap_year = true\n        end\n    else\n        leap_year = false\n\
    \    end", "    match(r\"(\\d{2})-(\\d{2})-(\\d{4})\", date) != nothing\nend",
  "    @assert !isempty(date)\n    d=split(date,\"-\")\n    d1,d2,d3= d[1],d[2],d[3]\n\
    \    @assert (d1<\"12\"&&d1>\"0\")\n    @assert (d2<\"31\"&&d2>\"0\")\n    @assert\
    \ !isempty(d3)\n    @assert isa(d1,String) && isa(d2,String) && isa(d3,String)\n\
    \    return true\nend", "    date = date.split(\"-\")\n    valid = true\n    if\
    \ (length(date) == 3)\n        valid = valid && parse(Int, date[1]) <= 12\n  \
    \      valid = valid && parse(Int, date[2]) <= 31\n        valid = valid && parse(Int,\
    \ date[3]) >= 1000\n        valid = valid && parse(Int, date[3]) <= 3000\n   \
    \ else\n        valid = false\n    end\n    valid\nend", "    date_splitted =\
    \ split(date, \"-\")\n    if length(date_splitted) != 3\n        return false\n\
    \    end\n    day, month, year = date_splitted\n    if parse(Int, day) < 1 ||\
    \ parse(Int, day) > 31 || parse(Int, month) < 1 || parse(Int, month) > 12\n  \
    \      return false\n    end\n    if parse(Int, month) in [4,6,9,11] && parse(Int,\
    \ day) > 30\n        return false\n    end\n    if parse(Int, month) == 2 && parse(Int,\
    \ day) > 29\n        return false\n    end\n    return true\nend\nprintln(valid_date(\"\
    03-15-2020\"))\nprintln(valid_date(\"13-15-2020\"))\nprintln(valid_date(\"03-31-2020\"\
    ))\nprintln(valid_date(\"06-31-2020\"))\nprintln(valid_date(\"02-29-2019\"))",
  '    #Write a function which accepts a date as string and returns true if the date
    is valid.', "    month,day,year = split(date, \"-\")\n    month = parse(Int,month)\n\
    \    day = parse(Int,day)\n    year = parse(Int,year)\n    if month in [1,3,5,7,8,10,12]\n\
    \        return (1 <= day <= 31)\n    elseif month in [4,6,9,11]\n        return\
    \ (1 <= day <= 30)\n    elseif month == 2\n        return (1 <= day <= 29)\n \
    \   else\n        return false\n    end\nend", "    # Your code here\nend", " \
    \   if date == \"\"\n        return false\n    end", "    month, day, year = \
    \ date.split(\"-\")\n    date = date.split(\"-\")\n    months = [\"04\", \"06\"\
    , \"09\", \"11\"]\n    if day in months \n        if day < \"31\" \n         \
    \   println(\"true\")\n            else\n            println(\"false\")\n    \
    \    end\n    elseif month == \"02\" \n        if day < \"29\" \n            println(\"\
    true\")\n            else\n            println(\"false\")\n        end\n    else\n\
    \        if day < \"32\" \n            println(\"true\")\n            else\n \
    \           println(\"false\")\n        end\n    end\nend", "    daysinmonth=[31\
    \ 31 28 31 30 31 30 31 31 30 31 30 31]\n    if split(date,\"-\")==nothing\n  \
    \      return false\n    end\n    month,day,year=split(date,\"-\")\n    if year<0\n\
    \        return false\n    end\n    if month<1 || month>12\n        return false\n\
    \    end\n    if day<1 || day>daysinmonth[month]\n        return false\n    end\n\
    \    return true\nend", "    split = split(date, \"-\")\n    if(length(split)\
    \ != 3)\n        return false\n    end\n    months = [\"01\", \"02\", \"03\",\
    \ \"04\", \"05\", \"06\", \"07\", \"08\", \"09\", \"10\", \"11\", \"12\"]\n  \
    \  if(split[1] in months)\n        if(split[1] in [\"01\", \"03\", \"05\", \"\
    07\", \"08\", \"10\", \"12\"])\n            if(parse(Int, split[2]) > 31 || parse(Int,\
    \ split[2]) < 1)\n                return false\n            end\n        elseif(split[1]\
    \ in [\"04\", \"06\", \"09\", \"11\"])\n            if(parse(Int, split[2]) >\
    \ 30 || parse(Int, split[2]) < 1)\n                return false\n            end\n\
    \        elseif(split[1] == \"02\")\n            if(parse(Int, split[2]) > 29\
    \ || parse(Int, split[2]) < 1)\n                return false\n            end\n\
    \        end\n    else\n        return false\n    end\n    if(parse(Int, split[3])\
    \ < 2000 || parse(Int, split[3]) > 2999)\n        return false\n    end\n    return\
    \ true\nend", "    \"\"\"\"mm-dd-yyyy\"\"\"\n    day, month, year = date \n  \
    \  \n    \n    \n    \n    \n    \n    \n    if day > 31 || day < 1\n        false\n\
    \    elseif month > 12 || month < 1\n        false\n    else\n        true\n \
    \   end\nend", "    if !isempty(date)\n        date_array = split(date, '-')\n\
    \        month, day, year = parse.(Int, date_array)\n        if year < 1\n   \
    \         return false\n        end\n        if month > 12 || month < 1\n    \
    \        return false\n        end\n        if in(month, [1,3,5,7,8,10,12])\n\
    \            if day > 31 || day < 1\n                return false\n          \
    \  end\n        elseif in(month, [4,6,9,11])\n            if day > 30 || day <\
    \ 1\n                return false\n            end\n        else\n           \
    \ if day > 29 || day < 1\n                return false\n            end\n    \
    \    end\n        return true\n    else\n        return false\n    end\nend\n\
    valid_date(\"12-21-2121\")", "    if isempty(date)\n        println(\"False\"\
    )\n    else \n        date_list = split(date, '-')\n        month = parse(Int,\
    \ date_list[1])\n        day = parse(Int, date_list[2])\n        year = parse(Int,\
    \ date_list[3])\n        if (month == 2) && (day > 29)\n            println(\"\
    False\")\n        elseif (month < 1) || (month > 12)\n            println(\"False\"\
    )\n        elseif (day < 1) || (day > 31)\n            println(\"False\")\n  \
    \      else\n            println(\"True\")\n        end\n    end\nend", "    if\
    \ date isa String == false \n        throw(ArgumentError(date, \"Should be a string\"\
    ))\n    end \n    \n    date_sp = split(date, \"-\")\n    yyyy, mm, dd = date_sp[3],\
    \ date_sp[1], date_sp[2]\n    \n    if length(date_sp) != 3 \n        throw(ArgumentError(date,\
    \ \"The date format should be in dd-mm-yyyy\"))\n    end \n    \n    if yyyy[1]\
    \ == '0' || mm[1] == '0' || dd[1] == '0'\n        return false\n    end \n   \
    \ \n    yyyy = parse(Int, yyyy)\n    mm = parse(Int, mm)\n    dd = parse(Int,\
    \ dd)\n    \n    # if date isa Int || date isa Float || date isa BigInt || date\
    \ isa BigFloat\n    #     return false\n    # end \n    \n    # 31 days months\
    \ : 01, 03, 05, 07, 08, 10, 12 \n    # 30 days months : 04, 06, 09, 11 \n    #\
    \ February : 02 \n    \n    # leap year : divisible by 4 and not divisible by\
    \ 100 \n    # or divisible by 400 \n    \n    divisible_by_4 = yyyy % 4 == 0 \n\
    \    divisible_by_100 = yyyy % 100 == 0 \n    divisible_by_400 = yyyy % 400 ==\
    \ 0 \n    \n    if mm < 1 || mm > 12 \n        return false\n    end \n    \n\
    \    if mm == 1 || mm == 3 || mm == 5 || mm == 7 || mm == 8 || mm == 10 || mm\
    \ == 12 \n        if dd < 1 || dd > 31 \n            return false\n        end\
    \ \n    elseif mm == 4 || mm == 6 || mm == 9 || mm == 11 \n        if dd < 1 ||\
    \ dd > 30 \n            return false\n        end \n    else \n        if divisible_by_4\
    \ && divisible_by_400 || divisible_by_4 && !divisible_by_100 \n            if\
    \ dd < 1 || dd >", "    # Write your code here:\n    valid_date = true\n    if\
    \ !(occursin(\"/\", date) || occursin(\"-\", date))\n        valid_date = false\n\
    \    end\n    if valid_date\n        if occursin(\"/\", date)\n            #date\
    \ = split(date, \"/\")\n            date = split(date, \"/\")\n        else\n\
    \            date = split(date, \"-\")\n        end\n        date = date[1:3]\n\
    \        if date[1] == \"02\"\n            if date[2] == \"31\" || date[2] ==\
    \ \"30\" || date[2] == \"29\"\n                valid_date = false\n          \
    \  end\n        elseif date[1] == \"01\" || date[1] == \"03\" || date[1] == \"\
    05\" || date[1] == \"07\" || date[1] == \"08\" || date[1] == \"10\" || date[1]\
    \ == \"12\"\n            if date[2] == \"31\" || date[2] == \"32\"\n         \
    \       valid_date = false\n            end\n        elseif date[1] == \"04\"\
    \ || date[1] == \"06\" || date[1] == \"09\" || date[1] == \"11\"\n           \
    \ if date[2] == \"31\" || date[2] == \"32\" || date[2] == \"30\"\n           \
    \     valid_date = false\n            end\n        else\n            valid_date\
    \ = false\n        end\n    end\n    \n    return valid_date\n    \n    \nend",
  "    d = split(date, \"-\")\n    if length(d) == 3\n        if length(d[1]) == 2\n\
    \            if length(d[2]) == 2\n                if length(d[3]) == 4\n    \
    \                if d[1] != \"00\"\n                        if d[2] != \"00\"\n\
    \                            if d[3] != \"0000\"\n                           \
    \     if d[3] > \"1900\"\n                                    if d[1] == \"01\"\
    \ || d[1] == \"03\" || d[1] == \"05\" || d[1] == \"07\" || d[1] == \"08\" || d[1]\
    \ == \"10\" || d[1] == \"12\"\n                                        if d[2]\
    \ < \"32\"\n                                            return true\n        \
    \                                end\n                                    elseif\
    \ d[1] == \"04\" || d[1] == \"06\" || d[1] == \"09\" || d[1] == \"11\"\n     \
    \                                   if d[2] < \"31\"\n                       \
    \                     return true\n                                        end\n\
    \                                    elseif d[1] == \"02\"\n                 \
    \                       if d[2] < \"30\"\n                                   \
    \         return true\n                                        end\n         \
    \                           end\n                                end\n       \
    \                     end\n                        end\n                    end\n\
    \                end\n            end\n        end\n    end\n    return false\n\
    end", "        date = date.split(\"-\")\n        try\n            d = Int(date[1])\n\
    \            m = Int(date[0])\n            y = Int(date[2])\n        catch\n \
    \           return false\n        end\n        if length(date) != 3\n        \
    \    return false\n        end\n        if m < 1 || m > 12\n            return\
    \ false\n        end\n        if m in [1,3,5,7,8,10,12]\n            if d > 31\
    \ || d < 1\n                return false\n            end\n        elseif m in\
    \ [4,6,9,11]\n            if d > 30 || d < 1\n                return false\n \
    \           end\n        elseif m == 2\n            if d > 29 || d < 1\n     \
    \           return false\n            end\n        end\n        return true\n\
    \    end", "    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \nend\nprintln(valid_date(\"10-10-2010\"))\n ", "    #your code here\n\
    end", "    valid_date(\"02-29-2000\")\n    #=> true\n    valid_date(\"30-02-2000\"\
    )\n    #=> false\n    valid_date(\"31-02-2000\")\n    #=> false\n    valid_date(\"\
    31-01-2016\")\n    #=> true\n    valid_date(\"31-01-2000\")\n    #=> false\n \
    \   valid_date(\"31-13-2000\")\n    #=> false\n    valid_date(\"\")\n    #=> false\n\
    \    valid_date(\"31-01-2000\")\n    #=> false\n    valid_date(\"31-01-20000\"\
    )\n    #=> false\n    \nend", "    \n    #1.\n    if length(date) == 0 \n    \
    \    return false\n    end\n    \n    #2.\n    date2 = split(date, \"-\")\n  \
    \  if parse(Int, date2[1]) <= 0 || parse(Int, date2[1]) > 12\n        return false\n\
    \    end\n    \n    if parse(Int, date2[1]) == 2\n        if parse(Int, date2[2])\
    \ <= 0 || parse(Int, date2[2]) > 29\n            return false\n        end\n \
    \   elseif parse(Int, date2[1]) == 1 || parse(Int, date2[1]) == 3 || parse(Int,\
    \ date2[1]) == 5 || parse(Int, date2[1]) == 7 || parse(Int, date2[1]) == 8 ||\
    \ parse(Int, date2[1]) == 10 || parse(Int, date2[1]) == 12\n        if parse(Int,\
    \ date2[2]) <= 0 || parse(Int, date2[2]) > 31\n            return false\n    \
    \    end\n    elseif parse(Int, date2[1]) == 4 || parse(Int, date2[1]) == 6 ||\
    \ parse(Int, date2[1]) == 9 || parse(Int, date2[1]) == 11\n        if parse(Int,\
    \ date2[2]) <= 0 || parse(Int, date2[2]) > 30\n            return false\n    \
    \    end\n    end\n    \n    #3.\n    if parse(Int, date2[1]) <= 0 || parse(Int,\
    \ date2[1]) > 12\n        return false\n    end\n    \n    #4.\n    date3 = split(date,\
    \ \"-\")\n    if length(date3) != 3\n        return false\n    end\n    \n   \
    \ return true\nend", "   \n    if size(date) == 0\n        return false\n    end\n\
    \    \n    month,day,year = split(date, \"-\")\n   \n    if year >= 2020\n   \
    \     return false\n    end\n    \n    if isequal(month, \"02\") && day > 29\n\
    \        return false\n    end\n    \n    if (isequal(month, \"01\") || isequal(month,\
    \ \"03\") || isequal(month, \"05\") || isequal(month, \"07\") || isequal(month,\
    \ \"08\") || isequal(month, \"10\") || isequal(month, \"12\")) && day > 31\n \
    \       return false\n    end\n    \n    if (isequal(month, \"04\") || isequal(month,\
    \ \"06\") || isequal(month, \"09\") || isequal(month, \"11\")) && day > 30\n \
    \       return false\n    end\n    if month > 12\n        return false\n    end\n\
    \    \n    return true\nend", "    \n    for i in date\n        if i == \"0\"\n\
    \            return false\n        end\n    end\n    \n    if length(date) !=\
    \ 10\n        return false\n    end\n    \n    a = split(date, \"-\")\n    if\
    \ length(a) != 3\n        return false\n    end\n    \n    month = a[1]\n    day\
    \ = a[2]\n    year = a[3]\n    \n    if length(month) != 2 || length(day) != 2\
    \ || length(year) != 4\n        return false\n    end\n    \n    if year > 2015\
    \ || year < 2000\n        return false\n    end\n    \n    if month > 12 || month\
    \ < 1\n        return false\n    end\n    \n    if day > 31 || day < 1\n     \
    \   return false\n    end\n    \n    if month == \"2\"\n        if day > 29\n\
    \            return false\n        end\n    end\n    \n    if month == \"4\" ||\
    \ month == \"6\" || month == \"9\" || month == \"11\"\n        if day > 30\n \
    \           return false\n        end\n    end\n    \n    return true\n    \n\
    end", "    if (length(date) != 10)\n        return false\n    end\n    day::Int\
    \ = parse(Int,date[4:5])\n    year::Int = parse(Int,date[7:10])\n    month::Int\
    \ = parse(Int,date[1:2])\n    if (month > 12 || month <1)\n        return false\n\
    \    end\n    if (month in [1,3,5,7,8,10,12])\n        if (day > 31 || day < 1)\n\
    \            return false\n        end\n    elseif (month in [4,6,9,11])\n   \
    \     if (day > 30 || day < 1)\n            return false\n        end\n    elseif\
    \ (month == 2)\n        if ((year % 4 == 0 && year % 100 != 0) || year % 400 ==\
    \ 0)\n            if (day > 29 || day < 1)\n                return false\n   \
    \         end\n        else\n            if (day > 28 || day < 1)\n          \
    \      return false\n            end\n        end\n    end\n    return true\n\
    end\nprintln(valid_date(\"02-29-2000\"))"]
stop_tokens:
- "\nfunction"
- "\nmacro"
- "\n\n"

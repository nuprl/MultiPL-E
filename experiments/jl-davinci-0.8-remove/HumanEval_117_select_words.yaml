name: HumanEval_117_select_words
language: jl
prompt: "\"\"\"Given a string s and a natural number n, you have been tasked to implement\
  \ \n    a function that returns a list of all words from string s that contain exactly\
  \ \n    n consonants, in order these words appear in the string s.\n    If the string\
  \ s is empty then the function should return an empty list.\n    Note: you may assume\
  \ the input string contains only letters and spaces.\n    Examples:\n          \
  \              \"\"\"\nfunction select_words(s::String, n::Int64)::String \n"
tests: "using Test\n\n@testset begin\n\ncandidate = select_words;\n\t@test(candidate(\"\
  Mary had a little lamb\", 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little\
  \ lamb\", 3) == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\"\
  , 2) == [])\n\t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"\
  Uncle sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == [])\n\t@test(candidate(\"\
  a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
completions: ["    #Your code here!\nend\n \n \n@testset \"Basic Tests\" begin\n \
    \   @test select_words(\"Lorem ipsum dolor sit amet, consectetur adipiscing elit.\"\
    , 2) == [\"Lorem\", \"dolor\", \"amet,\", \"consectetur\", \"elit.\"]\n    @test\
    \ select_words(\"Sed ut perspiciatis unde omnis iste natus error sit voluptatem\
    \ accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo\
    \ inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo.\"\
    , 4) == [\"unde\", \"natus\", \"error\", \"sit\", \"voluptatem\", \"accusantium\"\
    , \"doloremque\", \"laudantium,\", \"totam\", \"aperiam,\", \"eaque\", \"ipsa\"\
    , \"quae\", \"illo\", \"inventore\", \"veritatis\", \"quasi\", \"architecto\"\
    , \"beatae\", \"vitae\", \"dicta\", \"sunt\", \"explicabo.\"]\n    @test select_words(\"\
    \", 2) == []\n    @test select_words(\"a\", 0) == [\"a\"]\n    @test select_words(\"\
    a\", 1) == []\n    @test select_words(\"a\", 2) == []\n    @test select_words(\"\
    b\", 0) == []\n    @test select_words(\"b\", 1) == [\"b\"]\n    @test select_words(\"\
    b\", 2) == []\n    @test select_words(\"ab\", 0) == [\"ab\"]\n    @test select_words(\"\
    ab\", 1) == []\n    @test select_words(\"ab\", 2) == []\n    @test select_words(\"\
    a b\", 0) == [\"a\", \"b\"]\n    @test select_words(\"a b\", 1) == []\n    @test\
    \ select_words(\"a b\", 2) == []\n    @test select_words(\"a bc\", 0) == [\"a\"\
    , \"bc\"]\n    @test select_words(\"a bc\", 1) == []\n    @test select_words(\"\
    a bc\", 2) == []\n    @", "    matches = []\n    for m in findall(r\"[A-Za-z]+\"\
    , s)\n        consonants = length(@matchby(isexc l->lowercase(l) in \"bcdfghjklmnpqrstvwxyz\"\
    \ end, m))\n        if consonants == n\n            push!(matches, m)\n      \
    \  end\n    end\n    return matches\nend", "    s_list=split(s, \" \")\n    result=String[]\n\
    \    for i in 1:length(s_list)\n        count=0\n        for j in 1:length(s_list[i])\n\
    \            if s_list[i][j] in \"bcdfghjklmnpqrstvwxyz\"\n                count+=1\n\
    \            end\n        end\n        if count==n\n            push!(result,\
    \ s_list[i])\n        end\n    end\n    return result\nend", "    words = []\n\
    \    vowels = \"aeiou\"\n    split_words = s.split(\" \")\n    for word in split_words\n\
    \        if contains_exactly_n_consonants(word, vowels, n)\n            append!(words,\
    \ word)\n        end\n    end\n    return join(words, \" \")\nend", "    words\
    \ = split(s, r\"\\s+\")\n    selected_words = []\n    for word in words\n    \
    \    count = 0\n        for letter in word\n            if !(letter in \"aeiou\"\
    )\n                count += 1\n            end\n        end\n        if count\
    \ == n\n            push!(selected_words, word)\n        end\n    end\n    return\
    \ selected_words\nend", "    if s == \"\"\n        return []\n    end\n    l =\
    \ map(x -> replace(x, r\"[aeiouy]\", \"\"), split(s, r\"\\s+\"))\n    return filter(x\
    \ -> count(x, r\"[^aeiouy]\") == n, l)\nend", "    words = split(s)\n    v = filter(x\
    \ -> n==sum(!(x in \"aeiou\")), words)\n    return v\nend", "    \n    consonant\
    \ = [\"B\", \"C\", \"D\", \"F\", \"G\", \"H\", \"J\", \"K\", \"L\", \"M\", \"\
    N\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"V\", \"W\", \"X\", \"Y\", \"Z\"]\n \
    \   words = split(s)\n    result = String[]\n    cnt = 0\n    for word in words\n\
    \        cnt = 0\n        for i in word\n            if i in consonant\n     \
    \           cnt += 1\n            end\n        end\n        if cnt == n\n    \
    \        push!(result, word)\n        end\n    end\n    return result\nend", " \
    \   # My code goes here...\nend", "    return [word for word in split(s, \" \"\
    ) if has_consonants(word, n)]\nend", "    arr = split(s, \" \")\n    consonants_arr\
    \ = [\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"\
    n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"z\"]\n    output\
    \ = []\n    for i in arr\n        count = 0\n        for j in i\n            if\
    \ j in consonants_arr\n                count += 1\n            end\n        end\n\
    \        if count == n\n            push!(output, i)\n        end\n    end\n \
    \   return output\nend\ns = \"The quick brown fox jumps over the lazy dog\"\n\
    select_words(s, 2)", "    # your code goes here:\n    pass\nend", "    #s = \"\
    All characters other than the above mentioned are called consonants.\"\n    #n\
    \ = 3\n    v = [\"a\", \"e\", \"i\", \"o\", \"u\", \"y\"]\n    #u = split(s)\n\
    \    #u = s.split()\n    #l = length(u)\n    #print(u)\n    count=0\n    result\
    \ = []\n    for i in s\n        count=0\n        for j in v\n            if i\
    \ != j\n                count += 1\n            end\n        end\n        if count\
    \ == n\n            result.append(i)\n        end\n    end\n    return result\n\
    end", "    s = s.replace(' ','')\n    consonant = ['b','c','d','f','g','h','j','k','l','m','n','p','q','r','s','t','v','w','x','y','z']\n\
    \    A = []\n    for i in range(1,length(s)-1)\n        num = 0\n        for j\
    \ in range(1,length(consonant)-1)\n            if s[i] == consonant[j]\n     \
    \           num = num + 1\n            end\n        end\n        if num == n\n\
    \            push!(A,s[i])\n        end\n    end\n    return A\nend", "    # your\
    \ code here\nend", "    consonants = [l in \"bcdfghjklmnpqrstvwxz\" for l in s]\n\
    \    words = split(s)\n    return [w for w in words if count(consonants,(x)->x,1:length(w))\
    \ == n]\nend", "    words = split(s, \" \")\n    result = []\n    for word in\
    \ words\n        if count_consonants(word) == n\n            push!(result, word)\n\
    \        end\n    end\n    return result\nend", "    l = split(s)\n    l1 = filter(l)\
    \ do x\n        if n == nconsonant(x)\n            return x\n        end\n   \
    \ end\n    return l1\nend", "\nend", "    if s == \"\"\n        return []\n  \
    \  end\n    words = split(s, ' ')\n    result = []\n    for word in words\n  \
    \      consonants = 0\n        for char in word\n            if char \u2209 ['a',\
    \ 'e', 'i', 'o', 'u']\n                consonants += 1\n            end\n    \
    \    end\n        if consonants == n\n            push!(result, word)\n      \
    \  end\n    end\n    return result\nend", "    word_list = split(s)\n    consonants\
    \ = Set(\"bcdfghjklmnpqrstvwxz\")\n    num_con = 0\n    word_select = []\n   \
    \ for word in word_list\n        for char in word\n            if char in consonants\n\
    \                num_con += 1\n            end\n        end\n        if num_con\
    \ == n\n            push!(word_select, word)\n        end\n        num_con = 0\n\
    \    end\n    return word_select\nend", "    words = split(s,\" \")\n    arr =\
    \ []\n    for word in words\n        consonants = 0\n        for letter in word\n\
    \            if !(letter in \"aeiouAEIOU\")\n                consonants+=1\n \
    \           end\n        end\n        if consonants == n\n            push!(arr,word)\n\
    \        end\n    end\n    return arr\nend", "    letters = str.lowercase\n  \
    \  vowels = \"aeiou\"\n    consonants = setdiff(collect(letters),collect(vowels))\n\
    \    s = s.lower()\n    ans = []\n    words = split(s,r\"\\s+\")\n    for word\
    \ in words\n        c = count(a->a in consonants, word)\n        if c == n\n \
    \           push!(ans, word)\n        end\n    end\n    return ans\nend", "  \
    \  words = split(s, \" \")\n    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n\
    \    consonants = []\n    result = []\n    for i = 1:length(words)\n        word\
    \ = words[i]\n        number_of_consonants = 0\n        for j = 1:length(word)\n\
    \            if !(word[j] in vowels)\n                number_of_consonants +=\
    \ 1\n            end\n        end\n        if number_of_consonants == n\n    \
    \        push!(result, word)\n        end\n    end\n    return result\nend\n \
    \   \ns = \"The quick brown fox jumped over the lazy dog\"\nn = 4\nselect_words(s,\
    \ n)", "    return [word for word in s.split(\" \") if sum([letter in \"bcdfghjklmnpqrstvwxz\"\
    \ for letter in word]) == n]\nend", "    words = split(s)\n    result = String[]\n\
    \    for word in words\n        count = 0\n        for c in word\n           \
    \ if c in \"qwrtypsdfghjklzxcvbnm\"\n                count += 1\n            end\n\
    \        end\n        if count == n\n            push!(result, word)\n       \
    \ end\n    end\n    return result\nend\n \nprintln(select_words(\"habitat\", 2))",
  "    for word in split(s)\n        if length(regexmatch(r\"/[^aeiou]/g\", word))\
    \ == n\n            println(word)\n        end\n    end\nend", "    words_with_n_consonants\
    \ = []\n    for word in split(s)\n        println(word)\n        consonants =\
    \ 0\n        for letter in word\n            if letter in \"bcdfghjklmnpqrstvwxyz\"\
    \n                consonants += 1\n            end\n        end\n        if consonants\
    \ == n\n            push!(words_with_n_consonants, word)\n        end\n    end\n\
    \    return words_with_n_consonants\nend", "    s_clean=lowercase(replace(s, r\"\
    \\s+\"=>\" \")) #eliminate multiple spaces and lowercase\n    s_clean=replace(s_clean,\
    \ r\"[^a-z ]\"=>\"\") #eliminate all non letters or spaces\n    words=split(s_clean,\
    \ \" \")\n    cons=\"bcdfghjklmnpqrstvwxyz\"\n    words_len=length(words)\n  \
    \  res=[]\n    for i in 1:words_len\n        aux=count(x->x in cons, split(words[i],\"\
    \"))\n        if(aux==n)\n            push!(res,words[i])\n        end\n    end\n\
    \    return res\nend", "    \"\"\"\n    Given a string s and a natural number\
    \ n, returns a list of all words from string s \n    that contain exactly n consonants,\
    \ in order these words appear in the string s.\n    \"\"\"\n    #replace all the\
    \ vowels in the string s with empty space\n    #so the only thing left will be\
    \ the consonants \n    for i in [\"a\",\"e\",\"i\",\"o\",\"u\",\"y\"]\n      \
    \  s = replace(s,i,\"\")\n    end\n    #split the string into a list of words\n\
    \    words = split(s)\n    #create an empty list of words that have n consonants\n\
    \    words_with_n_consonants = []\n    #iterate through the list of words\n  \
    \  for w in words\n        #iterate through the characters in the word\n     \
    \   for i in collect(w)\n            #if the number of consonants of the word\
    \ is equal to n\n            #append the word to the list of words with n consonants\n\
    \            if length(w) == n\n                push!(words_with_n_consonants,w)\n\
    \            end\n        end\n    end\n    #return the list of words with n consonants\n\
    \    return words_with_n_consonants\nend", "    words = split(s)\n    consonants\
    \ = 'bcdfghjklmnpqrstvwxyz'\n    selected = []\n    for word in words \n     \
    \   if length(regexmatch.(r\"[#consonants]\", word)) == n \n            push!(selected,\
    \ word)\n        end\n    end\n    return selected\nend", "    return split(s)\n\
    end\n ", "    if s == \"\"\n        return []\n    else \n        #separate strings\
    \ into individual words \n        words = split(s)\n        #check each word\n\
    \        for word in words\n            #if the word contains n consonants return\
    \ the word \n            if word contains n consonants \n                return\
    \ word\n        end\n    end\nend", "    t = split(s, \" \")\n    result = []\n\
    \    for word in t \n        word2 = replace(word,r\"[aeiou]\",\"\")\n       \
    \ if length(word2) == n \n            push!(result, word)\n        end\n    end\n\
    \    return result\nend", "    words = split(s)\n    result = []\n    for word\
    \ in words\n        if numConsonants(word) == n\n            push!(result, word)\n\
    \        end\n    end\n    return result\nend", "    words = s.split(\" \")\n\
    \    for w in words:\n        contains = 0\n        for c in w:\n            if\
    \ contains_vowel(c) == false\n                contains += 1\n            end\n\
    \        end\n        if contains == n\n            return w\n        end\n  \
    \  end\n    return \"\"\nend", "    \n    \n    \n    \n    \n    \n    \n   \
    \ \n    \n    \n    \n    println(\"\")\nend", "    words = split(s, ' ')\n  \
    \  vowel = ['a', 'e', 'i', 'o', 'u']\n    filter(word -> count(i -> i in vowel,\
    \ word) == n, words)\n    end", "    # some code here\nend\n\"\"\"\n    EXAMPLE\
    \ 1:\n        select_words(\"I love Ruby and this is a test.\", 2)\n    EXAMPLE\
    \ 2:\n        select_words(\"\", 1)\n    EXAMPLE 3:\n        select_words(\"A\
    \ B C D\", 3)\n\"\"\"", "    s = split(s)\n    result = []\n    for word in s\n\
    \        if contains_exactly_n_consonants(word, n)\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend", "    # Returns a list\
    \ of words from s that have n consonants.\n    # Returns an empty list if s is\
    \ empty.\n    # Your code here.\n    words = split(s)\n    consonants = [\"b\"\
    , \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\"\
    , \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"z\"]\n    counter = 0\n \
    \   list_of_words = []\n    for i in 1:length(words)\n        count = 0\n    \
    \    char_list = split(words[i])\n        for j in 1:length(char_list)\n     \
    \       for k in 1:length(consonants)\n                if char_list[j] == consonants[k]\n\
    \                    count += 1\n                end\n            end\n      \
    \  end\n        if count == n\n            push!(list_of_words, words[i])\n  \
    \      end\n    end\n    return list_of_words\nend", "    c = [x for x in s.split(\"\
    \ \") if length(x) == n]\n    println(c)\nend", "    #your code goes here\n  \
    \  return \"\"\nend\n# Test case 1: s = \"This is a test\" and n = 2, should return\
    \ a list\n# with strings \"is\", \"a\", \"test\" as these strings contain 2 consonants.\n\
    select_words(\"This is a test\", 2)", "    s_arr = split(s,\" \")\n    l_arr =\
    \ length(s_arr)\n    l_con = length(findall(r\"[^aeiou\\s]\",s))\n    sel_words\
    \ = \"\"\n    for i in 1:l_arr\n        if length(findall(r\"[^aeiou\\s]\",s_arr[i]))\
    \ == n\n            sel_words = sel_words*\" \"*s_arr[i]\n        end\n    end\n\
    \    return sel_words\nend", "    #\n    #YOUR CODE HERE\n    #\nend\n \n@test\
    \ setdiff(select_words(\"hello world i am testing here\", 3), [\"hello\", \"world\"\
    , \"testing\"]) == String[]\n@test setdiff(select_words(\"hello world i am testing\
    \ here\", 2), [\"here\"]) == String[]\n@test setdiff(select_words(\"world hello\"\
    , 1), [\"world\"]) == String[]\n@test setdiff(select_words(\"world hello\", 0),\
    \ [\"hello\"]) == String[]\n@test setdiff(select_words(\"world hello\", 8), [])\
    \ == String[]\n ", "    \n    a = s\n    count = 0\n    consonant = \"bcdfghjklmnpqrstvwxyz\"\
    \n    arr = Array{String}(0)\n    push!(arr, a)\n    \n    if a == \"\"\n    \
    \    return []\n    end\n    for i in 1:length(a)\n        if a[i] in consonant\n\
    \            count += 1\n        end\n    end\n    if count == n\n        return\
    \ arr\n    else\n        return []\n    end\nend", "    result = []\n    for w\
    \ in split(s, \" \")\n        c = 0\n        for ch in w\n            if any(ch\
    \ in c for c in \"aeiou\")\n                c += 1\n        end\n        if c\
    \ == n\n            append!(result, w)\n        end\n    end\n    return result\n\
    end", "    s_c = lowercase(s)\n    lst = split(s_c,\" \")\n    st = []\n    for\
    \ i in lst\n        c = count_consonants(i)\n        if c == n\n            push!(st,i)\n\
    \        end\n    end\n    return st\nend", "    ls = split(s)\n    ls_final =\
    \ []\n    for i in 1:length(ls)\n        n_consonants = 0\n        consonants\
    \ = [\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"\
    n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"z\"]\n        for\
    \ j in 1:length(ls[i])\n            if ls[i][j] in consonants\n              \
    \  n_consonants += 1\n            end\n        end\n        if n_consonants ==\
    \ n\n            push!(ls_final, ls[i])\n        end\n    end\n    return ls_final\n\
    end", "    \"\"\"\n    >>> select_words(\"The company has many employees\", 3)\n\
    \    [\"has\", \"many\"]\n    >>> select_words(\"\", 4)\n    []\n    >>> select_words(\"\
    I am interested in math and statistics\", 5)\n    [\"am\", \"in\", \"math\", \"\
    and\"]\n    >>> select_words(\"I like to race\", 1)\n    [\"like\", \"race\"]\n\
    \    \"\"\"\n    if (s == \"\")\n        return []\n    end\n    counts = 0\n\
    \    consonants = \"bcdfghjklmnpqrstvwxyz\"\n    words = split(s)\n    result\
    \ = []\n    for word in words\n        for letter in word\n            if (letter\
    \ in consonants)\n                counts += 1\n            end\n        end\n\
    \        if (counts == n)\n            push!(result, word)\n        end\n    \
    \    counts = 0\n    end\n    return result\nend\n \n ", "    words = split(s,\
    \ \" \")\n    result = []\n    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n\
    \    for word in words\n        counter = 0\n        for letter in word\n    \
    \        if letter in vowels\n                counter += 1\n            end\n\
    \        end\n        if counter == n\n            result = append!(result, word)\n\
    \        end\n    end\n    return result\nend\nprint(select_words(\"the quick\
    \ brown fox\", 3))", "    w = split(s)\n    L = []\n    for word in w\n      \
    \  if length(consonants(word)) == n\n            push!(L, word)\n        end\n\
    \    end\n    return L\nend\nprintln(select_words(\"I want to work at Google.\"\
    , 3))\nprintln(select_words(\"I want to work at Google.\", 10))\nprintln(select_words(\"\
    It is a sunny day today.\", 4))\nprintln(select_words(\"It is a sunny day today.\"\
    , 0))\nprintln(select_words(\"\", 4))", "   words = s.split(\" \")\n   consonants\
    \ = \"bcdfghjklmnpqrstvwxyz\"\n   filtered_words = []\n    for word in words\n\
    \       consonant_count = 0\n       for letter in word\n           if letter in\
    \ consonants\n               consonant_count = consonant_count + 1\n         \
    \  end\n       end\n       if consonant_count == n\n           push!(filtered_words,\
    \ word)\n       end\n   end\n   return filtered_words\nend", "    # your code\
    \ goes here\n    s, numero = [i for i in s.lower().split() if i.count('a','e','i','o','u')\
    \ == n]\n    return s, numero\nend", "    str_lst = str_split(s)\n    consonants\
    \ = [\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"\
    n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"z\"]\n    string_list\
    \ = []\n    for i in str_lst\n        if count_consonants(i) == n\n          \
    \  push!(string_list, i)\n        end\n    end\n    return string_list\nend",
  "    words = map(x -> x.strip, split(s, \" \"))\n    new_words = filter(x -> length(x)\
    \ >= n, words)\n    return new_words\nend", "    word=split(s)\n    word_filter=filter(x->length(x)>1,word)\n\
    \    consonants(x) = length(setdiff(x,(\"a\",\"e\",\"i\",\"o\",\"u\")))\n    i=[]\n\
    \    x=[]\n    for j in word_filter\n        push!(i,consonants(j))\n    end\n\
    \    for j in 1:length(i)\n        if i[j]==n\n            push!(x,word_filter[j])\n\
    \        end\n    end\n    return x\nend", "    \"\"\"\n    Input: A string s\
    \ and a natural number n.\n    Output: A list of all words from string s that\
    \ contain exactly n consonants.\n    \"\"\"\n    consonants = [c for c in s if\
    \ c \u2209 vowels]\n    return [w for w in split(s) if length(filter(x -> x \u2208\
    \ consonants, w)) == n]\nend", "    words = split(s, \" \")\n    result = []\n\
    \    for word in words\n        consonants = 0\n        for letter in word\n \
    \           if letter != \"a\" && letter != \"e\" && letter != \"i\" && letter\
    \ != \"o\" && letter != \"u\" && letter != \"A\" && letter != \"E\" && letter\
    \ != \"I\" && letter != \"O\" && letter != \"U\"\n                consonants =\
    \ consonants + 1\n            end\n        end\n        if consonants == n\n \
    \           push!(result, word)\n        end\n    end\n    return result\nend\n\
    select_words(\"Python code is a sequence of statements and expressions. The statements\
    \ form a program.\", 3)", "    res = \"\"\n    s = split(s)\n    for w in s\n\
    \        if count_consonants(w) == n\n            res *= \" $w\"\n        end\n\
    \    end\n    return res\nend", "    consonants = \"bcdfghjklmnpqrstvwxz\"\n \
    \   words = split(s, r\"\\s+\")\n    strings = \"\"\n    for i in words\n    \
    \    for j in i\n            if j in consonants\n                strings += j\n\
    \            end\n        end\n        if length(strings) == n\n            print(i)\n\
    \        end\n        strings = \"\"\n    end\nend", "    return [word for word\
    \ in split(s) if length(word) - count(set(word),\"a\" | \"e\" | \"i\" | \"o\"\
    \ | \"u\") == n]\nend", "    s_vec = split(s, \" \")\n    conso_count = 0\n  \
    \  conso_words = []\n    conso_count = 0\n    for word in s_vec\n        for char\
    \ in word\n            if char in [\"a\", \"e\", \"i\", \"o\", \"u\", \"y\"]\n\
    \                conso_count += 1\n            end\n        end\n        if conso_count\
    \ == n\n            push!(conso_words, word)\n        end\n        conso_count\
    \ = 0\n    end\n    return conso_words\nend", "    words = split(s)\n    consonants\
    \ = Regex(\"[^aeiou\\s]\")\n    number = Regex(\"[1-9]\")\n    new_words = []\n\
    \    for word in words\n        count = 0\n        number_count = 0\n        for\
    \ w in word\n            if w in consonants\n                count += 1\n    \
    \        end\n            if w in number\n                number_count += 1\n\
    \            end\n        end\n        if count == n && number_count == 0\n  \
    \          push!(new_words, word)\n        end\n    end\n    return new_words\n\
    end\nprintln(select_words(\"No, we're gonna take our time\", 4))\nprintln(select_words(\"\
    The time that we spent, that was ours\", 2))\nprintln(select_words(\"Now it's\
    \ gone, we fell apart\", 3))\nprintln(select_words(\"\", 2))", "    sentences\
    \ = split(s, ' ')\n    consonants = 'qwrtypsdfghjklzxcvbnm'\n    result = []\n\
    \    for word in sentences\n        consonant_counter = 0\n        for letter\
    \ in word\n            if letter in consonants\n                consonant_counter\
    \ += 1\n            end\n        end\n        if consonant_counter == n\n    \
    \        result.append(word)\n        end\n    end\n    return result\nend", " \
    \   const str_list = split(s)\n    const con_matrix = get_con_matrix(str_list)\n\
    \    const con_sum = get_sum(con_matrix)\n    const selected_words = get_words(con_sum,n)\n\
    \    return selected_words\nend", "    lst = s.split()\n    c = 0\n    new_lst\
    \ = []\n    for i in lst\n        if length(i) == n\n            push!(new_lst,\
    \ i)\n        end\n    end\n    return new_lst\nend", "    words = split(s)\n\
    \    words_with_n_consonants = String[]\n    for word in words\n        if count_consonants(word)\
    \ == n\n            push!(words_with_n_consonants, word)\n        end\n    end\n\
    \    return words_with_n_consonants\nend", "    return filter(x -> count(x) ==\
    \ n, split(s))\nend\n\"\"\"\nselect_words(\"\", 1) == []\nselect_words(\"    the\
    \ cambridge_algorithms course is the best!\", 0) == [\"the\", \"is\", \"the\"\
    , \"best!\"]\nselect_words(\"    the cambridge_algorithms course is the best!\"\
    , 2) == [\"the\", \"the\", \"best!\"]\nselect_words(\"the cambridge_algorithms\
    \ course is the best!\", 1) == [\"cambridge_algorithms\", \"course\", \"is\"]\n\
    \"\"\"", "    words = split(s, \" \")\n    result = []\n    vowels = [\"a\", \"\
    e\", \"i\", \"o\", \"u\"]\n    for word in words\n        consonants = 0\n   \
    \     for letter in word\n            if letter in vowels\n                continue\n\
    \            else\n                consonants += 1\n            end\n        end\n\
    \        if consonants == n\n            push!(result, word)\n        end\n  \
    \  end\n    return result\nend", "    words = split(s)\n    words_with_n_consonants\
    \ = []\n    for word in words\n        if n == n_consonants(word)\n          \
    \  push!(words_with_n_consonants, word)\n        end\n    end\n    return words_with_n_consonants\n\
    end", "    if n == 0\n        return \"no consonants \"\n    end\n    words =\
    \ split(s, ' ')\n    selected = []\n    for i = 1:length(words)\n        new =\
    \ []\n        word = words[i]\n        for j = 1:length(word)\n            letter\
    \ = word[j]\n            if !(letter in 'aeiouyAEIOUY')\n                push!(new,\
    \ letter)\n            end\n        end\n        if length(new) == n\n       \
    \     push!(selected, word)\n        end\n    end\n    return selected\nend",
  " \n    a=split(s,\" \")\n    st=String[]\n    \n    \n    \n    for k in a\n  \
    \      \n        con=0\n        \n        for i in k\n        if (i in (\"a\"\
    , \"e\", \"i\", \"o\", \"u\"))==false\n            \n            con+=1\n    \
    \        \n        end\n    end\n        \n        if con==n\n            \n \
    \           push!(st,k)\n        end\n    end\n        \n    return st    \n \
    \   \n    \nend", "    s_n = []\n    sl = split(s, \" \")\n    for i in sl\n \
    \       if count_consonants(i) == n\n            push!(s_n, i)\n        end\n\
    \    end\n    return s_n\nend", "    s_array = split(s)\n    res = []\n    for\
    \ w in s_array\n        w_array = split(w)\n        l = length(w_array)\n    \
    \    if n == 0\n            for i in 1:l\n                if isletter(w_array[i])\n\
    \                    consonants = 0\n                    if !isalpha(w_array[i])\n\
    \                        consonants += 1\n                    end\n          \
    \      end\n            end\n            if consonants == n\n                push!(res,\
    \ w)\n            end\n        end\n    end\n    return res\nend", "    words\
    \ = split(s, \" \")\n    cons_words = []\n    for word in words\n        num_cons\
    \ = count(word, (x -> x in \"bcdfghjklmnpqrstvwxyz\"))\n        if num_cons ==\
    \ n\n            cons_words.append(word)\n        end\n    end\n    return cons_words\n\
    end", "    words = split(s)\n    for i in 1:length(words)\n        if select_consonants(words[i])\
    \ == n\n            println(words[i])\n        end\n    end\nend", "    words\
    \ = s.split(\" \")\n    arr = []\n    for word in words\n        if sum([1 for\
    \ char in word if char in \"aeiouAEIOU\"]) == n\n            push!(arr, word)\n\
    \        end\n    end\n    arr\nend", "    s = s.upper()\n    consonants = [\"\
    B\", \"C\", \"D\", \"F\", \"G\", \"H\", \"J\", \"K\", \"L\", \"M\", \"N\", \"\
    P\", \"Q\", \"R\", \"S\", \"T\", \"V\", \"W\", \"X\", \"Y\", \"Z\"]\n    words\
    \ = split(s, ' ')\n    result = []\n    for word in words\n        num_consonants\
    \ = 0\n        for letter in word\n            if letter in consonants\n     \
    \           num_consonants += 1\n            end\n        end\n        if num_consonants\
    \ == n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end", "    return s = String[]\n    for word in s.split(' ')\n    if sum(!is_vowel(c)\
    \ for c in word) == n\n        push!(s, word)\n    end\n    return s\nend", " \
    \   \"\"\"Returns the string of words from s that have exactly n consonants.\"\
    \"\"\n    return join(filter(x -> count(x) == n, split(s,\" \")))\nend", "   \
    \ # 1. create a list that contains all the consonants. \n    # 2. create an array\
    \ of booleans: if consonant => 1, if vowel => 0 \n    # 3. divide the input string\
    \ into an array of words. \n    # 4. build the output list \nend", "  x = split(s,\
    \ \" \")\n  println(x)\n  v = []\n  for i in x\n    c = 0\n    for j in i\n  \
    \    if (j != 'a' && j != 'e' && j != 'i' && j != 'o' && j != 'u')\n        c\
    \ = c + 1\n      end\n    end\n    if c == n\n      push!(v, i)\n    end\n  end\n\
    \  return v\nend", "    for i in s\n        if isletter(i)==true && i in \"bcdfghjklmnpqrstvwxyz\"\
    \ && length(i)==n\n            return i\n        end\n    end\nend", "    # Add\
    \ your implementation here\n    str_split = split(s)\n    const = [\"b\", \"c\"\
    , \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\"\
    , \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"z\"]\n    new_string = []\n    for\
    \ i = 1:length(str_split)\n        if count(str_split[i], const) == n\n      \
    \      push!(new_string, str_split[i])\n        end\n    end\n    return new_string\n\
    end", "    words_list = split(s, \" \")\n    n_vowels_list = []\n    for word\
    \ in words_list\n        count = 0\n        for x in word\n            if x in\
    \ ('a', 'e', 'i', 'o', 'u')\n                count += 1\n            end\n   \
    \     end\n        if n == count\n            push!(n_vowels_list, word)\n   \
    \     end\n    end\n    return n_vowels_list\nend", "    words = s.split(\" \"\
    )\n    consonants = \"bcdfghjklmnpqrstvwxyz\"\n    for i in words\n        for\
    \ j in length(i)\n            if i in consonants\n                \n    return\
    \ s\nend", "    words = split(s)\n    consonants = \"bcdfghjklmnpqrstvwxyz\"\n\
    \    list = []\n    for word in words\n        consonant_count = 0\n        for\
    \ letter in word\n            if letter in consonants\n                consonant_count\
    \ = consonant_count + 1\n            end\n        end\n        if consonant_count\
    \ == n\n            list = push!(list, word)\n        end\n    end\n    return\
    \ list\nend", "    consonants = collect(filter(x -> isconsonant(x), s))\n    words\
    \ = split(s, ' ')\n    return collect(filter(x -> length(collect(filter(y -> isconsonant(y),\
    \ x))) == n, words))\nend", "    words = split(s)\n    selected = [word for word\
    \ in words if nconsonants(word) == n]\n    return selected\nend", "    s = split(s,\
    \ \" \")\n    for i in 1:length(s)\n        if count_consonants(s[i]) == n\n \
    \           return s[i]\n        end\n    end\nend", "    return []\nend", " \
    \   words = split(s)\n    result = []\n    for i in words\n        if count_consonants(i)\
    \ == n\n            result = [result; i]\n        end\n    end\n    return result\n\
    end", "    \n    if s == \"\"\n        return []\n    end\n   \n    #\n    #splitting\
    \ the s into an array of strings\n    #\n    words = split(s)\n    consonants\
    \ = \"bcdfghjklmnpqrstvwxyz\"\n    #\n    #iterating through words\n    #\n  \
    \  result = []\n    for word in words\n        count = 0\n        #\n        #iterating\
    \ through word\n        #\n        for i in 1:length(word)\n            #\n  \
    \          #iterating through consonants\n            #\n            for c in\
    \ consonants\n                if word[i] == c\n                    count = count\
    \ + 1\n                end\n            end\n        end\n        if count ==\
    \ n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end", "    word_list=split(s)\n    result=[]\n    for word in word_list\n    \
    \    lower_word=lowercase(word)\n        count_vowels=count(isvowel,lower_word)\n\
    \        if length(word)-count_vowels==n\n            push!(result,word)\n   \
    \     end\n    end\n    return result\nend", "    words = split(s)\n    words_\
    \ = []\n    for word in words\n        count = 0\n        consonants = \"bcdfghjklmnpqrstvwxyz\"\
    \n        letters = lowercase(word)\n        for letter in letters\n         \
    \   if letter in consonants\n                count += 1\n            end\n   \
    \     end\n        if count == n\n            append!(words_, word)\n        end\n\
    \    end\n    return words_\nend", "    if s == \"\"\n        return []\n    end\n\
    \    words = split(s, \" \")\n    c = 0\n    arr = []\n    for i in words\n  \
    \      for j in i\n            if j != 'a' && j != 'e' && j != 'i' && j != 'o'\
    \ && j != 'u' && j != 'y'\n                c += 1\n            end\n        end\n\
    \        if c == n\n            push!(arr, i)\n        end\n        c = 0\n  \
    \  end\n    return arr\nend", "    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"\
    ]\n    words = split(s, r\"\\s+\")\n    consonants = length(s) - length(filter(occursin(\"\
    aeiou\"), s))\n    for word in words\n        if length(word) == consonants\n\
    \            return word\n        end\n    end\n    return \"\"\nend", "    if\
    \ s==\"\"\n        return []\n    end\n    s=replace(s, r\"\\s+\", \" \")\n  \
    \  l=split(s)\n    l2=[]\n    n_consonants=0\n    for i in 1:length(l)\n     \
    \   if length(l[i])==n\n            consonants=\"bcdfghjklmnpqrstvwxyz\"\n   \
    \         for j in 1:length(l[i])\n                if l[i][j] in consonants\n\
    \                    n_consonants+=1\n                end\n            end\n \
    \           if n_consonants==n\n                push!(l2, l[i])\n            end\n\
    \        end\n    end\n    return l2\nend", "    filter_list = filter(s -> length(regexmatch(r\"\
    [bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ]\", s)) == n, split(s, \" \"))\n \
    \   return filter_list\nend", "    words = split(s, \" \")\n    indx = findall(x->occursin(x,\
    \ \"aeiou\") == false, words)\n    indx = indx[indx .<= n]\n    return words[indx]\n\
    end", "    words = s.split()\n    selected_words = []\n    for word in words\n\
    \        counter = 0\n        for letter in word\n            #condition for selection\
    \ of words that have\n            #exactly the required number of consonants\n\
    \            if (is_vowel(letter) == false)\n                counter += 1\n  \
    \          end\n        end\n        if (counter == n)\n            push!(selected_words,\
    \ word)\n        end\n    end\n    return selected_words\nend", "    words = split(s,\
    \ \" \")\n    vowels = ['a', 'e', 'i', 'o', 'u']\n    res = []\n    for word in\
    \ words\n        count = 0\n        for letter in word\n            if !(letter\
    \ in vowels)\n                count = count + 1\n            end\n        end\n\
    \        if count == n\n            push!(res, word)\n        end\n    end\n \
    \   return res\nend", "    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    for word in split(s,\" \")\n        if count_consonants(word) == n\n\
    \            \n        \n        \n        \n        end\n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    end\nend", "   words = split(s,\" \")\n   consontants = Dict(\"b\"\
    =>0,\"c\"=>0,\"d\"=>0,\"f\"=>0,\"g\"=>0,\"h\"=>0,\"j\"=>0,\"k\"=>0,\"l\"=>0,\"\
    m\"=>0,\"n\"=>0,\"p\"=>0,\"q\"=>0,\"r\"=>0,\"s\"=>0,\"t\"=>0,\"v\"=>0,\"w\"=>0,\"\
    x\"=>0,\"y\"=>0,\"z\"=>0)\n   result = []\n   for word in words\n       count=0\n\
    \       for letter in word\n           if !haskey(consontants, letter)\n     \
    \          count += 1\n           end\n       end\n       if count == n\n    \
    \       push!(result, word)\n       end\n   end\n   println(join(result,\" \"\
    ))\nend\n@time select_words(\"It is the first animal\", 1)\n@time select_words(\"\
    It is the first animal\", 2)\n@time select_words(\"It is the first animal\", 3)\n\
    @time select_words(\"It is the first animal\", 4)\n@time select_words(\"It is\
    \ the first animal\", 5)\n@time select_words(\"It is the first animal\", 6)\n\
    @time select_words(\"It is the first animal\", 7)\n@time select_words(\"It is\
    \ the first animal\", 8)\n@time select_words(\"It is the first animal\", 9)\n\
    @time select_words(\"It is the first animal\", 10)\n@time select_words(\"It is\
    \ the first animal\", 11)\n@time select_words(\"It is the first animal\", 12)\n\
    @time select_words(\"It is the first animal\", 13)\n@time select_words(\"It is\
    \ the first animal\", 14)\n@time select_words(\"It is the first animal\", 15)\n\
    @time select_words(\"It is the first animal\", 16)\n@time select_words(\"It is\
    \ the first animal\", 17)\n@time select_words(\"It is the first animal\", 18)\n\
    @time select_words(\"It is the first animal\", 19)\n@time select_words(\"It is\
    \ the first animal\", 20)", "    words = filter(x -> length(x) == n, split(s,\
    \ \" \"))\n    return words\nend", "    # your code here\nend", "    # do stuff\
    \ here\nend", "    vowel = ['a','e','i','o','u']\n    words = []\n    for word\
    \ in split(s, \" \")\n        consonants = 0\n        for letter in word\n   \
    \         if letter in vowel\n                consonants += 1\n            end\n\
    \        end\n        if consonants == n\n            push!(words, word)\n   \
    \     end\n    end\n    return words\nend", "    if n == 0 \n        return 0\
    \ \n    end\n    len = size(s, 1) \n    st = 0\n    i = 0\n    count = 0\n   \
    \ result = []\n    while i <= len \n        while !(s[i] in 'aeiou')\n       \
    \     count = count + 1\n            i = i + 1\n        end\n        if count\
    \ == n\n            result = push!(result, copy(s[st:i-1]))\n        end\n   \
    \     count = 0\n        st = i + 1\n        i = i + 1\n    end\n    return result\n\
    end", "    words = split(s)\n    ret = []\n    for word in words\n        wordConsonants\
    \ = 0\n        for c in word\n            if !(c in \"aeiou\")\n             \
    \   wordConsonants += 1\n            end\n        end\n        if wordConsonants\
    \ == n\n            append!(ret, word)\n        end\n    end\n    return ret\n\
    end", "    \n    out_list = []\n    word_list = s.split()\n    for word in word_list\n\
    \        count = 0\n        for char in word\n            if !(char in \"aeiou\"\
    )\n                count = count + 1\n            end\n        end\n        if\
    \ count == n\n            push!(out_list, word)\n        end\n    end\n    return\
    \ out_list\nend", "    lista = split(s, \" \")\n    return lista\nend", "    \n\
    \    s = s.strip()\n    words = split(s, r\"\\s+\")\n    array = []\n    for i\
    \ in words\n        x = 0\n        for j in i\n            if j in (\"b\", \"\
    c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"\
    q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"z\")\n                x += 1\n\
    \            end\n        end\n        if x == n\n            push!(array, i)\n\
    \        end\n    end\n    return array\nend", "    s = str(s)\n    count = 0\n\
    \    selected_words = []\n    for i in range(len(s)):\n        if (s[i] != \"\
    \ \"):\n            count += 1\n        else:\n            if count == n:\n  \
    \              selected_words.append(s[i-count:i])\n            count = 0\n  \
    \  if count == n:\n        selected_words.append(s[-count:])\n    return selected_words\n\
    end", "    word_list = split(s, \" \")\n    consonants = [\"b\", \"c\", \"d\"\
    , \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\"\
    , \"s\", \"t\", \"v\", \"w\", \"x\", \"z\"] \n    number_of_consonants = 0 \n\
    \    list_of_words = []\n    i = 1\n    while i <= length(word_list)\n       \
    \ word = word_list[i]\n        x = 1\n        while x <= length(word)\n      \
    \      if x == length(word) && number_of_consonants == n\n                push!(list_of_words,\
    \ word)\n            end\n            if word[x] in consonants\n             \
    \   number_of_consonants += 1\n            end\n            x += 1\n        end\n\
    \        number_of_consonants = 0\n        i += 1\n    end\n    return list_of_words\n\
    end", "    \n    words = split(s,\" \")\n    result =[]\n    for w in words\n\
    \        n_consonants = 0\n        for c in w\n            if(c in [\"b\",\"c\"\
    ,\"d\",\"f\",\"g\",\"h\",\"j\",\"k\",\"l\",\"m\",\"n\",\"p\",\"q\",\"r\",\"s\"\
    ,\"t\",\"v\",\"w\",\"x\",\"y\",\"z\"])\n                n_consonants+=1\n    \
    \        end\n        end\n        if(n_consonants == n)\n            push!(result,w)\n\
    \        end\n    end\n    return result\nend", "    N = length(s)\n    ith =\
    \ 0\n    strs = []\n    while ith<N\n        while ith<N && (s[ith]==' ' || s[ith]=='\\\
    t')\n            ith += 1\n        end\n        jth = ith\n        while jth<N\
    \ && s[jth]!=' ' && s[jth]!='\\t'\n            jth += 1\n        end\n       \
    \ if (jth-ith)<=n\n            push!(strs, s[ith:jth-1])\n        end\n      \
    \  ith = jth\n    end\n    strs\nend", "    alfa = \"bcdfghjklmnpqrstvwxyz\"\n\
    \    alfa_V = \"aeiou\"\n    total = length(s)\n    pos = 0\n    word = \"\"\n\
    \    list = []\n    while pos < total\n        letter = s[pos]\n        if letter\
    \ == \" \"\n            push!(list, word)\n            word = \"\"\n        else\n\
    \            word = word * letter\n        end\n        pos += 1\n    end\n  \
    \  return list\nend", "    #I'm not sure if that's going to be an array or the\
    \ string itself\n    #works with characters and letters\n    # I'm just trying\
    \ to split the string into words\n    #I can try to add an empty string to the\
    \ end of the list of words and then \n    #delete it if it doesn't have n consonants?\n\
    \    #So I can't use my function with the vowel/consonant thing because I'm working\n\
    \    #with strings now\n    #I'm going to do a for loop that goes through the\
    \ string and counts the consonants\n    #if the number of consonants is equal\
    \ to n then I'll add the word to the list\n    \n    \n    #in_word is a boolean\
    \ and it's false if the ith element of the string is not a letter\n    #if it's\
    \ a letter then it's true\n    #if in_word is true then we need to add the character\
    \ to the word\n    #if in_word is false then we need to check if the word contains\
    \ n consonants\n    #if it does then we need to append it to the list of words\n\
    \    #We also need to check if the word has n consonants if the loop is about\
    \ to end\n    #we can do that by checking if in_word is true\n    #We also need\
    \ to check if the last word has n consonants before we start appending new words\n\
    \    #We will check the last word by checking if the last element is a letter\n\
    \    # if it is then we'll check if the word has n consonants\n    #if it doesn't\
    \ then we'll just get rid of the word\n    #The last time we check if the word\
    \ has n consonants is when we get to the end of the string\n    #We'll have in_word\
    \ as true and we'll add the last character to the last word\n    #then we'll check\
    \ if the last word has n consonants\n    #if it does then we'll append it to the\
    \ list of words\n    #if it doesn't then we'll get rid of the last word\n    #We\
    \ will know that the word is the last word because we'll be at the end of the\
    \ string\n    #and the last character is a letter\n    if s == \"\"\n        return\
    \ []\n    end\n    in_word = false\n    word = \"\"\n    words =", "    l = s.split(\"\
    \ \")\n    result = []\n    for i in l\n        c = 0\n        for j in i\n  \
    \          if j in [\"b\",\"c\",\"d\",\"f\",\"g\",\"h\",\"j\",\"k\",\"l\",\"m\"\
    ,\"n\",\"p\",\"q\",\"r\",\"s\",\"t\",\"v\",\"w\",\"x\",\"z\"]\n              \
    \  c+=1\n            end\n        end\n        if c == n\n            push!(result,i)\n\
    \        end\n    end\n    return result\nend", "    s = s.lower() \n    a = \"\
    bcdfghjklmnpqrstvwxyz\"\n    b = s.replace(\" \", \"\")\n    count = 0\n    for\
    \ i in b\n        if i in a \n            count += 1\n        end\n    end\n \
    \   if count == n\n        return b\n    end\nend\n ", "    \"\"\"\n    >>> select_words(\"\
    The virus originated from bats.\", 3)\n    [\"virus\", \"bats\"]\n    >>> select_words(\"\
    The virus originated from bats.\", 4)\n    [\"virus\"]\n    >>> select_words(\"\
    The virus originated from bats.\", 5)\n    []\n    >>> select_words(\"The virus\
    \ originated from bats.\", 2)\n    [\"The\", \"virus\", \"from\", \"bats\"]\n\
    \    >>> select_words(\"The virus originated from bats.\", 1)\n    [\"The\", \"\
    from\"]\n    >>> select_words(\"The virus originated from bats.\", 0)\n    [\"\
    The\", \"from\"]\n    >>> select_words(\"\", 3)\n    []\n    \"\"\"\n    words\
    \ = split(s, \" \")\n    consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"h\"\
    , \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\"\
    , \"w\", \"x\", \"y\", \"z\"]\n    num_consonants = []\n    for i in range(1,\
    \ len(words)):\n        consonant_count = 0\n        for j in words[i]:\n    \
    \        if j in consonants:\n                consonant_count += 1\n        if\
    \ consonant_count == n:\n            num_consonants.append(words[i])\n    return\
    \ num_consonants\n        \n            ", "    consonants = \"bcdfghjklmnpqrstvwxz\"\
    \n    word = \"\"\n    words_list = []\n    consonants_count = 0\n    for letter\
    \ in s\n        if (letter in consonants)\n            consonants_count += 1\n\
    \        end\n        if (letter == ' ') || (letter == '\\n')\n            if\
    \ (consonants_count == n)\n                push!(words_list, word)\n         \
    \   end\n            word = \"\"\n            consonants_count = 0\n        else\n\
    \            word = string(word, letter)\n        end\n    end\n    if (consonants_count\
    \ == n)\n        push!(words_list, word)\n    end\n    words_list\nend", "   \
    \ words = split(s, r\"\\s+\")\n    n_words = []\n    vowels = Set([\"a\", \"e\"\
    , \"i\", \"o\", \"u\"])\n    for word in words\n        if n == count(c->!in(c,\
    \ vowels), word)\n            push!(n_words, word)\n        end\n    end\n   \
    \ return n_words\nend", "    words = split(s,\" \")\n    l = []\n    for i in\
    \ words\n        if sum(isalpha(i) && islower(i) && i \u2208 \"bcdfghjklmnpqrstvwxyz\"\
    ) == n\n            push!(l,i)\n        end\n    end\n    l\nend", "    words\
    \ = split(s, \" \")\n    selected_words = []\n    for word in words\n        count\
    \ = length(consonants(word))\n        if count == n\n            push!(selected_words,\
    \ word)\n        end\n    end\n    selected_words\nend", "    words = split(s,\
    \ \" \")\n    result = []\n    for i in 1:length(words)\n        # check if the\
    \ i'th word has the required number of consonants\n        count = 0\n       \
    \ for j in 1:length(words[i])\n            if words[i][j] in \"bcdfghjklmnpqrstvwxyz\"\
    \n                count += 1\n            end\n        end\n        if count ==\
    \ n\n            push!(result, words[i])\n        end\n    end\n    return result\n\
    end\ns = \"the quick brown fox jumps over the lazy dog\"\nselect_words(s, 4)",
  "    words = split(s)\n    consonants = \"bcdfghjklmnpqrstvwxz\"\n    for word in\
    \ words\n        for char in word\n            char.lower in consonants\n    \
    \    end\n    end\n    return words\nend", '    """Return all words in s that
    contain n consonants.', "    str_list = split(s, \" \")\n    for word in str_list\n\
    \        count = 0\n        for letter in word\n            if !(letter in \"\
    aeiouAEIOU\")\n                count = count + 1\n            end\n        end\n\
    \        if count == n\n            println(word)\n        end\n    end\nend",
  "    words_s = split(s, \" \")\n    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"\
    ]\n    consonants = []\n    size_consonants = 0\n    contain_n_consonants = []\n\
    \    for word in words_s\n        for letter in word\n            if letter in\
    \ vowels\n                continue\n            else\n                push!(consonants,\
    \ letter)\n            end\n        end\n        size_consonants = length(consonants)\n\
    \        if size_consonants == n\n            push!(contain_n_consonants, word)\n\
    \        end\n        size_consonants = 0\n        consonants = []\n    end\n\
    \    return join(contain_n_consonants, \" \")\nend\n#SOLUTION", "    # Initialize\
    \ an empty vector\n    words = Vector{String}()\n    # Split the string into a\
    \ vector of words\n    split_words = split(s)\n    # Loop over the words in the\
    \ vector\n    for w in split_words\n        # Count the number of consonants in\
    \ word w\n        n_consonants = 0\n        for c in w\n            if !ismatch(r\"\
    [aeiou]\", c)\n                n_consonants += 1\n            end\n        end\n\
    \        # Check if n_consonants is equal to n\n        if n_consonants == n\n\
    \            # If it is then push w to the words vector\n            push!(words,\
    \ w)\n        end\n    end\n    # Return the words vector\n    return words\n\
    end", "    arr = split(s)\n    res = []\n    for word in arr\n        if count_consonants(word)\
    \ == n\n            push!(res, word)\n        end\n    end\n    return res\nend",
  "    # Args:\n    #   s: String.\n    #   n: Number.\n    # Returns:\n    #   String.\n\
    \    \n    # Your code here.\n    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"\
    ]\n    words = s.split(\" \")\n    res = []\n    for i in words\n        number_of_consonants\
    \ = 0\n        for j in i\n            if j in vowels\n                continue\n\
    \            else\n                number_of_consonants += 1\n            end\n\
    \        end\n        if number_of_consonants == n\n            push!(res, i)\n\
    \        end\n    end\n    return res\nend", "    words = split(s)\n    lst =\
    \ []\n    count = 0\n    for w in words\n        for l in w\n            if l\
    \ in \"B,C,D,F,G,H,J,K,L,M,N,P,Q,R,S,T,V,W,X,Y,Z,b,c,d,f,g,h,j,k,l,m,n,p,q,r,s,t,v,w,x,y,z\"\
    \n                count += 1\n                end\n            end\n        if\
    \ count == n\n            push!(lst, w)\n            end\n        count = 0\n\
    \        end\n    return lst\nend", "    s = split(s)\n    result = []\n    for\
    \ i in s\n        i = split(i)\n        count = 0\n        vowels = [\"a\", \"\
    e\", \"i\", \"o\", \"u\"]\n        for j in i\n            if j in vowels\n  \
    \              continue\n            else\n                count += 1\n      \
    \      end\n        end\n        if count == n\n            result = push!(result,\
    \ join(i))\n        end\n    end\n    return result\nend", "    return [word for\
    \ word in s.split() if n == sum(1 for c in word if c in \"bcdfghjklmnpqrstvwxyz\"\
    )]\nend", "    words = split(s)\n    select_words = Array{String}(length(words))\n\
    \    k = 0 \n    for i = 1:length(words)\n        n_consonants = 0\n        for\
    \ j = 1:length(words[i])\n            if words[i][j] \u2209 [\"a\", \"e\", \"\
    i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"]\n                n_consonants\
    \ += 1\n            end\n        end\n        if n_consonants == n\n         \
    \   k += 1\n            select_words[k] = words[i]\n        end\n    end\n   \
    \ for i = 1:k\n        print(select_words[i])\n    end\nend", "    return split(s)\
    \ .* \"\" .* (count(s, r\"[bcdfghjklmnpqrstvwxz]\", overlap=true) .== n)\nend",
  "    return [word for word in split(s, ' ') if count(word) == n]\nend\ns = '24 hour\
    \ subway'\nselect_words(s, 4)", "    # your code here\nend", "    return [x for\
    \ x in split(s, \" \") if isless(count_consonants(x), n)]\nend", "    if s ==\
    \ \"\" \n        return []\n    else:\n        if contains(s, n)\n           \
    \ return s\n        else:\n            return []\nend", "    words = split(s,\
    \ ' ')\n    vowels = ['a', 'e', 'i', 'o', 'u']\n    cons = [i for i in s if i\
    \ != ' ']\n    cons = [i for i in cons if i not in vowels]\n    cons = split(cons,\
    \ ' ')\n    word_arr = []\n    for i in words\n        if count_consonants(i)\
    \ == n\n            push!(word_arr, i)\n        end\n    end\n    return word_arr\n\
    end", "    s = s.split(\" \")\n    arr = []\n    for i in s\n        if i[contains(\"\
    bcdghjklmnpqrstvxz\")] == n\n            push!(arr, i)\n        end\n    end\n\
    \    return arr\nend", "    # start your code here\n    words = split(s, \" \"\
    )\n    count = 0\n    for word in words\n        for letter in word\n        \
    \    if(letter in \"b,c,d,f,g,h,j,k,l,m,n,p,q,r,s,t,v,w,x,y,z\")\n           \
    \     count += 1\n            end\n        end\n        if(count == n)\n     \
    \       println(word)\n        end\n        count = 0\n    end\nend", "    words\
    \ = split(s, \" \")\n    result = []\n    for word in words\n        cnt = 0\n\
    \        for letter in word\n            if isconsonant(letter)\n            \
    \    cnt += 1\n            end\n        end\n        if cnt == n\n           \
    \ push!(result, word)\n        end\n    end\n    return result\nend", "    res\
    \ = []\n    words = split(s, \" \")\n    for i in 1:length(words)\n        if\
    \ count_consonants(words[i]) == n\n            push!(res, words[i])\n        end\n\
    \    end\n    return res\nend", "    words_lst = String[]\n    n_consonants =\
    \ String[]\n    n_words = String[]\n    n_count = Int64[]\n    num_consonants\
    \ = Int64[]\n    count = Int64[]\n    consonants = \"BCDFGHJKLMNPQRSTVWXYZbcdfghjklmnpqrstvwxyz\"\
    \n    list_of_words = split(s,r\"\\s+\")\n    for w in list_of_words\n       \
    \ push!(n_words, w)\n    end\n    for i in 1:length(n_words)\n        count =\
    \ 0\n        for j in 1:length(n_words[i])\n            for k in 1:length(consonants)\n\
    \                if n_words[i][j] == consonants[k]\n                    count\
    \ += 1\n                end\n            end\n        end\n        push!(num_consonants,\
    \ count)\n    end\n    for i in 1:length(num_consonants)\n        if num_consonants[i]\
    \ == n\n            push!(n_consonants, n_words[i])\n        end\n    end\n  \
    \  for i in 1:length(n_consonants)\n        s = sreplace(s, n_consonants[i])\n\
    \    end\n    s = sreplace(s, r\"\\s+\")\n    return s\nend", "    words = s.split(\"\
    \ \")\n    words_with_n_consonants = []\n    for word in words \n        num_of_consonants\
    \ = 0\n        for letter in word \n            if letter in [ \"b\", \"c\", \"\
    d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"\
    r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"z\"]\n                num_of_consonants\
    \ += 1\n            end\n        end\n        if num_of_consonants == n\n    \
    \        push!(words_with_n_consonants, word)\n        end\n    end\n    return\
    \ words_with_n_consonants\nend", "    return join([word for word in split(s, r\"\
    \\s+\") if length(filter(is_not_vowel, word)) == n], \", \")\nend", "    consonants\
    \ = \"bcdfghjklmnpqrstvwxyz\"\n    word = split(s, ' ')\n    for i in word\n \
    \       count = 0\n        for j in i\n            if j in consonants\n      \
    \          count += 1\n            end\n        end\n        if count == n\n \
    \           print(i)\n        end\n    end\nend", "  \n    words = split(s, '\
    \ ')\n    consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\"\
    , \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\"\
    , \"z\"]\n    consonants_in_word = 0\n    words_with_n_consonants = []\n    \n\
    \    for word in words\n        for letter in word\n            if letter in consonants\n\
    \                consonants_in_word += 1\n            end\n        end\n     \
    \   if consonants_in_word == n\n            push!(words_with_n_consonants, word)\n\
    \        end\n        consonants_in_word = 0\n    end\n    \n    return join(words_with_n_consonants,\
    \ ' ')\nend", "    # your code here \nend", "    s = s.lower()\n    a=[]\n   \
    \ l=s.split(\" \")\n    for word in l\n        count=0\n        for letter in\
    \ word\n            if letter !='a' && letter !='e' && letter !='i' && letter\
    \ !='o' && letter !='u'\n                count+=1\n            end\n        end\n\
    \        if count==n\n            push!(a,word)\n        end\n    end\n    return\
    \ a\nend", "    # TODO \n    # pass \nend", "    c = 'bcdfghjklmnpqrstvwxyz'\n\
    \    words = split(s, \" \")\n    res = []\n    for word in words\n        count\
    \ = 0\n        for ch in word\n            if ch in c\n                count +=\
    \ 1\n            end\n        end\n        if count == n\n            push!(res,\
    \ word)\n        end\n    end\n    return res\nend", "    words = split(s, \"\
    \ \")\n    n_consonants = []\n    for i = 1:length(words)\n        if num_consonants(words[i])\
    \ == n\n            append!(n_consonants, words[i])\n        end\n    end\n  \
    \  return join(n_consonants, \" \")\nend", "    list_words = []\n    string_words\
    \ = split(s, r\"\\s+\")\n    for word in string_words\n        if count(word,\
    \ r\"[^aeiouAEIOU]+\") == n\n            push!(list_words, word)\n        end\n\
    \    end\n    return list_words\nend\ns = \"She sells sea shells by the sea shore\"\
    \nselect_words(s, 2)\n# test_function(select_words, s, 2, [\"sells\", \"sea\"\
    , \"by\", \"the\", \"shore\"])", "    \"\"\"\"s is the string and n is the number\
    \ of consonants\"\"\"\n    # Convert the string s to a list of all words\n   \
    \ s = s.split()\n    @show s\n    # define vowels\n    vowels = [\"a\", \"e\"\
    , \"i\", \"o\", \"u\"]\n    # create an empty list to append the results\n   \
    \ s_consonants = []\n    for i in s\n        for j in i\n            # Convert\
    \ each letter to a lower case\n            j = j.lower()\n            # check\
    \ if each letter is a vowel\n            if j in vowels\n                # if\
    \ it is, then remove it from the word\n                i = i.replace(j, \"\")\n\
    \                # Convert all letters to lower case\n                i = i.lower()\n\
    \            end\n        end\n        # Check if the word has exactly n consonants\n\
    \        if length(i) == n\n            # add the word to the list s_consonants\n\
    \            push!(s_consonants, i)\n        end\n    end\n    # return the list\
    \ s_consonants\n    return s_consonants\nend", "    words = split(s)\n    for\
    \ word in words\n        letters = split(word)\n        for letter in letters\n\
    \            if !ismatch(r\"[aeiouAEIOU]\", letter)\n                n -= 1\n\
    \            end\n        end\n        if n == 0\n            println(word)\n\
    \        end\n    end\nend", "    words = []\n    for w in split(s, r\"\\s+\"\
    )\n        vowels = \"AEIOU\"\n        consonants = \"BCDFGHJKLMNPQRSTVWXYZ\"\n\
    \        vcount = 0\n        ccount = 0\n        for c in uppercase(w)\n     \
    \       if c in vowels\n                vcount += 1\n            elseif c in consonants\n\
    \                ccount += 1\n            end\n        end\n        if ccount\
    \ == n\n            push!(words, w)\n        end\n    end\n    return words\n\
    end", "    found = []\n    split_string = split(s)\n    for word in split_string\n\
    \        counter = 0\n        for letter in word\n            if(letter in \"\
    aeiou\") \n                nothing \n            else\n                counter\
    \ += 1\n            end\n        end\n        if counter == n\n            push!(found,\
    \ word)\n        end\n    end\n    return found\nend", "    lista = s.split(\"\
    \ \")\n    #print(lista)\n    l_palabras = []\n    for x in lista\n        conso\
    \ = 0\n        for y in x\n            if (y in \"bcdfghjklmnpqrstvwxyz\")\n \
    \               conso += 1\n            end\n        end\n        if (conso ==\
    \ n)\n            push!(l_palabras, x)\n        end\n    end\n    return l_palabras\n\
    end", "    \nend", "    s = split(s, r\"\\s+\") #separates the elements of the\
    \ string with spaces\n    for i in s\n        if length(i) <= n #checks if the\
    \ strings length is less or equal than n\n            push!(s, i) #push the element\
    \ to the string\n            deleteat!(s, i) #deletes the element at the string\n\
    \        end\n    end\n    return s #returns the string\nend", "  words_array\
    \ = split(s, r\"\\s+\")\n  words_array_filtered = Array[]\n  for word in words_array\n\
    \    consonants_num = 0\n    for c in word\n      if !(c in \"aeiouAEIOU\")\n\
    \        consonants_num += 1\n      end\n    end\n    if consonants_num == n\n\
    \      push!(words_array_filtered, word)\n    end\n  end\n  return words_array_filtered\n\
    end", "    \nend\n    ", "   \n    list1 = split(s)\n    result = []\n    consonants\
    \ = [\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"\
    n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"z\"]\n    for i\
    \ in 1:length(list1)\n        a = split(list1[i], \"\")\n        count = 0\n \
    \       for j in 1:length(a)\n            for k in 1:length(consonants)\n    \
    \            if a[j] == consonants[k]\n                    count += 1\n      \
    \          end\n            end\n        end\n        if count == n\n        \
    \    result = push!(result, list1[i])\n        end\n    end\n    return result\n\
    end", "    words = split(s, \" \")\n    string_empty = []", '    end', "    #\
    \ Your code here\nend", "    n_c = length(collect(s)) \n    if n_c == 0 \n   \
    \     return \"\"\n    end\n    if n_c > 0 \n        if n_c == n \n          \
    \  return s\n        end\n    end\n    return \"\"\nend", "    vowel_list = [\"\
    a\", \"e\", \"i\", \"o\", \"u\"]\n    s_list = map(x -> x.lower(), split(s))\n\
    \    temp_list = []\n    for word in s_list\n        cons_count = 0\n        for\
    \ letter in word\n            if !(letter in vowel_list)\n                cons_count\
    \ += 1\n            end\n        end\n        if cons_count == n\n           \
    \ push!(temp_list, word)\n        end\n    end\n    return temp_list\nend", " \
    \   # your code here\n    return x\nend", "    lista_de_palabras = []\n    for\
    \ i in split(s)\n        if n == count_consonants(i)\n            push!(lista_de_palabras,\
    \ i)\n        end\n    end\n    return lista_de_palabras\nend", "    s_trim =\
    \ strip(s)\n    s_trim_array = split(s_trim, \" \")\n    s_trim_array_length =\
    \ length(s_trim_array)\n    results = String[]\n    vowels = \"aeiou\"\n    consonants\
    \ = \"bcdfghjklmnpqrstvwxyz\"\n    for i in 1:s_trim_array_length\n        count\
    \ = 0\n        for j in s_trim_array[i]\n            if occursin(j, consonants)\n\
    \                count += 1\n            end\n        end\n        if count ==\
    \ n\n            push!(results, s_trim_array[i])\n        end\n    end\n    return\
    \ results\nend", "    words = split(s, \" \")\n    consonants = [\"b\", \"c\"\
    , \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\"\
    , \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"z\"]\n    word_list = []\n    for\
    \ word in words\n        word_consonants = 0\n        for c in word\n        \
    \    if c in consonants\n                word_consonants += 1\n            end\n\
    \        end\n        if word_consonants == n\n            push!(word_list, word)\n\
    \        end\n    end\n    return word_list\nend", "    #your code goes here\n\
    \    end", "    if length(s)==0\n        return []\n    end\n    if s[1]==' '\n\
    \        return select_words(s[2:end],n)\n    end\n    if s[end]==' '\n      \
    \  return select_words(s[1:end-1],n)\n    end\n    if vowel(s[1])\n        return\
    \ [select_words(s[2:end],n)]\n    end\n    if n==1\n        return s[1]\n    end\n\
    \    return [select_words(s[2:end],n-1)]\n    ", "    words = split(s)\n    to_select\
    \ = []\n    for word in words\n        c = count_consonants(word)\n        if\
    \ c == n\n            push!(to_select, word)\n        end\n    end\n    return\
    \ to_select\nend", "    words = split(s, \" \")\n    result = []\n    for i in\
    \ words\n        consonants = 0\n        for j in i\n            if j != 'a' &&\
    \ j != 'e' && j != 'i' && j != 'o' && j != 'u' && j != 'A' && j != 'E' && j !=\
    \ 'I' && j != 'O' && j != 'U'\n                consonants += 1\n            end\n\
    \        end\n        if consonants == n\n            push!(result, i)\n     \
    \   end\n    end\n    return result\nend", "\nend", "    lst = split(s)\n    count_consonants(word::String)::Int64\n\
    \        count = 0\n        consonants = \"bcdfghjklmnpqrstvwxyz\"\n        for\
    \ letter in word\n            if letter in consonants\n                count +=\
    \ 1\n            end\n        end\n        return count\n    new_list = []\n \
    \   for word in lst\n        if count_consonants(word) == n\n            push!(new_list,\
    \ word)\n        end\n    end\n    return new_list\nend\nselect_words(\"Hello,\
    \ how are you?\", 2)", "    \n    \n    \n    \n    \n    \n    \n    \nend",
  '    return [word for word in s.split() if sum(char in "bcdfghjklmnpqrstvwxz" for
    char in word) == n]', "    words = s.split(\" \")\n    consonants = [\"b\", \"\
    c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"\
    q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"z\"]\n    new_list = []\n   \
    \ for word in words\n        count = 0\n        for letter in word\n         \
    \   if letter in consonants\n                count += 1\n            end\n   \
    \     end\n        if count == n\n            push!(new_list, word)\n        end\n\
    \    end\n    return new_list\nend", "    \n    \n    \n    \n    \n    \n   \
    \ \n    \n    \nend \n \n \n ", "    #returns all words in the string s that contain\
    \ exactly n consonants, in order\n    #the words appear in the string s\n    #\
    \ (if the string s is empty then the function should return an empty list)\n \
    \   # s = \"Mr. and Mrs. Dursley, of number four, Privet Drive, were proud to\
    \ say \n    # that they were perfectly normal, thank you very much.\"\n    # n\
    \ = 3\n    result = []\n    s = split(s, \" \")\n    for i in s\n        if n\
    \ == length(findall(r\"[qwrtypsdfghjklzxcvbnm]\", i))\n            result.append(i)\n\
    \        end\n    end\n    return result\nend", "    # your code here\n    return\
    \ \"Not Implemented\"\nend", "    k = String[]\n    words = split(s, \" \")\n\
    \    consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"\
    l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"\
    z\"]\n    for i in 1:length(words)\n        num_consonants = 0\n        for j\
    \ in 1:length(words[i])\n            if words[i][j] in consonants\n          \
    \      num_consonants += 1\n            end\n        end\n        if num_consonants\
    \ == n\n            push!(k, words[i])\n        end\n    end\n    return join(k,\
    \ \" \")\nend", "    words = split(s, \" \")\n    consonants = \"bcdfghjklmnpqrstvwxyz\"\
    \n    for i in 1:size(words)[1]\n        if size(words[i]) != n\n            words[i]\
    \ = \"\"\n        end\n    end\n    for i in 1:size(words)[1]\n        for j in\
    \ 1:size(words[i])[1]\n            if !(words[i][j] in consonants)\n         \
    \       words[i] = \"\"\n            end\n        end\n    end\n    return words\n\
    end", "    a = split(s, \" \")\n    for i in range(1,n)\n        b = filter(x\
    \ -> length(match(r\"[^aeiou]\", x) == n, a)\n        c = split(b)\n    return\
    \ c\nend", "    for i=1:size(s)\n        #if (s[i]=='a'||s[i]=='e'||s[i]=='i'||s[i]=='o'||s[i]=='u')\n\
    \        #    s=deleteat!(s,i)\n        if (s[i]=='a'||s[i]=='e'||s[i]=='i'||s[i]=='o'||s[i]=='u')\n\
    \            s[i]=' '\n        end\n    end\n    #s = split(s)\n    s = split(s,\"\
    \ \")\n    res = []\n    for j=1:size(s)\n        res = append!(res,s[j])\n  \
    \  end\n    return res\nend", "    res = []\n    wrds = s.split()\n    for i in\
    \ wrds\n        if(count_consonants(i) == n)\n            push!(res, i)\n    \
    \    end\n    end\n    return res\nend", "    s = s.lower()\n    consonants =\
    \ \"bcdfghjklmnpqrstvwxyz\"\n    a = []\n    b = []\n    for i in s\n        if\
    \ i in consonants\n            push!(a,i)\n        else\n            push!(b,length(a))\n\
    \            a = []\n        end\n    end\n    push!(b,length(a))\n    c = []\n\
    \    for j in 1:length(b)\n        if b[j] == n\n            push!(c,j)\n    \
    \    end\n    end\n    result = []\n    for l in c\n        push!(result,s[l:c[l+1]-1])\n\
    \    end\n    return result\nend", "    words = split(s)\n    result = []\n  \
    \  for word in words\n        count = 0\n        for char in word\n          \
    \  if char in \"aeiou\"\n                count+=1\n            end\n        end\n\
    \        if count == n\n            push!(result, word)\n        end\n    end\n\
    \    return result\nend", "    '''Given a string s and a natural number n, you\
    \ have been tasked to implement \n    a function that returns a list of all words\
    \ from string s that contain exactly \n    n consonants, in order these words\
    \ appear in the string s.\n    If the string s is empty then the function should\
    \ return an empty list.\n    Note: you may assume the input string contains only\
    \ letters and spaces.\n    Examples:\n    select_words(\"A vowel is a word that\
    \ contains a vowel\", 1) == [\"A\", \"word\", \"a\"]\n    select_words(\"A vowel\
    \ is a word that contains a vowel\", 0) == [\"A\", \"is\", \"a\", \"that\", \"\
    a\"]\n    select_words(\"A vowel is a word that contains a vowel\", 3) == [\"\
    vowel\", \"contains\"]\n    select_words(\"A vowel is a word that contains a vowel\"\
    , 100) == []'''\n    res = []\n    count = 0\n    temp = \"\"\n    for i in s\n\
    \        if (i == ' ')\n            if (count == n)\n                push!(res,\
    \ temp)\n            end\n            temp = \"\"\n            count = 0\n   \
    \     elseif (i in \"bcdfghjklmnpqrstvwxyz\")\n            count += 1\n      \
    \      temp = temp * i\n        else\n            temp = temp * i\n        end\n\
    \    end\n    if (count == n)\n        push!(res, temp)\n    end\n    return res\n\
    end", "    \nend"]
stop_tokens:
- "\nfunction"
- "\nmacro"
- "\n\n"

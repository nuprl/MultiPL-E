language: jl
name: HumanEval_114_minSubArraySum
results:
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    n = length(nums)\n    curr_sum\
    \ = max_sum = nums[1]\n    for i in 2:n\n        curr_sum = min(nums[i], curr_sum\
    \ + nums[i])\n        max_sum = max(max_sum, curr_sum)\n    end\n    return max_sum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 9 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpsrrnlkkl.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpsrrnlkkl.jl:20\n  Expression: candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1\n   Evaluated: 4 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpsrrnlkkl.jl:20 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpsrrnlkkl.jl:19\ntest set: Test Failed at /tmp/tmpsrrnlkkl.jl:21\n\
    \  Expression: candidate([-1, -2, -3]) == -6\n   Evaluated: -1 == -6\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsrrnlkkl.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsrrnlkkl.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpsrrnlkkl.jl:22\n  Expression: candidate([-1, -2, -3, 2, -10])\
    \ == -14\n   Evaluated: -1 == -14\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsrrnlkkl.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsrrnlkkl.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpsrrnlkkl.jl:24\n  Expression: candidate([0, 10, 20, 1000000])\
    \ == 0\n   Evaluated: 1000000 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsrrnlkkl.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsrrnlkkl.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpsrrnlkkl.jl:25\n  Expression: candidate([-1, -2, -3, 10, -5])\
    \ == -6\n   Evaluated: 4 == -6\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro"
  timestamp: 1659822283
- exit_code: 0
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    min_sum = Inf\n    curr_sum\
    \ = 0\n    for i in 1:length(nums)\n        curr_sum += nums[i]\n        if curr_sum\
    \ < min_sum\n            min_sum = curr_sum\n        end\n        if curr_sum\
    \ > 0\n            curr_sum = 0\n        end\n    end\n    return min_sum\nend\n\
    using Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659822281
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    n = length(nums)\n    min_sum\
    \ = Inf\n    sum = 0\n    left = 1\n    right = 1\n    while right <= n\n    \
    \    while right <= n && sum >= 0\n            sum += nums[right]\n          \
    \  right += 1\n        end\n        while left < right && sum < 0\n          \
    \  sum -= nums[left]\n            left += 1\n        end\n        min_sum = min(min_sum,\
    \ sum)\n    end\n    return min_sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1,\
    \ -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 11 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmplalziayu.jl:27

    '
  stdout: "test set: Test Failed at /tmp/tmplalziayu.jl:30\n  Expression: candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1\n   Evaluated: 16 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmplalziayu.jl:30 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmplalziayu.jl:29\ntest set: Test Failed at /tmp/tmplalziayu.jl:31\n\
    \  Expression: candidate([-1, -2, -3]) == -6\n   Evaluated: 0 == -6\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplalziayu.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplalziayu.jl:29\ntest set: Test\
    \ Failed at /tmp/tmplalziayu.jl:32\n  Expression: candidate([-1, -2, -3, 2, -10])\
    \ == -14\n   Evaluated: 0 == -14\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplalziayu.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplalziayu.jl:29\ntest set: Test\
    \ Failed at /tmp/tmplalziayu.jl:33\n  Expression: candidate([-9999999999999999])\
    \ == -9999999999999999\n   Evaluated: 0 == -9999999999999999\nStacktrace:\n [1]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplalziayu.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplalziayu.jl:29\ntest set: Test\
    \ Failed at /tmp/tmplalziayu.jl:34\n  Expression: candidate([0, 10, 20, 1000000])\
    \ == 0\n   Evaluated: 1000030 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test"
  timestamp: 1659822283
- exit_code: 0
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    \n    min_so_far = nums[1]\n\
    \    min_in_array = min_so_far\n    \n    for i in 2:length(nums)\n        current_element\
    \ = nums[i]\n        min_so_far = min(current_element, min_so_far + current_element)\n\
    \        min_in_array = min(min_in_array, min_so_far)\n    end\n    \n    return\
    \ min_in_array\nend\nusing Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\
    \t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) ==\
    \ -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659822281
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    min = nums[1]\n    sum = 0\n\
    \    for x in nums\n        sum += x\n        if sum < min\n            min =\
    \ sum\n        end\n    end\n    return min\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t\
    @test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3, 2, -10])\
    \ == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\t@test(candidate([0,\
    \ 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3, 10, -5]) == -6)\n\t\
    @test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10, 11,\
    \ 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\t\
    @test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp10qqdx0f.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp10qqdx0f.jl:22\n  Expression: candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1\n   Evaluated: 2 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp10qqdx0f.jl:22 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp10qqdx0f.jl:21\ntest set: Test Failed at /tmp/tmp10qqdx0f.jl:28\n\
    \  Expression: candidate([100, -1, -2, -3, 10, -5]) == -6\n   Evaluated: 94 ==\
    \ -6\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp10qqdx0f.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp10qqdx0f.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp10qqdx0f.jl:29\n  Expression: candidate([10, 11, 13, 8, 3,\
    \ 4]) == 3\n   Evaluated: 10 == 3\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp10qqdx0f.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp10qqdx0f.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp10qqdx0f.jl:30\n  Expression: candidate([100, -33, 32, -1,\
    \ 0, -2]) == -33\n   Evaluated: 67 == -33\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp10qqdx0f.jl:30 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp10qqdx0f.jl:21\ntest set: Test Failed at /tmp/tmp10qqdx0f.jl:33\n\
    \  Expression: candidate([1, -1]) == -1\n   Evaluated: 0 == -1\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macr"
  timestamp: 1659822283
- exit_code: -1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    if(length(nums)==0)\n     \
    \   return 0\n    end\n    prefixsums=cumsum(nums)\n    minprefixsum=prefixsums[1]\n\
    \    minrange=Tuple{Int64,Int64}(1,1)\n    for (i,prefixsum) in enumerate(prefixsums)\n\
    \        if(prefixsum<minprefixsum)\n            minprefixsum=prefixsum\n    \
    \        minrange=(1,i+1)\n        end\n        if(prefixsum-minprefixsum<minprefixsum)\n\
    \            minprefixsum=prefixsum-minprefixsum\n            minrange=(minrange[1],i+1)\n\
    \        end\n    end\n    return sum(nums[minrange[1]:minrange[2]])\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: Timeout
  stderr: 'b''ERROR: '''
  stdout: 'b''test set: Error During Test at /tmp/tmpxbsxpo2u.jl:30\n  Test threw
    exception\n  Expression: candidate([2, 3, 4, 1, 2, 4]) == 1\n  MethodError: no
    method matching Tuple{Int64, Int64}(::Int64, ::Int64)\n  Closest candidates are:\n    (::Type{T})(::Any)
    where T<:Tuple at ~/.conda/envs/polyglot/share/julia/base/tuple.jl:317\n  Stacktrace:\n   [1]
    minSubArraySum(nums::Vector{Int64})\n     @ Main /tmp/tmpxbsxpo2u.jl:12\n   [2]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxbsxpo2u.jl:30 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxbsxpo2u.jl:29\ntest set: Error
    During Test at /tmp/tmpxbsxpo2u.jl:31\n  Test threw exception\n  Expression: candidate([-1,
    -2, -3]) == -6\n  MethodError: no method matching Tuple{Int64, Int64}(::Int64,
    ::Int64)\n  Closest candidates are:\n    (::Type{T})(::Any) where T<:Tuple at
    ~/.conda/envs/polyglot/share/julia/base/tuple.jl:317\n  Stacktrace:\n   [1] minSubArraySum(nums::Vector{Int64})\n     @
    Main /tmp/tmpxbsxpo2u.jl:12\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxbsxpo2u.jl:31 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxbsxpo2u.jl:29\ntest set: Error
    During Test at /tmp/tmpxbsxpo2u.jl:32\n  Test threw exception\n  Expression: candidate([-1,
    -2, -3, 2, -10]) == -14\n  MethodError: no method matching Tuple{Int64, Int64}(::Int64,
    ::Int64)\n  Closest candidates are:\n    (::Type{T})(::Any) where T<:Tuple at
    ~/.conda/envs/polyglot/share/julia/base/tuple.jl:317\n  Stacktrace:\n   [1] minSubArraySum(nums::Vector{Int64})\n     @
    Main /tmp/tmpxbsxpo2u.jl:12\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]'
  timestamp: 1659822285
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n  \n    # Initialize the minimum\
    \ sum and the subarray \n    # sum to be 0\n    mini = 0\n    subarray_sum = 0\n\
    \    \n    # Loop through the subarray\n    for i = 1:length(nums)\n        \n\
    \        # Update the subarray sum by adding the new\n        # value and if it\
    \ is less than the minimum\n        # replace the minimum\n        subarray_sum\
    \ += nums[i]\n        mini = min(mini, subarray_sum)\n        \n        # If the\
    \ subarray sum is less than 0 then\n        # make it 0\n        if subarray_sum\
    \ < 0\n            subarray_sum = 0\n        end\n    end\n    \n    # Return\
    \ the minimum sum\n    return mini\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1,\
    \ -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 9 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp0yxssho7.jl:34

    '
  stdout: "test set: Test Failed at /tmp/tmp0yxssho7.jl:37\n  Expression: candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp0yxssho7.jl:37 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp0yxssho7.jl:36\ntest set: Test Failed at /tmp/tmp0yxssho7.jl:38\n\
    \  Expression: candidate([-1, -2, -3]) == -6\n   Evaluated: -3 == -6\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0yxssho7.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0yxssho7.jl:36\ntest set: Test\
    \ Failed at /tmp/tmp0yxssho7.jl:39\n  Expression: candidate([-1, -2, -3, 2, -10])\
    \ == -14\n   Evaluated: -8 == -14\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0yxssho7.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0yxssho7.jl:36\ntest set: Test\
    \ Failed at /tmp/tmp0yxssho7.jl:42\n  Expression: candidate([-1, -2, -3, 10, -5])\
    \ == -6\n   Evaluated: -3 == -6\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0yxssho7.jl:42 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0yxssho7.jl:36\ntest set: Test\
    \ Failed at /tmp/tmp0yxssho7.jl:43\n  Expression: candidate([100, -1, -2, -3,\
    \ 10, -5]) == -6\n   Evaluated: 0 == -6\nStacktrace:\n [1] macro expansion\n \
    \  @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] mac"
  timestamp: 1659822283
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    return reduce(min, [sum(nums[i:j])\
    \ for i in 1:length(nums), j in i:length(nums)])\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4])\
    \ == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3,\
    \ 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 12 errored,
    0 broken.

    in expression starting at /tmp/tmpc5e0pvzh.jl:11

    '
  stdout: "test set: Error During Test at /tmp/tmpc5e0pvzh.jl:14\n  Test threw exception\n\
    \  Expression: candidate([2, 3, 4, 1, 2, 4]) == 1\n  UndefVarError: i not defined\n\
    \  Stacktrace:\n   [1] minSubArraySum(nums::Vector{Int64})\n     @ Main /tmp/tmpc5e0pvzh.jl:7\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpc5e0pvzh.jl:14 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpc5e0pvzh.jl:13\ntest set:\
    \ Error During Test at /tmp/tmpc5e0pvzh.jl:15\n  Test threw exception\n  Expression:\
    \ candidate([-1, -2, -3]) == -6\n  UndefVarError: i not defined\n  Stacktrace:\n\
    \   [1] minSubArraySum(nums::Vector{Int64})\n     @ Main /tmp/tmpc5e0pvzh.jl:7\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpc5e0pvzh.jl:15 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpc5e0pvzh.jl:13\ntest set:\
    \ Error During Test at /tmp/tmpc5e0pvzh.jl:16\n  Test threw exception\n  Expression:\
    \ candidate([-1, -2, -3, 2, -10]) == -14\n  UndefVarError: i not defined\n  Stacktrace:\n\
    \   [1] minSubArraySum(nums::Vector{Int64})\n     @ Main /tmp/tmpc5e0pvzh.jl:7\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpc5e0pvzh.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpc5e0pvzh.jl:13\ntest set:\
    \ Error During Test at /tmp/tmpc5e0pvzh.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([-9999999999999999]) == -9999999999999999\n  UndefVarError: i not\
    \ defined\n  Stacktrace:\n   [1] minSubArraySum(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpc5e0pvzh.jl:7\n   [2] macro expansion\n     @ ~/.conda/en"
  timestamp: 1659822284
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    if sum(nums .< 0) == length(nums)\n\
    \        return minimum(nums)\n    end\n    start = 1\n    best_sum = sum(nums[start:start+1])\n\
    \    best_start = start\n    best_end = start + 1\n    for end in 2:length(nums)\n\
    \        if nums[end] > best_sum + nums[end]\n            start = end\n      \
    \      best_sum = nums[end]\n        else\n            best_sum += nums[end]\n\
    \        end\n        if best_sum < sum(nums[start:end])\n            best_sum\
    \ = sum(nums[start:end])\n            best_start = start\n            best_end\
    \ = end\n        end\n    end\n    return best_sum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4])\
    \ == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3,\
    \ 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"end\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpx5lnngj8.jl:14\nin expression starting at /tmp/tmpx5lnngj8.jl:14\n"
  stdout: ''
  timestamp: 1659822282
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    # Check empty vector\n    if\
    \ nums == []\n        return 0\n    end\n    # Initialize minSum\n    minSum =\
    \ nums[1]\n    # We don't need to loop through the whole array \n    # Since we\
    \ can use the minimum of the sum of the array to date\n    for i = 2:length(nums)\n\
    \        # Check if current sum is less than previous minimum\n        if nums[i]\
    \ < minSum\n            minSum = nums[i]\n        end\n        # Add current sum\
    \ to next number\n        nums[i] += nums[i-1]\n        # Check if current sum\
    \ is less than previous minimum\n        if nums[i] < minSum\n            minSum\
    \ = nums[i]\n        end\n    end\n    return minSum\nend\nnums = [1,2,3,-3,-2,-1]\n\
    minSubArraySum(nums)\nusing Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\
    \t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) ==\
    \ -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 11 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpcdwyn_8b.jl:33

    '
  stdout: "test set: Test Failed at /tmp/tmpcdwyn_8b.jl:42\n  Expression: candidate([100,\
    \ -1, -2, -3, 10, -5]) == -6\n   Evaluated: -5 == -6\nStacktrace:\n [1] macro\
    \ expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpcdwyn_8b.jl:42 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpcdwyn_8b.jl:35\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     1     12\n"
  timestamp: 1659822283
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    min_so_far = nums[1]\n    min_ending_here\
    \ = nums[1]\nusing Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpr50_dpyh.jl:6\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpr50_dpyh.jl:1\n\
    in expression starting at /tmp/tmpr50_dpyh.jl:1\n"
  stdout: ''
  timestamp: 1659822282
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n        Min::Int64 = Inf\n    \
    \    local_sum::Int64 = 0\n        i::Int64 = 1\n        j::Int64 = 1\n      \
    \  while i <= length(nums)\n            local_sum += nums[i]\n            while\
    \ local_sum >= 0\n                Min = min(Min, local_sum)\n                local_sum\
    \ -= nums[j]\n                j += 1\n            end\n            i += 1\n  \
    \      end\n        return Min\n    end\nusing Test\n\n@testset begin\n\ncandidate\
    \ = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1,\
    \ -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 12 errored,
    0 broken.

    in expression starting at /tmp/tmp6qj8ugmc.jl:24

    '
  stdout: "test set: Error During Test at /tmp/tmp6qj8ugmc.jl:27\n  Test threw exception\n\
    \  Expression: candidate([2, 3, 4, 1, 2, 4]) == 1\n  InexactError: Int64(Inf)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert(#unused#::Type{Int64},\
    \ x::Float64)\n     @ Base ./number.jl:7\n   [3] minSubArraySum(nums::Vector{Int64})\n\
    \     @ Main /tmp/tmp6qj8ugmc.jl:7\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp6qj8ugmc.jl:27 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp6qj8ugmc.jl:26\ntest set:\
    \ Error During Test at /tmp/tmp6qj8ugmc.jl:28\n  Test threw exception\n  Expression:\
    \ candidate([-1, -2, -3]) == -6\n  InexactError: Int64(Inf)\n  Stacktrace:\n \
    \  [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert(#unused#::Type{Int64},\
    \ x::Float64)\n     @ Base ./number.jl:7\n   [3] minSubArraySum(nums::Vector{Int64})\n\
    \     @ Main /tmp/tmp6qj8ugmc.jl:7\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp6qj8ugmc.jl:28 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp6qj8ugmc.jl:26\ntest set:\
    \ Error During Test at /tmp/tmp6qj8ugmc.jl:29\n  Test threw exception\n  Expression:\
    \ candidate([-1, -2, -3, 2, -10]) == -14\n  InexactError: Int64(Inf)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert(#unused#::Type{Int64},\
    \ x::Float64)\n     @ Base ./number.jl:7\n   [3] minSubArraySum(nums::Vector{Int64})\n\
    \     @ Main /tmp/tmp6qj8ugmc.jl:7\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp6qj8ugmc.jl:29 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] t"
  timestamp: 1659822284
- exit_code: 0
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    mn = typemax(Int64)\n    curr\
    \ = 0\n    for i = 1:length(nums)\n        curr += nums[i]\n        mn = min(mn,\
    \ curr)\n        if curr > 0\n            curr = 0\n        end\n    end\n   \
    \ return mn\nend\nusing Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\
    \t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) ==\
    \ -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659822281
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    min_so_far = 0\n    min_ending_here\
    \ = 0\n    for i in nums\n        min_ending_here = min(0, min_ending_here + i)\n\
    \        min_so_far = min(min_so_far, min_ending_here)\n    end\n    return min_so_far\n\
    end\n@testset \"Test Case 1\" begin\n    @test minSubArraySum([-3, 2, -3, 4, 2])\
    \ == -5\nend\n@testset \"Test Case 2\" begin\n    @test minSubArraySum([2, -3,\
    \ 2, -3, 4]) == -3\nend\n@testset \"Test Case 3\" begin\n    @test minSubArraySum([-1,\
    \ 1, -1, 1]) == -2\nend\n@testset \"Test Case 4\" begin\n    @test minSubArraySum([1,\
    \ -2, 3, -4, 2]) == -4\nend\n@testset \"Test Case 5\" begin\n    @test minSubArraySum([-6,\
    \ -8, -1, -2, -6]) == -15\nend\n@testset \"Test Case 6\" begin\n    @test minSubArraySum([2,\
    \ 4, -2, -3, 8]) == -3\nend\n@testset \"Test Case 7\" begin\n    @test minSubArraySum([-3,\
    \ -4, -10, -2, -4]) == -19\nend\n@testset \"Test Case 8\" begin\n    @test minSubArraySum([-5,\
    \ -2, -5, -2, -4]) == -18\nend\n@testset \"Test Case 9\" begin\n    @test minSubArraySum([-3,\
    \ -7, -8, -3, -2]) == -21\nend\n@testset \"Test Case 10\" begin\n    @test minSubArraySum([-8,\
    \ -3, -2, -3, -8]) == -22\nend\nusing Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\
    \t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) ==\
    \ -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: UndefVarError: @testset not defined

    in expression starting at /tmp/tmput3xy936.jl:15

    in expression starting at /tmp/tmput3xy936.jl:15

    '
  stdout: ''
  timestamp: 1659822282
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    # convert nums to accumulate\
    \ sum    \n    acc_sum = [sum(nums[1:i]) for i in 1:length(nums)]\n    min_sum\
    \ = sum(nums)\n    for i in 1:length(nums)\n        for j in i:length(nums)\n\
    \            min_sum = min(min_sum, acc_sum[j] - acc_sum[i-1])\n        end\n\
    \    end\n    return min_sum\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1,\
    \ -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 12 errored,
    0 broken.

    in expression starting at /tmp/tmpmdg1q473.jl:19

    '
  stdout: "test set: Error During Test at /tmp/tmpmdg1q473.jl:22\n  Test threw exception\n\
    \  Expression: candidate([2, 3, 4, 1, 2, 4]) == 1\n  BoundsError: attempt to access\
    \ 6-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] minSubArraySum(nums::Vector{Int64})\n     @\
    \ Main /tmp/tmpmdg1q473.jl:12\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpmdg1q473.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpmdg1q473.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpmdg1q473.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([-1, -2, -3]) == -6\n  BoundsError: attempt to access 3-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] minSubArraySum(nums::Vector{Int64})\n     @ Main /tmp/tmpmdg1q473.jl:12\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpmdg1q473.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpmdg1q473.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpmdg1q473.jl:24\n  Test threw exception\n  Expression:\
    \ candidate([-1, -2, -3, 2, -10]) == -14\n  BoundsError: attempt to access 5-element\
    \ Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861\
    \ [inlined]\n   [2] minSubArraySum(nums::Vector{Int64})\n     @ Main /tmp/tmpmdg1q473.jl:12\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpmdg1q473.jl:24 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpmdg1q473.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpmdg"
  timestamp: 1659822284
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    #initialize a variable to store\
    \ the total minimum sum (current and future)\n    #initialize a variable to store\
    \ the current minimum sum\n    #loop over the input array \n        #at each index\
    \ i, find the minimum value between the current minimum\n        #sum and the\
    \ current index value\n    #find the minimum of the current sum and the total\
    \ minimum sum\n    min_total = nums[1]\n    min_current = nums[1]\n    for i in\
    \ 2:length(nums)\n        min_current = min(min_current, nums[i])\n        min_total\
    \ = min(min_total, min_current)\n    end\n    return min_total\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1,\
    \ 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 8 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpus5tb6e4.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmpus5tb6e4.jl:27\n  Expression: candidate([-1,\
    \ -2, -3]) == -6\n   Evaluated: -3 == -6\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpus5tb6e4.jl:27 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpus5tb6e4.jl:25\ntest set: Test Failed at /tmp/tmpus5tb6e4.jl:28\n\
    \  Expression: candidate([-1, -2, -3, 2, -10]) == -14\n   Evaluated: -10 == -14\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpus5tb6e4.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpus5tb6e4.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpus5tb6e4.jl:31\n  Expression: candidate([-1, -2, -3, 10, -5])\
    \ == -6\n   Evaluated: -5 == -6\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpus5tb6e4.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpus5tb6e4.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpus5tb6e4.jl:32\n  Expression: candidate([100, -1, -2, -3,\
    \ 10, -5]) == -6\n   Evaluated: -5 == -6\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpus5tb6e4.jl:32 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpus5tb6e4.jl:25\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    8     4     12\n"
  timestamp: 1659822283
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n  min_so_far = Int64(Inf)\n  min_ending_here\
    \ = 0\nusing Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp_tq4juo4.jl:6\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp_tq4juo4.jl:1\n\
    in expression starting at /tmp/tmp_tq4juo4.jl:1\n"
  stdout: ''
  timestamp: 1659822282
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    \n    # Return 0 if the array\
    \ is empty\n    if isempty(nums)\n        return 0\n    end\n    \n    # Starting\
    \ from the beginning of the array, we find the minimum sum by comparing\n    #\
    \ the current sum with the previous minimum sum\n    min_sum = nums[1]\n    current_sum\
    \ = nums[1]\n    \n    for i in 2:length(nums)\n        current_sum = current_sum\
    \ + nums[i]\n        if current_sum < min_sum\n            min_sum = current_sum\n\
    \        end\n    end\n    \n    return min_sum\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t\
    @test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3, 2, -10])\
    \ == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\t@test(candidate([0,\
    \ 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3, 10, -5]) == -6)\n\t\
    @test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10, 11,\
    \ 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\t\
    @test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpmmlc4hwq.jl:29

    '
  stdout: "test set: Test Failed at /tmp/tmpmmlc4hwq.jl:32\n  Expression: candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1\n   Evaluated: 2 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpmmlc4hwq.jl:32 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpmmlc4hwq.jl:31\ntest set: Test Failed at /tmp/tmpmmlc4hwq.jl:38\n\
    \  Expression: candidate([100, -1, -2, -3, 10, -5]) == -6\n   Evaluated: 94 ==\
    \ -6\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmmlc4hwq.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmmlc4hwq.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpmmlc4hwq.jl:39\n  Expression: candidate([10, 11, 13, 8, 3,\
    \ 4]) == 3\n   Evaluated: 10 == 3\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmmlc4hwq.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmmlc4hwq.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpmmlc4hwq.jl:40\n  Expression: candidate([100, -33, 32, -1,\
    \ 0, -2]) == -33\n   Evaluated: 67 == -33\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpmmlc4hwq.jl:40 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpmmlc4hwq.jl:31\ntest set: Test Failed at /tmp/tmpmmlc4hwq.jl:43\n\
    \  Expression: candidate([1, -1]) == -1\n   Evaluated: 0 == -1\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macr"
  timestamp: 1659822283
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n  (nums[1], N) = size(nums)\n \
    \ min_s = nums[1]\n  min_e = min_s\n  for i in 2:N\n    n = nums[i]\n    min_e\
    \ = min(n, min_e + n)\n    min_s = min(min_s, min_e)\n  end\n  return min_s\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 12 errored,
    0 broken.

    in expression starting at /tmp/tmp61g5uf9i.jl:19

    '
  stdout: "test set: Error During Test at /tmp/tmp61g5uf9i.jl:22\n  Test threw exception\n\
    \  Expression: candidate([2, 3, 4, 1, 2, 4]) == 1\n  BoundsError: attempt to access\
    \ Tuple{Int64} at index [2]\n  Stacktrace:\n   [1] indexed_iterate\n     @ ./tuple.jl:89\
    \ [inlined]\n   [2] minSubArraySum(nums::Vector{Int64})\n     @ Main /tmp/tmp61g5uf9i.jl:7\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp61g5uf9i.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp61g5uf9i.jl:21\ntest set:\
    \ Error During Test at /tmp/tmp61g5uf9i.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([-1, -2, -3]) == -6\n  BoundsError: attempt to access Tuple{Int64}\
    \ at index [2]\n  Stacktrace:\n   [1] indexed_iterate\n     @ ./tuple.jl:89 [inlined]\n\
    \   [2] minSubArraySum(nums::Vector{Int64})\n     @ Main /tmp/tmp61g5uf9i.jl:7\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp61g5uf9i.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp61g5uf9i.jl:21\ntest set:\
    \ Error During Test at /tmp/tmp61g5uf9i.jl:24\n  Test threw exception\n  Expression:\
    \ candidate([-1, -2, -3, 2, -10]) == -14\n  BoundsError: attempt to access Tuple{Int64}\
    \ at index [2]\n  Stacktrace:\n   [1] indexed_iterate\n     @ ./tuple.jl:89 [inlined]\n\
    \   [2] minSubArraySum(nums::Vector{Int64})\n     @ Main /tmp/tmp61g5uf9i.jl:7\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp61g5uf9i.jl:24 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp61g5uf9i.jl:21\ntest set:\
    \ Error During Test at /tmp/tmp61g5uf9i.jl:25\n  Test"
  timestamp: 1659822284
- exit_code: 0
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    \n    sum::Int64 = 0\n    min_sum::Int64\
    \ = nums[1]\n    \n    for num in nums\n        sum = min(sum + num, num)\n  \
    \      min_sum = min(min_sum, sum)\n    end\n    \n    return min_sum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659822281
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    minSum = sum(nums)\n    for\
    \ i = 1:length(nums)\n        for j = i+1:length(nums)\n            if sum(nums[i:j])\
    \ < minSum\n                minSum = sum(nums[i:j])\n            end\n       \
    \ end\n    end\n    return minSum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1,\
    \ -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpfdgmbuh1.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpfdgmbuh1.jl:22\n  Expression: candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1\n   Evaluated: 3 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpfdgmbuh1.jl:22 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpfdgmbuh1.jl:21\ntest set: Test Failed at /tmp/tmpfdgmbuh1.jl:26\n\
    \  Expression: candidate([0, 10, 20, 1000000]) == 0\n   Evaluated: 10 == 0\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfdgmbuh1.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfdgmbuh1.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpfdgmbuh1.jl:29\n  Expression: candidate([10, 11, 13, 8, 3,\
    \ 4]) == 3\n   Evaluated: 7 == 3\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfdgmbuh1.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfdgmbuh1.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpfdgmbuh1.jl:30\n  Expression: candidate([100, -33, 32, -1,\
    \ 0, -2]) == -33\n   Evaluated: -4 == -33\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpfdgmbuh1.jl:30 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpfdgmbuh1.jl:21\ntest set: Test Failed at /tmp/tmpfdgmbuh1.jl:33\n\
    \  Expression: candidate([1, -1]) == -1\n   Evaluated: 0 == -1\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expans"
  timestamp: 1659822283
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    minimum_sum::Int64 = zero(Int64)\n\
    \    minimum_sum = minimum(nums)\nusing Test\n\n@testset begin\n\ncandidate =\
    \ minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1,\
    \ -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpdrrl14ne.jl:6\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpdrrl14ne.jl:1\n\
    in expression starting at /tmp/tmpdrrl14ne.jl:1\n"
  stdout: ''
  timestamp: 1659822282
- exit_code: 0
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    \n    # Initialization: \n\
    \    min_current, min_global = nums[1], nums[1]\n    \n    # Implementation of\
    \ Kadane's algorithm: \n    for i in 2:length(nums)\n        min_current = min(nums[i],\
    \ min_current + nums[i])\n        min_global = min(min_current, min_global)\n\
    \    end\n    \n    return min_global\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1,\
    \ -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659822281
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    minSum = Inf\n    for i in\
    \ 1:length(nums)\n        for j in 1:length(nums)\n            minSum = min(minSum,\
    \ sum(nums[i:j]))\n        end\n    end\n    return minSum\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1,\
    \ 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 9 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp9oprpeyg.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmp9oprpeyg.jl:20\n  Expression: candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp9oprpeyg.jl:20 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp9oprpeyg.jl:19\ntest set: Test Failed at /tmp/tmp9oprpeyg.jl:23\n\
    \  Expression: candidate([-9999999999999999]) == -9999999999999999\n   Evaluated:\
    \ -10000000000000000 == -9999999999999999\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp9oprpeyg.jl:23 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp9oprpeyg.jl:19\ntest set: Test Failed at /tmp/tmp9oprpeyg.jl:27\n\
    \  Expression: candidate([10, 11, 13, 8, 3, 4]) == 3\n   Evaluated: 0 == 3\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9oprpeyg.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9oprpeyg.jl:19\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    9     3     12\n"
  timestamp: 1659822283
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    current_sum = minimum(nums)\n\
    \    minimum_sum = current_sum\n    for num in nums\n        current_sum = min(current_sum\
    \ + num, num)\n        minimum_sum = min(minimum_sum, current_sum)\n    end\n\
    \    return minimum_sum\nend\nusing Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\
    \t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) ==\
    \ -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpw7h3jjgh.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpw7h3jjgh.jl:21\n  Expression: candidate([-1,\
    \ -2, -3]) == -6\n   Evaluated: -9 == -6\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpw7h3jjgh.jl:21 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpw7h3jjgh.jl:19\ntest set: Test Failed at /tmp/tmpw7h3jjgh.jl:22\n\
    \  Expression: candidate([-1, -2, -3, 2, -10]) == -14\n   Evaluated: -24 == -14\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpw7h3jjgh.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpw7h3jjgh.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpw7h3jjgh.jl:23\n  Expression: candidate([-9999999999999999])\
    \ == -9999999999999999\n   Evaluated: -19999999999999998 == -9999999999999999\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpw7h3jjgh.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpw7h3jjgh.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpw7h3jjgh.jl:25\n  Expression: candidate([-1, -2, -3, 10, -5])\
    \ == -6\n   Evaluated: -11 == -6\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpw7h3jjgh.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpw7h3jjgh.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpw7h3jjgh.jl:29\n  Expression: candidate([-10]) == -10\n  \
    \ Evaluated: -20 == -10\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Tes"
  timestamp: 1659822283
- exit_code: 0
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    running_sum = 0\n    minimum_sum\
    \ = typemax(Int64)\n    n = length(nums)\n    for i in 1:n\n        running_sum\
    \ += nums[i]\n        if running_sum < minimum_sum\n            minimum_sum =\
    \ running_sum\n        end\n        if running_sum > 0\n            running_sum\
    \ = 0\n        end\n    end\n    return minimum_sum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4])\
    \ == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3,\
    \ 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659822281
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    # Initialize an auxiliary array\n\
    \    aux = copy(nums)\n    # Loop over all indexes, starting from 2nd.\n    for\
    \ i in 2:length(nums)\n        # Update aux[i] to store sum till ith index.\n\
    \        aux[i] = aux[i-1] + nums[i]\n    end\n    # Initialize minimum to first\
    \ element.\n    min = aux[1]\n    # Loop over all indexes.\n    for i in 2:length(aux)\n\
    \        # Update minimum if current sum is less than minimum.\n        if aux[i]\
    \ < min\n            min = aux[i]\n        end\n    end\n    # Return the minimum\
    \ subarray sum.\n    return min\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1,\
    \ -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpa2e739tx.jl:28

    '
  stdout: "test set: Test Failed at /tmp/tmpa2e739tx.jl:31\n  Expression: candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1\n   Evaluated: 2 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpa2e739tx.jl:31 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpa2e739tx.jl:30\ntest set: Test Failed at /tmp/tmpa2e739tx.jl:37\n\
    \  Expression: candidate([100, -1, -2, -3, 10, -5]) == -6\n   Evaluated: 94 ==\
    \ -6\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpa2e739tx.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpa2e739tx.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpa2e739tx.jl:38\n  Expression: candidate([10, 11, 13, 8, 3,\
    \ 4]) == 3\n   Evaluated: 10 == 3\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpa2e739tx.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpa2e739tx.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpa2e739tx.jl:39\n  Expression: candidate([100, -33, 32, -1,\
    \ 0, -2]) == -33\n   Evaluated: 67 == -33\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpa2e739tx.jl:39 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpa2e739tx.jl:30\ntest set: Test Failed at /tmp/tmpa2e739tx.jl:42\n\
    \  Expression: candidate([1, -1]) == -1\n   Evaluated: 0 == -1\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macr"
  timestamp: 1659822283
- exit_code: 0
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    n = length(nums)\n    local_sum,\
    \ min_sum = 0, typemax(Int64)\n    for i=1:n\n        local_sum += nums[i]\n \
    \       min_sum = min(min_sum, local_sum)\n        if local_sum > 0\n        \
    \    local_sum = 0\n        end\n    end\n    return min_sum\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1,\
    \ 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659822281
- exit_code: 0
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    n, min_ending_here, min_so_far\
    \ = length(nums), 0, nums[1]\n    for i in 1:n\n        min_ending_here = min(nums[i],\
    \ min_ending_here + nums[i])\n        min_so_far = min(min_so_far, min_ending_here)\n\
    \    end\n    return min_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1,\
    \ -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659822282
- exit_code: 0
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    min_sum = nums[1]\n    curr_sum\
    \ = nums[1]\n    for i in 2:length(nums)\n        curr_sum = min(nums[i], nums[i]\
    \ + curr_sum)\n        min_sum = min(min_sum, curr_sum)\n    end\n    return min_sum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659822282
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    minSoFar = Int64(0)\n    minSum\
    \ = Int64(0)\n    for i in nums\n        minSoFar = min(minSoFar, minSoFar + i)\n\
    \        minSum = min(minSum, minSoFar)\n    end\n    return minSum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 7 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp921u_0pe.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmp921u_0pe.jl:20\n  Expression: candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp921u_0pe.jl:20 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp921u_0pe.jl:19\ntest set: Test Failed at /tmp/tmp921u_0pe.jl:22\n\
    \  Expression: candidate([-1, -2, -3, 2, -10]) == -14\n   Evaluated: -16 == -14\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp921u_0pe.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp921u_0pe.jl:19\ntest set: Test\
    \ Failed at /tmp/tmp921u_0pe.jl:25\n  Expression: candidate([-1, -2, -3, 10, -5])\
    \ == -6\n   Evaluated: -11 == -6\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp921u_0pe.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp921u_0pe.jl:19\ntest set: Test\
    \ Failed at /tmp/tmp921u_0pe.jl:26\n  Expression: candidate([100, -1, -2, -3,\
    \ 10, -5]) == -6\n   Evaluated: -11 == -6\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp921u_0pe.jl:26 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp921u_0pe.jl:19\ntest set: Test Failed at /tmp/tmp921u_0pe.jl:27\n\
    \  Expression: candidate([10, 11, 13, 8, 3, 4]) == 3\n   Evaluated: 0 == 3\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined"
  timestamp: 1659822284
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    result:Int64 = 0\n    for item\
    \ in nums\n        result += item\n    end\n    return result\nend\n    \nusing\
    \ Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 12 errored,
    0 broken.

    in expression starting at /tmp/tmpjd3fs7mg.jl:16

    '
  stdout: "test set: Error During Test at /tmp/tmpjd3fs7mg.jl:19\n  Test threw exception\n\
    \  Expression: candidate([2, 3, 4, 1, 2, 4]) == 1\n  UndefVarError: result not\
    \ defined\n  Stacktrace:\n   [1] minSubArraySum(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpjd3fs7mg.jl:9\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpjd3fs7mg.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpjd3fs7mg.jl:18\ntest set:\
    \ Error During Test at /tmp/tmpjd3fs7mg.jl:20\n  Test threw exception\n  Expression:\
    \ candidate([-1, -2, -3]) == -6\n  UndefVarError: result not defined\n  Stacktrace:\n\
    \   [1] minSubArraySum(nums::Vector{Int64})\n     @ Main /tmp/tmpjd3fs7mg.jl:9\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpjd3fs7mg.jl:20 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpjd3fs7mg.jl:18\ntest set:\
    \ Error During Test at /tmp/tmpjd3fs7mg.jl:21\n  Test threw exception\n  Expression:\
    \ candidate([-1, -2, -3, 2, -10]) == -14\n  UndefVarError: result not defined\n\
    \  Stacktrace:\n   [1] minSubArraySum(nums::Vector{Int64})\n     @ Main /tmp/tmpjd3fs7mg.jl:9\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpjd3fs7mg.jl:21 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpjd3fs7mg.jl:18\ntest set:\
    \ Error During Test at /tmp/tmpjd3fs7mg.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([-9999999999999999]) == -9999999999999999\n  UndefVarError: result\
    \ not defined\n  Stacktrace:\n   [1] minSubArraySum(nums::Vector{Int64})\n   \
    \  @ Main /tmp/tmpjd3fs7mg.jl:9\n   [2] macro expansio"
  timestamp: 1659822286
- exit_code: 0
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    sum = 0\n    min_sum = nums[1]\n\
    \    for num in nums\n        sum += num\n        min_sum = min(min_sum, sum)\n\
    \        if sum > 0\n            sum = 0\n        end\n    end\n    return min_sum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659822282
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n\nmin_sum = nums[1]\nrunning_sum\
    \ = 0\nfor i in nums\n   running_sum += i\n   if running_sum < min_sum\n     \
    \  min_sum = running_sum\n   end\nend\nreturn min_sum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4])\
    \ == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3,\
    \ 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpu2q63y7u.jl:20

    '
  stdout: "test set: Test Failed at /tmp/tmpu2q63y7u.jl:23\n  Expression: candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1\n   Evaluated: 2 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpu2q63y7u.jl:23 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpu2q63y7u.jl:22\ntest set: Test Failed at /tmp/tmpu2q63y7u.jl:29\n\
    \  Expression: candidate([100, -1, -2, -3, 10, -5]) == -6\n   Evaluated: 94 ==\
    \ -6\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpu2q63y7u.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpu2q63y7u.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpu2q63y7u.jl:30\n  Expression: candidate([10, 11, 13, 8, 3,\
    \ 4]) == 3\n   Evaluated: 10 == 3\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpu2q63y7u.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpu2q63y7u.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpu2q63y7u.jl:31\n  Expression: candidate([100, -33, 32, -1,\
    \ 0, -2]) == -33\n   Evaluated: 67 == -33\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpu2q63y7u.jl:31 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpu2q63y7u.jl:22\ntest set: Test Failed at /tmp/tmpu2q63y7u.jl:34\n\
    \  Expression: candidate([1, -1]) == -1\n   Evaluated: 0 == -1\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macr"
  timestamp: 1659822285
- exit_code: 0
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    min_sum = minimum(nums)\n \
    \   for i in 1:length(nums)\n        for j in i:length(nums)\n            min_sum\
    \ = min(min_sum, sum(nums[i:j]))\n        end\n    end\n    return min_sum\nend\n\
    using Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659822283
- exit_code: -1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    min_sum, curr_sum = nums[1],\
    \ nums[1]\n    for num in nums[2:end]\n        curr_sum = minimum(curr_sum + num,\
    \ num)\n        min_sum = minimum(min_sum, curr_sum)\n    end\n    return min_sum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: Timeout
  stderr: 'b''ERROR: '''
  stdout: 'b''test set: Error During Test at /tmp/tmp72sjiuwu.jl:19\n  Test threw
    exception\n  Expression: candidate([2, 3, 4, 1, 2, 4]) == 1\n  MethodError: objects
    of type Int64 are not callable\n  Maybe you forgot to use an operator such as
    *, ^, %, / etc. ?\n  Stacktrace:\n   [1] mapreduce_first(f::Int64, op::Function,
    x::Int64)\n     @ Base ./reduce.jl:394\n   [2] mapreduce(f::Int64, op::Function,
    a::Int64)\n     @ Base ./reduce.jl:421\n   [3] minimum(f::Int64, a::Int64; kw::Base.Pairs{Symbol,
    Union{}, Tuple{}, NamedTuple{(), Tuple{}}})\n     @ Base ./reduce.jl:705\n   [4]
    minimum(f::Int64, a::Int64)\n     @ Base ./reduce.jl:705\n   [5] minSubArraySum(nums::Vector{Int64})\n     @
    Main /tmp/tmp72sjiuwu.jl:9\n   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [7] macro expansion\n     @ /tmp/tmp72sjiuwu.jl:19 [inlined]\n   [8]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [9] top-level scope\n     @ /tmp/tmp72sjiuwu.jl:18\ntest set: Error
    During Test at /tmp/tmp72sjiuwu.jl:20\n  Test threw exception\n  Expression: candidate([-1,
    -2, -3]) == -6\n  MethodError: objects of type Int64 are not callable\n  Maybe
    you forgot to use an operator such as *, ^, %, / etc. ?\n  Stacktrace:\n   [1]
    mapreduce_first(f::Int64, op::Function, x::Int64)\n     @ Base ./reduce.jl:394\n   [2]
    mapreduce(f::Int64, op::Function, a::Int64)\n     @ Base ./reduce.jl:421\n   [3]
    minimum(f::Int64, a::Int64; kw::Base.Pairs{Symbol, Union{}, Tuple{}, NamedTuple{(),
    Tuple{}}})\n     @ Base ./reduce.jl:705\n   [4] minimum(f::Int64, a::Int64)\n     @
    Base ./reduce.jl:705\n   [5] minSubArraySum(nums::Vector{Int64})\n     @ Main
    /tmp/tmp72sjiuwu.jl:9\n   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [7] macro expansion\n     @ /tmp/tmp72sjiuwu.jl:20 [inlined]\n   [8]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [9] t'
  timestamp: 1659822287
- exit_code: -1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t\
    @test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3, 2, -10])\
    \ == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\t@test(candidate([0,\
    \ 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3, 10, -5]) == -6)\n\t\
    @test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10, 11,\
    \ 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\t\
    @test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpq7fv7i7b.jl:14\n  Test threw
    exception\n  Expression: candidate([2, 3, 4, 1, 2, 4]) == 1\n  MethodError: Cannot
    `convert` an object of type Nothing to an object of type Int64\n  Closest candidates
    are:\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer at ~/.conda/envs/polyglot/share/julia/base/pointer.jl:23\n    convert(::Type{T},
    !Matched::T) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/number.jl:6\n    convert(::Type{T},
    !Matched::Number) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/number.jl:7\n    ...\n  Stacktrace:\n   [1]
    minSubArraySum(nums::Vector{Int64})\n     @ Main /tmp/tmpq7fv7i7b.jl:8\n   [2]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpq7fv7i7b.jl:14 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpq7fv7i7b.jl:13\ntest set: Error
    During Test at /tmp/tmpq7fv7i7b.jl:15\n  Test threw exception\n  Expression: candidate([-1,
    -2, -3]) == -6\n  MethodError: Cannot `convert` an object of type Nothing to an
    object of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::Ptr)
    where T<:Integer at ~/.conda/envs/polyglot/share/julia/base/pointer.jl:23\n    convert(::Type{T},
    !Matched::T) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/number.jl:6\n    convert(::Type{T},
    !Matched::Number) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/number.jl:7\n    ...\n  Stacktrace:\n   [1]
    minSubArraySum(nums::Vector{Int64})\n     @ Main /tmp/tmpq7fv7i7b.jl:8\n   [2]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpq7fv7i7b.jl:15 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpq7fv7i7b.jl:13\ntest set: E'
  timestamp: 1659822287
- exit_code: 0
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    \n    mss = []\n    for i =\
    \ 1:length(nums)\n        for j = i:length(nums)\n            push!(mss, sum(nums[i:j]))\n\
    \        end\n    end\n    return minimum(mss)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t\
    @test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3, 2, -10])\
    \ == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\t@test(candidate([0,\
    \ 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3, 10, -5]) == -6)\n\t\
    @test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10, 11,\
    \ 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\t\
    @test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659822283
- exit_code: 0
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    n = length(nums)\n    dp =\
    \ zeros(Int64, n)\n    dp[1] = nums[1]\n    for i in 2:n\n        dp[i] = min(dp[i-1]\
    \ + nums[i], nums[i])\n    end\n    return minimum(dp)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4])\
    \ == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3,\
    \ 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659822283
- exit_code: 0
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    n = length(nums)\n    if n\
    \ == 0\n        return 0\n    end\n    res = nums[1]\n    curr_sum = nums[1]\n\
    \    for i in 2:n\n        curr_sum = min(nums[i], curr_sum + nums[i])\n     \
    \   res = min(res, curr_sum)\n    end\n    return res\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4])\
    \ == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3,\
    \ 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659822283
- exit_code: 0
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    \n    # initialize an array\
    \ to store the minimum sum for each index\n    minimum_sums = Vector{Int64}(undef,\
    \ length(nums))\n    \n    # initialize the first element in minimum_sums to the\
    \ first element in nums\n    minimum_sums[1] = nums[1]\n    \n    # iterate through\
    \ each element in nums and compute the minimum sum\n    for i in 2:length(nums)\n\
    \        minimum_sums[i] = min(minimum_sums[i-1] + nums[i], nums[i])\n    end\n\
    \    \n    # return the minimum sum\n    return minimum(minimum_sums)\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659822283
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    min_ending_here, min_so_far\
    \ = 0, 1.0e10\n    for num in nums\n        min_ending_here = min(0, min_ending_here\
    \ + num)\n        min_so_far = min(min_so_far, min_ending_here)\n    end\n   \
    \ return min_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\
    \t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) ==\
    \ -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 8 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpsfwll7al.jl:16

    '
  stdout: "test set: Test Failed at /tmp/tmpsfwll7al.jl:19\n  Expression: candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpsfwll7al.jl:19 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpsfwll7al.jl:18\ntest set: Test Failed at /tmp/tmpsfwll7al.jl:22\n\
    \  Expression: candidate([-9999999999999999]) == -9999999999999999\n   Evaluated:\
    \ -10000000000000000 == -9999999999999999\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpsfwll7al.jl:22 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpsfwll7al.jl:18\ntest set: Test Failed at /tmp/tmpsfwll7al.jl:26\n\
    \  Expression: candidate([10, 11, 13, 8, 3, 4]) == 3\n   Evaluated: 0 == 3\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsfwll7al.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsfwll7al.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpsfwll7al.jl:29\n  Expression: candidate([7]) == 7\n   Evaluated:\
    \ 0 == 7\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsfwll7al.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsfwll7al.jl:18\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    8     4     12\n"
  timestamp: 1659822286
- exit_code: 0
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    if !isempty(nums)\n       \
    \ mn = nums[1]\n        sum = nums[1]\n        for i in 2:length(nums)\n     \
    \       sum = min(nums[i], sum + nums[i])\n            mn = min(mn, sum)\n   \
    \     end\n        return mn\n    else\n        return 0\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659822283
- exit_code: -1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t\
    @test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3, 2, -10])\
    \ == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\t@test(candidate([0,\
    \ 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3, 10, -5]) == -6)\n\t\
    @test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10, 11,\
    \ 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\t\
    @test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpq7fv7i7b.jl:14\n  Test threw
    exception\n  Expression: candidate([2, 3, 4, 1, 2, 4]) == 1\n  MethodError: Cannot
    `convert` an object of type Nothing to an object of type Int64\n  Closest candidates
    are:\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer at ~/.conda/envs/polyglot/share/julia/base/pointer.jl:23\n    convert(::Type{T},
    !Matched::T) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/number.jl:6\n    convert(::Type{T},
    !Matched::Number) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/number.jl:7\n    ...\n  Stacktrace:\n   [1]
    minSubArraySum(nums::Vector{Int64})\n     @ Main /tmp/tmpq7fv7i7b.jl:8\n   [2]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpq7fv7i7b.jl:14 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpq7fv7i7b.jl:13\ntest set: Error
    During Test at /tmp/tmpq7fv7i7b.jl:15\n  Test threw exception\n  Expression: candidate([-1,
    -2, -3]) == -6\n  MethodError: Cannot `convert` an object of type Nothing to an
    object of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::Ptr)
    where T<:Integer at ~/.conda/envs/polyglot/share/julia/base/pointer.jl:23\n    convert(::Type{T},
    !Matched::T) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/number.jl:6\n    convert(::Type{T},
    !Matched::Number) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/number.jl:7\n    ...\n  Stacktrace:\n   [1]
    minSubArraySum(nums::Vector{Int64})\n     @ Main /tmp/tmpq7fv7i7b.jl:8\n   [2]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpq7fv7i7b.jl:15 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpq7fv7i7b.jl:13\ntest set: E'
  timestamp: 1659822287
- exit_code: -1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    sum = Inf\n    for i = 1:length(nums)\n\
    \        for j = i:length(nums)\n            sum = min(sum, sum(nums[i:j]))\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1,\
    \ -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  status: Timeout
  stderr: 'b''ERROR: '''
  stdout: 'b''test set: Error During Test at /tmp/tmpf0_q1hgj.jl:20\n  Test threw
    exception\n  Expression: candidate([2, 3, 4, 1, 2, 4]) == 1\n  MethodError: objects
    of type Float64 are not callable\n  Maybe you forgot to use an operator such as
    *, ^, %, / etc. ?\n  Stacktrace:\n   [1] minSubArraySum(nums::Vector{Int64})\n     @
    Main /tmp/tmpf0_q1hgj.jl:10\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpf0_q1hgj.jl:20 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpf0_q1hgj.jl:19\ntest set: Error
    During Test at /tmp/tmpf0_q1hgj.jl:21\n  Test threw exception\n  Expression: candidate([-1,
    -2, -3]) == -6\n  MethodError: objects of type Float64 are not callable\n  Maybe
    you forgot to use an operator such as *, ^, %, / etc. ?\n  Stacktrace:\n   [1]
    minSubArraySum(nums::Vector{Int64})\n     @ Main /tmp/tmpf0_q1hgj.jl:10\n   [2]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpf0_q1hgj.jl:21 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpf0_q1hgj.jl:19\ntest set: Error
    During Test at /tmp/tmpf0_q1hgj.jl:22\n  Test threw exception\n  Expression: candidate([-1,
    -2, -3, 2, -10]) == -14\n  MethodError: objects of type Float64 are not callable\n  Maybe
    you forgot to use an operator such as *, ^, %, / etc. ?\n  Stacktrace:\n   [1]
    minSubArraySum(nums::Vector{Int64})\n     @ Main /tmp/tmpf0_q1hgj.jl:10\n   [2]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpf0_q1hgj.jl:22 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpf0'
  timestamp: 1659822288
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    if length(nums) == 0\n    \
    \    return 0\n    end\n    minSum = Inf\n    sum = 0\n    for num in nums\n \
    \       sum += num\n        minSum = min(minSum, sum)\n        if sum > 0\n  \
    \          sum = 0\n        end\n    end\n    return minSum\nend\n@testset \"\
    Example Tests\" begin\n    @test minSubArraySum([1,2,3,4]) == 1\n    @test minSubArraySum([-1,-2,-3,-4])\
    \ == -10\n    @test minSubArraySum([-5,-5,-5,-5]) == -20\n    @test minSubArraySum([-2,1,-3,4,-1,2,1,-5,4])\
    \ == -6\n    @test minSubArraySum([0,0,0,0]) == 0\n    @test minSubArraySum([0])\
    \ == 0\n    @test minSubArraySum([1,2,3,0]) == 0\n    @test minSubArraySum([-1,2,0,0])\
    \ == -1\n    @test minSubArraySum([]) == 0\nend\n@testset \"Random Tests\" begin\n\
    \    @test minSubArraySum(rand(1:1000, rand(1:30))) >= -1000\nend\n \nusing Test\n\
    \n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1,\
    \ 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: UndefVarError: @testset not defined

    in expression starting at /tmp/tmpgzp8ciqx.jl:21

    in expression starting at /tmp/tmpgzp8ciqx.jl:21

    '
  stdout: ''
  timestamp: 1659822284
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    return -1\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1,\
    \ 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 11 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp5lfid_6u.jl:11

    '
  stdout: "test set: Test Failed at /tmp/tmp5lfid_6u.jl:14\n  Expression: candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1\n   Evaluated: -1 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp5lfid_6u.jl:14 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp5lfid_6u.jl:13\ntest set: Test Failed at /tmp/tmp5lfid_6u.jl:15\n\
    \  Expression: candidate([-1, -2, -3]) == -6\n   Evaluated: -1 == -6\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5lfid_6u.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5lfid_6u.jl:13\ntest set: Test\
    \ Failed at /tmp/tmp5lfid_6u.jl:16\n  Expression: candidate([-1, -2, -3, 2, -10])\
    \ == -14\n   Evaluated: -1 == -14\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5lfid_6u.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5lfid_6u.jl:13\ntest set: Test\
    \ Failed at /tmp/tmp5lfid_6u.jl:17\n  Expression: candidate([-9999999999999999])\
    \ == -9999999999999999\n   Evaluated: -1 == -9999999999999999\nStacktrace:\n [1]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5lfid_6u.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5lfid_6u.jl:13\ntest set: Test\
    \ Failed at /tmp/tmp5lfid_6u.jl:18\n  Expression: candidate([0, 10, 20, 1000000])\
    \ == 0\n   Evaluated: -1 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.j"
  timestamp: 1659822286
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    n = length(nums)\n    sum_till_i\
    \ = Vector{Int64}(undef, n)\n    sum_till_i[1] = nums[1]\n    for i in 2:n\n \
    \       sum_till_i[i] = sum_till_i[i-1] + nums[i]\n    end\n    return minimum(sum_till_i)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxwh20jtt.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpxwh20jtt.jl:20\n  Expression: candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1\n   Evaluated: 2 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpxwh20jtt.jl:20 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpxwh20jtt.jl:19\ntest set: Test Failed at /tmp/tmpxwh20jtt.jl:26\n\
    \  Expression: candidate([100, -1, -2, -3, 10, -5]) == -6\n   Evaluated: 94 ==\
    \ -6\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxwh20jtt.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxwh20jtt.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpxwh20jtt.jl:27\n  Expression: candidate([10, 11, 13, 8, 3,\
    \ 4]) == 3\n   Evaluated: 10 == 3\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxwh20jtt.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxwh20jtt.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpxwh20jtt.jl:28\n  Expression: candidate([100, -33, 32, -1,\
    \ 0, -2]) == -33\n   Evaluated: 67 == -33\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpxwh20jtt.jl:28 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpxwh20jtt.jl:19\ntest set: Test Failed at /tmp/tmpxwh20jtt.jl:31\n\
    \  Expression: candidate([1, -1]) == -1\n   Evaluated: 0 == -1\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macr"
  timestamp: 1659822286
- exit_code: 0
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    # Calculate the minimum subarray\
    \ sum\n    # For example:\n    # [1, -1, 4, 3, -2, 4]\n    # min_current = min_total\
    \ = 1\n    # min_current = min(1, 0) = 0\n    # min_total = min(0, 1) = 0\n  \
    \  # min_current = min(0, 3) = 3\n    # min_total = min(3, 0) = 0\n    # min_current\
    \ = min(0, 1) = 1\n    # min_total = min(1, 0) = 0\n    #\n    # ans = 0\n   \
    \ min_current = min_total = nums[1]\n    for index in 2:length(nums)\n       \
    \ min_current = min(nums[index], min_current + nums[index])\n        min_total\
    \ = min(min_total, min_current)\n    end\n    return min_total\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1,\
    \ 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659822284
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    cur = 0\n    minSum = Inf\n\
    \    for num in nums\n        cur += num\n        minSum = min(minSum, cur)\n\
    \        cur = max(cur, 0)\n    end\n    return minSum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4])\
    \ == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3,\
    \ 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 9 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp35npsadp.jl:18

    '
  stdout: "test set: Test Failed at /tmp/tmp35npsadp.jl:21\n  Expression: candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1\n   Evaluated: 2 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp35npsadp.jl:21 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp35npsadp.jl:20\ntest set: Test Failed at /tmp/tmp35npsadp.jl:22\n\
    \  Expression: candidate([-1, -2, -3]) == -6\n   Evaluated: -3 == -6\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp35npsadp.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp35npsadp.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp35npsadp.jl:23\n  Expression: candidate([-1, -2, -3, 2, -10])\
    \ == -14\n   Evaluated: -8 == -14\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp35npsadp.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp35npsadp.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp35npsadp.jl:24\n  Expression: candidate([-9999999999999999])\
    \ == -9999999999999999\n   Evaluated: -10000000000000000 == -9999999999999999\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp35npsadp.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp35npsadp.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp35npsadp.jl:26\n  Expression: candidate([-1, -2, -3, 10, -5])\
    \ == -6\n   Evaluated: -3 == -6\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1."
  timestamp: 1659822286
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    min_sum = Int64(Inf)\n    current_sum\
    \ = 0\n    for i = 1:length(nums)\n        current_sum += nums[i]\n        if\
    \ current_sum < min_sum\n            min_sum = current_sum\n        end\n    \
    \    if current_sum > 0\n            current_sum = 0\n        end\n    end\n \
    \   return min_sum\nend\nprintln(minSubArraySum([3, -5, 2, -3, 1]))\nusing Test\n\
    \n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1,\
    \ 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: InexactError: Int64(Inf)\nStacktrace:\n [1] Int64(x::Float64)\n\
    \   @ Base ./float.jl:812\n [2] minSubArraySum(nums::Vector{Int64})\n   @ Main\
    \ /tmp/tmpxnceum1c.jl:7\n [3] top-level scope\n   @ /tmp/tmpxnceum1c.jl:20\nin\
    \ expression starting at /tmp/tmpxnceum1c.jl:20\n"
  stdout: ''
  timestamp: 1659822286
- exit_code: 0
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    \"\"\"\n    Minimum Subarray\
    \ Sum\n    Given an array of integers nums, find the minimum sum of any non-empty\
    \ sub-array\n    of nums.\n    Example\n            \"\"\"\n    n = length(nums)\n\
    \    sub_sum = nums[1]\n    min_sum = nums[1]\n    for i in 2:n\n        sub_sum\
    \ = min(nums[i], nums[i] + sub_sum)\n        min_sum = min(min_sum, sub_sum)\n\
    \    end\n    return min_sum\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1,\
    \ -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659822284
- exit_code: 0
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    if length(nums) == 0\n    \
    \    return 0\n    end\n    if length(nums) == 1\n        return nums[1]\n   \
    \ end\n    min_sum = nums[1]\n    local_sum = 0\n    for i in nums\n        local_sum\
    \ += i\n        if local_sum < min_sum\n            min_sum = local_sum\n    \
    \    end\n        if local_sum > 0\n            local_sum = 0\n        end\n \
    \   end\n    return min_sum\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1,\
    \ -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659822284
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    m, s = Inf, Inf\n    for i\
    \ in 1:length(nums)\n        s = min(s, 0)\n        s += nums[i]\n        m =\
    \ min(m, s)\n    end\n    return m\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1,\
    \ -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 11 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp8s68p7np.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmp8s68p7np.jl:23\n  Expression: candidate([-9999999999999999])\
    \ == -9999999999999999\n   Evaluated: -10000000000000000 == -9999999999999999\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8s68p7np.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8s68p7np.jl:19\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     1     12\n"
  timestamp: 1659822286
- exit_code: 0
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    min_sum = typemax(Int64)\n\
    \    sum = 0\n    for i in 1:length(nums)\n        sum += nums[i]\n        if\
    \ sum < min_sum\n            min_sum = sum\n        end\n        if sum > 0\n\
    \            sum = 0\n        end\n    end\n    return min_sum\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1,\
    \ 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659822284
- exit_code: 0
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    result = nums[1]\n    local_sum\
    \ = nums[1]\n    for i in 2:length(nums)\n        local_sum = min(nums[i], nums[i]\
    \ + local_sum)\n        result = min(result, local_sum)\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659822284
- exit_code: 0
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    a = []\n    for i = 1:length(nums)\n\
    \        sum = 0\n        for j = i:length(nums)\n            sum += nums[j]\n\
    \            push!(a, sum)\n        end\n    end\n    return minimum(a)\nend\n\
    # Test1\nminSubArraySum([1,3,4,5,6,0,7,8,9])\nusing Test\n\n@testset begin\n\n\
    candidate = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1,\
    \ -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659822285
- exit_code: 0
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    m = nums[1]\n    for i in 1:length(nums)\n\
    \        s = 0\n        for j in i:length(nums)\n            s += nums[j]\n  \
    \          m = min(m, s)\n        end\n    end\n    return m\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1,\
    \ 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659822285
- exit_code: 0
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    \"\"\"\n    Given an array\
    \ of integers nums, find the minimum sum of any non-empty sub-array\n    of nums.\n\
    \    Example\n    Input: nums = [2,3,1,2,4,3]\n    Output: 7\n    Explanation:\
    \ The minimum sub-array [4,3] has sum 4.\n    \"\"\"\n    size = length(nums)\n\
    \    sum_so_far = nums[1]\n    min_sum = nums[1]\n    for i in 2:size\n      \
    \  sum_so_far = min(nums[i], nums[i] + sum_so_far)\n        min_sum = min(min_sum,\
    \ sum_so_far)\n    end\n    return min_sum\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t\
    @test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3, 2, -10])\
    \ == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\t@test(candidate([0,\
    \ 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3, 10, -5]) == -6)\n\t\
    @test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10, 11,\
    \ 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\t\
    @test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659822285
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    min_sum = 0\n    curr_sum =\
    \ 0\n    if sum(nums) < 0\n        return sum(nums)\n    end\n    min_sum = Inf\n\
    \    for i in 1:length(nums)\n        curr_sum += nums[i]\n        if curr_sum\
    \ < min_sum\n            min_sum = curr_sum\n        end\n        if curr_sum\
    \ > 0\n            curr_sum = 0\n        end\n    end\n    return min_sum\nend\n\
    using Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 11 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpstxszwrn.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmpstxszwrn.jl:34\n  Expression: candidate([-1,\
    \ -2, -3, 10, -5]) == -6\n   Evaluated: -1 == -6\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpstxszwrn.jl:34 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpstxszwrn.jl:28\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |   11     1     12\n"
  timestamp: 1659822287
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    min_sum = Inf\n    min_sum_so_far\
    \ = 0\n    for num in nums\n        min_sum_so_far += num\n        min_sum = min(min_sum,\
    \ min_sum_so_far)\n        min_sum_so_far = min(min_sum_so_far, 0)\n    end\n\
    \    return min_sum\nend\nusing Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\
    \t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) ==\
    \ -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 11 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpw9fexqr3.jl:18

    '
  stdout: "test set: Test Failed at /tmp/tmpw9fexqr3.jl:24\n  Expression: candidate([-9999999999999999])\
    \ == -9999999999999999\n   Evaluated: -10000000000000000 == -9999999999999999\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpw9fexqr3.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpw9fexqr3.jl:20\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     1     12\n"
  timestamp: 1659822287
- exit_code: 0
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    min_sum::Int64 = Int64(0)\n\
    \    sum::Int64 = 0\n    min_sum = nums[1]\n    for i in 1:length(nums)\n    \
    \    sum += nums[i]\n        if sum < min_sum\n            min_sum = sum\n   \
    \     end\n        if sum > 0\n            sum = 0\n        end\n    end\n   \
    \ return min_sum\nend\nusing Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\
    \t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) ==\
    \ -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659822285
- exit_code: 0
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    minimum_sum = nums[1]\n   \
    \ sum = 0\n    for i in 1:length(nums)\n        sum += nums[i]\n        if sum\
    \ < minimum_sum\n            minimum_sum = sum\n        end\n        if sum >\
    \ 0\n            sum = 0\n        end\n    end\n    return minimum_sum\nend\n\
    using Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659822285
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    cum_sum_idx_dict = Dict{Int64,\
    \ Int64}()\n    cum_sum = 0\n    min_sum = typemax(Int64)\n    for i in 1:length(nums)\n\
    \        cum_sum += nums[i]\n        if cum_sum == 0\n            min_sum = 0\n\
    \            break\n        end\n        cum_sum_idx_dict[cum_sum] = i\n     \
    \   for j in keys(cum_sum_idx_dict)\n            if cum_sum - j < min_sum\n  \
    \              min_sum = cum_sum - j\n            end\n        end\n    end\n\
    \    return min_sum\nend\nusing Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\
    \t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) ==\
    \ -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 9 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp8pugfis3.jl:27

    '
  stdout: "test set: Test Failed at /tmp/tmp8pugfis3.jl:30\n  Expression: candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp8pugfis3.jl:30 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp8pugfis3.jl:29\ntest set: Test Failed at /tmp/tmp8pugfis3.jl:31\n\
    \  Expression: candidate([-1, -2, -3]) == -6\n   Evaluated: -5 == -6\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8pugfis3.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8pugfis3.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp8pugfis3.jl:32\n  Expression: candidate([-1, -2, -3, 2, -10])\
    \ == -14\n   Evaluated: -13 == -14\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8pugfis3.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8pugfis3.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp8pugfis3.jl:33\n  Expression: candidate([-9999999999999999])\
    \ == -9999999999999999\n   Evaluated: 0 == -9999999999999999\nStacktrace:\n [1]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8pugfis3.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8pugfis3.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp8pugfis3.jl:35\n  Expression: candidate([-1, -2, -3, 10, -5])\
    \ == -6\n   Evaluated: -5 == -6\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test."
  timestamp: 1659822288
- exit_code: 0
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    n = length(nums)\n    best\
    \ = sum(nums)\n    for i in 1:n \n        current_sum = 0\n        for j in i:n\
    \ \n            current_sum += nums[j]\n            best = min(best, current_sum)\n\
    \        end\n    end\n    return best\nend\nusing Test\n\n@testset begin\n\n\
    candidate = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1,\
    \ -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659822285
- exit_code: 0
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    total = zero(Int64)\n    min_total\
    \ = Int64(typemax(Int64))\n    for i in nums\n        total += i\n        if total\
    \ < min_total\n            min_total = total\n        end\n        if total >\
    \ zero(Int64)\n            total = zero(Int64)\n        end\n    end\n    return\
    \ min_total\nend\nusing Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\
    \t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) ==\
    \ -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659822285
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    return reduce(+, nums)\nend\n\
    using Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 7 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpl2cdvq03.jl:11

    '
  stdout: "test set: Test Failed at /tmp/tmpl2cdvq03.jl:14\n  Expression: candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1\n   Evaluated: 16 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpl2cdvq03.jl:14 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpl2cdvq03.jl:13\ntest set: Test Failed at /tmp/tmpl2cdvq03.jl:18\n\
    \  Expression: candidate([0, 10, 20, 1000000]) == 0\n   Evaluated: 1000030 ==\
    \ 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpl2cdvq03.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpl2cdvq03.jl:13\ntest set: Test\
    \ Failed at /tmp/tmpl2cdvq03.jl:19\n  Expression: candidate([-1, -2, -3, 10, -5])\
    \ == -6\n   Evaluated: -1 == -6\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpl2cdvq03.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpl2cdvq03.jl:13\ntest set: Test\
    \ Failed at /tmp/tmpl2cdvq03.jl:20\n  Expression: candidate([100, -1, -2, -3,\
    \ 10, -5]) == -6\n   Evaluated: 99 == -6\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpl2cdvq03.jl:20 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpl2cdvq03.jl:13\ntest set: Test Failed at /tmp/tmpl2cdvq03.jl:21\n\
    \  Expression: candidate([10, 11, 13, 8, 3, 4]) == 3\n   Evaluated: 49 == 3\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined"
  timestamp: 1659822288
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    \"\"\"\n    Params:\n    -\
    \ nums: 1D array of integers\n    Returns:\n    - the minimum sum of any non-empty\
    \ sub-array of nums.\n    \"\"\"\n    minval = typemax(Int64)\n    curr_sum =\
    \ 0\n    for num in nums\n        curr_sum += num\n        minval = min(minval,\
    \ curr_sum)\n        curr_sum = max(curr_sum, 0)\n    end\n    return minval\n\
    end\n\"\"\"\n    Constraints:\n    1. `nums.length == nums.length == n`\n    2.\
    \ `-1000 <= nums[i] <= 1000`\n    3. `for all i != j, nums[i] != nums[j]`\n  \
    \  \"\"\"\nnums = [-5, -3, -1, 1, 2, 4, 9]\n@test minSubArraySum(nums) == -3\n\
    using Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: UndefVarError: @test not defined

    in expression starting at /tmp/tmpo50srd73.jl:29

    in expression starting at /tmp/tmpo50srd73.jl:29

    '
  stdout: ''
  timestamp: 1659822286
- exit_code: 0
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    minSum = typemax(Int64) \n\
    \    currSum = 0\n    for i = 1:length(nums)\n        currSum += nums[i]\n   \
    \     if currSum < minSum\n            minSum = currSum\n        end\n       \
    \ if currSum > 0\n            currSum = 0\n        end\n    end\n    return minSum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659822286
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    if isempty(nums)\n        return\
    \ 0\n    end\n    minimum_sum, current_sum = Inf, 0\n    for i in nums\n     \
    \   current_sum += i\n        minimum_sum = min(minimum_sum, current_sum)\n  \
    \      current_sum = max(current_sum, 0)\n    end\n    return minimum_sum\nend\n\
    using Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 9 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmptc5ilzta.jl:20

    '
  stdout: "test set: Test Failed at /tmp/tmptc5ilzta.jl:23\n  Expression: candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1\n   Evaluated: 2 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmptc5ilzta.jl:23 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmptc5ilzta.jl:22\ntest set: Test Failed at /tmp/tmptc5ilzta.jl:24\n\
    \  Expression: candidate([-1, -2, -3]) == -6\n   Evaluated: -3 == -6\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptc5ilzta.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptc5ilzta.jl:22\ntest set: Test\
    \ Failed at /tmp/tmptc5ilzta.jl:25\n  Expression: candidate([-1, -2, -3, 2, -10])\
    \ == -14\n   Evaluated: -8 == -14\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptc5ilzta.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptc5ilzta.jl:22\ntest set: Test\
    \ Failed at /tmp/tmptc5ilzta.jl:26\n  Expression: candidate([-9999999999999999])\
    \ == -9999999999999999\n   Evaluated: -10000000000000000 == -9999999999999999\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptc5ilzta.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptc5ilzta.jl:22\ntest set: Test\
    \ Failed at /tmp/tmptc5ilzta.jl:28\n  Expression: candidate([-1, -2, -3, 10, -5])\
    \ == -6\n   Evaluated: -3 == -6\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1."
  timestamp: 1659822288
- exit_code: 0
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    # Assuming there is at least\
    \ one element in the array\n    answer = nums[1]\n    current_min = nums[1]\n\
    \    for i in 2:length(nums)\n        current_min = min(nums[i], current_min +\
    \ nums[i])\n        answer = min(answer, current_min)\n    end\n    return answer\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659822286
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    n = length(nums)\n    sum_\
    \ = nums[1]\n    min_sum = sum_\n    l = 1\n    for r in 2:n\n        sum_ +=\
    \ nums[r]\n        while sum_ > 0\n            sum_ -= nums[l]\n            l\
    \ += 1\n        end\n        min_sum = min(min_sum, sum_)\n    end\n    return\
    \ min_sum\nend\nusing Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\t\
    @test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) ==\
    \ -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 9 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpc2l0t6ui.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmpc2l0t6ui.jl:26\n  Expression: candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpc2l0t6ui.jl:26 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpc2l0t6ui.jl:25\ntest set: Test Failed at /tmp/tmpc2l0t6ui.jl:33\n\
    \  Expression: candidate([10, 11, 13, 8, 3, 4]) == 3\n   Evaluated: 0 == 3\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpc2l0t6ui.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpc2l0t6ui.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpc2l0t6ui.jl:37\n  Expression: candidate([1, -1]) == -1\n \
    \  Evaluated: 0 == -1\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpc2l0t6ui.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpc2l0t6ui.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    9     3     12\n"
  timestamp: 1659822288
- exit_code: 0
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    @show nums\n    minSum = nums[1]\n\
    \    currSum = nums[1]\n    for i in 2:length(nums)\n        currSum = min(nums[i],\
    \ currSum + nums[i])\n        minSum = min(minSum, currSum)\n    end\n    return\
    \ minSum\nend\nusing Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\t\
    @test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) ==\
    \ -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  status: OK
  stderr: 'nums = [2, 3, 4, 1, 2, 4]

    nums = [-1, -2, -3]

    nums = [-1, -2, -3, 2, -10]

    nums = [-9999999999999999]

    nums = [0, 10, 20, 1000000]

    nums = [-1, -2, -3, 10, -5]

    nums = [100, -1, -2, -3, 10, -5]

    nums = [10, 11, 13, 8, 3, 4]

    nums = [100, -33, 32, -1, 0, -2]

    nums = [-10]

    nums = [7]

    nums = [1, -1]

    Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659822286
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    _min = Inf\n    sum = 0\n \
    \   for i in nums\n        sum += i\n        _min = min(_min, sum)\n        if\
    \ sum > 0\n            sum = 0\n        end\n    end\n    return _min\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 11 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmppypxp3_n.jl:20

    '
  stdout: "test set: Test Failed at /tmp/tmppypxp3_n.jl:26\n  Expression: candidate([-9999999999999999])\
    \ == -9999999999999999\n   Evaluated: -10000000000000000 == -9999999999999999\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppypxp3_n.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppypxp3_n.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     1     12\n"
  timestamp: 1659822288
- exit_code: 0
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    min_sum = Inf\n    sum = 0\
    \ \n    for i = 1:length(nums)\n        sum += nums[i]\n        if sum < min_sum\n\
    \            min_sum = sum\n        end\n        if sum > 0\n            sum =\
    \ 0\n        end\n    end\n    return min_sum\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t\
    @test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3, 2, -10])\
    \ == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\t@test(candidate([0,\
    \ 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3, 10, -5]) == -6)\n\t\
    @test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10, 11,\
    \ 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\t\
    @test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659822286
- exit_code: 0
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    minSum = typemax(Int64)\n \
    \   currentSum = 0\n    for i in 1:length(nums)\n        currentSum += nums[i]\n\
    \        if currentSum < minSum\n            minSum = currentSum\n        end\n\
    \        if currentSum > 0\n            currentSum = 0\n        end\n    end\n\
    \    return minSum\nend\nusing Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\
    \t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) ==\
    \ -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659822286
- exit_code: 0
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    min_sum::Int64 = nums[1]\n\
    \    curr_sum::Int64 = nums[1]\n    for i in 2:length(nums)\n        curr_sum\
    \ = min(nums[i], curr_sum + nums[i])\n        min_sum = min(min_sum, curr_sum)\n\
    \    end\n    return min_sum\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1,\
    \ -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659822286
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    @assert length(nums) >= 1 #\
    \ First we check that the input is not empty.\n    n = length(nums) # n is the\
    \ length of the input\n    mss = nums[1] # mss is the minimal sub-array sum\n\
    \    css = nums[1] # css is the current sub-array sum\n    for i = 2:n # We iterate\
    \ the array from position 2 to n\n        if css > 0 # If the current sub-array\
    \ sum is positive \n            css += nums[i] # We add the next term\n      \
    \  else # Otherwise\n            css = nums[i] # We change the current sub-array\
    \ sum to the next term\n        end\n        if css < mss # If the current sub-array\
    \ sum is smaller than the minimal\n            mss = css # We change the minimal\
    \ sub-array sum\n        end\n    end\n    return mss # We return the answer\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 8 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp1wpecavq.jl:25

    '
  stdout: "test set: Test Failed at /tmp/tmp1wpecavq.jl:28\n  Expression: candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1\n   Evaluated: 2 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp1wpecavq.jl:28 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp1wpecavq.jl:27\ntest set: Test Failed at /tmp/tmp1wpecavq.jl:29\n\
    \  Expression: candidate([-1, -2, -3]) == -6\n   Evaluated: -3 == -6\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1wpecavq.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1wpecavq.jl:27\ntest set: Test\
    \ Failed at /tmp/tmp1wpecavq.jl:30\n  Expression: candidate([-1, -2, -3, 2, -10])\
    \ == -14\n   Evaluated: -8 == -14\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1wpecavq.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1wpecavq.jl:27\ntest set: Test\
    \ Failed at /tmp/tmp1wpecavq.jl:33\n  Expression: candidate([-1, -2, -3, 10, -5])\
    \ == -6\n   Evaluated: -3 == -6\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1wpecavq.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1wpecavq.jl:27\ntest set: Test\
    \ Failed at /tmp/tmp1wpecavq.jl:34\n  Expression: candidate([100, -1, -2, -3,\
    \ 10, -5]) == -6\n   Evaluated: 94 == -6\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] ma"
  timestamp: 1659822289
- exit_code: 0
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    min_sum = nums[1]\n    temp_sum\
    \ = 0\n    for num in nums\n        temp_sum += num\n        if temp_sum < min_sum\n\
    \            min_sum = temp_sum\n        end\n        if temp_sum > 0\n      \
    \      temp_sum = 0\n        end\n    end\n    return min_sum\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1,\
    \ 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659822286
- exit_code: 0
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    \n    minimumSum = Inf\n  \
    \  # calculate the minimum sum of each sub-array\n    for i = 1:length(nums)\n\
    \        for j = i:length(nums)\n            sumOfSubArray = sum(nums[i:j])\n\
    \            if sumOfSubArray < minimumSum\n                minimumSum = sumOfSubArray\n\
    \            end\n        end\n    end\n    return minimumSum\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1,\
    \ 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659822287
- exit_code: 0
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    min_ending_here = nums[1]\n\
    \    min_so_far = nums[1]\n    for i in 2:length(nums)\n        min_ending_here\
    \ = min(nums[i], min_ending_here + nums[i])\n        min_so_far = min(min_so_far,\
    \ min_ending_here)\n    end\n    return min_so_far\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4])\
    \ == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3,\
    \ 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659822287
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    n = length(nums)\n    cumulative_sum\
    \ = 0\n    minimum_sum = Inf\n    for i in 1:n\n        cumulative_sum += nums[i]\n\
    \        minimum_sum = min(minimum_sum, cumulative_sum)\n        if cumulative_sum\
    \ > 0\n            cumulative_sum = 0\n        end\n    end\n    return minimum_sum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 11 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpf2s9yl2b.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpf2s9yl2b.jl:27\n  Expression: candidate([-9999999999999999])\
    \ == -9999999999999999\n   Evaluated: -10000000000000000 == -9999999999999999\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpf2s9yl2b.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpf2s9yl2b.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     1     12\n"
  timestamp: 1659822289
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    mx = nums[1]\n    n = length(nums)\n\
    \    total = 0\n    for i in 1:n\n        total += nums[i]\n        mx = max(mx,\
    \ total)\n        if total < 0\n            total = 0\n        end\n    end\n\
    \    return mx\nend\nusing Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\
    \t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) ==\
    \ -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 9 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpzqzrjfcd.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpzqzrjfcd.jl:24\n  Expression: candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1\n   Evaluated: 16 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpzqzrjfcd.jl:24 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpzqzrjfcd.jl:23\ntest set: Test Failed at /tmp/tmpzqzrjfcd.jl:25\n\
    \  Expression: candidate([-1, -2, -3]) == -6\n   Evaluated: -1 == -6\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzqzrjfcd.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzqzrjfcd.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpzqzrjfcd.jl:26\n  Expression: candidate([-1, -2, -3, 2, -10])\
    \ == -14\n   Evaluated: 2 == -14\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzqzrjfcd.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzqzrjfcd.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpzqzrjfcd.jl:28\n  Expression: candidate([0, 10, 20, 1000000])\
    \ == 0\n   Evaluated: 1000030 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzqzrjfcd.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzqzrjfcd.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpzqzrjfcd.jl:29\n  Expression: candidate([-1, -2, -3, 10, -5])\
    \ == -6\n   Evaluated: 10 == -6\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macr"
  timestamp: 1659822289
- exit_code: 0
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    minsum = Inf\n    cursum =\
    \ 0\n    for i in nums\n        cursum += i\n        if cursum < minsum\n    \
    \        minsum = cursum\n        end\n        if cursum > 0\n            cursum\
    \ = 0\n        end\n    end\n    return minsum\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t\
    @test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3, 2, -10])\
    \ == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\t@test(candidate([0,\
    \ 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3, 10, -5]) == -6)\n\t\
    @test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10, 11,\
    \ 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\t\
    @test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659822287
- exit_code: 0
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    curr_sum = nums[1]\n    min_sum\
    \ = nums[1]\n    for i = 2:length(nums)\n        if curr_sum > 0\n           \
    \ curr_sum = nums[i]\n        else\n            curr_sum += nums[i]\n        end\n\
    \        min_sum = min(min_sum, curr_sum)\n    end\n    return min_sum\nend\n\
    using Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659822287
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    if sum(nums) == minimum(nums)\
    \ \n        return sum(nums)\n    end \n    min_sum = nums[1]\n    curr_sum =\
    \ nums[1] \n    for i in 2:length(nums) \n        curr_sum = max(nums[i], curr_sum\
    \ + nums[i])\n        min_sum = min(min_sum, curr_sum)\n    end \n    return min_sum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 8 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp2g3x5kwi.jl:20

    '
  stdout: "test set: Test Failed at /tmp/tmp2g3x5kwi.jl:23\n  Expression: candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1\n   Evaluated: 2 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp2g3x5kwi.jl:23 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp2g3x5kwi.jl:22\ntest set: Test Failed at /tmp/tmp2g3x5kwi.jl:24\n\
    \  Expression: candidate([-1, -2, -3]) == -6\n   Evaluated: -3 == -6\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2g3x5kwi.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2g3x5kwi.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp2g3x5kwi.jl:25\n  Expression: candidate([-1, -2, -3, 2, -10])\
    \ == -14\n   Evaluated: -8 == -14\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2g3x5kwi.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2g3x5kwi.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp2g3x5kwi.jl:28\n  Expression: candidate([-1, -2, -3, 10, -5])\
    \ == -6\n   Evaluated: -3 == -6\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2g3x5kwi.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2g3x5kwi.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp2g3x5kwi.jl:29\n  Expression: candidate([100, -1, -2, -3,\
    \ 10, -5]) == -6\n   Evaluated: 94 == -6\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] ma"
  timestamp: 1659822289
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    min_sum = Inf\n    min_sum_here\
    \ = 0\n    for x in nums\n        min_sum_here = min(x, min_sum_here + x)\n  \
    \      min_sum = min(min_sum, min_sum_here)\n    end\n    return min_sum\nend\n\
    using Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 11 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp2q0iib4e.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmp2q0iib4e.jl:23\n  Expression: candidate([-9999999999999999])\
    \ == -9999999999999999\n   Evaluated: -10000000000000000 == -9999999999999999\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2q0iib4e.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2q0iib4e.jl:19\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     1     12\n"
  timestamp: 1659822289
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    minimum::Int64 = 0\n    for\
    \ i in 1:length(nums)\n        for j in i:length(nums)\n            sub_array::Vector{Int64}\
    \ = nums[i:j]\n            minimum = sum(sub_array) < minimum ? sum(sub_array)\
    \ : minimum\n        end\n    end\n    return minimum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4])\
    \ == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3,\
    \ 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 9 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp7en3zcqu.jl:18

    '
  stdout: "test set: Test Failed at /tmp/tmp7en3zcqu.jl:21\n  Expression: candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp7en3zcqu.jl:21 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp7en3zcqu.jl:20\ntest set: Test Failed at /tmp/tmp7en3zcqu.jl:28\n\
    \  Expression: candidate([10, 11, 13, 8, 3, 4]) == 3\n   Evaluated: 0 == 3\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7en3zcqu.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7en3zcqu.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp7en3zcqu.jl:31\n  Expression: candidate([7]) == 7\n   Evaluated:\
    \ 0 == 7\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7en3zcqu.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7en3zcqu.jl:20\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    9     3     12\n"
  timestamp: 1659822289
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    min_sum = Inf\n    N = length(nums)\n\
    \    for i in 1:N\n        curr_sum = 0\n        for j in i:N\n            curr_sum\
    \ += nums[j]\n            min_sum = min(min_sum, curr_sum)\n        end\n    end\n\
    \    return min_sum\nend\nusing Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\
    \t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) ==\
    \ -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 11 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp6yae8rui.jl:20

    '
  stdout: "test set: Test Failed at /tmp/tmp6yae8rui.jl:26\n  Expression: candidate([-9999999999999999])\
    \ == -9999999999999999\n   Evaluated: -10000000000000000 == -9999999999999999\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6yae8rui.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6yae8rui.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     1     12\n"
  timestamp: 1659822289
- exit_code: -1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    min_so_far = Inf\n    min_ending_here\
    \ = 0\n    for i in nums\n        min_ending_here = minimum(min_ending_here +\
    \ i, 0)\n        min_so_far = minimum(min_so_far, min_ending_here)\n    end\n\
    \    return min_so_far\nend\nprintln(minSubArraySum([-3, -2, -1, -4]))\n \nusing\
    \ Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: Timeout
  stderr: 'b''ERROR: LoadError: MethodError: objects of type Int64 are not callable\nMaybe
    you forgot to use an operator such as '''
  stdout: None
  timestamp: 1659822292
- exit_code: 0
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    \n    m, s = Int64(typemax(Int64)),\
    \ 0\n    for i in 1:length(nums)\n        s += nums[i]\n        m = min(m, s)\n\
    \        if s > 0\n            s = 0\n        end\n    end\n    return m\nend\n\
    using Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659822287
- exit_code: 0
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    min_so_far = nums[1]\n    min_curr\
    \ = nums[1]\n    for i in 2:length(nums)\n        min_curr = min(nums[i], nums[i]\
    \ + min_curr)\n        min_so_far = min(min_so_far, min_curr)\n    end\n    return\
    \ min_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\
    \t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) ==\
    \ -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659822287
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    min_sum, sum = Inf, 0\n   \
    \ for num in nums\n        sum += num\n        min_sum = min(min_sum, sum)\n \
    \       sum = max(sum, 0)\n    end\n    return min_sum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4])\
    \ == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3,\
    \ 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 9 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpsrnbq7co.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpsrnbq7co.jl:20\n  Expression: candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1\n   Evaluated: 2 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpsrnbq7co.jl:20 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpsrnbq7co.jl:19\ntest set: Test Failed at /tmp/tmpsrnbq7co.jl:21\n\
    \  Expression: candidate([-1, -2, -3]) == -6\n   Evaluated: -3 == -6\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsrnbq7co.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsrnbq7co.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpsrnbq7co.jl:22\n  Expression: candidate([-1, -2, -3, 2, -10])\
    \ == -14\n   Evaluated: -8 == -14\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsrnbq7co.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsrnbq7co.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpsrnbq7co.jl:23\n  Expression: candidate([-9999999999999999])\
    \ == -9999999999999999\n   Evaluated: -10000000000000000 == -9999999999999999\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsrnbq7co.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsrnbq7co.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpsrnbq7co.jl:25\n  Expression: candidate([-1, -2, -3, 10, -5])\
    \ == -6\n   Evaluated: -3 == -6\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1."
  timestamp: 1659822290
- exit_code: 0
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    dp = fill(typemax(Int64), size(nums))\n\
    \    dp[1] = nums[1]\n    for i = 2:length(nums)\n        dp[i] = min(dp[i-1],\
    \ 0) + nums[i]\n    end\n    return minimum(dp)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t\
    @test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3, 2, -10])\
    \ == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\t@test(candidate([0,\
    \ 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3, 10, -5]) == -6)\n\t\
    @test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10, 11,\
    \ 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\t\
    @test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659822288
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    nums = sort(nums)\n    return\
    \ nums[1]\nend\nusing Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\t\
    @test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) ==\
    \ -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 8 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp81827tmn.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmp81827tmn.jl:16\n  Expression: candidate([-1,\
    \ -2, -3]) == -6\n   Evaluated: -3 == -6\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp81827tmn.jl:16 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp81827tmn.jl:14\ntest set: Test Failed at /tmp/tmp81827tmn.jl:17\n\
    \  Expression: candidate([-1, -2, -3, 2, -10]) == -14\n   Evaluated: -10 == -14\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp81827tmn.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp81827tmn.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp81827tmn.jl:20\n  Expression: candidate([-1, -2, -3, 10, -5])\
    \ == -6\n   Evaluated: -5 == -6\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp81827tmn.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp81827tmn.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp81827tmn.jl:21\n  Expression: candidate([100, -1, -2, -3,\
    \ 10, -5]) == -6\n   Evaluated: -5 == -6\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp81827tmn.jl:21 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp81827tmn.jl:14\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    8     4     12\n"
  timestamp: 1659822290
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    min_sum::Int64 = Inf\n    curr_sum::Int64\
    \ = 0\n    for num in nums\n        curr_sum += num\n        min_sum = min(min_sum,\
    \ curr_sum)\n        curr_sum = max(curr_sum, 0)\n    end\n    return min_sum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 12 errored,
    0 broken.

    in expression starting at /tmp/tmph1s7z1sj.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmph1s7z1sj.jl:21\n  Test threw exception\n\
    \  Expression: candidate([2, 3, 4, 1, 2, 4]) == 1\n  InexactError: Int64(Inf)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert(#unused#::Type{Int64},\
    \ x::Float64)\n     @ Base ./number.jl:7\n   [3] minSubArraySum(nums::Vector{Int64})\n\
    \     @ Main /tmp/tmph1s7z1sj.jl:7\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmph1s7z1sj.jl:21 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmph1s7z1sj.jl:20\ntest set:\
    \ Error During Test at /tmp/tmph1s7z1sj.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([-1, -2, -3]) == -6\n  InexactError: Int64(Inf)\n  Stacktrace:\n \
    \  [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert(#unused#::Type{Int64},\
    \ x::Float64)\n     @ Base ./number.jl:7\n   [3] minSubArraySum(nums::Vector{Int64})\n\
    \     @ Main /tmp/tmph1s7z1sj.jl:7\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmph1s7z1sj.jl:22 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmph1s7z1sj.jl:20\ntest set:\
    \ Error During Test at /tmp/tmph1s7z1sj.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([-1, -2, -3, 2, -10]) == -14\n  InexactError: Int64(Inf)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert(#unused#::Type{Int64},\
    \ x::Float64)\n     @ Base ./number.jl:7\n   [3] minSubArraySum(nums::Vector{Int64})\n\
    \     @ Main /tmp/tmph1s7z1sj.jl:7\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmph1s7z1sj.jl:23 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] t"
  timestamp: 1659822292
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    suma = 0\n    subarr = 0\n\
    \    for i in nums\n        suma += i\n        subarr = min(subarr, suma)\n  \
    \  end\n    return suma\nend\nusing Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\
    \t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) ==\
    \ -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 7 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpexm1utyt.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpexm1utyt.jl:20\n  Expression: candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1\n   Evaluated: 16 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpexm1utyt.jl:20 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpexm1utyt.jl:19\ntest set: Test Failed at /tmp/tmpexm1utyt.jl:24\n\
    \  Expression: candidate([0, 10, 20, 1000000]) == 0\n   Evaluated: 1000030 ==\
    \ 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpexm1utyt.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpexm1utyt.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpexm1utyt.jl:25\n  Expression: candidate([-1, -2, -3, 10, -5])\
    \ == -6\n   Evaluated: -1 == -6\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpexm1utyt.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpexm1utyt.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpexm1utyt.jl:26\n  Expression: candidate([100, -1, -2, -3,\
    \ 10, -5]) == -6\n   Evaluated: 99 == -6\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpexm1utyt.jl:26 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpexm1utyt.jl:19\ntest set: Test Failed at /tmp/tmpexm1utyt.jl:27\n\
    \  Expression: candidate([10, 11, 13, 8, 3, 4]) == 3\n   Evaluated: 49 == 3\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined"
  timestamp: 1659822290
- exit_code: 0
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    min_sum = convert(Int64, 1e9)\n\
    \    local_sum = 0\n    for i=1:length(nums)\n        local_sum += nums[i]\n \
    \       if local_sum < min_sum\n            min_sum = local_sum\n        end\n\
    \        if local_sum > 0\n            local_sum = 0\n        end\n    end\n \
    \   return min_sum\nend\nusing Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\
    \t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) ==\
    \ -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659822288
- exit_code: 0
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    \"\"\"\n    Time Complexity:\
    \ O(n)\n    Space Complexity: O(1)\n    \"\"\"\n    min_sum = nums[1]\n    current_sum\
    \ = 0\n    for num in nums\n        current_sum += num\n        if current_sum\
    \ < min_sum\n            min_sum = current_sum\n        end\n        if current_sum\
    \ > 0\n            current_sum = 0\n        end\n    end\n    return min_sum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659822288
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    minsofar = Inf\n    minendhere\
    \ = 0\n    for i in nums\n        minendhere = min(i, minendhere + i)\n      \
    \  minsofar = min(minsofar, minendhere)\n    end\n    return minsofar\nend\n \
    \       \nprintln(minSubArraySum([3, 4, -1, 2, 1, -5]))\nusing Test\n\n@testset\
    \ begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4])\
    \ == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3,\
    \ 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 11 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp8smo4ij2.jl:19

    '
  stdout: "-5\ntest set: Test Failed at /tmp/tmp8smo4ij2.jl:25\n  Expression: candidate([-9999999999999999])\
    \ == -9999999999999999\n   Evaluated: -10000000000000000 == -9999999999999999\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8smo4ij2.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8smo4ij2.jl:21\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     1     12\n"
  timestamp: 1659822290
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    min_sum = 0\n    m = sum(nums)\n\
    \    for i = 1:length(nums)\n        min_sum = min(min_sum, sum(nums[i:end]))\n\
    \    end\n    min_sum\nend\nusing Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\
    \t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) ==\
    \ -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpgiuadxut.jl:16

    '
  stdout: "test set: Test Failed at /tmp/tmpgiuadxut.jl:19\n  Expression: candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpgiuadxut.jl:19 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpgiuadxut.jl:18\ntest set: Test Failed at /tmp/tmpgiuadxut.jl:24\n\
    \  Expression: candidate([-1, -2, -3, 10, -5]) == -6\n   Evaluated: -5 == -6\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgiuadxut.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgiuadxut.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpgiuadxut.jl:25\n  Expression: candidate([100, -1, -2, -3,\
    \ 10, -5]) == -6\n   Evaluated: -5 == -6\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpgiuadxut.jl:25 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpgiuadxut.jl:18\ntest set: Test Failed at /tmp/tmpgiuadxut.jl:26\n\
    \  Expression: candidate([10, 11, 13, 8, 3, 4]) == 3\n   Evaluated: 0 == 3\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgiuadxut.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgiuadxut.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpgiuadxut.jl:27\n  Expression: candidate([100, -33, 32, -1,\
    \ 0, -2]) == -33\n   Evaluated: -4 == -33\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlin"
  timestamp: 1659822290
- exit_code: 0
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    minimum, current_min = nums[1],\
    \ nums[1]\n    for i = 2:length(nums)\n        current_min = min(nums[i], current_min\
    \ + nums[i])\n        minimum = min(minimum, current_min)\n    end\n    return\
    \ minimum\nend\nusing Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\t\
    @test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) ==\
    \ -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659822288
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    min = nums[1]\n    sum = 0\n\
    \    for i in nums\n        sum += i\n        if sum < min\n            min =\
    \ sum\n        end\n    end\n    return min\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t\
    @test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3, 2, -10])\
    \ == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\t@test(candidate([0,\
    \ 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3, 10, -5]) == -6)\n\t\
    @test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10, 11,\
    \ 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\t\
    @test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpybp8nq4z.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpybp8nq4z.jl:22\n  Expression: candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1\n   Evaluated: 2 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpybp8nq4z.jl:22 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpybp8nq4z.jl:21\ntest set: Test Failed at /tmp/tmpybp8nq4z.jl:28\n\
    \  Expression: candidate([100, -1, -2, -3, 10, -5]) == -6\n   Evaluated: 94 ==\
    \ -6\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpybp8nq4z.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpybp8nq4z.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpybp8nq4z.jl:29\n  Expression: candidate([10, 11, 13, 8, 3,\
    \ 4]) == 3\n   Evaluated: 10 == 3\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpybp8nq4z.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpybp8nq4z.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpybp8nq4z.jl:30\n  Expression: candidate([100, -33, 32, -1,\
    \ 0, -2]) == -33\n   Evaluated: 67 == -33\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpybp8nq4z.jl:30 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpybp8nq4z.jl:21\ntest set: Test Failed at /tmp/tmpybp8nq4z.jl:33\n\
    \  Expression: candidate([1, -1]) == -1\n   Evaluated: 0 == -1\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macr"
  timestamp: 1659822291
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    if length(nums) == 0\n    \
    \    return 0\n    end\n    min_sum = nums[1]\n    curr_sum = nums[1]\n    for\
    \ i in 2:length(nums)\n        curr_sum = curr_sum + nums[i]\n        if curr_sum\
    \ < min_sum\n            min_sum = curr_sum\n        end\n        if curr_sum\
    \ > 0\n            curr_sum = 0\n        end\n    end\n    return min_sum\nend\n\
    using Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 9 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpp1m6dzw5.jl:25

    '
  stdout: "test set: Test Failed at /tmp/tmpp1m6dzw5.jl:34\n  Expression: candidate([100,\
    \ -1, -2, -3, 10, -5]) == -6\n   Evaluated: -5 == -6\nStacktrace:\n [1] macro\
    \ expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpp1m6dzw5.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpp1m6dzw5.jl:27\ntest set: Test\
    \ Failed at /tmp/tmpp1m6dzw5.jl:36\n  Expression: candidate([100, -33, 32, -1,\
    \ 0, -2]) == -33\n   Evaluated: -3 == -33\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpp1m6dzw5.jl:36 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpp1m6dzw5.jl:27\ntest set: Test Failed at /tmp/tmpp1m6dzw5.jl:39\n\
    \  Expression: candidate([1, -1]) == -1\n   Evaluated: 0 == -1\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpp1m6dzw5.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpp1m6dzw5.jl:27\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    9     3     12\n"
  timestamp: 1659822291
- exit_code: 0
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    min_so_far = nums[1]\n    min_ending_here\
    \ = nums[1]\n    for i in 2:length(nums)\n        min_ending_here = min(nums[i],\
    \ min_ending_here + nums[i])\n        min_so_far = min(min_so_far, min_ending_here)\n\
    \    end\n    return min_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1,\
    \ -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659822289
- exit_code: 0
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    minimum_sum = nums[1]\n   \
    \ current_sum = 0\n    for num in nums\n        current_sum += num\n        if\
    \ current_sum < minimum_sum\n            minimum_sum = current_sum\n        end\n\
    \        if current_sum > 0\n            current_sum = 0\n        end\n    end\n\
    \    return minimum_sum\nend\nusing Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\
    \t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) ==\
    \ -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659822289
- exit_code: 0
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    min_sum = Int64(typemax(Int64))\n\
    \    sum = 0\n    for i = 1:length(nums)\n        sum += nums[i]\n        if sum\
    \ < min_sum\n            min_sum = sum\n        end\n        if sum > 0\n    \
    \        sum = 0\n        end\n    end\n    return min_sum\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1,\
    \ 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659822289
- exit_code: 0
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    min_sum = typemax(Int64)\n\
    \    curr_sum = 0\n    for (i, val) in enumerate(nums)\n        curr_sum += val\n\
    \        if curr_sum < min_sum\n            min_sum = curr_sum\n        end\n\
    \        if curr_sum > 0\n            curr_sum = 0\n        end\n    end\n   \
    \ return min_sum\nend\nusing Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\
    \t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) ==\
    \ -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659822289
- exit_code: -1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    min_sum, curr_sum = nums[1],\
    \ nums[1]\n    for i = 2:length(nums)\n        curr_sum = minimum(nums[i], curr_sum\
    \ + nums[i])\n        min_sum = minimum(min_sum, curr_sum)\n    end\n    return\
    \ min_sum\nend\nusing Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\t\
    @test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) ==\
    \ -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  status: Timeout
  stderr: 'b''ERROR: LoadError: '''
  stdout: 'b''test set: Error During Test at /tmp/tmp381_ak_z.jl:19\n  Test threw
    exception\n  Expression: candidate([2, 3, 4, 1, 2, 4]) == 1\n  MethodError: objects
    of type Int64 are not callable\n  Maybe you forgot to use an operator such as
    *, ^, %, / etc. ?\n  Stacktrace:\n   [1] mapreduce_first(f::Int64, op::Function,
    x::Int64)\n     @ Base ./reduce.jl:394\n   [2] mapreduce(f::Int64, op::Function,
    a::Int64)\n     @ Base ./reduce.jl:421\n   [3] minimum(f::Int64, a::Int64; kw::Base.Pairs{Symbol,
    Union{}, Tuple{}, NamedTuple{(), Tuple{}}})\n     @ Base ./reduce.jl:705\n   [4]
    minimum(f::Int64, a::Int64)\n     @ Base ./reduce.jl:705\n   [5] minSubArraySum(nums::Vector{Int64})\n     @
    Main /tmp/tmp381_ak_z.jl:9\n   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [7] macro expansion\n     @ /tmp/tmp381_ak_z.jl:19 [inlined]\n   [8]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [9] top-level scope\n     @ /tmp/tmp381_ak_z.jl:18\ntest set: Error
    During Test at /tmp/tmp381_ak_z.jl:20\n  Test threw exception\n  Expression: candidate([-1,
    -2, -3]) == -6\n  MethodError: objects of type Int64 are not callable\n  Maybe
    you forgot to use an operator such as *, ^, %, / etc. ?\n  Stacktrace:\n   [1]
    mapreduce_first(f::Int64, op::Function, x::Int64)\n     @ Base ./reduce.jl:394\n   [2]
    mapreduce(f::Int64, op::Function, a::Int64)\n     @ Base ./reduce.jl:421\n   [3]
    minimum(f::Int64, a::Int64; kw::Base.Pairs{Symbol, Union{}, Tuple{}, NamedTuple{(),
    Tuple{}}})\n     @ Base ./reduce.jl:705\n   [4] minimum(f::Int64, a::Int64)\n     @
    Base ./reduce.jl:705\n   [5] minSubArraySum(nums::Vector{Int64})\n     @ Main
    /tmp/tmp381_ak_z.jl:9\n   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [7] macro expansion\n     @ /tmp/tmp381_ak_z.jl:20 [inlined]\n   [8]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [9] t'
  timestamp: 1659822293
- exit_code: 0
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    currentSum, minSum = nums[1],\
    \ nums[1]\n    for i in 2:length(nums)\n        currentSum = min(nums[i], currentSum\
    \ + nums[i])\n        minSum = min(minSum, currentSum)\n    end\n    return minSum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659822289
- exit_code: 0
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    min_sum = nums[1]\n    curr_sum\
    \ = nums[1]\n    for i in 2:length(nums)\n        curr_sum = min(nums[i], curr_sum\
    \ + nums[i])\n        min_sum = min(min_sum, curr_sum)\n    end\n    return min_sum\n\
    end\nminSubArraySum([2, 3, -6, 4, 1])\nusing Test\n\n@testset begin\n\ncandidate\
    \ = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1,\
    \ -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659822289
- exit_code: 0
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    len = length(nums)\n    ans\
    \ = Int64(typemax(Int64))\n    for i in 1:len\n        sum = 0\n        for j\
    \ in i:len\n            sum += nums[j]\n            if sum < ans\n           \
    \     ans = sum\n            end\n        end\n    end\n    return ans\nend\n\
    using Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659822289
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    if all(nums .< 0)\n       \
    \ return minimum(nums)\n    end\n    minimum, sum = Inf, 0\n    for i in 1:length(nums)\n\
    \        sum += nums[i]\n        minimum = min(minimum, sum)\n        if sum >\
    \ 0\n            sum = 0\n        end\n    end\n    return minimum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 9 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmp2xbnbf4p.jl:22

    '
  stdout: "test set: Error During Test at /tmp/tmp2xbnbf4p.jl:26\n  Test threw exception\n\
    \  Expression: candidate([-1, -2, -3]) == -6\n  UndefVarError: minimum not defined\n\
    \  Stacktrace:\n   [1] minSubArraySum(nums::Vector{Int64})\n     @ Main /tmp/tmp2xbnbf4p.jl:8\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp2xbnbf4p.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp2xbnbf4p.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp2xbnbf4p.jl:28\n  Test threw exception\n  Expression:\
    \ candidate([-9999999999999999]) == -9999999999999999\n  UndefVarError: minimum\
    \ not defined\n  Stacktrace:\n   [1] minSubArraySum(nums::Vector{Int64})\n   \
    \  @ Main /tmp/tmp2xbnbf4p.jl:8\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp2xbnbf4p.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp2xbnbf4p.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp2xbnbf4p.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([-10]) == -10\n  UndefVarError: minimum not defined\n  Stacktrace:\n\
    \   [1] minSubArraySum(nums::Vector{Int64})\n     @ Main /tmp/tmp2xbnbf4p.jl:8\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp2xbnbf4p.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp2xbnbf4p.jl:24\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    9      3     12\n"
  timestamp: 1659822293
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n  \nend\n@testset \"Example\" begin\n\
    \    @test minSubArraySum([4,3,2,6]) == 1\n    @test minSubArraySum([2,3,1,2,4,3])\
    \ == 2\nend\nusing Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: UndefVarError: @testset not defined

    in expression starting at /tmp/tmpf6ozffal.jl:9

    in expression starting at /tmp/tmpf6ozffal.jl:9

    '
  stdout: ''
  timestamp: 1659822291
- exit_code: -1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    min_sum = typemax(Int64)\n\
    \    sum = 0\n    start = 1\n    stop = 1\n    for i in 1:length(nums)\n     \
    \   sum += nums[i]\n        while sum >= 0\n            min_sum = min(min_sum,\
    \ sum)\n            sum -= nums[start]\n            start += 1\n        end\n\
    \    end\n    return min_sum\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1,\
    \ -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  status: Timeout
  stderr: 'b''ERROR: '''
  stdout: 'b''test set: Error During Test at /tmp/tmp047oqc41.jl:26\n  Test threw
    exception\n  Expression: candidate([2, 3, 4, 1, 2, 4]) == 1\n  BoundsError: attempt
    to access 6-element Vector{Int64} at index [7]\n  Stacktrace:\n   [1] getindex\n     @
    ./array.jl:861 [inlined]\n   [2] minSubArraySum(nums::Vector{Int64})\n     @ Main
    /tmp/tmp047oqc41.jl:15\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmp047oqc41.jl:26 [inlined]\n   [5]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmp047oqc41.jl:25\ntest set: Test
    Failed at /tmp/tmp047oqc41.jl:27\n  Expression: candidate([-1, -2, -3]) == -6\n   Evaluated:
    9223372036854775807 == -6\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n [2] macro expansion\n   @ /tmp/tmp047oqc41.jl:27 [inlined]\n [3] macro
    expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n [4] top-level scope\n   @ /tmp/tmp047oqc41.jl:25\ntest set: Test Failed
    at /tmp/tmp047oqc41.jl:28\n  Expression: candidate([-1, -2, -3, 2, -10]) == -14\n   Evaluated:
    9223372036854775807 == -14\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n [2] macro expansion\n   @ /tmp/tmp047oqc41.jl:28 [inlined]\n [3] macro
    expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n [4] top-level scope\n   @ /tmp/tmp047oqc41.jl:25\ntest set: Test Failed
    at /tmp/tmp047oqc41.jl:29\n  Expression: candidate([-9999999999999999]) == -9999999999999999\n   Evaluated:
    9223372036854775807 == -9999999999999999\nStacktrace:\n [1] macro expansion\n   @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n
    [2] macro expansion\n   @ /tmp/tmp047oqc41.jl:29 [inlined]\n [3] macro expansion\n   @
    ~/.conda/envs/polyglot/sh'
  timestamp: 1659822294
- exit_code: 0
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    minimum_sum = Inf\n    for\
    \ i in 1:length(nums)\n        if nums[i] < minimum_sum\n            minimum_sum\
    \ = nums[i]\n        end\n    end\n    running_sum = 0\n    for i in 1:length(nums)\n\
    \        running_sum += nums[i]\n        if running_sum < minimum_sum\n      \
    \      minimum_sum = running_sum\n        end\n        if running_sum > 0\n  \
    \          running_sum = 0\n        end\n    end\n    return minimum_sum\nend\n\
    using Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659822290
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    n = length(nums)\n    min_sum\
    \ = typemax(Int64)\n    curr_sum = 0\n    for j in 1:n\n        curr_sum += nums[j]\n\
    \        if curr_sum > 0\n            curr_sum = 0\n        end\n        min_sum\
    \ = min(min_sum, curr_sum)\n    end\n    return min_sum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4])\
    \ == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3,\
    \ 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 9 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxli0p2h5.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxli0p2h5.jl:24\n  Expression: candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpxli0p2h5.jl:24 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpxli0p2h5.jl:23\ntest set: Test Failed at /tmp/tmpxli0p2h5.jl:31\n\
    \  Expression: candidate([10, 11, 13, 8, 3, 4]) == 3\n   Evaluated: 0 == 3\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxli0p2h5.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxli0p2h5.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxli0p2h5.jl:34\n  Expression: candidate([7]) == 7\n   Evaluated:\
    \ 0 == 7\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxli0p2h5.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxli0p2h5.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    9     3     12\n"
  timestamp: 1659822291
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n\nreturn minimum([ sum( nums[i:j]\
    \ ) for i in 1:length(nums), j in i:length(nums) ])\nusing Test\n\n@testset begin\n\
    \ncandidate = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t\
    @test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3, 2, -10])\
    \ == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\t@test(candidate([0,\
    \ 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3, 10, -5]) == -6)\n\t\
    @test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10, 11,\
    \ 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\t\
    @test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpzu1e61hf.jl:6\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpzu1e61hf.jl:1\n\
    in expression starting at /tmp/tmpzu1e61hf.jl:1\n"
  stdout: ''
  timestamp: 1659822291
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    # return zero if the array\
    \ is empty\n    if length(nums) == 0\n        return 0\n    end\n    # initialize\
    \ min sum and current sum to be first array value\n    min_sum, curr_sum = nums[1],\
    \ nums[1]\n    # iterate through the array\n    for i in 2:length(nums)\n    \
    \    # update the current sum to be the maximum of current sum + the current value\n\
    \        # or the current value\n        curr_sum = max(curr_sum + nums[i], nums[i])\n\
    \        # update the min sum to be the minimum of the current min sum and the\
    \ current sum\n        min_sum = min(min_sum, curr_sum)\n    end\n    # return\
    \ the min sum\n    return min_sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1,\
    \ -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 8 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpej8tu6ro.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmpej8tu6ro.jl:29\n  Expression: candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1\n   Evaluated: 2 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpej8tu6ro.jl:29 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpej8tu6ro.jl:28\ntest set: Test Failed at /tmp/tmpej8tu6ro.jl:30\n\
    \  Expression: candidate([-1, -2, -3]) == -6\n   Evaluated: -3 == -6\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpej8tu6ro.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpej8tu6ro.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpej8tu6ro.jl:31\n  Expression: candidate([-1, -2, -3, 2, -10])\
    \ == -14\n   Evaluated: -8 == -14\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpej8tu6ro.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpej8tu6ro.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpej8tu6ro.jl:34\n  Expression: candidate([-1, -2, -3, 10, -5])\
    \ == -6\n   Evaluated: -3 == -6\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpej8tu6ro.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpej8tu6ro.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpej8tu6ro.jl:35\n  Expression: candidate([100, -1, -2, -3,\
    \ 10, -5]) == -6\n   Evaluated: 94 == -6\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] ma"
  timestamp: 1659822292
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    arrayLen = length(nums)\n \
    \   if arrayLen == 0 \n        return 0\n    end\n    currentSum = 0\n    minSum\
    \ = Int64(typemax(Int64))\n    for i in 1:arrayLen\n        currentSum += nums[i]\n\
    \        if currentSum < minSum\n            minSum = currentSum\n        end\n\
    \        if currentSum > 0\n            currentSum = 0\n        end\n    end\n\
    \    return minSum\nend\n\"\"\"\n    Given a non-empty array of integers nums,\
    \ every element appears twice except for one. \n    Find that single one.\n  \
    \  Example\n            \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\
    \t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) ==\
    \ -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: cannot document the following expression:\n\nusing Test\n\
    \nStacktrace:\n [1] error(::String, ::String)\n   @ Base ./error.jl:42\n [2] top-level\
    \ scope\n   @ /tmp/tmpv1s0_59k.jl:24\nin expression starting at /tmp/tmpv1s0_59k.jl:24\n"
  stdout: ''
  timestamp: 1659822291
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    if length(nums) == 0\n    \
    \    return 0\n    end\n    if length(nums) == 1\n        return nums[1]\n   \
    \ end\n    min_sum = nums[1]\n    curr_sum = 0\n    for i in 1:length(nums)\n\
    \        curr_sum += nums[i]\n        if curr_sum > 0\n            curr_sum =\
    \ 0\n        end\n        if curr_sum < min_sum\n            min_sum = curr_sum\n\
    \        end\n    end\n    return min_sum\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t\
    @test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3, 2, -10])\
    \ == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\t@test(candidate([0,\
    \ 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3, 10, -5]) == -6)\n\t\
    @test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10, 11,\
    \ 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\t\
    @test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 10 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpypw746kb.jl:28

    '
  stdout: "test set: Test Failed at /tmp/tmpypw746kb.jl:31\n  Expression: candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpypw746kb.jl:31 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpypw746kb.jl:30\ntest set: Test Failed at /tmp/tmpypw746kb.jl:38\n\
    \  Expression: candidate([10, 11, 13, 8, 3, 4]) == 3\n   Evaluated: 0 == 3\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpypw746kb.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpypw746kb.jl:30\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   10     2     12\n"
  timestamp: 1659822292
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    return reduce(+, nums, init=Inf)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 12 errored,
    0 broken.

    in expression starting at /tmp/tmpyfvx15vj.jl:11

    '
  stdout: "test set: Error During Test at /tmp/tmpyfvx15vj.jl:14\n  Test threw exception\n\
    \  Expression: candidate([2, 3, 4, 1, 2, 4]) == 1\n  InexactError: Int64(Inf)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] minSubArraySum(nums::Vector{Int64})\n\
    \     @ Main /tmp/tmpyfvx15vj.jl:7\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpyfvx15vj.jl:14 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpyfvx15vj.jl:13\ntest set:\
    \ Error During Test at /tmp/tmpyfvx15vj.jl:15\n  Test threw exception\n  Expression:\
    \ candidate([-1, -2, -3]) == -6\n  InexactError: Int64(Inf)\n  Stacktrace:\n \
    \  [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7\
    \ [inlined]\n   [3] minSubArraySum(nums::Vector{Int64})\n     @ Main /tmp/tmpyfvx15vj.jl:7\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpyfvx15vj.jl:15 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpyfvx15vj.jl:13\ntest set:\
    \ Error During Test at /tmp/tmpyfvx15vj.jl:16\n  Test threw exception\n  Expression:\
    \ candidate([-1, -2, -3, 2, -10]) == -14\n  InexactError: Int64(Inf)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7\
    \ [inlined]\n   [3] minSubArraySum(nums::Vector{Int64})\n     @ Main /tmp/tmpyfvx15vj.jl:7\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpyfvx15vj.jl:16 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpyfvx15vj.jl:13\ntest set:\
    \ Error During Test at /tmp/tmpyfvx15"
  timestamp: 1659822294
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    p=0\n    m=maximum(nums)\n\
    \    while (p<(length(nums)-1))\n        if nums[p]>0\n            m=minimum(m,nums[p])\n\
    \        end\n        p+=1\n    end\n    return m\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4])\
    \ == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3,\
    \ 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 9 errored,
    0 broken.

    in expression starting at /tmp/tmppd5kwtsr.jl:19

    '
  stdout: "test set: Error During Test at /tmp/tmppd5kwtsr.jl:22\n  Test threw exception\n\
    \  Expression: candidate([2, 3, 4, 1, 2, 4]) == 1\n  BoundsError: attempt to access\
    \ 6-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] minSubArraySum(nums::Vector{Int64})\n     @\
    \ Main /tmp/tmppd5kwtsr.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmppd5kwtsr.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmppd5kwtsr.jl:21\ntest set:\
    \ Error During Test at /tmp/tmppd5kwtsr.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([-1, -2, -3]) == -6\n  BoundsError: attempt to access 3-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] minSubArraySum(nums::Vector{Int64})\n     @ Main /tmp/tmppd5kwtsr.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmppd5kwtsr.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmppd5kwtsr.jl:21\ntest set:\
    \ Error During Test at /tmp/tmppd5kwtsr.jl:24\n  Test threw exception\n  Expression:\
    \ candidate([-1, -2, -3, 2, -10]) == -14\n  BoundsError: attempt to access 5-element\
    \ Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861\
    \ [inlined]\n   [2] minSubArraySum(nums::Vector{Int64})\n     @ Main /tmp/tmppd5kwtsr.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmppd5kwtsr.jl:24 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmppd5kwtsr.jl:21\ntest set:\
    \ Error During Test at /tmp/tmppd5"
  timestamp: 1659822293
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    # Implement your solution here\n\
    \    k=length(nums)\n    m=Inf\n    for i in 1:k\n        for j in 1:k\n     \
    \       if sum(nums[i:j])<m\n                m=sum(nums[i:j])\n            end\n\
    \        end\n    end\n    return m\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1,\
    \ -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 10 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp8wrtd2gg.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmp8wrtd2gg.jl:24\n  Expression: candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp8wrtd2gg.jl:24 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp8wrtd2gg.jl:23\ntest set: Test Failed at /tmp/tmp8wrtd2gg.jl:31\n\
    \  Expression: candidate([10, 11, 13, 8, 3, 4]) == 3\n   Evaluated: 0 == 3\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8wrtd2gg.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8wrtd2gg.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   10     2     12\n"
  timestamp: 1659822292
- exit_code: 0
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    min_sum = Inf\n    curr_sum\
    \ = 0\n    len = length(nums)\n    for i in 1:len\n        curr_sum += nums[i]\n\
    \        if curr_sum < min_sum\n            min_sum = curr_sum\n        end\n\
    \        if curr_sum > 0\n            curr_sum = 0\n        end\n    end\n   \
    \ return min_sum\nend\nusing Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\
    \t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) ==\
    \ -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659822290
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    left, right, min_sum = 1, 1,\
    \ nums[1]\n    current_sum = nums[1]\n    while right <= length(nums) \n     \
    \   # check if it is the best \n        if current_sum < min_sum\n           \
    \ min_sum = current_sum\n        end \n        # if you can move right, move right\
    \ \n        if current_sum <= 0 && right < length(nums)\n            right +=\
    \ 1\n            current_sum += nums[right]\n        # otherwise move left \n\
    \        else \n            current_sum -= nums[left]\n            left += 1\n\
    \        end \n    end \n    return min_sum\nend \nusing Test\n\n@testset begin\n\
    \ncandidate = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t\
    @test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3, 2, -10])\
    \ == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\t@test(candidate([0,\
    \ 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3, 10, -5]) == -6)\n\t\
    @test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10, 11,\
    \ 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\t\
    @test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 12 errored,
    0 broken.

    in expression starting at /tmp/tmpbtd82k7c.jl:28

    '
  stdout: "test set: Error During Test at /tmp/tmpbtd82k7c.jl:31\n  Test threw exception\n\
    \  Expression: candidate([2, 3, 4, 1, 2, 4]) == 1\n  BoundsError: attempt to access\
    \ 6-element Vector{Int64} at index [7]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] minSubArraySum(nums::Vector{Int64})\n     @\
    \ Main /tmp/tmpbtd82k7c.jl:20\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpbtd82k7c.jl:31 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpbtd82k7c.jl:30\ntest set:\
    \ Error During Test at /tmp/tmpbtd82k7c.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([-1, -2, -3]) == -6\n  BoundsError: attempt to access 3-element Vector{Int64}\
    \ at index [4]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] minSubArraySum(nums::Vector{Int64})\n     @ Main /tmp/tmpbtd82k7c.jl:20\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpbtd82k7c.jl:32 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpbtd82k7c.jl:30\ntest set:\
    \ Error During Test at /tmp/tmpbtd82k7c.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([-1, -2, -3, 2, -10]) == -14\n  BoundsError: attempt to access 5-element\
    \ Vector{Int64} at index [6]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861\
    \ [inlined]\n   [2] minSubArraySum(nums::Vector{Int64})\n     @ Main /tmp/tmpbtd82k7c.jl:20\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpbtd82k7c.jl:33 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpbtd82k7c.jl:30\ntest set:\
    \ Error During Test at /tmp/tmpbtd"
  timestamp: 1659822294
- exit_code: 0
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    minimum = typemax(Int64)\n\
    \    current_sum = 0\n    for i in 1:length(nums)\n        current_sum += nums[i]\n\
    \        if current_sum < minimum\n            minimum = current_sum\n       \
    \ end\n        if current_sum > 0\n            current_sum = 0\n        end\n\
    \    end\n    return minimum\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1,\
    \ -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659822291
- exit_code: 0
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    min_sum = Int64(typemax(Int64))\n\
    \    current_sum = 0\n    for i in 1:length(nums)\n        current_sum += nums[i]\n\
    \        if current_sum < min_sum\n            min_sum = current_sum\n       \
    \ end\n        if current_sum > 0\n            current_sum = 0\n        end\n\
    \    end\n    return min_sum\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1,\
    \ -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659822291
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    # @S = Vector(Int64, length(nums))\n\
    \    @S = 0\n    min = typemax(Int64)\n    for i in 1:length(nums)\n        @S\
    \ += nums[i]\n        if @S < min\n            min = @S\n        end\n    end\n\
    \    min\nend\nusing Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\t\
    @test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) ==\
    \ -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"=\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpfp3u91jt.jl:8\nin expression starting at /tmp/tmpfp3u91jt.jl:8\n"
  stdout: ''
  timestamp: 1659822292
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n   local cum_sum = 0\n   local\
    \ min_sum = Int64(typemax(Int64))\n   local min_found = true\n   for i in 1:length(nums)\n\
    \        cum_sum += nums[i]\n        if cum_sum <= min_sum\n            min_sum\
    \ = cum_sum\n            min_found = true\n        end\n        if cum_sum > 0\
    \ && min_found\n            cum_sum = 0\n            min_found = false\n     \
    \   end\n   end\n   return min_sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1,\
    \ -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 10 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpti9mk63t.jl:25

    '
  stdout: "test set: Test Failed at /tmp/tmpti9mk63t.jl:28\n  Expression: candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1\n   Evaluated: 2 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpti9mk63t.jl:28 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpti9mk63t.jl:27\ntest set: Test Failed at /tmp/tmpti9mk63t.jl:35\n\
    \  Expression: candidate([10, 11, 13, 8, 3, 4]) == 3\n   Evaluated: 10 == 3\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpti9mk63t.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpti9mk63t.jl:27\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   10     2     12\n"
  timestamp: 1659822293
- exit_code: 0
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    min_sum = nums[1]\n    current_sum\
    \ = nums[1]\n    for i in 2:length(nums)\n        current_sum = min(nums[i], current_sum\
    \ + nums[i])\n        min_sum = min(min_sum, current_sum)\n    end\n    return\
    \ min_sum\nend\nusing Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\t\
    @test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) ==\
    \ -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659822291
- exit_code: 0
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    ans = Inf\n    temp = 0\n \
    \   for i in nums\n        temp += i\n        if temp < ans\n            ans =\
    \ temp\n        end\n        if temp > 0\n            temp = 0\n        end\n\
    \    end\n    return ans\nend\nusing Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\
    \t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) ==\
    \ -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659822291
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    nums = [ -2, 1, -3, 4, -1,\
    \ 2, 1, -5, 4 ]\n    cur_sum = 0\n    min_sum = Inf\n    for num in nums\n   \
    \     cur_sum += num\n        if cur_sum < min_sum\n            min_sum = cur_sum\n\
    \        end\n        if cur_sum > 0\n            cur_sum = 0\n        end\n \
    \   end\n    return min_sum\nend\nminSubArraySum(nums)\nusing Test\n\n@testset\
    \ begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4])\
    \ == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3,\
    \ 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: UndefVarError: nums not defined\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpogrwk9pd.jl:21\nin expression starting at /tmp/tmpogrwk9pd.jl:21\n"
  stdout: ''
  timestamp: 1659822292
- exit_code: 0
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n  len = length(nums)\n  min_sum\
    \ = Inf\n  curr_sum = 0\n  for i = 1:len\n    curr_sum += nums[i]\n    if min_sum\
    \ > curr_sum\n      min_sum = curr_sum\n    end\n    if curr_sum > 0\n      curr_sum\
    \ = 0\n    end\n  end\n  return min_sum\nend\nusing Test\n\n@testset begin\n\n\
    candidate = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1,\
    \ -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659822291
- exit_code: 0
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    result = nums[1]\n    sum =\
    \ 0\n    for i = 1:length(nums)\n        sum += nums[i]\n        result = min(result,\
    \ sum)\n        if sum > 0\n            sum = 0\n        end\n    end\n    return\
    \ result\nend\nusing Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\t\
    @test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) ==\
    \ -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659822291
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    min_sum = 0\n    sum = 0\n\
    \    for i in 1:length(nums)\n        sum += nums[i]\n        if sum < min_sum\n\
    \            min_sum = sum\n        end\n    end\n    return min_sum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmprmq_fuwa.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmprmq_fuwa.jl:22\n  Expression: candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmprmq_fuwa.jl:22 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmprmq_fuwa.jl:21\ntest set: Test Failed at /tmp/tmprmq_fuwa.jl:28\n\
    \  Expression: candidate([100, -1, -2, -3, 10, -5]) == -6\n   Evaluated: 0 ==\
    \ -6\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprmq_fuwa.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprmq_fuwa.jl:21\ntest set: Test\
    \ Failed at /tmp/tmprmq_fuwa.jl:29\n  Expression: candidate([10, 11, 13, 8, 3,\
    \ 4]) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprmq_fuwa.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprmq_fuwa.jl:21\ntest set: Test\
    \ Failed at /tmp/tmprmq_fuwa.jl:30\n  Expression: candidate([100, -33, 32, -1,\
    \ 0, -2]) == -33\n   Evaluated: 0 == -33\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmprmq_fuwa.jl:30 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmprmq_fuwa.jl:21\ntest set: Test Failed at /tmp/tmprmq_fuwa.jl:32\n\
    \  Expression: candidate([7]) == 7\n   Evaluated: 0 == 7\nStacktrace:\n [1] macro\
    \ expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansi"
  timestamp: 1659822293
- exit_code: 0
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    m = nums[1]\n    c = nums[1]\n\
    \    for i = 2:length(nums)\n        c = min(c + nums[i], nums[i])\n        m\
    \ = min(m, c)\n    end\n    return m\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1,\
    \ -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659822291
- exit_code: 0
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    min_sum = typemax(Int64)\n\
    \    curr_sum = 0\n    for i in nums\n        curr_sum += i\n        if curr_sum\
    \ < min_sum\n            min_sum = curr_sum\n        end\n        if curr_sum\
    \ > 0\n            curr_sum = 0\n        end\n    end\n    return min_sum\nend\n\
    using Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659822292
- exit_code: 0
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n   res = nums[1]\n   curr_sum =\
    \ nums[1]\n   for i in nums[2:end]\n       curr_sum = min(i, curr_sum + i)\n \
    \      res = min(res, curr_sum)\n   end\n   return res\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4])\
    \ == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3,\
    \ 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659822292
- exit_code: 0
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    min_sum = Int64(typemax(Int64))\n\
    \    current_sum = Int64(0)\n    for n in nums\n        current_sum += n\n   \
    \     if current_sum < min_sum\n            min_sum = current_sum\n        end\n\
    \        if current_sum > 0\n            current_sum = 0\n        end\n    end\n\
    \    return min_sum\nend\nusing Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\
    \t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) ==\
    \ -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659822292
- exit_code: 0
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    min_sum = typemax(Int64)\n\
    \    min_sum_start = 0\n    min_sum_end = 0\n    curr_sum = 0\n    curr_sum_start\
    \ = 0\n    for i in 1:length(nums)\n        curr_sum += nums[i]\n        if curr_sum\
    \ < min_sum\n            min_sum = curr_sum\n            min_sum_start = curr_sum_start\n\
    \            min_sum_end = i\n        end\n        if curr_sum > 0\n         \
    \   curr_sum = 0\n            curr_sum_start = i + 1\n        end\n    end\n \
    \   return min_sum\nend\nprintln(minSubArraySum([-3,3,3,2,2,-2,2]))\nusing Test\n\
    \n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1,\
    \ 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: OK
  stderr: '-3

    Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659822292
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    min_sum = typemax(Int64)\n\
    \    current_sum = 0\n    for num in nums\n        current_sum += num\n      \
    \  if current_sum < min_sum\n            min_sum = current_sum\n        end\n\
    \    end\n    return min_sum\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1,\
    \ -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmprrhhq_jt.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmprrhhq_jt.jl:22\n  Expression: candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1\n   Evaluated: 2 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmprrhhq_jt.jl:22 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmprrhhq_jt.jl:21\ntest set: Test Failed at /tmp/tmprrhhq_jt.jl:28\n\
    \  Expression: candidate([100, -1, -2, -3, 10, -5]) == -6\n   Evaluated: 94 ==\
    \ -6\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprrhhq_jt.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprrhhq_jt.jl:21\ntest set: Test\
    \ Failed at /tmp/tmprrhhq_jt.jl:29\n  Expression: candidate([10, 11, 13, 8, 3,\
    \ 4]) == 3\n   Evaluated: 10 == 3\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprrhhq_jt.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprrhhq_jt.jl:21\ntest set: Test\
    \ Failed at /tmp/tmprrhhq_jt.jl:30\n  Expression: candidate([100, -33, 32, -1,\
    \ 0, -2]) == -33\n   Evaluated: 67 == -33\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmprrhhq_jt.jl:30 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmprrhhq_jt.jl:21\ntest set: Test Failed at /tmp/tmprrhhq_jt.jl:33\n\
    \  Expression: candidate([1, -1]) == -1\n   Evaluated: 0 == -1\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macr"
  timestamp: 1659822294
- exit_code: 0
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    \n    s = minimum(nums)\n \
    \   for i = 1:length(nums)\n        for j = i+1:length(nums)\n            s =\
    \ min(s, sum(nums[i:j]))\n        end\n    end\n    return s\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1,\
    \ 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659822292
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    min_so_far = Inf\n    min_ending_here\
    \ = 0\nusing Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpg0e5j_u9.jl:6\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpg0e5j_u9.jl:1\n\
    in expression starting at /tmp/tmpg0e5j_u9.jl:1\n"
  stdout: ''
  timestamp: 1659822293
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    k = -Inf\n    result = -Inf\n\
    \    for i in 1:length(nums)\n        k = max(k, 0) + nums[i]\n        result\
    \ = max(result, k)\n    end\n    return result\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t\
    @test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3, 2, -10])\
    \ == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\t@test(candidate([0,\
    \ 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3, 10, -5]) == -6)\n\t\
    @test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10, 11,\
    \ 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\t\
    @test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 10 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp5x9sl40r.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmp5x9sl40r.jl:20\n  Expression: candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1\n   Evaluated: 16 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp5x9sl40r.jl:20 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp5x9sl40r.jl:19\ntest set: Test Failed at /tmp/tmp5x9sl40r.jl:21\n\
    \  Expression: candidate([-1, -2, -3]) == -6\n   Evaluated: -1 == -6\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5x9sl40r.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5x9sl40r.jl:19\ntest set: Test\
    \ Failed at /tmp/tmp5x9sl40r.jl:22\n  Expression: candidate([-1, -2, -3, 2, -10])\
    \ == -14\n   Evaluated: 2 == -14\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5x9sl40r.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5x9sl40r.jl:19\ntest set: Test\
    \ Failed at /tmp/tmp5x9sl40r.jl:23\n  Expression: candidate([-9999999999999999])\
    \ == -9999999999999999\n   Evaluated: -10000000000000000 == -9999999999999999\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5x9sl40r.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5x9sl40r.jl:19\ntest set: Test\
    \ Failed at /tmp/tmp5x9sl40r.jl:24\n  Expression: candidate([0, 10, 20, 1000000])\
    \ == 0\n   Evaluated: 1000030 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/"
  timestamp: 1659822295
- exit_code: 0
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    \"\"\"\n    Given an array\
    \ of integers nums, find the minimum sum of any non-empty sub-array\n    of nums.\n\
    \    Example\n        nums = [1, 2, 3, 10, -4, 9]\n        min_sum = 1 + 2 + 3\
    \ + -4 = 2\n    \"\"\"\n    minimum = sum(nums)\n    current_sum = 0\n    for\
    \ i in nums\n        current_sum += i\n        if current_sum < minimum\n    \
    \        minimum = current_sum\n        end\n        if current_sum > 0\n    \
    \        current_sum = 0\n        end\n    end\n    return minimum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659822292
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    min_sum = nums[1]\n    max_sum\
    \ = nums[1]\n    current_sum = nums[1]\n    for i in 2:length(nums)\n        current_sum\
    \ = max(nums[i], current_sum + nums[i])\n        max_sum = max(max_sum, current_sum)\n\
    \        min_sum = min(min_sum, current_sum)\n    end\n    return min_sum\nend\n\
    using Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 8 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp28_0vl0a.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp28_0vl0a.jl:22\n  Expression: candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1\n   Evaluated: 2 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp28_0vl0a.jl:22 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp28_0vl0a.jl:21\ntest set: Test Failed at /tmp/tmp28_0vl0a.jl:23\n\
    \  Expression: candidate([-1, -2, -3]) == -6\n   Evaluated: -3 == -6\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp28_0vl0a.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp28_0vl0a.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp28_0vl0a.jl:24\n  Expression: candidate([-1, -2, -3, 2, -10])\
    \ == -14\n   Evaluated: -8 == -14\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp28_0vl0a.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp28_0vl0a.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp28_0vl0a.jl:27\n  Expression: candidate([-1, -2, -3, 10, -5])\
    \ == -6\n   Evaluated: -3 == -6\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp28_0vl0a.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp28_0vl0a.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp28_0vl0a.jl:28\n  Expression: candidate([100, -1, -2, -3,\
    \ 10, -5]) == -6\n   Evaluated: 94 == -6\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] ma"
  timestamp: 1659822295
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    minimumsum::Int64 = 0\n   \
    \ currentsum::Int64 = 0\n    for i in 1:length(nums)\n        currentsum += nums[i]\n\
    \        if currentsum < minimumsum\n            minimumsum = currentsum\n   \
    \     end\n    end\n    return minimumsum\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t\
    @test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3, 2, -10])\
    \ == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\t@test(candidate([0,\
    \ 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3, 10, -5]) == -6)\n\t\
    @test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10, 11,\
    \ 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\t\
    @test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpecj6936c.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpecj6936c.jl:22\n  Expression: candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpecj6936c.jl:22 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpecj6936c.jl:21\ntest set: Test Failed at /tmp/tmpecj6936c.jl:28\n\
    \  Expression: candidate([100, -1, -2, -3, 10, -5]) == -6\n   Evaluated: 0 ==\
    \ -6\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpecj6936c.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpecj6936c.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpecj6936c.jl:29\n  Expression: candidate([10, 11, 13, 8, 3,\
    \ 4]) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpecj6936c.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpecj6936c.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpecj6936c.jl:30\n  Expression: candidate([100, -33, 32, -1,\
    \ 0, -2]) == -33\n   Evaluated: 0 == -33\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpecj6936c.jl:30 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpecj6936c.jl:21\ntest set: Test Failed at /tmp/tmpecj6936c.jl:32\n\
    \  Expression: candidate([7]) == 7\n   Evaluated: 0 == 7\nStacktrace:\n [1] macro\
    \ expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansi"
  timestamp: 1659822294
- exit_code: 0
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    if length(nums) == 0\n    \
    \    return 0\n    end\n    res = nums[1]\n    for i in 1:length(nums)\n     \
    \   sum = 0\n        for j in i:length(nums)\n            sum += nums[j]\n   \
    \         res = min(res, sum)\n        end\n    end\n    return res\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659822292
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    nums = sort(nums)\n    return\
    \ nums[1]\nend\nusing Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\t\
    @test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) ==\
    \ -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 8 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp81827tmn.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmp81827tmn.jl:16\n  Expression: candidate([-1,\
    \ -2, -3]) == -6\n   Evaluated: -3 == -6\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp81827tmn.jl:16 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp81827tmn.jl:14\ntest set: Test Failed at /tmp/tmp81827tmn.jl:17\n\
    \  Expression: candidate([-1, -2, -3, 2, -10]) == -14\n   Evaluated: -10 == -14\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp81827tmn.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp81827tmn.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp81827tmn.jl:20\n  Expression: candidate([-1, -2, -3, 10, -5])\
    \ == -6\n   Evaluated: -5 == -6\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp81827tmn.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp81827tmn.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp81827tmn.jl:21\n  Expression: candidate([100, -1, -2, -3,\
    \ 10, -5]) == -6\n   Evaluated: -5 == -6\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp81827tmn.jl:21 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp81827tmn.jl:14\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    8     4     12\n"
  timestamp: 1659822290
- exit_code: 0
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    # nums is a non-empty array\n\
    \    n = length(nums)\n    running_sum = nums[1]\n    min_sum = running_sum\n\
    \    for i in 2:n\n        running_sum = min(running_sum + nums[i], nums[i])\n\
    \        min_sum = min(min_sum, running_sum)\n    end\n    return min_sum\nend\n\
    using Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659822293
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    \n    min_sum::Int64 = 1e10\n\
    \    curr_sum::Int64 = 0\n    \n    for i in nums\n        curr_sum += i\n   \
    \     min_sum = min(min_sum, curr_sum)\n        curr_sum = max(curr_sum, 0)\n\
    \    end\n    \n    return min_sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1,\
    \ -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 8 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmphfwksmb4.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmphfwksmb4.jl:24\n  Expression: candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1\n   Evaluated: 2 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmphfwksmb4.jl:24 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmphfwksmb4.jl:23\ntest set: Test Failed at /tmp/tmphfwksmb4.jl:25\n\
    \  Expression: candidate([-1, -2, -3]) == -6\n   Evaluated: -3 == -6\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphfwksmb4.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphfwksmb4.jl:23\ntest set: Test\
    \ Failed at /tmp/tmphfwksmb4.jl:26\n  Expression: candidate([-1, -2, -3, 2, -10])\
    \ == -14\n   Evaluated: -8 == -14\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphfwksmb4.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphfwksmb4.jl:23\ntest set: Test\
    \ Failed at /tmp/tmphfwksmb4.jl:29\n  Expression: candidate([-1, -2, -3, 10, -5])\
    \ == -6\n   Evaluated: -3 == -6\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphfwksmb4.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphfwksmb4.jl:23\ntest set: Test\
    \ Failed at /tmp/tmphfwksmb4.jl:30\n  Expression: candidate([100, -1, -2, -3,\
    \ 10, -5]) == -6\n   Evaluated: 94 == -6\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] ma"
  timestamp: 1659822295
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    min_sum = sum(nums)\n    for\
    \ i in 1:length(nums)\n        temp_sum = 0\n        for j in i:length(nums)\n\
    \            temp_sum += nums[j]\n            if temp_sum < min_sum\n        \
    \        min_sum = temp_sum\n            end\n        end\n    end\n    return\
    \ min_sum\nend\n\"\"\"\n    The array is guaranteed to contain at least one positive\
    \ number.\n    \"\"\"\nnums = [1, -1, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3,\
    \ -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3,\
    \ -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3,\
    \ -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3,\
    \ -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3,\
    \ -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3,\
    \ -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3,\
    \ -3, -3, -3, -3, -3, -3, -3, -\nusing Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\
    \t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) ==\
    \ -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: missing separator in array expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpg3vliy2q.jl:23\nin expression starting at\
    \ /tmp/tmpg3vliy2q.jl:23\n"
  stdout: ''
  timestamp: 1659822294
- exit_code: 0
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    min = 999999999\n    for i\
    \ in 1:length(nums)\n        temp = 0\n        for j in i:length(nums)\n     \
    \       temp += nums[j]\n            if temp < min\n                min = temp\n\
    \            end\n        end\n    end\n    return min\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4])\
    \ == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3,\
    \ 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659822293
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    A = zeros(Int64, length(nums))\n\
    \    A[1] = nums[1]\n    minimum = nums[1]\n    for i = 2:length(nums)\n     \
    \   A[i] = max(A[i-1]+nums[i], nums[i])\n        minimum = min(minimum, A[i])\n\
    \    end\n    return minimum\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1,\
    \ -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 8 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpbw2sjk80.jl:18

    '
  stdout: "test set: Test Failed at /tmp/tmpbw2sjk80.jl:21\n  Expression: candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1\n   Evaluated: 2 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpbw2sjk80.jl:21 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpbw2sjk80.jl:20\ntest set: Test Failed at /tmp/tmpbw2sjk80.jl:22\n\
    \  Expression: candidate([-1, -2, -3]) == -6\n   Evaluated: -3 == -6\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbw2sjk80.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbw2sjk80.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpbw2sjk80.jl:23\n  Expression: candidate([-1, -2, -3, 2, -10])\
    \ == -14\n   Evaluated: -8 == -14\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbw2sjk80.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbw2sjk80.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpbw2sjk80.jl:26\n  Expression: candidate([-1, -2, -3, 10, -5])\
    \ == -6\n   Evaluated: -3 == -6\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbw2sjk80.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbw2sjk80.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpbw2sjk80.jl:27\n  Expression: candidate([100, -1, -2, -3,\
    \ 10, -5]) == -6\n   Evaluated: 94 == -6\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] ma"
  timestamp: 1659822295
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    \"\"\"\n    Input: nums = [2,\
    \ 3, 1, 2, 4, 3]\n    Output: 7\n    Explanation: sub-array [4, 3] has the minimal\
    \ sum.\n    \"\"\"\n    n::Int64 = length(nums)\n    min_sum::Int64 = Inf\n  \
    \  curr_sum::Int64 = 0\n    minimum_sum_so_far::Int64 = 0\n    for i::Int64 in\
    \ 1:n\n        curr_sum += nums[i]\n        minimum_sum_so_far = min(minimum_sum_so_far,\
    \ curr_sum)\n        min_sum = min(min_sum, curr_sum - minimum_sum_so_far)\n \
    \   end\n    return min_sum\nend\nprintln(minSubArraySum([2, 3, 1, 2, 4, 3]))\n\
    using Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: InexactError: Int64(Inf)\nStacktrace:\n [1] Int64\n \
    \  @ ./float.jl:812 [inlined]\n [2] convert(#unused#::Type{Int64}, x::Float64)\n\
    \   @ Base ./number.jl:7\n [3] minSubArraySum(nums::Vector{Int64})\n   @ Main\
    \ /tmp/tmps3mbtg7o.jl:13\n [4] top-level scope\n   @ /tmp/tmps3mbtg7o.jl:23\n\
    in expression starting at /tmp/tmps3mbtg7o.jl:23\n"
  stdout: ''
  timestamp: 1659822295
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    running_sum = 0\n    min_val\
    \ = typemax(Int64)\n    for num in nums\n        running_sum += num\n        if\
    \ running_sum < min_val\n            min_val = running_sum\n        end\n    end\n\
    \    return min_val\nend\nusing Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\
    \t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) ==\
    \ -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp8nd262qf.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp8nd262qf.jl:22\n  Expression: candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1\n   Evaluated: 2 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp8nd262qf.jl:22 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp8nd262qf.jl:21\ntest set: Test Failed at /tmp/tmp8nd262qf.jl:28\n\
    \  Expression: candidate([100, -1, -2, -3, 10, -5]) == -6\n   Evaluated: 94 ==\
    \ -6\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8nd262qf.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8nd262qf.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp8nd262qf.jl:29\n  Expression: candidate([10, 11, 13, 8, 3,\
    \ 4]) == 3\n   Evaluated: 10 == 3\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8nd262qf.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8nd262qf.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp8nd262qf.jl:30\n  Expression: candidate([100, -33, 32, -1,\
    \ 0, -2]) == -33\n   Evaluated: 67 == -33\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp8nd262qf.jl:30 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp8nd262qf.jl:21\ntest set: Test Failed at /tmp/tmp8nd262qf.jl:33\n\
    \  Expression: candidate([1, -1]) == -1\n   Evaluated: 0 == -1\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macr"
  timestamp: 1659822295
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    n = length(nums)\n    min_sum\
    \ = Inf\n    curr_sum = 0\n    for i in 1:n\n        if curr_sum > 0\n       \
    \     curr_sum = curr_sum + nums[i]\n        else\n            curr_sum = nums[i]\n\
    \        end\n        min_sum = min(min_sum, curr_sum)\n    end\n    return min_sum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 9 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmple0xbsd6.jl:22

    '
  stdout: "test set: Test Failed at /tmp/tmple0xbsd6.jl:25\n  Expression: candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1\n   Evaluated: 2 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmple0xbsd6.jl:25 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmple0xbsd6.jl:24\ntest set: Test Failed at /tmp/tmple0xbsd6.jl:26\n\
    \  Expression: candidate([-1, -2, -3]) == -6\n   Evaluated: -3 == -6\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmple0xbsd6.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmple0xbsd6.jl:24\ntest set: Test\
    \ Failed at /tmp/tmple0xbsd6.jl:27\n  Expression: candidate([-1, -2, -3, 2, -10])\
    \ == -14\n   Evaluated: -8 == -14\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmple0xbsd6.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmple0xbsd6.jl:24\ntest set: Test\
    \ Failed at /tmp/tmple0xbsd6.jl:28\n  Expression: candidate([-9999999999999999])\
    \ == -9999999999999999\n   Evaluated: -10000000000000000 == -9999999999999999\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmple0xbsd6.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmple0xbsd6.jl:24\ntest set: Test\
    \ Failed at /tmp/tmple0xbsd6.jl:30\n  Expression: candidate([-1, -2, -3, 10, -5])\
    \ == -6\n   Evaluated: -3 == -6\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1."
  timestamp: 1659822295
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    # Initialize global and local\
    \ sums. \n    # Set global sum to Int64.MAX to ensure it's larger than any non-empty\
    \ sub-array\n    global_sum = Int64.MAX\n    local_sum = 0\n    \n    # Iterate\
    \ through all elements in the array\n    for num in nums\n        # Add current\
    \ element to local sum\n        local_sum += num\n        \n        # If local\
    \ sum is less than global sum, set global sum to local sum\n        if local_sum\
    \ < global_sum\n            global_sum = local_sum\n        end\n        \n  \
    \      # If local sum is negative, reset it to 0\n        if local_sum < 0\n \
    \           local_sum = 0\n        end\n    end\n    \n    # Return the global\
    \ sum\n    return global_sum\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1,\
    \ -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 12 errored,
    0 broken.

    in expression starting at /tmp/tmpmtmwrnur.jl:33

    '
  stdout: "test set: Error During Test at /tmp/tmpmtmwrnur.jl:36\n  Test threw exception\n\
    \  Expression: candidate([2, 3, 4, 1, 2, 4]) == 1\n  type DataType has no field\
    \ MAX\n  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:37 [inlined]\n   [2]\
    \ minSubArraySum(nums::Vector{Int64})\n     @ Main /tmp/tmpmtmwrnur.jl:9\n   [3]\
    \ macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpmtmwrnur.jl:36 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpmtmwrnur.jl:35\ntest set:\
    \ Error During Test at /tmp/tmpmtmwrnur.jl:37\n  Test threw exception\n  Expression:\
    \ candidate([-1, -2, -3]) == -6\n  type DataType has no field MAX\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:37 [inlined]\n   [2] minSubArraySum(nums::Vector{Int64})\n\
    \     @ Main /tmp/tmpmtmwrnur.jl:9\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpmtmwrnur.jl:37 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpmtmwrnur.jl:35\ntest set:\
    \ Error During Test at /tmp/tmpmtmwrnur.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([-1, -2, -3, 2, -10]) == -14\n  type DataType has no field MAX\n \
    \ Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:37 [inlined]\n   [2] minSubArraySum(nums::Vector{Int64})\n\
    \     @ Main /tmp/tmpmtmwrnur.jl:9\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpmtmwrnur.jl:38 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpmtmwrnur.jl:35\ntest set:\
    \ Error During Test at /tmp/tmpmtmwrnur.jl:39\n  Test threw exception\n  Expression:\
    \ candidate([-9999999999999999]) == -9999999999999999\n  type Dat"
  timestamp: 1659822297
- exit_code: 0
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    n = length(nums)\n    min_sum\
    \ = nums[1]\n    curr_sum = nums[1]\n    for i in 2:n\n        curr_sum = (curr_sum\
    \ + nums[i])\n        if curr_sum >= 0\n            curr_sum = nums[i]\n     \
    \   end\n        min_sum = min(min_sum, curr_sum)\n    end\n    return min_sum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659822293
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    min_so_far = 0\n    min_ending_here\
    \ = 0\n    for x in nums\n        min_ending_here = min(0, min_ending_here + x)\n\
    \        min_so_far = min(min_so_far, min_ending_here)\n    end\n    return min_so_far\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 9 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmph4fligd8.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmph4fligd8.jl:20\n  Expression: candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmph4fligd8.jl:20 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmph4fligd8.jl:19\ntest set: Test Failed at /tmp/tmph4fligd8.jl:27\n\
    \  Expression: candidate([10, 11, 13, 8, 3, 4]) == 3\n   Evaluated: 0 == 3\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmph4fligd8.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmph4fligd8.jl:19\ntest set: Test\
    \ Failed at /tmp/tmph4fligd8.jl:30\n  Expression: candidate([7]) == 7\n   Evaluated:\
    \ 0 == 7\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmph4fligd8.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmph4fligd8.jl:19\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    9     3     12\n"
  timestamp: 1659822295
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    min_sum = Inf\n    sum = 0\n\
    \    for num in nums\n        sum += num\n        min_sum = min(min_sum, sum)\n\
    \        sum = max(sum, 0)\n    end\n    return min_sum\nend\nprintln(minSubArraySum([2,3,-1,-5,5]))\
    \ #-2\nusing Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 9 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp9x40w4q_.jl:19

    '
  stdout: "-1\ntest set: Test Failed at /tmp/tmp9x40w4q_.jl:22\n  Expression: candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1\n   Evaluated: 2 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp9x40w4q_.jl:22 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp9x40w4q_.jl:21\ntest set: Test Failed at /tmp/tmp9x40w4q_.jl:23\n\
    \  Expression: candidate([-1, -2, -3]) == -6\n   Evaluated: -3 == -6\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9x40w4q_.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9x40w4q_.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp9x40w4q_.jl:24\n  Expression: candidate([-1, -2, -3, 2, -10])\
    \ == -14\n   Evaluated: -8 == -14\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9x40w4q_.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9x40w4q_.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp9x40w4q_.jl:25\n  Expression: candidate([-9999999999999999])\
    \ == -9999999999999999\n   Evaluated: -10000000000000000 == -9999999999999999\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9x40w4q_.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9x40w4q_.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp9x40w4q_.jl:27\n  Expression: candidate([-1, -2, -3, 10, -5])\
    \ == -6\n   Evaluated: -3 == -6\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/"
  timestamp: 1659822296
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    minimum_sum = big(0)\n    current_sum\
    \ = big(0)\n    for i in nums\n        current_sum += i\n        if current_sum\
    \ < minimum_sum\n            minimum_sum = current_sum\n        end\n        if\
    \ current_sum > 0\n            current_sum = 0\n        end\n    end\n    return\
    \ minimum_sum\nend\nnums = [2,3,-2,4]\nprintln(minSubArraySum(nums))\nusing Test\n\
    \n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1,\
    \ 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 9 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmplql3ifil.jl:24

    '
  stdout: "-2\ntest set: Test Failed at /tmp/tmplql3ifil.jl:27\n  Expression: candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmplql3ifil.jl:27 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmplql3ifil.jl:26\ntest set: Test Failed at /tmp/tmplql3ifil.jl:34\n\
    \  Expression: candidate([10, 11, 13, 8, 3, 4]) == 3\n   Evaluated: 0 == 3\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplql3ifil.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplql3ifil.jl:26\ntest set: Test\
    \ Failed at /tmp/tmplql3ifil.jl:37\n  Expression: candidate([7]) == 7\n   Evaluated:\
    \ 0 == 7\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplql3ifil.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplql3ifil.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    9     3     12\n"
  timestamp: 1659822295
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    sum: Int64 = 0 \n    min_sum:\
    \ Int64 = -Inf \n    for i=1:length(nums)\n        sum += nums[i]\n        min_sum\
    \ = min(min_sum, sum)\n        if sum > 0 \n            sum = 0\n        end\n\
    \    end\n    return min_sum\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1,\
    \ -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'WARNING: Method definition :(Any, Any) in module Main at /tmp/tmpdw2fwnfd.jl:7
    overwritten at /tmp/tmpdw2fwnfd.jl:8.

    ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 12 errored, 0 broken.

    in expression starting at /tmp/tmpdw2fwnfd.jl:20

    '
  stdout: "test set: Error During Test at /tmp/tmpdw2fwnfd.jl:23\n  Test threw exception\n\
    \  Expression: candidate([2, 3, 4, 1, 2, 4]) == 1\n  UndefVarError: sum not defined\n\
    \  Stacktrace:\n   [1] minSubArraySum(nums::Vector{Int64})\n     @ Main /tmp/tmpdw2fwnfd.jl:10\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpdw2fwnfd.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpdw2fwnfd.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpdw2fwnfd.jl:24\n  Test threw exception\n  Expression:\
    \ candidate([-1, -2, -3]) == -6\n  UndefVarError: sum not defined\n  Stacktrace:\n\
    \   [1] minSubArraySum(nums::Vector{Int64})\n     @ Main /tmp/tmpdw2fwnfd.jl:10\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpdw2fwnfd.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpdw2fwnfd.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpdw2fwnfd.jl:25\n  Test threw exception\n  Expression:\
    \ candidate([-1, -2, -3, 2, -10]) == -14\n  UndefVarError: sum not defined\n \
    \ Stacktrace:\n   [1] minSubArraySum(nums::Vector{Int64})\n     @ Main /tmp/tmpdw2fwnfd.jl:10\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpdw2fwnfd.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpdw2fwnfd.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpdw2fwnfd.jl:26\n  Test threw exception\n  Expression:\
    \ candidate([-9999999999999999]) == -9999999999999999\n  UndefVarError: sum not\
    \ defined\n  Stacktrace:\n   [1] minSubArraySum(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpdw2fwnfd.jl:10\n   [2] macro expansion\n     @"
  timestamp: 1659822297
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    min_sum = nums[1]\n    total\
    \ = 0\n    for n in nums\n        total += n\n        min_sum = min(min_sum, total)\n\
    \        total = max(total, 0)\n    end\n    return min_sum\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1,\
    \ 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 8 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmptgyw029h.jl:18

    '
  stdout: "test set: Test Failed at /tmp/tmptgyw029h.jl:21\n  Expression: candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1\n   Evaluated: 2 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmptgyw029h.jl:21 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmptgyw029h.jl:20\ntest set: Test Failed at /tmp/tmptgyw029h.jl:22\n\
    \  Expression: candidate([-1, -2, -3]) == -6\n   Evaluated: -3 == -6\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptgyw029h.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptgyw029h.jl:20\ntest set: Test\
    \ Failed at /tmp/tmptgyw029h.jl:23\n  Expression: candidate([-1, -2, -3, 2, -10])\
    \ == -14\n   Evaluated: -8 == -14\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptgyw029h.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptgyw029h.jl:20\ntest set: Test\
    \ Failed at /tmp/tmptgyw029h.jl:26\n  Expression: candidate([-1, -2, -3, 10, -5])\
    \ == -6\n   Evaluated: -3 == -6\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptgyw029h.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptgyw029h.jl:20\ntest set: Test\
    \ Failed at /tmp/tmptgyw029h.jl:27\n  Expression: candidate([100, -1, -2, -3,\
    \ 10, -5]) == -6\n   Evaluated: 94 == -6\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] ma"
  timestamp: 1659822296
- exit_code: 0
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    min_sum = Inf \n    curr_sum\
    \ = 0 \n    for (i, num) in enumerate(nums)\n        curr_sum += num \n      \
    \  if curr_sum < min_sum\n            min_sum = curr_sum \n        end \n    \
    \    if curr_sum > 0 \n            curr_sum = 0 \n        end \n    end \n   \
    \ return min_sum \nend \nusing Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\
    \t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) ==\
    \ -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659822294
- exit_code: 0
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    result = typemax(Int64)\n \
    \   sum = 0\n    for (i,num) in enumerate(nums)\n        sum = sum + num\n   \
    \     if sum < result\n            result = sum\n        end\n        if sum >\
    \ 0\n            sum = 0\n        end\n    end\n    return result\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659822294
- exit_code: 0
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    minimum_sum = nums[1]\n   \
    \ current_sum = nums[1]\n    for i = 2:length(nums)\n        current_sum = min(nums[i],\
    \ current_sum + nums[i])\n        minimum_sum = min(minimum_sum, current_sum)\n\
    \    end\n    return minimum_sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1,\
    \ -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659822294
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    min = nums[1]\n    sum = 0\n\
    \    for i in nums\n        sum += i\n        if sum < min\n            min =\
    \ sum\n        end\n    end\n    return min\nend\n\"\"\"\n    Maximum Subarray\n\
    \    Given an integer array nums, find the contiguous subarray(containing at least\
    \ one number)\n    which has the largest sum and return its sum.\n    Example\n\
    \            \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\
    \t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) ==\
    \ -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: cannot document the following expression:\n\nusing Test\n\
    \nStacktrace:\n [1] error(::String, ::String)\n   @ Base ./error.jl:42\n [2] top-level\
    \ scope\n   @ /tmp/tmpwa33osfy.jl:17\nin expression starting at /tmp/tmpwa33osfy.jl:17\n"
  stdout: ''
  timestamp: 1659822296
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    \"\"\"\n    Given an array\
    \ of integers nums, find the minimum sum of any non-empty sub-array\n    of nums.\n\
    \    \"\"\"\n    i, j = 1, length(nums)\n    t, r = sum(nums[i:j]), sum(nums[i:j])\n\
    \    while i <= j\n        if t > 0\n            j -= 1\n            t += nums[j]\n\
    \        else\n            i += 1\n            t += nums[i]\n        end\n   \
    \     r = min(r, t)\n    end\n    return r\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t\
    @test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3, 2, -10])\
    \ == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\t@test(candidate([0,\
    \ 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3, 10, -5]) == -6)\n\t\
    @test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10, 11,\
    \ 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\t\
    @test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 11 errored,
    0 broken.

    in expression starting at /tmp/tmpek4n4xve.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmpek4n4xve.jl:30\n  Test threw exception\n\
    \  Expression: candidate([2, 3, 4, 1, 2, 4]) == 1\n  BoundsError: attempt to access\
    \ 6-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] minSubArraySum(nums::Vector{Int64})\n     @\
    \ Main /tmp/tmpek4n4xve.jl:16\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpek4n4xve.jl:30 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpek4n4xve.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpek4n4xve.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([-1, -2, -3]) == -6\n  BoundsError: attempt to access 3-element Vector{Int64}\
    \ at index [4]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] minSubArraySum(nums::Vector{Int64})\n     @ Main /tmp/tmpek4n4xve.jl:19\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpek4n4xve.jl:31 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpek4n4xve.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpek4n4xve.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([-1, -2, -3, 2, -10]) == -14\n  BoundsError: attempt to access 5-element\
    \ Vector{Int64} at index [6]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861\
    \ [inlined]\n   [2] minSubArraySum(nums::Vector{Int64})\n     @ Main /tmp/tmpek4n4xve.jl:19\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpek4n4xve.jl:32 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpek4n4xve.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpek4"
  timestamp: 1659822298
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n   \n    # Prefix sums\n    pfs\
    \ = zeros(Int64, length(nums))\n    pfs[1] = nums[1]\n    for i = 2:length(nums)\n\
    \        pfs[i] = pfs[i-1] + nums[i]\n    end\n    \n    # Find minimum subarray\
    \ sum\n    minval = minimum(pfs)\n    min_subarr_sum = minval\n    for i = 1:length(nums)\n\
    \        for j = 1:length(nums)\n            if i >= j\n                continue\n\
    \            end\n            subarr_sum = pfs[j] - pfs[i-1]\n            if subarr_sum\
    \ < min_subarr_sum\n                min_subarr_sum = subarr_sum\n            end\n\
    \        end\n    end\n    \n    return min_subarr_sum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4])\
    \ == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3,\
    \ 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 9 errored,
    0 broken.

    in expression starting at /tmp/tmpc08825er.jl:34

    '
  stdout: "test set: Error During Test at /tmp/tmpc08825er.jl:37\n  Test threw exception\n\
    \  Expression: candidate([2, 3, 4, 1, 2, 4]) == 1\n  BoundsError: attempt to access\
    \ 6-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] minSubArraySum(nums::Vector{Int64})\n     @\
    \ Main /tmp/tmpc08825er.jl:23\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpc08825er.jl:37 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpc08825er.jl:36\ntest set:\
    \ Error During Test at /tmp/tmpc08825er.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([-1, -2, -3]) == -6\n  BoundsError: attempt to access 3-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] minSubArraySum(nums::Vector{Int64})\n     @ Main /tmp/tmpc08825er.jl:23\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpc08825er.jl:38 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpc08825er.jl:36\ntest set:\
    \ Error During Test at /tmp/tmpc08825er.jl:39\n  Test threw exception\n  Expression:\
    \ candidate([-1, -2, -3, 2, -10]) == -14\n  BoundsError: attempt to access 5-element\
    \ Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861\
    \ [inlined]\n   [2] minSubArraySum(nums::Vector{Int64})\n     @ Main /tmp/tmpc08825er.jl:23\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpc08825er.jl:39 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpc08825er.jl:36\ntest set:\
    \ Error During Test at /tmp/tmpc08"
  timestamp: 1659822298
- exit_code: 0
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    n = length(nums)\n    acc =\
    \ 0\n    m = nums[1]\n    for i = 1:n\n        acc += nums[i]\n        m = min(m,\
    \ acc)\n        if acc > 0\n            acc = 0\n        end\n    end\n    return\
    \ m\nend\nusing Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659822295
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    \"\"\"\n    >>> minSubArraySum([1,\
    \ 2, 3, 4, 5])\n    1\n    >>> minSubArraySum([1, -2, 3, 4, 5])\n    -2\n    >>>\
    \ minSubArraySum([-1, -2, -3, -4, -5])\n    -15\n    \"\"\"\n    # Let's assume\
    \ that all numbers are negative\n    sum::Int64 = minimum(nums)\n    current_sum::Int64\
    \ = 0\nusing Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpfuk9hgyh.jl:6\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpfuk9hgyh.jl:1\n\
    in expression starting at /tmp/tmpfuk9hgyh.jl:1\n"
  stdout: ''
  timestamp: 1659822296
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    n = length(nums)\n    sum_val\
    \ = 0\n    min_sum = 0\n    for i=1:n\n        sum_val += nums[i]\n        if\
    \ sum_val < min_sum\n            min_sum = sum_val\n        end\n    end\n   \
    \ return min_sum\nend\nusing Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\
    \t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) ==\
    \ -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpzrwjs49s.jl:20

    '
  stdout: "test set: Test Failed at /tmp/tmpzrwjs49s.jl:23\n  Expression: candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpzrwjs49s.jl:23 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpzrwjs49s.jl:22\ntest set: Test Failed at /tmp/tmpzrwjs49s.jl:29\n\
    \  Expression: candidate([100, -1, -2, -3, 10, -5]) == -6\n   Evaluated: 0 ==\
    \ -6\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzrwjs49s.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzrwjs49s.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpzrwjs49s.jl:30\n  Expression: candidate([10, 11, 13, 8, 3,\
    \ 4]) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzrwjs49s.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzrwjs49s.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpzrwjs49s.jl:31\n  Expression: candidate([100, -33, 32, -1,\
    \ 0, -2]) == -33\n   Evaluated: 0 == -33\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpzrwjs49s.jl:31 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpzrwjs49s.jl:22\ntest set: Test Failed at /tmp/tmpzrwjs49s.jl:33\n\
    \  Expression: candidate([7]) == 7\n   Evaluated: 0 == 7\nStacktrace:\n [1] macro\
    \ expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansi"
  timestamp: 1659822297
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    min_ = INF\n    last = 0\n\
    \    for i in 1:length(nums)\n        if last > 0\n            last += nums[i]\n\
    \        else\n            last = nums[i]\n        end\n        min_ = min(min_,\
    \ last)\n    end\n    return min_\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1,\
    \ -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 12 errored,
    0 broken.

    in expression starting at /tmp/tmpsl042og8.jl:21

    '
  stdout: "test set: Error During Test at /tmp/tmpsl042og8.jl:24\n  Test threw exception\n\
    \  Expression: candidate([2, 3, 4, 1, 2, 4]) == 1\n  UndefVarError: INF not defined\n\
    \  Stacktrace:\n   [1] minSubArraySum(nums::Vector{Int64})\n     @ Main /tmp/tmpsl042og8.jl:7\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpsl042og8.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpsl042og8.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpsl042og8.jl:25\n  Test threw exception\n  Expression:\
    \ candidate([-1, -2, -3]) == -6\n  UndefVarError: INF not defined\n  Stacktrace:\n\
    \   [1] minSubArraySum(nums::Vector{Int64})\n     @ Main /tmp/tmpsl042og8.jl:7\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpsl042og8.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpsl042og8.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpsl042og8.jl:26\n  Test threw exception\n  Expression:\
    \ candidate([-1, -2, -3, 2, -10]) == -14\n  UndefVarError: INF not defined\n \
    \ Stacktrace:\n   [1] minSubArraySum(nums::Vector{Int64})\n     @ Main /tmp/tmpsl042og8.jl:7\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpsl042og8.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpsl042og8.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpsl042og8.jl:27\n  Test threw exception\n  Expression:\
    \ candidate([-9999999999999999]) == -9999999999999999\n  UndefVarError: INF not\
    \ defined\n  Stacktrace:\n   [1] minSubArraySum(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpsl042og8.jl:7\n   [2] macro expansion\n     @ ~/."
  timestamp: 1659822298
- exit_code: 0
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    # find the minimum sum of any\
    \ sub-array\n    #   of nums\n    # \n    # \n    # @param {int[]} nums\n    #\
    \ @return {int}\n    \n    _sum = nums[1]\n    min_sum = nums[1]\n    n = length(nums)\n\
    \    for i = 2:n\n        _sum = min(_sum + nums[i], nums[i])\n        min_sum\
    \ = min(min_sum, _sum)\n    end\n    return min_sum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4])\
    \ == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3,\
    \ 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659822295
- exit_code: 0
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    minsum = minimum(nums) \n \
    \   for i in 1:length(nums) \n        csum = 0 \n        for j in i:length(nums)\
    \ \n            csum += nums[j] \n            if csum < minsum \n            \
    \    minsum = csum \n            end \n        end \n    end \n    return minsum\
    \ \nend \nusing Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659822295
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    min_sum = nums[1]\n    curr_sum\
    \ = nums[1]\n    for i = 2:length(nums)\n        curr_sum = min(nums[i], curr_sum\
    \ + nums[i])\n        min_sum = min(min_sum, curr_sum)\n    end\n    return min_sum\n\
    end\n \n\"\"\"\n        0 1 2 3 4 5 6 7 8 9\nInputs: [-2, 1, -3, 4, -1, 2, 1,\
    \ -5, 4]\nOutput: -6 \nExplanation: The sub-array [4,-1,2,1] has the minimum sum\
    \ -6\n\"\"\"\nusing Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\t\
    @test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) ==\
    \ -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: cannot document the following expression:\n\nusing Test\n\
    \nStacktrace:\n [1] error(::String, ::String)\n   @ Base ./error.jl:42\n [2] top-level\
    \ scope\n   @ /tmp/tmpifrjgfc9.jl:16\nin expression starting at /tmp/tmpifrjgfc9.jl:16\n"
  stdout: ''
  timestamp: 1659822297
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    window_start::Int64 = 1\n \
    \   window_end::Int64 = 2\n    min_sum::Int64 = nums[1] + nums[2]\n    curr_sum::Int64\
    \ = min_sum\n    while window_end <= length(nums)\n        curr_sum += nums[window_end]\n\
    \        while curr_sum > min_sum\n            curr_sum -= nums[window_start]\n\
    \            window_start += 1\n        end\n        min_sum = curr_sum\n    \
    \    window_end += 1\n    end\n    return min_sum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4])\
    \ == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3,\
    \ 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp9inpe_uj.jl:24

    '
  stdout: "test set: Test Failed at /tmp/tmp9inpe_uj.jl:27\n  Expression: candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1\n   Evaluated: 3 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp9inpe_uj.jl:27 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp9inpe_uj.jl:26\ntest set: Test Failed at /tmp/tmp9inpe_uj.jl:28\n\
    \  Expression: candidate([-1, -2, -3]) == -6\n   Evaluated: -8 == -6\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9inpe_uj.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9inpe_uj.jl:26\ntest set: Error\
    \ During Test at /tmp/tmp9inpe_uj.jl:29\n  Test threw exception\n  Expression:\
    \ candidate([-1, -2, -3, 2, -10]) == -14\n  BoundsError: attempt to access 5-element\
    \ Vector{Int64} at index [6]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861\
    \ [inlined]\n   [2] minSubArraySum(nums::Vector{Int64})\n     @ Main /tmp/tmp9inpe_uj.jl:14\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp9inpe_uj.jl:29 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp9inpe_uj.jl:26\ntest set:\
    \ Error During Test at /tmp/tmp9inpe_uj.jl:30\n  Test threw exception\n  Expression:\
    \ candidate([-9999999999999999]) == -9999999999999999\n  BoundsError: attempt\
    \ to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n   [1] getindex\n\
    \     @ ./array.jl:861 [inlined]\n   [2] minSubArraySum(nums::Vector{Int64})\n\
    \     @ Main /tmp/tmp9inpe_uj.jl:9\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n "
  timestamp: 1659822299
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    \"\"\"\n    Return the minimum\
    \ sum of any non-empty sub-array of nums.\n    \"\"\"\n    min_ending_here = 0\n\
    \    min_so_far = Inf\nusing Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\
    \t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) ==\
    \ -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpbq43jy2l.jl:6\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpbq43jy2l.jl:1\n\
    in expression starting at /tmp/tmpbq43jy2l.jl:1\n"
  stdout: ''
  timestamp: 1659822297
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    local minSum::Int64, sum::Int64\
    \ = 0,0\n    for num in nums\n        sum += num\n        minSum = min(minSum,\
    \ sum)\n    end\n    return minSum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1,\
    \ -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp9qf_gdxn.jl:16

    '
  stdout: "test set: Test Failed at /tmp/tmp9qf_gdxn.jl:19\n  Expression: candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp9qf_gdxn.jl:19 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp9qf_gdxn.jl:18\ntest set: Test Failed at /tmp/tmp9qf_gdxn.jl:25\n\
    \  Expression: candidate([100, -1, -2, -3, 10, -5]) == -6\n   Evaluated: 0 ==\
    \ -6\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9qf_gdxn.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9qf_gdxn.jl:18\ntest set: Test\
    \ Failed at /tmp/tmp9qf_gdxn.jl:26\n  Expression: candidate([10, 11, 13, 8, 3,\
    \ 4]) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9qf_gdxn.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9qf_gdxn.jl:18\ntest set: Test\
    \ Failed at /tmp/tmp9qf_gdxn.jl:27\n  Expression: candidate([100, -33, 32, -1,\
    \ 0, -2]) == -33\n   Evaluated: 0 == -33\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp9qf_gdxn.jl:27 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp9qf_gdxn.jl:18\ntest set: Test Failed at /tmp/tmp9qf_gdxn.jl:29\n\
    \  Expression: candidate([7]) == 7\n   Evaluated: 0 == 7\nStacktrace:\n [1] macro\
    \ expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansi"
  timestamp: 1659822297
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    minimum_sum = typemax(Int64)\n\
    \    current_sum = 0\n    left = 1\n    right = 1\n    while right <= length(nums)\n\
    \        current_sum += nums[right]\n        while current_sum >= 0 && left <\
    \ right\n            minimum_sum = min(minimum_sum, current_sum)\n           \
    \ current_sum -= nums[left]\n            left += 1\n        end\n        right\
    \ += 1\n    end\n    return minimum_sum\nend\nusing Test\n\n@testset begin\n\n\
    candidate = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1,\
    \ -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 12 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp2wp55jhz.jl:24

    '
  stdout: "test set: Test Failed at /tmp/tmp2wp55jhz.jl:27\n  Expression: candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1\n   Evaluated: 3 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp2wp55jhz.jl:27 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp2wp55jhz.jl:26\ntest set: Test Failed at /tmp/tmp2wp55jhz.jl:28\n\
    \  Expression: candidate([-1, -2, -3]) == -6\n   Evaluated: 9223372036854775807\
    \ == -6\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2wp55jhz.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2wp55jhz.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp2wp55jhz.jl:29\n  Expression: candidate([-1, -2, -3, 2, -10])\
    \ == -14\n   Evaluated: 9223372036854775807 == -14\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp2wp55jhz.jl:29 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp2wp55jhz.jl:26\ntest set: Test Failed at /tmp/tmp2wp55jhz.jl:30\n\
    \  Expression: candidate([-9999999999999999]) == -9999999999999999\n   Evaluated:\
    \ 9223372036854775807 == -9999999999999999\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp2wp55jhz.jl:30 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp2wp55jhz.jl:26\ntest set: Test Failed at /tmp/tmp2wp55jhz.jl:31\n\
    \  Expression: candidate([0, 10, 20, 1000000]) == 0\n   Evaluated: 10 == 0\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/env"
  timestamp: 1659822298
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    \"\"\"\n    Since we need a\
    \ non-empty sub-array of nums, we can initialise the minimum sum\n    to the first\
    \ element of nums. We then iterate through nums, adding each element\n    to the\
    \ partial sum. If the partial sum is less than the minimum sum, it becomes \n\
    \    the new minimum sum. Else, if the partial sum is greater than the minimum\
    \ sum,\n    we reset the partial sum to the element we are currently on. \n  \
    \  \"\"\"\n    minimum_sum = nums[1]\n    partial_sum = 0\n    for n in nums\n\
    \        partial_sum += n\n        if partial_sum < minimum_sum\n            minimum_sum\
    \ = partial_sum\n        elseif partial_sum > minimum_sum\n            partial_sum\
    \ = n\n        end\n    end\n    return minimum_sum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4])\
    \ == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3,\
    \ 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp6760if6j.jl:28

    '
  stdout: "test set: Test Failed at /tmp/tmp6760if6j.jl:31\n  Expression: candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1\n   Evaluated: 2 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp6760if6j.jl:31 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp6760if6j.jl:30\ntest set: Test Failed at /tmp/tmp6760if6j.jl:33\n\
    \  Expression: candidate([-1, -2, -3, 2, -10]) == -14\n   Evaluated: -8 == -14\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6760if6j.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6760if6j.jl:30\ntest set: Test\
    \ Failed at /tmp/tmp6760if6j.jl:37\n  Expression: candidate([100, -1, -2, -3,\
    \ 10, -5]) == -6\n   Evaluated: 5 == -6\nStacktrace:\n [1] macro expansion\n \
    \  @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp6760if6j.jl:37 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp6760if6j.jl:30\ntest set: Test Failed at /tmp/tmp6760if6j.jl:38\n\
    \  Expression: candidate([10, 11, 13, 8, 3, 4]) == 3\n   Evaluated: 7 == 3\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6760if6j.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6760if6j.jl:30\ntest set: Test\
    \ Failed at /tmp/tmp6760if6j.jl:39\n  Expression: candidate([100, -33, 32, -1,\
    \ 0, -2]) == -33\n   Evaluated: 29 == -33\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inli"
  timestamp: 1659822298
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    minimum = nums[1]\n    partial\
    \ = nums[1]\n    for i = 2:length(nums)\n        partial = minimum(partial + nums[i],\
    \ nums[i])\n        minimum = minimum(minimum, partial)\n    end\n    return minimum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 9 errored,
    0 broken.

    in expression starting at /tmp/tmp8jln1hdu.jl:17

    '
  stdout: "test set: Error During Test at /tmp/tmp8jln1hdu.jl:20\n  Test threw exception\n\
    \  Expression: candidate([2, 3, 4, 1, 2, 4]) == 1\n  MethodError: objects of type\
    \ Int64 are not callable\n  Maybe you forgot to use an operator such as *, ^,\
    \ %, / etc. ?\n  Stacktrace:\n   [1] minSubArraySum(nums::Vector{Int64})\n   \
    \  @ Main /tmp/tmp8jln1hdu.jl:10\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8jln1hdu.jl:20 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8jln1hdu.jl:19\ntest set:\
    \ Error During Test at /tmp/tmp8jln1hdu.jl:21\n  Test threw exception\n  Expression:\
    \ candidate([-1, -2, -3]) == -6\n  MethodError: objects of type Int64 are not\
    \ callable\n  Maybe you forgot to use an operator such as *, ^, %, / etc. ?\n\
    \  Stacktrace:\n   [1] minSubArraySum(nums::Vector{Int64})\n     @ Main /tmp/tmp8jln1hdu.jl:10\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8jln1hdu.jl:21 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8jln1hdu.jl:19\ntest set:\
    \ Error During Test at /tmp/tmp8jln1hdu.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([-1, -2, -3, 2, -10]) == -14\n  MethodError: objects of type Int64\
    \ are not callable\n  Maybe you forgot to use an operator such as *, ^, %, / etc.\
    \ ?\n  Stacktrace:\n   [1] minSubArraySum(nums::Vector{Int64})\n     @ Main /tmp/tmp8jln1hdu.jl:10\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8jln1hdu.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8jln1hdu.jl:19\ntest set:\
    \ Error During Test at /tmp/tmp8jl"
  timestamp: 1659822299
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    min_sum::Int64 = nums[1]\n\
    \    current_sum::Int64 = 0\n    for i in nums\n        current_sum += i\n   \
    \     if current_sum < min_sum\n            min_sum = current_sum\n        end\n\
    \    end\n    return min_sum\nend\n\"\"\"\n    Run the function on sample inputs\n\
    \    \"\"\"\nminSubArraySum([-3,4,-1,2,1,-5,4])\nusing Test\n\n@testset begin\n\
    \ncandidate = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t\
    @test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3, 2, -10])\
    \ == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\t@test(candidate([0,\
    \ 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3, 10, -5]) == -6)\n\t\
    @test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10, 11,\
    \ 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\t\
    @test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: cannot document the following expression:\n\nminSubArraySum([-3,\
    \ 4, -1, 2, 1, -5, 4])\n\nStacktrace:\n [1] error(::String, ::String)\n   @ Base\
    \ ./error.jl:42\n [2] top-level scope\n   @ /tmp/tmpxf8vxl0r.jl:17\nin expression\
    \ starting at /tmp/tmpxf8vxl0r.jl:17\n"
  stdout: ''
  timestamp: 1659822297
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    # Your code here\n    return\
    \ 0\nend\nusing Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 11 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmplp0r_pw_.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmplp0r_pw_.jl:15\n  Expression: candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmplp0r_pw_.jl:15 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmplp0r_pw_.jl:14\ntest set: Test Failed at /tmp/tmplp0r_pw_.jl:16\n\
    \  Expression: candidate([-1, -2, -3]) == -6\n   Evaluated: 0 == -6\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplp0r_pw_.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplp0r_pw_.jl:14\ntest set: Test\
    \ Failed at /tmp/tmplp0r_pw_.jl:17\n  Expression: candidate([-1, -2, -3, 2, -10])\
    \ == -14\n   Evaluated: 0 == -14\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplp0r_pw_.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplp0r_pw_.jl:14\ntest set: Test\
    \ Failed at /tmp/tmplp0r_pw_.jl:18\n  Expression: candidate([-9999999999999999])\
    \ == -9999999999999999\n   Evaluated: 0 == -9999999999999999\nStacktrace:\n [1]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplp0r_pw_.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplp0r_pw_.jl:14\ntest set: Test\
    \ Failed at /tmp/tmplp0r_pw_.jl:20\n  Expression: candidate([-1, -2, -3, 10, -5])\
    \ == -6\n   Evaluated: 0 == -6\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:4"
  timestamp: 1659822298
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    curr_min = nums[1]\n    sum\
    \ = nums[1]\n    start = 1\n    end = 1\n    while end < length(nums)\n      \
    \  while sum >= 0 && end < length(nums)\n            sum += nums[end]\n      \
    \      end += 1\n        end\n        while sum < 0 && start < end\n         \
    \   sum -= nums[start]\n            start += 1\n        end\n        if sum <\
    \ curr_min\n            curr_min = sum\n        end\n    end\n    return curr_min\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: invalid assignment location \"function minSubArraySum(nums::Vector{Int64})::Int64\n\
    \    # /tmp/tmp7yuwckrk.jl, line 6\n    # /tmp/tmp7yuwckrk.jl, line 7\n    curr_min\
    \ = nums[1]\n    # /tmp/tmp7yuwckrk.jl, line 8\n    sum = nums[1]\n    # /tmp/tmp7yuwckrk.jl,\
    \ line 9\n    start = 1\nend\" around /tmp/tmp7yuwckrk.jl:1\nStacktrace:\n [1]\
    \ top-level scope\n   @ /tmp/tmp7yuwckrk.jl:1\nin expression starting at /tmp/tmp7yuwckrk.jl:1\n"
  stdout: ''
  timestamp: 1659822297
- exit_code: 0
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    minsum = typemax(Int64)\n \
    \   currentsum = 0\n    for x in nums\n        currentsum += x\n        if currentsum\
    \ < minsum\n            minsum = currentsum\n        end\n        if currentsum\
    \ > 0\n            currentsum = 0\n        end\n    end\n    return minsum\nend\n\
    using Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659822296
- exit_code: 0
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    \"\"\"\n    Time complexity:\
    \ O(n)\n    Space complexity: O(1)\n    \"\"\"\n    @assert length(nums) > 0 \n\
    \    min_so_far, min_total = nums[1], nums[1]\n    for n in nums[2:end]\n    \
    \    min_so_far = min(n, min_so_far + n)\n        min_total = min(min_total, min_so_far)\n\
    \    end\n    return min_total\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1,\
    \ -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659822296
- exit_code: 0
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    n = length(nums)\n    dp =\
    \ Array{Int64}(undef, n)\n    dp[1] = nums[1]\n    for i = 2:n\n        dp[i]\
    \ = nums[i] + min(dp[i-1], 0)\n    end\n    return minimum(dp)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1,\
    \ 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659822296
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    s = 0\n    r = Array{Int64}(undef,\
    \ length(nums))\n    for i = 1:length(nums)\n        s += nums[i]\n        r[i]\
    \ = (s < r[i - 1] ? s : r[i - 1])\n    end\n    return r[end]\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1,\
    \ 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 12 errored,
    0 broken.

    in expression starting at /tmp/tmppm6oi6rq.jl:17

    '
  stdout: "test set: Error During Test at /tmp/tmppm6oi6rq.jl:20\n  Test threw exception\n\
    \  Expression: candidate([2, 3, 4, 1, 2, 4]) == 1\n  BoundsError: attempt to access\
    \ 6-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] minSubArraySum(nums::Vector{Int64})\n     @\
    \ Main /tmp/tmppm6oi6rq.jl:11\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmppm6oi6rq.jl:20 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmppm6oi6rq.jl:19\ntest set:\
    \ Error During Test at /tmp/tmppm6oi6rq.jl:21\n  Test threw exception\n  Expression:\
    \ candidate([-1, -2, -3]) == -6\n  BoundsError: attempt to access 3-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] minSubArraySum(nums::Vector{Int64})\n     @ Main /tmp/tmppm6oi6rq.jl:11\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmppm6oi6rq.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmppm6oi6rq.jl:19\ntest set:\
    \ Error During Test at /tmp/tmppm6oi6rq.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([-1, -2, -3, 2, -10]) == -14\n  BoundsError: attempt to access 5-element\
    \ Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861\
    \ [inlined]\n   [2] minSubArraySum(nums::Vector{Int64})\n     @ Main /tmp/tmppm6oi6rq.jl:11\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmppm6oi6rq.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmppm6oi6rq.jl:19\ntest set:\
    \ Error During Test at /tmp/tmppm6"
  timestamp: 1659822300
- exit_code: 0
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    # Subarrays\n    min_sum =\
    \ nums[1] \n    current_sum = nums[1]\n    # Loop over subarrays\n    for i in\
    \ 2:length(nums)\n        current_sum = min(nums[i], current_sum + nums[i])\n\
    \        min_sum = min(min_sum, current_sum)\n    end\n    return min_sum\nend\n\
    using Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659822297
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    minimum = 0\n    for i in 1:length(nums)\n\
    \        sum = 0\n        for j in i:length(nums)\n            sum += nums[j]\n\
    \            if sum < minimum\n                minimum = sum\n            end\n\
    \        end\n    end\n    return minimum\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t\
    @test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3, 2, -10])\
    \ == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\t@test(candidate([0,\
    \ 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3, 10, -5]) == -6)\n\t\
    @test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10, 11,\
    \ 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\t\
    @test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 9 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpll6zqtuq.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpll6zqtuq.jl:24\n  Expression: candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpll6zqtuq.jl:24 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpll6zqtuq.jl:23\ntest set: Test Failed at /tmp/tmpll6zqtuq.jl:31\n\
    \  Expression: candidate([10, 11, 13, 8, 3, 4]) == 3\n   Evaluated: 0 == 3\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpll6zqtuq.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpll6zqtuq.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpll6zqtuq.jl:34\n  Expression: candidate([7]) == 7\n   Evaluated:\
    \ 0 == 7\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpll6zqtuq.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpll6zqtuq.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    9     3     12\n"
  timestamp: 1659822298
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    min_sum = big(0)\n    running_sum\
    \ = big(0)\n    for num in nums\n        running_sum += num\n        if running_sum\
    \ < min_sum\n            min_sum = running_sum\n        end\n    end\n    return\
    \ min_sum\nend\nusing Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\t\
    @test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) ==\
    \ -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpb9f_070q.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpb9f_070q.jl:22\n  Expression: candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpb9f_070q.jl:22 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpb9f_070q.jl:21\ntest set: Test Failed at /tmp/tmpb9f_070q.jl:28\n\
    \  Expression: candidate([100, -1, -2, -3, 10, -5]) == -6\n   Evaluated: 0 ==\
    \ -6\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpb9f_070q.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpb9f_070q.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpb9f_070q.jl:29\n  Expression: candidate([10, 11, 13, 8, 3,\
    \ 4]) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpb9f_070q.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpb9f_070q.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpb9f_070q.jl:30\n  Expression: candidate([100, -33, 32, -1,\
    \ 0, -2]) == -33\n   Evaluated: 0 == -33\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpb9f_070q.jl:30 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpb9f_070q.jl:21\ntest set: Test Failed at /tmp/tmpb9f_070q.jl:32\n\
    \  Expression: candidate([7]) == 7\n   Evaluated: 0 == 7\nStacktrace:\n [1] macro\
    \ expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansi"
  timestamp: 1659822299
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    @test size(nums) != 0\n   \
    \ # Define current sum\n    curr_sum = nums[1]\n    # Define global sum\n    global_sum\
    \ = curr_sum\n    # Loop from index 2 to end of array\n    for ii in 2:size(nums,\
    \ 1)\n        # Update current sum if it is less than nums[ii]\n        curr_sum\
    \ = min(curr_sum + nums[ii], nums[ii])\n        # Update global sum if it is less\
    \ than current sum\n        global_sum = min(global_sum, curr_sum)\n    end\n\
    \    return global_sum\nend\nusing Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\
    \t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) ==\
    \ -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: UndefVarError: @test not defined\nStacktrace:\n [1] top-level\
    \ scope\n   @ :0\n [2] #macroexpand#51\n   @ ./expr.jl:115 [inlined]\n [3] macroexpand\n\
    \   @ ./expr.jl:114 [inlined]\n [4] docm(source::LineNumberNode, mod::Module,\
    \ meta::Any, ex::Any, define::Bool) (repeats 2 times)\n   @ Base.Docs ./docs/Docs.jl:537\n\
    \ [5] var\"@doc\"(::LineNumberNode, ::Module, ::String, ::Vararg{Any})\n   @ Core\
    \ ./boot.jl:517\nin expression starting at /tmp/tmpe60t7ipf.jl:1\nin expression\
    \ starting at /tmp/tmpe60t7ipf.jl:1\n"
  stdout: ''
  timestamp: 1659822298
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    minSum, sum = 0, 0\n    for\
    \ num in nums\n        sum += num\n        minSum = min(minSum, sum)\n    end\n\
    \    return minSum\nend\nusing Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\
    \t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) ==\
    \ -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpwyvrwwqe.jl:16

    '
  stdout: "test set: Test Failed at /tmp/tmpwyvrwwqe.jl:19\n  Expression: candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpwyvrwwqe.jl:19 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpwyvrwwqe.jl:18\ntest set: Test Failed at /tmp/tmpwyvrwwqe.jl:25\n\
    \  Expression: candidate([100, -1, -2, -3, 10, -5]) == -6\n   Evaluated: 0 ==\
    \ -6\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwyvrwwqe.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwyvrwwqe.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpwyvrwwqe.jl:26\n  Expression: candidate([10, 11, 13, 8, 3,\
    \ 4]) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwyvrwwqe.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwyvrwwqe.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpwyvrwwqe.jl:27\n  Expression: candidate([100, -33, 32, -1,\
    \ 0, -2]) == -33\n   Evaluated: 0 == -33\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpwyvrwwqe.jl:27 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpwyvrwwqe.jl:18\ntest set: Test Failed at /tmp/tmpwyvrwwqe.jl:29\n\
    \  Expression: candidate([7]) == 7\n   Evaluated: 0 == 7\nStacktrace:\n [1] macro\
    \ expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansi"
  timestamp: 1659822298
- exit_code: 0
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    minimum_so_far = Int64(typemax(Int64))\n\
    \    minimum_ending_here = 0\n    for i in 1:length(nums)\n        minimum_ending_here\
    \ = minimum_ending_here + nums[i]\n        if minimum_so_far > minimum_ending_here\n\
    \            minimum_so_far = minimum_ending_here\n        end\n        if minimum_ending_here\
    \ > 0\n            minimum_ending_here = 0\n        end\n    end\n    return minimum_so_far\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659822297
- exit_code: 0
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    local start, finish, sum, result\n\
    \    result = typemax(Int64)\n    start = 1\n    finish = 1\n    sum = 0\n   \
    \ while start <= length(nums) && finish <= length(nums)\n        sum += nums[finish]\n\
    \        if sum < result\n            result = sum\n        end\n        if sum\
    \ > 0\n            start = finish + 1\n            finish = start\n          \
    \  sum = 0\n        else\n            finish += 1\n        end\n    end\n    return\
    \ result\nend\nusing Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\t\
    @test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) ==\
    \ -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659822297
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n   \nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4])\
    \ == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3,\
    \ 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 12 errored,
    0 broken.

    in expression starting at /tmp/tmpt9p373_i.jl:11

    '
  stdout: "test set: Error During Test at /tmp/tmpt9p373_i.jl:14\n  Test threw exception\n\
    \  Expression: candidate([2, 3, 4, 1, 2, 4]) == 1\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::Ptr) where T<:Integer at ~/.conda/envs/polyglot/share/julia/base/pointer.jl:23\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/number.jl:7\n\
    \    ...\n  Stacktrace:\n   [1] minSubArraySum(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpt9p373_i.jl:8\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpt9p373_i.jl:14 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpt9p373_i.jl:13\ntest set:\
    \ Error During Test at /tmp/tmpt9p373_i.jl:15\n  Test threw exception\n  Expression:\
    \ candidate([-1, -2, -3]) == -6\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::Ptr) where T<:Integer at ~/.conda/envs/polyglot/share/julia/base/pointer.jl:23\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/number.jl:7\n\
    \    ...\n  Stacktrace:\n   [1] minSubArraySum(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpt9p373_i.jl:8\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpt9p373_i.jl:15 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpt9p373_i.jl:13\ntest set:\
    \ Error During Test at /tmp/tmpt9p373_i.jl:16"
  timestamp: 1659822301
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    # Initialize the current and\
    \ minimum sum to the first element of the array\n    # If there is only one element\
    \ in the array, then the minimum sub-array sum\n    # would be that element itself\n\
    \    min_sum = curr_sum = nums[1]\n    # Iterate over the remaining elements of\
    \ the array and update the current\n    # sum to be the maximum of the current\
    \ sum plus the current element or\n    # the current element itself\n    for i\
    \ in 2:length(nums)\n        curr_sum = max(curr_sum + nums[i], nums[i])\n   \
    \     # Update the minimum sum so far to be the minimum of the current sum\n \
    \       # or the minimum sum so far\n        min_sum = min(min_sum, curr_sum)\n\
    \    end\n    return min_sum\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1,\
    \ -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 8 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpia4lkri5.jl:24

    '
  stdout: "test set: Test Failed at /tmp/tmpia4lkri5.jl:27\n  Expression: candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1\n   Evaluated: 2 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpia4lkri5.jl:27 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpia4lkri5.jl:26\ntest set: Test Failed at /tmp/tmpia4lkri5.jl:28\n\
    \  Expression: candidate([-1, -2, -3]) == -6\n   Evaluated: -3 == -6\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpia4lkri5.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpia4lkri5.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpia4lkri5.jl:29\n  Expression: candidate([-1, -2, -3, 2, -10])\
    \ == -14\n   Evaluated: -8 == -14\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpia4lkri5.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpia4lkri5.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpia4lkri5.jl:32\n  Expression: candidate([-1, -2, -3, 10, -5])\
    \ == -6\n   Evaluated: -3 == -6\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpia4lkri5.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpia4lkri5.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpia4lkri5.jl:33\n  Expression: candidate([100, -1, -2, -3,\
    \ 10, -5]) == -6\n   Evaluated: 94 == -6\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] ma"
  timestamp: 1659822299

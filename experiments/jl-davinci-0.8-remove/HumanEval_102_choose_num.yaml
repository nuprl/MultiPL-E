name: HumanEval_102_choose_num
language: jl
prompt: "\"\"\"This function takes two positive numbers x and y and returns the\n\
  \    biggest even integer number that is in the range [x, y] inclusive. If \n  \
  \  there's no such number, then the function should return -1.\n\n    For example:\n\
  \            \"\"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n"
tests: "using Test\n\n@testset begin\n\ncandidate = choose_num;\n\t@test(candidate(12,\
  \ 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33, 12354) ==\
  \ 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6, 29) == 28)\n\
  \t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\t@test(candidate(546,\
  \ 546) == 546)\nend\n"
completions: ["    max_even = -1 \n    for i in x:y \n        # The modulo (%) gives\
    \ the remainder after division of one number by \n        # another number. The\
    \ two numbers must be integers. \n        # The expression x % y returns the remainder\
    \ after x is divided by y.\n        if i % 2 == 0 \n            if i > max_even\
    \ \n                max_even = i \n            end \n        end \n    end \n\
    \    return max_even \nend ", "    if x > y\n        return -1\n    end\n    \n\
    \    max_even = 0\n    for i in x:y\n        if i % 2 == 0 && i > max_even\n \
    \           max_even = i\n        end\n    end\n    \n    if max_even == 0\n \
    \       return -1\n    end\n    \n    return max_even\nend", "    iseven(x) &amp;&amp;\
    \ x &gt;= y ? return x : return -1\nend", "    \n    \n    \n ", "    if x > y\
    \ return -1\n    elseif y % 2 == 0 return y\n    elseif y - 1 % 2 == 0 return\
    \ y - 1\n    elseif x % 2 == 0 return x\n    elseif x + 1 % 2 == 0 return x +\
    \ 1\n    else return -1\n    end\nend\n@testset \"choose_num\" begin\n    @test\
    \ choose_num(3, 5) == 4\n    @test choose_num(7, 9) == 8\n    @test choose_num(9,\
    \ 7) == -1\n    @test choose_num(12, 14) == 14\n    @test choose_num(10, 12) ==\
    \ 12\n    @test choose_num(15, 15) == 15\n    @test choose_num(4, 4) == 4\n  \
    \  @test choose_num(3, 10) == 4\n    @test choose_num(4, 9) == 6\n    @test choose_num(1,\
    \ 5) == 4\n    @test choose_num(5, 10) == 6\n    @test choose_num(5, 15) == 6\n\
    \    @test choose_num(5, 20) == 6\n    @test choose_num(1, 5) == 4\n    @test\
    \ choose_num(15, 1) == -1\n    @test choose_num(1, 1) == 1\n    @test choose_num(17,\
    \ 19) == 18\n    @test choose_num(12, 20) == 14\n    @test choose_num(16, 18)\
    \ == 18\n    @test choose_num(3, 2) == -1\n    @test choose_num(9, 9) == 9\n \
    \   @test choose_num(4, 13) == 4\n    @test choose_num(3, 13) == 4\n    @test\
    \ choose_num(3, 14) == 4\n    @test choose_num(5, 1) == -1\n    @test choose_num(12,\
    \ 1) == -1\n    @test choose_num(2, 15) == 4\n    @test choose_num(15, 2) == -1\n\
    \    @test choose_num(1, 4) == 4\n    @test choose_num(3, 8) == 4\n    @", " \
    \   list_even = []\n    for n in x:y\n        if n % 2 == 0\n            push!(list_even,\
    \ n)\n        end\n    end\n    if length(list_even) == 0\n        return -1\n\
    \    else\n        return maximum(list_even)\n    end\nend\n\"\"\"A function that\
    \ takes an integer number n and returns a list of all\n        the divisors of\
    \ n.", "    for i in x:y\n        if i % 2 == 0 && i > 1\n            return i\n\
    \        end\n    end\n    return -1\nend\nchoose_num(x, y)", "    \n    while\
    \ x <= y\n        if x % 2 == 0\n            return x\n        end\n        x\
    \ += 1\n    end\n    return -1\nend", "    if (x % 2 == 0) && (y % 2 == 0)\n \
    \       return y\n    elseif (x % 2 == 0) && (y % 2 != 0)\n        return x\n\
    \    elseif (x % 2 != 0) && (y % 2 == 0)\n        return y - 1\n    elseif (x\
    \ % 2 != 0) && (y % 2 != 0)\n        if x + 1 == y\n            return -1\n  \
    \      else\n            return y - 2\n        end\n    end\nend", "    while\
    \ x <= y && x % 2 != 0\n        x += 1\n    end\n    if x % 2 == 0\n        return\
    \ x\n    else\n        return -1\n    end\nend", "    \n    for i in y:-1:x\n\
    \        if i%2 == 0\n            return i\n        end\n    end\n    return -1\n\
    end", "    for i in x:y\n        if i % 2 == 0\n            return i\n    return\
    \ -1\n    \n\"\"\"The function takes a positive number x as a parameter and should\
    \ return a \nlist of all square numbers that are less than x. If there's no such\
    \ numbers, \nthen the function should return the empty list.", "    if x>y\n \
    \       return -1\n    end\n    for i in x:y\n        if i%2==0\n            return\
    \ i\n        end\n    end\n    return -1\nend", "    \"\"\"\n    This function\
    \ creates a list of even numbers between the numbers x and y and returns the \n\
    \    biggest number in that list, if there is no such number, then the function\
    \ returns -1.", "  if x > y\n    return -1\n  end\n  if y%2 == 0\n    return y\n\
    \  end\n  if x%2 == 0\n    return x\n  end\n  return -1\nend", "    \"\"\"\n \
    \   if x < y \n        for i in x:y\n            if (x % 2 == 0) & (x % 2 == 0)\n\
    \                println(x)\n            else \n                println(y)\n \
    \           end\n        end\n    else \n        println(\"-1\")\n    end\nend",
  "    return -1\nend\nprintln(choose_num(9, 12))  # 10\nprintln(choose_num(13, 20))\
    \ # 18\nprintln(choose_num(21, 30)) # -1", "    for n in x:y\n        if n % 2\
    \ == 0\n            println(n)\n        else\n            return -1\n        end\n\
    \    end\nend", "    if x > y\n        return -1\n    end\n    while y > x\n \
    \       if y % 2 == 0\n            return y\n        end\n        y -= 1\n   \
    \ end\n    return x\nend", "    start = Int64(x)\n    finish = Int64(y)\n    for\
    \ i in start:finish\n        if i % 2 == 0\n            return i\n        end\n\
    \    end\n    return -1\nend", "    for i in y:-1:x\n        if i % 2 == 0\n \
    \           return i\n        end\n    end\n    return -1\nend", "    if y < x\n\
    \        return -1\n    end\n    x = max(x, y)\n    while x >= y\n        if x\
    \ % 2 == 0\n            return x\n        end\n        x -= 1\n    end\n    return\
    \ -1\nend", "    x%2 == 0 ? (return x) : (x+=1)\n    for i in x:y\n        if\
    \ i%2 == 0\n            return i\n        end\n    end\n    return -1\nend\nchoose_num(x::Int64,\
    \ y::Int64) = choose_num(x, y)", "    if x % 2 == 0\n        a = x\n    elseif\
    \ x % 2 != 0\n        a = x + 1\n    end\n    if y % 2 == 0\n        b = y\n \
    \   elseif y % 2 != 0\n        b = y - 1\n    end\n    if a > b\n        return\
    \ -1\n    elseif a <= b\n        return b\n    end\nend", "    if x > y\n    \
    \    return -1\n    end\n    if x % 2 == 0\n        return x\n    else\n     \
    \   x = x + 1\n    end\n    for i in x:y\n        if i % 2 == 0\n            return\
    \ i\n        end\n    end\n    return -1\nend", "    if x > y\n        return\
    \ -1\n    end\n    \n    for i in (x:y)\n        if i % 2 == 0\n            return\
    \ i\n        end\n    end\n    \n    return -1\nend", "    if x>y \n        return\
    \ -1\n    end\n    for i in x:y\n        if i%2==0\n            return i\n   \
    \     end\n    end\n    return -1\nend", "    for i in range(x, y+1):\n      \
    \  if (i % 2 == 0):\n            return i\n    return -1\nend", "    if x>y\n\
    \        return -1\n    end\n    z = max(x,y)\n    while z%2 != 0\n        z =\
    \ z-1\n    end\n    return z\nend", "    # x and y are positive integers\n   \
    \ # this function returns the biggest even integer in the range [x, y]\n    if\
    \ x == y \n        if x % 2 == 0\n            return x\n        else\n       \
    \     return -1\n        end\n    elseif x < y\n        for i in range(y, x, -1)\n\
    \            if i % 2 == 0\n                return i\n            end\n      \
    \  end\n        return -1\n    else\n        return -1\n    end\nend", "    if\
    \ x % 2 == 0 && y % 2 == 0\n        if x >= y\n            return x\n        else\n\
    \            return y\n        end\n    elseif x % 2 == 1 && y % 2 == 1\n    \
    \    if x >= y\n            return x - 1\n        else\n            return y -\
    \ 1\n        end\n    elseif x % 2 == 0 && y % 2 == 1\n        return x\n    elseif\
    \ x % 2 == 1 && y % 2 == 0\n        return y\n    end\nend", "    x >= 0 || y\
    \ >= 0 && error(\"x and y must be positive numbers\")\n    x > y && return -1\n\
    \    x % 2 == 0 ? x : x += 1\n    while x <= y\n        x % 2 == 0 ? return x\
    \ : nothing\n        x += 1\n    end\n    return -1\nend", "    \n    if x > y\n\
    \        return -1\n    end\n    # Set a counter to keep track of the numbers\
    \ in the range\n    counter = x \n    largest_even = 0\n    # Loop through the\
    \ range and identify the largest even number\n    while counter <= y\n       \
    \ if counter % 2 == 0\n            largest_even = counter\n        end\n     \
    \   counter += 1\n    end\n    # Return the largest even number or -1 if there\
    \ isn't any\n    if largest_even == 0\n        return -1\n    else\n        return\
    \ largest_even\n    end\nend\nchoose_num(3,11)", "    if x > y\n        println(\"\
    Invalid input\")\n        return\n    end\n    \n    for i in x:y\n        if\
    \ i % 2 == 0\n            return i\n        end\n    end\n    \n    return -1\n\
    end", "    if x > y\n        println(\"Invalid input! x cannot be bigger than\
    \ y.\")\n        return -1\n    end\n    for i in x:y\n        if i % 2 == 0\n\
    \            return i\n        end\n    end\n    return -1\nend", "    nums =\
    \ [x]\n    while x <= y\n        push!(nums, x)\n        x += 1\n    end\n   \
    \ evens = []\n    for i in nums\n        if i % 2 == 0\n            push!(evens,\
    \ i)\n        end\n    end\n    if length(evens) == 0\n        return -1\n   \
    \ else\n        return evens[end]\n    end\nend", "    if x%2 == 0\n        return\
    \ x\n    elseif x%2 != 0\n        return x+1\n    end\n    return -1\nend", " \
    \   if x % 2 == 0\n        a = x\n    else\n        a = x + 1\n    end\n    if\
    \ a > y\n        return -1\n    else\n        return a\n    end\nend", "    for\
    \ num in y:-1:x\n        if num % 2 == 0\n            return num\n        end\n\
    \    end\n    return -1\nend\nchoose_num(12, 18)", "    if x%2 == 0 \n       \
    \ return x\n    else\n        x+=1\n        return x\n    end\nend", "    rng\
    \ = range(x, y+1)\n    #println(rng)\n    for i in rng\n        if i % 2 == 0\n\
    \            return i\n        end\n    end\n    return -1\nend\n#println(choose_num(5,12))\n\
    #println(choose_num(2,24))\n#println(choose_num(1,2))\n#println(choose_num(1,1))",
  "    if x<y #x is smaller than y\n        if y%2==0 #y is even\n            return\
    \ y\n        else\n            return y-1\n        end\n    elseif x>y #x is bigger\
    \ than y\n        if x%2==0 #x is even\n            return x\n        else\n \
    \           return x-1\n        end\n    elseif x==y #x is equal to y\n      \
    \  if x%2==0 #x is even\n            return x\n        else\n            return\
    \ -1\n        end\n    end\nend", "    if x>y\n        x, y = y, x\n    end\n\
    \    temp=y\n    while temp>x\n        if temp%2==0\n            return temp\n\
    \        end\n        temp-=1\n    end\n    if x%2==0\n        return x\n    end\n\
    \    return -1\nend", "    if x%2==0 && y%2==0\n        return (x,y)\n    elseif\
    \ x%2==0 && y%2!=0\n        return (x,y-1)\n    elseif x%2!=0 && y%2==0\n    \
    \    return (x+1,y)\n    elseif x%2!=0 && y%2!=0\n        return (x+1,y-1)\n \
    \   end\nend", "   if (x-y > 0)\n       if (mod(x,2)==0)\n           return x\n\
    \       elseif (mod(x,2)==1)\n           if(mod(x+1,2)==0)\n               return\
    \ x+1\n           elseif (mod(x+1,2)==1)\n               return -1\n         \
    \  end\n       end\n   elseif (x-y < 0)\n       if (mod(y,2)==0)\n           return\
    \ y\n       elseif (mod(y,2)==1)\n           if(mod(y+1,2)==0)\n             \
    \  return y+1\n           elseif (mod(y+1,2)==1)\n               return -1\n \
    \          end\n       end\n   else\n       if (mod(x,2)==0)\n           return\
    \ x\n       elseif (mod(x,2)==1)\n           if(mod(x+1,2)==0)\n             \
    \  return x+1\n           elseif (mod(x+1,2)==1)\n               return -1\n \
    \          end\n       end\n   end\n   end", "    result::Int64 = -1\n    for\
    \ i in x:y\n        if i % 2 == 0\n            result = i\n        end\n    end\n\
    \    return result\nend", "    if x > y\n        return -1\n    end\n    \n  \
    \  for num in x:y\n        if num % 2 == 0\n            return num\n        end\n\
    \    end\n    \n    return -1\nend", "    if (x % 2 == 0) && (y % 2 == 0)\n  \
    \      return min(x, y)\n    elseif (x % 2 == 1) && (y % 2 == 1)\n        return\
    \ choose_num(x+1, y-1)\n    elseif (x % 2 == 0) && (y % 2 == 1)\n        return\
    \ x\n    elseif (x % 2 == 1) && (y % 2 == 0)\n        return y\n    end\nend",
  "    if y % 2 == 0 \n        y\n    else \n        y-1\n    end\nend\nchoose_num(2,\
    \ 7)", "    if x < 0 || y < 0 \n        return -1\n    end\n    for i in (x:y)\n\
    \        if i % 2 == 0\n            return i\n        end\n    end\n    return\
    \ -1\nend\n \n\"\"\"This function takes three strings: s1, s2, and s3. It then\
    \ looks for the \n    longest substring that starts with s1, ends with s2, and\
    \ has s3 somewhere\n    in between. If there are more than one such substrings,\
    \ then the function\n    should return the first one. If there are no such substrings,\
    \ then the \n    function should return -1.", "    if x == y\n        return -1\n\
    \    end\n    if y < x\n        temp = x\n        x = y\n        y = temp\n  \
    \  end\n    while y != -1\n        if y % 2 == 0\n            return y\n     \
    \   end\n        y -= 1\n    end\n    return -1\nend", "    if (y < x) || (x <\
    \ 0) || (y < 0)\n        return -1\n    end\n    i = y\n    while true\n     \
    \   if i%2 == 0\n            return i\n        end\n        i = i - 1\n      \
    \  if i < x\n            return -1\n        end\n    end\nend\nprintln(choose_num(10,\
    \ 15))", "    if x < y\n        if x % 2 == 0\n            return x\n        else\n\
    \            return x + 1\n        end\n    elseif x == y \n        if x % 2 ==\
    \ 0\n            return x\n        else\n            return -1\n        end\n\
    \    elseif x > y\n        if y % 2 == 0\n            return y\n        else\n\
    \            return y + 1\n        end\n    end\nend", "    if x < y \n      \
    \  return choose_num_h(x, y)\n    else \n        return choose_num_h(y, x)\n \
    \   end\nend ", "    max_num = -1\n    if x%2 == 0 && y%2 == 0\n        max_num\
    \ = max(x, y)\n    elseif x%2 == 0 && y%2 != 0\n        max_num = max(x, y-1)\n\
    \    elseif x%2 != 0 && y%2 == 0\n        max_num = max(x+1, y)\n    else\n  \
    \      max_num = max(x+1, y-1)\n    end\n    return max_num\nend", "    if x%2\
    \ == 0\n        a = x\n    else\n        a = x+1\n    end\n    while (a <= y)\n\
    \        if a%2 == 0\n            return a\n        end\n        a += 1\n    end\n\
    \    return -1\nend", "    if x > y\n        return -1\n    end\n    largest =\
    \ 0\n    for n in x:y\n        if largest < n\n            if n % 2 == 0\n   \
    \             largest = n\n            end\n        end\n    end\n    if largest\
    \ == 0\n        return -1\n    end\n    return largest\nend", "    if x%2 == 0\n\
    \        if y%2 == 0\n            if x >= y\n                return x\n      \
    \      else\n                return y\n            end\n        else\n       \
    \     return y-1\n        end\n    else\n        if y%2 == 0\n            return\
    \ y\n        else\n            return y-1\n        end\n    end\nend", "    if\
    \ x%2 == 0\n        return x\n    else\n        return x + 1\n    end\nend", " \
    \   if x > y\n        return -1\n    end\n    num = -1\n    for k in x:y\n   \
    \     if k % 2 == 0\n            num = k\n        end\n    end\n    return num\n\
    end", "    # if x > y:\n    #     return -1\n    # end\n    # if x % 2 == 0:\n\
    \    #     return x\n    # end\n    # x += 1\n    # while x <= y\n    #     if\
    \ x % 2 == 0:\n    #         return x\n    #     end\n    #     x += 1\n    #\
    \ end\n    # return -1\n    if x % 2 == 0\n        return max(x, choose_num(x+1,\
    \ y))\n    else\n        return max(choose_num(x+1, y), choose_num(x+2, y))\n\
    \    end\nend\nchoose_num(2,7)", "    if x%2 == 0\n        z = x\n    else\n \
    \       z = x + 1\n    end\n    return z < y ? z : y\nend", "    #checking the\
    \ input type\n    if x isa Int64 && y isa Int64\n        #exception handling\n\
    \        try \n            #checking whether the input is positive\n         \
    \   if x<0 || y<0\n                println(\"Input numbers are negative!\")\n\
    \                return -1\n            end\n            #checking whether the\
    \ x>y\n            if x>y\n                z=x\n                x=y\n        \
    \        y=z\n            end\n            #returning the biggest even integer\
    \ number\n            for i in x:y\n                if i%2==0\n              \
    \      return i\n                end\n            end\n            return -1\n\
    \        catch e\n            println(\"Input error!\")\n            return -1\n\
    \        end\n    else\n        println(\"Input is not an integer!\")\n      \
    \  return -1\n    end\nend", "    \n    for k in range(y, x, -1)\n        if k\
    \ % 2 == 0\n            return k\n        end\n    end\n    return -1\nend", " \
    \   \"\"\"It is assumed that x is less than y and both are positive.\"\"\"\n \
    \   for i in reverse(x:y)\n        if i % 2 == 0\n            return i\n     \
    \   end\n    end\n    return -1\nend\nchoose_num(1, 6)", "   if x > y\n      \
    \ println(\"x is greater than y, nothing to do\")\n   else\n       i = x\n   \
    \    while i <= y\n           if i % 2 == 0\n               println(i)\n     \
    \          break\n           end\n           i += 1\n       end\n       if i >\
    \ y\n           println(-1)\n       end\n   end\nend", "    if x <= 0 || y <=\
    \ 0 #checking if the given numbers are positive\n        return -1\n    end\n\
    \    if x % 2 == 0 #checking if x is even\n        if y % 2 == 0 #checking if\
    \ y is even\n            return y #returning y\n        else #if y is odd\n  \
    \          return y - 1 #returning y-1\n        end\n    else #if x is odd\n \
    \       if y % 2 == 0 #checking if y is even\n            return y #returning\
    \ y\n        else #if y is odd\n            return y - 2 #returning y-2\n    \
    \    end\n    end\nend", "    if x > y\n        println(\"Error: x must be greater\
    \ than y\")\n        return -1\n    end\n    for i in x:y\n        if i % 2 ==\
    \ 0\n            return i\n        end\n    end\n    return -1\nend", "    \n\
    \    if x > y\n        temp = x\n        x = y\n        y = temp\n    end\n  \
    \ \n    for i in y:-1:x\n        if mod(i, 2) == 0\n            return i\n   \
    \     end\n    end\n    return -1\nend\n    ", "    \n    if x>y\n        return\
    \ -1\n    end\n    \n    if y%2 == 0\n        return y\n    else\n        return\
    \ y-1\n    end\nend", "    numbers = [x:y]\n    numbers = filter(numbers -> mod(numbers,\
    \ 2) == 0, numbers)\n    if length(numbers) == 0\n        return -1\n    else\
    \ \n        return maximum(numbers)\n    end\nend", "    if x<y\n        if x%2==0\
    \ && y%2==0\n            return y\n        elseif x%2==0 && y%2==1\n         \
    \   return y-1\n        elseif x%2==1 && y%2==0\n            return y\n      \
    \  elseif x%2==1 && y%2==1\n            return y-1\n        end\n    elseif x>y\n\
    \        if x%2==0 && y%2==0\n            return x\n        elseif x%2==0 && y%2==1\n\
    \            return x\n        elseif x%2==1 && y%2==0\n            return x-1\n\
    \        elseif x%2==1 && y%2==1\n            return x-1\n        end\n    elseif\
    \ x==y\n        if x%2==0\n            return x\n        elseif x%2==1\n     \
    \       return -1\n        end\n    end\nend", "    even = 0\n    for i = x:y\n\
    \        if i % 2 == 0\n            even = i\n        end\n    end\n    return\
    \ even\nend", "    \"\"\"\n    # The following code will fail when x < 0 and/or\
    \ y < 0\n    even_nums = collect(x:y)\n    even_nums = filter(x -> x % 2 == 0,\
    \ even_nums)\n    even_nums = reverse(sort(even_nums))\n    if length(even_nums)\
    \ > 0\n        return even_nums[1]\n    else\n        return -1\n    end\nend",
  "    \n    even_num = -1\n    \n    # if both x and y are even, then one of them\
    \ would be the even_num\n    if x % 2 == 0 && y % 2 == 0\n        even_num = max(x,\
    \ y)\n    \n    # if x is not even and y is even, then the even_num is y \n  \
    \  elseif x % 2 != 0 && y % 2 == 0\n        even_num = y\n    \n    # if y is\
    \ not even and x is even, then the even_num is x\n    elseif x % 2 == 0 && y %\
    \ 2 != 0\n        even_num = x\n    \n    # if both x and y are not even, then\
    \ we check the number in between\n    elseif x % 2 != 0 && y % 2 != 0\n      \
    \  # this loop is to check all the even numbers in between\n        # and obtain\
    \ the largest one\n        for i in x:y\n            if i % 2 == 0\n         \
    \       even_num = max(even_num, i)\n            end\n        end\n    end\n \
    \   \n    return even_num\nend", "    if (x > y) | (x < 0) | (y < 0) | (isodd(x))\
    \ | (isodd(y))\n        return -1\n    else\n        for i = y:-2:x\n        \
    \    return i\n        end\n    end\nend", "    a = mod(x, 2)\n    b = mod(y,\
    \ 2)\n    if a == 0 && b == 0\n        return y\n    elseif a == 0 && b != 0\n\
    \        return y - 1\n    elseif a != 0 && b == 0\n        return y\n    else\n\
    \        m = y - x\n        c = mod(m, 2)\n        d = ceil(m/2)\n        if c\
    \ == 0\n            return x + d\n        else\n            return x + d - 1\n\
    \        end\n    end\nend", "    if x % 2 == 0 \n        @inbounds for i in x:y\
    \ \n            if i % 2 == 0 \n                return i \n            end \n\
    \        end \n    elseif x % 2 != 0 \n        @inbounds for i in x + 1:y \n \
    \           if i % 2 == 0 \n                return i \n            end \n    \
    \    end \n    end \n    return -1 \nend ", "    y = x+y-2 #make sure it is inclusive\n\
    \    if y%2==0 \n        y=y\n    else\n        y=y-1\n    end\n    if y<x\n \
    \       y=-1\n    end\n    return y\nend\nchoose_num(1,2)\n ", "    if x > y ||\
    \ x < 0 || y < 0\n        return -1\n    end\n    if y % 2 == 0\n        return\
    \ y\n    elseif x % 2 == 0\n        return x\n    else\n        return x - 1\n\
    \    end\nend", "    if x%2 != 0\n        if y%2 != 0\n            if x < y\n\
    \                print(-1)\n            elseif x == y\n                print(x)\n\
    \            elseif x > y\n                print(-1)\n            end\n      \
    \  elseif y%2 == 0\n            if x < y\n                print(y)\n         \
    \   elseif x == y\n                print(x)\n            elseif x > y\n      \
    \          print(x)\n            end\n        end\n    elseif x%2 == 0\n     \
    \   if y%2 != 0\n            if x < y\n                print(x)\n            elseif\
    \ x == y\n                print(x)\n            elseif x > y\n               \
    \ print(y)\n            end\n        elseif y%2 == 0\n            if x < y\n \
    \               print(x)\n            elseif x == y\n                print(x)\n\
    \            elseif x > y\n                print(y)\n            end\n       \
    \ end\n    end\nend", "    z = max(x, y)\n    result = -1\n    for i in range(z,\
    \ x-1, -1)\n        if i % 2 == 0\n            result = i\n            break\n\
    \        end\n    end\n    return result\nend", "    max_even_num = -1\n    for\
    \ i = x:y\n        if i % 2 == 0\n            max_even_num = i\n        end\n\
    \    end\n    return max_even_num\nend", "    even_range = [n for n in x:y if\
    \ n % 2 == 0]\n    if length(even_range) > 0\n        return maximum(even_range)\n\
    \    else\n        return -1\n    end\nend", "    # your code goes here\n    return\
    \ # your return value goes here\nend", "    if x % 2 == 0\n        if x <= y \n\
    \            return x\n        else \n            return -1\n        end\n   \
    \ else \n        x = x + 1\n        if x <= y \n            return x\n       \
    \ else \n            return -1\n        end\n    end\nend", "    choose_num =\
    \ -1\n    for i in x:y\n        if(is_even(i))\n            choose_num = i\n \
    \       end\n    end\n    return choose_num\nend", "    if x == y \n        return\
    \ -1 \n    end\n    \n    #if x < y \n        #return choose_num(y, x)\n    #end\n\
    \    \n    if mod(x, 2) == 0\n        return x\n    else\n        return choose_num(x+1,\
    \ y)\n    end\nend", "    for i in x:y\n        if i%2 == 0\n            return\
    \ i\n        end\n    end\n    return -1\nend", "    for i in x:y \n        if\
    \ (i % 2 == 0) && (i >= x) && (i <= y)\n            return i\n        else\n \
    \           return -1\n        end\n    end\nend", "    while y >= x \n      \
    \  if x % 2 == 0 \n            return x \n        end \n        x += 1 \n    end\
    \ \n    return -1 \nend ", "    n = 0\n    if x > y\n        x, y = y, x\n   \
    \ end\n    for i = x:y\n        if i % 2 == 0\n            n = i\n        end\n\
    \    end\n    if n == 0\n        return -1\n    else\n        return n\n    end\n\
    end", "    if x>y\n        return -1\n    end\n    for i in x:y\n        if i%2==0\n\
    \            return i\n        end\n    end\n    return -1\nend", "    if x %\
    \ 2 == 0\n        j = x\n    else\n        j = x + 1\n    end\n    while j <=\
    \ y\n        if j % 2 == 0\n            return j\n        end\n        j += 1\n\
    \    end\n    return -1\nend\nprintln(choose_num(3, 7))\nprintln(choose_num(4,\
    \ 6))\nprintln(choose_num(5, 7))\nprintln(choose_num(2, 2))\nprintln(choose_num(2,\
    \ 4))", "    if x%2 == 0 && y%2 == 0\n        if x > y\n            println(x)\n\
    \        else\n            println(y)\n        end\n    elseif x%2 == 0 && y%2\
    \ != 0\n        println(x)\n    elseif x%2 != 0 && y%2 == 0\n        println(y)\n\
    \    else\n        println(-1)\n    end\nend\nchoose_num(17, 11)", "    \n   \
    \ if x > y\n        return -1\n    end", "    if x > y\n        return -1\n  \
    \  end\n    \n    for i in x:y\n        if iseven(i)\n            return i\n \
    \       end\n    end\n    \n    return -1\nend", "    y = x-1\n    while y <=\
    \ y\n        if mod(y,2) == 0\n            return y\n        end\n        y =\
    \ y + 1\n    end\n    return -1\nend", "    if x >= y\n        return -1\n   \
    \ end\n    for i in x:y\n        if i % 2 == 0\n            return i\n       \
    \ end\n    end\n    return -1\nend", "    r = y \n    while r >= x \n        if\
    \ r % 2 == 0 \n            return r \n        end \n        r -= 1 \n    end \n\
    \    return -1 \nend ", "    if x%2 == 0 \n        num = x\n    else \n      \
    \  num = x+1\n    end\n    while num <= y\n        return num\n        num +=\
    \ 2\n    end\n    return -1\nend", "    if x>y\n        return -1\n    end\n \
    \   if x%2==0\n        return x\n    else\n        return x+1\n    end\nend",
  "    if x > y return -1\n    elseif x % 2 == 0 return x\n    elseif y % 2 == 0 return\
    \ y\n    else return -1\n    end\nend", "    even_nums = [] # store even numbers\
    \ \n    for i in x:y\n        if i % 2 == 0\n            push!(even_nums, i)\n\
    \        end\n    end\n    if length(even_nums) > 0\n        return maximum(even_nums)\n\
    \    else\n        return -1\n    end\nend", "    if x%2 == 0\n        return\
    \ x #returns the first even integer if that number is the maximum even integer\
    \ in the range\n    else\n        x+=1\n        if x%2 == 0\n            return\
    \ x #returns the first even integer if that number is the maximum even integer\
    \ in the range\n        else \n            x+=1\n            while x<=y\n    \
    \            if x%2 == 0\n                    return x #returns the maximum even\
    \ integer in the range\n                else\n                    x+=1\n     \
    \       end\n            return -1 #returns -1 if the maximum even integer is\
    \ not in the range\n        end\n    end\nend", "    \n    if x > y\n        return\
    \ nothing\n    end\n    for i = y:-1:x\n        if i % 2 == 0\n            return\
    \ i\n        end\n    end\n    \n    return -1\nend", "    for i = y:-1:x\n  \
    \      if i % 2 == 0 \n            return i\n        end\n    end\n    return\
    \ -1\nend", "    for i in y:-1:x \n        if i % 2 == 0 \n            return\
    \ i \n        end \n    end \n    return -1 \nend ", "    if x >= y\n        return\
    \ -1\n    end\n    for n in x:y\n        if n % 2 == 0\n            return n\n\
    \        end\n    end\n    return -1\nend", "    if x>y\n        return -1\n \
    \   end\n    for i in x:y\n        if i%2==0\n            return i\n        end\n\
    \    end\n    return -1\nend", '    n = x', "    if x > y\n        return -1\n\
    \    end\n    # This solution is good, but not very efficient.\n    for i in (x:y)\n\
    \        if i % 2 == 0\n            return i\n        end\n    end\n    # This\
    \ solution is much more efficient.\n    (x+y)/2 + (x+y)%2\nend\n\"\"\"\n    This\
    \ function takes an array of real numbers and a integer number x \n    as inputs.\
    \ The function returns the largest element of the input array\n    that is greater\
    \ than x. If there's no such element, then the function\n    should return -1.\n\
    \    \"\"\"", "    max = -1\n    # If x < y, the range will be empty.\n    if\
    \ x > y\n        return max\n    end\n    # Check if either of x or y is an even\
    \ number.\n    if x % 2 == 0\n        max = x\n    elseif y % 2 == 0\n       \
    \ max = y\n    end\n    # If neither of x or y is an even number, then we need\
    \ to check\n    # the numbers in between x and y, which are the odd numbers.\n\
    \    # The number i will be odd if i is even. (i.e. if i is odd then i % 2 !=\
    \ 0)\n    for i in x:2:y\n        if i % 2 == 0\n            max = i\n       \
    \ end\n    end\n    return max\nend", "    for i in y:-1:x\n        if i % 2 ==\
    \ 0\n            return i\n        end\n    end\n    return -1\nend", "    \n\
    \    if (x % 2 == 0) \n        #print(\"Even\")\n        if(y % 2 == 0)\n    \
    \        #print(\"Even\")\n            for i in x:y\n                #print(i)\n\
    \                if(i % 2 == 0)\n                    #print(i)\n             \
    \       res = i\n                end\n            end\n            return res\n\
    \        else\n            return -1\n        end\n    else\n        #print(\"\
    Odd\")\n        if(y % 2 == 0)\n            #print(\"Even\")\n            for\
    \ i in x:y\n                #print(i)\n                if(i % 2 == 0)\n      \
    \              #print(i)\n                    res = i\n                end\n \
    \           end\n            return res\n        else\n            #print(\"Odd\"\
    )\n            return -1\n        end\n    end\nend", "    if x < y\n        for\
    \ i in x:y\n            if i % 2 == 0 \n                return i\n           \
    \ end\n        end\n    elseif x > y\n        for i in y:x\n            if i %\
    \ 2 == 0 \n                return i\n            end\n        end\n    elseif\
    \ x == y\n        return x\n    end\n    return -1\nend", "    if x%2 == 0 &&\
    \ y%2 == 0 && x<y\n        return y\n    elseif x%2 == 0 && y%2 == 0 && x>y\n\
    \        return x\n    elseif x%2 == 0 && y%2 != 0 && x<y\n        return x\n\
    \    elseif x%2 != 0 && y%2 == 0 && x<y\n        return y\n    elseif x%2 != 0\
    \ && y%2 != 0 && x<y\n        return x-1\n    else\n        return -1\n    end\n\
    end", "    if x > y \n        return -1\n    end\n    if x % 2 == 0\n        return\
    \ x\n    else \n        return x + 1\n    end\nend", "    # Make sure x is less\
    \ than y\n    if x > y \n        # Swap x and y\n        x, y = y, x\n    end\n\
    \    \n    # If x is an even number, then there is a number between x and y\n\
    \    if x % 2 == 0\n        return max(x, y)\n    end\n    \n    # If x is an\
    \ odd number, then check if x+1 is in the range and if it is\n    # an even number.\n\
    \    if x + 1 <= y && (x + 1) % 2 == 0\n        return x + 1\n    end\n    \n\
    \    # If there's no even number in the range, then we return -1\n    return -1\n\
    end", "    # if there's no such number, then the function should return -1.\n\
    \    if x > y\n        return -1\n    end\n    \n    # if x < y\n    if x % 2\
    \ == 0 # x is even\n        return x\n    else # x is odd\n        return choose_num(x+1,\
    \ y)\n    end\nend\nprintln(choose_num(1, 3)) # 2\nprintln(choose_num(3, 5)) #\
    \ 4\nprintln(choose_num(1, 4)) # 2\nprintln(choose_num(0, 4)) # 0\nprintln(choose_num(1,\
    \ 0)) # -1\nprintln(choose_num(1, 1)) # -1", "    # get max number\n    if x>y\
    \ \n        num = x\n    else \n        num = y\n    end\n    # return biggest\
    \ even number in range\n    while num >= x\n        if num%2 == 0\n          \
    \  return num\n        end\n        num = num - 1\n    end\n    # if no even numbers\
    \ in range\n    return -1\nend", "    result = -1\n    for i in x:y\n        if\
    \ i % 2 == 0\n            result = i\n        end\n    end\n    return result\n\
    end", "    if x > y \n        return -1\n    end\n    if (x % 2 == 0) \n     \
    \   x \n    else \n        x + 1\n    end\nend", "    i::Int64 = x\n    while\
    \ i <= y\n        if i % 2 == 0\n            println(i)\n            return i\n\
    \        end\n        i += 1\n    end\n    return -1\nend", "    \n    #The first\
    \ if statement checks if x < y. \n    #The elif statement checks if x and y are\
    \ even integers. \n    #The else statement checks if x and y are not even integers.\n\
    \    if x < y \n        return y\n    elif x % 2 == 0 && y % 2 == 0\n        return\
    \ y\n    else\n        return -1\n    end\nend", "    if y < x\n        return\
    \ -1\n    end\n    if y == x && y % 2 == 0\n        return y\n    end\n    if\
    \ y == x && y % 2 != 0\n        return -1\n    end\n    while x < y\n        if\
    \ x % 2 == 0\n            return x\n        end\n        x += 1\n    end\n   \
    \ return -1\nend", "    for i in x:y\n        if rem(i, 2) == 0\n            return\
    \ i\n        end\n    end\n    return -1\nend", "    if x == y && x%2 == 0\n \
    \       return x\n    elseif x == y\n        return -1\n    elseif y%2 == 0\n\
    \        return y\n    else\n        return choose_num(x, y-1)\n    end\nend",
  "    \n    # check if the numbers are positive\n    if x < 0 || y < 0\n        return\
    \ -1\n    end\n    \n    # if x < y, then the while loop will run at least once\n\
    \    while x <= y \n        \n        # check if x is an even number\n       \
    \ if x % 2 == 0\n            # return x if it is an even number\n            return\
    \ x\n        end\n        \n        # if x is an odd number, add 1 to x to check\
    \ the next number\n        x += 1\n    end\n    # return -1 if there's no even\
    \ number in the range\n    return -1\nend", "    if x < y\n        for i in x:y\n\
    \            if i % 2 == 0\n                return i\n            end\n      \
    \  end\n    elseif x > y\n        for i in y:x\n            if i % 2 == 0\n  \
    \              return i\n            end\n        end\n    elseif x == y\n   \
    \     if x % 2 == 0\n            return x\n        else \n            return -1\n\
    \        end\n    end\n    return -1\nend", "    if x > y\n        return -1\n\
    \    end\n    even_number = y\n    while even_number % 2 != 0\n        even_number\
    \ -= 1\n    end\n    return even_number\nend", "    if x<0 || y<0 || y<x\n   \
    \     return -1\n    end\n    for i in range(x, y+1)\n        if iseven(i)\n \
    \           return i\n        end\n    end\n    return -1\nend", "    res = 0\n\
    \    if y%2 == 0\n        res = y\n    else\n        res = y-1\n    end\n    \n\
    \    for n in range(x, y)\n        if n%2 == 0\n            if n > res\n     \
    \           res = n\n            end\n        end\n    end\n    return res\nend",
  "    return 0\nend\n \nprint(choose_num(10, 20))   # --> 20\nprint(choose_num(30,\
    \ 40))   # --> 40\nprint(choose_num(100, 300)) # --> 200\nprint(choose_num(300,\
    \ 300)) # --> 300\nprint(choose_num(50, 100))  # --> -1", "   x = convert(Int64,\
    \ x)\n   y = convert(Int64, y)\n   \n   if x <= y  \n       for i = y:-1:x\n \
    \           if i % 2 == 0\n               return i\n            end\n       end\n\
    \       return -1\n   else \n       for i = x:-1:y\n            if i % 2 == 0\n\
    \               return i\n            end\n       end\n       return -1\n   end\n\
    end", "    if y<x\n        return -1\n    end\n    for i in y:-1:x \n        if\
    \ i%2==0\n            return i\n        end\n    end\n    return -1\nend", " \
    \   ########### Recursive code: ###########\n    if x == y  \n        return x\n\
    \    elseif x > y\n        return -1\n    elseif x%2 == 0\n        return x\n\
    \    else\n        return choose_num(x+1, y)\n    end\nend", "    if x <= 0 ||\
    \ y <= 0 || x > y\n        return -1\n    end\n    if x % 2 == 0\n        return\
    \ x\n    else\n        x += 1\n    end\n    while x <= y\n        if x % 2 ==\
    \ 0\n            return x\n        end\n        x += 1\n    end\n    return -1\n\
    end", "    if x>y\n        return -1\n    end\n    for i in x:y\n        if i%2==0\n\
    \            return i\n        end\n    end\n    return -1\nend", "    if x >\
    \ y\n        return -1\n    end\n    for i in y:-1:x\n        if iseven(i)\n \
    \           return i\n        end\n    end\n    return -1\nend", "    while x\
    \ <= y\n        if (x % 2 == 0)\n            return x\n        end\n        x\
    \ = x + 1\n    end\n    return -1\nend", "    for i in x:y\n        if (i % 2\
    \ == 0)\n            return i\n        end\n    end\n    return -1\nend", "  \
    \  if x%2 != 0\n        x = x + 1\n    end\n    if y%2 != 0\n        y = y - 1\n\
    \    end\n    if x > y\n        return -1\n    end\n    return y\nend", "    if\
    \ y < x \n        return -1\n    end\n    if x % 2 == 0\n        return x\n  \
    \  else\n        return x + 1\n    end\nend", "    \n    if x>y\n        return\
    \ -1\n    end\n    while x<=y\n        if mod(x,2)==0\n            return x\n\
    \        end\n        x+=1\n    end\n    \nend", "    if x > y \n        return\
    \ -1\n    end\n    if x % 2 == 0 \n        return x\n    end\n    choose_num(x+1,\
    \ y)\nend", "    \n    #Check if x and y are positive. If they aren't, then the\
    \ function returns -1.\n    if x <= 0 || y <= 0\n        return -1\n    end\n\
    \    \n    #Check if x is even. If it is not, then it needs to be increased by\
    \ 1.\n    if x % 2 != 0\n        x += 1\n    end\n    \n    #Check if y is even.\
    \ If it is not, then it needs to be decreased by 1.\n    if y % 2 != 0\n     \
    \   y -= 1\n    end\n    \n    #If x and y are even, then x must be the biggest\
    \ even integer number \n    #that is in the range [x, y] inclusive.\n    return\
    \ x\n    \nend", "    if x>y || x<0 || y<0\n        return -1\n    end\n    if\
    \ x%2 == 0\n        return x\n    elseif y%2 == 0\n        return y\n    else\n\
    \        return -1\n    end\nend", "    \n    \n    for i in range(x, y+1)\n \
    \       \n        if i % 2 == 0\n            return i\n        end\n        \n\
    \    end\n    return -1\n    \n    \nend", "    if(x>y)\n        return -1\n \
    \   end\n    if(y % 2 == 0)\n        return y\n    end\n    if(x % 2 == 0)\n \
    \       return x\n    end\n    return choose_num(x+1, y-1)\nend", "    for num\
    \ in range(x, y+1)\n        if num % 2 == 0\n            return num\n        end\n\
    \    end\n    return -1\nend", "    if x > y\n        return -1\n    end\n   \
    \ if x % 2 == 0\n        return x\n    else\n        return x + 1\n    end\nend",
  "    if x > y\n        return -1\n    end\n    lst = [i for i in x:y if i % 2 ==\
    \ 0]\n    if length(lst) == 0\n        return -1\n    end\n    return maximum(lst)\n\
    end", "    if x < 2 || y < 2 || x > y\n        return 0\n    end\n    num = 2\n\
    \    while num < y\n        if num >= x && num <= y\n            return num\n\
    \        end\n        num += 2\n    end\n    return -1\nend", "    if x > y\n\
    \        return -1\n    end\n    max_even_num = -1\n    for i in x:y\n       \
    \ if i % 2 == 0\n            max_even_num = i\n        end\n    end\n    return\
    \ max_even_num\nend\n@assert choose_num(1, 4) == 4\n@assert choose_num(1, 2) ==\
    \ 2\n@assert choose_num(1, 3) == -1\n@assert choose_num(1, 4) == 4\n@assert choose_num(1,\
    \ 5) == 4\n@assert choose_num(1, 6) == 6\n@assert choose_num(4, 4) == 4\n@assert\
    \ choose_num(4, 6) == 6\n ", "    a = y-x+1\n    # Storing x value as a prev variable\n\
    \    prev = x\n    # we will store the first even number \n    # which is multiple\
    \ of 2\n    # that occurs in the range\n    even = 0\n    i = 1\n    while(i <\
    \ a):\n        # Check whether the current element is even\n        if(x%2 ==\
    \ 0):\n            # if yes, update even\n            even = x\n            break\n\
    \        # update x for next iteration\n        x = prev + i\n        i += 1\n\
    \    \n    # condition for no even number \n    if(even == 0):\n        return\
    \ -1\n    \n    # If first even number found \n    # then return it \n    return\
    \ even \n    \nend", "    if x > y\n        return -1\n    end\n    if x % 2 ==\
    \ 0\n        big_even = x\n    else\n        big_even = x + 1\n    end\n    for\
    \ i in (big_even:2:y)\n        big_even = i\n    end\n    return big_even\nend",
  "    # test to see if x is > 0 and y is > 0\n    if x > 0 && y > 0\n        # test\
    \ to see if x is even and y is even\n        if x % 2 == 0 && y % 2 == 0\n   \
    \         # return the largest integer number between x and y\n            return\
    \ max(x, y)\n        elseif x % 2 == 0 && y % 2 != 0\n            # return the\
    \ largest integer number between x and y - 1\n            return max(x, y - 1)\n\
    \        elseif x % 2 != 0 && y % 2 == 0\n            # return the largest integer\
    \ number between x + 1 and y\n            return max(x + 1, y)\n        else \n\
    \            # return the largest integer number between x + 1 and y - 1\n   \
    \         return max(x + 1, y - 1)\n        end\n    else \n        # if the inputs\
    \ are not both positive integers\n        return -1\n    end\nend", "    even_nums\
    \ = [num for num in x:y if num % 2 == 0]\n    if !isempty(even_nums)\n       \
    \ return maximum(even_nums)\n    else\n        return -1\n    end\nend", "   \
    \ for i = y:-1:x \n        if i % 2 == 0\n            return i\n        end\n\
    \    end\n    return -1\nend", "    even_nums = []\n    for i in x:y\n       \
    \ if i % 2 == 0\n            push!(even_nums, i)\n        end\n    end\n    if\
    \ length(even_nums) == 0\n        return -1\n    else\n        return maximum(even_nums)\n\
    \    end\nend", "    num = 0\n    if x%2 == 0\n        num = x\n    else\n   \
    \     num = x + 1\n    end\n    while num < y\n        if num%2 == 0\n       \
    \     if num < y\n                num = num + 2\n            else\n          \
    \      return num\n            end\n        else\n            num = num + 1\n\
    \        end\n    end\n    if num > y\n        return -1\n    else\n        return\
    \ num\n    end\nend", "    for i in x:y\n        if i % 2 == 0\n            if\
    \ i == y \n                return i\n            end\n        end\n    end\n \
    \   return -1\nend", "    #Check if both numbers are positive\n    if (x > 0)\
    \ && (y > 0)\n        #If x is bigger than y, switch them\n        if x > y\n\
    \            x, y = y, x\n        end\n        #Check if there is even number\
    \ between x and y\n        if x%2 == 0\n            #If yes, take it\n       \
    \     return x\n        else\n            #If not, take the next bigger number\n\
    \            return x+1\n        end\n    else\n        #If x or y are negative,\
    \ return -1\n        return -1\n    end\nend", "    if x%2==0\n        if y%2==0\n\
    \            if x>y\n                return x\n            else\n            \
    \    return y\n            end\n        else\n            if x<y\n           \
    \     return choose_num(x, y-1)\n            else\n                return x\n\
    \            end\n        end\n    else\n        if y%2==0\n            if x<y\n\
    \                return y\n            else\n                return choose_num(x+1,\
    \ y)\n            end\n        else\n            if x<y\n                return\
    \ choose_num(x+1, y-1)\n            else\n                return -1\n        \
    \    end\n        end\n    end\nend", "    if x <= y\n        for i in range(x,\
    \ y+1)\n            if i % 2 == 0\n                return i\n            end\n\
    \        end\n        return -1\n    else\n        return -1\n    end\nend", " \
    \   if x < 2 && y < 2\n        return -1\n    end\n    \n    for i in x:y\n  \
    \      if i % 2 == 0\n            max_even = i\n        end\n    end\n    \n \
    \   return max_even\nend", "    if x % 2 == 0\n        z = x\n    else\n     \
    \   z = x + 1\n    end\n    while z >= x && z <= y\n        return z\n    end\n\
    \    return -1\nend", "    \"\"\"Return the biggest even integer in the range\
    \ [x, y].\n    \"\"\"\n    # first test if x<y\n    if x > y\n        println(\"\
    Input numbers should be: x <= y. Try again.\")\n        return -1\n    end\n \
    \   for i in x:y\n        if i%2 == 0\n            return i\n        end\n   \
    \ end\n    return -1\nend", "    \n    if x > y\n        return -1\n    end\n\
    \    return max(x:2:y)\nend", "    for i in x:y\n        if i%2 == 0\n       \
    \     return i\n        end\n    end\n    return -1\nend\nchoose_num(2, 5)\nchoose_num(2,\
    \ 10)", "    if x > y\n        return -1\n    end\n    if mod(x, 2) == 0\n   \
    \     return x\n    end\n    return choose_num(x+1, y)\nend\nchoose_num(6, 8)",
  "    if(x%2 != 0)\n        x = x + 1\n    end\n    for i in x:y\n        if(i%2\
    \ == 0)\n            a = i\n        end\n    end\n    if(a == y)\n        a =\
    \ -1\n    end\n    return a\nend\n    \n    \n    ", "    n = y\n    while n >=\
    \ x\n        if n % 2 == 0\n            return n\n        end\n        n -= 1\n\
    \    end\n    return -1\nend", "    \n    if x > y  \n        \n        z = y\n\
    \        \n        while z <= x \n            if z % 2 == 0\n                return\
    \ z\n            end\n            z = z + 1\n        end\n        return -1\n\
    \    end\n    \n    if x < y \n        \n        z = x\n        \n        while\
    \ z <= y \n            if z % 2 == 0\n                return z\n            end\n\
    \            z = z + 1\n        end\n        return -1\n    end\n    return x\n\
    end", "    if x > y\n        return -1\n    end\n    \n    if x % 2 == 0 && y\
    \ % 2 == 0\n        return y\n    end\n    \n    if x % 2 == 0 && y % 2 != 0\n\
    \        return y - 1\n    end\n    \n    if x % 2 != 0 && y % 2 == 0\n      \
    \  return y\n    end\n    \n    if x % 2 != 0 && y % 2 != 0\n        return y\
    \ - 1\n    end\nend", "  if x>y\n    return -1\n  end\n    \n  if y%2==0\n   \
    \ return y\n  else\n    return y-1\n  end\nend\n\"\"\"This function takes two\
    \ positive numbers x and y and returns the\n    biggest even integer number that\
    \ is in the range [x, y] inclusive. If \n    there's no such number, then the\
    \ function should return -1.", "    for i in range(x, y+1)\n        if i % 2 ==\
    \ 0\n            return i\n        end\n    end\n    return -1\nend", "    \n\
    \    if x > y\n        return -1\n        \n    elseif y%2 == 0\n        if x%2\
    \ == 0\n            if y > x\n                return y\n            else\n   \
    \             return x\n            end\n        else\n            return y\n\
    \        end\n    elseif x%2 == 0\n        return x\n    else\n        if y >\
    \ x\n            return (y-1)\n        else\n            return (x-1)\n      \
    \  end\n    end\n    \nend", "    if x > y \n        return -1\n    end\n    if\
    \ x % 2 == 0 \n        return x\n    end\n    if x % 2 == 1 \n        return choose_num(x+1,\
    \ y)\n    end\nend", "    if x > y\n        return -1\n    end\n    \n    for\
    \ i in x:y\n        if i % 2 == 0\n            return i\n        end\n    end\n\
    \    return -1\nend", "    if mod(x, 2) == 0 && x >= y \n        return x\n  \
    \  elseif mod(x, 2) == 0 && x <= y\n        while x < y\n            x += 2\n\
    \        end\n        return x\n    elseif mod(x, 2) != 0 && x < y\n        x\
    \ += 1\n        while x < y\n            x += 2\n        end\n        return x\n\
    \    else\n        return -1\n    end\nend", "    if x>y\n        return -1\n\
    \    end\n    if y % 2 == 0\n        return y\n    elseif y % 2 != 0\n       \
    \ y -= 1\n        return y\n    end\nend", "    # Your code here.\nend\n ", " \
    \   #TODO: implement\nend", "    \n    n = 0\n    big_num = 0\n    \n    for n\
    \ in x:y\n        if n > big_num && n % 2 == 0\n            big_num = n\n    \
    \    end\n    end\n    \n    if big_num == 0\n        return -1\n    else\n  \
    \      return big_num\n    end\nend", "    bigger = 0\n    if x > y\n        bigger\
    \ = x\n    else\n        bigger = y\n    end\n    count = bigger\n    while true\n\
    \        if count % 2 == 0\n            return count\n        end\n        count\
    \ -= 1\n        if count < 1\n            return -1\n        end\n    end\nend",
  "    start = x\n    while start <= y\n        if start % 2 == 0\n            return\
    \ start\n        end\n        start += 1\n    end\n    return -1\nend", "    for\
    \ i in x:y\n        if i % 2 == 0\n            return i\n    return -1\nend\n\
    end\nchoose_num(15, 16)", "    if x>y\n        println(\"x is not bigger than\
    \ y\")\n    else\n        x=x-1 # we need to start from x-1\n        while x<y\n\
    \            x=x+1\n            if x%2==0\n                even_num=x\n      \
    \      end\n        end\n        if x%2==0\n            return even_num\n    \
    \    else\n            return -1\n        end\n    end\nend", "    # YOUR CODE\
    \ HERE\nend", "    m = max(x, y)\n    n = min(x, y)\n    if m > n\n        for\
    \ i in n:m\n            if i % 2 == 0\n                return i\n            end\n\
    \        end\n    else\n        return -1\n    end\nend", "    \n    # Your code\
    \ here\n    \nend", "    # define a local variable which will be returned\n  \
    \  num = 0\n    # check if both numbers are positive\n    if x > 0 && y > 0\n\
    \        # loop through all numbers in range [x, y]\n        for i = x:y\n   \
    \         # check if number is even\n            if i % 2 == 0\n             \
    \   # if so, then update the return variable\n                num = i\n      \
    \      end\n        end\n    end\n    # if both numbers are positive, then num\
    \ should be 0\n    # so we return -1 \n    if num == 0\n        return -1\n  \
    \  else\n        return num\n    end\nend", "    if x >= y\n        return -1\n\
    \    end\n    if x % 2 == 0\n        return x\n    end\n    if y % 2 == 0\n  \
    \      return y\n    end\n    return -1\nend", "    if x>y\n        return -1\n\
    \    end\n    while x<=y\n        if x%2==0\n            return x\n        end\n\
    \        x=x+1\n    end\n    return -1\nend", "    if x%2 == 0\n        return\
    \ x\n    else\n        return x+1\n    end\nend", "    for i in y:-1:x\n     \
    \   if i % 2 == 0\n            return i\n        end\n    end\n    return -1\n\
    end", "    \"\"\"Returns the largest even number in the range [x, y].\"\"\"\n\
    \    result = -1\n    for i = x:y\n        if i % 2 == 0 && i > result\n     \
    \       result = i\n        end\n    end\n    return result\nend", "    if x <\
    \ 0 || y < 0\n        println(\"numbers should be positive\")\n        return\
    \ -1\n    end\n    if x > y\n        println(\"y should be greater than x\")\n\
    \        return -1\n    end\n    for i in x:y\n        if i % 2 == 0\n       \
    \     return i\n        end\n    end\n    return -1\nend\nprintln(choose_num(3,4))\n\
    println(choose_num(3, 3))\nprintln(choose_num(4, 3))\nprintln(choose_num(-4, 2))"]
stop_tokens:
- "\nfunction"
- "\nmacro"
- "\n\n"

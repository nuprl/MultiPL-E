language: jl
name: HumanEval_116_sort_array
results:
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    one_bin(n) = count_ones(bin(n))\n    sort(arr, by=one_bin)\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5,\
    \ 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4,\
    \ -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t\
    @test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpkbpesbvp.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkbpesbvp.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ bin not defined\n  Stacktrace:\n    [1] (::var\"#one_bin#1\")(n::Int64)\n  \
    \    @ Main /tmp/tmpkbpesbvp.jl:9\n    [2] lt\n      @ ./ordering.jl:111 [inlined]\n\
    \    [3] sort!(v::Vector{Int64}, lo::Int64, hi::Int64, #unused#::Base.Sort.InsertionSortAlg,\
    \ o::Base.Order.By{var\"#one_bin#1\", Base.Order.ForwardOrdering})\n      @ Base.Sort\
    \ ./sort.jl:507\n    [4] sort!(v::Vector{Int64}, lo::Int64, hi::Int64, a::Base.Sort.QuickSortAlg,\
    \ o::Base.Order.By{var\"#one_bin#1\", Base.Order.ForwardOrdering})\n      @ Base.Sort\
    \ ./sort.jl:574\n    [5] sort!\n      @ ./sort.jl:664 [inlined]\n    [6] #sort!#8\n\
    \      @ ./sort.jl:725 [inlined]\n    [7] #sort#9\n      @ ./sort.jl:772 [inlined]\n\
    \    [8] sort_array(arr::Vector{Int64})\n      @ Main /tmp/tmpkbpesbvp.jl:10\n\
    \    [9] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpkbpesbvp.jl:17 [inlined]\n\
    \   [11] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpkbpesbvp.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkbpesbvp.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: bin\
    \ not defined\n  Stacktrace:\n    [1] (::var\"#one_bin#1\")(n::Int64)\n      @\
    \ Main /tmp/tmpkbpesbvp.jl:9\n    [2] lt\n      @ ./ordering.jl:111 [inlined]\n\
    \    [3] sort!(v::Vector{Int64}, lo::Int64, hi::Int64, #unused#::Base.Sort.InsertionSortAlg,\
    \ o::Base.Order.By{var\"#one_bin#1\", Base.Order.ForwardOrdering})\n      @ Base.Sort\
    \ ./sort.jl:507\n    [4] sort!(v::Vector{Int64}, lo::Int64, hi::Int64, a::Base.Sort.QuickSortAlg,\
    \ o::Base.Order.By{var\"#one_bin#1\", Base.Order.ForwardOrdering})\n      @ Base.Sort\
    \ ./sort.jl:574\n    [5] sort!\n      @ ./sort.jl:664 [inlined]\n    [6] #sort!#8\n\
    \      @ ./sort.jl:725 [inlined]\n    [7] #sort#9\n      @ ./sort.jl:772 [inlined]\n\
    \  "
  timestamp: 1659821979
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \nend\n\"\"\"\n    So, let's see the examples:\n        sort_array([1,2,3,4,5,6,7,8,9,10])\
    \ == [1,2,4,8,3,5,6,7,9,10]\n        sort_array([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])\
    \ ==\n            [1,2,4,8,16,3,5,6,7,9,10,12,14,11,13,15,17,18,19,20]\n     \
    \   sort_array([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32])\
    \ ==\n            [1,2,4,8,16,32,3,5,6,7,9,10,12,14,11,13,15,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31]\n\
    \        sort_array([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50])\
    \ ==\n            [1,2,4,8,16,32,3,5,6,7,9,10,12,14,11,13,15,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50]\n\
    \        sort_array([1,2,3,\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\
    \t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp6nm_x2s2.jl:10\nin expression starting at\
    \ /tmp/tmp6nm_x2s2.jl:10\n"
  stdout: ''
  timestamp: 1659821977
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    # sort the array according to\n    # number of ones in their binary representation\n\
    \    # for similar number of ones, sort based on decimal value.\n    # sort!(arr,\
    \ by = [x->bits(x), x->x])\n    # sort!(arr, by = [x->bits(x), x->x])\n    sort!(arr,\
    \ by = [x->bits(x)])\n    sort!(arr, by = [x->x])\n    return arr\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5,\
    \ 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4,\
    \ -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t\
    @test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmp9bn9xr8l.jl:20

    '
  stdout: "test set: Error During Test at /tmp/tmp9bn9xr8l.jl:23\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  MethodError: objects\
    \ of type Vector{var\"#1#3\"} are not callable\n  Use square brackets [] for indexing\
    \ an Array.\n  Stacktrace:\n    [1] lt(o::Base.Order.By{Vector{var\"#1#3\"}, Base.Order.ForwardOrdering},\
    \ a::Int64, b::Int64)\n      @ Base.Order ./ordering.jl:111\n    [2] sort!\n \
    \     @ ./sort.jl:507 [inlined]\n    [3] sort!\n      @ ./sort.jl:574 [inlined]\n\
    \    [4] sort!\n      @ ./sort.jl:664 [inlined]\n    [5] #sort!#8\n      @ ./sort.jl:725\
    \ [inlined]\n    [6] sort_array(arr::Vector{Int64})\n      @ Main /tmp/tmp9bn9xr8l.jl:14\n\
    \    [7] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [8] macro expansion\n      @ /tmp/tmp9bn9xr8l.jl:23 [inlined]\n\
    \    [9] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [10] top-level scope\n      @ /tmp/tmp9bn9xr8l.jl:22\ntest set:\
    \ Error During Test at /tmp/tmp9bn9xr8l.jl:24\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  MethodError: objects\
    \ of type Vector{var\"#1#3\"} are not callable\n  Use square brackets [] for indexing\
    \ an Array.\n  Stacktrace:\n    [1] lt(o::Base.Order.By{Vector{var\"#1#3\"}, Base.Order.ForwardOrdering},\
    \ a::Int64, b::Int64)\n      @ Base.Order ./ordering.jl:111\n    [2] sort!\n \
    \     @ ./sort.jl:507 [inlined]\n    [3] sort!\n      @ ./sort.jl:574 [inlined]\n\
    \    [4] sort!\n      @ ./sort.jl:664 [inlined]\n    [5] #sort!#8\n      @ ./sort.jl:725\
    \ [inlined]\n    [6] sort_array(arr::Vector{Int64})\n      @ Main /tmp/tmp9bn9xr8l.jl:14\n\
    \    [7] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [8] macro expansion\n      @ /tmp/tmp9bn9xr8l.jl:24 [inlined]\n\
    \    [9] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [10] top-level scope\n      @ /tmp/tmp9bn9xr8l.jl:22\ntest set:\
    \ Error During Test at /tmp/"
  timestamp: 1659821980
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n  #your code here\nend\n\"\"\"\nExamples:\nsort_array([0, 1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10]) \n#[0, 1, 2, 4, 8, 3, 5, 6, 7, 9, 10]\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1,\
    \ 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\
    \t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpzc0y729j.jl:11\nin expression starting at\
    \ /tmp/tmpzc0y729j.jl:11\n"
  stdout: ''
  timestamp: 1659821977
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    arr_ones = [count_ones(x) for x in arr]\n    idx = sortperm(arr_ones)\n\
    \    return arr[idx]\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\
    \t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp69guel6i.jl:15

    '
  stdout: "test set: Test Failed at /tmp/tmp69guel6i.jl:18\n  Expression: candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n   Evaluated: [1, 2, 4, 5, 3] == [1, 2, 4,\
    \ 3, 5]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp69guel6i.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp69guel6i.jl:17\ntest set: Test\
    \ Failed at /tmp/tmp69guel6i.jl:19\n  Expression: candidate([-2, -3, -4, -5, -6])\
    \ == [-4, -2, -6, -5, -3]\n   Evaluated: [-4, -6, -2, -3, -5] == [-4, -2, -6,\
    \ -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp69guel6i.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp69guel6i.jl:17\ntest set: Test\
    \ Failed at /tmp/tmp69guel6i.jl:22\n  Expression: candidate([2, 5, 77, 4, 5, 3,\
    \ 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\n   Evaluated: [2, 4,\
    \ 2, 4, 5, 5, 3, 5, 3, 7, 77] == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp69guel6i.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp69guel6i.jl:17\ntest set: Test\
    \ Failed at /tmp/tmp69guel6i.jl:23\n  Expression: candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44]\n   Evaluated: [32, 3, 6, 12, 5, 44] == [32, 3,\
    \ 5, 6, 12, 44]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp69guel6i.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tm"
  timestamp: 1659821978
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    # put your codes here\n    return arr\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3,\
    \ 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1,\
    \ 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpfos_rlpl.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmpfos_rlpl.jl:17\n  Expression: candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n   Evaluated: [1, 5, 2, 3, 4] == [1, 2, 4,\
    \ 3, 5]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfos_rlpl.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfos_rlpl.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpfos_rlpl.jl:18\n  Expression: candidate([-2, -3, -4, -5, -6])\
    \ == [-4, -2, -6, -5, -3]\n   Evaluated: [-2, -3, -4, -5, -6] == [-4, -2, -6,\
    \ -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfos_rlpl.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfos_rlpl.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpfos_rlpl.jl:19\n  Expression: candidate([1, 0, 2, 3, 4]) ==\
    \ [0, 1, 2, 4, 3]\n   Evaluated: [1, 0, 2, 3, 4] == [0, 1, 2, 4, 3]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfos_rlpl.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfos_rlpl.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpfos_rlpl.jl:21\n  Expression: candidate([2, 5, 77, 4, 5, 3,\
    \ 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\n   Evaluated: [2, 5,\
    \ 77, 4, 5, 3, 5, 7, 2, 3, 4] == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfos_rlpl.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfos_rlpl.jl:16\ntest set"
  timestamp: 1659821978
- exit_code: -1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    ones = Dict{Int64, Vector{Int64}}()\n    for i = 1:length(arr)\n     \
    \   bin = decimal_to_binary(arr[i])\n        ones[count_ones(bin)] = [arr[i]]\n\
    \    end\n    sort!(values(ones), rev=true)\n    collect(sort(keys(ones)))\nend\n\
    using Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpors59no7.jl:22\n  Test threw
    exception\n  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:
    decimal_to_binary not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @
    Main /tmp/tmpors59no7.jl:11\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpors59no7.jl:22 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpors59no7.jl:21\ntest set: Error
    During Test at /tmp/tmpors59no7.jl:23\n  Test threw exception\n  Expression: candidate([-2,
    -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: decimal_to_binary not
    defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmpors59no7.jl:11\n   [2]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpors59no7.jl:23 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpors59no7.jl:21\ntest set: Error
    During Test at /tmp/tmpors59no7.jl:24\n  Test threw exception\n  Expression: candidate([1,
    0, 2, 3, 4]) == [0, 1, 2, 4, 3]\n  UndefVarError: decimal_to_binary not defined\n  Stacktrace:\n   [1]
    sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmpors59no7.jl:11\n   [2] macro
    expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpors59no7.jl:24 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpors59no7.jl:21\ntest set: Error
    During Test at /tmp/tmpors59no7.jl:25\n  Test threw exception\n  Expression: candidate(Vector{Int64}([]))
    == Vector{Int64}([])\n  MethodError: no method matching s'
  timestamp: 1659821980
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    sort(arr, by = (x) -> begin\n        ones(x) # the number of ones in its\
    \ binary representation\n        # x # in case of a tie, sort by the decimal value\n\
    \    end)\nend\n\"\"\"\n\"\"\"\n\"\"\"\n## Sort Array By Binary Digits:\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5,\
    \ 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4,\
    \ -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t\
    @test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpx1r55krt.jl:14\nin expression starting at\
    \ /tmp/tmpx1r55krt.jl:14\n"
  stdout: ''
  timestamp: 1659821977
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n  # sort it for the number of ones ascending\n  sorted_arr = sort(arr, by\
    \ = x -> count_ones(x))\n  # sort it for the number of ones ascending\n  sorted_arr\
    \ = sort(sorted_arr, by = x -> (count_ones(x), x))\n  return sorted_arr\nend\n\
    using Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpf1a59ykc.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpf1a59ykc.jl:21\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpf1a59ykc.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpf1a59ykc.jl:19\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  timestamp: 1659821978
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    sorted_arr = sort(arr, by = x -> (count_ones(x), x))\n    return sorted_arr\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpc46i11c9.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmpc46i11c9.jl:18\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpc46i11c9.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpc46i11c9.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  timestamp: 1659821978
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    @tidy arr |> _\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\
    \t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: UndefVarError: @tidy not defined\nStacktrace:\n [1] top-level\
    \ scope\n   @ :0\n [2] #macroexpand#51\n   @ ./expr.jl:115 [inlined]\n [3] macroexpand\n\
    \   @ ./expr.jl:114 [inlined]\n [4] docm(source::LineNumberNode, mod::Module,\
    \ meta::Any, ex::Any, define::Bool) (repeats 2 times)\n   @ Base.Docs ./docs/Docs.jl:537\n\
    \ [5] var\"@doc\"(::LineNumberNode, ::Module, ::String, ::Vararg{Any})\n   @ Core\
    \ ./boot.jl:517\nin expression starting at /tmp/tmpb5o0rtos.jl:1\nin expression\
    \ starting at /tmp/tmpb5o0rtos.jl:1\n"
  stdout: ''
  timestamp: 1659821978
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    # Your code here!\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\
    \t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmp32dypsqz.jl:13

    '
  stdout: "test set: Error During Test at /tmp/tmp32dypsqz.jl:16\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type Vector{Int64}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at ~/.conda/envs/polyglot/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at ~/.conda/envs/polyglot/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmp32dypsqz.jl:10\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp32dypsqz.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp32dypsqz.jl:15\ntest set:\
    \ Error During Test at /tmp/tmp32dypsqz.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type Vector{Int64}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at ~/.conda/envs/polyglot/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at ~/.conda/envs/polyglot/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmp32dypsqz.jl:10\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp32dypsqz.jl:17 [inlined]\n\
    \   ["
  timestamp: 1659821980
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    \"\"\"\n    return sorted array\n    \"\"\"\n    K = zeros(Int64, length(arr))\n\
    \    binarr = zeros(Int64, length(arr))\n    newarr = zeros(Int64, length(arr))\n\
    \    for i in 1:length(arr)\n        binarr[i] = binary(arr[i])\n        K[i]\
    \ = count(x -> x == '1', binarr[i])\n    end\n    for i in 1:length(arr)\n   \
    \     newarr[i] = minimum(arr[K .== i])\n        arr[arr .== newarr[i]] = 0\n\
    \    end\n    return newarr\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpxu1c4ow9.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmpxu1c4ow9.jl:30\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ binary not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n \
    \    @ Main /tmp/tmpxu1c4ow9.jl:16\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxu1c4ow9.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxu1c4ow9.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpxu1c4ow9.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: binary\
    \ not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmpxu1c4ow9.jl:16\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxu1c4ow9.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxu1c4ow9.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpxu1c4ow9.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3]\n  UndefVarError: binary not defined\n\
    \  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmpxu1c4ow9.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxu1c4ow9.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxu1c4ow9.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpxu1c4ow9.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5,\
    \ 7, 77]\n  UndefVarError: binary not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int6"
  timestamp: 1659821979
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n        return sort(arr, by = x -> (tuple(count_ones(x), x)))\n    end\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5,\
    \ 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4,\
    \ -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t\
    @test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp3atez6by.jl:13

    '
  stdout: "test set: Test Failed at /tmp/tmp3atez6by.jl:17\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3atez6by.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3atez6by.jl:15\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  timestamp: 1659821978
- exit_code: -1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    return sort(collect(zip(arr, [sum(x) for x in bitstring.(arr)])), by=x->x[2])[:,1]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmp0zd_6umh.jl:16\n  Test threw
    exception\n  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  MethodError:
    no method matching +(::Char, ::Char)\n  Closest candidates are:\n    +(::Any,
    ::Any, !Matched::Any, !Matched::Any...) at ~/.conda/envs/polyglot/share/julia/base/operators.jl:655\n    +(::T,
    !Matched::Integer) where T<:AbstractChar at ~/.conda/envs/polyglot/share/julia/base/char.jl:237\n    +(!Matched::Integer,
    ::AbstractChar) at ~/.conda/envs/polyglot/share/julia/base/char.jl:247\n  Stacktrace:\n    [1]
    add_sum(x::Char, y::Char)\n      @ Base ./reduce.jl:24\n    [2] BottomRF\n      @
    ./reduce.jl:81 [inlined]\n    [3] _foldl_impl(op::Base.BottomRF{typeof(Base.add_sum)},
    init::Base._InitialValue, itr::String)\n      @ Base ./reduce.jl:62\n    [4] foldl_impl\n      @
    ./reduce.jl:48 [inlined]\n    [5] mapfoldl_impl\n      @ ./reduce.jl:44 [inlined]\n    [6]
    #mapfoldl#244\n      @ ./reduce.jl:162 [inlined]\n    [7] mapfoldl\n      @ ./reduce.jl:162
    [inlined]\n    [8] #mapreduce#248\n      @ ./reduce.jl:289 [inlined]\n    [9]
    mapreduce\n      @ ./reduce.jl:289 [inlined]\n   [10] #sum#251\n      @ ./reduce.jl:503
    [inlined]\n   [11] sum\n      @ ./reduce.jl:503 [inlined]\n   [12] #sum#252\n      @
    ./reduce.jl:532 [inlined]\n   [13] sum\n      @ ./reduce.jl:532 [inlined]\n   [14]
    #1\n      @ ./none:0 [inlined]\n   [15] iterate\n      @ ./generator.jl:47 [inlined]\n   [16]
    collect(itr::Base.Generator{Vector{String}, var"#1#3"})\n      @ Base ./array.jl:724\n   [17]
    sort_array(arr::Vector{Int64})\n      @ Main /tmp/tmp0zd_6umh.jl:9\n   [18] macro
    expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [19] macro expansion\n      @ /tmp/tmp0zd_6umh.jl:16 [inlined]\n   [20]
    macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [21] top-level scope\n      @ /tmp/tmp0zd_6umh.jl:15\ntest set:
    Error During Test at /tmp/tmp0zd_6umh.jl:17\n  Test threw exception\n  Expression:
    can'
  timestamp: 1659821980
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    binary_representation = map(x -> bin(x)[2:end], arr)\n    sort_matrix\
    \ = map(x -> x[1], zip(binary_representation, arr))\n    sort_matrix_ones = map(x\
    \ -> (occurrences(x[1], '1'), x[2]), sort_matrix)\n    sort_matrix_ones_decimal\
    \ = sort(sort_matrix_ones, lt = (x, y) -> \n        x[1] < y[1] || x[1] == y[1]\
    \ && x[2] < y[2])\n    return map(x -> x[2], sort_matrix_ones_decimal)\nend\n\
    using Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpvcqu498_.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmpvcqu498_.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ bin not defined\n  Stacktrace:\n    [1] (::var\"#1#6\")(x::Int64)\n      @ Main\
    \ /tmp/tmpvcqu498_.jl:9\n    [2] iterate\n      @ ./generator.jl:47 [inlined]\n\
    \    [3] _collect(c::Vector{Int64}, itr::Base.Generator{Vector{Int64}, var\"#1#6\"\
    }, #unused#::Base.EltypeUnknown, isz::Base.HasShape{1})\n      @ Base ./array.jl:744\n\
    \    [4] collect_similar\n      @ ./array.jl:653 [inlined]\n    [5] map\n    \
    \  @ ./abstractarray.jl:2867 [inlined]\n    [6] sort_array(arr::Vector{Int64})\n\
    \      @ Main /tmp/tmpvcqu498_.jl:9\n    [7] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [8] macro expansion\n      @ /tmp/tmpvcqu498_.jl:21 [inlined]\n\
    \    [9] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [10] top-level scope\n      @ /tmp/tmpvcqu498_.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpvcqu498_.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: bin\
    \ not defined\n  Stacktrace:\n    [1] (::var\"#1#6\")(x::Int64)\n      @ Main\
    \ /tmp/tmpvcqu498_.jl:9\n    [2] iterate\n      @ ./generator.jl:47 [inlined]\n\
    \    [3] _collect(c::Vector{Int64}, itr::Base.Generator{Vector{Int64}, var\"#1#6\"\
    }, #unused#::Base.EltypeUnknown, isz::Base.HasShape{1})\n      @ Base ./array.jl:744\n\
    \    [4] collect_similar\n      @ ./array.jl:653 [inlined]\n    [5] map\n    \
    \  @ ./abstractarray.jl:2867 [inlined]\n    [6] sort_array(arr::Vector{Int64})\n\
    \      @ Main /tmp/tmpvcqu498_.jl:9\n    [7] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [8] macro expansion\n      @ /tmp/tmpvcqu498_.jl:22 [inlined]\n\
    \    [9] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [10] top-level scope\n      @ /tmp/tmpvcqu498_.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpvcqu498_.jl:23\n"
  timestamp: 1659821980
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    return sort(arr, by=a->(length(findall(match(r\"1\"), binary(a))), a))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmp83cpoa4v.jl:13

    '
  stdout: "test set: Error During Test at /tmp/tmp83cpoa4v.jl:16\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  MethodError: no\
    \ method matching match(::Regex)\n  Closest candidates are:\n    match(::Regex,\
    \ !Matched::Union{SubString{String}, String}, !Matched::Integer) at ~/.conda/envs/polyglot/share/julia/base/regex.jl:367\n\
    \    match(::Regex, !Matched::Union{SubString{String}, String}, !Matched::Integer,\
    \ !Matched::UInt32) at ~/.conda/envs/polyglot/share/julia/base/regex.jl:367\n\
    \    match(::Regex, !Matched::AbstractString) at ~/.conda/envs/polyglot/share/julia/base/regex.jl:388\n\
    \    ...\n  Stacktrace:\n    [1] (::var\"#1#2\")(a::Int64)\n      @ Main /tmp/tmp83cpoa4v.jl:9\n\
    \    [2] lt(o::Base.Order.By{var\"#1#2\", Base.Order.ForwardOrdering}, a::Int64,\
    \ b::Int64)\n      @ Base.Order ./ordering.jl:111\n    [3] sort!\n      @ ./sort.jl:507\
    \ [inlined]\n    [4] sort!\n      @ ./sort.jl:574 [inlined]\n    [5] sort!\n \
    \     @ ./sort.jl:664 [inlined]\n    [6] #sort!#8\n      @ ./sort.jl:725 [inlined]\n\
    \    [7] sort(v::Vector{Int64}; kws::Base.Pairs{Symbol, var\"#1#2\", Tuple{Symbol},\
    \ NamedTuple{(:by,), Tuple{var\"#1#2\"}}})\n      @ Base.Sort ./sort.jl:772\n\
    \    [8] sort_array(arr::Vector{Int64})\n      @ Main /tmp/tmp83cpoa4v.jl:9\n\
    \    [9] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmp83cpoa4v.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmp83cpoa4v.jl:15\ntest set:\
    \ Error During Test at /tmp/tmp83cpoa4v.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  MethodError: no method\
    \ matching match(::Regex)\n  Closest candidates are:\n    match(::Regex, !Matched::Union{SubString{String},\
    \ String}, !Matched::Integer) at ~/.conda/envs/polyglot/share/julia/base/regex.jl:367\n\
    \    match(::Regex, !Matched::Union{SubString{String}, String}, !Matched::Integer,\
    \ !Matched::UInt32) at ~/.conda/e"
  timestamp: 1659821980
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    sort(arr, by = item->(sum(digits(item, 2))*length(digits(Int(bitmax()),\
    \ 2)), item))\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t\
    @test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3,\
    \ -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) ==\
    \ [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmppg1s9dn1.jl:13

    '
  stdout: "test set: Error During Test at /tmp/tmppg1s9dn1.jl:16\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  MethodError: no\
    \ method matching digits(::Int64, ::Int64)\n  Closest candidates are:\n    digits(::Integer;\
    \ base, pad) at ~/.conda/envs/polyglot/share/julia/base/intfuncs.jl:854\n    digits(!Matched::Type{<:Integer},\
    \ ::Integer; base, pad) at ~/.conda/envs/polyglot/share/julia/base/intfuncs.jl:857\n\
    \  Stacktrace:\n    [1] (::var\"#1#2\")(item::Int64)\n      @ Main /tmp/tmppg1s9dn1.jl:9\n\
    \    [2] lt(o::Base.Order.By{var\"#1#2\", Base.Order.ForwardOrdering}, a::Int64,\
    \ b::Int64)\n      @ Base.Order ./ordering.jl:111\n    [3] sort!\n      @ ./sort.jl:507\
    \ [inlined]\n    [4] sort!\n      @ ./sort.jl:574 [inlined]\n    [5] sort!\n \
    \     @ ./sort.jl:664 [inlined]\n    [6] #sort!#8\n      @ ./sort.jl:725 [inlined]\n\
    \    [7] sort(v::Vector{Int64}; kws::Base.Pairs{Symbol, var\"#1#2\", Tuple{Symbol},\
    \ NamedTuple{(:by,), Tuple{var\"#1#2\"}}})\n      @ Base.Sort ./sort.jl:772\n\
    \    [8] sort_array(arr::Vector{Int64})\n      @ Main /tmp/tmppg1s9dn1.jl:9\n\
    \    [9] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmppg1s9dn1.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmppg1s9dn1.jl:15\ntest set:\
    \ Error During Test at /tmp/tmppg1s9dn1.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  MethodError: no method\
    \ matching digits(::Int64, ::Int64)\n  Closest candidates are:\n    digits(::Integer;\
    \ base, pad) at ~/.conda/envs/polyglot/share/julia/base/intfuncs.jl:854\n    digits(!Matched::Type{<:Integer},\
    \ ::Integer; base, pad) at ~/.conda/envs/polyglot/share/julia/base/intfuncs.jl:857\n\
    \  Stacktrace:\n    [1] (::var\"#1#2\")(item::Int64)\n      @ Main /tmp/tmppg1s9dn1.jl:9\n\
    \    [2] lt(o::Base.Order.By{var\"#1#2\", Base.Order.ForwardOrdering}, a::Int64,\
    \ b::Int64)\n      @ Base.Order ./ordering.jl:111\n"
  timestamp: 1659821980
- exit_code: -1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\
    \t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: Timeout
  stderr: 'b''ERROR: LoadError: '''
  stdout: 'b''test set: Error During Test at /tmp/tmpnm5b9cr5.jl:16\n  Test threw
    exception\n  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  MethodError:
    Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n  Closest
    candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)
    where T<:AbstractArray at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n    convert(::Type{T},
    !Matched::AbstractArray) where T<:Array at ~/.conda/envs/polyglot/share/julia/base/array.jl:554\n    convert(::Type{T},
    !Matched::T) where T<:AbstractArray at ~/.conda/envs/polyglot/share/julia/base/abstractarray.jl:16\n    ...\n  Stacktrace:\n   [1]
    sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmpnm5b9cr5.jl:10\n   [2] macro
    expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpnm5b9cr5.jl:16 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpnm5b9cr5.jl:15\ntest set: Error
    During Test at /tmp/tmpnm5b9cr5.jl:17\n  Test threw exception\n  Expression: candidate([-2,
    -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  MethodError: Cannot `convert` an object
    of type Nothing to an object of type Vector{Int64}\n  Closest candidates are:\n    convert(::Type{T},
    !Matched::LinearAlgebra.Factorization) where T<:AbstractArray at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n    convert(::Type{T},
    !Matched::AbstractArray) where T<:Array at ~/.conda/envs/polyglot/share/julia/base/array.jl:554\n    convert(::Type{T},
    !Matched::T) where T<:AbstractArray at ~/.conda/envs/polyglot/share/julia/base/abstractarray.jl:16\n    ...\n  Stacktrace:\n   [1]
    sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmpnm5b9cr5.jl:10\n   [2] macro
    expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ '
  timestamp: 1659821980
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    # Sort array according to number of ones and decimal value\n    return\
    \ sort(arr, lt=(x,y) -> count_ones(x) < count_ones(y) || (count_ones(x) == count_ones(y)\
    \ && x < y))\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t\
    @test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3,\
    \ -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) ==\
    \ [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp0607pl1i.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmp0607pl1i.jl:18\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0607pl1i.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0607pl1i.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  timestamp: 1659821978
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    # code goes here\nend\n\"\"\"\n    Note:\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3,\
    \ 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1,\
    \ 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpcryx65g9.jl:11\nin expression starting at\
    \ /tmp/tmpcryx65g9.jl:11\n"
  stdout: ''
  timestamp: 1659821977
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    \"\"\"function to sort the array based on the binary\n    representations\
    \ of the array elements.\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\
    \t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp2dduppvm.jl:1\nin expression starting at /tmp/tmp2dduppvm.jl:1\n"
  stdout: ''
  timestamp: 1659821977
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    res = Array{Tuple{Int64, Int64}}(length(arr))\n    for i = 1:length(arr)\n\
    \        res[i] = (convert(Int64, count_one(string(binary(arr[i])))), arr[i])\n\
    \    end\n    sort!(res)\n    return [x[2] for x in res]\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4])\
    \ == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6,\
    \ -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmpqas1pts5.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmpqas1pts5.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  MethodError: no\
    \ method matching (Array{Tuple{Int64, Int64}})(::Int64)\n  Closest candidates\
    \ are:\n    (Array{T})(!Matched::LinearAlgebra.UniformScaling, !Matched::Tuple{Int64,\
    \ Int64}) where T at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/uniformscaling.jl:494\n\
    \    (Array{T})(!Matched::LinearAlgebra.UniformScaling, !Matched::Integer, !Matched::Integer)\
    \ where T at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/uniformscaling.jl:495\n\
    \    (Array{T})(!Matched::LinearAlgebra.LQPackedQ{T, S} where S<:AbstractMatrix{T})\
    \ where T at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/lq.jl:168\n\
    \    ...\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmpqas1pts5.jl:9\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpqas1pts5.jl:21 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpqas1pts5.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpqas1pts5.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  MethodError: no method\
    \ matching (Array{Tuple{Int64, Int64}})(::Int64)\n  Closest candidates are:\n\
    \    (Array{T})(!Matched::LinearAlgebra.UniformScaling, !Matched::Tuple{Int64,\
    \ Int64}) where T at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/uniformscaling.jl:494\n\
    \    (Array{T})(!Matched::LinearAlgebra.UniformScaling, !Matched::Integer, !Matched::Integer)\
    \ where T at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/uniformscaling.jl:495\n\
    \    (Array{T})(!Matched::LinearAlgebra.LQPackedQ{T, S} where S<:AbstractMatrix{T})\
    \ where T at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/lq.jl:168\n\
    \    ...\n  Stacktrace:\n   [1] sort_array(arr::Vector{I"
  timestamp: 1659821980
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    ones = dict()\n    for i in 1:length(arr)\n        n = count_ones(arr[i])\n\
    \        if haskey(ones, n)\n            push!(ones[n], arr[i])\n        else\n\
    \            ones[n] = [arr[i]]\n        end\n    end\n    sorted_keys = sort(collect(keys(ones)))\n\
    \    res = Int64[]\n    for i in 1:length(sorted_keys)\n        push!(res, sort(ones[sorted_keys[i]]))\n\
    \    end\n    return vec(res)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmpfaj1cips.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmpfaj1cips.jl:30\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ dict not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n   \
    \  @ Main /tmp/tmpfaj1cips.jl:9\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpfaj1cips.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpfaj1cips.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpfaj1cips.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: dict\
    \ not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmpfaj1cips.jl:9\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpfaj1cips.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpfaj1cips.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpfaj1cips.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3]\n  UndefVarError: dict not defined\n\
    \  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmpfaj1cips.jl:9\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpfaj1cips.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpfaj1cips.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpfaj1cips.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(Vector{Int64}([])) == Vector{Int64}([])\n  UndefVarError: dict not\
    \ defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmpfaj1cips.jl:9\n\
    \   [2] "
  timestamp: 1659821981
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    return sort(arr, by = b -> (Base.one_count(b), b))\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4])\
    \ == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6,\
    \ -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpzovcna2u.jl:13

    '
  stdout: "test set: Error During Test at /tmp/tmpzovcna2u.jl:16\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ one_count not defined\n  Stacktrace:\n    [1] (::var\"#1#2\")(b::Int64)\n  \
    \    @ Main /tmp/tmpzovcna2u.jl:9\n    [2] lt(o::Base.Order.By{var\"#1#2\", Base.Order.ForwardOrdering},\
    \ a::Int64, b::Int64)\n      @ Base.Order ./ordering.jl:111\n    [3] sort!(v::Vector{Int64},\
    \ lo::Int64, hi::Int64, #unused#::Base.Sort.InsertionSortAlg, o::Base.Order.By{var\"\
    #1#2\", Base.Order.ForwardOrdering})\n      @ Base.Sort ./sort.jl:507\n    [4]\
    \ sort!(v::Vector{Int64}, lo::Int64, hi::Int64, a::Base.Sort.QuickSortAlg, o::Base.Order.By{var\"\
    #1#2\", Base.Order.ForwardOrdering})\n      @ Base.Sort ./sort.jl:574\n    [5]\
    \ sort!\n      @ ./sort.jl:664 [inlined]\n    [6] #sort!#8\n      @ ./sort.jl:725\
    \ [inlined]\n    [7] #sort#9\n      @ ./sort.jl:772 [inlined]\n    [8] sort_array(arr::Vector{Int64})\n\
    \      @ Main /tmp/tmpzovcna2u.jl:9\n    [9] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpzovcna2u.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpzovcna2u.jl:15\ntest set:\
    \ Error During Test at /tmp/tmpzovcna2u.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: one_count\
    \ not defined\n  Stacktrace:\n    [1] (::var\"#1#2\")(b::Int64)\n      @ Main\
    \ /tmp/tmpzovcna2u.jl:9\n    [2] lt(o::Base.Order.By{var\"#1#2\", Base.Order.ForwardOrdering},\
    \ a::Int64, b::Int64)\n      @ Base.Order ./ordering.jl:111\n    [3] sort!(v::Vector{Int64},\
    \ lo::Int64, hi::Int64, #unused#::Base.Sort.InsertionSortAlg, o::Base.Order.By{var\"\
    #1#2\", Base.Order.ForwardOrdering})\n      @ Base.Sort ./sort.jl:507\n    [4]\
    \ sort!(v::Vector{Int64}, lo::Int64, hi::Int64, a::Base.Sort.QuickSortAlg, o::Base.Order.By{var\"\
    #1#2\", Base.Order.ForwardOrdering})\n      @ Base.Sort ./sort.jl:574\n    [5]\
    \ sort!\n"
  timestamp: 1659821981
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    # Sort nums by binary rep numbers of 1s\n    return sort(arr, by=n ->\
    \ length(split(string(n, base=2), \"1\")), rev=true)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1,\
    \ 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\
    \t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpsohkvd0x.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmpsohkvd0x.jl:17\n  Expression: candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n   Evaluated: [5, 3, 1, 2, 4] == [1, 2, 4,\
    \ 3, 5]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsohkvd0x.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsohkvd0x.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpsohkvd0x.jl:18\n  Expression: candidate([-2, -3, -4, -5, -6])\
    \ == [-4, -2, -6, -5, -3]\n   Evaluated: [-3, -5, -6, -2, -4] == [-4, -2, -6,\
    \ -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsohkvd0x.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsohkvd0x.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpsohkvd0x.jl:19\n  Expression: candidate([1, 0, 2, 3, 4]) ==\
    \ [0, 1, 2, 4, 3]\n   Evaluated: [3, 1, 2, 4, 0] == [0, 1, 2, 4, 3]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsohkvd0x.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsohkvd0x.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpsohkvd0x.jl:21\n  Expression: candidate([2, 5, 77, 4, 5, 3,\
    \ 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\n   Evaluated: [77, 7,\
    \ 5, 5, 3, 5, 3, 2, 4, 2, 4] == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsohkvd0x.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsohkvd0x.jl:16\ntest set"
  timestamp: 1659821980
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    qsort!(arr, 1, length(arr))\n    return arr\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1,\
    \ 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\
    \t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmp2kthnejo.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmp2kthnejo.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ qsort! not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n \
    \    @ Main /tmp/tmp2kthnejo.jl:9\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp2kthnejo.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp2kthnejo.jl:16\ntest set:\
    \ Error During Test at /tmp/tmp2kthnejo.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: qsort!\
    \ not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp2kthnejo.jl:9\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp2kthnejo.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp2kthnejo.jl:16\ntest set:\
    \ Error During Test at /tmp/tmp2kthnejo.jl:19\n  Test threw exception\n  Expression:\
    \ candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3]\n  UndefVarError: qsort! not defined\n\
    \  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmp2kthnejo.jl:9\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp2kthnejo.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp2kthnejo.jl:16\ntest set:\
    \ Error During Test at /tmp/tmp2kthnejo.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(Vector{Int64}([])) == Vector{Int64}([])\n  UndefVarError: qsort! not\
    \ defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmp2kthnejo.jl:9"
  timestamp: 1659821981
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    # Your code here\n    return arr[:]\nend;\n \nusing Test\n\n@testset begin\n\
    \ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3,\
    \ 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1,\
    \ 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp0ecc7dzx.jl:15

    '
  stdout: "test set: Test Failed at /tmp/tmp0ecc7dzx.jl:18\n  Expression: candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n   Evaluated: [1, 5, 2, 3, 4] == [1, 2, 4,\
    \ 3, 5]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0ecc7dzx.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0ecc7dzx.jl:17\ntest set: Test\
    \ Failed at /tmp/tmp0ecc7dzx.jl:19\n  Expression: candidate([-2, -3, -4, -5, -6])\
    \ == [-4, -2, -6, -5, -3]\n   Evaluated: [-2, -3, -4, -5, -6] == [-4, -2, -6,\
    \ -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0ecc7dzx.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0ecc7dzx.jl:17\ntest set: Test\
    \ Failed at /tmp/tmp0ecc7dzx.jl:20\n  Expression: candidate([1, 0, 2, 3, 4]) ==\
    \ [0, 1, 2, 4, 3]\n   Evaluated: [1, 0, 2, 3, 4] == [0, 1, 2, 4, 3]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0ecc7dzx.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0ecc7dzx.jl:17\ntest set: Test\
    \ Failed at /tmp/tmp0ecc7dzx.jl:22\n  Expression: candidate([2, 5, 77, 4, 5, 3,\
    \ 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\n   Evaluated: [2, 5,\
    \ 77, 4, 5, 3, 5, 7, 2, 3, 4] == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0ecc7dzx.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0ecc7dzx.jl:17\ntest set"
  timestamp: 1659821980
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    # your code here\nend\n                \"\"\"\n    Test cases:\n     \
    \   sort_array([0,1,3,2,4,5,7,6]) = [0,1,2,4,6,3,5,7]\n        sort_array([5,3,1,7,0,2,4,6])\
    \ = [0,1,2,4,6,3,5,7]\n        sort_array([11,12,13,14,15,16,17,18]) = [16,12,17,13,18,14,11,15]\n\
    \        sort_array([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31])\
    \ = [0,1,2,4,8,16,3,5,6,9,10,12,17,18,7,11,13,14,19,20,24,21,22,25,26,28,15,23,27,29,30,31]\n\
    \        sort_array([]) = []\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: cannot document the following expression:\n\nusing Test\n\
    \nStacktrace:\n [1] error(::String, ::String)\n   @ Base ./error.jl:42\n [2] top-level\
    \ scope\n   @ /tmp/tmpfnybijbm.jl:11\nin expression starting at /tmp/tmpfnybijbm.jl:11\n"
  stdout: ''
  timestamp: 1659821980
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n   tmp = 0\n   for i = 1:length(arr)\n       for j = i:length(arr)\n     \
    \      if bitcount(arr[i]) > bitcount(arr[j])\n              tmp = arr[i]\n  \
    \            arr[i] = arr[j]\n              arr[j] = tmp\n           elseif bitcount(arr[i])\
    \ == bitcount(arr[j])\n              if arr[i] > arr[j]\n                 tmp\
    \ = arr[i]\n                 arr[i] = arr[j]\n                 arr[j] = tmp\n\
    \              end\n           end\n       end\n   end\n   return arr\nend\n\"\
    \"\"\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp61aq0c5z.jl:27\nin expression starting at\
    \ /tmp/tmp61aq0c5z.jl:27\n"
  stdout: ''
  timestamp: 1659821980
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    return sort(arr)\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\
    \t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpqh_dmlt6.jl:13

    '
  stdout: "test set: Test Failed at /tmp/tmpqh_dmlt6.jl:16\n  Expression: candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n   Evaluated: [1, 2, 3, 4, 5] == [1, 2, 4,\
    \ 3, 5]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqh_dmlt6.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqh_dmlt6.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpqh_dmlt6.jl:17\n  Expression: candidate([-2, -3, -4, -5, -6])\
    \ == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -5, -4, -3, -2] == [-4, -2, -6,\
    \ -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqh_dmlt6.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqh_dmlt6.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpqh_dmlt6.jl:18\n  Expression: candidate([1, 0, 2, 3, 4]) ==\
    \ [0, 1, 2, 4, 3]\n   Evaluated: [0, 1, 2, 3, 4] == [0, 1, 2, 4, 3]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqh_dmlt6.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqh_dmlt6.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpqh_dmlt6.jl:20\n  Expression: candidate([2, 5, 77, 4, 5, 3,\
    \ 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\n   Evaluated: [2, 2,\
    \ 3, 3, 4, 4, 5, 5, 5, 7, 77] == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqh_dmlt6.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqh_dmlt6.jl:15\ntest set"
  timestamp: 1659821981
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    return sort(arr, by = x -> (count_ones(x), x))\nend\n\"\"\"\n    Example:\n\
    using Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmppvp_wfa6.jl:11\nin expression starting at\
    \ /tmp/tmppvp_wfa6.jl:11\n"
  stdout: ''
  timestamp: 1659821980
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    \n    ones_vec = [] #initializing a vector for the number of ones in the\
    \ binary representation of each element in the input vector\n    sorted_ones_vec\
    \ = [] #initializing a vector for the elements of the input vector after sorting\n\
    \    for i in 1:length(arr)\n        binary_vec = bitstring(arr[i]) #converting\
    \ each element of the input vector to binary\n        ones_vec = [ones_vec; count(x\
    \ -> x == '1', binary_vec)] #counting the number of ones in the binary representation\
    \ of each element\n    end\n    sorted_ones_vec = sortperm(ones_vec) #sorting\
    \ the number of ones in ascending order\n    for i in 1:length(arr)\n        arr[i]\
    \ = sorted_ones_vec[i] #converting the sorted vector back to the original input\
    \ vector\n    end\n    return arr\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 7 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp8e555iuy.jl:24

    '
  stdout: "test set: Test Failed at /tmp/tmp8e555iuy.jl:27\n  Expression: candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n   Evaluated: [1, 3, 5, 2, 4] == [1, 2, 4,\
    \ 3, 5]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8e555iuy.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8e555iuy.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp8e555iuy.jl:28\n  Expression: candidate([-2, -3, -4, -5, -6])\
    \ == [-4, -2, -6, -5, -3]\n   Evaluated: [3, 5, 1, 2, 4] == [-4, -2, -6, -5, -3]\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8e555iuy.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8e555iuy.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp8e555iuy.jl:29\n  Expression: candidate([1, 0, 2, 3, 4]) ==\
    \ [0, 1, 2, 4, 3]\n   Evaluated: [2, 1, 3, 5, 4] == [0, 1, 2, 4, 3]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8e555iuy.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8e555iuy.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp8e555iuy.jl:31\n  Expression: candidate([2, 5, 77, 4, 5, 3,\
    \ 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\n   Evaluated: [1, 4,\
    \ 9, 11, 2, 5, 6, 7, 10, 8, 3] == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8e555iuy.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8e555iuy.jl:26\ntest set: Te"
  timestamp: 1659821982
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \nend\n                \"\"\"\n    Example:\n                \"\"\"\nsort_array([1,2,3,4,5,6,7,8,9,10])\
    \ = [1,2,4,8,3,5,6,7,9,10]\n                \"\"\"\n    And then sort them in\
    \ ascending order:\n                \"\"\"\nsort_array([1,2,4,8,3,5,6,7,9,10])\
    \ = [1,2,3,4,5,6,7,8,9,10]\n    # Convert to Binary (do not sort binary numbers):\n\
    \        n = 1 -> [1]\n        n = 2 -> [1,0]\n        n = 3 -> [1,1]\n      \
    \  n = 4 -> [1,0,0]\n        n = 5 -> [1,0,1]\n        n = 6 -> [1,1,0]\n    \
    \    n = 7 -> [1,1,1]\n        n = 8 -> [1,0,0,0]\n        n = 9 -> [1,0,0,1]\n\
    \        n = 10 -> [1,0,1,0]\n    # for n = 2^k, then binary(n) = k 1's followed\
    \ by k 0's.\n    # for n = 2^k - 1, then binary(n) = k 1's.\n\"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4])\
    \ == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6,\
    \ -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\" is not a\
    \ valid function argument name around /tmp/tmp0794oqtv.jl:10\nStacktrace:\n [1]\
    \ top-level scope\n   @ /tmp/tmp0794oqtv.jl:10\nin expression starting at /tmp/tmp0794oqtv.jl:10\n"
  stdout: ''
  timestamp: 1659821980
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    sort(arr, by = x -> [sum(digits(x, 2)), x])\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1,\
    \ 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\
    \t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpgfpcp05d.jl:13

    '
  stdout: "test set: Error During Test at /tmp/tmpgfpcp05d.jl:16\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  MethodError: no\
    \ method matching digits(::Int64, ::Int64)\n  Closest candidates are:\n    digits(::Integer;\
    \ base, pad) at ~/.conda/envs/polyglot/share/julia/base/intfuncs.jl:854\n    digits(!Matched::Type{<:Integer},\
    \ ::Integer; base, pad) at ~/.conda/envs/polyglot/share/julia/base/intfuncs.jl:857\n\
    \  Stacktrace:\n    [1] (::var\"#1#2\")(x::Int64)\n      @ Main /tmp/tmpgfpcp05d.jl:9\n\
    \    [2] lt(o::Base.Order.By{var\"#1#2\", Base.Order.ForwardOrdering}, a::Int64,\
    \ b::Int64)\n      @ Base.Order ./ordering.jl:111\n    [3] sort!\n      @ ./sort.jl:507\
    \ [inlined]\n    [4] sort!\n      @ ./sort.jl:574 [inlined]\n    [5] sort!\n \
    \     @ ./sort.jl:664 [inlined]\n    [6] #sort!#8\n      @ ./sort.jl:725 [inlined]\n\
    \    [7] sort(v::Vector{Int64}; kws::Base.Pairs{Symbol, var\"#1#2\", Tuple{Symbol},\
    \ NamedTuple{(:by,), Tuple{var\"#1#2\"}}})\n      @ Base.Sort ./sort.jl:772\n\
    \    [8] sort_array(arr::Vector{Int64})\n      @ Main /tmp/tmpgfpcp05d.jl:9\n\
    \    [9] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpgfpcp05d.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpgfpcp05d.jl:15\ntest set:\
    \ Error During Test at /tmp/tmpgfpcp05d.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  MethodError: no method\
    \ matching digits(::Int64, ::Int64)\n  Closest candidates are:\n    digits(::Integer;\
    \ base, pad) at ~/.conda/envs/polyglot/share/julia/base/intfuncs.jl:854\n    digits(!Matched::Type{<:Integer},\
    \ ::Integer; base, pad) at ~/.conda/envs/polyglot/share/julia/base/intfuncs.jl:857\n\
    \  Stacktrace:\n    [1] (::var\"#1#2\")(x::Int64)\n      @ Main /tmp/tmpgfpcp05d.jl:9\n\
    \    [2] lt(o::Base.Order.By{var\"#1#2\", Base.Order.ForwardOrdering}, a::Int64,\
    \ b::Int64)\n      @ Base.Order ./ordering.jl:111\n    [3"
  timestamp: 1659821983
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5,\
    \ 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4,\
    \ -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t\
    @test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp9omldkrz.jl:1\nin expression starting at /tmp/tmp9omldkrz.jl:1\n"
  stdout: ''
  timestamp: 1659821981
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    return sort(arr, by = tuple -> [count_ones(tuple), tuple])\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5,\
    \ 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4,\
    \ -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t\
    @test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpdcf4ltk_.jl:13

    '
  stdout: "test set: Test Failed at /tmp/tmpdcf4ltk_.jl:17\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdcf4ltk_.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdcf4ltk_.jl:15\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  timestamp: 1659821982
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    # IMPLEMENT ME\nend\n                \"\"\"\n    For example,\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4])\
    \ == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6,\
    \ -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpco64eq8r.jl:11\nin expression starting at\
    \ /tmp/tmpco64eq8r.jl:11\n"
  stdout: ''
  timestamp: 1659821981
- exit_code: -1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    # Sort the array according to binary representation\n    # For similar\
    \ number of ones, sort based on decimal value\n    # ... your code here ...\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: Timeout
  stderr: 'b''ERROR: LoadError: '''
  stdout: 'b''test set: Error During Test at /tmp/tmp1_7lcot7.jl:18\n  Test threw
    exception\n  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  MethodError:
    Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n  Closest
    candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)
    where T<:AbstractArray at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n    convert(::Type{T},
    !Matched::AbstractArray) where T<:Array at ~/.conda/envs/polyglot/share/julia/base/array.jl:554\n    convert(::Type{T},
    !Matched::T) where T<:AbstractArray at ~/.conda/envs/polyglot/share/julia/base/abstractarray.jl:16\n    ...\n  Stacktrace:\n   [1]
    sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmp1_7lcot7.jl:12\n   [2] macro
    expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmp1_7lcot7.jl:18 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmp1_7lcot7.jl:17\ntest set: Error
    During Test at /tmp/tmp1_7lcot7.jl:19\n  Test threw exception\n  Expression: candidate([-2,
    -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  MethodError: Cannot `convert` an object
    of type Nothing to an object of type Vector{Int64}\n  Closest candidates are:\n    convert(::Type{T},
    !Matched::LinearAlgebra.Factorization) where T<:AbstractArray at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n    convert(::Type{T},
    !Matched::AbstractArray) where T<:Array at ~/.conda/envs/polyglot/share/julia/base/array.jl:554\n    convert(::Type{T},
    !Matched::T) where T<:AbstractArray at ~/.conda/envs/polyglot/share/julia/base/abstractarray.jl:16\n    ...\n  Stacktrace:\n   [1]
    sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmp1_7lcot7.jl:12\n   [2] macro
    expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ '
  timestamp: 1659821985
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    # Your code here\nend\n\"\"\"\n    Example:\n    sort_array([5, 3, 7,\
    \ 10, 14])\n            # expected_output = [3, 5, 10, 14, 7]\nusing Test\n\n\
    @testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4])\
    \ == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6,\
    \ -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmptgukkprw.jl:11\nin expression starting at\
    \ /tmp/tmptgukkprw.jl:11\n"
  stdout: ''
  timestamp: 1659821982
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    # Your code goes here\n    return sort(arr, by = x -> [count_ones(x),\
    \ x])\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpdlqrpwl0.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmpdlqrpwl0.jl:18\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdlqrpwl0.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdlqrpwl0.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  timestamp: 1659821983
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    ## Your solution here\n    end\nend\n## The idea for this one was to take\
    \ each element of the array and convert it\n## to a binary string, then count\
    \ the number of ones in that string. Then i \n## sorted the array based on the\
    \ number of ones in the binary string. Lastly,\n## i used a lambda function to\
    \ sort the array based on the values if the \n## number of ones was equal.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5,\
    \ 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4,\
    \ -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t\
    @test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"end\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp9sj4vuxr.jl:11\nin expression starting at /tmp/tmp9sj4vuxr.jl:11\n"
  stdout: ''
  timestamp: 1659821982
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    indexes = sortperm(count_ones.(arr), by = x -> x[1])\n    sort(arr[indexes],\
    \ by = x -> x[2])\nend\n \nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\
    \t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpf7zoufji.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpf7zoufji.jl:18\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  BoundsError\n\
    \  Stacktrace:\n    [1] getindex\n      @ ./number.jl:98 [inlined]\n    [2] #2\n\
    \      @ /tmp/tmpf7zoufji.jl:10 [inlined]\n    [3] lt\n      @ ./ordering.jl:111\
    \ [inlined]\n    [4] sort!(v::Vector{Int64}, lo::Int64, hi::Int64, #unused#::Base.Sort.InsertionSortAlg,\
    \ o::Base.Order.By{var\"#2#4\", Base.Order.ForwardOrdering})\n      @ Base.Sort\
    \ ./sort.jl:507\n    [5] sort!(v::Vector{Int64}, lo::Int64, hi::Int64, a::Base.Sort.QuickSortAlg,\
    \ o::Base.Order.By{var\"#2#4\", Base.Order.ForwardOrdering})\n      @ Base.Sort\
    \ ./sort.jl:574\n    [6] sort!\n      @ ./sort.jl:664 [inlined]\n    [7] #sort!#8\n\
    \      @ ./sort.jl:725 [inlined]\n    [8] #sort#9\n      @ ./sort.jl:772 [inlined]\n\
    \    [9] sort_array(arr::Vector{Int64})\n      @ Main /tmp/tmpf7zoufji.jl:10\n\
    \   [10] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [11] macro expansion\n      @ /tmp/tmpf7zoufji.jl:18 [inlined]\n\
    \   [12] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [13] top-level scope\n      @ /tmp/tmpf7zoufji.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpf7zoufji.jl:19\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  BoundsError\n  Stacktrace:\n\
    \    [1] getindex\n      @ ./number.jl:98 [inlined]\n    [2] #2\n      @ /tmp/tmpf7zoufji.jl:10\
    \ [inlined]\n    [3] lt\n      @ ./ordering.jl:111 [inlined]\n    [4] sort!(v::Vector{Int64},\
    \ lo::Int64, hi::Int64, #unused#::Base.Sort.InsertionSortAlg, o::Base.Order.By{var\"\
    #2#4\", Base.Order.ForwardOrdering})\n      @ Base.Sort ./sort.jl:507\n    [5]\
    \ sort!(v::Vector{Int64}, lo::Int64, hi::Int64, a::Base.Sort.QuickSortAlg, o::Base.Order.By{var\"\
    #2#4\", Base.Order.ForwardOrdering})\n      @ Base.Sort ./sort.jl:574\n    [6]\
    \ sort!\n      @ ./sort.jl:664 [inlined]\n    [7] #sort!#8\n      @ ./sort.jl:725\
    \ [inlined]\n    [8] #sort#9\n      @ ./sort.jl:772 [inlined]\n    [9"
  timestamp: 1659821984
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    length(arr) == 0 && return arr\n    convert(Int64, count(x -> x == '1',\
    \ string(x, base=2))) for x in arr\n    sort(arr, by=x->(convert(Int64, count(x\
    \ -> x == '1', string(x, base=2))), x))\nend\nusing Test\n\n@testset begin\n\n\
    candidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\
    \t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1,\
    \ 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"function\" at /tmp/tmpwamd58ho.jl:8 expected\
    \ \"end\", got \"for\"\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpwamd58ho.jl:10\n\
    in expression starting at /tmp/tmpwamd58ho.jl:10\n"
  stdout: ''
  timestamp: 1659821982
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    x = sort(arr, by = countones)\n    return x\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1,\
    \ 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\
    \t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmph2hhs0iy.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmph2hhs0iy.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ countones not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmph2hhs0iy.jl:9\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph2hhs0iy.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph2hhs0iy.jl:16\ntest set:\
    \ Error During Test at /tmp/tmph2hhs0iy.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: countones\
    \ not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmph2hhs0iy.jl:9\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph2hhs0iy.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph2hhs0iy.jl:16\ntest set:\
    \ Error During Test at /tmp/tmph2hhs0iy.jl:19\n  Test threw exception\n  Expression:\
    \ candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3]\n  UndefVarError: countones not\
    \ defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmph2hhs0iy.jl:9\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph2hhs0iy.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph2hhs0iy.jl:16\ntest set:\
    \ Error During Test at /tmp/tmph2hhs0iy.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(Vector{Int64}([])) == Vector{Int64}([])\n  UndefVarError: countones\
    \ not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmph"
  timestamp: 1659821984
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    return sortperm(arr, rev=true)\nend\nusing Test\n\n@testset begin\n\n\
    candidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\
    \t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1,\
    \ 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 7 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp27n5mkb7.jl:13

    '
  stdout: "test set: Test Failed at /tmp/tmp27n5mkb7.jl:16\n  Expression: candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n   Evaluated: [2, 5, 4, 3, 1] == [1, 2, 4,\
    \ 3, 5]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp27n5mkb7.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp27n5mkb7.jl:15\ntest set: Test\
    \ Failed at /tmp/tmp27n5mkb7.jl:17\n  Expression: candidate([-2, -3, -4, -5, -6])\
    \ == [-4, -2, -6, -5, -3]\n   Evaluated: [1, 2, 3, 4, 5] == [-4, -2, -6, -5, -3]\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp27n5mkb7.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp27n5mkb7.jl:15\ntest set: Test\
    \ Failed at /tmp/tmp27n5mkb7.jl:18\n  Expression: candidate([1, 0, 2, 3, 4]) ==\
    \ [0, 1, 2, 4, 3]\n   Evaluated: [5, 4, 3, 1, 2] == [0, 1, 2, 4, 3]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp27n5mkb7.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp27n5mkb7.jl:15\ntest set: Test\
    \ Failed at /tmp/tmp27n5mkb7.jl:20\n  Expression: candidate([2, 5, 77, 4, 5, 3,\
    \ 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\n   Evaluated: [3, 8,\
    \ 2, 5, 7, 4, 11, 6, 10, 1, 9] == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp27n5mkb7.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp27n5mkb7.jl:15\ntest set: Te"
  timestamp: 1659821983
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    \"\"\"\n    #using Statistics\n    #return sort(arr, by = (x -> Int(sum(digits(x,\
    \ base=2))), identity))\n    return sort(arr, by = (x -> count_ones(x), identity))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmphr2kqsqt.jl:1\nin expression starting at /tmp/tmphr2kqsqt.jl:1\n"
  stdout: ''
  timestamp: 1659821982
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n  # Sort by number of ones, then numerical value\n  return sort(arr, by =\
    \ x -> (count_ones(x), x))\nend\nsort_array([1,2,3,4,5,6,7,8,9,10])\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4])\
    \ == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6,\
    \ -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmps0z_i_cf.jl:15

    '
  stdout: "test set: Test Failed at /tmp/tmps0z_i_cf.jl:19\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmps0z_i_cf.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmps0z_i_cf.jl:17\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  timestamp: 1659821983
- exit_code: -1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    bits = [b\"$x\" for x in arr]\n    ones = [sum(Int64.(b[:end-1])) for\
    \ b in bits]\n    return sortperm(ones)[sort(arr[sortperm(ones)])]\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5,\
    \ 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4,\
    \ -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t\
    @test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpwt0_7zqf.jl:18\n  Test threw
    exception\n  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  MethodError:
    no method matching -(::Symbol, ::Int64)\n  Closest candidates are:\n    -(!Matched::T,
    ::T) where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128, UInt16, UInt32,
    UInt64, UInt8} at ~/.conda/envs/polyglot/share/julia/base/int.jl:86\n    -(!Matched::LinearAlgebra.UniformScaling,
    ::Number) at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/uniformscaling.jl:147\n    -(!Matched::Base.TwicePrecision,
    ::Number) at ~/.conda/envs/polyglot/share/julia/base/twiceprecision.jl:293\n    ...\n  Stacktrace:\n   [1]
    (::var"#2#4")(b::Base.CodeUnits{UInt8, String})\n     @ Main ./none:0\n   [2]
    iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect\n     @ ./array.jl:724
    [inlined]\n   [4] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmpwt0_7zqf.jl:10\n   [5]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [6] macro expansion\n     @ /tmp/tmpwt0_7zqf.jl:18 [inlined]\n   [7]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [8] top-level scope\n     @ /tmp/tmpwt0_7zqf.jl:17\ntest set: Error
    During Test at /tmp/tmpwt0_7zqf.jl:19\n  Test threw exception\n  Expression: candidate([-2,
    -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  MethodError: no method matching -(::Symbol,
    ::Int64)\n  Closest candidates are:\n    -(!Matched::T, ::T) where T<:Union{Int128,
    Int16, Int32, Int64, Int8, UInt128, UInt16, UInt32, UInt64, UInt8} at ~/.conda/envs/polyglot/share/julia/base/int.jl:86\n    -(!Matched::LinearAlgebra.UniformScaling,
    ::Number) at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/uniformscaling.jl:147\n    -(!Matched::Base.TwicePrecision,
    ::Number) at ~/.conda/envs/polyglot/share/julia/base/twiceprecision.jl:293\n    ...\n  Stacktrace:\n   [1]
    (::var"#2#4")(b::Base.CodeUnits{UInt8, String})\n     @ Main ./none:0\n   [2]
    iterat'
  timestamp: 1659821985
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmpwok64rkt.jl:13

    '
  stdout: "test set: Error During Test at /tmp/tmpwok64rkt.jl:16\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type Vector{Int64}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at ~/.conda/envs/polyglot/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at ~/.conda/envs/polyglot/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmpwok64rkt.jl:10\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpwok64rkt.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpwok64rkt.jl:15\ntest set:\
    \ Error During Test at /tmp/tmpwok64rkt.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type Vector{Int64}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at ~/.conda/envs/polyglot/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at ~/.conda/envs/polyglot/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmpwok64rkt.jl:10\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpwok64rkt.jl:17 [inlined]\n\
    \   ["
  timestamp: 1659821985
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    (i, x, y) = findmin(arr)\n    sorted = sort(collect(arr))\n    return\
    \ sorted\nend\nsort_array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10])\n#sort_array([0,\
    \ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]) == [0, 1, 2, 4, 8, 3, 5, 6, 9, 10, 7]\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5,\
    \ 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4,\
    \ -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t\
    @test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: BoundsError: attempt to access Tuple{Int64, Int64} at\
    \ index [3]\nStacktrace:\n [1] indexed_iterate\n   @ ./tuple.jl:89 [inlined]\n\
    \ [2] sort_array(arr::Vector{Int64})\n   @ Main /tmp/tmpsnawsw0k.jl:9\n [3] top-level\
    \ scope\n   @ /tmp/tmpsnawsw0k.jl:13\nin expression starting at /tmp/tmpsnawsw0k.jl:13\n"
  stdout: ''
  timestamp: 1659821983
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    binary_representation = []\n    for i = 1:length(arr)\n        binary_representation\
    \ = [binary_representation ; sum(digits(arr[i], base=2))]\n    end\n    return\
    \ sortperm(binary_representation)\nend\nsort_array([1,10,11,100,101,110,111])\n\
    using Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 7 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpw7rh27w_.jl:18

    '
  stdout: "test set: Test Failed at /tmp/tmpw7rh27w_.jl:21\n  Expression: candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n   Evaluated: [1, 3, 5, 2, 4] == [1, 2, 4,\
    \ 3, 5]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpw7rh27w_.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpw7rh27w_.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpw7rh27w_.jl:22\n  Expression: candidate([-2, -3, -4, -5, -6])\
    \ == [-4, -2, -6, -5, -3]\n   Evaluated: [2, 4, 5, 1, 3] == [-4, -2, -6, -5, -3]\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpw7rh27w_.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpw7rh27w_.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpw7rh27w_.jl:23\n  Expression: candidate([1, 0, 2, 3, 4]) ==\
    \ [0, 1, 2, 4, 3]\n   Evaluated: [2, 1, 3, 5, 4] == [0, 1, 2, 4, 3]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpw7rh27w_.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpw7rh27w_.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpw7rh27w_.jl:25\n  Expression: candidate([2, 5, 77, 4, 5, 3,\
    \ 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\n   Evaluated: [1, 4,\
    \ 9, 11, 2, 5, 6, 7, 10, 8, 3] == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpw7rh27w_.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpw7rh27w_.jl:20\ntest set: Te"
  timestamp: 1659821984
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n\"\"\"\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpyz80ibxm.jl:1\nin expression starting at /tmp/tmpyz80ibxm.jl:1\n"
  stdout: ''
  timestamp: 1659821983
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    # code here\nend\n                \"\"\"\nFor example:\n             \
    \   \"\"\"\nsort_array([2, 8, 5, 2, 6, 3]) = [2, 2, 3, 5, 6, 8]\n            \
    \    \"\"\"\n    because:\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\
    \t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"[2, 8, 5, 2, 6, 3]\" is not a valid function\
    \ argument name around /tmp/tmpzh0z_t4q.jl:11\nStacktrace:\n [1] top-level scope\n\
    \   @ /tmp/tmpzh0z_t4q.jl:11\nin expression starting at /tmp/tmpzh0z_t4q.jl:11\n"
  stdout: ''
  timestamp: 1659821983
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    return sort(arr, by = x -> (count_ones(x), x))\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1,\
    \ 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\
    \t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpj7hi5a1z.jl:13

    '
  stdout: "test set: Test Failed at /tmp/tmpj7hi5a1z.jl:17\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpj7hi5a1z.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpj7hi5a1z.jl:15\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  timestamp: 1659821984
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    (1:10) .+ 1 # this is a dummy operation, please implement the logic here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 8 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpc9lwoj48.jl:13

    '
  stdout: "test set: Test Failed at /tmp/tmpc9lwoj48.jl:16\n  Expression: candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n   Evaluated: [2, 3, 4, 5, 6, 7, 8, 9, 10,\
    \ 11] == [1, 2, 4, 3, 5]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpc9lwoj48.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpc9lwoj48.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpc9lwoj48.jl:17\n  Expression: candidate([-2, -3, -4, -5, -6])\
    \ == [-4, -2, -6, -5, -3]\n   Evaluated: [2, 3, 4, 5, 6, 7, 8, 9, 10, 11] == [-4,\
    \ -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpc9lwoj48.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpc9lwoj48.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpc9lwoj48.jl:18\n  Expression: candidate([1, 0, 2, 3, 4]) ==\
    \ [0, 1, 2, 4, 3]\n   Evaluated: [2, 3, 4, 5, 6, 7, 8, 9, 10, 11] == [0, 1, 2,\
    \ 4, 3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpc9lwoj48.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpc9lwoj48.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpc9lwoj48.jl:19\n  Expression: candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([])\n   Evaluated: [2, 3, 4, 5, 6, 7, 8, 9, 10, 11] == Int64[]\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpc9lwoj48.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpc9lwoj48.jl:15\ntest set: Test\
    \ Failed at "
  timestamp: 1659821984
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    sort(arr, by=x->(sum(int(i=='1') for i in string(bitstring(x))), x))\n\
    end\n\"\"\"\n\"\"\"\n                \"\"\"\nTEST CASES:\n                \"\"\
    \"\n@testset \"sorted array\" begin\n    @test sort_array([0,1,2,3,4,5,6,7,8,9])\
    \ == [0,1,2,4,8,3,5,6,7,9]\n    @test sort_array([1024,512,256,128,64,32,16,8,4,2,1])\
    \ == [1,2,4,8,16,32,64,128,256,512,1024]\n    @test sort_array([10,100,1000,10000])\
    \ == [10,100,10000,1000]\n    @test sort_array([1,10,100,1000,10000]) == [1,10,100,10000,1000]\n\
    \    @test sort_array([1,2,100,12303479849857341718340192371,3084193741082937,3084193741082938,111,200])\
    \ == [1,2,100,200,111,3084193741082937,3084193741082938,12303479849857341718340192371]\n\
    end\n\"\"\"\n\"\"\"\n                \"\"\"\nHINTS:\n                \"\"\"\n\
    - Arrays with same number of ones can be sorted using str(x)[::-1].\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4])\
    \ == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6,\
    \ -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: cannot document the following expression:\n\n\"TEST CASES:\\\
    n                \"\n\nStacktrace:\n [1] error(::String, ::String)\n   @ Base\
    \ ./error.jl:42\n [2] top-level scope\n   @ /tmp/tmpv3697o6v.jl:11\nin expression\
    \ starting at /tmp/tmpv3697o6v.jl:11\n"
  stdout: ''
  timestamp: 1659821983
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    # sort on number of ones, then decimal value \n    return sort(arr, by=[(x\
    \ -> count_ones(x)), id])\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\
    \t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmp45wtr_ei.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmp45wtr_ei.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ id not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @\
    \ Main /tmp/tmp45wtr_ei.jl:10\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp45wtr_ei.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp45wtr_ei.jl:16\ntest set:\
    \ Error During Test at /tmp/tmp45wtr_ei.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: id\
    \ not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp45wtr_ei.jl:10\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp45wtr_ei.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp45wtr_ei.jl:16\ntest set:\
    \ Error During Test at /tmp/tmp45wtr_ei.jl:19\n  Test threw exception\n  Expression:\
    \ candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3]\n  UndefVarError: id not defined\n\
    \  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmp45wtr_ei.jl:10\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp45wtr_ei.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp45wtr_ei.jl:16\ntest set:\
    \ Error During Test at /tmp/tmp45wtr_ei.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(Vector{Int64}([])) == Vector{Int64}([])\n  UndefVarError: id not defined\n\
    \  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmp45wtr_ei.jl:10\n\
    \   [2] macr"
  timestamp: 1659821985
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    sort(arr, by = x -> (count_ones(x), x))\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3,\
    \ 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1,\
    \ 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmprlv7cssm.jl:13

    '
  stdout: "test set: Test Failed at /tmp/tmprlv7cssm.jl:17\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprlv7cssm.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprlv7cssm.jl:15\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  timestamp: 1659821984
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n  k = length(arr)\n  s = sort(arr, by = x -> (count_ones(x), x))\n  return\
    \ s\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp3pxacxs3.jl:15

    '
  stdout: "test set: Test Failed at /tmp/tmp3pxacxs3.jl:19\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3pxacxs3.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3pxacxs3.jl:17\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  timestamp: 1659821985
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    # convert arr to binary strings\n    s = Dict{Int64,String}()\n    for\
    \ i in 1:length(arr)\n        s[arr[i]] = bits(arr[i])\n    end\n    # map binary\
    \ string to number of ones\n    m = Dict{String,Int64}()\n    for (k,v) in s\n\
    \        m[v] = sum(v .== '1')\n    end\n    # sort by number of ones and then\
    \ by value\n    sort!(arr, by=x->(m[bits(x)],x))\n    return arr\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4])\
    \ == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6,\
    \ -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpgq4sxp0w.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmpgq4sxp0w.jl:28\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ bits not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n   \
    \  @ Main /tmp/tmpgq4sxp0w.jl:12\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpgq4sxp0w.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpgq4sxp0w.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpgq4sxp0w.jl:29\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: bits\
    \ not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmpgq4sxp0w.jl:12\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpgq4sxp0w.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpgq4sxp0w.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpgq4sxp0w.jl:30\n  Test threw exception\n  Expression:\
    \ candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3]\n  UndefVarError: bits not defined\n\
    \  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmpgq4sxp0w.jl:12\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpgq4sxp0w.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpgq4sxp0w.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpgq4sxp0w.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5,\
    \ 7, 77]\n  UndefVarError: bits not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n\
    \    "
  timestamp: 1659821986
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    sort(arr, by=x->[1 - sum(digits(x, 2)), x])\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1,\
    \ 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\
    \t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpyoe1i6cy.jl:13

    '
  stdout: "test set: Error During Test at /tmp/tmpyoe1i6cy.jl:16\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  MethodError: no\
    \ method matching digits(::Int64, ::Int64)\n  Closest candidates are:\n    digits(::Integer;\
    \ base, pad) at ~/.conda/envs/polyglot/share/julia/base/intfuncs.jl:854\n    digits(!Matched::Type{<:Integer},\
    \ ::Integer; base, pad) at ~/.conda/envs/polyglot/share/julia/base/intfuncs.jl:857\n\
    \  Stacktrace:\n    [1] (::var\"#1#2\")(x::Int64)\n      @ Main /tmp/tmpyoe1i6cy.jl:9\n\
    \    [2] lt(o::Base.Order.By{var\"#1#2\", Base.Order.ForwardOrdering}, a::Int64,\
    \ b::Int64)\n      @ Base.Order ./ordering.jl:111\n    [3] sort!\n      @ ./sort.jl:507\
    \ [inlined]\n    [4] sort!\n      @ ./sort.jl:574 [inlined]\n    [5] sort!\n \
    \     @ ./sort.jl:664 [inlined]\n    [6] #sort!#8\n      @ ./sort.jl:725 [inlined]\n\
    \    [7] sort(v::Vector{Int64}; kws::Base.Pairs{Symbol, var\"#1#2\", Tuple{Symbol},\
    \ NamedTuple{(:by,), Tuple{var\"#1#2\"}}})\n      @ Base.Sort ./sort.jl:772\n\
    \    [8] sort_array(arr::Vector{Int64})\n      @ Main /tmp/tmpyoe1i6cy.jl:9\n\
    \    [9] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpyoe1i6cy.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpyoe1i6cy.jl:15\ntest set:\
    \ Error During Test at /tmp/tmpyoe1i6cy.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  MethodError: no method\
    \ matching digits(::Int64, ::Int64)\n  Closest candidates are:\n    digits(::Integer;\
    \ base, pad) at ~/.conda/envs/polyglot/share/julia/base/intfuncs.jl:854\n    digits(!Matched::Type{<:Integer},\
    \ ::Integer; base, pad) at ~/.conda/envs/polyglot/share/julia/base/intfuncs.jl:857\n\
    \  Stacktrace:\n    [1] (::var\"#1#2\")(x::Int64)\n      @ Main /tmp/tmpyoe1i6cy.jl:9\n\
    \    [2] lt(o::Base.Order.By{var\"#1#2\", Base.Order.ForwardOrdering}, a::Int64,\
    \ b::Int64)\n      @ Base.Order ./ordering.jl:111\n    [3"
  timestamp: 1659821986
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    \n    # let's first obtain a list of tuples with the binary representation\
    \ and its\n    # length for each number in the array.\n    bin_list = map(x ->\
    \ (x, length(Int(x))), arr)\n    \n    # now let's sort the list based on the\
    \ length of the binary representation of\n    # the number\n    bin_list = sort(bin_list,\
    \ by = x -> x[2])\n    \n    # now, let's obtain a list of tuples with the binary\
    \ representation and its\n    # decimal value for each number in the array.\n\
    \    dec_list = map(x -> (x, bin2dec(x)), arr)\n    \n    # now, let's sort this\
    \ list based on the value of the binary representation of\n    # the number\n\
    \    dec_list = sort(dec_list, by = x -> x[2])\n    \n    # now let's loop through\
    \ the dec_list and replace its values by the values from\n    # the sorted binary\
    \ list\n    for i in 1:length(dec_list)\n        dec_list[i][1] = bin_list[i][1]\n\
    \    end\n    \n    # now, let's obtain a list with the decimal values from the\
    \ dec_list\n    arr = map(x -> x[1], dec_list)\n    \n    return arr\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5,\
    \ 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4,\
    \ -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t\
    @test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpvjmkyq0p.jl:39

    '
  stdout: "test set: Error During Test at /tmp/tmpvjmkyq0p.jl:42\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ bin2dec not defined\n  Stacktrace:\n    [1] (::var\"#3#8\")(x::Int64)\n    \
    \  @ Main /tmp/tmpvjmkyq0p.jl:20\n    [2] iterate\n      @ ./generator.jl:47 [inlined]\n\
    \    [3] _collect(c::Vector{Int64}, itr::Base.Generator{Vector{Int64}, var\"#3#8\"\
    }, #unused#::Base.EltypeUnknown, isz::Base.HasShape{1})\n      @ Base ./array.jl:744\n\
    \    [4] collect_similar\n      @ ./array.jl:653 [inlined]\n    [5] map\n    \
    \  @ ./abstractarray.jl:2867 [inlined]\n    [6] sort_array(arr::Vector{Int64})\n\
    \      @ Main /tmp/tmpvjmkyq0p.jl:20\n    [7] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [8] macro expansion\n      @ /tmp/tmpvjmkyq0p.jl:42 [inlined]\n\
    \    [9] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [10] top-level scope\n      @ /tmp/tmpvjmkyq0p.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpvjmkyq0p.jl:43\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: bin2dec\
    \ not defined\n  Stacktrace:\n    [1] (::var\"#3#8\")(x::Int64)\n      @ Main\
    \ /tmp/tmpvjmkyq0p.jl:20\n    [2] iterate\n      @ ./generator.jl:47 [inlined]\n\
    \    [3] _collect(c::Vector{Int64}, itr::Base.Generator{Vector{Int64}, var\"#3#8\"\
    }, #unused#::Base.EltypeUnknown, isz::Base.HasShape{1})\n      @ Base ./array.jl:744\n\
    \    [4] collect_similar\n      @ ./array.jl:653 [inlined]\n    [5] map\n    \
    \  @ ./abstractarray.jl:2867 [inlined]\n    [6] sort_array(arr::Vector{Int64})\n\
    \      @ Main /tmp/tmpvjmkyq0p.jl:20\n    [7] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [8] macro expansion\n      @ /tmp/tmpvjmkyq0p.jl:43 [inlined]\n\
    \    [9] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [10] top-level scope\n      @ /tmp/tmpvjmkyq0p.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpvjm"
  timestamp: 1659821986
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    #your code here\nend\n\"\"\"\n    Example:\n    sort_array([2, 3, 8, 5,\
    \ 6, 7, 1]) == [1, 2, 3, 5, 6, 7, 8]\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpjvn0pakb.jl:11\nin expression starting at\
    \ /tmp/tmpjvn0pakb.jl:11\n"
  stdout: ''
  timestamp: 1659821984
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    return zero_one_list_sort(arr)\nend\nusing Test\n\n@testset begin\n\n\
    candidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\
    \t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1,\
    \ 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmpti83ga03.jl:13

    '
  stdout: "test set: Error During Test at /tmp/tmpti83ga03.jl:16\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ zero_one_list_sort not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmpti83ga03.jl:9\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpti83ga03.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpti83ga03.jl:15\ntest set:\
    \ Error During Test at /tmp/tmpti83ga03.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: zero_one_list_sort\
    \ not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmpti83ga03.jl:9\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpti83ga03.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpti83ga03.jl:15\ntest set:\
    \ Error During Test at /tmp/tmpti83ga03.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3]\n  UndefVarError: zero_one_list_sort\
    \ not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmpti83ga03.jl:9\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpti83ga03.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpti83ga03.jl:15\ntest set:\
    \ Error During Test at /tmp/tmpti83ga03.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(Vector{Int64}([])) == Vector{Int64}([])\n  UndefVarError: zero_one_list_sort\
    \ not defined\n  Stacktrace:\n   [1] sort_array(arr::"
  timestamp: 1659821986
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    # your code here\nend\n                \"\"\"\n    You are guaranteed\
    \ that the input array is not empty and contains at least \n    1 element.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5,\
    \ 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4,\
    \ -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t\
    @test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpfeb8s4dg.jl:11\nin expression starting at\
    \ /tmp/tmpfeb8s4dg.jl:11\n"
  stdout: ''
  timestamp: 1659821984
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    sort([x for x in arr], by=x->(count_ones(x), x))\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4])\
    \ == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6,\
    \ -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpis300v8u.jl:13

    '
  stdout: "test set: Test Failed at /tmp/tmpis300v8u.jl:17\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpis300v8u.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpis300v8u.jl:15\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  timestamp: 1659821986
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n   # your code here\nend\n            \"\"\"\n    Like in the previous Kata,\
    \ if there are some more efficient methods, please\n    let me know.\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4])\
    \ == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6,\
    \ -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0mw91v10.jl:11\nin expression starting at\
    \ /tmp/tmp0mw91v10.jl:11\n"
  stdout: ''
  timestamp: 1659821985
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    return sort(arr, by = [ones, identity])\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3,\
    \ 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1,\
    \ 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmp75i7sava.jl:13

    '
  stdout: "test set: Error During Test at /tmp/tmp75i7sava.jl:16\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  MethodError: objects\
    \ of type Vector{Function} are not callable\n  Use square brackets [] for indexing\
    \ an Array.\n  Stacktrace:\n    [1] lt(o::Base.Order.By{Vector{Function}, Base.Order.ForwardOrdering},\
    \ a::Int64, b::Int64)\n      @ Base.Order ./ordering.jl:111\n    [2] sort!\n \
    \     @ ./sort.jl:507 [inlined]\n    [3] sort!\n      @ ./sort.jl:574 [inlined]\n\
    \    [4] sort!\n      @ ./sort.jl:664 [inlined]\n    [5] #sort!#8\n      @ ./sort.jl:725\
    \ [inlined]\n    [6] sort(v::Vector{Int64}; kws::Base.Pairs{Symbol, Vector{Function},\
    \ Tuple{Symbol}, NamedTuple{(:by,), Tuple{Vector{Function}}}})\n      @ Base.Sort\
    \ ./sort.jl:772\n    [7] sort_array(arr::Vector{Int64})\n      @ Main /tmp/tmp75i7sava.jl:9\n\
    \    [8] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [9] macro expansion\n      @ /tmp/tmp75i7sava.jl:16 [inlined]\n\
    \   [10] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [11] top-level scope\n      @ /tmp/tmp75i7sava.jl:15\ntest set:\
    \ Error During Test at /tmp/tmp75i7sava.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  MethodError: objects\
    \ of type Vector{Function} are not callable\n  Use square brackets [] for indexing\
    \ an Array.\n  Stacktrace:\n    [1] lt(o::Base.Order.By{Vector{Function}, Base.Order.ForwardOrdering},\
    \ a::Int64, b::Int64)\n      @ Base.Order ./ordering.jl:111\n    [2] sort!\n \
    \     @ ./sort.jl:507 [inlined]\n    [3] sort!\n      @ ./sort.jl:574 [inlined]\n\
    \    [4] sort!\n      @ ./sort.jl:664 [inlined]\n    [5] #sort!#8\n      @ ./sort.jl:725\
    \ [inlined]\n    [6] sort(v::Vector{Int64}; kws::Base.Pairs{Symbol, Vector{Function},\
    \ Tuple{Symbol}, NamedTuple{(:by,), Tuple{Vector{Function}}}})\n      @ Base.Sort\
    \ ./sort.jl:772\n    [7] sort_array(arr::Vector{Int64})\n      @ Main /tmp/tmp75i7sava.jl:9\n\
    \    [8] macro expansion\n      @ ~/.conda/envs/polyg"
  timestamp: 1659821988
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    # Write your code here\n    b = [bin(x) for x in arr]\n    sort(arr, by\
    \ = x -> (count(x -> x == '1', b[x]), arr[x]))\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3,\
    \ 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1,\
    \ 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmp948h_6tl.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmp948h_6tl.jl:18\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ bin not defined\n  Stacktrace:\n   [1] (::var\"#1#4\")(x::Int64)\n     @ Main\
    \ ./none:0\n   [2] iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{Vector{Int64},\
    \ var\"#1#4\"})\n     @ Base ./array.jl:724\n   [4] sort_array(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmp948h_6tl.jl:10\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmp948h_6tl.jl:18 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmp948h_6tl.jl:17\ntest set:\
    \ Error During Test at /tmp/tmp948h_6tl.jl:19\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: bin\
    \ not defined\n  Stacktrace:\n   [1] (::var\"#1#4\")(x::Int64)\n     @ Main ./none:0\n\
    \   [2] iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{Vector{Int64},\
    \ var\"#1#4\"})\n     @ Base ./array.jl:724\n   [4] sort_array(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmp948h_6tl.jl:10\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmp948h_6tl.jl:19 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmp948h_6tl.jl:17\ntest set:\
    \ Error During Test at /tmp/tmp948h_6tl.jl:20\n  Test threw exception\n  Expression:\
    \ candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3]\n  UndefVarError: bin not defined\n\
    \  Stacktrace:\n   [1] (::var\"#1#4\")(x::Int64)\n     @ Main ./none:0\n   [2]\
    \ iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{Vector{Int64},\
    \ var\"#1#4\"})\n     @ Base ./array.jl:724\n   [4] sort_array(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmp948h_6tl.jl:10\n   [5] macro expansion\n     "
  timestamp: 1659821987
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    \"\"\"\n    This is the main function for sorting.\n    It sorts the input\
    \ array by 2 subfunctions.\n    \"\"\"\n    # Sort by count of one in the binary\
    \ representation of the number\n    binarr = sort(arr, by=nones)\n    # Sort by\
    \ the number itself\n    # The sort function is stable, so elements with equal\
    \ values of nones\n    #   will be in the same order as before\n    binarr = sort(binarr)\n\
    \    return binarr\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\
    \t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmpeuu1voia.jl:23

    '
  stdout: "test set: Error During Test at /tmp/tmpeuu1voia.jl:26\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ nones not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n  \
    \   @ Main /tmp/tmpeuu1voia.jl:14\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpeuu1voia.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpeuu1voia.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpeuu1voia.jl:27\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: nones\
    \ not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmpeuu1voia.jl:14\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpeuu1voia.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpeuu1voia.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpeuu1voia.jl:28\n  Test threw exception\n  Expression:\
    \ candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3]\n  UndefVarError: nones not defined\n\
    \  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmpeuu1voia.jl:14\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpeuu1voia.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpeuu1voia.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpeuu1voia.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(Vector{Int64}([])) == Vector{Int64}([])\n  UndefVarError: nones not\
    \ defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmpeuu1voia.jl:14"
  timestamp: 1659821987
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    return sort(arr, by = x -> (num_ones(x), x))\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1,\
    \ 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\
    \t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpya1mjvlv.jl:13

    '
  stdout: "test set: Error During Test at /tmp/tmpya1mjvlv.jl:16\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ num_ones not defined\n  Stacktrace:\n    [1] (::var\"#1#2\")(x::Int64)\n   \
    \   @ Main /tmp/tmpya1mjvlv.jl:9\n    [2] lt(o::Base.Order.By{var\"#1#2\", Base.Order.ForwardOrdering},\
    \ a::Int64, b::Int64)\n      @ Base.Order ./ordering.jl:111\n    [3] sort!(v::Vector{Int64},\
    \ lo::Int64, hi::Int64, #unused#::Base.Sort.InsertionSortAlg, o::Base.Order.By{var\"\
    #1#2\", Base.Order.ForwardOrdering})\n      @ Base.Sort ./sort.jl:507\n    [4]\
    \ sort!(v::Vector{Int64}, lo::Int64, hi::Int64, a::Base.Sort.QuickSortAlg, o::Base.Order.By{var\"\
    #1#2\", Base.Order.ForwardOrdering})\n      @ Base.Sort ./sort.jl:574\n    [5]\
    \ sort!\n      @ ./sort.jl:664 [inlined]\n    [6] #sort!#8\n      @ ./sort.jl:725\
    \ [inlined]\n    [7] #sort#9\n      @ ./sort.jl:772 [inlined]\n    [8] sort_array(arr::Vector{Int64})\n\
    \      @ Main /tmp/tmpya1mjvlv.jl:9\n    [9] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpya1mjvlv.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpya1mjvlv.jl:15\ntest set:\
    \ Error During Test at /tmp/tmpya1mjvlv.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: num_ones\
    \ not defined\n  Stacktrace:\n    [1] (::var\"#1#2\")(x::Int64)\n      @ Main\
    \ /tmp/tmpya1mjvlv.jl:9\n    [2] lt(o::Base.Order.By{var\"#1#2\", Base.Order.ForwardOrdering},\
    \ a::Int64, b::Int64)\n      @ Base.Order ./ordering.jl:111\n    [3] sort!(v::Vector{Int64},\
    \ lo::Int64, hi::Int64, #unused#::Base.Sort.InsertionSortAlg, o::Base.Order.By{var\"\
    #1#2\", Base.Order.ForwardOrdering})\n      @ Base.Sort ./sort.jl:507\n    [4]\
    \ sort!(v::Vector{Int64}, lo::Int64, hi::Int64, a::Base.Sort.QuickSortAlg, o::Base.Order.By{var\"\
    #1#2\", Base.Order.ForwardOrdering})\n      @ Base.Sort ./sort.jl:574\n    [5]\
    \ sort!\n  "
  timestamp: 1659821987
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    # This is the main method for this specific problem.\n    # \n    # IMPORTANT:\n\
    \    # this is a generic method that can be reused for other problems\n    # we\
    \ are sorting a Vector{Int64} by the number of ones in their binary representation\n\
    \    # \n    # the algorithm is as follows:\n    # 1. we convert each Int64 in\
    \ the array to binary, then we sum the number of ones\n    # 2. we create a 'dictionary'\
    \ (a Dict{Int64, Vector{Int64}} that maps the number of ones -> a Vector{Int64}\
    \ that contains the decimal Int64\n    # 3. we sort the keys of the dictionary\
    \ and loop over them, with the current key we loop over the Vector{Int64} that\
    \ is mapped\n    #    and add the Int64s to the result\n    # 4. return the result\
    \ array\n    \n    # create a dictionary to map the number of ones in binary ->\
    \ a Vector{Int64}\n    # this will have the format:\n    # key -> the number of\
    \ ones in binary\n    # value -> a Vector{Int64} with decimal numbers that have\
    \ that number of ones in binary\n    onesDict = Dict{Int64, Vector{Int64}}()\n\
    \    \n    # loop over the input array, for each Int64 we go through the following\
    \ steps:\n    # 1. convert to binary using the 'digits' function\n    # 2. count\
    \ the number of ones using 'count' and '=='\n    # 3. add the Int64 to the correct\
    \ Vector in the dictionary\n    for i in arr\n        numOnes = count(digits(i,\
    \ base=2) .== 1)\n        if numOnes in keys(onesDict)\n            push!(onesDict[numOnes],\
    \ i)\n        else\n            onesDict[numOnes] = [i]\n        end\n    end\n\
    \    \n    # sort the keys of the dictionary\n    keysArr = sort(collect(keys(onesDict)))\n\
    \    \n    # create the result array\n    result = Vector{Int64}()\n    \n   \
    \ # loop over the sorted array of keys, for each key we loop over the Vector{Int64}\n\
    \    # and push all the Int64s to the result array\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3,\
    \ 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1,\
    \ 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp1tvria3u.jl:8\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp1tvria3u.jl:1\n\
    in expression starting at /tmp/tmp1tvria3u.jl:1\n"
  stdout: ''
  timestamp: 1659821985
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    new_sorted_arr = zeros(Int64, length(arr))\n    for i = 1:length(arr)\n\
    \        new_sorted_arr[i] = countones(arr[i])\n    end\n    return new_sorted_arr\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmph9drk5cy.jl:17

    '
  stdout: "test set: Error During Test at /tmp/tmph9drk5cy.jl:20\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ countones not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmph9drk5cy.jl:11\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph9drk5cy.jl:20 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph9drk5cy.jl:19\ntest set:\
    \ Error During Test at /tmp/tmph9drk5cy.jl:21\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: countones\
    \ not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmph9drk5cy.jl:11\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph9drk5cy.jl:21 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph9drk5cy.jl:19\ntest set:\
    \ Error During Test at /tmp/tmph9drk5cy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3]\n  UndefVarError: countones not\
    \ defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmph9drk5cy.jl:11\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph9drk5cy.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph9drk5cy.jl:19\ntest set:\
    \ Error During Test at /tmp/tmph9drk5cy.jl:24\n  Test threw exception\n  Expression:\
    \ candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5,\
    \ 7, 77]\n  UndefVarError: countones not defined\n  Stacktrace:\n   [1] sort_array(arr:"
  timestamp: 1659821988
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n\nend\n                \"\"\"\n    Example:\n    [3, 8, 4, 15] will be sorted\
    \ as [3, 4, 8, 15] since 3 has only one 1 in its binary representation,\n    4\
    \ has two 1s, 8 has three 1s and 15 has four 1s.\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3,\
    \ 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1,\
    \ 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpzx_j_o4l.jl:11\nin expression starting at\
    \ /tmp/tmpzx_j_o4l.jl:11\n"
  stdout: ''
  timestamp: 1659821986
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    sorted(arr, by=x->(count_ones(x), x))\nend\n    \n    \nusing Test\n\n\
    @testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4])\
    \ == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6,\
    \ -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmpy8m35rgs.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpy8m35rgs.jl:18\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ sorted not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n \
    \    @ Main /tmp/tmpy8m35rgs.jl:9\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpy8m35rgs.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpy8m35rgs.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpy8m35rgs.jl:19\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: sorted\
    \ not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmpy8m35rgs.jl:9\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpy8m35rgs.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpy8m35rgs.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpy8m35rgs.jl:20\n  Test threw exception\n  Expression:\
    \ candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3]\n  UndefVarError: sorted not defined\n\
    \  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmpy8m35rgs.jl:9\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpy8m35rgs.jl:20 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpy8m35rgs.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpy8m35rgs.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(Vector{Int64}([])) == Vector{Int64}([])\n  UndefVarError: sorted not\
    \ defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmpy8m35rgs.jl:9"
  timestamp: 1659821988
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    #your code here\nend\n    \"\"\"\n    so, the input should be a vector\
    \ of integers, sorted in place according to\n    the number of ones in the binary\
    \ representation of each number.\n    The output should be the sorted vector.\n\
    using Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpu_3lcy_i.jl:11\nin expression starting at\
    \ /tmp/tmpu_3lcy_i.jl:11\n"
  stdout: ''
  timestamp: 1659821986
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    v = sort(arr, by = x -> count_ones(x))\n    sort(v, by = x -> x)\nend\n\
    using Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpmwlmswcv.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmpmwlmswcv.jl:17\n  Expression: candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n   Evaluated: [1, 2, 3, 4, 5] == [1, 2, 4,\
    \ 3, 5]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmwlmswcv.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmwlmswcv.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpmwlmswcv.jl:18\n  Expression: candidate([-2, -3, -4, -5, -6])\
    \ == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -5, -4, -3, -2] == [-4, -2, -6,\
    \ -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmwlmswcv.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmwlmswcv.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpmwlmswcv.jl:19\n  Expression: candidate([1, 0, 2, 3, 4]) ==\
    \ [0, 1, 2, 4, 3]\n   Evaluated: [0, 1, 2, 3, 4] == [0, 1, 2, 4, 3]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmwlmswcv.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmwlmswcv.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpmwlmswcv.jl:21\n  Expression: candidate([2, 5, 77, 4, 5, 3,\
    \ 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\n   Evaluated: [2, 2,\
    \ 3, 3, 4, 4, 5, 5, 5, 7, 77] == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmwlmswcv.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmwlmswcv.jl:16\ntest set"
  timestamp: 1659821987
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    # do something\nend\n\"\"\"\n    [1, 2, 3, 4, 5, 6, 7, 8, 9, 10] => [1,\
    \ 2, 4, 8, 3, 5, 6, 7, 9, 10]\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\
    \t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp49zzf8v0.jl:11\nin expression starting at\
    \ /tmp/tmp49zzf8v0.jl:11\n"
  stdout: ''
  timestamp: 1659821986
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    # Enter code here.\n    return sort(arr, by = x -> (count_ones(x), x))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpu3d8qirx.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmpu3d8qirx.jl:18\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpu3d8qirx.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpu3d8qirx.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  timestamp: 1659821987
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n  return sort(arr, by=x->(count_ones(x), x))\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1,\
    \ 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\
    \t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp7j9yme71.jl:13

    '
  stdout: "test set: Test Failed at /tmp/tmp7j9yme71.jl:17\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7j9yme71.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7j9yme71.jl:15\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  timestamp: 1659821987
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    # [<decimal> <\"ones\">]\n    ones = [count_ones(x) for x in arr]\n  \
    \  # sort based on number of ones\n    idx = sortperm(ones)\n    # extract the\
    \ sorting orders and apply on original array\n    return arr[idx]\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5,\
    \ 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4,\
    \ -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t\
    @test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp2o6xcx0v.jl:18

    '
  stdout: "test set: Test Failed at /tmp/tmp2o6xcx0v.jl:21\n  Expression: candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n   Evaluated: [1, 2, 4, 5, 3] == [1, 2, 4,\
    \ 3, 5]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2o6xcx0v.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2o6xcx0v.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp2o6xcx0v.jl:22\n  Expression: candidate([-2, -3, -4, -5, -6])\
    \ == [-4, -2, -6, -5, -3]\n   Evaluated: [-4, -6, -2, -3, -5] == [-4, -2, -6,\
    \ -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2o6xcx0v.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2o6xcx0v.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp2o6xcx0v.jl:25\n  Expression: candidate([2, 5, 77, 4, 5, 3,\
    \ 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\n   Evaluated: [2, 4,\
    \ 2, 4, 5, 5, 3, 5, 3, 7, 77] == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2o6xcx0v.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2o6xcx0v.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp2o6xcx0v.jl:26\n  Expression: candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44]\n   Evaluated: [32, 3, 6, 12, 5, 44] == [32, 3,\
    \ 5, 6, 12, 44]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2o6xcx0v.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tm"
  timestamp: 1659821988
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    \"\"\"\n    ...\n    \"\"\"\n    # your code\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1,\
    \ 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\
    \t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmp5sfg7f6v.jl:16

    '
  stdout: "test set: Error During Test at /tmp/tmp5sfg7f6v.jl:19\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  MethodError: Cannot\
    \ `convert` an object of type String to an object of type Vector{Int64}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at ~/.conda/envs/polyglot/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at ~/.conda/envs/polyglot/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmp5sfg7f6v.jl:9\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp5sfg7f6v.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp5sfg7f6v.jl:18\ntest set:\
    \ Error During Test at /tmp/tmp5sfg7f6v.jl:20\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  MethodError: Cannot\
    \ `convert` an object of type String to an object of type Vector{Int64}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at ~/.conda/envs/polyglot/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at ~/.conda/envs/polyglot/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmp5sfg7f6v.jl:9\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp5sfg7f6v.jl:20 [inlined]\n\
    \   [4] m"
  timestamp: 1659821990
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    binary = [ [count_ones(i), i] for i in arr ]\n    sort!(binary, rev=true)\n\
    \    return [binary[i][2] for i in 1:length(binary)]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1,\
    \ 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\
    \t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 7 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpk276zhbw.jl:15

    '
  stdout: "test set: Test Failed at /tmp/tmpk276zhbw.jl:18\n  Expression: candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n   Evaluated: [5, 3, 4, 2, 1] == [1, 2, 4,\
    \ 3, 5]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpk276zhbw.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpk276zhbw.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpk276zhbw.jl:19\n  Expression: candidate([-2, -3, -4, -5, -6])\
    \ == [-4, -2, -6, -5, -3]\n   Evaluated: [-2, -3, -5, -4, -6] == [-4, -2, -6,\
    \ -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpk276zhbw.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpk276zhbw.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpk276zhbw.jl:20\n  Expression: candidate([1, 0, 2, 3, 4]) ==\
    \ [0, 1, 2, 4, 3]\n   Evaluated: [3, 4, 2, 1, 0] == [0, 1, 2, 4, 3]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpk276zhbw.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpk276zhbw.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpk276zhbw.jl:22\n  Expression: candidate([2, 5, 77, 4, 5, 3,\
    \ 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\n   Evaluated: [77, 7,\
    \ 5, 5, 5, 3, 3, 4, 4, 2, 2] == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpk276zhbw.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpk276zhbw.jl:17\ntest set"
  timestamp: 1659821988
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    out = copy(arr)\n    let sort!(x,y) = \n        if bits(x)[2] > bits(y)[2]\n\
    \            return false\n        elseif bits(x)[2] < bits(y)[2]\n          \
    \  return true\n        else\n            return x > y\n        end\n    end\n\
    \    sort!(out, by=sort!)\n    return out\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3,\
    \ 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1,\
    \ 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmp4v75mrq6.jl:24

    '
  stdout: "test set: Error During Test at /tmp/tmp4v75mrq6.jl:27\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  MethodError: no\
    \ method matching sort!(::Int64)\n  Closest candidates are:\n    sort!(!Matched::AbstractUnitRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1305\n    sort!(!Matched::AbstractVector{<:Union{Missing,\
    \ Float32, Float64}}, !Matched::Base.Sort.Algorithm, !Matched::Base.Order.DirectOrdering)\
    \ at ~/.conda/envs/polyglot/share/julia/base/sort.jl:1234\n    sort!(!Matched::Vector{Int64},\
    \ !Matched::Base.Sort.Algorithm, !Matched::Base.Order.Perm{<:Base.Order.DirectOrdering,\
    \ <:Vector{<:Union{Missing, Float32, Float64}}}) at ~/.conda/envs/polyglot/share/julia/base/sort.jl:1236\n\
    \    ...\n  Stacktrace:\n    [1] lt(o::Base.Order.By{typeof(sort!), Base.Order.ForwardOrdering},\
    \ a::Int64, b::Int64)\n      @ Base.Order ./ordering.jl:111\n    [2] sort!\n \
    \     @ ./sort.jl:507 [inlined]\n    [3] sort!\n      @ ./sort.jl:574 [inlined]\n\
    \    [4] sort!\n      @ ./sort.jl:664 [inlined]\n    [5] #sort!#8\n      @ ./sort.jl:725\
    \ [inlined]\n    [6] sort_array(arr::Vector{Int64})\n      @ Main /tmp/tmp4v75mrq6.jl:19\n\
    \    [7] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [8] macro expansion\n      @ /tmp/tmp4v75mrq6.jl:27 [inlined]\n\
    \    [9] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [10] top-level scope\n      @ /tmp/tmp4v75mrq6.jl:26\ntest set:\
    \ Error During Test at /tmp/tmp4v75mrq6.jl:28\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  MethodError: no method\
    \ matching sort!(::Int64)\n  Closest candidates are:\n    sort!(!Matched::AbstractUnitRange)\
    \ at ~/.conda/envs/polyglot/share/julia/base/range.jl:1305\n    sort!(!Matched::AbstractVector{<:Union{Missing,\
    \ Float32, Float64}}, !Matched::Base.Sort.Algorithm, !Matched::Base.Order.DirectOrdering)\
    \ at ~/.conda/envs/polyglot/share/julia/base/sort.jl:1234\n    sort!(!Matched::Vector{Int64},\
    \ !Matched::Base.So"
  timestamp: 1659821990
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    #Your code here\nend\n                \"\"\"\n    \"\"\"\n    b = [Int(bin(x)[2:])\
    \ for x in arr]\n    c = [count(x, \"1\") for x in b]\n    d = sortperm(c, by=x->x[1])\n\
    \    e = [b[x] for x in d]\n    g = [Int(x,2) for x in e]\n    return g\nend\n\
    using Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: missing last argument in \"2:\" range expression\
    \ \nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp0miztufe.jl:13\nin expression\
    \ starting at /tmp/tmp0miztufe.jl:13\n"
  stdout: ''
  timestamp: 1659821987
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    \"\"\"\n    insert function for sorting your array\n    \"\"\"\n    return\
    \ sort(arr, lt=(x,y) -> \n        length(matches(r\"1\", string(x, base=2))) <\
    \ length(matches(r\"1\", string(y, base=2))) ? true :\n        length(matches(r\"\
    1\", string(x, base=2))) > length(matches(r\"1\", string(y, base=2))) ? false\
    \ :\n        x < y\n    )\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\
    \t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmp_crnt6_q.jl:20

    '
  stdout: "test set: Error During Test at /tmp/tmp_crnt6_q.jl:23\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ matches not defined\n  Stacktrace:\n    [1] (::var\"#1#2\")(x::Int64, y::Int64)\n\
    \      @ Main /tmp/tmp_crnt6_q.jl:12\n    [2] #1\n      @ ./ordering.jl:125 [inlined]\n\
    \    [3] lt\n      @ ./ordering.jl:112 [inlined]\n    [4] sort!(v::Vector{Int64},\
    \ lo::Int64, hi::Int64, #unused#::Base.Sort.InsertionSortAlg, o::Base.Order.Lt{Base.Order.var\"\
    #1#3\"{var\"#1#2\", typeof(identity)}})\n      @ Base.Sort ./sort.jl:507\n   \
    \ [5] sort!(v::Vector{Int64}, lo::Int64, hi::Int64, a::Base.Sort.QuickSortAlg,\
    \ o::Base.Order.Lt{Base.Order.var\"#1#3\"{var\"#1#2\", typeof(identity)}})\n \
    \     @ Base.Sort ./sort.jl:574\n    [6] sort!\n      @ ./sort.jl:664 [inlined]\n\
    \    [7] #sort!#8\n      @ ./sort.jl:725 [inlined]\n    [8] #sort#9\n      @ ./sort.jl:772\
    \ [inlined]\n    [9] sort_array(arr::Vector{Int64})\n      @ Main /tmp/tmp_crnt6_q.jl:12\n\
    \   [10] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [11] macro expansion\n      @ /tmp/tmp_crnt6_q.jl:23 [inlined]\n\
    \   [12] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [13] top-level scope\n      @ /tmp/tmp_crnt6_q.jl:22\ntest set:\
    \ Error During Test at /tmp/tmp_crnt6_q.jl:24\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: matches\
    \ not defined\n  Stacktrace:\n    [1] (::var\"#1#2\")(x::Int64, y::Int64)\n  \
    \    @ Main /tmp/tmp_crnt6_q.jl:12\n    [2] #1\n      @ ./ordering.jl:125 [inlined]\n\
    \    [3] lt\n      @ ./ordering.jl:112 [inlined]\n    [4] sort!(v::Vector{Int64},\
    \ lo::Int64, hi::Int64, #unused#::Base.Sort.InsertionSortAlg, o::Base.Order.Lt{Base.Order.var\"\
    #1#3\"{var\"#1#2\", typeof(identity)}})\n      @ Base.Sort ./sort.jl:507\n   \
    \ [5] sort!(v::Vector{Int64}, lo::Int64, hi::Int64, a::Base.Sort.QuickSortAlg,\
    \ o::Base.Order.Lt{Base.Order.var\"#1#3\"{var\"#1#2\", typeof(identity)}})\n \
    \     @ Base.Sort ./sort.jl:574\n    [6] s"
  timestamp: 1659821989
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    return sort(arr, by = x -> (sum(digits(x, 2)), x))\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4])\
    \ == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6,\
    \ -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpgf0effti.jl:13

    '
  stdout: "test set: Error During Test at /tmp/tmpgf0effti.jl:16\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  MethodError: no\
    \ method matching digits(::Int64, ::Int64)\n  Closest candidates are:\n    digits(::Integer;\
    \ base, pad) at ~/.conda/envs/polyglot/share/julia/base/intfuncs.jl:854\n    digits(!Matched::Type{<:Integer},\
    \ ::Integer; base, pad) at ~/.conda/envs/polyglot/share/julia/base/intfuncs.jl:857\n\
    \  Stacktrace:\n    [1] (::var\"#1#2\")(x::Int64)\n      @ Main /tmp/tmpgf0effti.jl:9\n\
    \    [2] lt(o::Base.Order.By{var\"#1#2\", Base.Order.ForwardOrdering}, a::Int64,\
    \ b::Int64)\n      @ Base.Order ./ordering.jl:111\n    [3] sort!\n      @ ./sort.jl:507\
    \ [inlined]\n    [4] sort!\n      @ ./sort.jl:574 [inlined]\n    [5] sort!\n \
    \     @ ./sort.jl:664 [inlined]\n    [6] #sort!#8\n      @ ./sort.jl:725 [inlined]\n\
    \    [7] sort(v::Vector{Int64}; kws::Base.Pairs{Symbol, var\"#1#2\", Tuple{Symbol},\
    \ NamedTuple{(:by,), Tuple{var\"#1#2\"}}})\n      @ Base.Sort ./sort.jl:772\n\
    \    [8] sort_array(arr::Vector{Int64})\n      @ Main /tmp/tmpgf0effti.jl:9\n\
    \    [9] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpgf0effti.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpgf0effti.jl:15\ntest set:\
    \ Error During Test at /tmp/tmpgf0effti.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  MethodError: no method\
    \ matching digits(::Int64, ::Int64)\n  Closest candidates are:\n    digits(::Integer;\
    \ base, pad) at ~/.conda/envs/polyglot/share/julia/base/intfuncs.jl:854\n    digits(!Matched::Type{<:Integer},\
    \ ::Integer; base, pad) at ~/.conda/envs/polyglot/share/julia/base/intfuncs.jl:857\n\
    \  Stacktrace:\n    [1] (::var\"#1#2\")(x::Int64)\n      @ Main /tmp/tmpgf0effti.jl:9\n\
    \    [2] lt(o::Base.Order.By{var\"#1#2\", Base.Order.ForwardOrdering}, a::Int64,\
    \ b::Int64)\n      @ Base.Order ./ordering.jl:111\n    [3"
  timestamp: 1659821990
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    # sort array according to number of ones\n    # and for similar number\
    \ of ones, sort based on decimal value.\n    # NOTE: We *must* sort `arr` from\
    \ inside the function.\n    # NOTE: We *can't* create a global function and use\
    \ sort.\n    # NOTE: We *must* sort `arr` in place, inside the function.\n   \
    \ # NOTE: We *can't* return a new Array, only the argument!\n    # TODO: Write\
    \ code to sort `arr` inside the function.\n    # TODO: Don't forget to return\
    \ `arr`!\n    n = length(arr)\n    sorted = false\n    while !sorted\n       \
    \ sorted = true\n        for i in 1:n-1\n            if dec_to_bin(arr[i]) > dec_to_bin(arr[i+1])\n\
    \                arr[i], arr[i+1] = arr[i+1], arr[i]\n                sorted =\
    \ false\n            end\n        end\n    end\n    return arr\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4])\
    \ == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6,\
    \ -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpyzqa0fsj.jl:32

    '
  stdout: "test set: Error During Test at /tmp/tmpyzqa0fsj.jl:35\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ dec_to_bin not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmpyzqa0fsj.jl:22\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpyzqa0fsj.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpyzqa0fsj.jl:34\ntest set:\
    \ Error During Test at /tmp/tmpyzqa0fsj.jl:36\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: dec_to_bin\
    \ not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmpyzqa0fsj.jl:22\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpyzqa0fsj.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpyzqa0fsj.jl:34\ntest set:\
    \ Error During Test at /tmp/tmpyzqa0fsj.jl:37\n  Test threw exception\n  Expression:\
    \ candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3]\n  UndefVarError: dec_to_bin not\
    \ defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmpyzqa0fsj.jl:22\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpyzqa0fsj.jl:37 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpyzqa0fsj.jl:34\ntest set:\
    \ Error During Test at /tmp/tmpyzqa0fsj.jl:39\n  Test threw exception\n  Expression:\
    \ candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5,\
    \ 7, 77]\n  UndefVarError: dec_to_bin not defined\n  Stacktrace:\n   [1] sort_array("
  timestamp: 1659821989
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    input = copy(arr)\n    non_zeros = input[input .!= 0]\n    zeros = ones(sum(input\
    \ .== 0))\n    input = filter(a -> a != 0, input)\n    input = sort([(sum(bits(i)),\
    \ i) for i in input])\n    [i[2] for i in input]\n    # your code\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5,\
    \ 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4,\
    \ -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t\
    @test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmper0slhn4.jl:19

    '
  stdout: "test set: Error During Test at /tmp/tmper0slhn4.jl:22\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ bits not defined\n  Stacktrace:\n   [1] (::var\"#2#5\")(i::Int64)\n     @ Main\
    \ ./none:0\n   [2] iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{Vector{Int64},\
    \ var\"#2#5\"})\n     @ Base ./array.jl:724\n   [4] sort_array(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmper0slhn4.jl:13\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmper0slhn4.jl:22 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmper0slhn4.jl:21\ntest set:\
    \ Error During Test at /tmp/tmper0slhn4.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: bits\
    \ not defined\n  Stacktrace:\n   [1] (::var\"#2#5\")(i::Int64)\n     @ Main ./none:0\n\
    \   [2] iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{Vector{Int64},\
    \ var\"#2#5\"})\n     @ Base ./array.jl:724\n   [4] sort_array(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmper0slhn4.jl:13\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmper0slhn4.jl:23 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmper0slhn4.jl:21\ntest set:\
    \ Error During Test at /tmp/tmper0slhn4.jl:24\n  Test threw exception\n  Expression:\
    \ candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3]\n  UndefVarError: bits not defined\n\
    \  Stacktrace:\n   [1] (::var\"#2#5\")(i::Int64)\n     @ Main ./none:0\n   [2]\
    \ iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{Vector{Int64},\
    \ var\"#2#5\"})\n     @ Base ./array.jl:724\n   [4] sort_array(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmper0slhn4.jl:13\n   [5] macro expansion\n  "
  timestamp: 1659821990
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    #your code here\nend\n\"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpb1wumy9c.jl:11\nin expression starting at\
    \ /tmp/tmpb1wumy9c.jl:11\n"
  stdout: ''
  timestamp: 1659821987
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    return sort(arr, by=x->(sum(digits(x,2)),x))\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1,\
    \ 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\
    \t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpqp30ygml.jl:13

    '
  stdout: "test set: Error During Test at /tmp/tmpqp30ygml.jl:16\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  MethodError: no\
    \ method matching digits(::Int64, ::Int64)\n  Closest candidates are:\n    digits(::Integer;\
    \ base, pad) at ~/.conda/envs/polyglot/share/julia/base/intfuncs.jl:854\n    digits(!Matched::Type{<:Integer},\
    \ ::Integer; base, pad) at ~/.conda/envs/polyglot/share/julia/base/intfuncs.jl:857\n\
    \  Stacktrace:\n    [1] (::var\"#1#2\")(x::Int64)\n      @ Main /tmp/tmpqp30ygml.jl:9\n\
    \    [2] lt(o::Base.Order.By{var\"#1#2\", Base.Order.ForwardOrdering}, a::Int64,\
    \ b::Int64)\n      @ Base.Order ./ordering.jl:111\n    [3] sort!\n      @ ./sort.jl:507\
    \ [inlined]\n    [4] sort!\n      @ ./sort.jl:574 [inlined]\n    [5] sort!\n \
    \     @ ./sort.jl:664 [inlined]\n    [6] #sort!#8\n      @ ./sort.jl:725 [inlined]\n\
    \    [7] sort(v::Vector{Int64}; kws::Base.Pairs{Symbol, var\"#1#2\", Tuple{Symbol},\
    \ NamedTuple{(:by,), Tuple{var\"#1#2\"}}})\n      @ Base.Sort ./sort.jl:772\n\
    \    [8] sort_array(arr::Vector{Int64})\n      @ Main /tmp/tmpqp30ygml.jl:9\n\
    \    [9] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpqp30ygml.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpqp30ygml.jl:15\ntest set:\
    \ Error During Test at /tmp/tmpqp30ygml.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  MethodError: no method\
    \ matching digits(::Int64, ::Int64)\n  Closest candidates are:\n    digits(::Integer;\
    \ base, pad) at ~/.conda/envs/polyglot/share/julia/base/intfuncs.jl:854\n    digits(!Matched::Type{<:Integer},\
    \ ::Integer; base, pad) at ~/.conda/envs/polyglot/share/julia/base/intfuncs.jl:857\n\
    \  Stacktrace:\n    [1] (::var\"#1#2\")(x::Int64)\n      @ Main /tmp/tmpqp30ygml.jl:9\n\
    \    [2] lt(o::Base.Order.By{var\"#1#2\", Base.Order.ForwardOrdering}, a::Int64,\
    \ b::Int64)\n      @ Base.Order ./ordering.jl:111\n    [3"
  timestamp: 1659821990
- exit_code: -1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n   # remove this and enter your solution\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3,\
    \ 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1,\
    \ 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: Timeout
  stderr: 'b''ERROR: LoadError: '''
  stdout: 'b''test set: Error During Test at /tmp/tmptwz_ecvk.jl:16\n  Test threw
    exception\n  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  MethodError:
    Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n  Closest
    candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)
    where T<:AbstractArray at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n    convert(::Type{T},
    !Matched::AbstractArray) where T<:Array at ~/.conda/envs/polyglot/share/julia/base/array.jl:554\n    convert(::Type{T},
    !Matched::T) where T<:AbstractArray at ~/.conda/envs/polyglot/share/julia/base/abstractarray.jl:16\n    ...\n  Stacktrace:\n   [1]
    sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmptwz_ecvk.jl:10\n   [2] macro
    expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmptwz_ecvk.jl:16 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmptwz_ecvk.jl:15\ntest set: Error
    During Test at /tmp/tmptwz_ecvk.jl:17\n  Test threw exception\n  Expression: candidate([-2,
    -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  MethodError: Cannot `convert` an object
    of type Nothing to an object of type Vector{Int64}\n  Closest candidates are:\n    convert(::Type{T},
    !Matched::LinearAlgebra.Factorization) where T<:AbstractArray at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n    convert(::Type{T},
    !Matched::AbstractArray) where T<:Array at ~/.conda/envs/polyglot/share/julia/base/array.jl:554\n    convert(::Type{T},
    !Matched::T) where T<:AbstractArray at ~/.conda/envs/polyglot/share/julia/base/abstractarray.jl:16\n    ...\n  Stacktrace:\n   [1]
    sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmptwz_ecvk.jl:10\n   [2] macro
    expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ '
  timestamp: 1659821991
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    sorted_arr = sort(arr, by=x->count_bits(x))\n    return sorted_arr\nend\n\
    using Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpb0g_bnct.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpb0g_bnct.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ count_bits not defined\n  Stacktrace:\n    [1] (::var\"#1#2\")(x::Int64)\n \
    \     @ Main /tmp/tmpb0g_bnct.jl:9\n    [2] lt(o::Base.Order.By{var\"#1#2\", Base.Order.ForwardOrdering},\
    \ a::Int64, b::Int64)\n      @ Base.Order ./ordering.jl:111\n    [3] sort!(v::Vector{Int64},\
    \ lo::Int64, hi::Int64, #unused#::Base.Sort.InsertionSortAlg, o::Base.Order.By{var\"\
    #1#2\", Base.Order.ForwardOrdering})\n      @ Base.Sort ./sort.jl:507\n    [4]\
    \ sort!(v::Vector{Int64}, lo::Int64, hi::Int64, a::Base.Sort.QuickSortAlg, o::Base.Order.By{var\"\
    #1#2\", Base.Order.ForwardOrdering})\n      @ Base.Sort ./sort.jl:574\n    [5]\
    \ sort!\n      @ ./sort.jl:664 [inlined]\n    [6] #sort!#8\n      @ ./sort.jl:725\
    \ [inlined]\n    [7] #sort#9\n      @ ./sort.jl:772 [inlined]\n    [8] sort_array(arr::Vector{Int64})\n\
    \      @ Main /tmp/tmpb0g_bnct.jl:9\n    [9] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpb0g_bnct.jl:17 [inlined]\n\
    \   [11] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpb0g_bnct.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpb0g_bnct.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: count_bits\
    \ not defined\n  Stacktrace:\n    [1] (::var\"#1#2\")(x::Int64)\n      @ Main\
    \ /tmp/tmpb0g_bnct.jl:9\n    [2] lt(o::Base.Order.By{var\"#1#2\", Base.Order.ForwardOrdering},\
    \ a::Int64, b::Int64)\n      @ Base.Order ./ordering.jl:111\n    [3] sort!(v::Vector{Int64},\
    \ lo::Int64, hi::Int64, #unused#::Base.Sort.InsertionSortAlg, o::Base.Order.By{var\"\
    #1#2\", Base.Order.ForwardOrdering})\n      @ Base.Sort ./sort.jl:507\n    [4]\
    \ sort!(v::Vector{Int64}, lo::Int64, hi::Int64, a::Base.Sort.QuickSortAlg, o::Base.Order.By{var\"\
    #1#2\", Base.Order.ForwardOrdering})\n      @ Base.Sort ./sort.jl:574\n    [5]\
    \ sort"
  timestamp: 1659821990
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n\nsort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])  --> [1, 2, 4, 8, 3, 5, 6, 7,\
    \ 9, 10]\nsort_array([1024, 512, 256, 128, 64, 32, 16, 8, 4, 2, 1])  --> [1, 2,\
    \ 4, 8, 16, 32, 64, 128, 256, 512, 1024]\nsort_array([1000, 10000, 100, 10, 100000])\
    \  --> [10, 100, 1000, 10000, 100000]\n\"\"\"\n    ###############\n    # YOUR\
    \ CODE HERE\n    ###############\n    \n    # check if the number is negative,\
    \ if so, move it to the end\n    # if not, find the binary representation and\
    \ calculate the number of 1s\n    # sort it, move negative number to the front\n\
    \    # return it\n    #\n    #\n    #\n    \n    \n    \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n   \nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1,\
    \ 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\
    \t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpmd6xmbud.jl:1\nin expression starting at /tmp/tmpmd6xmbud.jl:1\n"
  stdout: ''
  timestamp: 1659821988
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n  \"\"\"\n  Sorts the input `arr` in place.\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3,\
    \ 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1,\
    \ 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmplmubwmp8.jl:1\nin expression starting at /tmp/tmplmubwmp8.jl:1\n"
  stdout: ''
  timestamp: 1659821988
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    arr = sort(arr)\n    return arr\nend\nusing Test\n\n@testset begin\n\n\
    candidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\
    \t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1,\
    \ 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpm10iwpc3.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmpm10iwpc3.jl:17\n  Expression: candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n   Evaluated: [1, 2, 3, 4, 5] == [1, 2, 4,\
    \ 3, 5]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpm10iwpc3.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpm10iwpc3.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpm10iwpc3.jl:18\n  Expression: candidate([-2, -3, -4, -5, -6])\
    \ == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -5, -4, -3, -2] == [-4, -2, -6,\
    \ -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpm10iwpc3.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpm10iwpc3.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpm10iwpc3.jl:19\n  Expression: candidate([1, 0, 2, 3, 4]) ==\
    \ [0, 1, 2, 4, 3]\n   Evaluated: [0, 1, 2, 3, 4] == [0, 1, 2, 4, 3]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpm10iwpc3.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpm10iwpc3.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpm10iwpc3.jl:21\n  Expression: candidate([2, 5, 77, 4, 5, 3,\
    \ 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\n   Evaluated: [2, 2,\
    \ 3, 3, 4, 4, 5, 5, 5, 7, 77] == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpm10iwpc3.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpm10iwpc3.jl:16\ntest set"
  timestamp: 1659821990
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    return (\n      sort(arr, by=x->(count_ones(x), x))\n    )\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5,\
    \ 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4,\
    \ -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t\
    @test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpquwaogl5.jl:15

    '
  stdout: "test set: Test Failed at /tmp/tmpquwaogl5.jl:19\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpquwaogl5.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpquwaogl5.jl:17\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  timestamp: 1659821990
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    #your code here\nend\narr = [1,0,10,9,1000,5,2,3,15,11,1,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,\n\
    using Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: missing separator in array expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmptwpr_g1_.jl:14\nin expression starting at\
    \ /tmp/tmptwpr_g1_.jl:14\n"
  stdout: ''
  timestamp: 1659821989
- exit_code: -1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    #your code here\n    return sort(arr, by = x -> (Integer(count_ones(x),\
    \ base = 2), x))\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\
    \t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: Timeout
  stderr: 'b''ERROR: LoadError: '''
  stdout: 'b''test set: Error During Test at /tmp/tmpvyis9i8j.jl:17\n  Test threw
    exception\n  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  MethodError:
    no method matching Integer(::Int64; base=2)\n  Closest candidates are:\n    Integer(::Integer)
    at ~/.conda/envs/polyglot/share/julia/base/boot.jl:795 got unsupported keyword
    argument "base"\n    (::Type{T})(::T) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/boot.jl:770
    got unsupported keyword argument "base"\n    (::Type{T})(!Matched::AbstractChar)
    where T<:Union{AbstractChar, Number} at ~/.conda/envs/polyglot/share/julia/base/char.jl:50
    got unsupported keyword argument "base"\n    ...\n  Stacktrace:\n    [1] (::var"#1#2")(x::Int64)\n      @
    Main /tmp/tmpvyis9i8j.jl:10\n    [2] lt(o::Base.Order.By{var"#1#2", Base.Order.ForwardOrdering},
    a::Int64, b::Int64)\n      @ Base.Order ./ordering.jl:111\n    [3] sort!\n      @
    ./sort.jl:507 [inlined]\n    [4] sort!\n      @ ./sort.jl:574 [inlined]\n    [5]
    sort!\n      @ ./sort.jl:664 [inlined]\n    [6] #sort!#8\n      @ ./sort.jl:725
    [inlined]\n    [7] sort(v::Vector{Int64}; kws::Base.Pairs{Symbol, var"#1#2", Tuple{Symbol},
    NamedTuple{(:by,), Tuple{var"#1#2"}}})\n      @ Base.Sort ./sort.jl:772\n    [8]
    sort_array(arr::Vector{Int64})\n      @ Main /tmp/tmpvyis9i8j.jl:10\n    [9] macro
    expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [10] macro expansion\n      @ /tmp/tmpvyis9i8j.jl:17 [inlined]\n   [11]
    macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [12] top-level scope\n      @ /tmp/tmpvyis9i8j.jl:16\ntest set:
    Error During Test at /tmp/tmpvyis9i8j.jl:18\n  Test threw exception\n  Expression:
    candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  MethodError: no method
    matching Integer(::Int64; base=2)\n  Closest candidates are:\n    Integer(::Integer)
    at ~/.conda/envs/polyglot/share/julia/base/boot.jl:795 got unsupported keyword
    argument "base"\n    (::Type{T})(::T) where T<:Number at ~/.'
  timestamp: 1659821992
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    # your code\nend\n\"\"\"\nusing Test\n\n@testset begin\n\ncandidate =\
    \ sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp8ijvcplo.jl:11\nin expression starting at\
    \ /tmp/tmp8ijvcplo.jl:11\n"
  stdout: ''
  timestamp: 1659821989
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    return sort(arr, by = x -> [count_ones(x), x])\nend\n# @test sort_array([7,2,3,9,9,9,8,8,7,7,7,3,3,3,3,3,3,3,3,3,3,3,3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,\n\
    using Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpsniiudq2.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmpsniiudq2.jl:18\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsniiudq2.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsniiudq2.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  timestamp: 1659821990
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    # your code here\nend\n\"\"\"\n    \n    For example:\n        sort_array([1,0,3,4,0,1,1,1,1,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0\n\
    using Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp6qpsd9an.jl:11\nin expression starting at\
    \ /tmp/tmp6qpsd9an.jl:11\n"
  stdout: ''
  timestamp: 1659821989
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    #...\nend\n\"\"\"\n    For example, these are the binary representations\
    \ of the integers in the array:\n        \"\"\"\ni_to_bin(9) = \"1001\"\ni_to_bin(2)\
    \ = \"10\"\ni_to_bin(5) = \"101\"\ni_to_bin(8) = \"1000\"\ni_to_bin(3) = \"11\"\
    \ni_to_bin(7) = \"111\"\ni_to_bin(6) = \"110\"\ni_to_bin(4) = \"100\"\n\"\"\"\n\
    \    By applying sort_array to the above array,\n    you should get [2, 8, 4,\
    \ 3, 5, 6, 7, 9].\n\"\"\"\nsort_array([9, 2, 5, 8, 3, 7, 6, 4]) == [2, 8, 4, 3,\
    \ 5, 6, 7, 9]\n\"\"\"\n    The result should be:\n        \"\"\"\nsort_array([4,\
    \ 2, 9, 5, 8, 6, 7, 3]) == [2, 8, 4, 3, 5, 6, 7, 9]\n\"\"\"\n    It should be\
    \ sorted like this:\n        \"\"\"\nsort_array([4, 2, 9, 5, 8, 6, 7, 3]) == [2,\
    \ 8, 4, 3, 5, 6, 7, 9]\n\"\"\"\n    At last, the following should be true:\n \
    \       \"\"\"\nsort_array([9, 2, 5, 8, 3, 7, 6, 4]) == [2, 8, 4, 3, 5, 6, 7,\
    \ 9]\nsort_array([4, 2, 9, 5, 8, 6, 7, 3]) == [2, 8, 4, 3, 5, 6, 7, 9]\nsort_array([7,\
    \ 9, 2, 4, 2, 9, 5, 8, 3, 7, 6, 4, 1, 9, 5, 8, 3, 7, 6, 4]) ==\n    [2, 8, 4,\
    \ 3, 5, 6, 7, 9, 2, 8, 4, 3, 5, 6, 7, 9, 1, 8, 4, 3, 5, 6, 7, 9]\n\"\"\"\n\"\"\
    \"\n    If you\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"9\" is not a valid function argument name around\
    \ /tmp/tmpblu41n1v.jl:11\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpblu41n1v.jl:11\n\
    in expression starting at /tmp/tmpblu41n1v.jl:11\n"
  stdout: ''
  timestamp: 1659821989
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    n = length(arr)\n    #creates an empty array to store binary representation\
    \ of numbers\n    bin_arr = zeros(Int64,n)\n    for i in 1:n\n        bin_arr[i]\
    \ = integer(bits(arr[i]))\n    end\n    #we are merging two arrays here\n    #bin_arr\
    \ is our key array\n    #arr is our value array\n    #we are using this merge\
    \ sort implementation that takes two arrays as input\n    #so we can merge them\
    \ simultaneously\n    merge_sort!(bin_arr,arr)\n    #I am returning the value\
    \ array here\n    return arr\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmp1so8exi2.jl:26

    '
  stdout: "test set: Error During Test at /tmp/tmp1so8exi2.jl:29\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ bits not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n   \
    \  @ Main /tmp/tmp1so8exi2.jl:13\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp1so8exi2.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp1so8exi2.jl:28\ntest set:\
    \ Error During Test at /tmp/tmp1so8exi2.jl:30\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: bits\
    \ not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1so8exi2.jl:13\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp1so8exi2.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp1so8exi2.jl:28\ntest set:\
    \ Error During Test at /tmp/tmp1so8exi2.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3]\n  UndefVarError: bits not defined\n\
    \  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmp1so8exi2.jl:13\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp1so8exi2.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp1so8exi2.jl:28\ntest set:\
    \ Error During Test at /tmp/tmp1so8exi2.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(Vector{Int64}([])) == Vector{Int64}([])\n  UndefVarError: merge_sort!\
    \ not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1so8exi2.jl"
  timestamp: 1659821991
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    return sort(arr, by = [x -> bits(x), id])\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1,\
    \ 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\
    \t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmpulad_t87.jl:13

    '
  stdout: "test set: Error During Test at /tmp/tmpulad_t87.jl:16\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ id not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @\
    \ Main /tmp/tmpulad_t87.jl:9\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpulad_t87.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpulad_t87.jl:15\ntest set:\
    \ Error During Test at /tmp/tmpulad_t87.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: id\
    \ not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmpulad_t87.jl:9\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpulad_t87.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpulad_t87.jl:15\ntest set:\
    \ Error During Test at /tmp/tmpulad_t87.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3]\n  UndefVarError: id not defined\n\
    \  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmpulad_t87.jl:9\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpulad_t87.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpulad_t87.jl:15\ntest set:\
    \ Error During Test at /tmp/tmpulad_t87.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(Vector{Int64}([])) == Vector{Int64}([])\n  UndefVarError: id not defined\n\
    \  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmpulad_t87.jl:9\n\
    \   [2] macro ex"
  timestamp: 1659821992
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    return sort(arr, by = [numones, identity])\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1,\
    \ 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\
    \t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmp8r76wopd.jl:13

    '
  stdout: "test set: Error During Test at /tmp/tmp8r76wopd.jl:16\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ numones not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmp8r76wopd.jl:9\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8r76wopd.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8r76wopd.jl:15\ntest set:\
    \ Error During Test at /tmp/tmp8r76wopd.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: numones\
    \ not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp8r76wopd.jl:9\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8r76wopd.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8r76wopd.jl:15\ntest set:\
    \ Error During Test at /tmp/tmp8r76wopd.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3]\n  UndefVarError: numones not\
    \ defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmp8r76wopd.jl:9\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8r76wopd.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8r76wopd.jl:15\ntest set:\
    \ Error During Test at /tmp/tmp8r76wopd.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(Vector{Int64}([])) == Vector{Int64}([])\n  UndefVarError: numones\
    \ not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp8r76wopd."
  timestamp: 1659821992
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    b = [bitstring(x) for x in arr]\n    function cmp(x, y)\n        if sum(x)\
    \ == sum(y)\n            return x < y\n        else\n            return sum(x)\
    \ < sum(y)\n        end\n    end\n    return sort(arr, cmp)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4])\
    \ == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6,\
    \ -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmptose7eof.jl:21

    '
  stdout: "test set: Error During Test at /tmp/tmptose7eof.jl:24\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  MethodError: no\
    \ method matching sort(::Vector{Int64}, ::var\"#cmp#3\")\n  Closest candidates\
    \ are:\n    sort(::AbstractVector; kws...) at ~/.conda/envs/polyglot/share/julia/base/sort.jl:772\n\
    \    sort(::AbstractArray; dims, alg, lt, by, rev, order) at ~/.conda/envs/polyglot/share/julia/base/sort.jl:1030\n\
    \  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmptose7eof.jl:17\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmptose7eof.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmptose7eof.jl:23\ntest set:\
    \ Error During Test at /tmp/tmptose7eof.jl:25\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  MethodError: no method\
    \ matching sort(::Vector{Int64}, ::var\"#cmp#3\")\n  Closest candidates are:\n\
    \    sort(::AbstractVector; kws...) at ~/.conda/envs/polyglot/share/julia/base/sort.jl:772\n\
    \    sort(::AbstractArray; dims, alg, lt, by, rev, order) at ~/.conda/envs/polyglot/share/julia/base/sort.jl:1030\n\
    \  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmptose7eof.jl:17\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmptose7eof.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmptose7eof.jl:23\ntest set:\
    \ Error During Test at /tmp/tmptose7eof.jl:26\n  Test threw exception\n  Expression:\
    \ candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3]\n  MethodError: no method matching\
    \ sort(::Vector{Int64}, ::var\"#cmp#3\")\n  Closest candidates are:\n    sort(::AbstractVector;\
    \ kws...) at ~/.conda/envs/polyglot/share/julia/base/sort.jl:772\n"
  timestamp: 1659821993
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    return sort([(count_ones(x), x) for x in arr])[:,2]\nend\n\"\"\"\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5,\
    \ 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4,\
    \ -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t\
    @test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmphi1xvd1d.jl:11\nin expression starting at\
    \ /tmp/tmphi1xvd1d.jl:11\n"
  stdout: ''
  timestamp: 1659821990
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    # your code here\nend\n                \"\"\"\n    \n    For example:\n\
    \        sort_array([1, 4, 2, 4, 3, 5, 1, 0]) == [0, 1, 1, 2, 3, 4, 4, 5]\n\"\"\
    \"\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: cannot document the following expression:\n\nusing Test\n\
    \nStacktrace:\n [1] error(::String, ::String)\n   @ Base ./error.jl:42\n [2] top-level\
    \ scope\n   @ /tmp/tmpcckwbr6j.jl:11\nin expression starting at /tmp/tmpcckwbr6j.jl:11\n"
  stdout: ''
  timestamp: 1659821991
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    my_dict = Dict(arr[i] => count_ones(arr[i]) for i in 1:length(arr))\n\
    \    #println(my_dict)\n    return sort(collect(keys(my_dict)), lt=(x,y) -> (my_dict[x]\
    \ < my_dict[y] || (my_dict[x] == my_dict[y] && x < y)))\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1,\
    \ 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\
    \t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpwo5_kpc3.jl:15

    '
  stdout: "test set: Test Failed at /tmp/tmpwo5_kpc3.jl:19\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwo5_kpc3.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwo5_kpc3.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpwo5_kpc3.jl:22\n  Expression: candidate([2, 5, 77, 4, 5, 3,\
    \ 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\n   Evaluated: [2, 4,\
    \ 3, 5, 7, 77] == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\nStacktrace:\n [1] macro\
    \ expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwo5_kpc3.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwo5_kpc3.jl:17\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     2      8\n"
  timestamp: 1659821992
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    tmp = []\n    for i in arr\n        for j in arr\n            if bitcount(i)\
    \ == bitcount(j)\n                tmp = [j]\n            end\n        end\n  \
    \  end\n    sort(tmp)\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\
    \t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpxu7qh053.jl:21

    '
  stdout: "test set: Error During Test at /tmp/tmpxu7qh053.jl:24\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ bitcount not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmpxu7qh053.jl:12\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxu7qh053.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxu7qh053.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpxu7qh053.jl:25\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: bitcount\
    \ not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmpxu7qh053.jl:12\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxu7qh053.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxu7qh053.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpxu7qh053.jl:26\n  Test threw exception\n  Expression:\
    \ candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3]\n  UndefVarError: bitcount not\
    \ defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmpxu7qh053.jl:12\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxu7qh053.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxu7qh053.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpxu7qh053.jl:28\n  Test threw exception\n  Expression:\
    \ candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5,\
    \ 7, 77]\n  UndefVarError: bitcount not defined\n  Stacktrace:\n   [1] sort_array(arr::Vec"
  timestamp: 1659821993
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    return sort(arr, by = (x->zeros(Int,popcount(x))), rev=true)\nend\n\"\"\
    \"\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpf62yp3ny.jl:11\nin expression starting at\
    \ /tmp/tmpf62yp3ny.jl:11\n"
  stdout: ''
  timestamp: 1659821991
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    sorted_ones = sort(arr, by = x -> (convert(Int64, count_ones(x)), x))\n\
    \    return sorted_ones\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\
    \t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp51npaz04.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmp51npaz04.jl:18\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp51npaz04.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp51npaz04.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  timestamp: 1659821992
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    # Call bin_ones and store the ones count and index in a \n    # tuple\
    \ list, where the first value is the ones count, and the second\n    # is the\
    \ actual index.\n    tmp = [bin_ones(i) for i in arr]\n    # Sort the list by\
    \ the ones count, and sort the equal ones count\n    # by the decimal value\n\
    \    tmp = sort!(tmp, by = [x->x[1], x->x[2]])\n    # Swap the ones count and\
    \ the index\n    tmp = swap!(tmp, 1, 2)\n    # Get the sorted decimal values\n\
    \    tmp = [arr[i] for i in tmp]\n    return tmp\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1,\
    \ 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\
    \t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmpaq3lfbis.jl:24

    '
  stdout: "test set: Error During Test at /tmp/tmpaq3lfbis.jl:27\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ bin_ones not defined\n  Stacktrace:\n   [1] (::var\"#1#5\")(i::Int64)\n    \
    \ @ Main ./none:0\n   [2] iterate\n     @ ./generator.jl:47 [inlined]\n   [3]\
    \ collect(itr::Base.Generator{Vector{Int64}, var\"#1#5\"})\n     @ Base ./array.jl:724\n\
    \   [4] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmpaq3lfbis.jl:12\n \
    \  [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpaq3lfbis.jl:27 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpaq3lfbis.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpaq3lfbis.jl:28\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: bin_ones\
    \ not defined\n  Stacktrace:\n   [1] (::var\"#1#5\")(i::Int64)\n     @ Main ./none:0\n\
    \   [2] iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{Vector{Int64},\
    \ var\"#1#5\"})\n     @ Base ./array.jl:724\n   [4] sort_array(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmpaq3lfbis.jl:12\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpaq3lfbis.jl:28 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpaq3lfbis.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpaq3lfbis.jl:29\n  Test threw exception\n  Expression:\
    \ candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3]\n  UndefVarError: bin_ones not\
    \ defined\n  Stacktrace:\n   [1] (::var\"#1#5\")(i::Int64)\n     @ Main ./none:0\n\
    \   [2] iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{Vector{Int64},\
    \ var\"#1#5\"})\n     @ Base ./array.jl:724\n   [4] sort_array(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmpaq3lfbis.jl:12\n   [5] macro "
  timestamp: 1659821993
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    res = sort(arr, by=bitcount, rev=true)\n    sort(res, by=identity, rev=true)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmpxtl5jsng.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpxtl5jsng.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ bitcount not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmpxtl5jsng.jl:9\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxtl5jsng.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxtl5jsng.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpxtl5jsng.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: bitcount\
    \ not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmpxtl5jsng.jl:9\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxtl5jsng.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxtl5jsng.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpxtl5jsng.jl:19\n  Test threw exception\n  Expression:\
    \ candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3]\n  UndefVarError: bitcount not\
    \ defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmpxtl5jsng.jl:9\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxtl5jsng.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxtl5jsng.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpxtl5jsng.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(Vector{Int64}([])) == Vector{Int64}([])\n  UndefVarError: bitcount\
    \ not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmpxtl5j"
  timestamp: 1659821994
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    #binary = map(x -> decimal_to_binary(x), arr)\n    binary = map(decimal_to_binary,\
    \ arr)\n    ordered = sort(zip(binary, arr), lt = (a, b) -> a[1] < b[1] || (a[1]\
    \ == b[1] && a[2] < b[2]))\n    return map(x -> x[2], ordered)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4])\
    \ == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6,\
    \ -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmppc_9grok.jl:16

    '
  stdout: "test set: Error During Test at /tmp/tmppc_9grok.jl:19\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ decimal_to_binary not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmppc_9grok.jl:10\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmppc_9grok.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmppc_9grok.jl:18\ntest set:\
    \ Error During Test at /tmp/tmppc_9grok.jl:20\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: decimal_to_binary\
    \ not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmppc_9grok.jl:10\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmppc_9grok.jl:20 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmppc_9grok.jl:18\ntest set:\
    \ Error During Test at /tmp/tmppc_9grok.jl:21\n  Test threw exception\n  Expression:\
    \ candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3]\n  UndefVarError: decimal_to_binary\
    \ not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmppc_9grok.jl:10\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmppc_9grok.jl:21 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmppc_9grok.jl:18\ntest set:\
    \ Error During Test at /tmp/tmppc_9grok.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(Vector{Int64}([])) == Vector{Int64}([])\n  UndefVarError: decimal_to_binary\
    \ not defined\n  Stacktrace:\n   [1] sort_array(arr::V"
  timestamp: 1659821993
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    return sort(arr) do x, y\n        count_ones(x) == count_ones(y) ? x <=>\
    \ y : count_ones(x) <=> count_ones(y)\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3,\
    \ 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1,\
    \ 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \">\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp2hyggc9a.jl:10\nin expression starting at\
    \ /tmp/tmp2hyggc9a.jl:10\n"
  stdout: ''
  timestamp: 1659821991
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    # Sort the given array of non-negative integers\n    # according to binary\
    \ representation of the numbers.\n    # If the number of 1s in the binary represantation\
    \ of a number is equal\n    # to that of another number, then the number with\
    \ the lower decimal\n    # value should be sorted first.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1,\
    \ 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\
    \t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmptd8oqfhr.jl:8\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmptd8oqfhr.jl:1\n\
    in expression starting at /tmp/tmptd8oqfhr.jl:1\n"
  stdout: ''
  timestamp: 1659821991
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    # magic code\nend\n                \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3,\
    \ 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1,\
    \ 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpd8k7rrbk.jl:11\nin expression starting at\
    \ /tmp/tmpd8k7rrbk.jl:11\n"
  stdout: ''
  timestamp: 1659821992
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    return sort(arr, by=x->(count_ones(x), x))\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1,\
    \ 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\
    \t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpcbdd2ukg.jl:13

    '
  stdout: "test set: Test Failed at /tmp/tmpcbdd2ukg.jl:17\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpcbdd2ukg.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpcbdd2ukg.jl:15\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  timestamp: 1659821992
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    non_negative = [x > 0 for x in arr]\n    if any(non_negative)\n      \
    \  non_negative_arr = arr[non_negative]\n        arr = sort(non_negative_arr,\
    \ by = x -> (count_ones(x), x))\n    end\n    return arr\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4])\
    \ == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6,\
    \ -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpaipwn6yf.jl:18

    '
  stdout: "test set: Test Failed at /tmp/tmpaipwn6yf.jl:22\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-2, -3, -4, -5, -6]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpaipwn6yf.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpaipwn6yf.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpaipwn6yf.jl:23\n  Expression: candidate([1, 0, 2, 3, 4]) ==\
    \ [0, 1, 2, 4, 3]\n   Evaluated: [1, 2, 4, 3] == [0, 1, 2, 4, 3]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpaipwn6yf.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpaipwn6yf.jl:20\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     2      8\n"
  timestamp: 1659821993
- exit_code: -1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    bit_array = [bit_count(i) for i in arr]\n    sort!(bit_array,arr)\n  \
    \  return arr\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t\
    @test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3,\
    \ -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) ==\
    \ [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: Timeout
  stderr: 'b''ERROR: LoadError: '''
  stdout: 'b''test set: Error During Test at /tmp/tmpwc6ekps_.jl:18\n  Test threw
    exception\n  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:
    bit_count not defined\n  Stacktrace:\n   [1] (::var"#1#2")(i::Int64)\n     @ Main
    ./none:0\n   [2] iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{Vector{Int64},
    var"#1#2"})\n     @ Base ./array.jl:724\n   [4] sort_array(arr::Vector{Int64})\n     @
    Main /tmp/tmpwc6ekps_.jl:9\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [6] macro expansion\n     @ /tmp/tmpwc6ekps_.jl:18 [inlined]\n   [7]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [8] top-level scope\n     @ /tmp/tmpwc6ekps_.jl:17\ntest set: Error
    During Test at /tmp/tmpwc6ekps_.jl:19\n  Test threw exception\n  Expression: candidate([-2,
    -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: bit_count not defined\n  Stacktrace:\n   [1]
    (::var"#1#2")(i::Int64)\n     @ Main ./none:0\n   [2] iterate\n     @ ./generator.jl:47
    [inlined]\n   [3] collect(itr::Base.Generator{Vector{Int64}, var"#1#2"})\n     @
    Base ./array.jl:724\n   [4] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmpwc6ekps_.jl:9\n   [5]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [6] macro expansion\n     @ /tmp/tmpwc6ekps_.jl:19 [inlined]\n   [7]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [8] top-level scope\n     @ /tmp/tmpwc6ekps_.jl:17\ntest set: Error
    During Test at /tmp/tmpwc6ekps_.jl:20\n  Test threw exception\n  Expression: candidate([1,
    0, 2, 3, 4]) == [0, 1, 2, 4, 3]\n  UndefVarError: bit_count not defined\n  Stacktrace:\n   [1]
    (::var"#1#2")(i::Int64)\n     @ Main ./none:0\n   [2] iterate\n     @ ./generator.jl:47
    [inlined]\n   [3] collect(itr::Base.Generator{Vector{Int64}, var"#1#2"})\n     @
    Base ./array.jl:724\n   [4] sort_array(arr::Vector{'
  timestamp: 1659821995
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    #...\nend\"\"\"\n\"\"\"\n    Example 1:\n    sort_array([3, 2, 1]) # =>\
    \ [1, 2, 3]\n    \n    (3=11, 2=10, 1=01)\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: extra token \"\"\" after end of expression\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmp0fn_70nd.jl:10\nin expression\
    \ starting at /tmp/tmp0fn_70nd.jl:10\n"
  stdout: ''
  timestamp: 1659821992
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    sort(arr, by = x -> (count_ones(x), x))\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3,\
    \ 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1,\
    \ 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmprlv7cssm.jl:13

    '
  stdout: "test set: Test Failed at /tmp/tmprlv7cssm.jl:17\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprlv7cssm.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprlv7cssm.jl:15\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  timestamp: 1659821984
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \nend\n                \"\"\"\n    For example:\n        sort_array([0,1,2,3,4,5,6,7,8,9])\
    \ == [0,1,2,4,8,3,5,6,7,9]\n\"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: cannot document the following expression:\n\nusing Test\n\
    \nStacktrace:\n [1] error(::String, ::String)\n   @ Base ./error.jl:42\n [2] top-level\
    \ scope\n   @ /tmp/tmpkfj_k99o.jl:10\nin expression starting at /tmp/tmpkfj_k99o.jl:10\n"
  stdout: ''
  timestamp: 1659821992
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    sort(arr, by=x->(count_ones(x), x))\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3,\
    \ 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1,\
    \ 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpq0m_02ni.jl:13

    '
  stdout: "test set: Test Failed at /tmp/tmpq0m_02ni.jl:17\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq0m_02ni.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq0m_02ni.jl:15\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  timestamp: 1659821993
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    sort!(arr)\n    return arr\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpi_xjtakj.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmpi_xjtakj.jl:17\n  Expression: candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n   Evaluated: [1, 2, 3, 4, 5] == [1, 2, 4,\
    \ 3, 5]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpi_xjtakj.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpi_xjtakj.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpi_xjtakj.jl:18\n  Expression: candidate([-2, -3, -4, -5, -6])\
    \ == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -5, -4, -3, -2] == [-4, -2, -6,\
    \ -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpi_xjtakj.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpi_xjtakj.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpi_xjtakj.jl:19\n  Expression: candidate([1, 0, 2, 3, 4]) ==\
    \ [0, 1, 2, 4, 3]\n   Evaluated: [0, 1, 2, 3, 4] == [0, 1, 2, 4, 3]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpi_xjtakj.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpi_xjtakj.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpi_xjtakj.jl:21\n  Expression: candidate([2, 5, 77, 4, 5, 3,\
    \ 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\n   Evaluated: [2, 2,\
    \ 3, 3, 4, 4, 5, 5, 5, 7, 77] == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpi_xjtakj.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpi_xjtakj.jl:16\ntest set"
  timestamp: 1659821993
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    sort!(arr) do a, b\n        binA = count_ones(a)\n        binB = count_ones(b)\n\
    \        # Case A:\n        if binA < binB return true end\n        # Case B:\n\
    \        if binA > binB return false end\n        # Case C:\n        return a\
    \ < b\n    end\n    return arr\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmpnj9k4lbj.jl:23

    '
  stdout: "test set: Error During Test at /tmp/tmpnj9k4lbj.jl:26\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  MethodError: no\
    \ method matching sort!(::var\"#1#2\", ::Vector{Int64})\n  Stacktrace:\n   [1]\
    \ sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmpnj9k4lbj.jl:9\n   [2] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpnj9k4lbj.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpnj9k4lbj.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpnj9k4lbj.jl:27\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  MethodError: no method\
    \ matching sort!(::var\"#1#2\", ::Vector{Int64})\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmpnj9k4lbj.jl:9\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpnj9k4lbj.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpnj9k4lbj.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpnj9k4lbj.jl:28\n  Test threw exception\n  Expression:\
    \ candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3]\n  MethodError: no method matching\
    \ sort!(::var\"#1#2\", ::Vector{Int64})\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmpnj9k4lbj.jl:9\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpnj9k4lbj.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpnj9k4lbj.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpnj9k4lbj.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(Vector{Int64}([])) == Vector{Int64}([])\n  MethodError: no m"
  timestamp: 1659821995
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    # sort the array acc to 1s in its binary in ascending order\n    # and\
    \ in case of same no of 1s, sort acc to their decimal value\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1,\
    \ 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\
    \t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpcdyxmqys.jl:8\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpcdyxmqys.jl:1\n\
    in expression starting at /tmp/tmpcdyxmqys.jl:1\n"
  stdout: ''
  timestamp: 1659821993
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    @assert length(arr) >= 1 \"Array length must be greater than or equal\
    \ to 1\"\n    return sort(arr, by=bin_ones_dec_value)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1,\
    \ 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\
    \t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmpku_t8aqe.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpku_t8aqe.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ bin_ones_dec_value not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmpku_t8aqe.jl:10\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpku_t8aqe.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpku_t8aqe.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpku_t8aqe.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: bin_ones_dec_value\
    \ not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmpku_t8aqe.jl:10\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpku_t8aqe.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpku_t8aqe.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpku_t8aqe.jl:19\n  Test threw exception\n  Expression:\
    \ candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3]\n  UndefVarError: bin_ones_dec_value\
    \ not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmpku_t8aqe.jl:10\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpku_t8aqe.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpku_t8aqe.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpku_t8aqe.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(Vector{Int64}([])) == Vector{Int64}([])\n  AssertionError: Array length\
    \ must be greater than or equal to 1\n  Stacktrace:\n  "
  timestamp: 1659821995
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    #Code here\nend\n                \"\"\"\n    For example:\n          \
    \      \"\"\"\nsort_array([1, 0, 10, 12, 11]) == [0, 1, 10, 11, 12] # (1) -> (1)\
    \ -> (10) -> (11) -> (12)\nsort_array([1, 0, 10, 11, 12]) == [0, 1, 10, 11, 12]\
    \ # (1) -> (1) -> (10) -> (11) -> (12)\nsort_array([]) == []\n               \
    \ \"\"\"\n    More examples:\n                \"\"\"\nsort_array([512, 767, 1024,\
    \ 3072, 1024, 2048, 3072, 4096, 5120, 6144, 4096, 5120, 6144, 4096, 5120, 6144])\n\
    sort_array([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32])\n\
    sort_array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,\
    \ 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32])\nsort_array([1024,2048,3072,4096,5120,6144,7168,8192,9216,10240,11264,12288,13312,14336,15360,16384,17408,18432,19456,20480,21504,22528,23552,24576,25600,26624,27648,28672,29696,30720,31744,32768,33792,34816,35840,36864,37888,38912,39936,40960,41984,43008,44032,45056,46080,47104,48128,49152,50176,51200,52224,53248,54272,55296,56320,57344,58368,59392,60416,61440,62464,63488,64512,\n\
    using Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: cannot document the following expression:\n\nsort_array([1,\
    \ 0, 10, 12, 11]) == [0, 1, 10, 11, 12]\n\nStacktrace:\n [1] error(::String, ::String)\n\
    \   @ Base ./error.jl:42\n [2] top-level scope\n   @ /tmp/tmpg0b0ut2e.jl:11\n\
    in expression starting at /tmp/tmpg0b0ut2e.jl:11\n"
  stdout: ''
  timestamp: 1659821994
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    return sort(arr, by=x->[count_ones(x), x])\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1,\
    \ 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\
    \t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp7fgq03dg.jl:13

    '
  stdout: "test set: Test Failed at /tmp/tmp7fgq03dg.jl:17\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7fgq03dg.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7fgq03dg.jl:15\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  timestamp: 1659821994
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    idx_unsorted = sortperm(count_ones(x) for x in arr);\n    new_arr = [sort(filter(x\
    \ -> count_ones(x) == count_ones(arr[idx]), arr)) for idx in idx_unsorted];\n\
    \    return reduce(vcat, new_arr);\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmpw9xtm045.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpw9xtm045.jl:18\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  MethodError: no\
    \ method matching sortperm(::Base.Generator{Vector{Int64}, var\"#1#4\"})\n  Closest\
    \ candidates are:\n    sortperm(!Matched::AbstractUnitRange) at ~/.conda/envs/polyglot/share/julia/base/range.jl:1309\n\
    \    sortperm(!Matched::AbstractRange) at ~/.conda/envs/polyglot/share/julia/base/range.jl:1310\n\
    \    sortperm(!Matched::AbstractVector; alg, lt, by, rev, order) at ~/.conda/envs/polyglot/share/julia/base/sort.jl:907\n\
    \  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmpw9xtm045.jl:9\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpw9xtm045.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpw9xtm045.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpw9xtm045.jl:19\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  MethodError: no method\
    \ matching sortperm(::Base.Generator{Vector{Int64}, var\"#1#4\"})\n  Closest candidates\
    \ are:\n    sortperm(!Matched::AbstractUnitRange) at ~/.conda/envs/polyglot/share/julia/base/range.jl:1309\n\
    \    sortperm(!Matched::AbstractRange) at ~/.conda/envs/polyglot/share/julia/base/range.jl:1310\n\
    \    sortperm(!Matched::AbstractVector; alg, lt, by, rev, order) at ~/.conda/envs/polyglot/share/julia/base/sort.jl:907\n\
    \  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmpw9xtm045.jl:9\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpw9xtm045.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpw9xtm045.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpw9xtm045.jl:20\n  Test threw excepti"
  timestamp: 1659821996
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    sz = length(arr)\n    tmp = []\n    for i in 1:sz\n        push!(tmp,(arr[i],i))\n\
    \    end\n    tmp = sort(tmp,by = (x -> (count_ones(x[1]), x[1])))\n    for i\
    \ in 1:sz\n        arr[i] = tmp[i][1]\n    end\n    return arr\nend\n\"\"\"\n\"\
    \"\"\n    Use the following array to test\n\"\"\"\ntest = [12, 8, 3, 2, 1, 4,\
    \ 11, 7, 6, 5, 10, 15, 9, 14, 13]\nusing Test\n\n@testset begin\n\ncandidate =\
    \ sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: extra token \"the\" after end of expression\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmpk_dtaaky.jl:22\nin expression\
    \ starting at /tmp/tmpk_dtaaky.jl:22\n"
  stdout: ''
  timestamp: 1659821993
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    #your code\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\
    \t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmp12pq36r_.jl:13

    '
  stdout: "test set: Error During Test at /tmp/tmp12pq36r_.jl:16\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type Vector{Int64}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at ~/.conda/envs/polyglot/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at ~/.conda/envs/polyglot/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmp12pq36r_.jl:10\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp12pq36r_.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp12pq36r_.jl:15\ntest set:\
    \ Error During Test at /tmp/tmp12pq36r_.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type Vector{Int64}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at ~/.conda/envs/polyglot/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at ~/.conda/envs/polyglot/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmp12pq36r_.jl:10\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp12pq36r_.jl:17 [inlined]\n\
    \   ["
  timestamp: 1659821996
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    @assert all(i -> i >= 0, arr)\n    return sort(arr, by = [count_ones,\
    \ id])\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmp5tqz7q2_.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmp5tqz7q2_.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ id not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @\
    \ Main /tmp/tmp5tqz7q2_.jl:10\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp5tqz7q2_.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp5tqz7q2_.jl:16\ntest set:\
    \ Error During Test at /tmp/tmp5tqz7q2_.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  AssertionError: all((i->begin\n\
    \              #= /tmp/tmp5tqz7q2_.jl:9 =#\n              i >= 0\n          end),\
    \ arr)\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmp5tqz7q2_.jl:9\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp5tqz7q2_.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp5tqz7q2_.jl:16\ntest set:\
    \ Error During Test at /tmp/tmp5tqz7q2_.jl:19\n  Test threw exception\n  Expression:\
    \ candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3]\n  UndefVarError: id not defined\n\
    \  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmp5tqz7q2_.jl:10\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp5tqz7q2_.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp5tqz7q2_.jl:16\ntest set:\
    \ Error During Test at /tmp/tmp5tqz7q2_.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(Vector{Int64}([])) == Vector{Int64}([])\n  UndefVarError: id not defined\n\
    \  Stacktrace:\n "
  timestamp: 1659821996
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    arr = reverse(sort(arr, by = x -> (nones(x), x)));\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4])\
    \ == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6,\
    \ -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmp2f4j94uf.jl:13

    '
  stdout: "test set: Error During Test at /tmp/tmp2f4j94uf.jl:16\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ nones not defined\n  Stacktrace:\n    [1] (::var\"#1#2\")(x::Int64)\n      @\
    \ Main /tmp/tmp2f4j94uf.jl:9\n    [2] lt(o::Base.Order.By{var\"#1#2\", Base.Order.ForwardOrdering},\
    \ a::Int64, b::Int64)\n      @ Base.Order ./ordering.jl:111\n    [3] sort!(v::Vector{Int64},\
    \ lo::Int64, hi::Int64, #unused#::Base.Sort.InsertionSortAlg, o::Base.Order.By{var\"\
    #1#2\", Base.Order.ForwardOrdering})\n      @ Base.Sort ./sort.jl:507\n    [4]\
    \ sort!(v::Vector{Int64}, lo::Int64, hi::Int64, a::Base.Sort.QuickSortAlg, o::Base.Order.By{var\"\
    #1#2\", Base.Order.ForwardOrdering})\n      @ Base.Sort ./sort.jl:574\n    [5]\
    \ sort!\n      @ ./sort.jl:664 [inlined]\n    [6] #sort!#8\n      @ ./sort.jl:725\
    \ [inlined]\n    [7] #sort#9\n      @ ./sort.jl:772 [inlined]\n    [8] sort_array(arr::Vector{Int64})\n\
    \      @ Main /tmp/tmp2f4j94uf.jl:9\n    [9] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmp2f4j94uf.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmp2f4j94uf.jl:15\ntest set:\
    \ Error During Test at /tmp/tmp2f4j94uf.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: nones\
    \ not defined\n  Stacktrace:\n    [1] (::var\"#1#2\")(x::Int64)\n      @ Main\
    \ /tmp/tmp2f4j94uf.jl:9\n    [2] lt(o::Base.Order.By{var\"#1#2\", Base.Order.ForwardOrdering},\
    \ a::Int64, b::Int64)\n      @ Base.Order ./ordering.jl:111\n    [3] sort!(v::Vector{Int64},\
    \ lo::Int64, hi::Int64, #unused#::Base.Sort.InsertionSortAlg, o::Base.Order.By{var\"\
    #1#2\", Base.Order.ForwardOrdering})\n      @ Base.Sort ./sort.jl:507\n    [4]\
    \ sort!(v::Vector{Int64}, lo::Int64, hi::Int64, a::Base.Sort.QuickSortAlg, o::Base.Order.By{var\"\
    #1#2\", Base.Order.ForwardOrdering})\n      @ Base.Sort ./sort.jl:574\n    [5]\
    \ sort!\n      @ "
  timestamp: 1659821995
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    println(\"$arr\")\n    arr=sort(arr, by=bin_ones)\n    println(\"$arr\"\
    )\n    return arr\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\
    \t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmpsic8p7jw.jl:16

    '
  stdout: "[1, 5, 2, 3, 4]\ntest set: Error During Test at /tmp/tmpsic8p7jw.jl:19\n\
    \  Test threw exception\n  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4,\
    \ 3, 5]\n  UndefVarError: bin_ones not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmpsic8p7jw.jl:10\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpsic8p7jw.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpsic8p7jw.jl:18\n[-2, -3, -4,\
    \ -5, -6]\ntest set: Error During Test at /tmp/tmpsic8p7jw.jl:20\n  Test threw\
    \ exception\n  Expression: candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5,\
    \ -3]\n  UndefVarError: bin_ones not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmpsic8p7jw.jl:10\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpsic8p7jw.jl:20 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpsic8p7jw.jl:18\n[1, 0, 2,\
    \ 3, 4]\ntest set: Error During Test at /tmp/tmpsic8p7jw.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3]\n  UndefVarError:\
    \ bin_ones not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmpsic8p7jw.jl:10\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpsic8p7jw.jl:21 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpsic8p7jw.jl:18\nInt64[]\n\
    test set: Error During Test at /tmp/tmpsic8p7jw.jl:22\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  UndefVarError:\
    \ bin_ones not defined\n  Stacktrace:"
  timestamp: 1659821996
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    #return the sorted array\nend\n                \"\"\"\n    Test.assert_equals(sort_array([1,2,3,4,5,6,7,8,9]),\
    \ [1,2,4,8,3,5,6,7,9])\n    Test.assert_equals(sort_array([23,0,6,8,2,15,6,3,14]),\
    \ [0,2,3,6,8,6,14,15,23])\n\"\"\"\nusing Test\n\n@testset begin\n\ncandidate =\
    \ sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: cannot document the following expression:\n\nusing Test\n\
    \nStacktrace:\n [1] error(::String, ::String)\n   @ Base ./error.jl:42\n [2] top-level\
    \ scope\n   @ /tmp/tmp53r2p8th.jl:11\nin expression starting at /tmp/tmp53r2p8th.jl:11\n"
  stdout: ''
  timestamp: 1659821994
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    \n    j = 0\n    ones = []\n    for i in arr\n        j = j + 1\n    \
    \    # convert to binary\n        bin = Int(string(i, base=2))\n        sum1 =\
    \  sum(digits(bin))\n        push!(ones, sum1)\n    end\n    \n    # sort based\
    \ on ones in binary ascending order\n    sorted = sort(arr, by=ones)\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4])\
    \ == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6,\
    \ -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpuhdseuho.jl:8\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpuhdseuho.jl:1\n\
    in expression starting at /tmp/tmpuhdseuho.jl:1\n"
  stdout: ''
  timestamp: 1659821994
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    # Your code goes here\n    sorted_array = sort(arr, by=to_bin_str)\n \
    \   return sorted_array\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\
    \t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmpfw7rwndt.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpfw7rwndt.jl:18\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ to_bin_str not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmpfw7rwndt.jl:10\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpfw7rwndt.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpfw7rwndt.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpfw7rwndt.jl:19\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: to_bin_str\
    \ not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmpfw7rwndt.jl:10\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpfw7rwndt.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpfw7rwndt.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpfw7rwndt.jl:20\n  Test threw exception\n  Expression:\
    \ candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3]\n  UndefVarError: to_bin_str not\
    \ defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmpfw7rwndt.jl:10\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpfw7rwndt.jl:20 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpfw7rwndt.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpfw7rwndt.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(Vector{Int64}([])) == Vector{Int64}([])\n  UndefVarError: to_bin_str\
    \ not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main\
    \ /t"
  timestamp: 1659821996
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    \"\"\"Returns the sorted array based on their ones in binary\"\"\"\n \
    \   size = length(arr)\n    arr_ones = ones(size)\n    arr_decimal = copy(arr)\n\
    \    for i in 1:size\n        arr_ones[i] = count_ones(arr[i])\n    end\n    sort(arr_ones,\
    \ arr_decimal)\n    return arr_decimal\nend\nusing Test\n\n@testset begin\n\n\
    candidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\
    \t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1,\
    \ 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmp3vejcttr.jl:21

    '
  stdout: "test set: Error During Test at /tmp/tmp3vejcttr.jl:24\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  MethodError: no\
    \ method matching sort(::Vector{Float64}, ::Vector{Int64})\n  Closest candidates\
    \ are:\n    sort(::AbstractVector; kws...) at ~/.conda/envs/polyglot/share/julia/base/sort.jl:772\n\
    \    sort(::AbstractArray; dims, alg, lt, by, rev, order) at ~/.conda/envs/polyglot/share/julia/base/sort.jl:1030\n\
    \  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmp3vejcttr.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp3vejcttr.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp3vejcttr.jl:23\ntest set:\
    \ Error During Test at /tmp/tmp3vejcttr.jl:25\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  MethodError: no method\
    \ matching sort(::Vector{Float64}, ::Vector{Int64})\n  Closest candidates are:\n\
    \    sort(::AbstractVector; kws...) at ~/.conda/envs/polyglot/share/julia/base/sort.jl:772\n\
    \    sort(::AbstractArray; dims, alg, lt, by, rev, order) at ~/.conda/envs/polyglot/share/julia/base/sort.jl:1030\n\
    \  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmp3vejcttr.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp3vejcttr.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp3vejcttr.jl:23\ntest set:\
    \ Error During Test at /tmp/tmp3vejcttr.jl:26\n  Test threw exception\n  Expression:\
    \ candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3]\n  MethodError: no method matching\
    \ sort(::Vector{Float64}, ::Vector{Int64})\n  Closest candidates are:\n    sort(::AbstractVector;\
    \ kws...) at ~/.conda/envs/polyglot/share/julia/base/"
  timestamp: 1659821998
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    reverse = sort(arr, by = x -> count_ones(x), rev = true)\n    return reverse\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpwc47kwvj.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmpwc47kwvj.jl:17\n  Expression: candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n   Evaluated: [5, 3, 1, 2, 4] == [1, 2, 4,\
    \ 3, 5]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwc47kwvj.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwc47kwvj.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpwc47kwvj.jl:18\n  Expression: candidate([-2, -3, -4, -5, -6])\
    \ == [-4, -2, -6, -5, -3]\n   Evaluated: [-2, -3, -5, -4, -6] == [-4, -2, -6,\
    \ -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwc47kwvj.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwc47kwvj.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpwc47kwvj.jl:19\n  Expression: candidate([1, 0, 2, 3, 4]) ==\
    \ [0, 1, 2, 4, 3]\n   Evaluated: [3, 1, 2, 4, 0] == [0, 1, 2, 4, 3]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwc47kwvj.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwc47kwvj.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpwc47kwvj.jl:21\n  Expression: candidate([2, 5, 77, 4, 5, 3,\
    \ 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\n   Evaluated: [77, 7,\
    \ 5, 5, 3, 5, 3, 2, 4, 2, 4] == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwc47kwvj.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwc47kwvj.jl:16\ntest set"
  timestamp: 1659821996
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    return sort(arr, by=x->(count(digits(x, base=2)), x))\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4])\
    \ == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6,\
    \ -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpdxnzjkks.jl:13

    '
  stdout: "test set: Error During Test at /tmp/tmpdxnzjkks.jl:16\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  TypeError: non-boolean\
    \ (Int64) used in boolean context\n  Stacktrace:\n    [1] _simple_count\n    \
    \  @ ./reduce.jl:1206 [inlined]\n    [2] _count\n      @ ./reducedim.jl:407 [inlined]\n\
    \    [3] #count#735\n      @ ./reducedim.jl:405 [inlined]\n    [4] #count#734\n\
    \      @ ./reducedim.jl:404 [inlined]\n    [5] count\n      @ ./reducedim.jl:404\
    \ [inlined]\n    [6] #1\n      @ /tmp/tmpdxnzjkks.jl:9 [inlined]\n    [7] lt\n\
    \      @ ./ordering.jl:111 [inlined]\n    [8] sort!(v::Vector{Int64}, lo::Int64,\
    \ hi::Int64, #unused#::Base.Sort.InsertionSortAlg, o::Base.Order.By{var\"#1#2\"\
    , Base.Order.ForwardOrdering})\n      @ Base.Sort ./sort.jl:507\n    [9] sort!(v::Vector{Int64},\
    \ lo::Int64, hi::Int64, a::Base.Sort.QuickSortAlg, o::Base.Order.By{var\"#1#2\"\
    , Base.Order.ForwardOrdering})\n      @ Base.Sort ./sort.jl:574\n   [10] sort!\n\
    \      @ ./sort.jl:664 [inlined]\n   [11] #sort!#8\n      @ ./sort.jl:725 [inlined]\n\
    \   [12] #sort#9\n      @ ./sort.jl:772 [inlined]\n   [13] sort_array(arr::Vector{Int64})\n\
    \      @ Main /tmp/tmpdxnzjkks.jl:9\n   [14] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [15] macro expansion\n      @ /tmp/tmpdxnzjkks.jl:16 [inlined]\n\
    \   [16] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [17] top-level scope\n      @ /tmp/tmpdxnzjkks.jl:15\ntest set:\
    \ Error During Test at /tmp/tmpdxnzjkks.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  TypeError: non-boolean\
    \ (Int64) used in boolean context\n  Stacktrace:\n    [1] _simple_count\n    \
    \  @ ./reduce.jl:1206 [inlined]\n    [2] _count\n      @ ./reducedim.jl:407 [inlined]\n\
    \    [3] #count#735\n      @ ./reducedim.jl:405 [inlined]\n    [4] #count#734\n\
    \      @ ./reducedim.jl:404 [inlined]\n    [5] count\n      @ ./reducedim.jl:404\
    \ [inlined]\n    [6] #1\n      @ /tmp/tmpdxnzjkks.jl:9 [inlined]\n    [7] lt\n\
    \      @ ."
  timestamp: 1659821996
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    # ...\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t\
    @test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3,\
    \ -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) ==\
    \ [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmpkx_6texk.jl:13

    '
  stdout: "test set: Error During Test at /tmp/tmpkx_6texk.jl:16\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type Vector{Int64}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at ~/.conda/envs/polyglot/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at ~/.conda/envs/polyglot/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmpkx_6texk.jl:10\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkx_6texk.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkx_6texk.jl:15\ntest set:\
    \ Error During Test at /tmp/tmpkx_6texk.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type Vector{Int64}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at ~/.conda/envs/polyglot/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at ~/.conda/envs/polyglot/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmpkx_6texk.jl:10\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkx_6texk.jl:17 [inlined]\n\
    \   ["
  timestamp: 1659821998
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n\"\"\"\n[7,3,9,6,0,1,8,10,4,2,5] -> [0,1,2,4,3,5,6,8,7,9,10]\n[7,3,9,6,0,1,8,10,4,2,5]\
    \ -> [0,1,2,4,3,5,6,8,7,9,10]\n[7,3,9,6,0,1,8,10,4,2,5] -> [0,1,2,4,3,5,6,8,7,9,10]\n\
    [7,3,9,6,0,1,8,10,4,2,5] -> [0,1,2,4,3,5,6,8,7,9,10]\n                \"\"\"\n\
    using Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpptdvzjco.jl:8\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpptdvzjco.jl:1\n\
    in expression starting at /tmp/tmpptdvzjco.jl:1\n"
  stdout: ''
  timestamp: 1659821995
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n  binary_onn_off = map(x -> convert(Int64,x->Binary(x)),arr)\n  sort(arr,\
    \ by = x -> (sum(collect(binary_onn_off[x])), x))\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1,\
    \ 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\
    \t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmp8049b1rh.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmp8049b1rh.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  MethodError: Cannot\
    \ `convert` an object of type var\"#2#5\" to an object of type Int64\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer at ~/.conda/envs/polyglot/share/julia/base/pointer.jl:23\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/number.jl:7\n\
    \    ...\n  Stacktrace:\n    [1] (::var\"#1#4\")(x::Int64)\n      @ Main /tmp/tmp8049b1rh.jl:9\n\
    \    [2] iterate\n      @ ./generator.jl:47 [inlined]\n    [3] _collect\n    \
    \  @ ./array.jl:744 [inlined]\n    [4] collect_similar\n      @ ./array.jl:653\
    \ [inlined]\n    [5] map\n      @ ./abstractarray.jl:2867 [inlined]\n    [6] sort_array(arr::Vector{Int64})\n\
    \      @ Main /tmp/tmp8049b1rh.jl:9\n    [7] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [8] macro expansion\n      @ /tmp/tmp8049b1rh.jl:17 [inlined]\n\
    \    [9] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [10] top-level scope\n      @ /tmp/tmp8049b1rh.jl:16\ntest set:\
    \ Error During Test at /tmp/tmp8049b1rh.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  MethodError: Cannot\
    \ `convert` an object of type var\"#2#5\" to an object of type Int64\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer at ~/.conda/envs/polyglot/share/julia/base/pointer.jl:23\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/number.jl:7\n\
    \    ...\n  Stacktrace:\n    [1] (::var\"#1#4\")(x::Int64)\n      @ Main /tmp/tmp8049b1rh.jl:9\n\
    \    [2] iterate\n      @ ./generator.jl:47 [inlined]\n    [3] _collect\n "
  timestamp: 1659821998
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    size_arr = length(arr)\n    if size_arr == 0\n        return arr\n   \
    \ end\n    ones = zeros(Int64, size_arr)\n    for i in 1:size_arr\n        temp\
    \ = 0\n        while arr[i] > 0\n            temp += arr[i] % 2\n            arr[i]\
    \ /= 2\n        end\n        ones[i] = temp\n    end\n    merged = Dict(arr[i]\
    \ => ones[i] for i in 1:size_arr)\n    sorted_dict = sort(merged, by = (_[2]))\n\
    \    return collect(keys(sorted_dict))\nend\nusing Test\n\n@testset begin\n\n\
    candidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\
    \t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1,\
    \ 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: all-underscore identifier used as rvalue around\
    \ /tmp/tmp9_9o9cz8.jl:23\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp9_9o9cz8.jl:1\n\
    in expression starting at /tmp/tmp9_9o9cz8.jl:1\n"
  stdout: ''
  timestamp: 1659821995
- exit_code: -1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    return sort(arr, by = n->(sum(digits(n, 2)), n))\nend\nsort_array([1,2,3,4,5,6,7,8,9,10])\n\
    using Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: Timeout
  stderr: 'b''ERROR: LoadError: MethodError: no method matching digits(::Int64, ::Int64)\nClosest
    candidates are:\n  digits(::Integer; base, pad) at ~/.conda/envs/polyglot/share/julia/base/intfuncs.jl:854\n  digits(!Matched::Type{<:Integer},
    ::Integer; base, pad) at ~/.conda/envs/polyglot/share/julia/base/intfuncs.jl:857\nStacktrace:\n
    [1] (::var"#1#2")'''
  stdout: None
  timestamp: 1659821998
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    bin_vec = convert(Array{Int64,1}, convert(Array{Int64,1}, [sum(digits(Int(x),2))\
    \ for x in arr]))\n    #Sorting array based on number of ones in binary representation\n\
    \    bin_sort_vec = sortperm(bin_vec)\n    #Then sorting based on decimal value\n\
    \    dec_sort_vec = sortperm(arr)\n    #Creating empty array to fill with sorted\
    \ values\n    new_vec = Array{Int64,1}(undef,length(arr))\n    #Looping over previous\
    \ sorting arrays to assign values to new array\n    for i in 1:length(arr)\n \
    \       new_vec[bin_sort_vec[i]] = arr[dec_sort_vec[i]]\n    end\n    return new_vec\n\
    end\n\"\"\"\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpxdzsjpni.jl:22\nin expression starting at\
    \ /tmp/tmpxdzsjpni.jl:22\n"
  stdout: ''
  timestamp: 1659821995
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    arr = sort(arr, rev=true)\n    return arr\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1,\
    \ 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\
    \t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 7 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpelpk9p18.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmpelpk9p18.jl:17\n  Expression: candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n   Evaluated: [5, 4, 3, 2, 1] == [1, 2, 4,\
    \ 3, 5]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpelpk9p18.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpelpk9p18.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpelpk9p18.jl:18\n  Expression: candidate([-2, -3, -4, -5, -6])\
    \ == [-4, -2, -6, -5, -3]\n   Evaluated: [-2, -3, -4, -5, -6] == [-4, -2, -6,\
    \ -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpelpk9p18.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpelpk9p18.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpelpk9p18.jl:19\n  Expression: candidate([1, 0, 2, 3, 4]) ==\
    \ [0, 1, 2, 4, 3]\n   Evaluated: [4, 3, 2, 1, 0] == [0, 1, 2, 4, 3]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpelpk9p18.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpelpk9p18.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpelpk9p18.jl:21\n  Expression: candidate([2, 5, 77, 4, 5, 3,\
    \ 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\n   Evaluated: [77, 7,\
    \ 5, 5, 5, 4, 4, 3, 3, 2, 2] == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpelpk9p18.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpelpk9p18.jl:16\ntest set"
  timestamp: 1659821997
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n  # Your code\nend\n                \"\"\"\n    Test.assert_equals(sort_array([1,2,3,4,5,6,7,8,9]),\
    \ [1,2,4,8,3,5,6,7,9])\n    Test.assert_equals(sort_array([71,98,7,3,2,1,21,62,99,32,13,11,9,12,16,56,51,43,66,43,76,80,15,76,20,12,11,7,18,9,58,71,30,71,12,7,35,2,18,21,74,71,18,81,74,56,51,41,91,25,91,66,80,41,40,40,40,40,1,50,22,95,10,38,22,70,100,24,100,45,99,41,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,])\n\
    \    ,[1,1,2,2,3,3,4,4,5,5,6,6,7,7,7,7,8,8,9,9,10,10,11,11,11,11,12,12,12,12,13,13,14,14,15,15,16,16,17,17,18,18,18,18,19,\n\
    using Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpdqk7cs18.jl:11\nin expression starting at\
    \ /tmp/tmpdqk7cs18.jl:11\n"
  stdout: ''
  timestamp: 1659821995
- exit_code: -1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    # Sort the input by number of ones in the binary representation\n    #\
    \ For equal number of ones, sort based on decimal value\n    # Good luck!\nend\n\
    using Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: Timeout
  stderr: 'b''ERROR: LoadError: '''
  stdout: 'b''test set: Error During Test at /tmp/tmplwzavhij.jl:18\n  Test threw
    exception\n  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  MethodError:
    Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n  Closest
    candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)
    where T<:AbstractArray at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n    convert(::Type{T},
    !Matched::AbstractArray) where T<:Array at ~/.conda/envs/polyglot/share/julia/base/array.jl:554\n    convert(::Type{T},
    !Matched::T) where T<:AbstractArray at ~/.conda/envs/polyglot/share/julia/base/abstractarray.jl:16\n    ...\n  Stacktrace:\n   [1]
    sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmplwzavhij.jl:12\n   [2] macro
    expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmplwzavhij.jl:18 [inlined]\n   [4]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmplwzavhij.jl:17\ntest set: Error
    During Test at /tmp/tmplwzavhij.jl:19\n  Test threw exception\n  Expression: candidate([-2,
    -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  MethodError: Cannot `convert` an object
    of type Nothing to an object of type Vector{Int64}\n  Closest candidates are:\n    convert(::Type{T},
    !Matched::LinearAlgebra.Factorization) where T<:AbstractArray at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n    convert(::Type{T},
    !Matched::AbstractArray) where T<:Array at ~/.conda/envs/polyglot/share/julia/base/array.jl:554\n    convert(::Type{T},
    !Matched::T) where T<:AbstractArray at ~/.conda/envs/polyglot/share/julia/base/abstractarray.jl:16\n    ...\n  Stacktrace:\n   [1]
    sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmplwzavhij.jl:12\n   [2] macro
    expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ '
  timestamp: 1659821999
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    return sort(arr, by = (x) -> (countones(x), x))\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1,\
    \ 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\
    \t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpeh6j9thh.jl:13

    '
  stdout: "test set: Error During Test at /tmp/tmpeh6j9thh.jl:16\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ countones not defined\n  Stacktrace:\n    [1] (::var\"#1#2\")(x::Int64)\n  \
    \    @ Main /tmp/tmpeh6j9thh.jl:9\n    [2] lt(o::Base.Order.By{var\"#1#2\", Base.Order.ForwardOrdering},\
    \ a::Int64, b::Int64)\n      @ Base.Order ./ordering.jl:111\n    [3] sort!(v::Vector{Int64},\
    \ lo::Int64, hi::Int64, #unused#::Base.Sort.InsertionSortAlg, o::Base.Order.By{var\"\
    #1#2\", Base.Order.ForwardOrdering})\n      @ Base.Sort ./sort.jl:507\n    [4]\
    \ sort!(v::Vector{Int64}, lo::Int64, hi::Int64, a::Base.Sort.QuickSortAlg, o::Base.Order.By{var\"\
    #1#2\", Base.Order.ForwardOrdering})\n      @ Base.Sort ./sort.jl:574\n    [5]\
    \ sort!\n      @ ./sort.jl:664 [inlined]\n    [6] #sort!#8\n      @ ./sort.jl:725\
    \ [inlined]\n    [7] #sort#9\n      @ ./sort.jl:772 [inlined]\n    [8] sort_array(arr::Vector{Int64})\n\
    \      @ Main /tmp/tmpeh6j9thh.jl:9\n    [9] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpeh6j9thh.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpeh6j9thh.jl:15\ntest set:\
    \ Error During Test at /tmp/tmpeh6j9thh.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: countones\
    \ not defined\n  Stacktrace:\n    [1] (::var\"#1#2\")(x::Int64)\n      @ Main\
    \ /tmp/tmpeh6j9thh.jl:9\n    [2] lt(o::Base.Order.By{var\"#1#2\", Base.Order.ForwardOrdering},\
    \ a::Int64, b::Int64)\n      @ Base.Order ./ordering.jl:111\n    [3] sort!(v::Vector{Int64},\
    \ lo::Int64, hi::Int64, #unused#::Base.Sort.InsertionSortAlg, o::Base.Order.By{var\"\
    #1#2\", Base.Order.ForwardOrdering})\n      @ Base.Sort ./sort.jl:507\n    [4]\
    \ sort!(v::Vector{Int64}, lo::Int64, hi::Int64, a::Base.Sort.QuickSortAlg, o::Base.Order.By{var\"\
    #1#2\", Base.Order.ForwardOrdering})\n      @ Base.Sort ./sort.jl:574\n    [5]\
    \ sort!\n"
  timestamp: 1659821998
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    #sort array by binary representation\n    #sort by decimal value if number\
    \ of ones are equal\n    #return result\nend\nusing Test\n\n@testset begin\n\n\
    candidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\
    \t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1,\
    \ 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmpfhsh_5kc.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpfhsh_5kc.jl:18\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type Vector{Int64}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at ~/.conda/envs/polyglot/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at ~/.conda/envs/polyglot/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmpfhsh_5kc.jl:12\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpfhsh_5kc.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpfhsh_5kc.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpfhsh_5kc.jl:19\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type Vector{Int64}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at ~/.conda/envs/polyglot/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at ~/.conda/envs/polyglot/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmpfhsh_5kc.jl:12\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpfhsh_5kc.jl:19 [inlined]\n\
    \   ["
  timestamp: 1659821999
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    # your code here\nend\n\"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp694vbhs_.jl:11\nin expression starting at\
    \ /tmp/tmp694vbhs_.jl:11\n"
  stdout: ''
  timestamp: 1659821996
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    \n    # your code here\n    \nend\n\"\"\"\n    For example:\n        \
    \        \"\"\"\nsort_array([1,2,3,4,5,6,7,8,9,10]) == [1,2,4,8,3,5,6,7,9,10]\n\
    using Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: cannot document the following expression:\n\nsort_array([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]) == [1, 2, 4, 8, 3, 5, 6, 7, 9, 10]\n\nStacktrace:\n\
    \ [1] error(::String, ::String)\n   @ Base ./error.jl:42\n [2] top-level scope\n\
    \   @ /tmp/tmp7z93ynfr.jl:13\nin expression starting at /tmp/tmp7z93ynfr.jl:13\n"
  stdout: ''
  timestamp: 1659821997
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    # sort by number of 1s in binary representation, then value\n    sort(arr,\
    \ by = [count_ones, identity])\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpx5esoe8z.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpx5esoe8z.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  MethodError: objects\
    \ of type Vector{Function} are not callable\n  Use square brackets [] for indexing\
    \ an Array.\n  Stacktrace:\n    [1] lt(o::Base.Order.By{Vector{Function}, Base.Order.ForwardOrdering},\
    \ a::Int64, b::Int64)\n      @ Base.Order ./ordering.jl:111\n    [2] sort!\n \
    \     @ ./sort.jl:507 [inlined]\n    [3] sort!\n      @ ./sort.jl:574 [inlined]\n\
    \    [4] sort!\n      @ ./sort.jl:664 [inlined]\n    [5] #sort!#8\n      @ ./sort.jl:725\
    \ [inlined]\n    [6] sort(v::Vector{Int64}; kws::Base.Pairs{Symbol, Vector{Function},\
    \ Tuple{Symbol}, NamedTuple{(:by,), Tuple{Vector{Function}}}})\n      @ Base.Sort\
    \ ./sort.jl:772\n    [7] sort_array(arr::Vector{Int64})\n      @ Main /tmp/tmpx5esoe8z.jl:10\n\
    \    [8] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [9] macro expansion\n      @ /tmp/tmpx5esoe8z.jl:17 [inlined]\n\
    \   [10] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [11] top-level scope\n      @ /tmp/tmpx5esoe8z.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpx5esoe8z.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  MethodError: objects\
    \ of type Vector{Function} are not callable\n  Use square brackets [] for indexing\
    \ an Array.\n  Stacktrace:\n    [1] lt(o::Base.Order.By{Vector{Function}, Base.Order.ForwardOrdering},\
    \ a::Int64, b::Int64)\n      @ Base.Order ./ordering.jl:111\n    [2] sort!\n \
    \     @ ./sort.jl:507 [inlined]\n    [3] sort!\n      @ ./sort.jl:574 [inlined]\n\
    \    [4] sort!\n      @ ./sort.jl:664 [inlined]\n    [5] #sort!#8\n      @ ./sort.jl:725\
    \ [inlined]\n    [6] sort(v::Vector{Int64}; kws::Base.Pairs{Symbol, Vector{Function},\
    \ Tuple{Symbol}, NamedTuple{(:by,), Tuple{Vector{Function}}}})\n      @ Base.Sort\
    \ ./sort.jl:772\n    [7] sort_array(arr::Vector{Int64})\n      @ Main /tmp/tmpx5esoe8z.jl:10\n\
    \    [8] macro expansion\n      @ ~/.conda/envs/pol"
  timestamp: 1659822000
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    # YOUR CODE HERE\nend\n\"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpcfwlpx8n.jl:11\nin expression starting at\
    \ /tmp/tmpcfwlpx8n.jl:11\n"
  stdout: ''
  timestamp: 1659821997
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    # your code here\nend\n                \"\"\"\n    You can use bitstring\
    \ function to get bitstring of an integer.\n    So, you will have,\n         \
    \       \"\"\"\nbitstring(0)  == \"0\"\nbitstring(1)  == \"1\"\nbitstring(2) \
    \ == \"10\"\nbitstring(3)  == \"11\"\nbitstring(4)  == \"100\"\nbitstring(5) \
    \ == \"101\"\nbitstring(6)  == \"110\"\nbitstring(7)  == \"111\"\n           \
    \     \"\"\"\n    and so on\n    Test.describe(\"sort_array\")\n    Test.it(\"\
    Basic tests\")\n    Test.assert_equals(sort_array([0,1,2,3,4,5,6,7,8,9]),[0,1,2,4,8,3,5,6,7,9])\n\
    \    Test.assert_equals(sort_array([0,1,2,4,8,16,32,64,128,256,512,1024]),[0,1,2,4,8,16,32,64,128,256,512,1024])\n\
    \    Test.assert_equals(sort_array([10000,10000]),[10000,10000])\n    Test.assert_equals(sort_array([2048,1024,512,256,128,64,32,16,8,4,2,1]),[1,2,4,8,16,32,64,128,256,512,1024,2048])\n\
    \    Test.assert_equals(sort_array([1,2,4,8,16,32,64,128,256,512,1024,2048]),[1,2,4,8,16,32,64,128,256,512,1024,2048])\n\
    \    Test.assert_equals(sort_array([42,32,0]),[0,32,42])\n                \"\"\
    \"\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: cannot document the following expression:\n\nbitstring(0)\
    \ == \"0\"\n\nStacktrace:\n [1] error(::String, ::String)\n   @ Base ./error.jl:42\n\
    \ [2] top-level scope\n   @ /tmp/tmp5ofg8dr7.jl:11\nin expression starting at\
    \ /tmp/tmp5ofg8dr7.jl:11\n"
  stdout: ''
  timestamp: 1659821997
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    # your code\nend\n\"\"\"\n    Examples\n    sort_array([1,2,3,4,5,6,7,8,9,10])\n\
    \    # should return [1,2,4,8,3,5,6,7,9,10]\nusing Test\n\n@testset begin\n\n\
    candidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\
    \t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1,\
    \ 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpjfzfvujv.jl:11\nin expression starting at\
    \ /tmp/tmpjfzfvujv.jl:11\n"
  stdout: ''
  timestamp: 1659821997
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    # sort by number of ones in binary representation\n    # then by decimal\
    \ value\n    n = length(arr)\n    return sort(arr, by = x -> [count_ones(x), x])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpo1m8ubdm.jl:16

    '
  stdout: "test set: Test Failed at /tmp/tmpo1m8ubdm.jl:20\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo1m8ubdm.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo1m8ubdm.jl:18\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  timestamp: 1659821998
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    new_arr = []\n    for i in arr\n        binary = Base.bitstring(i)\n \
    \       ones = length(Base.bitcount(i))\n        push!(new_arr, (ones,i))\n  \
    \  end\n    sorted_arr = sort(new_arr, by = x -> x[1])\n    final_arr = map(x\
    \ -> x[2], sorted_arr)\n    return final_arr\nend\nsort_array([12, 13, 14, 15,\
    \ 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34,\
    \ 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,\
    \ 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72,\
    \ 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91,\
    \ 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108,\
    \ 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124,\
    \ 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140,\
    \ 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156,\
    \ 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172,\
    \ 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188,\
    \ 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204,\
    \ 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1,\
    \ 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\
    \t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: missing separator in array expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp9wi78frj.jl:20\nin expression starting at\
    \ /tmp/tmp9wi78frj.jl:20\n"
  stdout: ''
  timestamp: 1659821997
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    # sort by number of ones in binary representation\n    arr = sort(arr,\
    \ by = x -> length(split(digits(x, 2), \"\")))\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3,\
    \ 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1,\
    \ 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp143ikklc.jl:8\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp143ikklc.jl:1\n\
    in expression starting at /tmp/tmp143ikklc.jl:1\n"
  stdout: ''
  timestamp: 1659821997
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    # sort array like this\nend\n    \"\"\"\n    Example:\n        sort_array([5,3,7,10,14])\
    \ == [3,5,10,14,7]\n    \n    Best Practices:\n        function sort_array(arr)\n\
    \            sort(arr, by=x->(count(x->x=='1', string(digits(x, 2))), x))\n  \
    \      end\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\
    \t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: cannot document the following expression:\n\nusing Test\n\
    \nStacktrace:\n [1] error(::String, ::String)\n   @ Base ./error.jl:42\n [2] top-level\
    \ scope\n   @ /tmp/tmpwbq_pa6y.jl:11\nin expression starting at /tmp/tmpwbq_pa6y.jl:11\n"
  stdout: ''
  timestamp: 1659821998
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    # convert to binary, sort, return decimal value\n    num = sort(int2bin(arr))\
    \ \n    for i = 1:length(num)\n        num[i] = bin2int(num[i])\n    end\n   \
    \ return num\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t\
    @test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3,\
    \ -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) ==\
    \ [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmpj099zsux.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmpj099zsux.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ int2bin not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmpj099zsux.jl:10\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpj099zsux.jl:21 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpj099zsux.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpj099zsux.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: int2bin\
    \ not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmpj099zsux.jl:10\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpj099zsux.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpj099zsux.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpj099zsux.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3]\n  UndefVarError: int2bin not\
    \ defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmpj099zsux.jl:10\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpj099zsux.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpj099zsux.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpj099zsux.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(Vector{Int64}([])) == Vector{Int64}([])\n  UndefVarError: int2bin\
    \ not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmpj099zs"
  timestamp: 1659822000
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    for i = 1:length(arr)\n        for j = i+1:length(arr)\n            binary_i\
    \ = convert(String, digits(arr[i], 2))\n            binary_j = convert(String,\
    \ digits(arr[j], 2))\n            num_ones_i = count(binary_i, '1')\n        \
    \    num_ones_j = count(binary_j, '1')\n            if num_ones_i == num_ones_j\n\
    \                if arr[i] > arr[j]\n                    arr[i], arr[j] = arr[j],\
    \ arr[i]\n                end\n            elseif num_ones_i > num_ones_j\n  \
    \              arr[i], arr[j] = arr[j], arr[i]\n            end\n        end\n\
    \    end\n    return arr\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\
    \t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmp9m8g97m7.jl:28

    '
  stdout: "test set: Error During Test at /tmp/tmp9m8g97m7.jl:31\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  MethodError: no\
    \ method matching digits(::Int64, ::Int64)\n  Closest candidates are:\n    digits(::Integer;\
    \ base, pad) at ~/.conda/envs/polyglot/share/julia/base/intfuncs.jl:854\n    digits(!Matched::Type{<:Integer},\
    \ ::Integer; base, pad) at ~/.conda/envs/polyglot/share/julia/base/intfuncs.jl:857\n\
    \  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmp9m8g97m7.jl:11\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp9m8g97m7.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9m8g97m7.jl:30\ntest set:\
    \ Error During Test at /tmp/tmp9m8g97m7.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  MethodError: no method\
    \ matching digits(::Int64, ::Int64)\n  Closest candidates are:\n    digits(::Integer;\
    \ base, pad) at ~/.conda/envs/polyglot/share/julia/base/intfuncs.jl:854\n    digits(!Matched::Type{<:Integer},\
    \ ::Integer; base, pad) at ~/.conda/envs/polyglot/share/julia/base/intfuncs.jl:857\n\
    \  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmp9m8g97m7.jl:11\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp9m8g97m7.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9m8g97m7.jl:30\ntest set:\
    \ Error During Test at /tmp/tmp9m8g97m7.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3]\n  MethodError: no method matching\
    \ digits(::Int64, ::Int64)\n  Closest candidates are:\n    digits(::Integer; base,\
    \ pad) at ~/.conda/envs/polyglot/share/julia/base/intfuncs.jl:854\n    digits(!Matche"
  timestamp: 1659822001
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \nend\n\"\"\"\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmph0koj1le.jl:10\nin expression starting at\
    \ /tmp/tmph0koj1le.jl:10\n"
  stdout: ''
  timestamp: 1659821998
- exit_code: -1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    \"\"\"sorts array according to number of ones in their binary representation\
    \ \n    in ascending order. For similar number of ones, sort based on decimal\
    \ value.\n    \"\"\"\n    for (i, elem) in enumerate(arr)\n        push!(arr,\
    \ elem)\n    end\n    sort!(arr, by=x->(count_ones(x), x))\n    return arr\nend\n\
    using Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659822001
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n  sort(arr, by=x->Base.bitcount(x, Int64))\nend\n\"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1,\
    \ 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\
    \t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpj8opa7nu.jl:11\nin expression starting at\
    \ /tmp/tmpj8opa7nu.jl:11\n"
  stdout: ''
  timestamp: 1659821998
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    # Get the number of ones in each integer\n    one_counts = Dict{Int64,\
    \ Int64}()\n    for i in arr\n        x = count_ones(i)\n        if haskey(one_counts,\
    \ x)\n            one_counts[x] = push!(one_counts[x], i)\n        else\n    \
    \        one_counts[x] = [i]\n        end\n    end\n    # Sort each value based\
    \ on its number of ones, and then its value\n    sorted_counts = sort(collect(keys(one_counts)))\n\
    \    out = Int64[]\n    for k in sorted_counts\n        push!(out, sort(one_counts[k]))\n\
    \    end\n    return out\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\
    \t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmp_488krtz.jl:29

    '
  stdout: "test set: Error During Test at /tmp/tmp_488krtz.jl:32\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  MethodError: Cannot\
    \ `convert` an object of type Vector{Int64} to an object of type Int64\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer at ~/.conda/envs/polyglot/share/julia/base/pointer.jl:23\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/number.jl:7\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(h::Dict{Int64, Int64}, v0::Vector{Int64},\
    \ key::Int64)\n     @ Base ./dict.jl:381\n   [2] sort_array(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmp_488krtz.jl:16\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp_488krtz.jl:32 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp_488krtz.jl:31\ntest set:\
    \ Error During Test at /tmp/tmp_488krtz.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  MethodError: Cannot\
    \ `convert` an object of type Vector{Int64} to an object of type Int64\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer at ~/.conda/envs/polyglot/share/julia/base/pointer.jl:23\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/number.jl:7\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(h::Dict{Int64, Int64}, v0::Vector{Int64},\
    \ key::Int64)\n     @ Base ./dict.jl:381\n   [2] sort_array(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmp_488krtz.jl:16\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp_488k"
  timestamp: 1659822001
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    return sortperm(arr, by=x->(count_ones(x), x))\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1,\
    \ 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\
    \t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 7 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp_ejsexj7.jl:13

    '
  stdout: "test set: Test Failed at /tmp/tmp_ejsexj7.jl:16\n  Expression: candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n   Evaluated: [1, 3, 5, 4, 2] == [1, 2, 4,\
    \ 3, 5]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_ejsexj7.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_ejsexj7.jl:15\ntest set: Test\
    \ Failed at /tmp/tmp_ejsexj7.jl:17\n  Expression: candidate([-2, -3, -4, -5, -6])\
    \ == [-4, -2, -6, -5, -3]\n   Evaluated: [5, 3, 4, 2, 1] == [-4, -2, -6, -5, -3]\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_ejsexj7.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_ejsexj7.jl:15\ntest set: Test\
    \ Failed at /tmp/tmp_ejsexj7.jl:18\n  Expression: candidate([1, 0, 2, 3, 4]) ==\
    \ [0, 1, 2, 4, 3]\n   Evaluated: [2, 1, 3, 5, 4] == [0, 1, 2, 4, 3]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_ejsexj7.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_ejsexj7.jl:15\ntest set: Test\
    \ Failed at /tmp/tmp_ejsexj7.jl:20\n  Expression: candidate([2, 5, 77, 4, 5, 3,\
    \ 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\n   Evaluated: [1, 9,\
    \ 4, 11, 6, 10, 2, 5, 7, 8, 3] == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_ejsexj7.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_ejsexj7.jl:15\ntest set: Te"
  timestamp: 1659822000
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    \"\"\" input: a 1D vector of non-negative integers\n       output: a 1D\
    \ vector of non-negative integers\nusing Test\n\n@testset begin\n\ncandidate =\
    \ sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpfufhbguk.jl:1\nin expression starting at /tmp/tmpfufhbguk.jl:1\n"
  stdout: ''
  timestamp: 1659821999
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    #your code here\n    # push!(sorted_arr, vec[i])\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4])\
    \ == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6,\
    \ -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmpytut8xk0.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpytut8xk0.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type Vector{Int64}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at ~/.conda/envs/polyglot/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at ~/.conda/envs/polyglot/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmpytut8xk0.jl:11\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpytut8xk0.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpytut8xk0.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpytut8xk0.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type Vector{Int64}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at ~/.conda/envs/polyglot/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at ~/.conda/envs/polyglot/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmpytut8xk0.jl:11\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpytut8xk0.jl:18 [inlined]\n\
    \   ["
  timestamp: 1659822002
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    #Sort according to the number of ones, if equal, sort decimally.\n   \
    \ #your code here\n    return sort(arr, by = [count_ones, identity])\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5,\
    \ 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4,\
    \ -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t\
    @test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmp348au8zl.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmp348au8zl.jl:18\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  MethodError: objects\
    \ of type Vector{Function} are not callable\n  Use square brackets [] for indexing\
    \ an Array.\n  Stacktrace:\n    [1] lt(o::Base.Order.By{Vector{Function}, Base.Order.ForwardOrdering},\
    \ a::Int64, b::Int64)\n      @ Base.Order ./ordering.jl:111\n    [2] sort!\n \
    \     @ ./sort.jl:507 [inlined]\n    [3] sort!\n      @ ./sort.jl:574 [inlined]\n\
    \    [4] sort!\n      @ ./sort.jl:664 [inlined]\n    [5] #sort!#8\n      @ ./sort.jl:725\
    \ [inlined]\n    [6] sort(v::Vector{Int64}; kws::Base.Pairs{Symbol, Vector{Function},\
    \ Tuple{Symbol}, NamedTuple{(:by,), Tuple{Vector{Function}}}})\n      @ Base.Sort\
    \ ./sort.jl:772\n    [7] sort_array(arr::Vector{Int64})\n      @ Main /tmp/tmp348au8zl.jl:11\n\
    \    [8] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [9] macro expansion\n      @ /tmp/tmp348au8zl.jl:18 [inlined]\n\
    \   [10] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [11] top-level scope\n      @ /tmp/tmp348au8zl.jl:17\ntest set:\
    \ Error During Test at /tmp/tmp348au8zl.jl:19\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  MethodError: objects\
    \ of type Vector{Function} are not callable\n  Use square brackets [] for indexing\
    \ an Array.\n  Stacktrace:\n    [1] lt(o::Base.Order.By{Vector{Function}, Base.Order.ForwardOrdering},\
    \ a::Int64, b::Int64)\n      @ Base.Order ./ordering.jl:111\n    [2] sort!\n \
    \     @ ./sort.jl:507 [inlined]\n    [3] sort!\n      @ ./sort.jl:574 [inlined]\n\
    \    [4] sort!\n      @ ./sort.jl:664 [inlined]\n    [5] #sort!#8\n      @ ./sort.jl:725\
    \ [inlined]\n    [6] sort(v::Vector{Int64}; kws::Base.Pairs{Symbol, Vector{Function},\
    \ Tuple{Symbol}, NamedTuple{(:by,), Tuple{Vector{Function}}}})\n      @ Base.Sort\
    \ ./sort.jl:772\n    [7] sort_array(arr::Vector{Int64})\n      @ Main /tmp/tmp348au8zl.jl:11\n\
    \    [8] macro expansion\n      @ ~/.conda/envs/pol"
  timestamp: 1659822001
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    sort(arr, by=x->(sum(bits(x)), x))\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3,\
    \ 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1,\
    \ 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmp558r__wa.jl:13

    '
  stdout: "test set: Error During Test at /tmp/tmp558r__wa.jl:16\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ bits not defined\n  Stacktrace:\n    [1] (::var\"#1#2\")(x::Int64)\n      @\
    \ Main /tmp/tmp558r__wa.jl:9\n    [2] lt(o::Base.Order.By{var\"#1#2\", Base.Order.ForwardOrdering},\
    \ a::Int64, b::Int64)\n      @ Base.Order ./ordering.jl:111\n    [3] sort!(v::Vector{Int64},\
    \ lo::Int64, hi::Int64, #unused#::Base.Sort.InsertionSortAlg, o::Base.Order.By{var\"\
    #1#2\", Base.Order.ForwardOrdering})\n      @ Base.Sort ./sort.jl:507\n    [4]\
    \ sort!(v::Vector{Int64}, lo::Int64, hi::Int64, a::Base.Sort.QuickSortAlg, o::Base.Order.By{var\"\
    #1#2\", Base.Order.ForwardOrdering})\n      @ Base.Sort ./sort.jl:574\n    [5]\
    \ sort!\n      @ ./sort.jl:664 [inlined]\n    [6] #sort!#8\n      @ ./sort.jl:725\
    \ [inlined]\n    [7] #sort#9\n      @ ./sort.jl:772 [inlined]\n    [8] sort_array(arr::Vector{Int64})\n\
    \      @ Main /tmp/tmp558r__wa.jl:9\n    [9] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmp558r__wa.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmp558r__wa.jl:15\ntest set:\
    \ Error During Test at /tmp/tmp558r__wa.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: bits\
    \ not defined\n  Stacktrace:\n    [1] (::var\"#1#2\")(x::Int64)\n      @ Main\
    \ /tmp/tmp558r__wa.jl:9\n    [2] lt(o::Base.Order.By{var\"#1#2\", Base.Order.ForwardOrdering},\
    \ a::Int64, b::Int64)\n      @ Base.Order ./ordering.jl:111\n    [3] sort!(v::Vector{Int64},\
    \ lo::Int64, hi::Int64, #unused#::Base.Sort.InsertionSortAlg, o::Base.Order.By{var\"\
    #1#2\", Base.Order.ForwardOrdering})\n      @ Base.Sort ./sort.jl:507\n    [4]\
    \ sort!(v::Vector{Int64}, lo::Int64, hi::Int64, a::Base.Sort.QuickSortAlg, o::Base.Order.By{var\"\
    #1#2\", Base.Order.ForwardOrdering})\n      @ Base.Sort ./sort.jl:574\n    [5]\
    \ sort!\n      @ ./"
  timestamp: 1659822001
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    order = sort(arr, by = x -> (count_bits(x), x))\n    return order\nend\n\
    using Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmp33hb5_9t.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmp33hb5_9t.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ count_bits not defined\n  Stacktrace:\n    [1] (::var\"#1#2\")(x::Int64)\n \
    \     @ Main /tmp/tmp33hb5_9t.jl:9\n    [2] lt(o::Base.Order.By{var\"#1#2\", Base.Order.ForwardOrdering},\
    \ a::Int64, b::Int64)\n      @ Base.Order ./ordering.jl:111\n    [3] sort!(v::Vector{Int64},\
    \ lo::Int64, hi::Int64, #unused#::Base.Sort.InsertionSortAlg, o::Base.Order.By{var\"\
    #1#2\", Base.Order.ForwardOrdering})\n      @ Base.Sort ./sort.jl:507\n    [4]\
    \ sort!(v::Vector{Int64}, lo::Int64, hi::Int64, a::Base.Sort.QuickSortAlg, o::Base.Order.By{var\"\
    #1#2\", Base.Order.ForwardOrdering})\n      @ Base.Sort ./sort.jl:574\n    [5]\
    \ sort!\n      @ ./sort.jl:664 [inlined]\n    [6] #sort!#8\n      @ ./sort.jl:725\
    \ [inlined]\n    [7] #sort#9\n      @ ./sort.jl:772 [inlined]\n    [8] sort_array(arr::Vector{Int64})\n\
    \      @ Main /tmp/tmp33hb5_9t.jl:9\n    [9] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmp33hb5_9t.jl:17 [inlined]\n\
    \   [11] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmp33hb5_9t.jl:16\ntest set:\
    \ Error During Test at /tmp/tmp33hb5_9t.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: count_bits\
    \ not defined\n  Stacktrace:\n    [1] (::var\"#1#2\")(x::Int64)\n      @ Main\
    \ /tmp/tmp33hb5_9t.jl:9\n    [2] lt(o::Base.Order.By{var\"#1#2\", Base.Order.ForwardOrdering},\
    \ a::Int64, b::Int64)\n      @ Base.Order ./ordering.jl:111\n    [3] sort!(v::Vector{Int64},\
    \ lo::Int64, hi::Int64, #unused#::Base.Sort.InsertionSortAlg, o::Base.Order.By{var\"\
    #1#2\", Base.Order.ForwardOrdering})\n      @ Base.Sort ./sort.jl:507\n    [4]\
    \ sort!(v::Vector{Int64}, lo::Int64, hi::Int64, a::Base.Sort.QuickSortAlg, o::Base.Order.By{var\"\
    #1#2\", Base.Order.ForwardOrdering})\n      @ Base.Sort ./sort.jl:574\n    [5]\
    \ sort"
  timestamp: 1659822001
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    return sort(arr, by = x -> (count_ones(x), x))\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1,\
    \ 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\
    \t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpj7hi5a1z.jl:13

    '
  stdout: "test set: Test Failed at /tmp/tmpj7hi5a1z.jl:17\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpj7hi5a1z.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpj7hi5a1z.jl:15\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  timestamp: 1659821984
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    \"\"\"\n        Takes an array of integers and sorts them based on the\
    \ number of 1's in their binary\n        representation.\n        \"\"\"\n   \
    \ return sort(arr, by=x->[count_ones(x), x])\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3,\
    \ 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1,\
    \ 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpf9lliobb.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpf9lliobb.jl:21\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpf9lliobb.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpf9lliobb.jl:19\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  timestamp: 1659822000
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \nend\n\"\"\"\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmph0koj1le.jl:10\nin expression starting at\
    \ /tmp/tmph0koj1le.jl:10\n"
  stdout: ''
  timestamp: 1659821998
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n  # code goes here\n  # Note: feel free to modify the return type of this\
    \ function\n  return arr; \nendfunction\n\"\"\"\n##Example\nsort_array([3, 4,\
    \ 1, 7, 5, 1, 6, 9, 5, 11, 11, 9, 5, 0, 16, 1, 1, 5, 8, 9, 3, 3, 0, 17, 14, 15,\
    \ 9, 12, 10, 16, 9, 6, 15, 5, 9, 6, 17, 5, 9, 11, 16, 5, 15, 16, 0, 5, 9, 15,\
    \ 11, 3, 16, 11, 16, 5, 9, 6, 15, 5, 9, 16, 0, 5, 9, 15, 11, 3, 16, 12, 16, 5,\
    \ 9, 16, 0, 5, 9, 15, 11, 3, 16, 11, 16, 5, 9, 16, 0, 5, 9, 15, 11, 3, 16, 11,\
    \ 16, 5, 9, 16, 0, 5, 9, 15, 11, 3, 16, 11, 16, 5, 9, 16, 0, 5, 9, 15, 11, 3,\
    \ 16, 11, 16, 5, 9, 16, 0, 5, 9, 15, 11, 3, 16, 11, 16, 5, 9, 16, 0, 5, 9, 15,\
    \ 11, 3, 16, 11, 16, 5, 9, 16, 0, 5, 9, 15, 11, 3, 16, 11, 16, 5, 9, 16, 0, 5,\
    \ 9, 15, 11, 3, 16, 11, 16, 5, 9, 16, 0, 5, 9, 15, 11, 3, 16, 11, 16, 5, 9, 16,\
    \ 0, 5, 9, 15, 11, 3, 16, 11, 16, 5, 9, 16, 0, 5, 9, 15, 11, 3, 16, 11, 16, 5,\
    \ 9, 16, 0, 5, 9, 15, 11, 3, 16, 11, 16, 5, 9, 16, 0, 5, 9, 15, 11, 3, 16, 11,\
    \ 16, 5, 9, 16, 0, 5, 9, 15, 11, 3, 16, 11,\nusing Test\n\n@testset begin\n\n\
    candidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\
    \t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1,\
    \ 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpx17szs3y.jl:1\nin expression starting at /tmp/tmpx17szs3y.jl:1\n"
  stdout: ''
  timestamp: 1659821999
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    #your code here \nend\n             \"\"\"\n    Example:\n        sort_array([0,1,2,3,4,5,6,7,8,9])\
    \ == [0,1,2,4,8,3,5,6,7,9]\n        # [0,1,2,4,8,3,5,6,7,9] is the decimal equivalent\
    \ of \n        # [0,1,10,100,1000,11,101,110,111,1001]\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1,\
    \ 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\
    \t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp_vmmap5x.jl:11\nin expression starting at\
    \ /tmp/tmp_vmmap5x.jl:11\n"
  stdout: ''
  timestamp: 1659821999
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    mask = 1\n    l = zeros(Int64,size(arr,1))\n    for i in 1:size(arr,1)\n\
    \        while mask <= arr[i]\n            l[i] += arr[i] & mask != 0 ? 1 : 0\n\
    \            mask <<= 1\n        end\n        mask = 1\n    end\n    sortperm(l,1)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmpwnjpbbuz.jl:22

    '
  stdout: "test set: Error During Test at /tmp/tmpwnjpbbuz.jl:25\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  MethodError: no\
    \ method matching sortperm(::Vector{Int64}, ::Int64)\n  Closest candidates are:\n\
    \    sortperm(::AbstractVector; alg, lt, by, rev, order) at ~/.conda/envs/polyglot/share/julia/base/sort.jl:907\n\
    \  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmpwnjpbbuz.jl:18\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpwnjpbbuz.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpwnjpbbuz.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpwnjpbbuz.jl:26\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  MethodError: no method\
    \ matching sortperm(::Vector{Int64}, ::Int64)\n  Closest candidates are:\n   \
    \ sortperm(::AbstractVector; alg, lt, by, rev, order) at ~/.conda/envs/polyglot/share/julia/base/sort.jl:907\n\
    \  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmpwnjpbbuz.jl:18\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpwnjpbbuz.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpwnjpbbuz.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpwnjpbbuz.jl:27\n  Test threw exception\n  Expression:\
    \ candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3]\n  MethodError: no method matching\
    \ sortperm(::Vector{Int64}, ::Int64)\n  Closest candidates are:\n    sortperm(::AbstractVector;\
    \ alg, lt, by, rev, order) at ~/.conda/envs/polyglot/share/julia/base/sort.jl:907\n\
    \  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmpwnjpbbuz.jl:18\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/"
  timestamp: 1659822002
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    return sort(arr, by=sort_array_helper)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3,\
    \ 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1,\
    \ 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmpa55bpwzd.jl:13

    '
  stdout: "test set: Error During Test at /tmp/tmpa55bpwzd.jl:16\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ sort_array_helper not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmpa55bpwzd.jl:9\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpa55bpwzd.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpa55bpwzd.jl:15\ntest set:\
    \ Error During Test at /tmp/tmpa55bpwzd.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: sort_array_helper\
    \ not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmpa55bpwzd.jl:9\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpa55bpwzd.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpa55bpwzd.jl:15\ntest set:\
    \ Error During Test at /tmp/tmpa55bpwzd.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3]\n  UndefVarError: sort_array_helper\
    \ not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmpa55bpwzd.jl:9\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpa55bpwzd.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpa55bpwzd.jl:15\ntest set:\
    \ Error During Test at /tmp/tmpa55bpwzd.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(Vector{Int64}([])) == Vector{Int64}([])\n  UndefVarError: sort_array_helper\
    \ not defined\n  Stacktrace:\n   [1] sort_array(arr::Vect"
  timestamp: 1659822002
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \nend\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmpk_14kelu.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpk_14kelu.jl:15\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type Vector{Int64}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at ~/.conda/envs/polyglot/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at ~/.conda/envs/polyglot/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmpk_14kelu.jl:9\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpk_14kelu.jl:15 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpk_14kelu.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpk_14kelu.jl:16\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type Vector{Int64}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at ~/.conda/envs/polyglot/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at ~/.conda/envs/polyglot/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmpk_14kelu.jl:9\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpk_14kelu.jl:16 [inlined]\n\
    \   [4]"
  timestamp: 1659822003
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    return sort(arr, by = x -> (count_ones(x), x))\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1,\
    \ 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\
    \t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpj7hi5a1z.jl:13

    '
  stdout: "test set: Test Failed at /tmp/tmpj7hi5a1z.jl:17\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpj7hi5a1z.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpj7hi5a1z.jl:15\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  timestamp: 1659821984
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    # your code goes here\nend\n                \"\"\"\n    E.g. If a = [1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]\n    then result = [1, 2, 4, 8, 3, 5, 6, 7, 9, 10]\n\
    \    because they are sorted according to number of ones in\n    their binary\
    \ representation.\n    \"\"\"\n    # Your code here\n    return result\n\"\"\"\
    \nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: UndefVarError: result not defined\nStacktrace:\n [1]\
    \ top-level scope\n   @ /tmp/tmp2l93n8xi.jl:18\nin expression starting at /tmp/tmp2l93n8xi.jl:18\n"
  stdout: ''
  timestamp: 1659822000
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    #\n    # TODO: implement me!!!\n    #\nend\n\"\"\"\n    The input is an\
    \ Array of non-negative integers which are sorted according to\n    number of\
    \ ones in their binary representation in ascending order.\n    For similar number\
    \ of ones, sorted based on decimal value.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp5f5x904q.jl:13\nin expression starting at\
    \ /tmp/tmp5f5x904q.jl:13\n"
  stdout: ''
  timestamp: 1659822000
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    # your code here\nend\n\"\"\"\n    Examples\n            sort_array([0,\
    \ 1, 2, 3, 4, 5, 6, 7, 8, 9])\n            # [0, 1, 2, 4, 8, 3, 5, 6, 7, 9]\n\
    \            \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\
    \t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: cannot document the following expression:\n\nusing Test\n\
    \nStacktrace:\n [1] error(::String, ::String)\n   @ Base ./error.jl:42\n [2] top-level\
    \ scope\n   @ /tmp/tmps606b971.jl:11\nin expression starting at /tmp/tmps606b971.jl:11\n"
  stdout: ''
  timestamp: 1659822000
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    \"\"\"sort_array(arr)\n        Sort an array of non-negative integers\n\
    \        according to number of ones in their binary representation in ascending\
    \ order.\"\"\"\n    sort_by(arr, x -> [count_ones(x), x])\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4])\
    \ == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6,\
    \ -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmpkyfxc1k1.jl:16

    '
  stdout: "test set: Error During Test at /tmp/tmpkyfxc1k1.jl:19\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ sort_by not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmpkyfxc1k1.jl:12\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkyfxc1k1.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkyfxc1k1.jl:18\ntest set:\
    \ Error During Test at /tmp/tmpkyfxc1k1.jl:20\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: sort_by\
    \ not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkyfxc1k1.jl:12\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkyfxc1k1.jl:20 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkyfxc1k1.jl:18\ntest set:\
    \ Error During Test at /tmp/tmpkyfxc1k1.jl:21\n  Test threw exception\n  Expression:\
    \ candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3]\n  UndefVarError: sort_by not\
    \ defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmpkyfxc1k1.jl:12\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkyfxc1k1.jl:21 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkyfxc1k1.jl:18\ntest set:\
    \ Error During Test at /tmp/tmpkyfxc1k1.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(Vector{Int64}([])) == Vector{Int64}([])\n  UndefVarError: sort_by\
    \ not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkyfxc1"
  timestamp: 1659822002
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n  n = length(arr)\n  for i in 1:n-1\n    for j in i+1:n\n      if countones(arr[i])>countones(arr[j])\
    \ || (countones(arr[i])==countones(arr[j]) && arr[i]>arr[j])\n        t = arr[i]\n\
    \        arr[i] = arr[j]\n        arr[j] = t\n      end\n    end\n  end\n  return\
    \ arr\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpnd11xg74.jl:23

    '
  stdout: "test set: Error During Test at /tmp/tmpnd11xg74.jl:26\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ countones not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmpnd11xg74.jl:12\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpnd11xg74.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpnd11xg74.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpnd11xg74.jl:27\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: countones\
    \ not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmpnd11xg74.jl:12\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpnd11xg74.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpnd11xg74.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpnd11xg74.jl:28\n  Test threw exception\n  Expression:\
    \ candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3]\n  UndefVarError: countones not\
    \ defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmpnd11xg74.jl:12\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpnd11xg74.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpnd11xg74.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpnd11xg74.jl:30\n  Test threw exception\n  Expression:\
    \ candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5,\
    \ 7, 77]\n  UndefVarError: countones not defined\n  Stacktrace:\n   [1] sort_array(arr:"
  timestamp: 1659822002
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n  # ...\nend\n                \"\"\"\n    Test.assert_equals(sort_array([1,2,3,4,5,6,7,8,9,10]),\
    \ [1,2,4,8,3,5,6,7,9,10])\n    Test.assert_equals(sort_array([1000,10000]), [1000,10000])\n\
    \    Test.assert_equals(sort_array([23,345,654,567,234,734,2345,4456,789,865]),\n\
    \    [23,345,567,2345,654,734,4456,789,865,234])\n    Test.assert_equals(sort_array([23,345,654,567,234,734,2345,4456,789,865]),\n\
    \    [23,345,567,2345,654,734,4456,789,865,234])\n    Test.assert_equals(sort_array([0,0,0,0,0,0,0,0,0,0]),\
    \ [0,0,0,0,0,0,0,0,0,0])\n    Test.assert_equals(sort_array([1,0,1,0,1,0,1,0,1,0]),\
    \ [0,0,0,0,0,1,1,1,1,1])\n    Test.assert_equals(sort_array([0,1,2,3,4,5,6,7,8,9]),\
    \ [0,1,2,4,8,3,5,6,7,9])\n    Test.assert_equals(sort_array([0,15,7,3,4,22,7,42,30,8]),\
    \ [0,3,4,7,7,8,15,22,30,42])\n    Test.assert_equals(sort_array([0,15,7,9,4,22,8,42,30,11]),\
    \ [0,4,8,11,7,9,15,22,30,42])\n    Test.assert_equals(sort_array([0,15,7,9,4,22,\n\
    using Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpduyjyz72.jl:11\nin expression starting at\
    \ /tmp/tmpduyjyz72.jl:11\n"
  stdout: ''
  timestamp: 1659822001
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    # your code here\nend\n                                              \
    \                                          \"\"\"\n                          \
    \                                                              )\n    @eval @test\n\
    \                                                                            \
    \            \"\"\"\n  sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]) == [1, 2, 4,\
    \ 8, 3, 5, 6, 7, 9, 10]\n  sort_array([1024, 512, 256, 128, 64, 32, 16, 8, 4,\
    \ 2, 1]) == [1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024]\n  sort_array([10000,\
    \ 10000]) == [10000, 10000]\n  sort_array([2, 3, 5, 7, 11, 13, 17, 19]) == [2,\
    \ 3, 5, 17, 7, 11, 13, 19]\n  sort_array([10, 100, 1000, 10000]) == [10, 100,\
    \ 10000, 1000]\n                                                             \
    \                           \"\"\"\n    function sort_array(arr::Vector{Int64})::Vector{Int64}\n\
    \        # your code here\n        # return Vector{Int64}(undef, length(arr))\n\
    \    end\n    sort_array(vec(1:10)) == vec(1:10) || throw(\"Fail test\")\n   \
    \ sort_array(vec(reverse(1:10))) == vec(reverse(1:10)) || throw(\"Fail test\"\
    )\n    true\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t\
    @test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3,\
    \ -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) ==\
    \ [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: cannot document the following expression:\n\nsort_array([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]) == [1, 2, 4, 8, 3, 5, 6, 7, 9, 10]\n\nStacktrace:\n\
    \ [1] error(::String, ::String)\n   @ Base ./error.jl:42\n [2] top-level scope\n\
    \   @ /tmp/tmpk4b1oang.jl:11\nin expression starting at /tmp/tmpk4b1oang.jl:11\n"
  stdout: ''
  timestamp: 1659822001
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n  # Sort the array according to number of ones in the binary representation\n\
    \  # of the values, then break ties by the decimal value\n  sort(arr, by = x ->\
    \ (join(split(string(bitstring(x)), \"1\")), x))\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1,\
    \ 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\
    \t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpk3md2wxy.jl:15

    '
  stdout: "test set: Test Failed at /tmp/tmpk3md2wxy.jl:18\n  Expression: candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n   Evaluated: [3, 5, 1, 2, 4] == [1, 2, 4,\
    \ 3, 5]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpk3md2wxy.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpk3md2wxy.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpk3md2wxy.jl:19\n  Expression: candidate([-2, -3, -4, -5, -6])\
    \ == [-4, -2, -6, -5, -3]\n   Evaluated: [-5, -3, -2, -6, -4] == [-4, -2, -6,\
    \ -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpk3md2wxy.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpk3md2wxy.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpk3md2wxy.jl:20\n  Expression: candidate([1, 0, 2, 3, 4]) ==\
    \ [0, 1, 2, 4, 3]\n   Evaluated: [3, 1, 2, 4, 0] == [0, 1, 2, 4, 3]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpk3md2wxy.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpk3md2wxy.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpk3md2wxy.jl:22\n  Expression: candidate([2, 5, 77, 4, 5, 3,\
    \ 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\n   Evaluated: [77, 7,\
    \ 3, 3, 5, 5, 5, 2, 2, 4, 4] == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpk3md2wxy.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpk3md2wxy.jl:17\ntest set"
  timestamp: 1659822002
- exit_code: -1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    arr[sortperm(count_ones.(arr), arr)]\nend\n \n \nimport Pkg; Pkg.add(\"\
    Test\")\nusing Test\n@testset \"Basic Tests\" begin\n@test sort_array([]) == []\n\
    @test sort_array([0]) == [0]\n@test sort_array([1]) == [1]\n@test sort_array([1,0])\
    \ == [0,1]\n@test sort_array([1,1]) == [1,1]\n@test sort_array([0,1]) == [0,1]\n\
    @test sort_array([0,0]) == [0,0]\n@test sort_array([0,1,1]) == [0,1,1]\n@test\
    \ sort_array([1,0,1]) == [0,1,1]\n@test sort_array([1,1,0]) == [0,1,1]\n@test\
    \ sort_array([1,1,1]) == [1,1,1]\n@test sort_array([0,0,0]) == [0,0,0]\n@test\
    \ sort_array([1,0,0]) == [0,0,1]\n@test sort_array([0,1,0]) == [0,0,1]\n@test\
    \ sort_array([0,0,1]) == [0,0,1]\n@test sort_array([0,0,1,1]) == [0,0,1,1]\n@test\
    \ sort_array([0,1,0,1]) == [0,0,1,1]\n@test sort_array([0,1,1,0]) == [0,0,1,1]\n\
    @test sort_array([1,0,0,1]) == [0,0,1,1]\n@test sort_array([1,0,1,0]) == [0,0,1,1]\n\
    @test sort_array([1,1,0,0]) == [0,0,1,1]\n@test sort_array([0,0,0,0]) == [0,0,0,0]\n\
    @test sort_array([1,1,1,1]) == [1,1\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: Timeout
  stderr: b'    Updating registry at `~/.conda/envs/polyglot/share/julia/registries/General.toml`\n'
  stdout: None
  timestamp: 1659822005
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    \n    b = ones(Int64, length(arr))\n    for i = 1:length(arr)\n      \
    \  b[i] = bin2dec(Int(reverse(string(bits(Int(arr[i]))))))\n    end\n    \n  \
    \  a = ones(Int64, length(arr))\n    for i = 1:length(arr)\n        a[i] = Int(bits(Int(arr[i])))\n\
    \    end\n    \n    function quicksort(arr::Vector{Int64}, a::Vector{Int64}, b::Vector{Int64})\n\
    \        if length(arr) < 2\n            return arr\n        end\n        pivot\
    \ = rand(1:length(arr))\n        less = [l for (i, l) in enumerate(arr) if l <\
    \ arr[pivot] || l == arr[pivot] && a[i] < a[pivot] || l == arr[pivot] && a[i]\
    \ == a[pivot] && b[i] < b[pivot]]\n        pivot_arr = [l for (i, l) in enumerate(arr)\
    \ if l == arr[pivot] && a[i] == a[pivot] && b[i] == b[pivot]]\n        greater\
    \ = [l for (i, l) in enumerate(arr) if l > arr[pivot] || l == arr[pivot] && a[i]\
    \ > a[pivot] || l == arr[pivot] && a[i] == a[pivot] && b[i] > b[pivot]]\n    \
    \    return [quicksort(less, a, b) pivot_arr quicksort(greater, a, b)]\n    end\n\
    \    \n    return quicksort(arr, a, b)\n    \nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3,\
    \ 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1,\
    \ 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpdp3ymi7c.jl:36

    '
  stdout: "test set: Error During Test at /tmp/tmpdp3ymi7c.jl:39\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ bits not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n   \
    \  @ Main /tmp/tmpdp3ymi7c.jl:12\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpdp3ymi7c.jl:39 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpdp3ymi7c.jl:38\ntest set:\
    \ Error During Test at /tmp/tmpdp3ymi7c.jl:40\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: bits\
    \ not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmpdp3ymi7c.jl:12\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpdp3ymi7c.jl:40 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpdp3ymi7c.jl:38\ntest set:\
    \ Error During Test at /tmp/tmpdp3ymi7c.jl:41\n  Test threw exception\n  Expression:\
    \ candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3]\n  UndefVarError: bits not defined\n\
    \  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmpdp3ymi7c.jl:12\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpdp3ymi7c.jl:41 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpdp3ymi7c.jl:38\ntest set:\
    \ Error During Test at /tmp/tmpdp3ymi7c.jl:43\n  Test threw exception\n  Expression:\
    \ candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5,\
    \ 7, 77]\n  UndefVarError: bits not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n\
    \    "
  timestamp: 1659822003
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    num_ones = [count_ones(x) for x in arr]\n    @show num_ones\n    @show\
    \ arr\n    return sortperm(num_ones)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 7 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp77jbz_z9.jl:16

    '
  stdout: "num_ones = [1, 2, 1, 2, 1]\narr = [1, 5, 2, 3, 4]\ntest set: Test Failed\
    \ at /tmp/tmp77jbz_z9.jl:19\n  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2,\
    \ 4, 3, 5]\n   Evaluated: [1, 3, 5, 2, 4] == [1, 2, 4, 3, 5]\nStacktrace:\n [1]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp77jbz_z9.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp77jbz_z9.jl:18\nnum_ones = [63,\
    \ 63, 62, 63, 62]\narr = [-2, -3, -4, -5, -6]\ntest set: Test Failed at /tmp/tmp77jbz_z9.jl:20\n\
    \  Expression: candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated:\
    \ [3, 5, 1, 2, 4] == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp77jbz_z9.jl:20 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp77jbz_z9.jl:18\nnum_ones = [1, 0, 1, 2, 1]\n\
    arr = [1, 0, 2, 3, 4]\ntest set: Test Failed at /tmp/tmp77jbz_z9.jl:21\n  Expression:\
    \ candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3]\n   Evaluated: [2, 1, 3, 5, 4]\
    \ == [0, 1, 2, 4, 3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp77jbz_z9.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp77jbz_z9.jl:18\nnum_ones = Int64[]\n\
    arr = Int64[]\nnum_ones = [1, 2, 4, 1, 2, 2, 2, 3, 1, 2, 1]\narr = [2, 5, 77,\
    \ 4, 5, 3, 5, 7, 2, 3, 4]\ntest set: Test Failed at /tmp/tmp77jbz_z9.jl:23\n \
    \ Expression: candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3,\
    \ 3, 5, 5, 5, 7, 77]\n   Evaluated: [1, 4, 9, 11, 2, 5, 6, 7, 10, 8, 3] == [2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/shar"
  timestamp: 1659822002
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    # sort based on number of bits in binary representation\n    # then sort\
    \ based on decimal value\n    idx = sortperm(map(x -> count_ones(x), arr))\n \
    \   return(sort(arr[idx]))\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\
    \t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxloywo11.jl:16

    '
  stdout: "test set: Test Failed at /tmp/tmpxloywo11.jl:19\n  Expression: candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n   Evaluated: [1, 2, 3, 4, 5] == [1, 2, 4,\
    \ 3, 5]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxloywo11.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxloywo11.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpxloywo11.jl:20\n  Expression: candidate([-2, -3, -4, -5, -6])\
    \ == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -5, -4, -3, -2] == [-4, -2, -6,\
    \ -5, -3]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxloywo11.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxloywo11.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpxloywo11.jl:21\n  Expression: candidate([1, 0, 2, 3, 4]) ==\
    \ [0, 1, 2, 4, 3]\n   Evaluated: [0, 1, 2, 3, 4] == [0, 1, 2, 4, 3]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxloywo11.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxloywo11.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpxloywo11.jl:23\n  Expression: candidate([2, 5, 77, 4, 5, 3,\
    \ 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\n   Evaluated: [2, 2,\
    \ 3, 3, 4, 4, 5, 5, 5, 7, 77] == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxloywo11.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxloywo11.jl:18\ntest set"
  timestamp: 1659822002
- exit_code: 1
  program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n                \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    return sort(arr, by = x -> [count(split(Base.d\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1,\
    \ 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\
    \t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpzdf3d7oj.jl:10\nin expression starting at\
    \ /tmp/tmpzdf3d7oj.jl:10\n"
  stdout: ''
  timestamp: 1659822001

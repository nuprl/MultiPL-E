language: jl
name: HumanEval_101_words_string
results:
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    collect(split(s))\nend\nusing Test\n\n@testset begin\n\ncandidate = words_string;\n\
    \t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\"\
    , \"John\"])\n\t@test(candidate(\"One, two, three, four, five, six\") == [\"One\"\
    , \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"Hi, my\
    \ name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp2auo5qqe.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmp2auo5qqe.jl:15\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"Hi,\", \"my\", \"name\", \"is\", \"John\"] == [\"Hi\", \"my\", \"name\",\
    \ \"is\", \"John\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2auo5qqe.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2auo5qqe.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp2auo5qqe.jl:16\n  Expression: candidate(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n   Evaluated: [\"One,\", \"two,\", \"three,\", \"four,\", \"five,\", \"six\"\
    ] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2auo5qqe.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2auo5qqe.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp2auo5qqe.jl:17\n  Expression: candidate(\"Hi, my name\") ==\
    \ [\"Hi\", \"my\", \"name\"]\n   Evaluated: [\"Hi,\", \"my\", \"name\"] == [\"\
    Hi\", \"my\", \"name\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2auo5qqe.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2auo5qqe.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp2auo5qqe.jl:18\n  Expression: candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\n   Evaluated: [\"One,,\", \"two,\", \"three,\", \"four,\", \"five,\",\
    \ \"six,\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n "
  timestamp: 1659822054
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    return split(s)\nend\nusing Test\n\n@testset begin\n\ncandidate = words_string;\n\
    \t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\"\
    , \"John\"])\n\t@test(candidate(\"One, two, three, four, five, six\") == [\"One\"\
    , \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"Hi, my\
    \ name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpy9_padcp.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpy9_padcp.jl:15\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"Hi,\", \"my\", \"name\", \"is\", \"John\"] == [\"Hi\", \"my\", \"name\",\
    \ \"is\", \"John\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy9_padcp.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpy9_padcp.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpy9_padcp.jl:16\n  Expression: candidate(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n   Evaluated: [\"One,\", \"two,\", \"three,\", \"four,\", \"five,\", \"six\"\
    ] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy9_padcp.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpy9_padcp.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpy9_padcp.jl:17\n  Expression: candidate(\"Hi, my name\") ==\
    \ [\"Hi\", \"my\", \"name\"]\n   Evaluated: [\"Hi,\", \"my\", \"name\"] == [\"\
    Hi\", \"my\", \"name\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy9_padcp.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpy9_padcp.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpy9_padcp.jl:18\n  Expression: candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\n   Evaluated: [\"One,,\", \"two,\", \"three,\", \"four,\", \"five,\",\
    \ \"six,\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n "
  timestamp: 1659822054
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    # Split the string into words and return a vector of the words.\n    words_array\
    \ = split(s)\n    return words_array\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpg90mozcs.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmpg90mozcs.jl:17\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"Hi,\", \"my\", \"name\", \"is\", \"John\"] == [\"Hi\", \"my\", \"name\",\
    \ \"is\", \"John\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpg90mozcs.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpg90mozcs.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpg90mozcs.jl:18\n  Expression: candidate(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n   Evaluated: [\"One,\", \"two,\", \"three,\", \"four,\", \"five,\", \"six\"\
    ] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpg90mozcs.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpg90mozcs.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpg90mozcs.jl:19\n  Expression: candidate(\"Hi, my name\") ==\
    \ [\"Hi\", \"my\", \"name\"]\n   Evaluated: [\"Hi,\", \"my\", \"name\"] == [\"\
    Hi\", \"my\", \"name\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpg90mozcs.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpg90mozcs.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpg90mozcs.jl:20\n  Expression: candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\n   Evaluated: [\"One,,\", \"two,\", \"three,\", \"four,\", \"five,\",\
    \ \"six,\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n "
  timestamp: 1659822054
- exit_code: -1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n  # your code goes here\nend\nwords_string(\"Hello, World!\") # returns [\"\
    Hello\", \"World!\"]\n\"\"\"\n    It's easy to solve this problem with Julia's\
    \ `split` function.\n    \n    * Can you do it without `split`?\n    * How would\
    \ you solve this problem if the words were separated by `|` instead of `,`?\n\
    \    * How would you solve this problem if the words were separated by `|` or\
    \ `,`?\n\"\"\"\nusing Test\n\n@testset begin\n\ncandidate = words_string;\n\t\
    @test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\"\
    , \"John\"])\n\t@test(candidate(\"One, two, three, four, five, six\") == [\"One\"\
    , \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"Hi, my\
    \ name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: Timeout
  stderr: 'b''ERROR: LoadError: MethodError: Cannot `convert` an object of type Nothing
    to an object of type Vector{String}\nClosest candidates are:\n  convert(::Type{T},
    !Matched::LinearAlgebra.Factorization) where T<:AbstractArray at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n  convert(::Type{Vector{String}},
    !Matched::LibGit2.StrArrayStruct) at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LibGit2/src/strarray.jl:13\n  convert(::Type{T},
    !Matched::AbstractArray) where T<:Array at ~/.conda/envs/polyglot/share/julia/base/array.jl:554\n  ...\nStacktrace:\n
    [1] words_string('''
  stdout: None
  timestamp: 1659822056
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    split(split(s,\",\"), \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpfihcrl12.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpfihcrl12.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"]\n  MethodError: no method matching split(::Vector{SubString{String}},\
    \ ::String)\n  Closest candidates are:\n    split(!Matched::T, ::Any; limit, keepempty)\
    \ where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/util.jl:417\n\
    \  Stacktrace:\n   [1] words_string(s::String)\n     @ Main /tmp/tmpfihcrl12.jl:8\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpfihcrl12.jl:15 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpfihcrl12.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpfihcrl12.jl:16\n  Test threw exception\n  Expression:\
    \ candidate(\"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\"\
    , \"four\", \"five\", \"six\"]\n  MethodError: no method matching split(::Vector{SubString{String}},\
    \ ::String)\n  Closest candidates are:\n    split(!Matched::T, ::Any; limit, keepempty)\
    \ where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/util.jl:417\n\
    \  Stacktrace:\n   [1] words_string(s::String)\n     @ Main /tmp/tmpfihcrl12.jl:8\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpfihcrl12.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpfihcrl12.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpfihcrl12.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(\"Hi, my name\") == [\"Hi\", \"my\", \"name\"]\n  MethodError: no\
    \ method matching split(::Vector{SubString{String}}, ::String)\n  Closest candidates\
    \ are:\n    split(!Matched::T, ::Any; limit, keepempty) where T<:AbstractString\
    \ at ~/.conda/envs/polyglot/share/julia/base/strings/util.jl:417\n  Stacktrace:\n\
    \ "
  timestamp: 1659822056
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    return split(s, r\"[ ,]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp_ot5w46w.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmp_ot5w46w.jl:18\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_ot5w46w.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_ot5w46w.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp_ot5w46w.jl:19\n  Expression: candidate(\"\") == Vector{String}([])\n\
    \   Evaluated: [\"\"] == String[]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_ot5w46w.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_ot5w46w.jl:14\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     2      6\n"
  timestamp: 1659822054
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    s_split = split(s, [\",\", \" \"])\n    return s_split\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = words_string;\n\t@test(candidate(\"Hi, my name\
    \ is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\n\t@test(candidate(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\n\t@test(candidate(\"Hi, my name\") == [\"Hi\", \"my\",\
    \ \"name\"])\n\t@test(candidate(\"One,, two, three, four, five, six,\") == [\"\
    One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    \") == Vector{String}([]))\n\t@test(candidate(\"ahmed     , gamal\") == [\"ahmed\"\
    , \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpgiorc5wf.jl:13

    '
  stdout: "test set: Error During Test at /tmp/tmpgiorc5wf.jl:16\n  Test threw exception\n\
    \  Expression: candidate(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"]\n  MethodError: no method matching findfirst(::Vector{String},\
    \ ::String)\n  Closest candidates are:\n    findfirst(!Matched::Function, ::Union{AbstractString,\
    \ AbstractArray}) at ~/.conda/envs/polyglot/share/julia/base/array.jl:2002\n \
    \   findfirst(!Matched::Function, ::Any) at ~/.conda/envs/polyglot/share/julia/base/array.jl:1994\n\
    \    findfirst(!Matched::AbstractString, ::AbstractString) at ~/.conda/envs/polyglot/share/julia/base/strings/search.jl:104\n\
    \    ...\n  Stacktrace:\n   [1] _split(str::String, splitter::Vector{String},\
    \ limit::Int64, keepempty::Bool, strs::Vector{SubString{String}})\n     @ Base\
    \ ./strings/util.jl:435\n   [2] split(str::String, splitter::Vector{String}; limit::Int64,\
    \ keepempty::Bool)\n     @ Base ./strings/util.jl:419\n   [3] split(str::String,\
    \ splitter::Vector{String})\n     @ Base ./strings/util.jl:419\n   [4] words_string(s::String)\n\
    \     @ Main /tmp/tmpgiorc5wf.jl:8\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpgiorc5wf.jl:16 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpgiorc5wf.jl:15\ntest set:\
    \ Error During Test at /tmp/tmpgiorc5wf.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(\"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\"\
    , \"four\", \"five\", \"six\"]\n  MethodError: no method matching findfirst(::Vector{String},\
    \ ::String)\n  Closest candidates are:\n    findfirst(!Matched::Function, ::Union{AbstractString,\
    \ AbstractArray}) at ~/.conda/envs/polyglot/share/julia/base/array.jl:2002\n \
    \   findfirst(!Matched::Function, ::Any) at ~/.conda/envs/polyglot/share/julia/base/array.jl:1994\n\
    \    findfirst(!Matched::AbstractString, ::AbstractString) at ~/.conda/envs/polyglot/share/julia/base/strings/search.jl:104\n\
    \    ...\n  Stacktrace:\n   "
  timestamp: 1659822056
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    s = split(s, r\"[, ]\")\n    return s\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ])\n\t@test(candidate(\"Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp1fymvn3z.jl:13

    '
  stdout: "test set: Test Failed at /tmp/tmp1fymvn3z.jl:16\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"Hi\", \"\", \"my\", \"name\", \"is\", \"John\"] == [\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1fymvn3z.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1fymvn3z.jl:15\ntest set: Test\
    \ Failed at /tmp/tmp1fymvn3z.jl:17\n  Expression: candidate(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n   Evaluated: [\"One\", \"\", \"two\", \"\", \"three\", \"\", \"four\", \"\"\
    , \"five\", \"\", \"six\"] == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1fymvn3z.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1fymvn3z.jl:15\ntest set: Test\
    \ Failed at /tmp/tmp1fymvn3z.jl:18\n  Expression: candidate(\"Hi, my name\") ==\
    \ [\"Hi\", \"my\", \"name\"]\n   Evaluated: [\"Hi\", \"\", \"my\", \"name\"] ==\
    \ [\"Hi\", \"my\", \"name\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1fymvn3z.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1fymvn3z.jl:15\ntest set: Test\
    \ Failed at /tmp/tmp1fymvn3z.jl:19\n  Expression: candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\n   Evaluated: [\"One\", \"\", \"\", \"two\", \"\", \"three\", \"\", \"\
    four\", \"\", \"five\", \"\", \"six\", \"\"] == [\"One\", \"two\", \"three\",\
    \ \"four\", \"five\", \"six\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/st"
  timestamp: 1659822054
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    ss = split(s)\n    return(ss)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpchzr3549.jl:13

    '
  stdout: "test set: Test Failed at /tmp/tmpchzr3549.jl:16\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"Hi,\", \"my\", \"name\", \"is\", \"John\"] == [\"Hi\", \"my\", \"name\",\
    \ \"is\", \"John\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpchzr3549.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpchzr3549.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpchzr3549.jl:17\n  Expression: candidate(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n   Evaluated: [\"One,\", \"two,\", \"three,\", \"four,\", \"five,\", \"six\"\
    ] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpchzr3549.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpchzr3549.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpchzr3549.jl:18\n  Expression: candidate(\"Hi, my name\") ==\
    \ [\"Hi\", \"my\", \"name\"]\n   Evaluated: [\"Hi,\", \"my\", \"name\"] == [\"\
    Hi\", \"my\", \"name\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpchzr3549.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpchzr3549.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpchzr3549.jl:19\n  Expression: candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\n   Evaluated: [\"One,,\", \"two,\", \"three,\", \"four,\", \"five,\",\
    \ \"six,\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n "
  timestamp: 1659822054
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    sp = split(s, [\" \", \",\"])\n    return sp\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = words_string;\n\t@test(candidate(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\
    \t@test(candidate(\"One,, two, three, four, five, six,\") == [\"One\", \"two\"\
    , \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\
    \t@test(candidate(\"ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9q_ryrq6.jl:13

    '
  stdout: "test set: Error During Test at /tmp/tmp9q_ryrq6.jl:16\n  Test threw exception\n\
    \  Expression: candidate(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"]\n  MethodError: no method matching findfirst(::Vector{String},\
    \ ::String)\n  Closest candidates are:\n    findfirst(!Matched::Function, ::Union{AbstractString,\
    \ AbstractArray}) at ~/.conda/envs/polyglot/share/julia/base/array.jl:2002\n \
    \   findfirst(!Matched::Function, ::Any) at ~/.conda/envs/polyglot/share/julia/base/array.jl:1994\n\
    \    findfirst(!Matched::AbstractString, ::AbstractString) at ~/.conda/envs/polyglot/share/julia/base/strings/search.jl:104\n\
    \    ...\n  Stacktrace:\n   [1] _split(str::String, splitter::Vector{String},\
    \ limit::Int64, keepempty::Bool, strs::Vector{SubString{String}})\n     @ Base\
    \ ./strings/util.jl:435\n   [2] split(str::String, splitter::Vector{String}; limit::Int64,\
    \ keepempty::Bool)\n     @ Base ./strings/util.jl:419\n   [3] split(str::String,\
    \ splitter::Vector{String})\n     @ Base ./strings/util.jl:419\n   [4] words_string(s::String)\n\
    \     @ Main /tmp/tmp9q_ryrq6.jl:8\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmp9q_ryrq6.jl:16 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmp9q_ryrq6.jl:15\ntest set:\
    \ Error During Test at /tmp/tmp9q_ryrq6.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(\"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\"\
    , \"four\", \"five\", \"six\"]\n  MethodError: no method matching findfirst(::Vector{String},\
    \ ::String)\n  Closest candidates are:\n    findfirst(!Matched::Function, ::Union{AbstractString,\
    \ AbstractArray}) at ~/.conda/envs/polyglot/share/julia/base/array.jl:2002\n \
    \   findfirst(!Matched::Function, ::Any) at ~/.conda/envs/polyglot/share/julia/base/array.jl:1994\n\
    \    findfirst(!Matched::AbstractString, ::AbstractString) at ~/.conda/envs/polyglot/share/julia/base/strings/search.jl:104\n\
    \    ...\n  Stacktrace:\n   "
  timestamp: 1659822056
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    split(s, r\"\\s*[,\\s]\\s*\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpwsvato1l.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpwsvato1l.jl:18\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\n   Evaluated: [\"One\", \"\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwsvato1l.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwsvato1l.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpwsvato1l.jl:19\n  Expression: candidate(\"\") == Vector{String}([])\n\
    \   Evaluated: [\"\"] == String[]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwsvato1l.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwsvato1l.jl:14\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     2      6\n"
  timestamp: 1659822054
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    words = split(s, \",\")\n    return words\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = words_string;\n\t@test(candidate(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\
    \t@test(candidate(\"One,, two, three, four, five, six,\") == [\"One\", \"two\"\
    , \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\
    \t@test(candidate(\"ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpvyxdzvf0.jl:13

    '
  stdout: "test set: Test Failed at /tmp/tmpvyxdzvf0.jl:16\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"Hi\", \" my name is John\"] == [\"Hi\", \"my\", \"name\", \"is\", \"John\"\
    ]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvyxdzvf0.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvyxdzvf0.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpvyxdzvf0.jl:17\n  Expression: candidate(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n   Evaluated: [\"One\", \" two\", \" three\", \" four\", \" five\", \" six\"\
    ] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvyxdzvf0.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvyxdzvf0.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpvyxdzvf0.jl:18\n  Expression: candidate(\"Hi, my name\") ==\
    \ [\"Hi\", \"my\", \"name\"]\n   Evaluated: [\"Hi\", \" my name\"] == [\"Hi\"\
    , \"my\", \"name\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvyxdzvf0.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvyxdzvf0.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpvyxdzvf0.jl:19\n  Expression: candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\n   Evaluated: [\"One\", \"\", \" two\", \" three\", \" four\", \" five\"\
    , \" six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] ma"
  timestamp: 1659822054
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    split(s, r\"\\s+|,\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp5t739wmv.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmp5t739wmv.jl:15\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"Hi\", \"\", \"my\", \"name\", \"is\", \"John\"] == [\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5t739wmv.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5t739wmv.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp5t739wmv.jl:16\n  Expression: candidate(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n   Evaluated: [\"One\", \"\", \"two\", \"\", \"three\", \"\", \"four\", \"\"\
    , \"five\", \"\", \"six\"] == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5t739wmv.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5t739wmv.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp5t739wmv.jl:17\n  Expression: candidate(\"Hi, my name\") ==\
    \ [\"Hi\", \"my\", \"name\"]\n   Evaluated: [\"Hi\", \"\", \"my\", \"name\"] ==\
    \ [\"Hi\", \"my\", \"name\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5t739wmv.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5t739wmv.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp5t739wmv.jl:18\n  Expression: candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\n   Evaluated: [\"One\", \"\", \"\", \"two\", \"\", \"three\", \"\", \"\
    four\", \"\", \"five\", \"\", \"six\", \"\"] == [\"One\", \"two\", \"three\",\
    \ \"four\", \"five\", \"six\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/st"
  timestamp: 1659822054
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    split(strip(s), r\"[,\\s]+\")\nend\n@testset \"Example Tests\" begin\n\
    \    @test words_string(\"Hello, World!\") == [\"Hello\", \"World!\"]\n    @test\
    \ words_string(\"Hi\") == [\"Hi\"]\n    @test words_string(\"Hello,World!\") ==\
    \ [\"Hello\", \"World!\"]\n    @test words_string(\"Hello <{}> world!\") == [\"\
    Hello\", \"<{}>\", \"world!\"]\n    @test words_string(\"This is a test\") ==\
    \ [\"This\", \"is\", \"a\", \"test\"]\n    @test words_string(\"Hello,World!\"\
    ) == [\"Hello\", \"World!\"]\n    @test words_string(\"What's up doc?\") == [\"\
    What's\", \"up\", \"doc?\"]\n    @test words_string(\"No special characters or\
    \ numbers\") == [\"No\", \"special\", \"characters\", \"or\", \"numbers\"]\n \
    \   @test words_string(\"A,b,c,d\") == [\"A\", \"b\", \"c\", \"d\"]\n    @test\
    \ words_string(\"Abc defg\") == [\"Abc\", \"defg\"]\n    @test words_string(\"\
    \") == []\n    @test words_string(\"A b c d\") == [\"A\", \"b\", \"c\", \"d\"\
    ]\n    @test words_string(\"one,two,three\") == [\"one\", \"two\", \"three\"]\n\
    \    @test words_string(\"ab,cd,ef\") == [\"ab\", \"cd\", \"ef\"]\n    @test words_string(\"\
    a b c d\") == [\"a\", \"b\", \"c\", \"d\"]\n    @test words_string(\"a b\") ==\
    \ [\"a\", \"b\"]\n    @test words_string(\"a,b,c,d\") == [\"a\", \"b\", \"c\"\
    , \"d\"]\n    @test words_string(\"a b c d e f g h i j k l m n o p q r s t u v\
    \ w x y z\") == [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\"\
    , \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\",\nusing Test\n\n@testset\
    \ begin\n\ncandidate = words_string;\n\t@test(candidate(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\
    \t@test(candidate(\"One,, two, three, four, five, six,\") == [\"One\", \"two\"\
    , \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\
    \t@test(candidate(\"ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: missing separator in array expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp1ppj17kl.jl:31\nin expression starting at\
    \ /tmp/tmp1ppj17kl.jl:31\n"
  stdout: ''
  timestamp: 1659822053
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n   \n    return split(lowercase(s), r\"[\\s,]+\")\n    \nend\nusing Test\n\
    \n@testset begin\n\ncandidate = words_string;\n\t@test(candidate(\"Hi, my name\
    \ is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\n\t@test(candidate(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\n\t@test(candidate(\"Hi, my name\") == [\"Hi\", \"my\",\
    \ \"name\"])\n\t@test(candidate(\"One,, two, three, four, five, six,\") == [\"\
    One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    \") == Vector{String}([]))\n\t@test(candidate(\"ahmed     , gamal\") == [\"ahmed\"\
    , \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp60ovat6v.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmp60ovat6v.jl:17\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"hi\", \"my\", \"name\", \"is\", \"john\"] == [\"Hi\", \"my\", \"name\", \"\
    is\", \"John\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp60ovat6v.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp60ovat6v.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp60ovat6v.jl:18\n  Expression: candidate(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n   Evaluated: [\"one\", \"two\", \"three\", \"four\", \"five\", \"six\"] ==\
    \ [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n [1]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp60ovat6v.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp60ovat6v.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp60ovat6v.jl:19\n  Expression: candidate(\"Hi, my name\") ==\
    \ [\"Hi\", \"my\", \"name\"]\n   Evaluated: [\"hi\", \"my\", \"name\"] == [\"\
    Hi\", \"my\", \"name\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp60ovat6v.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp60ovat6v.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp60ovat6v.jl:20\n  Expression: candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\n   Evaluated: [\"one\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    , \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro "
  timestamp: 1659822054
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    return split(s, r\"[\\s,]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpuitkyhzn.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpuitkyhzn.jl:18\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpuitkyhzn.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpuitkyhzn.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpuitkyhzn.jl:19\n  Expression: candidate(\"\") == Vector{String}([])\n\
    \   Evaluated: [\"\"] == String[]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpuitkyhzn.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpuitkyhzn.jl:14\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     2      6\n"
  timestamp: 1659822054
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    w = split(s, [\" \", \",\"])\n    return w\nend\ns = \"The quick brown\
    \ fox jumps over the lazy dog\"\n@test words_string(s) == [\"The\", \"quick\"\
    , \"brown\", \"fox\", \"jumps\", \"over\", \"the\", \"lazy\", \"dog\"]\nusing\
    \ Test\n\n@testset begin\n\ncandidate = words_string;\n\t@test(candidate(\"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\n\t@test(candidate(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\n\t@test(candidate(\"Hi, my name\") == [\"Hi\", \"my\",\
    \ \"name\"])\n\t@test(candidate(\"One,, two, three, four, five, six,\") == [\"\
    One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    \") == Vector{String}([]))\n\t@test(candidate(\"ahmed     , gamal\") == [\"ahmed\"\
    , \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: UndefVarError: @test not defined

    in expression starting at /tmp/tmp2xaspsen.jl:12

    in expression starting at /tmp/tmp2xaspsen.jl:12

    '
  stdout: ''
  timestamp: 1659822053
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    split(s)\nend\nusing Test\n\n@testset begin\n\ncandidate = words_string;\n\
    \t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\"\
    , \"John\"])\n\t@test(candidate(\"One, two, three, four, five, six\") == [\"One\"\
    , \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"Hi, my\
    \ name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpp3_2nvm5.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpp3_2nvm5.jl:15\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"Hi,\", \"my\", \"name\", \"is\", \"John\"] == [\"Hi\", \"my\", \"name\",\
    \ \"is\", \"John\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpp3_2nvm5.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpp3_2nvm5.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpp3_2nvm5.jl:16\n  Expression: candidate(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n   Evaluated: [\"One,\", \"two,\", \"three,\", \"four,\", \"five,\", \"six\"\
    ] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpp3_2nvm5.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpp3_2nvm5.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpp3_2nvm5.jl:17\n  Expression: candidate(\"Hi, my name\") ==\
    \ [\"Hi\", \"my\", \"name\"]\n   Evaluated: [\"Hi,\", \"my\", \"name\"] == [\"\
    Hi\", \"my\", \"name\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpp3_2nvm5.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpp3_2nvm5.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpp3_2nvm5.jl:18\n  Expression: candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\n   Evaluated: [\"One,,\", \"two,\", \"three,\", \"four,\", \"five,\",\
    \ \"six,\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n "
  timestamp: 1659822054
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    words = split(s, [\",\", \" \"])\n    return words\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = words_string;\n\t@test(candidate(\"Hi, my name is\
    \ John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\n\t@test(candidate(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\n\t@test(candidate(\"Hi, my name\") == [\"Hi\", \"my\",\
    \ \"name\"])\n\t@test(candidate(\"One,, two, three, four, five, six,\") == [\"\
    One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    \") == Vector{String}([]))\n\t@test(candidate(\"ahmed     , gamal\") == [\"ahmed\"\
    , \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpfy9kdoz9.jl:13

    '
  stdout: "test set: Error During Test at /tmp/tmpfy9kdoz9.jl:16\n  Test threw exception\n\
    \  Expression: candidate(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"]\n  MethodError: no method matching findfirst(::Vector{String},\
    \ ::String)\n  Closest candidates are:\n    findfirst(!Matched::Function, ::Union{AbstractString,\
    \ AbstractArray}) at ~/.conda/envs/polyglot/share/julia/base/array.jl:2002\n \
    \   findfirst(!Matched::Function, ::Any) at ~/.conda/envs/polyglot/share/julia/base/array.jl:1994\n\
    \    findfirst(!Matched::AbstractString, ::AbstractString) at ~/.conda/envs/polyglot/share/julia/base/strings/search.jl:104\n\
    \    ...\n  Stacktrace:\n   [1] _split(str::String, splitter::Vector{String},\
    \ limit::Int64, keepempty::Bool, strs::Vector{SubString{String}})\n     @ Base\
    \ ./strings/util.jl:435\n   [2] split(str::String, splitter::Vector{String}; limit::Int64,\
    \ keepempty::Bool)\n     @ Base ./strings/util.jl:419\n   [3] split(str::String,\
    \ splitter::Vector{String})\n     @ Base ./strings/util.jl:419\n   [4] words_string(s::String)\n\
    \     @ Main /tmp/tmpfy9kdoz9.jl:8\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpfy9kdoz9.jl:16 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpfy9kdoz9.jl:15\ntest set:\
    \ Error During Test at /tmp/tmpfy9kdoz9.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(\"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\"\
    , \"four\", \"five\", \"six\"]\n  MethodError: no method matching findfirst(::Vector{String},\
    \ ::String)\n  Closest candidates are:\n    findfirst(!Matched::Function, ::Union{AbstractString,\
    \ AbstractArray}) at ~/.conda/envs/polyglot/share/julia/base/array.jl:2002\n \
    \   findfirst(!Matched::Function, ::Any) at ~/.conda/envs/polyglot/share/julia/base/array.jl:1994\n\
    \    findfirst(!Matched::AbstractString, ::AbstractString) at ~/.conda/envs/polyglot/share/julia/base/strings/search.jl:104\n\
    \    ...\n  Stacktrace:\n   "
  timestamp: 1659822056
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    s = replace(s, r\"[^\\w ]\", \"\")\n    v = split(s)\n    return v\nend\n\
    using Test\n\n@testset begin\n\ncandidate = words_string;\n\t@test(candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\n\t@test(candidate(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\n\t@test(candidate(\"Hi, my name\") == [\"Hi\", \"my\",\
    \ \"name\"])\n\t@test(candidate(\"One,, two, three, four, five, six,\") == [\"\
    One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    \") == Vector{String}([]))\n\t@test(candidate(\"ahmed     , gamal\") == [\"ahmed\"\
    , \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpcig1w0e9.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpcig1w0e9.jl:17\n  Test threw exception\n\
    \  Expression: candidate(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"]\n  MethodError: no method matching replace(::String, ::Regex,\
    \ ::String)\n  Closest candidates are:\n    replace(!Matched::Union{Function,\
    \ Type}, ::Any; count) at ~/.conda/envs/polyglot/share/julia/base/set.jl:622\n\
    \    replace(::String, !Matched::Pair...; count) where N at ~/.conda/envs/polyglot/share/julia/base/strings/util.jl:535\n\
    \    replace(::AbstractString, !Matched::Pair...; count) at ~/.conda/envs/polyglot/share/julia/base/strings/util.jl:634\n\
    \    ...\n  Stacktrace:\n   [1] words_string(s::String)\n     @ Main /tmp/tmpcig1w0e9.jl:8\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpcig1w0e9.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpcig1w0e9.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpcig1w0e9.jl:18\n  Test threw exception\n  Expression:\
    \ candidate(\"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\"\
    , \"four\", \"five\", \"six\"]\n  MethodError: no method matching replace(::String,\
    \ ::Regex, ::String)\n  Closest candidates are:\n    replace(!Matched::Union{Function,\
    \ Type}, ::Any; count) at ~/.conda/envs/polyglot/share/julia/base/set.jl:622\n\
    \    replace(::String, !Matched::Pair...; count) where N at ~/.conda/envs/polyglot/share/julia/base/strings/util.jl:535\n\
    \    replace(::AbstractString, !Matched::Pair...; count) at ~/.conda/envs/polyglot/share/julia/base/strings/util.jl:634\n\
    \    ...\n  Stacktrace:\n   [1] words_string(s::String)\n     @ Main /tmp/tmpcig1w0e9.jl:8\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpcig1w0e9.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level"
  timestamp: 1659822055
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    # write function to split string into words\n    split(s, [' ', ','])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = words_string;\n\t@test(candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\n\t@test(candidate(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\n\t@test(candidate(\"Hi, my name\") == [\"Hi\", \"my\",\
    \ \"name\"])\n\t@test(candidate(\"One,, two, three, four, five, six,\") == [\"\
    One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    \") == Vector{String}([]))\n\t@test(candidate(\"ahmed     , gamal\") == [\"ahmed\"\
    , \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpcej8206f.jl:13

    '
  stdout: "test set: Test Failed at /tmp/tmpcej8206f.jl:16\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"Hi\", \"\", \"my\", \"name\", \"is\", \"John\"] == [\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpcej8206f.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpcej8206f.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpcej8206f.jl:17\n  Expression: candidate(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n   Evaluated: [\"One\", \"\", \"two\", \"\", \"three\", \"\", \"four\", \"\"\
    , \"five\", \"\", \"six\"] == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpcej8206f.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpcej8206f.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpcej8206f.jl:18\n  Expression: candidate(\"Hi, my name\") ==\
    \ [\"Hi\", \"my\", \"name\"]\n   Evaluated: [\"Hi\", \"\", \"my\", \"name\"] ==\
    \ [\"Hi\", \"my\", \"name\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpcej8206f.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpcej8206f.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpcej8206f.jl:19\n  Expression: candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\n   Evaluated: [\"One\", \"\", \"\", \"two\", \"\", \"three\", \"\", \"\
    four\", \"\", \"five\", \"\", \"six\", \"\"] == [\"One\", \"two\", \"three\",\
    \ \"four\", \"five\", \"six\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/st"
  timestamp: 1659822054
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    c = split(s, \", \")\n    return c\nend\n@assert words_string(\"show me\
    \ the code\") == [\"show\", \"me\", \"the\", \"code\"]\n@assert words_string(\"\
    J'adore les cours de Julia\") == [\"J'adore\", \"les\", \"cours\", \"de\", \"\
    Julia\"]\nusing Test\n\n@testset begin\n\ncandidate = words_string;\n\t@test(candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\n\t@test(candidate(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\n\t@test(candidate(\"Hi, my name\") == [\"Hi\", \"my\",\
    \ \"name\"])\n\t@test(candidate(\"One,, two, three, four, five, six,\") == [\"\
    One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    \") == Vector{String}([]))\n\t@test(candidate(\"ahmed     , gamal\") == [\"ahmed\"\
    , \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: AssertionError: words_string(\"show me the code\") ==\
    \ [\"show\", \"me\", \"the\", \"code\"]\nStacktrace:\n [1] top-level scope\n \
    \  @ /tmp/tmp7936ic9b.jl:11\nin expression starting at /tmp/tmp7936ic9b.jl:11\n"
  stdout: ''
  timestamp: 1659822053
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    # convert string to a vector of strings\n    # make all letters in string\
    \ lowercase\n    # iterate over vector and remove all punctuation\n    # return\
    \ vector of strings\n   \nend\nusing Test\n\n@testset begin\n\ncandidate = words_string;\n\
    \t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\"\
    , \"John\"])\n\t@test(candidate(\"One, two, three, four, five, six\") == [\"One\"\
    , \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"Hi, my\
    \ name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp3o07kstq.jl:16

    '
  stdout: "test set: Error During Test at /tmp/tmp3o07kstq.jl:19\n  Test threw exception\n\
    \  Expression: candidate(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"]\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Vector{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::LinearAlgebra.Factorization) where T<:AbstractArray at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{Vector{String}}, !Matched::LibGit2.StrArrayStruct) at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LibGit2/src/strarray.jl:13\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at ~/.conda/envs/polyglot/share/julia/base/array.jl:554\n\
    \    ...\n  Stacktrace:\n   [1] words_string(s::String)\n     @ Main /tmp/tmp3o07kstq.jl:13\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp3o07kstq.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp3o07kstq.jl:18\ntest set:\
    \ Error During Test at /tmp/tmp3o07kstq.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\"\
    , \"four\", \"five\", \"six\"]\n  MethodError: Cannot `convert` an object of type\
    \ Nothing to an object of type Vector{String}\n  Closest candidates are:\n   \
    \ convert(::Type{T}, !Matched::LinearAlgebra.Factorization) where T<:AbstractArray\
    \ at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{Vector{String}}, !Matched::LibGit2.StrArrayStruct) at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LibGit2/src/strarray.jl:13\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at ~/.conda/envs/polyglot/share/julia/base/array.jl:554\n\
    \    ...\n  Stacktrace:\n   [1] words_string(s::String)\n     @ Main /tmp/tmp3o07kstq.jl:13\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/"
  timestamp: 1659822056
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    words = split(s, r\"[,\\s]+\")\n    return words\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = words_string;\n\t@test(candidate(\"Hi, my name is\
    \ John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\n\t@test(candidate(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\n\t@test(candidate(\"Hi, my name\") == [\"Hi\", \"my\",\
    \ \"name\"])\n\t@test(candidate(\"One,, two, three, four, five, six,\") == [\"\
    One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    \") == Vector{String}([]))\n\t@test(candidate(\"ahmed     , gamal\") == [\"ahmed\"\
    , \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpebaygb38.jl:13

    '
  stdout: "test set: Test Failed at /tmp/tmpebaygb38.jl:19\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpebaygb38.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpebaygb38.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpebaygb38.jl:20\n  Expression: candidate(\"\") == Vector{String}([])\n\
    \   Evaluated: [\"\"] == String[]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpebaygb38.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpebaygb38.jl:15\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     2      6\n"
  timestamp: 1659822055
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    return(split(s, [\" \", \",\"]))\nend\nusing Test\n\n@testset begin\n\n\
    candidate = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\"\
    , \"my\", \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four,\
    \ five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\
    \t@test(candidate(\"Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpw3643v0q.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpw3643v0q.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"]\n  MethodError: no method matching findfirst(::Vector{String},\
    \ ::String)\n  Closest candidates are:\n    findfirst(!Matched::Function, ::Union{AbstractString,\
    \ AbstractArray}) at ~/.conda/envs/polyglot/share/julia/base/array.jl:2002\n \
    \   findfirst(!Matched::Function, ::Any) at ~/.conda/envs/polyglot/share/julia/base/array.jl:1994\n\
    \    findfirst(!Matched::AbstractString, ::AbstractString) at ~/.conda/envs/polyglot/share/julia/base/strings/search.jl:104\n\
    \    ...\n  Stacktrace:\n   [1] _split(str::String, splitter::Vector{String},\
    \ limit::Int64, keepempty::Bool, strs::Vector{SubString{String}})\n     @ Base\
    \ ./strings/util.jl:435\n   [2] split(str::String, splitter::Vector{String}; limit::Int64,\
    \ keepempty::Bool)\n     @ Base ./strings/util.jl:419\n   [3] split(str::String,\
    \ splitter::Vector{String})\n     @ Base ./strings/util.jl:419\n   [4] words_string(s::String)\n\
    \     @ Main /tmp/tmpw3643v0q.jl:8\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpw3643v0q.jl:15 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpw3643v0q.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpw3643v0q.jl:16\n  Test threw exception\n  Expression:\
    \ candidate(\"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\"\
    , \"four\", \"five\", \"six\"]\n  MethodError: no method matching findfirst(::Vector{String},\
    \ ::String)\n  Closest candidates are:\n    findfirst(!Matched::Function, ::Union{AbstractString,\
    \ AbstractArray}) at ~/.conda/envs/polyglot/share/julia/base/array.jl:2002\n \
    \   findfirst(!Matched::Function, ::Any) at ~/.conda/envs/polyglot/share/julia/base/array.jl:1994\n\
    \    findfirst(!Matched::AbstractString, ::AbstractString) at ~/.conda/envs/polyglot/share/julia/base/strings/search.jl:104\n\
    \    ...\n  Stacktrace:\n   "
  timestamp: 1659822057
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    return split(lowercase(s), r\"\\W+\")\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ])\n\t@test(candidate(\"Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxev0lxd9.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpxev0lxd9.jl:15\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"hi\", \"my\", \"name\", \"is\", \"john\"] == [\"Hi\", \"my\", \"name\", \"\
    is\", \"John\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxev0lxd9.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxev0lxd9.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpxev0lxd9.jl:16\n  Expression: candidate(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n   Evaluated: [\"one\", \"two\", \"three\", \"four\", \"five\", \"six\"] ==\
    \ [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n [1]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxev0lxd9.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxev0lxd9.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpxev0lxd9.jl:17\n  Expression: candidate(\"Hi, my name\") ==\
    \ [\"Hi\", \"my\", \"name\"]\n   Evaluated: [\"hi\", \"my\", \"name\"] == [\"\
    Hi\", \"my\", \"name\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxev0lxd9.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxev0lxd9.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpxev0lxd9.jl:18\n  Expression: candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\n   Evaluated: [\"one\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    , \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro "
  timestamp: 1659822056
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    a = split(s)\n    return a\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp6lk4e8yy.jl:13

    '
  stdout: "test set: Test Failed at /tmp/tmp6lk4e8yy.jl:16\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"Hi,\", \"my\", \"name\", \"is\", \"John\"] == [\"Hi\", \"my\", \"name\",\
    \ \"is\", \"John\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6lk4e8yy.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6lk4e8yy.jl:15\ntest set: Test\
    \ Failed at /tmp/tmp6lk4e8yy.jl:17\n  Expression: candidate(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n   Evaluated: [\"One,\", \"two,\", \"three,\", \"four,\", \"five,\", \"six\"\
    ] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6lk4e8yy.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6lk4e8yy.jl:15\ntest set: Test\
    \ Failed at /tmp/tmp6lk4e8yy.jl:18\n  Expression: candidate(\"Hi, my name\") ==\
    \ [\"Hi\", \"my\", \"name\"]\n   Evaluated: [\"Hi,\", \"my\", \"name\"] == [\"\
    Hi\", \"my\", \"name\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6lk4e8yy.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6lk4e8yy.jl:15\ntest set: Test\
    \ Failed at /tmp/tmp6lk4e8yy.jl:19\n  Expression: candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\n   Evaluated: [\"One,,\", \"two,\", \"three,\", \"four,\", \"five,\",\
    \ \"six,\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n "
  timestamp: 1659822057
- exit_code: -1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    split(s, [\" \", \",\"])\nend\nwords_string(\"\")\nusing Test\n\n@testset\
    \ begin\n\ncandidate = words_string;\n\t@test(candidate(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\
    \t@test(candidate(\"One,, two, three, four, five, six,\") == [\"One\", \"two\"\
    , \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\
    \t@test(candidate(\"ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: Timeout
  stderr: 'b''ERROR: LoadError: MethodError: no method matching findfirst(::Vector{String},
    ::String)\nClosest candidates are:\n  findfirst(!Matched::Function, ::Union{AbstractString,
    AbstractArray}) at ~/.conda/envs/polyglot/share/julia/base/array.jl:2002\n  findfirst(!Matched::Function,
    ::Any) at ~/.conda/envs/polyglot/share/julia/base/array.jl:1994\n  findfirst(!Matched::AbstractString,
    ::AbstractString) at ~/.conda/envs/polyglot/share/julia/base/strings/search.jl:104\n  ...\nStacktrace:\n
    [1] _split(str::'''
  stdout: None
  timestamp: 1659822059
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    return split(s)\nend\nusing Test\n\n@testset begin\n\ncandidate = words_string;\n\
    \t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\"\
    , \"John\"])\n\t@test(candidate(\"One, two, three, four, five, six\") == [\"One\"\
    , \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"Hi, my\
    \ name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpy9_padcp.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpy9_padcp.jl:15\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"Hi,\", \"my\", \"name\", \"is\", \"John\"] == [\"Hi\", \"my\", \"name\",\
    \ \"is\", \"John\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy9_padcp.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpy9_padcp.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpy9_padcp.jl:16\n  Expression: candidate(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n   Evaluated: [\"One,\", \"two,\", \"three,\", \"four,\", \"five,\", \"six\"\
    ] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy9_padcp.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpy9_padcp.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpy9_padcp.jl:17\n  Expression: candidate(\"Hi, my name\") ==\
    \ [\"Hi\", \"my\", \"name\"]\n   Evaluated: [\"Hi,\", \"my\", \"name\"] == [\"\
    Hi\", \"my\", \"name\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy9_padcp.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpy9_padcp.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpy9_padcp.jl:18\n  Expression: candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\n   Evaluated: [\"One,,\", \"two,\", \"three,\", \"four,\", \"five,\",\
    \ \"six,\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n "
  timestamp: 1659822054
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    # split string at commas and spaces\n    words_str = split(s, /[ ,]+/)\n\
    \    return words_str\nend\nusing Test\n\n@testset begin\n\ncandidate = words_string;\n\
    \t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\"\
    , \"John\"])\n\t@test(candidate(\"One, two, three, four, five, six\") == [\"One\"\
    , \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"Hi, my\
    \ name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"/\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp596vouj9.jl:9\nin expression starting at /tmp/tmp596vouj9.jl:9\n"
  stdout: ''
  timestamp: 1659822055
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    return split(s) \nend\nusing Test\n\n@testset begin\n\ncandidate = words_string;\n\
    \t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\"\
    , \"John\"])\n\t@test(candidate(\"One, two, three, four, five, six\") == [\"One\"\
    , \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"Hi, my\
    \ name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp6h1znpg2.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmp6h1znpg2.jl:15\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"Hi,\", \"my\", \"name\", \"is\", \"John\"] == [\"Hi\", \"my\", \"name\",\
    \ \"is\", \"John\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6h1znpg2.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6h1znpg2.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp6h1znpg2.jl:16\n  Expression: candidate(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n   Evaluated: [\"One,\", \"two,\", \"three,\", \"four,\", \"five,\", \"six\"\
    ] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6h1znpg2.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6h1znpg2.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp6h1znpg2.jl:17\n  Expression: candidate(\"Hi, my name\") ==\
    \ [\"Hi\", \"my\", \"name\"]\n   Evaluated: [\"Hi,\", \"my\", \"name\"] == [\"\
    Hi\", \"my\", \"name\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6h1znpg2.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6h1znpg2.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp6h1znpg2.jl:18\n  Expression: candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\n   Evaluated: [\"One,,\", \"two,\", \"three,\", \"four,\", \"five,\",\
    \ \"six,\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n "
  timestamp: 1659822056
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    s.split(\" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = words_string;\n\
    \t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\"\
    , \"John\"])\n\t@test(candidate(\"One, two, three, four, five, six\") == [\"One\"\
    , \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"Hi, my\
    \ name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpnk8mh_71.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpnk8mh_71.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"]\n  type String has no field split\n  Stacktrace:\n   [1] getproperty\n\
    \     @ ./Base.jl:42 [inlined]\n   [2] words_string(s::String)\n     @ Main /tmp/tmpnk8mh_71.jl:8\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpnk8mh_71.jl:15 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpnk8mh_71.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpnk8mh_71.jl:16\n  Test threw exception\n  Expression:\
    \ candidate(\"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\"\
    , \"four\", \"five\", \"six\"]\n  type String has no field split\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] words_string(s::String)\n\
    \     @ Main /tmp/tmpnk8mh_71.jl:8\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpnk8mh_71.jl:16 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpnk8mh_71.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpnk8mh_71.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(\"Hi, my name\") == [\"Hi\", \"my\", \"name\"]\n  type String has\
    \ no field split\n  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n\
    \   [2] words_string(s::String)\n     @ Main /tmp/tmpnk8mh_71.jl:8\n   [3] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpnk8mh_71.jl:17 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpnk8mh_71.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpnk8mh_71.jl:18\n  Test threw exception\n"
  timestamp: 1659822057
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    return split(s)\nend\nusing Test\n\n@testset begin\n\ncandidate = words_string;\n\
    \t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\"\
    , \"John\"])\n\t@test(candidate(\"One, two, three, four, five, six\") == [\"One\"\
    , \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"Hi, my\
    \ name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpy9_padcp.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpy9_padcp.jl:15\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"Hi,\", \"my\", \"name\", \"is\", \"John\"] == [\"Hi\", \"my\", \"name\",\
    \ \"is\", \"John\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy9_padcp.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpy9_padcp.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpy9_padcp.jl:16\n  Expression: candidate(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n   Evaluated: [\"One,\", \"two,\", \"three,\", \"four,\", \"five,\", \"six\"\
    ] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy9_padcp.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpy9_padcp.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpy9_padcp.jl:17\n  Expression: candidate(\"Hi, my name\") ==\
    \ [\"Hi\", \"my\", \"name\"]\n   Evaluated: [\"Hi,\", \"my\", \"name\"] == [\"\
    Hi\", \"my\", \"name\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy9_padcp.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpy9_padcp.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpy9_padcp.jl:18\n  Expression: candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\n   Evaluated: [\"One,,\", \"two,\", \"three,\", \"four,\", \"five,\",\
    \ \"six,\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n "
  timestamp: 1659822054
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    split(s, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = words_string;\n\
    \t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\"\
    , \"John\"])\n\t@test(candidate(\"One, two, three, four, five, six\") == [\"One\"\
    , \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"Hi, my\
    \ name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp205ptutc.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmp205ptutc.jl:15\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"Hi,\", \"my\", \"name\", \"is\", \"John\"] == [\"Hi\", \"my\", \"name\",\
    \ \"is\", \"John\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp205ptutc.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp205ptutc.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp205ptutc.jl:16\n  Expression: candidate(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n   Evaluated: [\"One,\", \"two,\", \"three,\", \"four,\", \"five,\", \"six\"\
    ] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp205ptutc.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp205ptutc.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp205ptutc.jl:17\n  Expression: candidate(\"Hi, my name\") ==\
    \ [\"Hi\", \"my\", \"name\"]\n   Evaluated: [\"Hi,\", \"my\", \"name\"] == [\"\
    Hi\", \"my\", \"name\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp205ptutc.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp205ptutc.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp205ptutc.jl:18\n  Expression: candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\n   Evaluated: [\"One,,\", \"two,\", \"three,\", \"four,\", \"five,\",\
    \ \"six,\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n "
  timestamp: 1659822057
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    return split(s)\nend\nusing Test\n\n@testset begin\n\ncandidate = words_string;\n\
    \t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\"\
    , \"John\"])\n\t@test(candidate(\"One, two, three, four, five, six\") == [\"One\"\
    , \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"Hi, my\
    \ name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpy9_padcp.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpy9_padcp.jl:15\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"Hi,\", \"my\", \"name\", \"is\", \"John\"] == [\"Hi\", \"my\", \"name\",\
    \ \"is\", \"John\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy9_padcp.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpy9_padcp.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpy9_padcp.jl:16\n  Expression: candidate(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n   Evaluated: [\"One,\", \"two,\", \"three,\", \"four,\", \"five,\", \"six\"\
    ] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy9_padcp.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpy9_padcp.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpy9_padcp.jl:17\n  Expression: candidate(\"Hi, my name\") ==\
    \ [\"Hi\", \"my\", \"name\"]\n   Evaluated: [\"Hi,\", \"my\", \"name\"] == [\"\
    Hi\", \"my\", \"name\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy9_padcp.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpy9_padcp.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpy9_padcp.jl:18\n  Expression: candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\n   Evaluated: [\"One,,\", \"two,\", \"three,\", \"four,\", \"five,\",\
    \ \"six,\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n "
  timestamp: 1659822054
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    s = split(s, r\"[\\s,]+\")\n    s\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ])\n\t@test(candidate(\"Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmplcd_wpg1.jl:13

    '
  stdout: "test set: Test Failed at /tmp/tmplcd_wpg1.jl:19\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplcd_wpg1.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplcd_wpg1.jl:15\ntest set: Test\
    \ Failed at /tmp/tmplcd_wpg1.jl:20\n  Expression: candidate(\"\") == Vector{String}([])\n\
    \   Evaluated: [\"\"] == String[]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplcd_wpg1.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplcd_wpg1.jl:15\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     2      6\n"
  timestamp: 1659822056
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    split(s,r\"\\s+|,\")\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmptlverhze.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmptlverhze.jl:15\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"Hi\", \"\", \"my\", \"name\", \"is\", \"John\"] == [\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptlverhze.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptlverhze.jl:14\ntest set: Test\
    \ Failed at /tmp/tmptlverhze.jl:16\n  Expression: candidate(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n   Evaluated: [\"One\", \"\", \"two\", \"\", \"three\", \"\", \"four\", \"\"\
    , \"five\", \"\", \"six\"] == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptlverhze.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptlverhze.jl:14\ntest set: Test\
    \ Failed at /tmp/tmptlverhze.jl:17\n  Expression: candidate(\"Hi, my name\") ==\
    \ [\"Hi\", \"my\", \"name\"]\n   Evaluated: [\"Hi\", \"\", \"my\", \"name\"] ==\
    \ [\"Hi\", \"my\", \"name\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptlverhze.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptlverhze.jl:14\ntest set: Test\
    \ Failed at /tmp/tmptlverhze.jl:18\n  Expression: candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\n   Evaluated: [\"One\", \"\", \"\", \"two\", \"\", \"three\", \"\", \"\
    four\", \"\", \"five\", \"\", \"six\", \"\"] == [\"One\", \"two\", \"three\",\
    \ \"four\", \"five\", \"six\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/st"
  timestamp: 1659822057
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    words_string(\"one two, three four\") # returns [\"one\", \"two\", \"\
    three\", \"four\"]\n    \"\"\"\n    Your word splitting should be intelligent\
    \ and not split up words that are quoted.\n    \n    For example:\n          \
    \  \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = words_string;\n\t@test(candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\n\t@test(candidate(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\n\t@test(candidate(\"Hi, my name\") == [\"Hi\", \"my\",\
    \ \"name\"])\n\t@test(candidate(\"One,, two, three, four, five, six,\") == [\"\
    One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    \") == Vector{String}([]))\n\t@test(candidate(\"ahmed     , gamal\") == [\"ahmed\"\
    , \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpab5qlz6m.jl:7\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpab5qlz6m.jl:1\n\
    in expression starting at /tmp/tmpab5qlz6m.jl:1\n"
  stdout: ''
  timestamp: 1659822055
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n  return split(s, r\"\\s*\\,*\\s*\")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\"\
    , \"my\", \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four,\
    \ five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\
    \t@test(candidate(\"Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpqyflijkh.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpqyflijkh.jl:15\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"H\", \"i\", \"m\", \"y\", \"n\", \"a\", \"m\", \"e\", \"i\", \"s\", \"J\"\
    , \"o\", \"h\", \"n\"] == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqyflijkh.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqyflijkh.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpqyflijkh.jl:16\n  Expression: candidate(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n   Evaluated: [\"O\", \"n\", \"e\", \"t\", \"w\", \"o\", \"t\", \"h\", \"r\"\
    , \"e\"  \u2026  \"o\", \"u\", \"r\", \"f\", \"i\", \"v\", \"e\", \"s\", \"i\"\
    , \"x\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqyflijkh.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqyflijkh.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpqyflijkh.jl:17\n  Expression: candidate(\"Hi, my name\") ==\
    \ [\"Hi\", \"my\", \"name\"]\n   Evaluated: [\"H\", \"i\", \"m\", \"y\", \"n\"\
    , \"a\", \"m\", \"e\"] == [\"Hi\", \"my\", \"name\"]\nStacktrace:\n [1] macro\
    \ expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqyflijkh.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqyflijkh.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpqyflijkh.jl:18\n  Expression: candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\n   Evaluated: [\"O\", \"n\", \"e\", \"t\", \"w\", \"o\", \"t\", \"h\"\
    , \"r\", \"e\"  \u2026  \"u\", \"r\", \"f\", \"i\", \"v\", \"e\", \"s\", \"i\"\
    , \"x\", \"\"] == [\"One\", \""
  timestamp: 1659822057
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    # split the string into words.\n    # If the string is empty, it should\
    \ return an empty array.\n    # If the string is a word, it should return an array\
    \ with one element.\n    # If the string is \"hello word,\", it should return\
    \ an array of words: [\"hello\", \"word\"].\n    \n    words = split(s)\n    return\
    \ words\nend\nusing Test\n\n@testset begin\n\ncandidate = words_string;\n\t@test(candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\n\t@test(candidate(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\n\t@test(candidate(\"Hi, my name\") == [\"Hi\", \"my\",\
    \ \"name\"])\n\t@test(candidate(\"One,, two, three, four, five, six,\") == [\"\
    One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    \") == Vector{String}([]))\n\t@test(candidate(\"ahmed     , gamal\") == [\"ahmed\"\
    , \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpfkgbh3iv.jl:18

    '
  stdout: "test set: Test Failed at /tmp/tmpfkgbh3iv.jl:21\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"Hi,\", \"my\", \"name\", \"is\", \"John\"] == [\"Hi\", \"my\", \"name\",\
    \ \"is\", \"John\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfkgbh3iv.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfkgbh3iv.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpfkgbh3iv.jl:22\n  Expression: candidate(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n   Evaluated: [\"One,\", \"two,\", \"three,\", \"four,\", \"five,\", \"six\"\
    ] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfkgbh3iv.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfkgbh3iv.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpfkgbh3iv.jl:23\n  Expression: candidate(\"Hi, my name\") ==\
    \ [\"Hi\", \"my\", \"name\"]\n   Evaluated: [\"Hi,\", \"my\", \"name\"] == [\"\
    Hi\", \"my\", \"name\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfkgbh3iv.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfkgbh3iv.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpfkgbh3iv.jl:24\n  Expression: candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\n   Evaluated: [\"One,,\", \"two,\", \"three,\", \"four,\", \"five,\",\
    \ \"six,\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n "
  timestamp: 1659822057
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    split(s, r\"[, ]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp41yahjkb.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmp41yahjkb.jl:18\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp41yahjkb.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp41yahjkb.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp41yahjkb.jl:19\n  Expression: candidate(\"\") == Vector{String}([])\n\
    \   Evaluated: [\"\"] == String[]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp41yahjkb.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp41yahjkb.jl:14\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     2      6\n"
  timestamp: 1659822057
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    #s = split(s, \", | \")\n    return split(s, r\"[\\s,]\")\nend\n\"\"\"\
    \n    Note that the string might contain extra leading and/or trailing spaces,\
    \ so \n    you will need to remove them.\n    \n    ## Examples\n    \n    ```julia\n\
    \    julia> words_string(\"\")\n    String[]\n    \n    julia> words_string(\"\
    Hello\")\n    String[\"Hello\"]\n    \n    julia> words_string(\"Hello, World!\"\
    )\n    String[\"Hello\", \"World!\"]\n    \n    julia> words_string(\"Hello, \
    \   World!\")\n    String[\"Hello\", \"World!\"]\n    \n    julia> words_string(\"\
    Hello, World!    \")\n    String[\"Hello\", \"World!\"]\n    \n    julia> words_string(\"\
    \    Hello, World!\")\n    String[\"Hello\", \"World!\"]\n    \n    julia> words_string(\"\
    Hello, World!, How, Are, You?\")\n    String[\"Hello\", \"World!\", \"How\", \"\
    Are\", \"You?\"]\n    \n    julia> words_string(\"Hello, World!, How, Are, You?,\
    \    \")\n    String[\"Hello\", \"World!\", \"How\", \"Are\", \"You?\"]\n    \n\
    \    julia> words_string(\"    Hello, World!, How, Are, You?\")\n    String[\"\
    Hello\", \"World!\", \"How\", \"Are\", \"You?\"]\n    \n    julia> words_string(\"\
    \    Hello,    World!,    How,    Are,    You?    \")\n    String[\"Hello\", \"\
    World!\", \"How\", \"Are\", \"You?\"]\n    ```\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = words_string;\n\t@test(candidate(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\
    \t@test(candidate(\"One,, two, three, four, five, six,\") == [\"One\", \"two\"\
    , \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\
    \t@test(candidate(\"ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: cannot document the following expression:\n\nusing Test\n\
    \nStacktrace:\n [1] error(::String, ::String)\n   @ Base ./error.jl:42\n [2] top-level\
    \ scope\n   @ /tmp/tmp8v3vi_7l.jl:11\nin expression starting at /tmp/tmp8v3vi_7l.jl:11\n"
  stdout: ''
  timestamp: 1659822056
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    # split string at commas and spaces\n    s = split(s, \" ,\")\n    # delete\
    \ empty words\n    s = delete!(s, r\"\")\n    return s\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = words_string;\n\t@test(candidate(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\
    \t@test(candidate(\"One,, two, three, four, five, six,\") == [\"One\", \"two\"\
    , \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\
    \t@test(candidate(\"ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmptk246fio.jl:16

    '
  stdout: "test set: Error During Test at /tmp/tmptk246fio.jl:19\n  Test threw exception\n\
    \  Expression: candidate(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"]\n  MethodError: no method matching delete!(::Vector{SubString{String}},\
    \ ::Regex)\n  Closest candidates are:\n    delete!(!Matched::IdDict{K}, ::Any)\
    \ where K at ~/.conda/envs/polyglot/share/julia/base/iddict.jl:130\n    delete!(!Matched::Base.IdSet,\
    \ ::Any) at ~/.conda/envs/polyglot/share/julia/base/idset.jl:23\n    delete!(!Matched::Dict,\
    \ ::Any) at ~/.conda/envs/polyglot/share/julia/base/dict.jl:661\n    ...\n  Stacktrace:\n\
    \   [1] words_string(s::String)\n     @ Main /tmp/tmptk246fio.jl:11\n   [2] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmptk246fio.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmptk246fio.jl:18\ntest set:\
    \ Error During Test at /tmp/tmptk246fio.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\"\
    , \"four\", \"five\", \"six\"]\n  MethodError: no method matching delete!(::Vector{SubString{String}},\
    \ ::Regex)\n  Closest candidates are:\n    delete!(!Matched::IdDict{K}, ::Any)\
    \ where K at ~/.conda/envs/polyglot/share/julia/base/iddict.jl:130\n    delete!(!Matched::Base.IdSet,\
    \ ::Any) at ~/.conda/envs/polyglot/share/julia/base/idset.jl:23\n    delete!(!Matched::Dict,\
    \ ::Any) at ~/.conda/envs/polyglot/share/julia/base/dict.jl:661\n    ...\n  Stacktrace:\n\
    \   [1] words_string(s::String)\n     @ Main /tmp/tmptk246fio.jl:11\n   [2] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmptk246fio.jl:20 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmptk246fio.jl:18\ntest set:\
    \ Error During Test at /tmp/tmptk246fio.jl:21\n  Test th"
  timestamp: 1659822060
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    words = split(s, \" \")\n    return words\nend\n    \n\"\"\"\n    You\
    \ will be given an array of numbers and a target number. Your task is to\n   \
    \ determine if you can reach the target by adding two of the numbers from the\n\
    \    array. Return true if you can reach the target, otherwise, return false.\n\
    \    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = words_string;\n\t@test(candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\n\t@test(candidate(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\n\t@test(candidate(\"Hi, my name\") == [\"Hi\", \"my\",\
    \ \"name\"])\n\t@test(candidate(\"One,, two, three, four, five, six,\") == [\"\
    One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    \") == Vector{String}([]))\n\t@test(candidate(\"ahmed     , gamal\") == [\"ahmed\"\
    , \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: cannot document the following expression:\n\nusing Test\n\
    \nStacktrace:\n [1] error(::String, ::String)\n   @ Base ./error.jl:42\n [2] top-level\
    \ scope\n   @ /tmp/tmpl5p_w_cl.jl:12\nin expression starting at /tmp/tmpl5p_w_cl.jl:12\n"
  stdout: ''
  timestamp: 1659822058
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    split(s, r\"[\\s,]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp7tvgh48a.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmp7tvgh48a.jl:18\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7tvgh48a.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7tvgh48a.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp7tvgh48a.jl:19\n  Expression: candidate(\"\") == Vector{String}([])\n\
    \   Evaluated: [\"\"] == String[]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7tvgh48a.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7tvgh48a.jl:14\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     2      6\n"
  timestamp: 1659822058
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    split(s)\nend\nusing Test\n\n@testset begin\n\ncandidate = words_string;\n\
    \t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\"\
    , \"John\"])\n\t@test(candidate(\"One, two, three, four, five, six\") == [\"One\"\
    , \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"Hi, my\
    \ name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpp3_2nvm5.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpp3_2nvm5.jl:15\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"Hi,\", \"my\", \"name\", \"is\", \"John\"] == [\"Hi\", \"my\", \"name\",\
    \ \"is\", \"John\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpp3_2nvm5.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpp3_2nvm5.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpp3_2nvm5.jl:16\n  Expression: candidate(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n   Evaluated: [\"One,\", \"two,\", \"three,\", \"four,\", \"five,\", \"six\"\
    ] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpp3_2nvm5.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpp3_2nvm5.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpp3_2nvm5.jl:17\n  Expression: candidate(\"Hi, my name\") ==\
    \ [\"Hi\", \"my\", \"name\"]\n   Evaluated: [\"Hi,\", \"my\", \"name\"] == [\"\
    Hi\", \"my\", \"name\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpp3_2nvm5.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpp3_2nvm5.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpp3_2nvm5.jl:18\n  Expression: candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\n   Evaluated: [\"One,,\", \"two,\", \"three,\", \"four,\", \"five,\",\
    \ \"six,\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n "
  timestamp: 1659822054
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    s_array = split(s, /[, ]+/)\n    s_array\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = words_string;\n\t@test(candidate(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\
    \t@test(candidate(\"One,, two, three, four, five, six,\") == [\"One\", \"two\"\
    , \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\
    \t@test(candidate(\"ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"/\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp3axojzop.jl:8\nin expression starting at /tmp/tmp3axojzop.jl:8\n"
  stdout: ''
  timestamp: 1659822057
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    words = []\n    for a = split(s, \" \")\n        for b = split(a, \",\"\
    )\n            push!(words, b)\n        end\n    end\n    return words\nend\n\
    using Test\n\n@testset begin\n\ncandidate = words_string;\n\t@test(candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\n\t@test(candidate(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\n\t@test(candidate(\"Hi, my name\") == [\"Hi\", \"my\",\
    \ \"name\"])\n\t@test(candidate(\"One,, two, three, four, five, six,\") == [\"\
    One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    \") == Vector{String}([]))\n\t@test(candidate(\"ahmed     , gamal\") == [\"ahmed\"\
    , \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmptygudsf3.jl:18

    '
  stdout: "test set: Test Failed at /tmp/tmptygudsf3.jl:21\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"Hi\", \"\", \"my\", \"name\", \"is\", \"John\"] == [\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptygudsf3.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptygudsf3.jl:20\ntest set: Test\
    \ Failed at /tmp/tmptygudsf3.jl:22\n  Expression: candidate(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n   Evaluated: [\"One\", \"\", \"two\", \"\", \"three\", \"\", \"four\", \"\"\
    , \"five\", \"\", \"six\"] == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptygudsf3.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptygudsf3.jl:20\ntest set: Test\
    \ Failed at /tmp/tmptygudsf3.jl:23\n  Expression: candidate(\"Hi, my name\") ==\
    \ [\"Hi\", \"my\", \"name\"]\n   Evaluated: [\"Hi\", \"\", \"my\", \"name\"] ==\
    \ [\"Hi\", \"my\", \"name\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptygudsf3.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptygudsf3.jl:20\ntest set: Test\
    \ Failed at /tmp/tmptygudsf3.jl:24\n  Expression: candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\n   Evaluated: [\"One\", \"\", \"\", \"two\", \"\", \"three\", \"\", \"\
    four\", \"\", \"five\", \"\", \"six\", \"\"] == [\"One\", \"two\", \"three\",\
    \ \"four\", \"five\", \"six\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/st"
  timestamp: 1659822058
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    split(s, r\"\\s*,\\s*\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpzewbxy0d.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpzewbxy0d.jl:15\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"Hi\", \"my name is John\"] == [\"Hi\", \"my\", \"name\", \"is\", \"John\"\
    ]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzewbxy0d.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzewbxy0d.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpzewbxy0d.jl:17\n  Expression: candidate(\"Hi, my name\") ==\
    \ [\"Hi\", \"my\", \"name\"]\n   Evaluated: [\"Hi\", \"my name\"] == [\"Hi\",\
    \ \"my\", \"name\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzewbxy0d.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzewbxy0d.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpzewbxy0d.jl:18\n  Expression: candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\n   Evaluated: [\"One\", \"\", \"two\", \"three\", \"four\", \"five\",\
    \ \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzewbxy0d.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzewbxy0d.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpzewbxy0d.jl:19\n  Expression: candidate(\"\") == Vector{String}([])\n\
    \   Evaluated: [\"\"] == String[]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzewbxy0d.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inli"
  timestamp: 1659822058
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    a = split(s, [\",\", \" \"])\n    b = filter(e->length(e)>0, a)\n    return\
    \ b\nend\nusing Test\n\n@testset begin\n\ncandidate = words_string;\n\t@test(candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\n\t@test(candidate(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\n\t@test(candidate(\"Hi, my name\") == [\"Hi\", \"my\",\
    \ \"name\"])\n\t@test(candidate(\"One,, two, three, four, five, six,\") == [\"\
    One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    \") == Vector{String}([]))\n\t@test(candidate(\"ahmed     , gamal\") == [\"ahmed\"\
    , \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp5b17rr8x.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmp5b17rr8x.jl:17\n  Test threw exception\n\
    \  Expression: candidate(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"]\n  MethodError: no method matching findfirst(::Vector{String},\
    \ ::String)\n  Closest candidates are:\n    findfirst(!Matched::Function, ::Union{AbstractString,\
    \ AbstractArray}) at ~/.conda/envs/polyglot/share/julia/base/array.jl:2002\n \
    \   findfirst(!Matched::Function, ::Any) at ~/.conda/envs/polyglot/share/julia/base/array.jl:1994\n\
    \    findfirst(!Matched::AbstractString, ::AbstractString) at ~/.conda/envs/polyglot/share/julia/base/strings/search.jl:104\n\
    \    ...\n  Stacktrace:\n   [1] _split(str::String, splitter::Vector{String},\
    \ limit::Int64, keepempty::Bool, strs::Vector{SubString{String}})\n     @ Base\
    \ ./strings/util.jl:435\n   [2] split(str::String, splitter::Vector{String}; limit::Int64,\
    \ keepempty::Bool)\n     @ Base ./strings/util.jl:419\n   [3] split(str::String,\
    \ splitter::Vector{String})\n     @ Base ./strings/util.jl:419\n   [4] words_string(s::String)\n\
    \     @ Main /tmp/tmp5b17rr8x.jl:8\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmp5b17rr8x.jl:17 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmp5b17rr8x.jl:16\ntest set:\
    \ Error During Test at /tmp/tmp5b17rr8x.jl:18\n  Test threw exception\n  Expression:\
    \ candidate(\"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\"\
    , \"four\", \"five\", \"six\"]\n  MethodError: no method matching findfirst(::Vector{String},\
    \ ::String)\n  Closest candidates are:\n    findfirst(!Matched::Function, ::Union{AbstractString,\
    \ AbstractArray}) at ~/.conda/envs/polyglot/share/julia/base/array.jl:2002\n \
    \   findfirst(!Matched::Function, ::Any) at ~/.conda/envs/polyglot/share/julia/base/array.jl:1994\n\
    \    findfirst(!Matched::AbstractString, ::AbstractString) at ~/.conda/envs/polyglot/share/julia/base/strings/search.jl:104\n\
    \    ...\n  Stacktrace:\n   "
  timestamp: 1659822060
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    words = split(s, \" \")\n    return words\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = words_string;\n\t@test(candidate(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\
    \t@test(candidate(\"One,, two, three, four, five, six,\") == [\"One\", \"two\"\
    , \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\
    \t@test(candidate(\"ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp43yipfhh.jl:13

    '
  stdout: "test set: Test Failed at /tmp/tmp43yipfhh.jl:16\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"Hi,\", \"my\", \"name\", \"is\", \"John\"] == [\"Hi\", \"my\", \"name\",\
    \ \"is\", \"John\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp43yipfhh.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp43yipfhh.jl:15\ntest set: Test\
    \ Failed at /tmp/tmp43yipfhh.jl:17\n  Expression: candidate(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n   Evaluated: [\"One,\", \"two,\", \"three,\", \"four,\", \"five,\", \"six\"\
    ] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp43yipfhh.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp43yipfhh.jl:15\ntest set: Test\
    \ Failed at /tmp/tmp43yipfhh.jl:18\n  Expression: candidate(\"Hi, my name\") ==\
    \ [\"Hi\", \"my\", \"name\"]\n   Evaluated: [\"Hi,\", \"my\", \"name\"] == [\"\
    Hi\", \"my\", \"name\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp43yipfhh.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp43yipfhh.jl:15\ntest set: Test\
    \ Failed at /tmp/tmp43yipfhh.jl:19\n  Expression: candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\n   Evaluated: [\"One,,\", \"two,\", \"three,\", \"four,\", \"five,\",\
    \ \"six,\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n "
  timestamp: 1659822058
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    split(s, r\"\\s*,\\s*\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpzewbxy0d.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpzewbxy0d.jl:15\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"Hi\", \"my name is John\"] == [\"Hi\", \"my\", \"name\", \"is\", \"John\"\
    ]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzewbxy0d.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzewbxy0d.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpzewbxy0d.jl:17\n  Expression: candidate(\"Hi, my name\") ==\
    \ [\"Hi\", \"my\", \"name\"]\n   Evaluated: [\"Hi\", \"my name\"] == [\"Hi\",\
    \ \"my\", \"name\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzewbxy0d.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzewbxy0d.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpzewbxy0d.jl:18\n  Expression: candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\n   Evaluated: [\"One\", \"\", \"two\", \"three\", \"four\", \"five\",\
    \ \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzewbxy0d.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzewbxy0d.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpzewbxy0d.jl:19\n  Expression: candidate(\"\") == Vector{String}([])\n\
    \   Evaluated: [\"\"] == String[]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzewbxy0d.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inli"
  timestamp: 1659822058
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    return split(s, r\"\\s*[,\\s]\\s*\")\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ])\n\t@test(candidate(\"Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpru9l0wm3.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpru9l0wm3.jl:18\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\n   Evaluated: [\"One\", \"\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpru9l0wm3.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpru9l0wm3.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpru9l0wm3.jl:19\n  Expression: candidate(\"\") == Vector{String}([])\n\
    \   Evaluated: [\"\"] == String[]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpru9l0wm3.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpru9l0wm3.jl:14\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     2      6\n"
  timestamp: 1659822059
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    out = split(s)\n    return out\nend\nusing Test\n\n@testset begin\n\n\
    candidate = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\"\
    , \"my\", \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four,\
    \ five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\
    \t@test(candidate(\"Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp8wj6hanc.jl:13

    '
  stdout: "test set: Test Failed at /tmp/tmp8wj6hanc.jl:16\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"Hi,\", \"my\", \"name\", \"is\", \"John\"] == [\"Hi\", \"my\", \"name\",\
    \ \"is\", \"John\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8wj6hanc.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8wj6hanc.jl:15\ntest set: Test\
    \ Failed at /tmp/tmp8wj6hanc.jl:17\n  Expression: candidate(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n   Evaluated: [\"One,\", \"two,\", \"three,\", \"four,\", \"five,\", \"six\"\
    ] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8wj6hanc.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8wj6hanc.jl:15\ntest set: Test\
    \ Failed at /tmp/tmp8wj6hanc.jl:18\n  Expression: candidate(\"Hi, my name\") ==\
    \ [\"Hi\", \"my\", \"name\"]\n   Evaluated: [\"Hi,\", \"my\", \"name\"] == [\"\
    Hi\", \"my\", \"name\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8wj6hanc.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8wj6hanc.jl:15\ntest set: Test\
    \ Failed at /tmp/tmp8wj6hanc.jl:19\n  Expression: candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\n   Evaluated: [\"One,,\", \"two,\", \"three,\", \"four,\", \"five,\",\
    \ \"six,\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n "
  timestamp: 1659822058
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    # your code here\n    s = strip(s)\n    j = 0\n    words = []\n    for\
    \ i in 1:length(s)\n        if s[i] == ' ' || s[i] == ','\n            words =\
    \ [words; s[j+1:i-1]]\n            j = i\n        end\n    end\n    words = [words;\
    \ s[j+1:end]]\n    return words\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpr8wt9h1t.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmpr8wt9h1t.jl:26\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"Hi\", \"\", \"my\", \"name\", \"is\", \"John\"] == [\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpr8wt9h1t.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpr8wt9h1t.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpr8wt9h1t.jl:27\n  Expression: candidate(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n   Evaluated: [\"One\", \"\", \"two\", \"\", \"three\", \"\", \"four\", \"\"\
    , \"five\", \"\", \"six\"] == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpr8wt9h1t.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpr8wt9h1t.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpr8wt9h1t.jl:28\n  Expression: candidate(\"Hi, my name\") ==\
    \ [\"Hi\", \"my\", \"name\"]\n   Evaluated: [\"Hi\", \"\", \"my\", \"name\"] ==\
    \ [\"Hi\", \"my\", \"name\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpr8wt9h1t.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpr8wt9h1t.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpr8wt9h1t.jl:29\n  Expression: candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\n   Evaluated: [\"One\", \"\", \"\", \"two\", \"\", \"three\", \"\", \"\
    four\", \"\", \"five\", \"\", \"six\", \"\"] == [\"One\", \"two\", \"three\",\
    \ \"four\", \"five\", \"six\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/st"
  timestamp: 1659822059
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    # first, split the string into an array of words\n    s_split = split(s,\
    \ \" \")\n    # next, remove the commas\n    words = split(s_split, \",\")\n \
    \   return words\nend\nusing Test\n\n@testset begin\n\ncandidate = words_string;\n\
    \t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\"\
    , \"John\"])\n\t@test(candidate(\"One, two, three, four, five, six\") == [\"One\"\
    , \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"Hi, my\
    \ name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpf0r8mti6.jl:16

    '
  stdout: "test set: Error During Test at /tmp/tmpf0r8mti6.jl:19\n  Test threw exception\n\
    \  Expression: candidate(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"]\n  MethodError: no method matching split(::Vector{SubString{String}},\
    \ ::String)\n  Closest candidates are:\n    split(!Matched::T, ::Any; limit, keepempty)\
    \ where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/util.jl:417\n\
    \  Stacktrace:\n   [1] words_string(s::String)\n     @ Main /tmp/tmpf0r8mti6.jl:11\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpf0r8mti6.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpf0r8mti6.jl:18\ntest set:\
    \ Error During Test at /tmp/tmpf0r8mti6.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\"\
    , \"four\", \"five\", \"six\"]\n  MethodError: no method matching split(::Vector{SubString{String}},\
    \ ::String)\n  Closest candidates are:\n    split(!Matched::T, ::Any; limit, keepempty)\
    \ where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/util.jl:417\n\
    \  Stacktrace:\n   [1] words_string(s::String)\n     @ Main /tmp/tmpf0r8mti6.jl:11\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpf0r8mti6.jl:20 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpf0r8mti6.jl:18\ntest set:\
    \ Error During Test at /tmp/tmpf0r8mti6.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(\"Hi, my name\") == [\"Hi\", \"my\", \"name\"]\n  MethodError: no\
    \ method matching split(::Vector{SubString{String}}, ::String)\n  Closest candidates\
    \ are:\n    split(!Matched::T, ::Any; limit, keepempty) where T<:AbstractString\
    \ at ~/.conda/envs/polyglot/share/julia/base/strings/util.jl:417\n  Stacktrace:"
  timestamp: 1659822061
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    return split(s, r\"[\\s,]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpuitkyhzn.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpuitkyhzn.jl:18\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpuitkyhzn.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpuitkyhzn.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpuitkyhzn.jl:19\n  Expression: candidate(\"\") == Vector{String}([])\n\
    \   Evaluated: [\"\"] == String[]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpuitkyhzn.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpuitkyhzn.jl:14\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     2      6\n"
  timestamp: 1659822054
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    split(s, r\"[\\s,]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp7tvgh48a.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmp7tvgh48a.jl:18\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7tvgh48a.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7tvgh48a.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp7tvgh48a.jl:19\n  Expression: candidate(\"\") == Vector{String}([])\n\
    \   Evaluated: [\"\"] == String[]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7tvgh48a.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7tvgh48a.jl:14\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     2      6\n"
  timestamp: 1659822058
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    # return an array of words\n    # Hint: use split function\n    return\
    \ split(s, \" \")\n    end\nusing Test\n\n@testset begin\n\ncandidate = words_string;\n\
    \t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\"\
    , \"John\"])\n\t@test(candidate(\"One, two, three, four, five, six\") == [\"One\"\
    , \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"Hi, my\
    \ name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpnoj6gudv.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmpnoj6gudv.jl:17\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"Hi,\", \"my\", \"name\", \"is\", \"John\"] == [\"Hi\", \"my\", \"name\",\
    \ \"is\", \"John\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnoj6gudv.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnoj6gudv.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpnoj6gudv.jl:18\n  Expression: candidate(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n   Evaluated: [\"One,\", \"two,\", \"three,\", \"four,\", \"five,\", \"six\"\
    ] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnoj6gudv.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnoj6gudv.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpnoj6gudv.jl:19\n  Expression: candidate(\"Hi, my name\") ==\
    \ [\"Hi\", \"my\", \"name\"]\n   Evaluated: [\"Hi,\", \"my\", \"name\"] == [\"\
    Hi\", \"my\", \"name\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnoj6gudv.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnoj6gudv.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpnoj6gudv.jl:20\n  Expression: candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\n   Evaluated: [\"One,,\", \"two,\", \"three,\", \"four,\", \"five,\",\
    \ \"six,\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n "
  timestamp: 1659822059
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    re = Regex(\"[\\\\w']+\") # regular expression to split the string.\n\
    \    s = matchall(re, s) # split the string into words and save them in an array.\n\
    \    return s\nend\nusing Test\n\n@testset begin\n\ncandidate = words_string;\n\
    \t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\"\
    , \"John\"])\n\t@test(candidate(\"One, two, three, four, five, six\") == [\"One\"\
    , \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"Hi, my\
    \ name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpbr6l3959.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpbr6l3959.jl:17\n  Test threw exception\n\
    \  Expression: candidate(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"]\n  UndefVarError: matchall not defined\n  Stacktrace:\n  \
    \ [1] words_string(s::String)\n     @ Main /tmp/tmpbr6l3959.jl:9\n   [2] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpbr6l3959.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpbr6l3959.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpbr6l3959.jl:18\n  Test threw exception\n  Expression:\
    \ candidate(\"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\"\
    , \"four\", \"five\", \"six\"]\n  UndefVarError: matchall not defined\n  Stacktrace:\n\
    \   [1] words_string(s::String)\n     @ Main /tmp/tmpbr6l3959.jl:9\n   [2] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpbr6l3959.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpbr6l3959.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpbr6l3959.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Hi, my name\") == [\"Hi\", \"my\", \"name\"]\n  UndefVarError: matchall\
    \ not defined\n  Stacktrace:\n   [1] words_string(s::String)\n     @ Main /tmp/tmpbr6l3959.jl:9\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpbr6l3959.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpbr6l3959.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpbr6l3959.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\"\
    , \"four\", \"five\", \"six\"]\n  UndefVarError: mat"
  timestamp: 1659822060
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    return split(s)\nend\nusing Test\n\n@testset begin\n\ncandidate = words_string;\n\
    \t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\"\
    , \"John\"])\n\t@test(candidate(\"One, two, three, four, five, six\") == [\"One\"\
    , \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"Hi, my\
    \ name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpy9_padcp.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpy9_padcp.jl:15\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"Hi,\", \"my\", \"name\", \"is\", \"John\"] == [\"Hi\", \"my\", \"name\",\
    \ \"is\", \"John\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy9_padcp.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpy9_padcp.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpy9_padcp.jl:16\n  Expression: candidate(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n   Evaluated: [\"One,\", \"two,\", \"three,\", \"four,\", \"five,\", \"six\"\
    ] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy9_padcp.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpy9_padcp.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpy9_padcp.jl:17\n  Expression: candidate(\"Hi, my name\") ==\
    \ [\"Hi\", \"my\", \"name\"]\n   Evaluated: [\"Hi,\", \"my\", \"name\"] == [\"\
    Hi\", \"my\", \"name\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy9_padcp.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpy9_padcp.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpy9_padcp.jl:18\n  Expression: candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\n   Evaluated: [\"One,,\", \"two,\", \"three,\", \"four,\", \"five,\",\
    \ \"six,\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n "
  timestamp: 1659822054
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    \n    words_arr = split(s)\n    return words_arr\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = words_string;\n\t@test(candidate(\"Hi, my name is\
    \ John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\n\t@test(candidate(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\n\t@test(candidate(\"Hi, my name\") == [\"Hi\", \"my\",\
    \ \"name\"])\n\t@test(candidate(\"One,, two, three, four, five, six,\") == [\"\
    One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    \") == Vector{String}([]))\n\t@test(candidate(\"ahmed     , gamal\") == [\"ahmed\"\
    , \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpqomxqq5w.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmpqomxqq5w.jl:17\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"Hi,\", \"my\", \"name\", \"is\", \"John\"] == [\"Hi\", \"my\", \"name\",\
    \ \"is\", \"John\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqomxqq5w.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqomxqq5w.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpqomxqq5w.jl:18\n  Expression: candidate(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n   Evaluated: [\"One,\", \"two,\", \"three,\", \"four,\", \"five,\", \"six\"\
    ] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqomxqq5w.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqomxqq5w.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpqomxqq5w.jl:19\n  Expression: candidate(\"Hi, my name\") ==\
    \ [\"Hi\", \"my\", \"name\"]\n   Evaluated: [\"Hi,\", \"my\", \"name\"] == [\"\
    Hi\", \"my\", \"name\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqomxqq5w.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqomxqq5w.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpqomxqq5w.jl:20\n  Expression: candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\n   Evaluated: [\"One,,\", \"two,\", \"three,\", \"four,\", \"five,\",\
    \ \"six,\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n "
  timestamp: 1659822059
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    # TODO: Implement your code here\n    # Your code will look something\
    \ like this...\n    return split(s, \" \")\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ])\n\t@test(candidate(\"Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpfpssvsg3.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmpfpssvsg3.jl:17\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"Hi,\", \"my\", \"name\", \"is\", \"John\"] == [\"Hi\", \"my\", \"name\",\
    \ \"is\", \"John\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfpssvsg3.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfpssvsg3.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpfpssvsg3.jl:18\n  Expression: candidate(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n   Evaluated: [\"One,\", \"two,\", \"three,\", \"four,\", \"five,\", \"six\"\
    ] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfpssvsg3.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfpssvsg3.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpfpssvsg3.jl:19\n  Expression: candidate(\"Hi, my name\") ==\
    \ [\"Hi\", \"my\", \"name\"]\n   Evaluated: [\"Hi,\", \"my\", \"name\"] == [\"\
    Hi\", \"my\", \"name\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfpssvsg3.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfpssvsg3.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpfpssvsg3.jl:20\n  Expression: candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\n   Evaluated: [\"One,,\", \"two,\", \"three,\", \"four,\", \"five,\",\
    \ \"six,\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n "
  timestamp: 1659822059
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    return split(s)\nend\nusing Test\n\n@testset begin\n\ncandidate = words_string;\n\
    \t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\"\
    , \"John\"])\n\t@test(candidate(\"One, two, three, four, five, six\") == [\"One\"\
    , \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"Hi, my\
    \ name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpy9_padcp.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpy9_padcp.jl:15\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"Hi,\", \"my\", \"name\", \"is\", \"John\"] == [\"Hi\", \"my\", \"name\",\
    \ \"is\", \"John\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy9_padcp.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpy9_padcp.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpy9_padcp.jl:16\n  Expression: candidate(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n   Evaluated: [\"One,\", \"two,\", \"three,\", \"four,\", \"five,\", \"six\"\
    ] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy9_padcp.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpy9_padcp.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpy9_padcp.jl:17\n  Expression: candidate(\"Hi, my name\") ==\
    \ [\"Hi\", \"my\", \"name\"]\n   Evaluated: [\"Hi,\", \"my\", \"name\"] == [\"\
    Hi\", \"my\", \"name\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy9_padcp.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpy9_padcp.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpy9_padcp.jl:18\n  Expression: candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\n   Evaluated: [\"One,,\", \"two,\", \"three,\", \"four,\", \"five,\",\
    \ \"six,\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n "
  timestamp: 1659822054
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    split(s)\nend\n\"\"\"\n    Input:\n        \"red,blue,green\"\n    Output:\n\
    \        [\"red\", \"blue\", \"green\"]\n        \n    Input:\n        \"a b c\"\
    \n        \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = words_string;\n\t\
    @test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\"\
    , \"John\"])\n\t@test(candidate(\"One, two, three, four, five, six\") == [\"One\"\
    , \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"Hi, my\
    \ name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: cannot document the following expression:\n\nusing Test\n\
    \nStacktrace:\n [1] error(::String, ::String)\n   @ Base ./error.jl:42\n [2] top-level\
    \ scope\n   @ /tmp/tmph21qw5t7.jl:10\nin expression starting at /tmp/tmph21qw5t7.jl:10\n"
  stdout: ''
  timestamp: 1659822059
- exit_code: -1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    # For example:\n    words_string(\"she sells sea shells on the sea shore\"\
    ) # returns [\"she\", \"sells\", \"sea\", \"shells\", \"on\", \"the\", \"sea\"\
    , \"shore\"]\n    words_string(\"one two three\") # returns [\"one\", \"two\"\
    , \"three\"]\n    words_string(\"one,two,three\") # returns [\"one\", \"two\"\
    , \"three\"]\nend\nusing Test\n\n@testset begin\n\ncandidate = words_string;\n\
    \t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\"\
    , \"John\"])\n\t@test(candidate(\"One, two, three, four, five, six\") == [\"One\"\
    , \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"Hi, my\
    \ name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659822063
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    return split(s, r\"[, ]\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp9cocii08.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmp9cocii08.jl:15\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"Hi\", \"\", \"my\", \"name\", \"is\", \"John\"] == [\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9cocii08.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9cocii08.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp9cocii08.jl:16\n  Expression: candidate(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n   Evaluated: [\"One\", \"\", \"two\", \"\", \"three\", \"\", \"four\", \"\"\
    , \"five\", \"\", \"six\"] == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9cocii08.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9cocii08.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp9cocii08.jl:17\n  Expression: candidate(\"Hi, my name\") ==\
    \ [\"Hi\", \"my\", \"name\"]\n   Evaluated: [\"Hi\", \"\", \"my\", \"name\"] ==\
    \ [\"Hi\", \"my\", \"name\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9cocii08.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9cocii08.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp9cocii08.jl:18\n  Expression: candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\n   Evaluated: [\"One\", \"\", \"\", \"two\", \"\", \"three\", \"\", \"\
    four\", \"\", \"five\", \"\", \"six\", \"\"] == [\"One\", \"two\", \"three\",\
    \ \"four\", \"five\", \"six\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/st"
  timestamp: 1659822059
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    \"\"\"\n    words_string(\"The quick brown fox jumps over the lazy dog\"\
    )\n    should return:\n        [\"The\", \"quick\", \"brown\", \"fox\", \"jumps\"\
    , \"over\", \"the\", \"lazy\", \"dog\"]\n    \"\"\"\n    words = split(s, \",\
    \ |\\\\s+\")\n    return words\nend\nwords_string(\"The quick brown fox jumps\
    \ over the lazy dog\")\nusing Test\n\n@testset begin\n\ncandidate = words_string;\n\
    \t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\"\
    , \"John\"])\n\t@test(candidate(\"One, two, three, four, five, six\") == [\"One\"\
    , \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"Hi, my\
    \ name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpo7d8k8y3.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpo7d8k8y3.jl:22\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"Hi, my name is John\"] == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo7d8k8y3.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo7d8k8y3.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpo7d8k8y3.jl:23\n  Expression: candidate(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n   Evaluated: [\"One, two, three, four, five, six\"] == [\"One\", \"two\",\
    \ \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpo7d8k8y3.jl:23 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpo7d8k8y3.jl:21\ntest set: Test Failed at /tmp/tmpo7d8k8y3.jl:24\n\
    \  Expression: candidate(\"Hi, my name\") == [\"Hi\", \"my\", \"name\"]\n   Evaluated:\
    \ [\"Hi, my name\"] == [\"Hi\", \"my\", \"name\"]\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpo7d8k8y3.jl:24 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpo7d8k8y3.jl:21\ntest set: Test Failed at /tmp/tmpo7d8k8y3.jl:25\n\
    \  Expression: candidate(\"One,, two, three, four, five, six,\") == [\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"]\n   Evaluated: [\"One,, two,\
    \ three, four, five, six,\"] == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo7d8k8y3.jl:25 "
  timestamp: 1659822060
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    s_split = split(s, r\"[\\s,]+\")\n    return s_split\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = words_string;\n\t@test(candidate(\"Hi, my name\
    \ is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\n\t@test(candidate(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\n\t@test(candidate(\"Hi, my name\") == [\"Hi\", \"my\",\
    \ \"name\"])\n\t@test(candidate(\"One,, two, three, four, five, six,\") == [\"\
    One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    \") == Vector{String}([]))\n\t@test(candidate(\"ahmed     , gamal\") == [\"ahmed\"\
    , \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpyjrhaagp.jl:13

    '
  stdout: "test set: Test Failed at /tmp/tmpyjrhaagp.jl:19\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyjrhaagp.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyjrhaagp.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpyjrhaagp.jl:20\n  Expression: candidate(\"\") == Vector{String}([])\n\
    \   Evaluated: [\"\"] == String[]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyjrhaagp.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyjrhaagp.jl:15\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     2      6\n"
  timestamp: 1659822060
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    return split(lowercase(s),r\"[, ]+\")\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ])\n\t@test(candidate(\"Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpp7bauy5u.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpp7bauy5u.jl:15\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"hi\", \"my\", \"name\", \"is\", \"john\"] == [\"Hi\", \"my\", \"name\", \"\
    is\", \"John\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpp7bauy5u.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpp7bauy5u.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpp7bauy5u.jl:16\n  Expression: candidate(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n   Evaluated: [\"one\", \"two\", \"three\", \"four\", \"five\", \"six\"] ==\
    \ [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n [1]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpp7bauy5u.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpp7bauy5u.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpp7bauy5u.jl:17\n  Expression: candidate(\"Hi, my name\") ==\
    \ [\"Hi\", \"my\", \"name\"]\n   Evaluated: [\"hi\", \"my\", \"name\"] == [\"\
    Hi\", \"my\", \"name\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpp7bauy5u.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpp7bauy5u.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpp7bauy5u.jl:18\n  Expression: candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\n   Evaluated: [\"one\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    , \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro "
  timestamp: 1659822060
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    return split(s)\nend\nusing Test\n\n@testset begin\n\ncandidate = words_string;\n\
    \t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\"\
    , \"John\"])\n\t@test(candidate(\"One, two, three, four, five, six\") == [\"One\"\
    , \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"Hi, my\
    \ name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpy9_padcp.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpy9_padcp.jl:15\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"Hi,\", \"my\", \"name\", \"is\", \"John\"] == [\"Hi\", \"my\", \"name\",\
    \ \"is\", \"John\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy9_padcp.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpy9_padcp.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpy9_padcp.jl:16\n  Expression: candidate(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n   Evaluated: [\"One,\", \"two,\", \"three,\", \"four,\", \"five,\", \"six\"\
    ] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy9_padcp.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpy9_padcp.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpy9_padcp.jl:17\n  Expression: candidate(\"Hi, my name\") ==\
    \ [\"Hi\", \"my\", \"name\"]\n   Evaluated: [\"Hi,\", \"my\", \"name\"] == [\"\
    Hi\", \"my\", \"name\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy9_padcp.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpy9_padcp.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpy9_padcp.jl:18\n  Expression: candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\n   Evaluated: [\"One,,\", \"two,\", \"three,\", \"four,\", \"five,\",\
    \ \"six,\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n "
  timestamp: 1659822054
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    \"\"\"\n    takes a string s and returns an array of the words in the\
    \ string.\n    \"\"\"\n    split_string(s, \", \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = words_string;\n\t@test(candidate(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\
    \t@test(candidate(\"One,, two, three, four, five, six,\") == [\"One\", \"two\"\
    , \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\
    \t@test(candidate(\"ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpf_7xtk1_.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpf_7xtk1_.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"]\n  UndefVarError: split_string not defined\n  Stacktrace:\n\
    \   [1] words_string(s::String)\n     @ Main /tmp/tmpf_7xtk1_.jl:11\n   [2] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpf_7xtk1_.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpf_7xtk1_.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpf_7xtk1_.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\"\
    , \"four\", \"five\", \"six\"]\n  UndefVarError: split_string not defined\n  Stacktrace:\n\
    \   [1] words_string(s::String)\n     @ Main /tmp/tmpf_7xtk1_.jl:11\n   [2] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpf_7xtk1_.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpf_7xtk1_.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpf_7xtk1_.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"Hi, my name\") == [\"Hi\", \"my\", \"name\"]\n  UndefVarError: split_string\
    \ not defined\n  Stacktrace:\n   [1] words_string(s::String)\n     @ Main /tmp/tmpf_7xtk1_.jl:11\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpf_7xtk1_.jl:20 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpf_7xtk1_.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpf_7xtk1_.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(\"One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\"\
    , \"four\", \"five\", \"six\"]\n  Und"
  timestamp: 1659822061
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    \n    \n    \n    \nend\nusing Test\n\n@testset begin\n\ncandidate = words_string;\n\
    \t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\"\
    , \"John\"])\n\t@test(candidate(\"One, two, three, four, five, six\") == [\"One\"\
    , \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"Hi, my\
    \ name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpg45jc6zr.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpg45jc6zr.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"]\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Vector{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::LinearAlgebra.Factorization) where T<:AbstractArray at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{Vector{String}}, !Matched::LibGit2.StrArrayStruct) at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LibGit2/src/strarray.jl:13\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at ~/.conda/envs/polyglot/share/julia/base/array.jl:554\n\
    \    ...\n  Stacktrace:\n   [1] words_string(s::String)\n     @ Main /tmp/tmpg45jc6zr.jl:12\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpg45jc6zr.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpg45jc6zr.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpg45jc6zr.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\"\
    , \"four\", \"five\", \"six\"]\n  MethodError: Cannot `convert` an object of type\
    \ Nothing to an object of type Vector{String}\n  Closest candidates are:\n   \
    \ convert(::Type{T}, !Matched::LinearAlgebra.Factorization) where T<:AbstractArray\
    \ at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{Vector{String}}, !Matched::LibGit2.StrArrayStruct) at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LibGit2/src/strarray.jl:13\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at ~/.conda/envs/polyglot/share/julia/base/array.jl:554\n\
    \    ...\n  Stacktrace:\n   [1] words_string(s::String)\n     @ Main /tmp/tmpg45jc6zr.jl:12\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/"
  timestamp: 1659822063
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    return split(s, r\"[,\\s]\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxhtv4gpa.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpxhtv4gpa.jl:15\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"Hi\", \"\", \"my\", \"name\", \"is\", \"John\"] == [\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxhtv4gpa.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxhtv4gpa.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpxhtv4gpa.jl:16\n  Expression: candidate(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n   Evaluated: [\"One\", \"\", \"two\", \"\", \"three\", \"\", \"four\", \"\"\
    , \"five\", \"\", \"six\"] == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxhtv4gpa.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxhtv4gpa.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpxhtv4gpa.jl:17\n  Expression: candidate(\"Hi, my name\") ==\
    \ [\"Hi\", \"my\", \"name\"]\n   Evaluated: [\"Hi\", \"\", \"my\", \"name\"] ==\
    \ [\"Hi\", \"my\", \"name\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxhtv4gpa.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxhtv4gpa.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpxhtv4gpa.jl:18\n  Expression: candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\n   Evaluated: [\"One\", \"\", \"\", \"two\", \"\", \"three\", \"\", \"\
    four\", \"\", \"five\", \"\", \"six\", \"\"] == [\"One\", \"two\", \"three\",\
    \ \"four\", \"five\", \"six\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/st"
  timestamp: 1659822061
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    # Split the string with spaces or commas\n    split(s, \" \") \nend\n\
    @testset \"Example Tests\" begin\n    @test words_string(\"This is a test\") ==\
    \ [\"This\", \"is\", \"a\", \"test\"]\n    @test words_string(\"Hello, World!\"\
    ) == [\"Hello\", \"World!\"]\n    @test words_string(\"Hello,World!\") == [\"\
    Hello\", \"World!\"]\n    @test words_string(\"\") == []\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = words_string;\n\t@test(candidate(\"Hi, my name is\
    \ John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\n\t@test(candidate(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\n\t@test(candidate(\"Hi, my name\") == [\"Hi\", \"my\",\
    \ \"name\"])\n\t@test(candidate(\"One,, two, three, four, five, six,\") == [\"\
    One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    \") == Vector{String}([]))\n\t@test(candidate(\"ahmed     , gamal\") == [\"ahmed\"\
    , \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: UndefVarError: @testset not defined

    in expression starting at /tmp/tmpsqpgdyy6.jl:11

    in expression starting at /tmp/tmpsqpgdyy6.jl:11

    '
  stdout: ''
  timestamp: 1659822060
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    words = split(s, r\"[\\s,]+\")\n    for (i, word) in enumerate(words)\n\
    \        words[i] = word\n    end\n    return words\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = words_string;\n\t@test(candidate(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\
    \t@test(candidate(\"One,, two, three, four, five, six,\") == [\"One\", \"two\"\
    , \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\
    \t@test(candidate(\"ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp919nulgt.jl:16

    '
  stdout: "test set: Test Failed at /tmp/tmp919nulgt.jl:22\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp919nulgt.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp919nulgt.jl:18\ntest set: Test\
    \ Failed at /tmp/tmp919nulgt.jl:23\n  Expression: candidate(\"\") == Vector{String}([])\n\
    \   Evaluated: [\"\"] == String[]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp919nulgt.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp919nulgt.jl:18\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     2      6\n"
  timestamp: 1659822061
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    split(s, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = words_string;\n\
    \t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\"\
    , \"John\"])\n\t@test(candidate(\"One, two, three, four, five, six\") == [\"One\"\
    , \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"Hi, my\
    \ name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp205ptutc.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmp205ptutc.jl:15\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"Hi,\", \"my\", \"name\", \"is\", \"John\"] == [\"Hi\", \"my\", \"name\",\
    \ \"is\", \"John\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp205ptutc.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp205ptutc.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp205ptutc.jl:16\n  Expression: candidate(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n   Evaluated: [\"One,\", \"two,\", \"three,\", \"four,\", \"five,\", \"six\"\
    ] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp205ptutc.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp205ptutc.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp205ptutc.jl:17\n  Expression: candidate(\"Hi, my name\") ==\
    \ [\"Hi\", \"my\", \"name\"]\n   Evaluated: [\"Hi,\", \"my\", \"name\"] == [\"\
    Hi\", \"my\", \"name\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp205ptutc.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp205ptutc.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp205ptutc.jl:18\n  Expression: candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\n   Evaluated: [\"One,,\", \"two,\", \"three,\", \"four,\", \"five,\",\
    \ \"six,\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n "
  timestamp: 1659822057
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    split(s, r\"[,\\s]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpetskg5zv.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpetskg5zv.jl:18\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpetskg5zv.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpetskg5zv.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpetskg5zv.jl:19\n  Expression: candidate(\"\") == Vector{String}([])\n\
    \   Evaluated: [\"\"] == String[]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpetskg5zv.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpetskg5zv.jl:14\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     2      6\n"
  timestamp: 1659822061
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    split(s, r\"[ ,]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp08oenehz.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmp08oenehz.jl:18\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp08oenehz.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp08oenehz.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp08oenehz.jl:19\n  Expression: candidate(\"\") == Vector{String}([])\n\
    \   Evaluated: [\"\"] == String[]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp08oenehz.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp08oenehz.jl:14\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     2      6\n"
  timestamp: 1659822061
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    return split(s, r\"[, ]\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp9cocii08.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmp9cocii08.jl:15\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"Hi\", \"\", \"my\", \"name\", \"is\", \"John\"] == [\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9cocii08.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9cocii08.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp9cocii08.jl:16\n  Expression: candidate(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n   Evaluated: [\"One\", \"\", \"two\", \"\", \"three\", \"\", \"four\", \"\"\
    , \"five\", \"\", \"six\"] == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9cocii08.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9cocii08.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp9cocii08.jl:17\n  Expression: candidate(\"Hi, my name\") ==\
    \ [\"Hi\", \"my\", \"name\"]\n   Evaluated: [\"Hi\", \"\", \"my\", \"name\"] ==\
    \ [\"Hi\", \"my\", \"name\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9cocii08.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9cocii08.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp9cocii08.jl:18\n  Expression: candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\n   Evaluated: [\"One\", \"\", \"\", \"two\", \"\", \"three\", \"\", \"\
    four\", \"\", \"five\", \"\", \"six\", \"\"] == [\"One\", \"two\", \"three\",\
    \ \"four\", \"five\", \"six\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/st"
  timestamp: 1659822059
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    \n    \n    \n    \n    \n    \n    \n    end\nusing Test\n\n@testset\
    \ begin\n\ncandidate = words_string;\n\t@test(candidate(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\
    \t@test(candidate(\"One,, two, three, four, five, six,\") == [\"One\", \"two\"\
    , \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\
    \t@test(candidate(\"ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp2y7ksc_k.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp2y7ksc_k.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"]\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Vector{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::LinearAlgebra.Factorization) where T<:AbstractArray at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{Vector{String}}, !Matched::LibGit2.StrArrayStruct) at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LibGit2/src/strarray.jl:13\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at ~/.conda/envs/polyglot/share/julia/base/array.jl:554\n\
    \    ...\n  Stacktrace:\n   [1] words_string(s::String)\n     @ Main /tmp/tmp2y7ksc_k.jl:15\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp2y7ksc_k.jl:21 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp2y7ksc_k.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp2y7ksc_k.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\"\
    , \"four\", \"five\", \"six\"]\n  MethodError: Cannot `convert` an object of type\
    \ Nothing to an object of type Vector{String}\n  Closest candidates are:\n   \
    \ convert(::Type{T}, !Matched::LinearAlgebra.Factorization) where T<:AbstractArray\
    \ at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{Vector{String}}, !Matched::LibGit2.StrArrayStruct) at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LibGit2/src/strarray.jl:13\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at ~/.conda/envs/polyglot/share/julia/base/array.jl:554\n\
    \    ...\n  Stacktrace:\n   [1] words_string(s::String)\n     @ Main /tmp/tmp2y7ksc_k.jl:15\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/"
  timestamp: 1659822063
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    split(s, r\"[\\s,]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp7tvgh48a.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmp7tvgh48a.jl:18\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7tvgh48a.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7tvgh48a.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp7tvgh48a.jl:19\n  Expression: candidate(\"\") == Vector{String}([])\n\
    \   Evaluated: [\"\"] == String[]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7tvgh48a.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7tvgh48a.jl:14\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     2      6\n"
  timestamp: 1659822058
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    temp_vec = split(s, \", \")\n    return temp_vec\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = words_string;\n\t@test(candidate(\"Hi, my name is\
    \ John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\n\t@test(candidate(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\n\t@test(candidate(\"Hi, my name\") == [\"Hi\", \"my\",\
    \ \"name\"])\n\t@test(candidate(\"One,, two, three, four, five, six,\") == [\"\
    One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    \") == Vector{String}([]))\n\t@test(candidate(\"ahmed     , gamal\") == [\"ahmed\"\
    , \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpomhani2n.jl:13

    '
  stdout: "test set: Test Failed at /tmp/tmpomhani2n.jl:16\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"Hi\", \"my name is John\"] == [\"Hi\", \"my\", \"name\", \"is\", \"John\"\
    ]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpomhani2n.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpomhani2n.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpomhani2n.jl:18\n  Expression: candidate(\"Hi, my name\") ==\
    \ [\"Hi\", \"my\", \"name\"]\n   Evaluated: [\"Hi\", \"my name\"] == [\"Hi\",\
    \ \"my\", \"name\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpomhani2n.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpomhani2n.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpomhani2n.jl:19\n  Expression: candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\n   Evaluated: [\"One,\", \"two\", \"three\", \"four\", \"five\", \"six,\"\
    ] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpomhani2n.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpomhani2n.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpomhani2n.jl:20\n  Expression: candidate(\"\") == Vector{String}([])\n\
    \   Evaluated: [\"\"] == String[]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpomhani2n.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n "
  timestamp: 1659822061
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    words = split(s, r\"[\\s,]+\")\n    return words\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = words_string;\n\t@test(candidate(\"Hi, my name is\
    \ John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\n\t@test(candidate(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\n\t@test(candidate(\"Hi, my name\") == [\"Hi\", \"my\",\
    \ \"name\"])\n\t@test(candidate(\"One,, two, three, four, five, six,\") == [\"\
    One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    \") == Vector{String}([]))\n\t@test(candidate(\"ahmed     , gamal\") == [\"ahmed\"\
    , \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxtwhb6wz.jl:13

    '
  stdout: "test set: Test Failed at /tmp/tmpxtwhb6wz.jl:19\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxtwhb6wz.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxtwhb6wz.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpxtwhb6wz.jl:20\n  Expression: candidate(\"\") == Vector{String}([])\n\
    \   Evaluated: [\"\"] == String[]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxtwhb6wz.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxtwhb6wz.jl:15\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     2      6\n"
  timestamp: 1659822062
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    (s === \"\") && return []\n    split(s, r\"[ ,]+\") \nend\nusing Test\n\
    \n@testset begin\n\ncandidate = words_string;\n\t@test(candidate(\"Hi, my name\
    \ is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\n\t@test(candidate(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\n\t@test(candidate(\"Hi, my name\") == [\"Hi\", \"my\",\
    \ \"name\"])\n\t@test(candidate(\"One,, two, three, four, five, six,\") == [\"\
    One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    \") == Vector{String}([]))\n\t@test(candidate(\"ahmed     , gamal\") == [\"ahmed\"\
    , \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpwgm_vdyf.jl:13

    '
  stdout: "test set: Test Failed at /tmp/tmpwgm_vdyf.jl:19\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwgm_vdyf.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwgm_vdyf.jl:15\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     1      6\n"
  timestamp: 1659822062
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    return split(s, join([\",\", \" \"]))\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ])\n\t@test(candidate(\"Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpvl3ldrox.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpvl3ldrox.jl:15\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"Hi\", \"my name is John\"] == [\"Hi\", \"my\", \"name\", \"is\", \"John\"\
    ]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvl3ldrox.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvl3ldrox.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpvl3ldrox.jl:17\n  Expression: candidate(\"Hi, my name\") ==\
    \ [\"Hi\", \"my\", \"name\"]\n   Evaluated: [\"Hi\", \"my name\"] == [\"Hi\",\
    \ \"my\", \"name\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvl3ldrox.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvl3ldrox.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpvl3ldrox.jl:18\n  Expression: candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\n   Evaluated: [\"One,\", \"two\", \"three\", \"four\", \"five\", \"six,\"\
    ] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvl3ldrox.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvl3ldrox.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpvl3ldrox.jl:19\n  Expression: candidate(\"\") == Vector{String}([])\n\
    \   Evaluated: [\"\"] == String[]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvl3ldrox.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n "
  timestamp: 1659822062
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    return split(s)\nend\nusing Test\n\n@testset begin\n\ncandidate = words_string;\n\
    \t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\"\
    , \"John\"])\n\t@test(candidate(\"One, two, three, four, five, six\") == [\"One\"\
    , \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"Hi, my\
    \ name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpy9_padcp.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpy9_padcp.jl:15\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"Hi,\", \"my\", \"name\", \"is\", \"John\"] == [\"Hi\", \"my\", \"name\",\
    \ \"is\", \"John\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy9_padcp.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpy9_padcp.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpy9_padcp.jl:16\n  Expression: candidate(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n   Evaluated: [\"One,\", \"two,\", \"three,\", \"four,\", \"five,\", \"six\"\
    ] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy9_padcp.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpy9_padcp.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpy9_padcp.jl:17\n  Expression: candidate(\"Hi, my name\") ==\
    \ [\"Hi\", \"my\", \"name\"]\n   Evaluated: [\"Hi,\", \"my\", \"name\"] == [\"\
    Hi\", \"my\", \"name\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy9_padcp.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpy9_padcp.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpy9_padcp.jl:18\n  Expression: candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\n   Evaluated: [\"One,,\", \"two,\", \"three,\", \"four,\", \"five,\",\
    \ \"six,\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n "
  timestamp: 1659822054
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    split(s, r\"[\\s,]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp7tvgh48a.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmp7tvgh48a.jl:18\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7tvgh48a.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7tvgh48a.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp7tvgh48a.jl:19\n  Expression: candidate(\"\") == Vector{String}([])\n\
    \   Evaluated: [\"\"] == String[]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7tvgh48a.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7tvgh48a.jl:14\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     2      6\n"
  timestamp: 1659822058
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    s = split(s)\n    return s\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmps83zzimx.jl:13

    '
  stdout: "test set: Test Failed at /tmp/tmps83zzimx.jl:16\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"Hi,\", \"my\", \"name\", \"is\", \"John\"] == [\"Hi\", \"my\", \"name\",\
    \ \"is\", \"John\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmps83zzimx.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmps83zzimx.jl:15\ntest set: Test\
    \ Failed at /tmp/tmps83zzimx.jl:17\n  Expression: candidate(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n   Evaluated: [\"One,\", \"two,\", \"three,\", \"four,\", \"five,\", \"six\"\
    ] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmps83zzimx.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmps83zzimx.jl:15\ntest set: Test\
    \ Failed at /tmp/tmps83zzimx.jl:18\n  Expression: candidate(\"Hi, my name\") ==\
    \ [\"Hi\", \"my\", \"name\"]\n   Evaluated: [\"Hi,\", \"my\", \"name\"] == [\"\
    Hi\", \"my\", \"name\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmps83zzimx.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmps83zzimx.jl:15\ntest set: Test\
    \ Failed at /tmp/tmps83zzimx.jl:19\n  Expression: candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\n   Evaluated: [\"One,,\", \"two,\", \"three,\", \"four,\", \"five,\",\
    \ \"six,\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n "
  timestamp: 1659822062
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    s = split(s, [\",\",\" \"])\n    return s\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = words_string;\n\t@test(candidate(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\
    \t@test(candidate(\"One,, two, three, four, five, six,\") == [\"One\", \"two\"\
    , \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\
    \t@test(candidate(\"ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp1hiogyb1.jl:13

    '
  stdout: "test set: Error During Test at /tmp/tmp1hiogyb1.jl:16\n  Test threw exception\n\
    \  Expression: candidate(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"]\n  MethodError: no method matching findfirst(::Vector{String},\
    \ ::String)\n  Closest candidates are:\n    findfirst(!Matched::Function, ::Union{AbstractString,\
    \ AbstractArray}) at ~/.conda/envs/polyglot/share/julia/base/array.jl:2002\n \
    \   findfirst(!Matched::Function, ::Any) at ~/.conda/envs/polyglot/share/julia/base/array.jl:1994\n\
    \    findfirst(!Matched::AbstractString, ::AbstractString) at ~/.conda/envs/polyglot/share/julia/base/strings/search.jl:104\n\
    \    ...\n  Stacktrace:\n   [1] _split(str::String, splitter::Vector{String},\
    \ limit::Int64, keepempty::Bool, strs::Vector{SubString{String}})\n     @ Base\
    \ ./strings/util.jl:435\n   [2] split(str::String, splitter::Vector{String}; limit::Int64,\
    \ keepempty::Bool)\n     @ Base ./strings/util.jl:419\n   [3] split(str::String,\
    \ splitter::Vector{String})\n     @ Base ./strings/util.jl:419\n   [4] words_string(s::String)\n\
    \     @ Main /tmp/tmp1hiogyb1.jl:8\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmp1hiogyb1.jl:16 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmp1hiogyb1.jl:15\ntest set:\
    \ Error During Test at /tmp/tmp1hiogyb1.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(\"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\"\
    , \"four\", \"five\", \"six\"]\n  MethodError: no method matching findfirst(::Vector{String},\
    \ ::String)\n  Closest candidates are:\n    findfirst(!Matched::Function, ::Union{AbstractString,\
    \ AbstractArray}) at ~/.conda/envs/polyglot/share/julia/base/array.jl:2002\n \
    \   findfirst(!Matched::Function, ::Any) at ~/.conda/envs/polyglot/share/julia/base/array.jl:1994\n\
    \    findfirst(!Matched::AbstractString, ::AbstractString) at ~/.conda/envs/polyglot/share/julia/base/strings/search.jl:104\n\
    \    ...\n  Stacktrace:\n   "
  timestamp: 1659822064
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    x = String(s)\n    x = split(x)\n    return x\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = words_string;\n\t@test(candidate(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\
    \t@test(candidate(\"One,, two, three, four, five, six,\") == [\"One\", \"two\"\
    , \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\
    \t@test(candidate(\"ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmprfyi9snr.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmprfyi9snr.jl:17\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"Hi,\", \"my\", \"name\", \"is\", \"John\"] == [\"Hi\", \"my\", \"name\",\
    \ \"is\", \"John\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprfyi9snr.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprfyi9snr.jl:16\ntest set: Test\
    \ Failed at /tmp/tmprfyi9snr.jl:18\n  Expression: candidate(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n   Evaluated: [\"One,\", \"two,\", \"three,\", \"four,\", \"five,\", \"six\"\
    ] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprfyi9snr.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprfyi9snr.jl:16\ntest set: Test\
    \ Failed at /tmp/tmprfyi9snr.jl:19\n  Expression: candidate(\"Hi, my name\") ==\
    \ [\"Hi\", \"my\", \"name\"]\n   Evaluated: [\"Hi,\", \"my\", \"name\"] == [\"\
    Hi\", \"my\", \"name\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprfyi9snr.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprfyi9snr.jl:16\ntest set: Test\
    \ Failed at /tmp/tmprfyi9snr.jl:20\n  Expression: candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\n   Evaluated: [\"One,,\", \"two,\", \"three,\", \"four,\", \"five,\",\
    \ \"six,\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n "
  timestamp: 1659822062
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    s=split(s)\n    return s\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp9rmr30no.jl:13

    '
  stdout: "test set: Test Failed at /tmp/tmp9rmr30no.jl:16\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"Hi,\", \"my\", \"name\", \"is\", \"John\"] == [\"Hi\", \"my\", \"name\",\
    \ \"is\", \"John\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9rmr30no.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9rmr30no.jl:15\ntest set: Test\
    \ Failed at /tmp/tmp9rmr30no.jl:17\n  Expression: candidate(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n   Evaluated: [\"One,\", \"two,\", \"three,\", \"four,\", \"five,\", \"six\"\
    ] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9rmr30no.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9rmr30no.jl:15\ntest set: Test\
    \ Failed at /tmp/tmp9rmr30no.jl:18\n  Expression: candidate(\"Hi, my name\") ==\
    \ [\"Hi\", \"my\", \"name\"]\n   Evaluated: [\"Hi,\", \"my\", \"name\"] == [\"\
    Hi\", \"my\", \"name\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9rmr30no.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9rmr30no.jl:15\ntest set: Test\
    \ Failed at /tmp/tmp9rmr30no.jl:19\n  Expression: candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\n   Evaluated: [\"One,,\", \"two,\", \"three,\", \"four,\", \"five,\",\
    \ \"six,\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n "
  timestamp: 1659822062
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    words = split(s)\n    return words\nend\n \nusing Test\n\n@testset begin\n\
    \ncandidate = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ])\n\t@test(candidate(\"Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpw2jthb8_.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmpw2jthb8_.jl:17\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"Hi,\", \"my\", \"name\", \"is\", \"John\"] == [\"Hi\", \"my\", \"name\",\
    \ \"is\", \"John\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpw2jthb8_.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpw2jthb8_.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpw2jthb8_.jl:18\n  Expression: candidate(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n   Evaluated: [\"One,\", \"two,\", \"three,\", \"four,\", \"five,\", \"six\"\
    ] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpw2jthb8_.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpw2jthb8_.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpw2jthb8_.jl:19\n  Expression: candidate(\"Hi, my name\") ==\
    \ [\"Hi\", \"my\", \"name\"]\n   Evaluated: [\"Hi,\", \"my\", \"name\"] == [\"\
    Hi\", \"my\", \"name\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpw2jthb8_.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpw2jthb8_.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpw2jthb8_.jl:20\n  Expression: candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\n   Evaluated: [\"One,,\", \"two,\", \"three,\", \"four,\", \"five,\",\
    \ \"six,\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n "
  timestamp: 1659822062
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    \n    return split(s)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp44xr8t9_.jl:13

    '
  stdout: "test set: Test Failed at /tmp/tmp44xr8t9_.jl:16\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"Hi,\", \"my\", \"name\", \"is\", \"John\"] == [\"Hi\", \"my\", \"name\",\
    \ \"is\", \"John\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp44xr8t9_.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp44xr8t9_.jl:15\ntest set: Test\
    \ Failed at /tmp/tmp44xr8t9_.jl:17\n  Expression: candidate(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n   Evaluated: [\"One,\", \"two,\", \"three,\", \"four,\", \"five,\", \"six\"\
    ] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp44xr8t9_.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp44xr8t9_.jl:15\ntest set: Test\
    \ Failed at /tmp/tmp44xr8t9_.jl:18\n  Expression: candidate(\"Hi, my name\") ==\
    \ [\"Hi\", \"my\", \"name\"]\n   Evaluated: [\"Hi,\", \"my\", \"name\"] == [\"\
    Hi\", \"my\", \"name\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp44xr8t9_.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp44xr8t9_.jl:15\ntest set: Test\
    \ Failed at /tmp/tmp44xr8t9_.jl:19\n  Expression: candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\n   Evaluated: [\"One,,\", \"two,\", \"three,\", \"four,\", \"five,\",\
    \ \"six,\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n "
  timestamp: 1659822062
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    return [w for w in split(s, ', ')]\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ])\n\t@test(candidate(\"Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmpartwpv4_.jl:8\nin expression starting\
    \ at /tmp/tmpartwpv4_.jl:8\n"
  stdout: ''
  timestamp: 1659822062
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = words_string;\n\
    \t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\"\
    , \"John\"])\n\t@test(candidate(\"One, two, three, four, five, six\") == [\"One\"\
    , \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"Hi, my\
    \ name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpuy60z7lf.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpuy60z7lf.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"]\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Vector{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::LinearAlgebra.Factorization) where T<:AbstractArray at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{Vector{String}}, !Matched::LibGit2.StrArrayStruct) at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LibGit2/src/strarray.jl:13\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at ~/.conda/envs/polyglot/share/julia/base/array.jl:554\n\
    \    ...\n  Stacktrace:\n   [1] words_string(s::String)\n     @ Main /tmp/tmpuy60z7lf.jl:9\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpuy60z7lf.jl:15 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpuy60z7lf.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpuy60z7lf.jl:16\n  Test threw exception\n  Expression:\
    \ candidate(\"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\"\
    , \"four\", \"five\", \"six\"]\n  MethodError: Cannot `convert` an object of type\
    \ Nothing to an object of type Vector{String}\n  Closest candidates are:\n   \
    \ convert(::Type{T}, !Matched::LinearAlgebra.Factorization) where T<:AbstractArray\
    \ at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{Vector{String}}, !Matched::LibGit2.StrArrayStruct) at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LibGit2/src/strarray.jl:13\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at ~/.conda/envs/polyglot/share/julia/base/array.jl:554\n\
    \    ...\n  Stacktrace:\n   [1] words_string(s::String)\n     @ Main /tmp/tmpuy60z7lf.jl:9\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1"
  timestamp: 1659822065
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    s = split(s)\n    for (i,word) in enumerate(s)\n        s[i] = word[2:end-1]\n\
    \    end\n    return s\nend\nusing Test\n\n@testset begin\n\ncandidate = words_string;\n\
    \t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\"\
    , \"John\"])\n\t@test(candidate(\"One, two, three, four, five, six\") == [\"One\"\
    , \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"Hi, my\
    \ name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpd41o7ggc.jl:16

    '
  stdout: "test set: Test Failed at /tmp/tmpd41o7ggc.jl:19\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"i\", \"\", \"am\", \"\", \"oh\"] == [\"Hi\", \"my\", \"name\", \"is\", \"\
    John\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd41o7ggc.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd41o7ggc.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpd41o7ggc.jl:20\n  Expression: candidate(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n   Evaluated: [\"ne\", \"wo\", \"hree\", \"our\", \"ive\", \"i\"] == [\"One\"\
    , \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpd41o7ggc.jl:20 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpd41o7ggc.jl:18\ntest set: Test Failed at /tmp/tmpd41o7ggc.jl:21\n\
    \  Expression: candidate(\"Hi, my name\") == [\"Hi\", \"my\", \"name\"]\n   Evaluated:\
    \ [\"i\", \"\", \"am\"] == [\"Hi\", \"my\", \"name\"]\nStacktrace:\n [1] macro\
    \ expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd41o7ggc.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd41o7ggc.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpd41o7ggc.jl:22\n  Expression: candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\n   Evaluated: [\"ne,\", \"wo\", \"hree\", \"our\", \"ive\", \"ix\"] ==\
    \ [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n [1]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd41o7gg"
  timestamp: 1659822063
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    words = split(s, [\" \", \",\", \".\"])\n    v_word = Vector{String}()\n\
    \    for word in words\n        push!(v_word, word)\n    end\n    return v_word\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = words_string;\n\t@test(candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\n\t@test(candidate(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\n\t@test(candidate(\"Hi, my name\") == [\"Hi\", \"my\",\
    \ \"name\"])\n\t@test(candidate(\"One,, two, three, four, five, six,\") == [\"\
    One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    \") == Vector{String}([]))\n\t@test(candidate(\"ahmed     , gamal\") == [\"ahmed\"\
    , \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmptudp2lmp.jl:17

    '
  stdout: "test set: Error During Test at /tmp/tmptudp2lmp.jl:20\n  Test threw exception\n\
    \  Expression: candidate(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"]\n  MethodError: no method matching findfirst(::Vector{String},\
    \ ::String)\n  Closest candidates are:\n    findfirst(!Matched::Function, ::Union{AbstractString,\
    \ AbstractArray}) at ~/.conda/envs/polyglot/share/julia/base/array.jl:2002\n \
    \   findfirst(!Matched::Function, ::Any) at ~/.conda/envs/polyglot/share/julia/base/array.jl:1994\n\
    \    findfirst(!Matched::AbstractString, ::AbstractString) at ~/.conda/envs/polyglot/share/julia/base/strings/search.jl:104\n\
    \    ...\n  Stacktrace:\n   [1] _split(str::String, splitter::Vector{String},\
    \ limit::Int64, keepempty::Bool, strs::Vector{SubString{String}})\n     @ Base\
    \ ./strings/util.jl:435\n   [2] split(str::String, splitter::Vector{String}; limit::Int64,\
    \ keepempty::Bool)\n     @ Base ./strings/util.jl:419\n   [3] split(str::String,\
    \ splitter::Vector{String})\n     @ Base ./strings/util.jl:419\n   [4] words_string(s::String)\n\
    \     @ Main /tmp/tmptudp2lmp.jl:8\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmptudp2lmp.jl:20 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmptudp2lmp.jl:19\ntest set:\
    \ Error During Test at /tmp/tmptudp2lmp.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(\"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\"\
    , \"four\", \"five\", \"six\"]\n  MethodError: no method matching findfirst(::Vector{String},\
    \ ::String)\n  Closest candidates are:\n    findfirst(!Matched::Function, ::Union{AbstractString,\
    \ AbstractArray}) at ~/.conda/envs/polyglot/share/julia/base/array.jl:2002\n \
    \   findfirst(!Matched::Function, ::Any) at ~/.conda/envs/polyglot/share/julia/base/array.jl:1994\n\
    \    findfirst(!Matched::AbstractString, ::AbstractString) at ~/.conda/envs/polyglot/share/julia/base/strings/search.jl:104\n\
    \    ...\n  Stacktrace:\n   "
  timestamp: 1659822065
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    A = split(s, \", \")\n    return A\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ])\n\t@test(candidate(\"Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpb9larq9s.jl:13

    '
  stdout: "test set: Test Failed at /tmp/tmpb9larq9s.jl:16\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"Hi\", \"my name is John\"] == [\"Hi\", \"my\", \"name\", \"is\", \"John\"\
    ]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpb9larq9s.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpb9larq9s.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpb9larq9s.jl:18\n  Expression: candidate(\"Hi, my name\") ==\
    \ [\"Hi\", \"my\", \"name\"]\n   Evaluated: [\"Hi\", \"my name\"] == [\"Hi\",\
    \ \"my\", \"name\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpb9larq9s.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpb9larq9s.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpb9larq9s.jl:19\n  Expression: candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\n   Evaluated: [\"One,\", \"two\", \"three\", \"four\", \"five\", \"six,\"\
    ] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpb9larq9s.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpb9larq9s.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpb9larq9s.jl:20\n  Expression: candidate(\"\") == Vector{String}([])\n\
    \   Evaluated: [\"\"] == String[]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpb9larq9s.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n "
  timestamp: 1659822063
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    words = split(s, \"\\s+|,\")\n    return words\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = words_string;\n\t@test(candidate(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\
    \t@test(candidate(\"One,, two, three, four, five, six,\") == [\"One\", \"two\"\
    , \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\
    \t@test(candidate(\"ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: invalid escape sequence\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpqogys3cg.jl:8\nin expression starting at /tmp/tmpqogys3cg.jl:8\n"
  stdout: ''
  timestamp: 1659822063
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    s = strip(s) # delete leading spaces\n    if length(s) != 0 # check to\
    \ see if s is empty\n        first_word, s = split(s, isa(x->x==',' || x==' '))\
    \ # get the first word\n        return append!(words_string(s), first_word) #\
    \ recursively call words_string on the rest of the string\n    else\n        return\
    \ [] # return an empty array if the string is empty\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = words_string;\n\t@test(candidate(\"Hi, my name\
    \ is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\n\t@test(candidate(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\n\t@test(candidate(\"Hi, my name\") == [\"Hi\", \"my\",\
    \ \"name\"])\n\t@test(candidate(\"One,, two, three, four, five, six,\") == [\"\
    One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    \") == Vector{String}([]))\n\t@test(candidate(\"ahmed     , gamal\") == [\"ahmed\"\
    , \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp61fhsuao.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp61fhsuao.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"]\n  ArgumentError: isa: too few arguments (expected 2)\n  Stacktrace:\n\
    \   [1] words_string(s::String)\n     @ Main /tmp/tmp61fhsuao.jl:10\n   [2] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp61fhsuao.jl:21 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp61fhsuao.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp61fhsuao.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\"\
    , \"four\", \"five\", \"six\"]\n  ArgumentError: isa: too few arguments (expected\
    \ 2)\n  Stacktrace:\n   [1] words_string(s::String)\n     @ Main /tmp/tmp61fhsuao.jl:10\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp61fhsuao.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp61fhsuao.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp61fhsuao.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(\"Hi, my name\") == [\"Hi\", \"my\", \"name\"]\n  ArgumentError: isa:\
    \ too few arguments (expected 2)\n  Stacktrace:\n   [1] words_string(s::String)\n\
    \     @ Main /tmp/tmp61fhsuao.jl:10\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp61fhsuao.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp61fhsuao.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp61fhsuao.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(\"One,, two, three, four, five, six,\") == [\"One\", \"two\", \"thr"
  timestamp: 1659822064
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    split(s, r\"\\s*,\\s*\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpzewbxy0d.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpzewbxy0d.jl:15\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"Hi\", \"my name is John\"] == [\"Hi\", \"my\", \"name\", \"is\", \"John\"\
    ]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzewbxy0d.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzewbxy0d.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpzewbxy0d.jl:17\n  Expression: candidate(\"Hi, my name\") ==\
    \ [\"Hi\", \"my\", \"name\"]\n   Evaluated: [\"Hi\", \"my name\"] == [\"Hi\",\
    \ \"my\", \"name\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzewbxy0d.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzewbxy0d.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpzewbxy0d.jl:18\n  Expression: candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\n   Evaluated: [\"One\", \"\", \"two\", \"three\", \"four\", \"five\",\
    \ \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzewbxy0d.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzewbxy0d.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpzewbxy0d.jl:19\n  Expression: candidate(\"\") == Vector{String}([])\n\
    \   Evaluated: [\"\"] == String[]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzewbxy0d.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inli"
  timestamp: 1659822058
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    return split(s, r\"\\s*[, ]\\s*\")\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ])\n\t@test(candidate(\"Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpg3o0qdut.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpg3o0qdut.jl:18\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\n   Evaluated: [\"One\", \"\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpg3o0qdut.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpg3o0qdut.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpg3o0qdut.jl:19\n  Expression: candidate(\"\") == Vector{String}([])\n\
    \   Evaluated: [\"\"] == String[]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpg3o0qdut.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpg3o0qdut.jl:14\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     2      6\n"
  timestamp: 1659822063
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    return split(s)\nend\nusing Test\n\n@testset begin\n\ncandidate = words_string;\n\
    \t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\"\
    , \"John\"])\n\t@test(candidate(\"One, two, three, four, five, six\") == [\"One\"\
    , \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"Hi, my\
    \ name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpy9_padcp.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpy9_padcp.jl:15\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"Hi,\", \"my\", \"name\", \"is\", \"John\"] == [\"Hi\", \"my\", \"name\",\
    \ \"is\", \"John\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy9_padcp.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpy9_padcp.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpy9_padcp.jl:16\n  Expression: candidate(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n   Evaluated: [\"One,\", \"two,\", \"three,\", \"four,\", \"five,\", \"six\"\
    ] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy9_padcp.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpy9_padcp.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpy9_padcp.jl:17\n  Expression: candidate(\"Hi, my name\") ==\
    \ [\"Hi\", \"my\", \"name\"]\n   Evaluated: [\"Hi,\", \"my\", \"name\"] == [\"\
    Hi\", \"my\", \"name\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy9_padcp.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpy9_padcp.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpy9_padcp.jl:18\n  Expression: candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\n   Evaluated: [\"One,,\", \"two,\", \"three,\", \"four,\", \"five,\",\
    \ \"six,\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n "
  timestamp: 1659822054
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    w = split(s, r\"[,\\s]+\")\n    return w\nend\n# Only for testing\nstring_\
    \ = \"Functions, variables, arrays, conditions, loops, import, export, . . . .\
    \ . . . . . . . . . . . . .\"\nusing Test\n\n@testset begin\n\ncandidate = words_string;\n\
    \t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\"\
    , \"John\"])\n\t@test(candidate(\"One, two, three, four, five, six\") == [\"One\"\
    , \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"Hi, my\
    \ name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpi6rx5x9k.jl:15

    '
  stdout: "test set: Test Failed at /tmp/tmpi6rx5x9k.jl:21\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpi6rx5x9k.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpi6rx5x9k.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpi6rx5x9k.jl:22\n  Expression: candidate(\"\") == Vector{String}([])\n\
    \   Evaluated: [\"\"] == String[]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpi6rx5x9k.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpi6rx5x9k.jl:17\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     2      6\n"
  timestamp: 1659822064
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    s = split(s, [\" \",\",\"])\n    return s\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = words_string;\n\t@test(candidate(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\
    \t@test(candidate(\"One,, two, three, four, five, six,\") == [\"One\", \"two\"\
    , \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\
    \t@test(candidate(\"ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpu22q29ky.jl:13

    '
  stdout: "test set: Error During Test at /tmp/tmpu22q29ky.jl:16\n  Test threw exception\n\
    \  Expression: candidate(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"]\n  MethodError: no method matching findfirst(::Vector{String},\
    \ ::String)\n  Closest candidates are:\n    findfirst(!Matched::Function, ::Union{AbstractString,\
    \ AbstractArray}) at ~/.conda/envs/polyglot/share/julia/base/array.jl:2002\n \
    \   findfirst(!Matched::Function, ::Any) at ~/.conda/envs/polyglot/share/julia/base/array.jl:1994\n\
    \    findfirst(!Matched::AbstractString, ::AbstractString) at ~/.conda/envs/polyglot/share/julia/base/strings/search.jl:104\n\
    \    ...\n  Stacktrace:\n   [1] _split(str::String, splitter::Vector{String},\
    \ limit::Int64, keepempty::Bool, strs::Vector{SubString{String}})\n     @ Base\
    \ ./strings/util.jl:435\n   [2] split(str::String, splitter::Vector{String}; limit::Int64,\
    \ keepempty::Bool)\n     @ Base ./strings/util.jl:419\n   [3] split(str::String,\
    \ splitter::Vector{String})\n     @ Base ./strings/util.jl:419\n   [4] words_string(s::String)\n\
    \     @ Main /tmp/tmpu22q29ky.jl:8\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpu22q29ky.jl:16 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpu22q29ky.jl:15\ntest set:\
    \ Error During Test at /tmp/tmpu22q29ky.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(\"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\"\
    , \"four\", \"five\", \"six\"]\n  MethodError: no method matching findfirst(::Vector{String},\
    \ ::String)\n  Closest candidates are:\n    findfirst(!Matched::Function, ::Union{AbstractString,\
    \ AbstractArray}) at ~/.conda/envs/polyglot/share/julia/base/array.jl:2002\n \
    \   findfirst(!Matched::Function, ::Any) at ~/.conda/envs/polyglot/share/julia/base/array.jl:1994\n\
    \    findfirst(!Matched::AbstractString, ::AbstractString) at ~/.conda/envs/polyglot/share/julia/base/strings/search.jl:104\n\
    \    ...\n  Stacktrace:\n   "
  timestamp: 1659822066
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    words = split(s, \" \")\n    return words\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = words_string;\n\t@test(candidate(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\
    \t@test(candidate(\"One,, two, three, four, five, six,\") == [\"One\", \"two\"\
    , \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\
    \t@test(candidate(\"ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp43yipfhh.jl:13

    '
  stdout: "test set: Test Failed at /tmp/tmp43yipfhh.jl:16\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"Hi,\", \"my\", \"name\", \"is\", \"John\"] == [\"Hi\", \"my\", \"name\",\
    \ \"is\", \"John\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp43yipfhh.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp43yipfhh.jl:15\ntest set: Test\
    \ Failed at /tmp/tmp43yipfhh.jl:17\n  Expression: candidate(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n   Evaluated: [\"One,\", \"two,\", \"three,\", \"four,\", \"five,\", \"six\"\
    ] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp43yipfhh.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp43yipfhh.jl:15\ntest set: Test\
    \ Failed at /tmp/tmp43yipfhh.jl:18\n  Expression: candidate(\"Hi, my name\") ==\
    \ [\"Hi\", \"my\", \"name\"]\n   Evaluated: [\"Hi,\", \"my\", \"name\"] == [\"\
    Hi\", \"my\", \"name\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp43yipfhh.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp43yipfhh.jl:15\ntest set: Test\
    \ Failed at /tmp/tmp43yipfhh.jl:19\n  Expression: candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\n   Evaluated: [\"One,,\", \"two,\", \"three,\", \"four,\", \"five,\",\
    \ \"six,\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n "
  timestamp: 1659822058
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    split(s, r\"[\\s,]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp7tvgh48a.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmp7tvgh48a.jl:18\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7tvgh48a.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7tvgh48a.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp7tvgh48a.jl:19\n  Expression: candidate(\"\") == Vector{String}([])\n\
    \   Evaluated: [\"\"] == String[]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7tvgh48a.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7tvgh48a.jl:14\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     2      6\n"
  timestamp: 1659822058
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n  return split(s, r\"[ ,]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp4o_iif4x.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmp4o_iif4x.jl:18\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4o_iif4x.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4o_iif4x.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp4o_iif4x.jl:19\n  Expression: candidate(\"\") == Vector{String}([])\n\
    \   Evaluated: [\"\"] == String[]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4o_iif4x.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4o_iif4x.jl:14\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     2      6\n"
  timestamp: 1659822064
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    splits = split(s, \", \")\n    return splits\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = words_string;\n\t@test(candidate(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\
    \t@test(candidate(\"One,, two, three, four, five, six,\") == [\"One\", \"two\"\
    , \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\
    \t@test(candidate(\"ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxknhw7hl.jl:13

    '
  stdout: "test set: Test Failed at /tmp/tmpxknhw7hl.jl:16\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"Hi\", \"my name is John\"] == [\"Hi\", \"my\", \"name\", \"is\", \"John\"\
    ]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxknhw7hl.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxknhw7hl.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpxknhw7hl.jl:18\n  Expression: candidate(\"Hi, my name\") ==\
    \ [\"Hi\", \"my\", \"name\"]\n   Evaluated: [\"Hi\", \"my name\"] == [\"Hi\",\
    \ \"my\", \"name\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxknhw7hl.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxknhw7hl.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpxknhw7hl.jl:19\n  Expression: candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\n   Evaluated: [\"One,\", \"two\", \"three\", \"four\", \"five\", \"six,\"\
    ] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxknhw7hl.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxknhw7hl.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpxknhw7hl.jl:20\n  Expression: candidate(\"\") == Vector{String}([])\n\
    \   Evaluated: [\"\"] == String[]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxknhw7hl.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n "
  timestamp: 1659822064
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    split(s, r\"[ ,]\")\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpe58gx5oc.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpe58gx5oc.jl:15\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"Hi\", \"\", \"my\", \"name\", \"is\", \"John\"] == [\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpe58gx5oc.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpe58gx5oc.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpe58gx5oc.jl:16\n  Expression: candidate(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n   Evaluated: [\"One\", \"\", \"two\", \"\", \"three\", \"\", \"four\", \"\"\
    , \"five\", \"\", \"six\"] == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpe58gx5oc.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpe58gx5oc.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpe58gx5oc.jl:17\n  Expression: candidate(\"Hi, my name\") ==\
    \ [\"Hi\", \"my\", \"name\"]\n   Evaluated: [\"Hi\", \"\", \"my\", \"name\"] ==\
    \ [\"Hi\", \"my\", \"name\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpe58gx5oc.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpe58gx5oc.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpe58gx5oc.jl:18\n  Expression: candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\n   Evaluated: [\"One\", \"\", \"\", \"two\", \"\", \"three\", \"\", \"\
    four\", \"\", \"five\", \"\", \"six\", \"\"] == [\"One\", \"two\", \"three\",\
    \ \"four\", \"five\", \"six\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/st"
  timestamp: 1659822064
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    words = split(s, \" , \")\n    return words\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = words_string;\n\t@test(candidate(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\
    \t@test(candidate(\"One,, two, three, four, five, six,\") == [\"One\", \"two\"\
    , \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\
    \t@test(candidate(\"ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpwncb1gxg.jl:13

    '
  stdout: "test set: Test Failed at /tmp/tmpwncb1gxg.jl:16\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"Hi, my name is John\"] == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwncb1gxg.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwncb1gxg.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpwncb1gxg.jl:17\n  Expression: candidate(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n   Evaluated: [\"One, two, three, four, five, six\"] == [\"One\", \"two\",\
    \ \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpwncb1gxg.jl:17 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpwncb1gxg.jl:15\ntest set: Test Failed at /tmp/tmpwncb1gxg.jl:18\n\
    \  Expression: candidate(\"Hi, my name\") == [\"Hi\", \"my\", \"name\"]\n   Evaluated:\
    \ [\"Hi, my name\"] == [\"Hi\", \"my\", \"name\"]\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpwncb1gxg.jl:18 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpwncb1gxg.jl:15\ntest set: Test Failed at /tmp/tmpwncb1gxg.jl:19\n\
    \  Expression: candidate(\"One,, two, three, four, five, six,\") == [\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"]\n   Evaluated: [\"One,, two,\
    \ three, four, five, six,\"] == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwncb1gxg.jl:19 "
  timestamp: 1659822064
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    words = split(s, r\" |,\")\n    return words\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = words_string;\n\t@test(candidate(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\
    \t@test(candidate(\"One,, two, three, four, five, six,\") == [\"One\", \"two\"\
    , \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\
    \t@test(candidate(\"ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpgyu4j6nj.jl:13

    '
  stdout: "test set: Test Failed at /tmp/tmpgyu4j6nj.jl:16\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"Hi\", \"\", \"my\", \"name\", \"is\", \"John\"] == [\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgyu4j6nj.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgyu4j6nj.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpgyu4j6nj.jl:17\n  Expression: candidate(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n   Evaluated: [\"One\", \"\", \"two\", \"\", \"three\", \"\", \"four\", \"\"\
    , \"five\", \"\", \"six\"] == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgyu4j6nj.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgyu4j6nj.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpgyu4j6nj.jl:18\n  Expression: candidate(\"Hi, my name\") ==\
    \ [\"Hi\", \"my\", \"name\"]\n   Evaluated: [\"Hi\", \"\", \"my\", \"name\"] ==\
    \ [\"Hi\", \"my\", \"name\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgyu4j6nj.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgyu4j6nj.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpgyu4j6nj.jl:19\n  Expression: candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\n   Evaluated: [\"One\", \"\", \"\", \"two\", \"\", \"three\", \"\", \"\
    four\", \"\", \"five\", \"\", \"six\", \"\"] == [\"One\", \"two\", \"three\",\
    \ \"four\", \"five\", \"six\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/st"
  timestamp: 1659822065
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    split(s, [\" \", \",\"])\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp77q6gfy7.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmp77q6gfy7.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"]\n  MethodError: no method matching findfirst(::Vector{String},\
    \ ::String)\n  Closest candidates are:\n    findfirst(!Matched::Function, ::Union{AbstractString,\
    \ AbstractArray}) at ~/.conda/envs/polyglot/share/julia/base/array.jl:2002\n \
    \   findfirst(!Matched::Function, ::Any) at ~/.conda/envs/polyglot/share/julia/base/array.jl:1994\n\
    \    findfirst(!Matched::AbstractString, ::AbstractString) at ~/.conda/envs/polyglot/share/julia/base/strings/search.jl:104\n\
    \    ...\n  Stacktrace:\n   [1] _split(str::String, splitter::Vector{String},\
    \ limit::Int64, keepempty::Bool, strs::Vector{SubString{String}})\n     @ Base\
    \ ./strings/util.jl:435\n   [2] split(str::String, splitter::Vector{String}; limit::Int64,\
    \ keepempty::Bool)\n     @ Base ./strings/util.jl:419\n   [3] split(str::String,\
    \ splitter::Vector{String})\n     @ Base ./strings/util.jl:419\n   [4] words_string(s::String)\n\
    \     @ Main /tmp/tmp77q6gfy7.jl:8\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmp77q6gfy7.jl:15 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmp77q6gfy7.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp77q6gfy7.jl:16\n  Test threw exception\n  Expression:\
    \ candidate(\"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\"\
    , \"four\", \"five\", \"six\"]\n  MethodError: no method matching findfirst(::Vector{String},\
    \ ::String)\n  Closest candidates are:\n    findfirst(!Matched::Function, ::Union{AbstractString,\
    \ AbstractArray}) at ~/.conda/envs/polyglot/share/julia/base/array.jl:2002\n \
    \   findfirst(!Matched::Function, ::Any) at ~/.conda/envs/polyglot/share/julia/base/array.jl:1994\n\
    \    findfirst(!Matched::AbstractString, ::AbstractString) at ~/.conda/envs/polyglot/share/julia/base/strings/search.jl:104\n\
    \    ...\n  Stacktrace:\n   "
  timestamp: 1659822067
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    split(s, r\"[\\s,]\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp_jm4vews.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmp_jm4vews.jl:15\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"Hi\", \"\", \"my\", \"name\", \"is\", \"John\"] == [\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_jm4vews.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_jm4vews.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp_jm4vews.jl:16\n  Expression: candidate(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n   Evaluated: [\"One\", \"\", \"two\", \"\", \"three\", \"\", \"four\", \"\"\
    , \"five\", \"\", \"six\"] == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_jm4vews.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_jm4vews.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp_jm4vews.jl:17\n  Expression: candidate(\"Hi, my name\") ==\
    \ [\"Hi\", \"my\", \"name\"]\n   Evaluated: [\"Hi\", \"\", \"my\", \"name\"] ==\
    \ [\"Hi\", \"my\", \"name\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_jm4vews.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_jm4vews.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp_jm4vews.jl:18\n  Expression: candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\n   Evaluated: [\"One\", \"\", \"\", \"two\", \"\", \"three\", \"\", \"\
    four\", \"\", \"five\", \"\", \"six\", \"\"] == [\"One\", \"two\", \"three\",\
    \ \"four\", \"five\", \"six\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/st"
  timestamp: 1659822065
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    split(lowercase(s),r\"[[:space:],]+\")\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ])\n\t@test(candidate(\"Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp7v1m3eey.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmp7v1m3eey.jl:15\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"hi\", \"my\", \"name\", \"is\", \"john\"] == [\"Hi\", \"my\", \"name\", \"\
    is\", \"John\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7v1m3eey.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7v1m3eey.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp7v1m3eey.jl:16\n  Expression: candidate(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n   Evaluated: [\"one\", \"two\", \"three\", \"four\", \"five\", \"six\"] ==\
    \ [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n [1]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7v1m3eey.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7v1m3eey.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp7v1m3eey.jl:17\n  Expression: candidate(\"Hi, my name\") ==\
    \ [\"Hi\", \"my\", \"name\"]\n   Evaluated: [\"hi\", \"my\", \"name\"] == [\"\
    Hi\", \"my\", \"name\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7v1m3eey.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7v1m3eey.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp7v1m3eey.jl:18\n  Expression: candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\n   Evaluated: [\"one\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    , \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro "
  timestamp: 1659822065
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    words = split(s, [' ', ','])\n    return words\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = words_string;\n\t@test(candidate(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\
    \t@test(candidate(\"One,, two, three, four, five, six,\") == [\"One\", \"two\"\
    , \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\
    \t@test(candidate(\"ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp1w8o29o4.jl:13

    '
  stdout: "test set: Test Failed at /tmp/tmp1w8o29o4.jl:16\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"Hi\", \"\", \"my\", \"name\", \"is\", \"John\"] == [\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1w8o29o4.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1w8o29o4.jl:15\ntest set: Test\
    \ Failed at /tmp/tmp1w8o29o4.jl:17\n  Expression: candidate(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n   Evaluated: [\"One\", \"\", \"two\", \"\", \"three\", \"\", \"four\", \"\"\
    , \"five\", \"\", \"six\"] == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1w8o29o4.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1w8o29o4.jl:15\ntest set: Test\
    \ Failed at /tmp/tmp1w8o29o4.jl:18\n  Expression: candidate(\"Hi, my name\") ==\
    \ [\"Hi\", \"my\", \"name\"]\n   Evaluated: [\"Hi\", \"\", \"my\", \"name\"] ==\
    \ [\"Hi\", \"my\", \"name\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1w8o29o4.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1w8o29o4.jl:15\ntest set: Test\
    \ Failed at /tmp/tmp1w8o29o4.jl:19\n  Expression: candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\n   Evaluated: [\"One\", \"\", \"\", \"two\", \"\", \"three\", \"\", \"\
    four\", \"\", \"five\", \"\", \"six\", \"\"] == [\"One\", \"two\", \"three\",\
    \ \"four\", \"five\", \"six\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/st"
  timestamp: 1659822065
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    words = split(s)\n    words\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp0nf6rvei.jl:13

    '
  stdout: "test set: Test Failed at /tmp/tmp0nf6rvei.jl:16\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"Hi,\", \"my\", \"name\", \"is\", \"John\"] == [\"Hi\", \"my\", \"name\",\
    \ \"is\", \"John\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0nf6rvei.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0nf6rvei.jl:15\ntest set: Test\
    \ Failed at /tmp/tmp0nf6rvei.jl:17\n  Expression: candidate(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n   Evaluated: [\"One,\", \"two,\", \"three,\", \"four,\", \"five,\", \"six\"\
    ] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0nf6rvei.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0nf6rvei.jl:15\ntest set: Test\
    \ Failed at /tmp/tmp0nf6rvei.jl:18\n  Expression: candidate(\"Hi, my name\") ==\
    \ [\"Hi\", \"my\", \"name\"]\n   Evaluated: [\"Hi,\", \"my\", \"name\"] == [\"\
    Hi\", \"my\", \"name\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0nf6rvei.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0nf6rvei.jl:15\ntest set: Test\
    \ Failed at /tmp/tmp0nf6rvei.jl:19\n  Expression: candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\n   Evaluated: [\"One,,\", \"two,\", \"three,\", \"four,\", \"five,\",\
    \ \"six,\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n "
  timestamp: 1659822065
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    words = split(s, [\" \", \",\"])\n    return words\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = words_string;\n\t@test(candidate(\"Hi, my name is\
    \ John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\n\t@test(candidate(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\n\t@test(candidate(\"Hi, my name\") == [\"Hi\", \"my\",\
    \ \"name\"])\n\t@test(candidate(\"One,, two, three, four, five, six,\") == [\"\
    One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    \") == Vector{String}([]))\n\t@test(candidate(\"ahmed     , gamal\") == [\"ahmed\"\
    , \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpqna86nwv.jl:13

    '
  stdout: "test set: Error During Test at /tmp/tmpqna86nwv.jl:16\n  Test threw exception\n\
    \  Expression: candidate(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"]\n  MethodError: no method matching findfirst(::Vector{String},\
    \ ::String)\n  Closest candidates are:\n    findfirst(!Matched::Function, ::Union{AbstractString,\
    \ AbstractArray}) at ~/.conda/envs/polyglot/share/julia/base/array.jl:2002\n \
    \   findfirst(!Matched::Function, ::Any) at ~/.conda/envs/polyglot/share/julia/base/array.jl:1994\n\
    \    findfirst(!Matched::AbstractString, ::AbstractString) at ~/.conda/envs/polyglot/share/julia/base/strings/search.jl:104\n\
    \    ...\n  Stacktrace:\n   [1] _split(str::String, splitter::Vector{String},\
    \ limit::Int64, keepempty::Bool, strs::Vector{SubString{String}})\n     @ Base\
    \ ./strings/util.jl:435\n   [2] split(str::String, splitter::Vector{String}; limit::Int64,\
    \ keepempty::Bool)\n     @ Base ./strings/util.jl:419\n   [3] split(str::String,\
    \ splitter::Vector{String})\n     @ Base ./strings/util.jl:419\n   [4] words_string(s::String)\n\
    \     @ Main /tmp/tmpqna86nwv.jl:8\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpqna86nwv.jl:16 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpqna86nwv.jl:15\ntest set:\
    \ Error During Test at /tmp/tmpqna86nwv.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(\"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\"\
    , \"four\", \"five\", \"six\"]\n  MethodError: no method matching findfirst(::Vector{String},\
    \ ::String)\n  Closest candidates are:\n    findfirst(!Matched::Function, ::Union{AbstractString,\
    \ AbstractArray}) at ~/.conda/envs/polyglot/share/julia/base/array.jl:2002\n \
    \   findfirst(!Matched::Function, ::Any) at ~/.conda/envs/polyglot/share/julia/base/array.jl:1994\n\
    \    findfirst(!Matched::AbstractString, ::AbstractString) at ~/.conda/envs/polyglot/share/julia/base/strings/search.jl:104\n\
    \    ...\n  Stacktrace:\n   "
  timestamp: 1659822067
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    s = split(s, \" \")\n    # print(s)\n    return s\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = words_string;\n\t@test(candidate(\"Hi, my name is\
    \ John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\n\t@test(candidate(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\n\t@test(candidate(\"Hi, my name\") == [\"Hi\", \"my\",\
    \ \"name\"])\n\t@test(candidate(\"One,, two, three, four, five, six,\") == [\"\
    One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    \") == Vector{String}([]))\n\t@test(candidate(\"ahmed     , gamal\") == [\"ahmed\"\
    , \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmprwf62hgh.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmprwf62hgh.jl:17\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"Hi,\", \"my\", \"name\", \"is\", \"John\"] == [\"Hi\", \"my\", \"name\",\
    \ \"is\", \"John\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprwf62hgh.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprwf62hgh.jl:16\ntest set: Test\
    \ Failed at /tmp/tmprwf62hgh.jl:18\n  Expression: candidate(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n   Evaluated: [\"One,\", \"two,\", \"three,\", \"four,\", \"five,\", \"six\"\
    ] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprwf62hgh.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprwf62hgh.jl:16\ntest set: Test\
    \ Failed at /tmp/tmprwf62hgh.jl:19\n  Expression: candidate(\"Hi, my name\") ==\
    \ [\"Hi\", \"my\", \"name\"]\n   Evaluated: [\"Hi,\", \"my\", \"name\"] == [\"\
    Hi\", \"my\", \"name\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprwf62hgh.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprwf62hgh.jl:16\ntest set: Test\
    \ Failed at /tmp/tmprwf62hgh.jl:20\n  Expression: candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\n   Evaluated: [\"One,,\", \"two,\", \"three,\", \"four,\", \"five,\",\
    \ \"six,\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n "
  timestamp: 1659822065
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    \"\"\"\n    This function will take a string and return an array of its\
    \ words.\n    For example:\n    words_string(\"Hello, I am a string!\") #=> [\"\
    Hello\", \"I\", \"am\", \"a\", \"string!\"]\n    \"\"\"\n    return split(s, r\"\
    \\s*[,\\s]\\s*\")\nend\nusing Test\n\n@testset begin\n\ncandidate = words_string;\n\
    \t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\"\
    , \"John\"])\n\t@test(candidate(\"One, two, three, four, five, six\") == [\"One\"\
    , \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"Hi, my\
    \ name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpnd4bcwr7.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpnd4bcwr7.jl:23\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\n   Evaluated: [\"One\", \"\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnd4bcwr7.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnd4bcwr7.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpnd4bcwr7.jl:24\n  Expression: candidate(\"\") == Vector{String}([])\n\
    \   Evaluated: [\"\"] == String[]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnd4bcwr7.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnd4bcwr7.jl:19\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     2      6\n"
  timestamp: 1659822065
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    y=split(s)\n    return y\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp3fw8dt8b.jl:13

    '
  stdout: "test set: Test Failed at /tmp/tmp3fw8dt8b.jl:16\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"Hi,\", \"my\", \"name\", \"is\", \"John\"] == [\"Hi\", \"my\", \"name\",\
    \ \"is\", \"John\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3fw8dt8b.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3fw8dt8b.jl:15\ntest set: Test\
    \ Failed at /tmp/tmp3fw8dt8b.jl:17\n  Expression: candidate(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n   Evaluated: [\"One,\", \"two,\", \"three,\", \"four,\", \"five,\", \"six\"\
    ] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3fw8dt8b.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3fw8dt8b.jl:15\ntest set: Test\
    \ Failed at /tmp/tmp3fw8dt8b.jl:18\n  Expression: candidate(\"Hi, my name\") ==\
    \ [\"Hi\", \"my\", \"name\"]\n   Evaluated: [\"Hi,\", \"my\", \"name\"] == [\"\
    Hi\", \"my\", \"name\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3fw8dt8b.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3fw8dt8b.jl:15\ntest set: Test\
    \ Failed at /tmp/tmp3fw8dt8b.jl:19\n  Expression: candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\n   Evaluated: [\"One,,\", \"two,\", \"three,\", \"four,\", \"five,\",\
    \ \"six,\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n "
  timestamp: 1659822065
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    return split(s, [' ',','])\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpkv6tpqwo.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpkv6tpqwo.jl:15\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"Hi\", \"\", \"my\", \"name\", \"is\", \"John\"] == [\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkv6tpqwo.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkv6tpqwo.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpkv6tpqwo.jl:16\n  Expression: candidate(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n   Evaluated: [\"One\", \"\", \"two\", \"\", \"three\", \"\", \"four\", \"\"\
    , \"five\", \"\", \"six\"] == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkv6tpqwo.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkv6tpqwo.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpkv6tpqwo.jl:17\n  Expression: candidate(\"Hi, my name\") ==\
    \ [\"Hi\", \"my\", \"name\"]\n   Evaluated: [\"Hi\", \"\", \"my\", \"name\"] ==\
    \ [\"Hi\", \"my\", \"name\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkv6tpqwo.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkv6tpqwo.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpkv6tpqwo.jl:18\n  Expression: candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\n   Evaluated: [\"One\", \"\", \"\", \"two\", \"\", \"three\", \"\", \"\
    four\", \"\", \"five\", \"\", \"six\", \"\"] == [\"One\", \"two\", \"three\",\
    \ \"four\", \"five\", \"six\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/st"
  timestamp: 1659822066
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    # YOUR CODE HERE\n    words = split(s, r\"[, ]\")\n    return words\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = words_string;\n\t@test(candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\n\t@test(candidate(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\n\t@test(candidate(\"Hi, my name\") == [\"Hi\", \"my\",\
    \ \"name\"])\n\t@test(candidate(\"One,, two, three, four, five, six,\") == [\"\
    One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    \") == Vector{String}([]))\n\t@test(candidate(\"ahmed     , gamal\") == [\"ahmed\"\
    , \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp6n6lmktz.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmp6n6lmktz.jl:17\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"Hi\", \"\", \"my\", \"name\", \"is\", \"John\"] == [\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6n6lmktz.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6n6lmktz.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp6n6lmktz.jl:18\n  Expression: candidate(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n   Evaluated: [\"One\", \"\", \"two\", \"\", \"three\", \"\", \"four\", \"\"\
    , \"five\", \"\", \"six\"] == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6n6lmktz.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6n6lmktz.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp6n6lmktz.jl:19\n  Expression: candidate(\"Hi, my name\") ==\
    \ [\"Hi\", \"my\", \"name\"]\n   Evaluated: [\"Hi\", \"\", \"my\", \"name\"] ==\
    \ [\"Hi\", \"my\", \"name\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6n6lmktz.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6n6lmktz.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp6n6lmktz.jl:20\n  Expression: candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\n   Evaluated: [\"One\", \"\", \"\", \"two\", \"\", \"three\", \"\", \"\
    four\", \"\", \"five\", \"\", \"six\", \"\"] == [\"One\", \"two\", \"three\",\
    \ \"four\", \"five\", \"six\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/st"
  timestamp: 1659822066
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    split(s, r\"[\\s,]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp7tvgh48a.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmp7tvgh48a.jl:18\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7tvgh48a.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7tvgh48a.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp7tvgh48a.jl:19\n  Expression: candidate(\"\") == Vector{String}([])\n\
    \   Evaluated: [\"\"] == String[]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7tvgh48a.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7tvgh48a.jl:14\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     2      6\n"
  timestamp: 1659822058
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    split(s, r\"[, ]\")\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpljdr5jjp.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpljdr5jjp.jl:15\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"Hi\", \"\", \"my\", \"name\", \"is\", \"John\"] == [\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpljdr5jjp.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpljdr5jjp.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpljdr5jjp.jl:16\n  Expression: candidate(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n   Evaluated: [\"One\", \"\", \"two\", \"\", \"three\", \"\", \"four\", \"\"\
    , \"five\", \"\", \"six\"] == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpljdr5jjp.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpljdr5jjp.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpljdr5jjp.jl:17\n  Expression: candidate(\"Hi, my name\") ==\
    \ [\"Hi\", \"my\", \"name\"]\n   Evaluated: [\"Hi\", \"\", \"my\", \"name\"] ==\
    \ [\"Hi\", \"my\", \"name\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpljdr5jjp.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpljdr5jjp.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpljdr5jjp.jl:18\n  Expression: candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\n   Evaluated: [\"One\", \"\", \"\", \"two\", \"\", \"three\", \"\", \"\
    four\", \"\", \"five\", \"\", \"six\", \"\"] == [\"One\", \"two\", \"three\",\
    \ \"four\", \"five\", \"six\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/st"
  timestamp: 1659822066
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    # split the string\n    return split(s)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ])\n\t@test(candidate(\"Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpw7p39god.jl:13

    '
  stdout: "test set: Test Failed at /tmp/tmpw7p39god.jl:16\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"Hi,\", \"my\", \"name\", \"is\", \"John\"] == [\"Hi\", \"my\", \"name\",\
    \ \"is\", \"John\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpw7p39god.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpw7p39god.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpw7p39god.jl:17\n  Expression: candidate(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n   Evaluated: [\"One,\", \"two,\", \"three,\", \"four,\", \"five,\", \"six\"\
    ] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpw7p39god.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpw7p39god.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpw7p39god.jl:18\n  Expression: candidate(\"Hi, my name\") ==\
    \ [\"Hi\", \"my\", \"name\"]\n   Evaluated: [\"Hi,\", \"my\", \"name\"] == [\"\
    Hi\", \"my\", \"name\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpw7p39god.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpw7p39god.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpw7p39god.jl:19\n  Expression: candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\n   Evaluated: [\"One,,\", \"two,\", \"three,\", \"four,\", \"five,\",\
    \ \"six,\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n "
  timestamp: 1659822066
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    \n    y = split(s, \",\")\n    z = split(s, \" \")\n    w = split(s, \"\
    \  \")\n    if length(y) > 1\n        return y\n    elseif length(z) > 1\n   \
    \     return z\n    else\n        return w\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = words_string;\n\t@test(candidate(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\
    \t@test(candidate(\"One,, two, three, four, five, six,\") == [\"One\", \"two\"\
    , \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\
    \t@test(candidate(\"ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxpn7ydzn.jl:22

    '
  stdout: "test set: Test Failed at /tmp/tmpxpn7ydzn.jl:25\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"Hi\", \" my name is John\"] == [\"Hi\", \"my\", \"name\", \"is\", \"John\"\
    ]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxpn7ydzn.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxpn7ydzn.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpxpn7ydzn.jl:26\n  Expression: candidate(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n   Evaluated: [\"One\", \" two\", \" three\", \" four\", \" five\", \" six\"\
    ] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxpn7ydzn.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxpn7ydzn.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpxpn7ydzn.jl:27\n  Expression: candidate(\"Hi, my name\") ==\
    \ [\"Hi\", \"my\", \"name\"]\n   Evaluated: [\"Hi\", \" my name\"] == [\"Hi\"\
    , \"my\", \"name\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxpn7ydzn.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxpn7ydzn.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpxpn7ydzn.jl:28\n  Expression: candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\n   Evaluated: [\"One\", \"\", \" two\", \" three\", \" four\", \" five\"\
    , \" six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] ma"
  timestamp: 1659822066
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    s_split = split(s, ' ')\n    return s_split\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = words_string;\n\t@test(candidate(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\
    \t@test(candidate(\"One,, two, three, four, five, six,\") == [\"One\", \"two\"\
    , \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\
    \t@test(candidate(\"ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp5fzverc7.jl:13

    '
  stdout: "test set: Test Failed at /tmp/tmp5fzverc7.jl:16\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"Hi,\", \"my\", \"name\", \"is\", \"John\"] == [\"Hi\", \"my\", \"name\",\
    \ \"is\", \"John\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5fzverc7.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5fzverc7.jl:15\ntest set: Test\
    \ Failed at /tmp/tmp5fzverc7.jl:17\n  Expression: candidate(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n   Evaluated: [\"One,\", \"two,\", \"three,\", \"four,\", \"five,\", \"six\"\
    ] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5fzverc7.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5fzverc7.jl:15\ntest set: Test\
    \ Failed at /tmp/tmp5fzverc7.jl:18\n  Expression: candidate(\"Hi, my name\") ==\
    \ [\"Hi\", \"my\", \"name\"]\n   Evaluated: [\"Hi,\", \"my\", \"name\"] == [\"\
    Hi\", \"my\", \"name\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5fzverc7.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5fzverc7.jl:15\ntest set: Test\
    \ Failed at /tmp/tmp5fzverc7.jl:19\n  Expression: candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\n   Evaluated: [\"One,,\", \"two,\", \"three,\", \"four,\", \"five,\",\
    \ \"six,\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n "
  timestamp: 1659822067
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    words = split(s, \",\")\n    return words\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = words_string;\n\t@test(candidate(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\
    \t@test(candidate(\"One,, two, three, four, five, six,\") == [\"One\", \"two\"\
    , \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\
    \t@test(candidate(\"ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpvyxdzvf0.jl:13

    '
  stdout: "test set: Test Failed at /tmp/tmpvyxdzvf0.jl:16\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"Hi\", \" my name is John\"] == [\"Hi\", \"my\", \"name\", \"is\", \"John\"\
    ]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvyxdzvf0.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvyxdzvf0.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpvyxdzvf0.jl:17\n  Expression: candidate(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n   Evaluated: [\"One\", \" two\", \" three\", \" four\", \" five\", \" six\"\
    ] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvyxdzvf0.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvyxdzvf0.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpvyxdzvf0.jl:18\n  Expression: candidate(\"Hi, my name\") ==\
    \ [\"Hi\", \"my\", \"name\"]\n   Evaluated: [\"Hi\", \" my name\"] == [\"Hi\"\
    , \"my\", \"name\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvyxdzvf0.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvyxdzvf0.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpvyxdzvf0.jl:19\n  Expression: candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\n   Evaluated: [\"One\", \"\", \" two\", \" three\", \" four\", \" five\"\
    , \" six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] ma"
  timestamp: 1659822054
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    return split(s, r\"[\\s,]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpuitkyhzn.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpuitkyhzn.jl:18\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpuitkyhzn.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpuitkyhzn.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpuitkyhzn.jl:19\n  Expression: candidate(\"\") == Vector{String}([])\n\
    \   Evaluated: [\"\"] == String[]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpuitkyhzn.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpuitkyhzn.jl:14\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     2      6\n"
  timestamp: 1659822054
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    split(s, r\"[ ,]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp08oenehz.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmp08oenehz.jl:18\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp08oenehz.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp08oenehz.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp08oenehz.jl:19\n  Expression: candidate(\"\") == Vector{String}([])\n\
    \   Evaluated: [\"\"] == String[]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp08oenehz.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp08oenehz.jl:14\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     2      6\n"
  timestamp: 1659822061
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n  split(s, \", \")\nend\nusing Test\n\n@testset begin\n\ncandidate = words_string;\n\
    \t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\"\
    , \"John\"])\n\t@test(candidate(\"One, two, three, four, five, six\") == [\"One\"\
    , \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"Hi, my\
    \ name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmphgfuc6e8.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmphgfuc6e8.jl:15\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"Hi\", \"my name is John\"] == [\"Hi\", \"my\", \"name\", \"is\", \"John\"\
    ]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphgfuc6e8.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphgfuc6e8.jl:14\ntest set: Test\
    \ Failed at /tmp/tmphgfuc6e8.jl:17\n  Expression: candidate(\"Hi, my name\") ==\
    \ [\"Hi\", \"my\", \"name\"]\n   Evaluated: [\"Hi\", \"my name\"] == [\"Hi\",\
    \ \"my\", \"name\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphgfuc6e8.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphgfuc6e8.jl:14\ntest set: Test\
    \ Failed at /tmp/tmphgfuc6e8.jl:18\n  Expression: candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\n   Evaluated: [\"One,\", \"two\", \"three\", \"four\", \"five\", \"six,\"\
    ] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphgfuc6e8.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphgfuc6e8.jl:14\ntest set: Test\
    \ Failed at /tmp/tmphgfuc6e8.jl:19\n  Expression: candidate(\"\") == Vector{String}([])\n\
    \   Evaluated: [\"\"] == String[]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphgfuc6e8.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n "
  timestamp: 1659822067
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    words = split(s, [\" \", \",\"])\n    return words\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = words_string;\n\t@test(candidate(\"Hi, my name is\
    \ John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\n\t@test(candidate(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\n\t@test(candidate(\"Hi, my name\") == [\"Hi\", \"my\",\
    \ \"name\"])\n\t@test(candidate(\"One,, two, three, four, five, six,\") == [\"\
    One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    \") == Vector{String}([]))\n\t@test(candidate(\"ahmed     , gamal\") == [\"ahmed\"\
    , \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpqna86nwv.jl:13

    '
  stdout: "test set: Error During Test at /tmp/tmpqna86nwv.jl:16\n  Test threw exception\n\
    \  Expression: candidate(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"]\n  MethodError: no method matching findfirst(::Vector{String},\
    \ ::String)\n  Closest candidates are:\n    findfirst(!Matched::Function, ::Union{AbstractString,\
    \ AbstractArray}) at ~/.conda/envs/polyglot/share/julia/base/array.jl:2002\n \
    \   findfirst(!Matched::Function, ::Any) at ~/.conda/envs/polyglot/share/julia/base/array.jl:1994\n\
    \    findfirst(!Matched::AbstractString, ::AbstractString) at ~/.conda/envs/polyglot/share/julia/base/strings/search.jl:104\n\
    \    ...\n  Stacktrace:\n   [1] _split(str::String, splitter::Vector{String},\
    \ limit::Int64, keepempty::Bool, strs::Vector{SubString{String}})\n     @ Base\
    \ ./strings/util.jl:435\n   [2] split(str::String, splitter::Vector{String}; limit::Int64,\
    \ keepempty::Bool)\n     @ Base ./strings/util.jl:419\n   [3] split(str::String,\
    \ splitter::Vector{String})\n     @ Base ./strings/util.jl:419\n   [4] words_string(s::String)\n\
    \     @ Main /tmp/tmpqna86nwv.jl:8\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpqna86nwv.jl:16 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpqna86nwv.jl:15\ntest set:\
    \ Error During Test at /tmp/tmpqna86nwv.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(\"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\"\
    , \"four\", \"five\", \"six\"]\n  MethodError: no method matching findfirst(::Vector{String},\
    \ ::String)\n  Closest candidates are:\n    findfirst(!Matched::Function, ::Union{AbstractString,\
    \ AbstractArray}) at ~/.conda/envs/polyglot/share/julia/base/array.jl:2002\n \
    \   findfirst(!Matched::Function, ::Any) at ~/.conda/envs/polyglot/share/julia/base/array.jl:1994\n\
    \    findfirst(!Matched::AbstractString, ::AbstractString) at ~/.conda/envs/polyglot/share/julia/base/strings/search.jl:104\n\
    \    ...\n  Stacktrace:\n   "
  timestamp: 1659822067
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    return split(s, [\" \", \",\"])\nend\nusing Test\n\n@testset begin\n\n\
    candidate = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\"\
    , \"my\", \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four,\
    \ five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\
    \t@test(candidate(\"Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmptw5dhwbk.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmptw5dhwbk.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"]\n  MethodError: no method matching findfirst(::Vector{String},\
    \ ::String)\n  Closest candidates are:\n    findfirst(!Matched::Function, ::Union{AbstractString,\
    \ AbstractArray}) at ~/.conda/envs/polyglot/share/julia/base/array.jl:2002\n \
    \   findfirst(!Matched::Function, ::Any) at ~/.conda/envs/polyglot/share/julia/base/array.jl:1994\n\
    \    findfirst(!Matched::AbstractString, ::AbstractString) at ~/.conda/envs/polyglot/share/julia/base/strings/search.jl:104\n\
    \    ...\n  Stacktrace:\n   [1] _split(str::String, splitter::Vector{String},\
    \ limit::Int64, keepempty::Bool, strs::Vector{SubString{String}})\n     @ Base\
    \ ./strings/util.jl:435\n   [2] split(str::String, splitter::Vector{String}; limit::Int64,\
    \ keepempty::Bool)\n     @ Base ./strings/util.jl:419\n   [3] split(str::String,\
    \ splitter::Vector{String})\n     @ Base ./strings/util.jl:419\n   [4] words_string(s::String)\n\
    \     @ Main /tmp/tmptw5dhwbk.jl:8\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmptw5dhwbk.jl:15 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmptw5dhwbk.jl:14\ntest set:\
    \ Error During Test at /tmp/tmptw5dhwbk.jl:16\n  Test threw exception\n  Expression:\
    \ candidate(\"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\"\
    , \"four\", \"five\", \"six\"]\n  MethodError: no method matching findfirst(::Vector{String},\
    \ ::String)\n  Closest candidates are:\n    findfirst(!Matched::Function, ::Union{AbstractString,\
    \ AbstractArray}) at ~/.conda/envs/polyglot/share/julia/base/array.jl:2002\n \
    \   findfirst(!Matched::Function, ::Any) at ~/.conda/envs/polyglot/share/julia/base/array.jl:1994\n\
    \    findfirst(!Matched::AbstractString, ::AbstractString) at ~/.conda/envs/polyglot/share/julia/base/strings/search.jl:104\n\
    \    ...\n  Stacktrace:\n   "
  timestamp: 1659822069
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    splitted = split(s)\n    return splitted\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = words_string;\n\t@test(candidate(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\
    \t@test(candidate(\"One,, two, three, four, five, six,\") == [\"One\", \"two\"\
    , \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\
    \t@test(candidate(\"ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpwe6qlp1r.jl:13

    '
  stdout: "test set: Test Failed at /tmp/tmpwe6qlp1r.jl:16\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"Hi,\", \"my\", \"name\", \"is\", \"John\"] == [\"Hi\", \"my\", \"name\",\
    \ \"is\", \"John\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwe6qlp1r.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwe6qlp1r.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpwe6qlp1r.jl:17\n  Expression: candidate(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n   Evaluated: [\"One,\", \"two,\", \"three,\", \"four,\", \"five,\", \"six\"\
    ] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwe6qlp1r.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwe6qlp1r.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpwe6qlp1r.jl:18\n  Expression: candidate(\"Hi, my name\") ==\
    \ [\"Hi\", \"my\", \"name\"]\n   Evaluated: [\"Hi,\", \"my\", \"name\"] == [\"\
    Hi\", \"my\", \"name\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwe6qlp1r.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwe6qlp1r.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpwe6qlp1r.jl:19\n  Expression: candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\n   Evaluated: [\"One,,\", \"two,\", \"three,\", \"four,\", \"five,\",\
    \ \"six,\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n "
  timestamp: 1659822067
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    split(s, r\"[\\s,]+\")\nend\ns = \"a,b,c,d,e\"\nwords_string(s)\nusing\
    \ Test\n\n@testset begin\n\ncandidate = words_string;\n\t@test(candidate(\"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\n\t@test(candidate(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\n\t@test(candidate(\"Hi, my name\") == [\"Hi\", \"my\",\
    \ \"name\"])\n\t@test(candidate(\"One,, two, three, four, five, six,\") == [\"\
    One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    \") == Vector{String}([]))\n\t@test(candidate(\"ahmed     , gamal\") == [\"ahmed\"\
    , \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpvukrztft.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmpvukrztft.jl:20\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvukrztft.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvukrztft.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpvukrztft.jl:21\n  Expression: candidate(\"\") == Vector{String}([])\n\
    \   Evaluated: [\"\"] == String[]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvukrztft.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvukrztft.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     2      6\n"
  timestamp: 1659822067
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    return split(s)\nend\nusing Test\n\n@testset begin\n\ncandidate = words_string;\n\
    \t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\"\
    , \"John\"])\n\t@test(candidate(\"One, two, three, four, five, six\") == [\"One\"\
    , \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"Hi, my\
    \ name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpy9_padcp.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpy9_padcp.jl:15\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"Hi,\", \"my\", \"name\", \"is\", \"John\"] == [\"Hi\", \"my\", \"name\",\
    \ \"is\", \"John\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy9_padcp.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpy9_padcp.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpy9_padcp.jl:16\n  Expression: candidate(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n   Evaluated: [\"One,\", \"two,\", \"three,\", \"four,\", \"five,\", \"six\"\
    ] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy9_padcp.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpy9_padcp.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpy9_padcp.jl:17\n  Expression: candidate(\"Hi, my name\") ==\
    \ [\"Hi\", \"my\", \"name\"]\n   Evaluated: [\"Hi,\", \"my\", \"name\"] == [\"\
    Hi\", \"my\", \"name\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy9_padcp.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpy9_padcp.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpy9_padcp.jl:18\n  Expression: candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\n   Evaluated: [\"One,,\", \"two,\", \"three,\", \"four,\", \"five,\",\
    \ \"six,\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n "
  timestamp: 1659822054
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    split(s, \",| \")\nend\nusing Test\n\n@testset begin\n\ncandidate = words_string;\n\
    \t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\"\
    , \"John\"])\n\t@test(candidate(\"One, two, three, four, five, six\") == [\"One\"\
    , \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"Hi, my\
    \ name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpkke9ypo1.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpkke9ypo1.jl:15\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"Hi, my name is John\"] == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkke9ypo1.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkke9ypo1.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpkke9ypo1.jl:16\n  Expression: candidate(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n   Evaluated: [\"One, two, three, four, five, six\"] == [\"One\", \"two\",\
    \ \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpkke9ypo1.jl:16 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpkke9ypo1.jl:14\ntest set: Test Failed at /tmp/tmpkke9ypo1.jl:17\n\
    \  Expression: candidate(\"Hi, my name\") == [\"Hi\", \"my\", \"name\"]\n   Evaluated:\
    \ [\"Hi, my name\"] == [\"Hi\", \"my\", \"name\"]\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpkke9ypo1.jl:17 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpkke9ypo1.jl:14\ntest set: Test Failed at /tmp/tmpkke9ypo1.jl:18\n\
    \  Expression: candidate(\"One,, two, three, four, five, six,\") == [\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"]\n   Evaluated: [\"One,, two,\
    \ three, four, five, six,\"] == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkke9ypo1.jl:18 "
  timestamp: 1659822068
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    return split(lowercase(s), \" \")\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ])\n\t@test(candidate(\"Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp45drayb1.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmp45drayb1.jl:15\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"hi,\", \"my\", \"name\", \"is\", \"john\"] == [\"Hi\", \"my\", \"name\",\
    \ \"is\", \"John\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp45drayb1.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp45drayb1.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp45drayb1.jl:16\n  Expression: candidate(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n   Evaluated: [\"one,\", \"two,\", \"three,\", \"four,\", \"five,\", \"six\"\
    ] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp45drayb1.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp45drayb1.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp45drayb1.jl:17\n  Expression: candidate(\"Hi, my name\") ==\
    \ [\"Hi\", \"my\", \"name\"]\n   Evaluated: [\"hi,\", \"my\", \"name\"] == [\"\
    Hi\", \"my\", \"name\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp45drayb1.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp45drayb1.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp45drayb1.jl:18\n  Expression: candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\n   Evaluated: [\"one,,\", \"two,\", \"three,\", \"four,\", \"five,\",\
    \ \"six,\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n "
  timestamp: 1659822067
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    split(s)\nend\nusing Test\n\n@testset begin\n\ncandidate = words_string;\n\
    \t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\"\
    , \"John\"])\n\t@test(candidate(\"One, two, three, four, five, six\") == [\"One\"\
    , \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"Hi, my\
    \ name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpp3_2nvm5.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpp3_2nvm5.jl:15\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"Hi,\", \"my\", \"name\", \"is\", \"John\"] == [\"Hi\", \"my\", \"name\",\
    \ \"is\", \"John\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpp3_2nvm5.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpp3_2nvm5.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpp3_2nvm5.jl:16\n  Expression: candidate(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n   Evaluated: [\"One,\", \"two,\", \"three,\", \"four,\", \"five,\", \"six\"\
    ] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpp3_2nvm5.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpp3_2nvm5.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpp3_2nvm5.jl:17\n  Expression: candidate(\"Hi, my name\") ==\
    \ [\"Hi\", \"my\", \"name\"]\n   Evaluated: [\"Hi,\", \"my\", \"name\"] == [\"\
    Hi\", \"my\", \"name\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpp3_2nvm5.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpp3_2nvm5.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpp3_2nvm5.jl:18\n  Expression: candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\n   Evaluated: [\"One,,\", \"two,\", \"three,\", \"four,\", \"five,\",\
    \ \"six,\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n "
  timestamp: 1659822054
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    return split(s, r\"\\s|,\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp625zz07v.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmp625zz07v.jl:15\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"Hi\", \"\", \"my\", \"name\", \"is\", \"John\"] == [\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp625zz07v.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp625zz07v.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp625zz07v.jl:16\n  Expression: candidate(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n   Evaluated: [\"One\", \"\", \"two\", \"\", \"three\", \"\", \"four\", \"\"\
    , \"five\", \"\", \"six\"] == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp625zz07v.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp625zz07v.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp625zz07v.jl:17\n  Expression: candidate(\"Hi, my name\") ==\
    \ [\"Hi\", \"my\", \"name\"]\n   Evaluated: [\"Hi\", \"\", \"my\", \"name\"] ==\
    \ [\"Hi\", \"my\", \"name\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp625zz07v.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp625zz07v.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp625zz07v.jl:18\n  Expression: candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\n   Evaluated: [\"One\", \"\", \"\", \"two\", \"\", \"three\", \"\", \"\
    four\", \"\", \"five\", \"\", \"six\", \"\"] == [\"One\", \"two\", \"three\",\
    \ \"four\", \"five\", \"six\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/st"
  timestamp: 1659822068
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    return split(s,r\"[, ]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp6jbqfji5.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmp6jbqfji5.jl:18\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6jbqfji5.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6jbqfji5.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp6jbqfji5.jl:19\n  Expression: candidate(\"\") == Vector{String}([])\n\
    \   Evaluated: [\"\"] == String[]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6jbqfji5.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6jbqfji5.jl:14\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     2      6\n"
  timestamp: 1659822068
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    return split(s)\nend\nusing Test\n\n@testset begin\n\ncandidate = words_string;\n\
    \t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\"\
    , \"John\"])\n\t@test(candidate(\"One, two, three, four, five, six\") == [\"One\"\
    , \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"Hi, my\
    \ name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpy9_padcp.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpy9_padcp.jl:15\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"Hi,\", \"my\", \"name\", \"is\", \"John\"] == [\"Hi\", \"my\", \"name\",\
    \ \"is\", \"John\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy9_padcp.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpy9_padcp.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpy9_padcp.jl:16\n  Expression: candidate(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n   Evaluated: [\"One,\", \"two,\", \"three,\", \"four,\", \"five,\", \"six\"\
    ] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy9_padcp.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpy9_padcp.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpy9_padcp.jl:17\n  Expression: candidate(\"Hi, my name\") ==\
    \ [\"Hi\", \"my\", \"name\"]\n   Evaluated: [\"Hi,\", \"my\", \"name\"] == [\"\
    Hi\", \"my\", \"name\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy9_padcp.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpy9_padcp.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpy9_padcp.jl:18\n  Expression: candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\n   Evaluated: [\"One,,\", \"two,\", \"three,\", \"four,\", \"five,\",\
    \ \"six,\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n "
  timestamp: 1659822054
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    s .|> split\nend\nwords_string(\"Hello, world!\")\nusing Test\n\n@testset\
    \ begin\n\ncandidate = words_string;\n\t@test(candidate(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\
    \t@test(candidate(\"One,, two, three, four, five, six,\") == [\"One\", \"two\"\
    , \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\
    \t@test(candidate(\"ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpwxgbvd0z.jl:13

    '
  stdout: "test set: Test Failed at /tmp/tmpwxgbvd0z.jl:16\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"Hi,\", \"my\", \"name\", \"is\", \"John\"] == [\"Hi\", \"my\", \"name\",\
    \ \"is\", \"John\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwxgbvd0z.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwxgbvd0z.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpwxgbvd0z.jl:17\n  Expression: candidate(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n   Evaluated: [\"One,\", \"two,\", \"three,\", \"four,\", \"five,\", \"six\"\
    ] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwxgbvd0z.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwxgbvd0z.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpwxgbvd0z.jl:18\n  Expression: candidate(\"Hi, my name\") ==\
    \ [\"Hi\", \"my\", \"name\"]\n   Evaluated: [\"Hi,\", \"my\", \"name\"] == [\"\
    Hi\", \"my\", \"name\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwxgbvd0z.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwxgbvd0z.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpwxgbvd0z.jl:19\n  Expression: candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\n   Evaluated: [\"One,,\", \"two,\", \"three,\", \"four,\", \"five,\",\
    \ \"six,\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n "
  timestamp: 1659822068
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    # in Julia, I can use split function to split the string by spaces,\n\
    \    # and then delete \"\"s to make a string.\n    a = split(s, \" \")\n    delete!(a,\
    \ \"\")\n    return a\nend\nusing Test\n\n@testset begin\n\ncandidate = words_string;\n\
    \t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\"\
    , \"John\"])\n\t@test(candidate(\"One, two, three, four, five, six\") == [\"One\"\
    , \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"Hi, my\
    \ name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpafefuahs.jl:16

    '
  stdout: "test set: Error During Test at /tmp/tmpafefuahs.jl:19\n  Test threw exception\n\
    \  Expression: candidate(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"]\n  MethodError: no method matching delete!(::Vector{SubString{String}},\
    \ ::String)\n  Closest candidates are:\n    delete!(!Matched::IdDict{K}, ::Any)\
    \ where K at ~/.conda/envs/polyglot/share/julia/base/iddict.jl:130\n    delete!(!Matched::Base.IdSet,\
    \ ::Any) at ~/.conda/envs/polyglot/share/julia/base/idset.jl:23\n    delete!(!Matched::Dict,\
    \ ::Any) at ~/.conda/envs/polyglot/share/julia/base/dict.jl:661\n    ...\n  Stacktrace:\n\
    \   [1] words_string(s::String)\n     @ Main /tmp/tmpafefuahs.jl:11\n   [2] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpafefuahs.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpafefuahs.jl:18\ntest set:\
    \ Error During Test at /tmp/tmpafefuahs.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\"\
    , \"four\", \"five\", \"six\"]\n  MethodError: no method matching delete!(::Vector{SubString{String}},\
    \ ::String)\n  Closest candidates are:\n    delete!(!Matched::IdDict{K}, ::Any)\
    \ where K at ~/.conda/envs/polyglot/share/julia/base/iddict.jl:130\n    delete!(!Matched::Base.IdSet,\
    \ ::Any) at ~/.conda/envs/polyglot/share/julia/base/idset.jl:23\n    delete!(!Matched::Dict,\
    \ ::Any) at ~/.conda/envs/polyglot/share/julia/base/dict.jl:661\n    ...\n  Stacktrace:\n\
    \   [1] words_string(s::String)\n     @ Main /tmp/tmpafefuahs.jl:11\n   [2] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpafefuahs.jl:20 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpafefuahs.jl:18\ntest set:\
    \ Error During Test at /tmp/tmpafefuahs.jl:21\n  Test "
  timestamp: 1659822070
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    split(s)\nend\nusing Test\n\n@testset begin\n\ncandidate = words_string;\n\
    \t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\"\
    , \"John\"])\n\t@test(candidate(\"One, two, three, four, five, six\") == [\"One\"\
    , \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"Hi, my\
    \ name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpp3_2nvm5.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpp3_2nvm5.jl:15\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"Hi,\", \"my\", \"name\", \"is\", \"John\"] == [\"Hi\", \"my\", \"name\",\
    \ \"is\", \"John\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpp3_2nvm5.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpp3_2nvm5.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpp3_2nvm5.jl:16\n  Expression: candidate(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n   Evaluated: [\"One,\", \"two,\", \"three,\", \"four,\", \"five,\", \"six\"\
    ] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpp3_2nvm5.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpp3_2nvm5.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpp3_2nvm5.jl:17\n  Expression: candidate(\"Hi, my name\") ==\
    \ [\"Hi\", \"my\", \"name\"]\n   Evaluated: [\"Hi,\", \"my\", \"name\"] == [\"\
    Hi\", \"my\", \"name\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpp3_2nvm5.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpp3_2nvm5.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpp3_2nvm5.jl:18\n  Expression: candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\n   Evaluated: [\"One,,\", \"two,\", \"three,\", \"four,\", \"five,\",\
    \ \"six,\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n "
  timestamp: 1659822054
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    v = split(s, r\"[\\s,]+\")\n    return v\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = words_string;\n\t@test(candidate(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\
    \t@test(candidate(\"One,, two, three, four, five, six,\") == [\"One\", \"two\"\
    , \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\
    \t@test(candidate(\"ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp0hph1aq3.jl:13

    '
  stdout: "test set: Test Failed at /tmp/tmp0hph1aq3.jl:19\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0hph1aq3.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0hph1aq3.jl:15\ntest set: Test\
    \ Failed at /tmp/tmp0hph1aq3.jl:20\n  Expression: candidate(\"\") == Vector{String}([])\n\
    \   Evaluated: [\"\"] == String[]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0hph1aq3.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0hph1aq3.jl:15\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     2      6\n"
  timestamp: 1659822068
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    return split(s)\nend\nusing Test\n\n@testset begin\n\ncandidate = words_string;\n\
    \t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\"\
    , \"John\"])\n\t@test(candidate(\"One, two, three, four, five, six\") == [\"One\"\
    , \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"Hi, my\
    \ name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpy9_padcp.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpy9_padcp.jl:15\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"Hi,\", \"my\", \"name\", \"is\", \"John\"] == [\"Hi\", \"my\", \"name\",\
    \ \"is\", \"John\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy9_padcp.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpy9_padcp.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpy9_padcp.jl:16\n  Expression: candidate(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n   Evaluated: [\"One,\", \"two,\", \"three,\", \"four,\", \"five,\", \"six\"\
    ] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy9_padcp.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpy9_padcp.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpy9_padcp.jl:17\n  Expression: candidate(\"Hi, my name\") ==\
    \ [\"Hi\", \"my\", \"name\"]\n   Evaluated: [\"Hi,\", \"my\", \"name\"] == [\"\
    Hi\", \"my\", \"name\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy9_padcp.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpy9_padcp.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpy9_padcp.jl:18\n  Expression: candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\n   Evaluated: [\"One,,\", \"two,\", \"three,\", \"four,\", \"five,\",\
    \ \"six,\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n "
  timestamp: 1659822054
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    return split(lowercase(s), [' ', ','])\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ])\n\t@test(candidate(\"Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp6t7v0_3u.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmp6t7v0_3u.jl:15\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"hi\", \"\", \"my\", \"name\", \"is\", \"john\"] == [\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6t7v0_3u.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6t7v0_3u.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp6t7v0_3u.jl:16\n  Expression: candidate(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n   Evaluated: [\"one\", \"\", \"two\", \"\", \"three\", \"\", \"four\", \"\"\
    , \"five\", \"\", \"six\"] == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6t7v0_3u.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6t7v0_3u.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp6t7v0_3u.jl:17\n  Expression: candidate(\"Hi, my name\") ==\
    \ [\"Hi\", \"my\", \"name\"]\n   Evaluated: [\"hi\", \"\", \"my\", \"name\"] ==\
    \ [\"Hi\", \"my\", \"name\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6t7v0_3u.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6t7v0_3u.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp6t7v0_3u.jl:18\n  Expression: candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\n   Evaluated: [\"one\", \"\", \"\", \"two\", \"\", \"three\", \"\", \"\
    four\", \"\", \"five\", \"\", \"six\", \"\"] == [\"One\", \"two\", \"three\",\
    \ \"four\", \"five\", \"six\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/st"
  timestamp: 1659822068
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    words = split(s, r\"\\s|,\")\n    return words\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = words_string;\n\t@test(candidate(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\
    \t@test(candidate(\"One,, two, three, four, five, six,\") == [\"One\", \"two\"\
    , \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\
    \t@test(candidate(\"ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpzsvqdtgq.jl:13

    '
  stdout: "test set: Test Failed at /tmp/tmpzsvqdtgq.jl:16\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"Hi\", \"\", \"my\", \"name\", \"is\", \"John\"] == [\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzsvqdtgq.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzsvqdtgq.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpzsvqdtgq.jl:17\n  Expression: candidate(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n   Evaluated: [\"One\", \"\", \"two\", \"\", \"three\", \"\", \"four\", \"\"\
    , \"five\", \"\", \"six\"] == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzsvqdtgq.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzsvqdtgq.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpzsvqdtgq.jl:18\n  Expression: candidate(\"Hi, my name\") ==\
    \ [\"Hi\", \"my\", \"name\"]\n   Evaluated: [\"Hi\", \"\", \"my\", \"name\"] ==\
    \ [\"Hi\", \"my\", \"name\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzsvqdtgq.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzsvqdtgq.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpzsvqdtgq.jl:19\n  Expression: candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\n   Evaluated: [\"One\", \"\", \"\", \"two\", \"\", \"three\", \"\", \"\
    four\", \"\", \"five\", \"\", \"six\", \"\"] == [\"One\", \"two\", \"three\",\
    \ \"four\", \"five\", \"six\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/st"
  timestamp: 1659822068
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    return split(s, r\"[, ]\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp9cocii08.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmp9cocii08.jl:15\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"Hi\", \"\", \"my\", \"name\", \"is\", \"John\"] == [\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9cocii08.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9cocii08.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp9cocii08.jl:16\n  Expression: candidate(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n   Evaluated: [\"One\", \"\", \"two\", \"\", \"three\", \"\", \"four\", \"\"\
    , \"five\", \"\", \"six\"] == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9cocii08.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9cocii08.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp9cocii08.jl:17\n  Expression: candidate(\"Hi, my name\") ==\
    \ [\"Hi\", \"my\", \"name\"]\n   Evaluated: [\"Hi\", \"\", \"my\", \"name\"] ==\
    \ [\"Hi\", \"my\", \"name\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9cocii08.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9cocii08.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp9cocii08.jl:18\n  Expression: candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\n   Evaluated: [\"One\", \"\", \"\", \"two\", \"\", \"three\", \"\", \"\
    four\", \"\", \"five\", \"\", \"six\", \"\"] == [\"One\", \"two\", \"three\",\
    \ \"four\", \"five\", \"six\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/st"
  timestamp: 1659822059
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    split(s, r\"[,\\s]\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpadxigg3p.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpadxigg3p.jl:15\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"Hi\", \"\", \"my\", \"name\", \"is\", \"John\"] == [\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpadxigg3p.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpadxigg3p.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpadxigg3p.jl:16\n  Expression: candidate(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n   Evaluated: [\"One\", \"\", \"two\", \"\", \"three\", \"\", \"four\", \"\"\
    , \"five\", \"\", \"six\"] == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpadxigg3p.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpadxigg3p.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpadxigg3p.jl:17\n  Expression: candidate(\"Hi, my name\") ==\
    \ [\"Hi\", \"my\", \"name\"]\n   Evaluated: [\"Hi\", \"\", \"my\", \"name\"] ==\
    \ [\"Hi\", \"my\", \"name\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpadxigg3p.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpadxigg3p.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpadxigg3p.jl:18\n  Expression: candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\n   Evaluated: [\"One\", \"\", \"\", \"two\", \"\", \"three\", \"\", \"\
    four\", \"\", \"five\", \"\", \"six\", \"\"] == [\"One\", \"two\", \"three\",\
    \ \"four\", \"five\", \"six\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/st"
  timestamp: 1659822068
- exit_code: -1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    w = split(s, [\" \", \",\"])\n    return w\nend\nwords_string(\"Lorem,\
    \ ipsum, dolor, sit, amet\") == [\"Lorem\", \"ipsum\", \"dolor\", \"sit\", \"\
    amet\"]\nusing Test\n\n@testset begin\n\ncandidate = words_string;\n\t@test(candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\n\t@test(candidate(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\n\t@test(candidate(\"Hi, my name\") == [\"Hi\", \"my\",\
    \ \"name\"])\n\t@test(candidate(\"One,, two, three, four, five, six,\") == [\"\
    One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    \") == Vector{String}([]))\n\t@test(candidate(\"ahmed     , gamal\") == [\"ahmed\"\
    , \"gamal\"])\nend\n"
  status: Timeout
  stderr: 'b''ERROR: LoadError: MethodError: no method matching findfirst(::Vector{String},
    ::String)\nClosest candidates are:\n  findfirst(!Matched::Function, ::Union{AbstractString,
    AbstractArray}) at ~/.conda/envs/polyglot/share/julia/base/array.jl:2002\n  findfirst(!Matched::Function,
    ::Any) at ~/.conda/envs/polyglot/share/julia/base/array.jl:1994\n  findfirst(!Matched::AbstractString,
    ::AbstractString) at ~/.conda/envs/polyglot/share/julia/base/strings/search.jl:104\n  ...\nStacktrace:\n
    [1] _split(str::String, splitter::Vector{String}, limit::Int64, keepempty::Bool,
    strs::Vector{SubString{String}})\n   @ Base ./strings/util.jl:435\n [2] '''
  stdout: None
  timestamp: 1659822071
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    return [word for word in split(s)]\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ])\n\t@test(candidate(\"Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmplhqtcsyk.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmplhqtcsyk.jl:15\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"Hi,\", \"my\", \"name\", \"is\", \"John\"] == [\"Hi\", \"my\", \"name\",\
    \ \"is\", \"John\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplhqtcsyk.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplhqtcsyk.jl:14\ntest set: Test\
    \ Failed at /tmp/tmplhqtcsyk.jl:16\n  Expression: candidate(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n   Evaluated: [\"One,\", \"two,\", \"three,\", \"four,\", \"five,\", \"six\"\
    ] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplhqtcsyk.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplhqtcsyk.jl:14\ntest set: Test\
    \ Failed at /tmp/tmplhqtcsyk.jl:17\n  Expression: candidate(\"Hi, my name\") ==\
    \ [\"Hi\", \"my\", \"name\"]\n   Evaluated: [\"Hi,\", \"my\", \"name\"] == [\"\
    Hi\", \"my\", \"name\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplhqtcsyk.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplhqtcsyk.jl:14\ntest set: Test\
    \ Failed at /tmp/tmplhqtcsyk.jl:18\n  Expression: candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\n   Evaluated: [\"One,,\", \"two,\", \"three,\", \"four,\", \"five,\",\
    \ \"six,\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n "
  timestamp: 1659822069
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    # split `s` by commas and spaces\n    # and return the words in an array\n\
    \    # YOUR CODE HERE\n    my_s = split(s,\", \")\n    return my_s\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = words_string;\n\t@test(candidate(\"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\n\t@test(candidate(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\n\t@test(candidate(\"Hi, my name\") == [\"Hi\", \"my\",\
    \ \"name\"])\n\t@test(candidate(\"One,, two, three, four, five, six,\") == [\"\
    One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    \") == Vector{String}([]))\n\t@test(candidate(\"ahmed     , gamal\") == [\"ahmed\"\
    , \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp1k7cfbn_.jl:16

    '
  stdout: "test set: Test Failed at /tmp/tmp1k7cfbn_.jl:19\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"Hi\", \"my name is John\"] == [\"Hi\", \"my\", \"name\", \"is\", \"John\"\
    ]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1k7cfbn_.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1k7cfbn_.jl:18\ntest set: Test\
    \ Failed at /tmp/tmp1k7cfbn_.jl:21\n  Expression: candidate(\"Hi, my name\") ==\
    \ [\"Hi\", \"my\", \"name\"]\n   Evaluated: [\"Hi\", \"my name\"] == [\"Hi\",\
    \ \"my\", \"name\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1k7cfbn_.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1k7cfbn_.jl:18\ntest set: Test\
    \ Failed at /tmp/tmp1k7cfbn_.jl:22\n  Expression: candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\n   Evaluated: [\"One,\", \"two\", \"three\", \"four\", \"five\", \"six,\"\
    ] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1k7cfbn_.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1k7cfbn_.jl:18\ntest set: Test\
    \ Failed at /tmp/tmp1k7cfbn_.jl:23\n  Expression: candidate(\"\") == Vector{String}([])\n\
    \   Evaluated: [\"\"] == String[]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1k7cfbn_.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n "
  timestamp: 1659822069
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    words = split(s, r\"\\s|,\")\n    return words\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = words_string;\n\t@test(candidate(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\
    \t@test(candidate(\"One,, two, three, four, five, six,\") == [\"One\", \"two\"\
    , \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\
    \t@test(candidate(\"ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpzsvqdtgq.jl:13

    '
  stdout: "test set: Test Failed at /tmp/tmpzsvqdtgq.jl:16\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"Hi\", \"\", \"my\", \"name\", \"is\", \"John\"] == [\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzsvqdtgq.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzsvqdtgq.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpzsvqdtgq.jl:17\n  Expression: candidate(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n   Evaluated: [\"One\", \"\", \"two\", \"\", \"three\", \"\", \"four\", \"\"\
    , \"five\", \"\", \"six\"] == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzsvqdtgq.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzsvqdtgq.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpzsvqdtgq.jl:18\n  Expression: candidate(\"Hi, my name\") ==\
    \ [\"Hi\", \"my\", \"name\"]\n   Evaluated: [\"Hi\", \"\", \"my\", \"name\"] ==\
    \ [\"Hi\", \"my\", \"name\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzsvqdtgq.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzsvqdtgq.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpzsvqdtgq.jl:19\n  Expression: candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\n   Evaluated: [\"One\", \"\", \"\", \"two\", \"\", \"three\", \"\", \"\
    four\", \"\", \"five\", \"\", \"six\", \"\"] == [\"One\", \"two\", \"three\",\
    \ \"four\", \"five\", \"six\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/st"
  timestamp: 1659822068
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    return split(s, r\"[, ]\")\nend\nwords_string(\"This is a string of words\"\
    )\nusing Test\n\n@testset begin\n\ncandidate = words_string;\n\t@test(candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\n\t@test(candidate(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\n\t@test(candidate(\"Hi, my name\") == [\"Hi\", \"my\",\
    \ \"name\"])\n\t@test(candidate(\"One,, two, three, four, five, six,\") == [\"\
    One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    \") == Vector{String}([]))\n\t@test(candidate(\"ahmed     , gamal\") == [\"ahmed\"\
    , \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp89943s1b.jl:13

    '
  stdout: "test set: Test Failed at /tmp/tmp89943s1b.jl:16\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"Hi\", \"\", \"my\", \"name\", \"is\", \"John\"] == [\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp89943s1b.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp89943s1b.jl:15\ntest set: Test\
    \ Failed at /tmp/tmp89943s1b.jl:17\n  Expression: candidate(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n   Evaluated: [\"One\", \"\", \"two\", \"\", \"three\", \"\", \"four\", \"\"\
    , \"five\", \"\", \"six\"] == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp89943s1b.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp89943s1b.jl:15\ntest set: Test\
    \ Failed at /tmp/tmp89943s1b.jl:18\n  Expression: candidate(\"Hi, my name\") ==\
    \ [\"Hi\", \"my\", \"name\"]\n   Evaluated: [\"Hi\", \"\", \"my\", \"name\"] ==\
    \ [\"Hi\", \"my\", \"name\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp89943s1b.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp89943s1b.jl:15\ntest set: Test\
    \ Failed at /tmp/tmp89943s1b.jl:19\n  Expression: candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\n   Evaluated: [\"One\", \"\", \"\", \"two\", \"\", \"three\", \"\", \"\
    four\", \"\", \"five\", \"\", \"six\", \"\"] == [\"One\", \"two\", \"three\",\
    \ \"four\", \"five\", \"six\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/st"
  timestamp: 1659822069
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    s = split(s, \" , \")\n    return s\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ])\n\t@test(candidate(\"Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp2h0n9ujo.jl:13

    '
  stdout: "test set: Test Failed at /tmp/tmp2h0n9ujo.jl:16\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"Hi, my name is John\"] == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2h0n9ujo.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2h0n9ujo.jl:15\ntest set: Test\
    \ Failed at /tmp/tmp2h0n9ujo.jl:17\n  Expression: candidate(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n   Evaluated: [\"One, two, three, four, five, six\"] == [\"One\", \"two\",\
    \ \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp2h0n9ujo.jl:17 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp2h0n9ujo.jl:15\ntest set: Test Failed at /tmp/tmp2h0n9ujo.jl:18\n\
    \  Expression: candidate(\"Hi, my name\") == [\"Hi\", \"my\", \"name\"]\n   Evaluated:\
    \ [\"Hi, my name\"] == [\"Hi\", \"my\", \"name\"]\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp2h0n9ujo.jl:18 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp2h0n9ujo.jl:15\ntest set: Test Failed at /tmp/tmp2h0n9ujo.jl:19\n\
    \  Expression: candidate(\"One,, two, three, four, five, six,\") == [\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"]\n   Evaluated: [\"One,, two,\
    \ three, four, five, six,\"] == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2h0n9ujo.jl:19 "
  timestamp: 1659822069
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    return split(s)\nend\nusing Test\n\n@testset begin\n\ncandidate = words_string;\n\
    \t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\"\
    , \"John\"])\n\t@test(candidate(\"One, two, three, four, five, six\") == [\"One\"\
    , \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"Hi, my\
    \ name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpy9_padcp.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpy9_padcp.jl:15\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"Hi,\", \"my\", \"name\", \"is\", \"John\"] == [\"Hi\", \"my\", \"name\",\
    \ \"is\", \"John\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy9_padcp.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpy9_padcp.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpy9_padcp.jl:16\n  Expression: candidate(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n   Evaluated: [\"One,\", \"two,\", \"three,\", \"four,\", \"five,\", \"six\"\
    ] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy9_padcp.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpy9_padcp.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpy9_padcp.jl:17\n  Expression: candidate(\"Hi, my name\") ==\
    \ [\"Hi\", \"my\", \"name\"]\n   Evaluated: [\"Hi,\", \"my\", \"name\"] == [\"\
    Hi\", \"my\", \"name\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy9_padcp.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpy9_padcp.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpy9_padcp.jl:18\n  Expression: candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\n   Evaluated: [\"One,,\", \"two,\", \"three,\", \"four,\", \"five,\",\
    \ \"six,\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n "
  timestamp: 1659822054
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    split(s, r\"[\\s,]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp7tvgh48a.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmp7tvgh48a.jl:18\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7tvgh48a.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7tvgh48a.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp7tvgh48a.jl:19\n  Expression: candidate(\"\") == Vector{String}([])\n\
    \   Evaluated: [\"\"] == String[]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7tvgh48a.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7tvgh48a.jl:14\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     2      6\n"
  timestamp: 1659822058
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    split(s, r\"\\s|,\")\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpby4um0zs.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpby4um0zs.jl:15\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"Hi\", \"\", \"my\", \"name\", \"is\", \"John\"] == [\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpby4um0zs.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpby4um0zs.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpby4um0zs.jl:16\n  Expression: candidate(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n   Evaluated: [\"One\", \"\", \"two\", \"\", \"three\", \"\", \"four\", \"\"\
    , \"five\", \"\", \"six\"] == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpby4um0zs.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpby4um0zs.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpby4um0zs.jl:17\n  Expression: candidate(\"Hi, my name\") ==\
    \ [\"Hi\", \"my\", \"name\"]\n   Evaluated: [\"Hi\", \"\", \"my\", \"name\"] ==\
    \ [\"Hi\", \"my\", \"name\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpby4um0zs.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpby4um0zs.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpby4um0zs.jl:18\n  Expression: candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\n   Evaluated: [\"One\", \"\", \"\", \"two\", \"\", \"three\", \"\", \"\
    four\", \"\", \"five\", \"\", \"six\", \"\"] == [\"One\", \"two\", \"three\",\
    \ \"four\", \"five\", \"six\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/st"
  timestamp: 1659822069
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    m = split(s, [',', ' '])\n    return m\nend\nwords_string(\"Hello,world,\"\
    )\nusing Test\n\n@testset begin\n\ncandidate = words_string;\n\t@test(candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\n\t@test(candidate(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\n\t@test(candidate(\"Hi, my name\") == [\"Hi\", \"my\",\
    \ \"name\"])\n\t@test(candidate(\"One,, two, three, four, five, six,\") == [\"\
    One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    \") == Vector{String}([]))\n\t@test(candidate(\"ahmed     , gamal\") == [\"ahmed\"\
    , \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp8ewlru_l.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmp8ewlru_l.jl:17\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"Hi\", \"\", \"my\", \"name\", \"is\", \"John\"] == [\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8ewlru_l.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8ewlru_l.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp8ewlru_l.jl:18\n  Expression: candidate(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n   Evaluated: [\"One\", \"\", \"two\", \"\", \"three\", \"\", \"four\", \"\"\
    , \"five\", \"\", \"six\"] == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8ewlru_l.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8ewlru_l.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp8ewlru_l.jl:19\n  Expression: candidate(\"Hi, my name\") ==\
    \ [\"Hi\", \"my\", \"name\"]\n   Evaluated: [\"Hi\", \"\", \"my\", \"name\"] ==\
    \ [\"Hi\", \"my\", \"name\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8ewlru_l.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8ewlru_l.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp8ewlru_l.jl:20\n  Expression: candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\n   Evaluated: [\"One\", \"\", \"\", \"two\", \"\", \"three\", \"\", \"\
    four\", \"\", \"five\", \"\", \"six\", \"\"] == [\"One\", \"two\", \"three\",\
    \ \"four\", \"five\", \"six\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/st"
  timestamp: 1659822070
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    return(split(s))\nend\nusing Test\n\n@testset begin\n\ncandidate = words_string;\n\
    \t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\"\
    , \"John\"])\n\t@test(candidate(\"One, two, three, four, five, six\") == [\"One\"\
    , \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"Hi, my\
    \ name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpuhu45zty.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpuhu45zty.jl:15\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"Hi,\", \"my\", \"name\", \"is\", \"John\"] == [\"Hi\", \"my\", \"name\",\
    \ \"is\", \"John\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpuhu45zty.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpuhu45zty.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpuhu45zty.jl:16\n  Expression: candidate(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n   Evaluated: [\"One,\", \"two,\", \"three,\", \"four,\", \"five,\", \"six\"\
    ] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpuhu45zty.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpuhu45zty.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpuhu45zty.jl:17\n  Expression: candidate(\"Hi, my name\") ==\
    \ [\"Hi\", \"my\", \"name\"]\n   Evaluated: [\"Hi,\", \"my\", \"name\"] == [\"\
    Hi\", \"my\", \"name\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpuhu45zty.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpuhu45zty.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpuhu45zty.jl:18\n  Expression: candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\n   Evaluated: [\"One,,\", \"two,\", \"three,\", \"four,\", \"five,\",\
    \ \"six,\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n "
  timestamp: 1659822070
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    s_vect = split(s, \" \")\n    n = length(s_vect)\n    for i in 1:n\n \
    \       s_vect[i] = replace(s_vect[i], ',' => \"\")\n    end\n    return s_vect\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = words_string;\n\t@test(candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\n\t@test(candidate(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\n\t@test(candidate(\"Hi, my name\") == [\"Hi\", \"my\",\
    \ \"name\"])\n\t@test(candidate(\"One,, two, three, four, five, six,\") == [\"\
    One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    \") == Vector{String}([]))\n\t@test(candidate(\"ahmed     , gamal\") == [\"ahmed\"\
    , \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpcqsmfadx.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpcqsmfadx.jl:24\n  Expression: candidate(\"\
    \") == Vector{String}([])\n   Evaluated: [\"\"] == String[]\nStacktrace:\n [1]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpcqsmfadx.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpcqsmfadx.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpcqsmfadx.jl:25\n  Expression: candidate(\"ahmed     , gamal\"\
    ) == [\"ahmed\", \"gamal\"]\n   Evaluated: [\"ahmed\", \"\", \"\", \"\", \"\"\
    , \"\", \"gamal\"] == [\"ahmed\", \"gamal\"]\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpcqsmfadx.jl:25 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpcqsmfadx.jl:19\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    4     2      6\n"
  timestamp: 1659822069
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    return split(s)\nend\nusing Test\n\n@testset begin\n\ncandidate = words_string;\n\
    \t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\"\
    , \"John\"])\n\t@test(candidate(\"One, two, three, four, five, six\") == [\"One\"\
    , \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"Hi, my\
    \ name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpy9_padcp.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpy9_padcp.jl:15\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"Hi,\", \"my\", \"name\", \"is\", \"John\"] == [\"Hi\", \"my\", \"name\",\
    \ \"is\", \"John\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy9_padcp.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpy9_padcp.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpy9_padcp.jl:16\n  Expression: candidate(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n   Evaluated: [\"One,\", \"two,\", \"three,\", \"four,\", \"five,\", \"six\"\
    ] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy9_padcp.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpy9_padcp.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpy9_padcp.jl:17\n  Expression: candidate(\"Hi, my name\") ==\
    \ [\"Hi\", \"my\", \"name\"]\n   Evaluated: [\"Hi,\", \"my\", \"name\"] == [\"\
    Hi\", \"my\", \"name\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy9_padcp.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpy9_padcp.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpy9_padcp.jl:18\n  Expression: candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\n   Evaluated: [\"One,,\", \"two,\", \"three,\", \"four,\", \"five,\",\
    \ \"six,\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n "
  timestamp: 1659822054
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    return split(lowercase(s))\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpza2y1tjz.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpza2y1tjz.jl:15\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"hi,\", \"my\", \"name\", \"is\", \"john\"] == [\"Hi\", \"my\", \"name\",\
    \ \"is\", \"John\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpza2y1tjz.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpza2y1tjz.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpza2y1tjz.jl:16\n  Expression: candidate(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n   Evaluated: [\"one,\", \"two,\", \"three,\", \"four,\", \"five,\", \"six\"\
    ] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpza2y1tjz.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpza2y1tjz.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpza2y1tjz.jl:17\n  Expression: candidate(\"Hi, my name\") ==\
    \ [\"Hi\", \"my\", \"name\"]\n   Evaluated: [\"hi,\", \"my\", \"name\"] == [\"\
    Hi\", \"my\", \"name\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpza2y1tjz.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpza2y1tjz.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpza2y1tjz.jl:18\n  Expression: candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\n   Evaluated: [\"one,,\", \"two,\", \"three,\", \"four,\", \"five,\",\
    \ \"six,\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n "
  timestamp: 1659822070
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    v::Vector{String} = split(s, [\" \", \",\"])\n    return v\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = words_string;\n\t@test(candidate(\"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\n\t@test(candidate(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\n\t@test(candidate(\"Hi, my name\") == [\"Hi\", \"my\",\
    \ \"name\"])\n\t@test(candidate(\"One,, two, three, four, five, six,\") == [\"\
    One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    \") == Vector{String}([]))\n\t@test(candidate(\"ahmed     , gamal\") == [\"ahmed\"\
    , \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp2ob7e_xg.jl:13

    '
  stdout: "test set: Error During Test at /tmp/tmp2ob7e_xg.jl:16\n  Test threw exception\n\
    \  Expression: candidate(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"]\n  MethodError: no method matching findfirst(::Vector{String},\
    \ ::String)\n  Closest candidates are:\n    findfirst(!Matched::Function, ::Union{AbstractString,\
    \ AbstractArray}) at ~/.conda/envs/polyglot/share/julia/base/array.jl:2002\n \
    \   findfirst(!Matched::Function, ::Any) at ~/.conda/envs/polyglot/share/julia/base/array.jl:1994\n\
    \    findfirst(!Matched::AbstractString, ::AbstractString) at ~/.conda/envs/polyglot/share/julia/base/strings/search.jl:104\n\
    \    ...\n  Stacktrace:\n   [1] _split(str::String, splitter::Vector{String},\
    \ limit::Int64, keepempty::Bool, strs::Vector{SubString{String}})\n     @ Base\
    \ ./strings/util.jl:435\n   [2] split(str::String, splitter::Vector{String}; limit::Int64,\
    \ keepempty::Bool)\n     @ Base ./strings/util.jl:419\n   [3] split(str::String,\
    \ splitter::Vector{String})\n     @ Base ./strings/util.jl:419\n   [4] words_string(s::String)\n\
    \     @ Main /tmp/tmp2ob7e_xg.jl:8\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmp2ob7e_xg.jl:16 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmp2ob7e_xg.jl:15\ntest set:\
    \ Error During Test at /tmp/tmp2ob7e_xg.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(\"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\"\
    , \"four\", \"five\", \"six\"]\n  MethodError: no method matching findfirst(::Vector{String},\
    \ ::String)\n  Closest candidates are:\n    findfirst(!Matched::Function, ::Union{AbstractString,\
    \ AbstractArray}) at ~/.conda/envs/polyglot/share/julia/base/array.jl:2002\n \
    \   findfirst(!Matched::Function, ::Any) at ~/.conda/envs/polyglot/share/julia/base/array.jl:1994\n\
    \    findfirst(!Matched::AbstractString, ::AbstractString) at ~/.conda/envs/polyglot/share/julia/base/strings/search.jl:104\n\
    \    ...\n  Stacktrace:\n   "
  timestamp: 1659822071
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    return (split(s, [' ', ',']))\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpvfrhjv0h.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpvfrhjv0h.jl:15\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"Hi\", \"\", \"my\", \"name\", \"is\", \"John\"] == [\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvfrhjv0h.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvfrhjv0h.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpvfrhjv0h.jl:16\n  Expression: candidate(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n   Evaluated: [\"One\", \"\", \"two\", \"\", \"three\", \"\", \"four\", \"\"\
    , \"five\", \"\", \"six\"] == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvfrhjv0h.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvfrhjv0h.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpvfrhjv0h.jl:17\n  Expression: candidate(\"Hi, my name\") ==\
    \ [\"Hi\", \"my\", \"name\"]\n   Evaluated: [\"Hi\", \"\", \"my\", \"name\"] ==\
    \ [\"Hi\", \"my\", \"name\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvfrhjv0h.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvfrhjv0h.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpvfrhjv0h.jl:18\n  Expression: candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\n   Evaluated: [\"One\", \"\", \"\", \"two\", \"\", \"three\", \"\", \"\
    four\", \"\", \"five\", \"\", \"six\", \"\"] == [\"One\", \"two\", \"three\",\
    \ \"four\", \"five\", \"six\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/st"
  timestamp: 1659822070
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    split(s, [\" \", \",\", \".\"])\nend\nusing Test\n\n@testset begin\n\n\
    candidate = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\"\
    , \"my\", \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four,\
    \ five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\
    \t@test(candidate(\"Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpq20vv_u7.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpq20vv_u7.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"]\n  MethodError: no method matching findfirst(::Vector{String},\
    \ ::String)\n  Closest candidates are:\n    findfirst(!Matched::Function, ::Union{AbstractString,\
    \ AbstractArray}) at ~/.conda/envs/polyglot/share/julia/base/array.jl:2002\n \
    \   findfirst(!Matched::Function, ::Any) at ~/.conda/envs/polyglot/share/julia/base/array.jl:1994\n\
    \    findfirst(!Matched::AbstractString, ::AbstractString) at ~/.conda/envs/polyglot/share/julia/base/strings/search.jl:104\n\
    \    ...\n  Stacktrace:\n   [1] _split(str::String, splitter::Vector{String},\
    \ limit::Int64, keepempty::Bool, strs::Vector{SubString{String}})\n     @ Base\
    \ ./strings/util.jl:435\n   [2] split(str::String, splitter::Vector{String}; limit::Int64,\
    \ keepempty::Bool)\n     @ Base ./strings/util.jl:419\n   [3] split(str::String,\
    \ splitter::Vector{String})\n     @ Base ./strings/util.jl:419\n   [4] words_string(s::String)\n\
    \     @ Main /tmp/tmpq20vv_u7.jl:8\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpq20vv_u7.jl:15 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpq20vv_u7.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpq20vv_u7.jl:16\n  Test threw exception\n  Expression:\
    \ candidate(\"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\"\
    , \"four\", \"five\", \"six\"]\n  MethodError: no method matching findfirst(::Vector{String},\
    \ ::String)\n  Closest candidates are:\n    findfirst(!Matched::Function, ::Union{AbstractString,\
    \ AbstractArray}) at ~/.conda/envs/polyglot/share/julia/base/array.jl:2002\n \
    \   findfirst(!Matched::Function, ::Any) at ~/.conda/envs/polyglot/share/julia/base/array.jl:1994\n\
    \    findfirst(!Matched::AbstractString, ::AbstractString) at ~/.conda/envs/polyglot/share/julia/base/strings/search.jl:104\n\
    \    ...\n  Stacktrace:\n   "
  timestamp: 1659822072
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    word_vec = split(s,r\"\\s|,\")\n    for word in word_vec\n        strip(word)\n\
    \    end\n    return word_vec\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp2g6u7g3q.jl:16

    '
  stdout: "test set: Test Failed at /tmp/tmp2g6u7g3q.jl:19\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"Hi\", \"\", \"my\", \"name\", \"is\", \"John\"] == [\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2g6u7g3q.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2g6u7g3q.jl:18\ntest set: Test\
    \ Failed at /tmp/tmp2g6u7g3q.jl:20\n  Expression: candidate(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n   Evaluated: [\"One\", \"\", \"two\", \"\", \"three\", \"\", \"four\", \"\"\
    , \"five\", \"\", \"six\"] == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2g6u7g3q.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2g6u7g3q.jl:18\ntest set: Test\
    \ Failed at /tmp/tmp2g6u7g3q.jl:21\n  Expression: candidate(\"Hi, my name\") ==\
    \ [\"Hi\", \"my\", \"name\"]\n   Evaluated: [\"Hi\", \"\", \"my\", \"name\"] ==\
    \ [\"Hi\", \"my\", \"name\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2g6u7g3q.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2g6u7g3q.jl:18\ntest set: Test\
    \ Failed at /tmp/tmp2g6u7g3q.jl:22\n  Expression: candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\n   Evaluated: [\"One\", \"\", \"\", \"two\", \"\", \"three\", \"\", \"\
    four\", \"\", \"five\", \"\", \"six\", \"\"] == [\"One\", \"two\", \"three\",\
    \ \"four\", \"five\", \"six\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/st"
  timestamp: 1659822070
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n  return split(s)\nend\nusing Test\n\n@testset begin\n\ncandidate = words_string;\n\
    \t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\"\
    , \"John\"])\n\t@test(candidate(\"One, two, three, four, five, six\") == [\"One\"\
    , \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"Hi, my\
    \ name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpigsc05b_.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpigsc05b_.jl:15\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"Hi,\", \"my\", \"name\", \"is\", \"John\"] == [\"Hi\", \"my\", \"name\",\
    \ \"is\", \"John\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpigsc05b_.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpigsc05b_.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpigsc05b_.jl:16\n  Expression: candidate(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n   Evaluated: [\"One,\", \"two,\", \"three,\", \"four,\", \"five,\", \"six\"\
    ] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpigsc05b_.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpigsc05b_.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpigsc05b_.jl:17\n  Expression: candidate(\"Hi, my name\") ==\
    \ [\"Hi\", \"my\", \"name\"]\n   Evaluated: [\"Hi,\", \"my\", \"name\"] == [\"\
    Hi\", \"my\", \"name\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpigsc05b_.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpigsc05b_.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpigsc05b_.jl:18\n  Expression: candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\n   Evaluated: [\"One,,\", \"two,\", \"three,\", \"four,\", \"five,\",\
    \ \"six,\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n "
  timestamp: 1659822070
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n  return split(s, r\"[,\\s]\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp8h2nmgnz.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmp8h2nmgnz.jl:15\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"Hi\", \"\", \"my\", \"name\", \"is\", \"John\"] == [\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8h2nmgnz.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8h2nmgnz.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp8h2nmgnz.jl:16\n  Expression: candidate(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n   Evaluated: [\"One\", \"\", \"two\", \"\", \"three\", \"\", \"four\", \"\"\
    , \"five\", \"\", \"six\"] == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8h2nmgnz.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8h2nmgnz.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp8h2nmgnz.jl:17\n  Expression: candidate(\"Hi, my name\") ==\
    \ [\"Hi\", \"my\", \"name\"]\n   Evaluated: [\"Hi\", \"\", \"my\", \"name\"] ==\
    \ [\"Hi\", \"my\", \"name\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8h2nmgnz.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8h2nmgnz.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp8h2nmgnz.jl:18\n  Expression: candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\n   Evaluated: [\"One\", \"\", \"\", \"two\", \"\", \"three\", \"\", \"\
    four\", \"\", \"five\", \"\", \"six\", \"\"] == [\"One\", \"two\", \"three\",\
    \ \"four\", \"five\", \"six\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/st"
  timestamp: 1659822071
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    split(s, [\",\", \" \"])\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp3_gai8gp.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmp3_gai8gp.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"]\n  MethodError: no method matching findfirst(::Vector{String},\
    \ ::String)\n  Closest candidates are:\n    findfirst(!Matched::Function, ::Union{AbstractString,\
    \ AbstractArray}) at ~/.conda/envs/polyglot/share/julia/base/array.jl:2002\n \
    \   findfirst(!Matched::Function, ::Any) at ~/.conda/envs/polyglot/share/julia/base/array.jl:1994\n\
    \    findfirst(!Matched::AbstractString, ::AbstractString) at ~/.conda/envs/polyglot/share/julia/base/strings/search.jl:104\n\
    \    ...\n  Stacktrace:\n   [1] _split(str::String, splitter::Vector{String},\
    \ limit::Int64, keepempty::Bool, strs::Vector{SubString{String}})\n     @ Base\
    \ ./strings/util.jl:435\n   [2] split(str::String, splitter::Vector{String}; limit::Int64,\
    \ keepempty::Bool)\n     @ Base ./strings/util.jl:419\n   [3] split(str::String,\
    \ splitter::Vector{String})\n     @ Base ./strings/util.jl:419\n   [4] words_string(s::String)\n\
    \     @ Main /tmp/tmp3_gai8gp.jl:8\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmp3_gai8gp.jl:15 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmp3_gai8gp.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp3_gai8gp.jl:16\n  Test threw exception\n  Expression:\
    \ candidate(\"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\"\
    , \"four\", \"five\", \"six\"]\n  MethodError: no method matching findfirst(::Vector{String},\
    \ ::String)\n  Closest candidates are:\n    findfirst(!Matched::Function, ::Union{AbstractString,\
    \ AbstractArray}) at ~/.conda/envs/polyglot/share/julia/base/array.jl:2002\n \
    \   findfirst(!Matched::Function, ::Any) at ~/.conda/envs/polyglot/share/julia/base/array.jl:1994\n\
    \    findfirst(!Matched::AbstractString, ::AbstractString) at ~/.conda/envs/polyglot/share/julia/base/strings/search.jl:104\n\
    \    ...\n  Stacktrace:\n   "
  timestamp: 1659822072
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    # Split string on commas or spaces\n    return split(s, \",\"*\" \")\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = words_string;\n\t@test(candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\n\t@test(candidate(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\n\t@test(candidate(\"Hi, my name\") == [\"Hi\", \"my\",\
    \ \"name\"])\n\t@test(candidate(\"One,, two, three, four, five, six,\") == [\"\
    One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    \") == Vector{String}([]))\n\t@test(candidate(\"ahmed     , gamal\") == [\"ahmed\"\
    , \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpzh7sy5e7.jl:13

    '
  stdout: "test set: Test Failed at /tmp/tmpzh7sy5e7.jl:16\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"Hi\", \"my name is John\"] == [\"Hi\", \"my\", \"name\", \"is\", \"John\"\
    ]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzh7sy5e7.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzh7sy5e7.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpzh7sy5e7.jl:18\n  Expression: candidate(\"Hi, my name\") ==\
    \ [\"Hi\", \"my\", \"name\"]\n   Evaluated: [\"Hi\", \"my name\"] == [\"Hi\",\
    \ \"my\", \"name\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzh7sy5e7.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzh7sy5e7.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpzh7sy5e7.jl:19\n  Expression: candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\n   Evaluated: [\"One,\", \"two\", \"three\", \"four\", \"five\", \"six,\"\
    ] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzh7sy5e7.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzh7sy5e7.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpzh7sy5e7.jl:20\n  Expression: candidate(\"\") == Vector{String}([])\n\
    \   Evaluated: [\"\"] == String[]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzh7sy5e7.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n "
  timestamp: 1659822071
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    v = split(s, \",\")\n    words = [trim(w) for w in v]\n    return words\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = words_string;\n\t@test(candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\n\t@test(candidate(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\n\t@test(candidate(\"Hi, my name\") == [\"Hi\", \"my\",\
    \ \"name\"])\n\t@test(candidate(\"One,, two, three, four, five, six,\") == [\"\
    One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    \") == Vector{String}([]))\n\t@test(candidate(\"ahmed     , gamal\") == [\"ahmed\"\
    , \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkwqlaohf.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkwqlaohf.jl:17\n  Test threw exception\n\
    \  Expression: candidate(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"]\n  UndefVarError: trim not defined\n  Stacktrace:\n   [1]\
    \ (::var\"#1#2\")(w::SubString{String})\n     @ Main ./none:0\n   [2] iterate\n\
    \     @ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{Vector{SubString{String}},\
    \ var\"#1#2\"})\n     @ Base ./array.jl:724\n   [4] words_string(s::String)\n\
    \     @ Main /tmp/tmpkwqlaohf.jl:9\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpkwqlaohf.jl:17 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpkwqlaohf.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkwqlaohf.jl:18\n  Test threw exception\n  Expression:\
    \ candidate(\"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\"\
    , \"four\", \"five\", \"six\"]\n  UndefVarError: trim not defined\n  Stacktrace:\n\
    \   [1] (::var\"#1#2\")(w::SubString{String})\n     @ Main ./none:0\n   [2] iterate\n\
    \     @ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{Vector{SubString{String}},\
    \ var\"#1#2\"})\n     @ Base ./array.jl:724\n   [4] words_string(s::String)\n\
    \     @ Main /tmp/tmpkwqlaohf.jl:9\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpkwqlaohf.jl:18 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpkwqlaohf.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkwqlaohf.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Hi, my name\") == [\"Hi\", \"my\", \"name\"]\n  UndefVarError: trim\
    \ not defined\n  Stacktrace:\n   [1] (::var\"#1#2\")(w::SubString{String})\n \
    \    @ Main ./none:0\n   [2] iterate\n     @ ./generator.jl:47 [inlined]\n   [3]\
    \ collect(itr::Base.Generator{Vector{SubString{String}}, var\"#1#2\"})\n "
  timestamp: 1659822071
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    split(s, r\"[,\\s]+\")\nend\nprintln(words_string(\"Polar bears,penguins,frogs\
    \ and snakes\"))\n#> [\"Polar\", \"bears\", \"penguins\", \"frogs\", \"and\",\
    \ \"snakes\"]\nusing Test\n\n@testset begin\n\ncandidate = words_string;\n\t@test(candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\n\t@test(candidate(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\n\t@test(candidate(\"Hi, my name\") == [\"Hi\", \"my\",\
    \ \"name\"])\n\t@test(candidate(\"One,, two, three, four, five, six,\") == [\"\
    One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    \") == Vector{String}([]))\n\t@test(candidate(\"ahmed     , gamal\") == [\"ahmed\"\
    , \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp2eien8wv.jl:14

    '
  stdout: "[\"Polar\", \"bears\", \"penguins\", \"frogs\", \"and\", \"snakes\"]\n\
    test set: Test Failed at /tmp/tmp2eien8wv.jl:20\n  Expression: candidate(\"One,,\
    \ two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2eien8wv.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2eien8wv.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp2eien8wv.jl:21\n  Expression: candidate(\"\") == Vector{String}([])\n\
    \   Evaluated: [\"\"] == String[]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2eien8wv.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2eien8wv.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     2      6\n"
  timestamp: 1659822071
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    return split(s, [' ', ','])\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpwy7lenfx.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpwy7lenfx.jl:15\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"Hi\", \"\", \"my\", \"name\", \"is\", \"John\"] == [\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwy7lenfx.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwy7lenfx.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpwy7lenfx.jl:16\n  Expression: candidate(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n   Evaluated: [\"One\", \"\", \"two\", \"\", \"three\", \"\", \"four\", \"\"\
    , \"five\", \"\", \"six\"] == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwy7lenfx.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwy7lenfx.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpwy7lenfx.jl:17\n  Expression: candidate(\"Hi, my name\") ==\
    \ [\"Hi\", \"my\", \"name\"]\n   Evaluated: [\"Hi\", \"\", \"my\", \"name\"] ==\
    \ [\"Hi\", \"my\", \"name\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwy7lenfx.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwy7lenfx.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpwy7lenfx.jl:18\n  Expression: candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\n   Evaluated: [\"One\", \"\", \"\", \"two\", \"\", \"three\", \"\", \"\
    four\", \"\", \"five\", \"\", \"six\", \"\"] == [\"One\", \"two\", \"three\",\
    \ \"four\", \"five\", \"six\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/st"
  timestamp: 1659822071
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    words_array = split(s, r\"[\\s,]+\")\n    return words_array\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = words_string;\n\t@test(candidate(\"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\n\t@test(candidate(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\n\t@test(candidate(\"Hi, my name\") == [\"Hi\", \"my\",\
    \ \"name\"])\n\t@test(candidate(\"One,, two, three, four, five, six,\") == [\"\
    One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    \") == Vector{String}([]))\n\t@test(candidate(\"ahmed     , gamal\") == [\"ahmed\"\
    , \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpikxeuxi4.jl:13

    '
  stdout: "test set: Test Failed at /tmp/tmpikxeuxi4.jl:19\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpikxeuxi4.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpikxeuxi4.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpikxeuxi4.jl:20\n  Expression: candidate(\"\") == Vector{String}([])\n\
    \   Evaluated: [\"\"] == String[]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpikxeuxi4.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpikxeuxi4.jl:15\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     2      6\n"
  timestamp: 1659822071
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    return split(s)\nend\nusing Test\n\n@testset begin\n\ncandidate = words_string;\n\
    \t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\"\
    , \"John\"])\n\t@test(candidate(\"One, two, three, four, five, six\") == [\"One\"\
    , \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"Hi, my\
    \ name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpy9_padcp.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpy9_padcp.jl:15\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"Hi,\", \"my\", \"name\", \"is\", \"John\"] == [\"Hi\", \"my\", \"name\",\
    \ \"is\", \"John\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy9_padcp.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpy9_padcp.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpy9_padcp.jl:16\n  Expression: candidate(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n   Evaluated: [\"One,\", \"two,\", \"three,\", \"four,\", \"five,\", \"six\"\
    ] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy9_padcp.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpy9_padcp.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpy9_padcp.jl:17\n  Expression: candidate(\"Hi, my name\") ==\
    \ [\"Hi\", \"my\", \"name\"]\n   Evaluated: [\"Hi,\", \"my\", \"name\"] == [\"\
    Hi\", \"my\", \"name\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy9_padcp.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpy9_padcp.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpy9_padcp.jl:18\n  Expression: candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\n   Evaluated: [\"One,,\", \"two,\", \"three,\", \"four,\", \"five,\",\
    \ \"six,\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n "
  timestamp: 1659822054
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    words = split(s)\n    return words\nend\n    \nwords_string(\"cat,dog,mouse\"\
    )\nusing Test\n\n@testset begin\n\ncandidate = words_string;\n\t@test(candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\n\t@test(candidate(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\n\t@test(candidate(\"Hi, my name\") == [\"Hi\", \"my\",\
    \ \"name\"])\n\t@test(candidate(\"One,, two, three, four, five, six,\") == [\"\
    One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    \") == Vector{String}([]))\n\t@test(candidate(\"ahmed     , gamal\") == [\"ahmed\"\
    , \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpcwzo4xdr.jl:15

    '
  stdout: "test set: Test Failed at /tmp/tmpcwzo4xdr.jl:18\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"Hi,\", \"my\", \"name\", \"is\", \"John\"] == [\"Hi\", \"my\", \"name\",\
    \ \"is\", \"John\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpcwzo4xdr.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpcwzo4xdr.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpcwzo4xdr.jl:19\n  Expression: candidate(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n   Evaluated: [\"One,\", \"two,\", \"three,\", \"four,\", \"five,\", \"six\"\
    ] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpcwzo4xdr.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpcwzo4xdr.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpcwzo4xdr.jl:20\n  Expression: candidate(\"Hi, my name\") ==\
    \ [\"Hi\", \"my\", \"name\"]\n   Evaluated: [\"Hi,\", \"my\", \"name\"] == [\"\
    Hi\", \"my\", \"name\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpcwzo4xdr.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpcwzo4xdr.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpcwzo4xdr.jl:21\n  Expression: candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\n   Evaluated: [\"One,,\", \"two,\", \"three,\", \"four,\", \"five,\",\
    \ \"six,\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n "
  timestamp: 1659822071
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    return split(s,r\"[\\s,]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpkalsg0ou.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpkalsg0ou.jl:18\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkalsg0ou.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkalsg0ou.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpkalsg0ou.jl:19\n  Expression: candidate(\"\") == Vector{String}([])\n\
    \   Evaluated: [\"\"] == String[]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkalsg0ou.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkalsg0ou.jl:14\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     2      6\n"
  timestamp: 1659822071
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    return split(s, [\" \", \",\"])\nend\nusing Test\n\n@testset begin\n\n\
    candidate = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\"\
    , \"my\", \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four,\
    \ five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\
    \t@test(candidate(\"Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmptw5dhwbk.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmptw5dhwbk.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"]\n  MethodError: no method matching findfirst(::Vector{String},\
    \ ::String)\n  Closest candidates are:\n    findfirst(!Matched::Function, ::Union{AbstractString,\
    \ AbstractArray}) at ~/.conda/envs/polyglot/share/julia/base/array.jl:2002\n \
    \   findfirst(!Matched::Function, ::Any) at ~/.conda/envs/polyglot/share/julia/base/array.jl:1994\n\
    \    findfirst(!Matched::AbstractString, ::AbstractString) at ~/.conda/envs/polyglot/share/julia/base/strings/search.jl:104\n\
    \    ...\n  Stacktrace:\n   [1] _split(str::String, splitter::Vector{String},\
    \ limit::Int64, keepempty::Bool, strs::Vector{SubString{String}})\n     @ Base\
    \ ./strings/util.jl:435\n   [2] split(str::String, splitter::Vector{String}; limit::Int64,\
    \ keepempty::Bool)\n     @ Base ./strings/util.jl:419\n   [3] split(str::String,\
    \ splitter::Vector{String})\n     @ Base ./strings/util.jl:419\n   [4] words_string(s::String)\n\
    \     @ Main /tmp/tmptw5dhwbk.jl:8\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmptw5dhwbk.jl:15 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmptw5dhwbk.jl:14\ntest set:\
    \ Error During Test at /tmp/tmptw5dhwbk.jl:16\n  Test threw exception\n  Expression:\
    \ candidate(\"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\"\
    , \"four\", \"five\", \"six\"]\n  MethodError: no method matching findfirst(::Vector{String},\
    \ ::String)\n  Closest candidates are:\n    findfirst(!Matched::Function, ::Union{AbstractString,\
    \ AbstractArray}) at ~/.conda/envs/polyglot/share/julia/base/array.jl:2002\n \
    \   findfirst(!Matched::Function, ::Any) at ~/.conda/envs/polyglot/share/julia/base/array.jl:1994\n\
    \    findfirst(!Matched::AbstractString, ::AbstractString) at ~/.conda/envs/polyglot/share/julia/base/strings/search.jl:104\n\
    \    ...\n  Stacktrace:\n   "
  timestamp: 1659822069
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    return split(s, r\"[,\\s]\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxhtv4gpa.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpxhtv4gpa.jl:15\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"Hi\", \"\", \"my\", \"name\", \"is\", \"John\"] == [\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxhtv4gpa.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxhtv4gpa.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpxhtv4gpa.jl:16\n  Expression: candidate(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n   Evaluated: [\"One\", \"\", \"two\", \"\", \"three\", \"\", \"four\", \"\"\
    , \"five\", \"\", \"six\"] == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxhtv4gpa.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxhtv4gpa.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpxhtv4gpa.jl:17\n  Expression: candidate(\"Hi, my name\") ==\
    \ [\"Hi\", \"my\", \"name\"]\n   Evaluated: [\"Hi\", \"\", \"my\", \"name\"] ==\
    \ [\"Hi\", \"my\", \"name\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxhtv4gpa.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxhtv4gpa.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpxhtv4gpa.jl:18\n  Expression: candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\n   Evaluated: [\"One\", \"\", \"\", \"two\", \"\", \"three\", \"\", \"\
    four\", \"\", \"five\", \"\", \"six\", \"\"] == [\"One\", \"two\", \"three\",\
    \ \"four\", \"five\", \"six\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/st"
  timestamp: 1659822061
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    split(s, r\"[, ]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp41yahjkb.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmp41yahjkb.jl:18\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp41yahjkb.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp41yahjkb.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp41yahjkb.jl:19\n  Expression: candidate(\"\") == Vector{String}([])\n\
    \   Evaluated: [\"\"] == String[]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp41yahjkb.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp41yahjkb.jl:14\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     2      6\n"
  timestamp: 1659822057
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    list = split(s, \" \")\n    return list\nend\ns = \"The quick brown fox\
    \ jumps over the lazy dog\"\nwords_string(s)\nusing Test\n\n@testset begin\n\n\
    candidate = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\"\
    , \"my\", \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four,\
    \ five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\
    \t@test(candidate(\"Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmphapdgy3a.jl:15

    '
  stdout: "test set: Test Failed at /tmp/tmphapdgy3a.jl:18\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"Hi,\", \"my\", \"name\", \"is\", \"John\"] == [\"Hi\", \"my\", \"name\",\
    \ \"is\", \"John\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphapdgy3a.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphapdgy3a.jl:17\ntest set: Test\
    \ Failed at /tmp/tmphapdgy3a.jl:19\n  Expression: candidate(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n   Evaluated: [\"One,\", \"two,\", \"three,\", \"four,\", \"five,\", \"six\"\
    ] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphapdgy3a.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphapdgy3a.jl:17\ntest set: Test\
    \ Failed at /tmp/tmphapdgy3a.jl:20\n  Expression: candidate(\"Hi, my name\") ==\
    \ [\"Hi\", \"my\", \"name\"]\n   Evaluated: [\"Hi,\", \"my\", \"name\"] == [\"\
    Hi\", \"my\", \"name\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphapdgy3a.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphapdgy3a.jl:17\ntest set: Test\
    \ Failed at /tmp/tmphapdgy3a.jl:21\n  Expression: candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\n   Evaluated: [\"One,,\", \"two,\", \"three,\", \"four,\", \"five,\",\
    \ \"six,\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n "
  timestamp: 1659822071
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    return split(s)\nend\nusing Test\n\n@testset begin\n\ncandidate = words_string;\n\
    \t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\"\
    , \"John\"])\n\t@test(candidate(\"One, two, three, four, five, six\") == [\"One\"\
    , \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"Hi, my\
    \ name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpy9_padcp.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpy9_padcp.jl:15\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"Hi,\", \"my\", \"name\", \"is\", \"John\"] == [\"Hi\", \"my\", \"name\",\
    \ \"is\", \"John\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy9_padcp.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpy9_padcp.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpy9_padcp.jl:16\n  Expression: candidate(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n   Evaluated: [\"One,\", \"two,\", \"three,\", \"four,\", \"five,\", \"six\"\
    ] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy9_padcp.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpy9_padcp.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpy9_padcp.jl:17\n  Expression: candidate(\"Hi, my name\") ==\
    \ [\"Hi\", \"my\", \"name\"]\n   Evaluated: [\"Hi,\", \"my\", \"name\"] == [\"\
    Hi\", \"my\", \"name\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy9_padcp.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpy9_padcp.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpy9_padcp.jl:18\n  Expression: candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\n   Evaluated: [\"One,,\", \"two,\", \"three,\", \"four,\", \"five,\",\
    \ \"six,\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n "
  timestamp: 1659822054
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    return split(s, r\"[, ]\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp9cocii08.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmp9cocii08.jl:15\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"Hi\", \"\", \"my\", \"name\", \"is\", \"John\"] == [\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9cocii08.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9cocii08.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp9cocii08.jl:16\n  Expression: candidate(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n   Evaluated: [\"One\", \"\", \"two\", \"\", \"three\", \"\", \"four\", \"\"\
    , \"five\", \"\", \"six\"] == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9cocii08.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9cocii08.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp9cocii08.jl:17\n  Expression: candidate(\"Hi, my name\") ==\
    \ [\"Hi\", \"my\", \"name\"]\n   Evaluated: [\"Hi\", \"\", \"my\", \"name\"] ==\
    \ [\"Hi\", \"my\", \"name\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9cocii08.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9cocii08.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp9cocii08.jl:18\n  Expression: candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\n   Evaluated: [\"One\", \"\", \"\", \"two\", \"\", \"three\", \"\", \"\
    four\", \"\", \"five\", \"\", \"six\", \"\"] == [\"One\", \"two\", \"three\",\
    \ \"four\", \"five\", \"six\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/st"
  timestamp: 1659822059
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    \"\"\"\n    Split a string into it's words, separated by spaces or commas\n\
    \    \"\"\"\n    v = split(s, \" \")\n    v2 = split(s, \",\")\n    return vcat(v,\
    \ v2)\nend\nusing Test\n\n@testset begin\n\ncandidate = words_string;\n\t@test(candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\n\t@test(candidate(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\n\t@test(candidate(\"Hi, my name\") == [\"Hi\", \"my\",\
    \ \"name\"])\n\t@test(candidate(\"One,, two, three, four, five, six,\") == [\"\
    One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    \") == Vector{String}([]))\n\t@test(candidate(\"ahmed     , gamal\") == [\"ahmed\"\
    , \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpu42uvl2v.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpu42uvl2v.jl:20\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"Hi,\", \"my\", \"name\", \"is\", \"John\", \"Hi\", \" my name is John\"]\
    \ == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpu42uvl2v.jl:20 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpu42uvl2v.jl:19\ntest set: Test Failed at /tmp/tmpu42uvl2v.jl:21\n\
    \  Expression: candidate(\"One, two, three, four, five, six\") == [\"One\", \"\
    two\", \"three\", \"four\", \"five\", \"six\"]\n   Evaluated: [\"One,\", \"two,\"\
    , \"three,\", \"four,\", \"five,\", \"six\", \"One\", \" two\", \" three\", \"\
    \ four\", \" five\", \" six\"] == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpu42uvl2v.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpu42uvl2v.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpu42uvl2v.jl:22\n  Expression: candidate(\"Hi, my name\") ==\
    \ [\"Hi\", \"my\", \"name\"]\n   Evaluated: [\"Hi,\", \"my\", \"name\", \"Hi\"\
    , \" my name\"] == [\"Hi\", \"my\", \"name\"]\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpu42uvl2v.jl:22 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpu42uvl2v.jl:19\ntest set: Test Failed at /tmp/tmpu42uvl2v.jl:23\n\
    \  Expression: candidate(\"One,, two, three, four, five, six,\") == [\"One\",\
    \ \"two\", \"three\", \"four\", \"five\", \"six\"]\n   Evaluated: [\"One,,\",\
    \ \"two,\", \"three,\", \"four,\", \"five,\", \"six,\", \"One\", \"\", \" two\"\
    , \" three\", \" four\", \" five\", \" six\", \"\"] == [\"One\", \"t"
  timestamp: 1659822072
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    s .= gsub(r\"[^a-zA-Z0-9']\", \" \")\n    return split(s)\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = words_string;\n\t@test(candidate(\"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\n\t@test(candidate(\"\
    One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\n\t@test(candidate(\"Hi, my name\") == [\"Hi\", \"my\",\
    \ \"name\"])\n\t@test(candidate(\"One,, two, three, four, five, six,\") == [\"\
    One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    \") == Vector{String}([]))\n\t@test(candidate(\"ahmed     , gamal\") == [\"ahmed\"\
    , \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmprahqd88y.jl:13

    '
  stdout: "test set: Error During Test at /tmp/tmprahqd88y.jl:16\n  Test threw exception\n\
    \  Expression: candidate(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"]\n  UndefVarError: gsub not defined\n  Stacktrace:\n   [1]\
    \ words_string(s::String)\n     @ Main /tmp/tmprahqd88y.jl:8\n   [2] macro expansion\n\
    \     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmprahqd88y.jl:16 [inlined]\n   [4] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmprahqd88y.jl:15\ntest set:\
    \ Error During Test at /tmp/tmprahqd88y.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(\"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\"\
    , \"four\", \"five\", \"six\"]\n  UndefVarError: gsub not defined\n  Stacktrace:\n\
    \   [1] words_string(s::String)\n     @ Main /tmp/tmprahqd88y.jl:8\n   [2] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmprahqd88y.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmprahqd88y.jl:15\ntest set:\
    \ Error During Test at /tmp/tmprahqd88y.jl:18\n  Test threw exception\n  Expression:\
    \ candidate(\"Hi, my name\") == [\"Hi\", \"my\", \"name\"]\n  UndefVarError: gsub\
    \ not defined\n  Stacktrace:\n   [1] words_string(s::String)\n     @ Main /tmp/tmprahqd88y.jl:8\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmprahqd88y.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmprahqd88y.jl:15\ntest set:\
    \ Error During Test at /tmp/tmprahqd88y.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\"\
    , \"four\", \"five\", \"six\"]\n  UndefVarError: gsub not define"
  timestamp: 1659822072
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    split(s, r\"\\s*[, ]\\s*\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp0jvkudr2.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmp0jvkudr2.jl:18\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\n   Evaluated: [\"One\", \"\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0jvkudr2.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0jvkudr2.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp0jvkudr2.jl:19\n  Expression: candidate(\"\") == Vector{String}([])\n\
    \   Evaluated: [\"\"] == String[]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0jvkudr2.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0jvkudr2.jl:14\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     2      6\n"
  timestamp: 1659822072
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    return split(s, \",\");\nend\n\"\"\"\n            words(\"foo bar, baz\"\
    ) #=> [\"foo\", \"bar\", \"baz\"]\n            words(\"foo bar, baz\") #=> [\"\
    foo\", \"bar\", \"baz\"]\n    \n    \n    \n    \n    \nusing Test\n\n@testset\
    \ begin\n\ncandidate = words_string;\n\t@test(candidate(\"Hi, my name is John\"\
    ) == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two,\
    \ three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\
    \t@test(candidate(\"One,, two, three, four, five, six,\") == [\"One\", \"two\"\
    , \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\
    \t@test(candidate(\"ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmplvlc9k68.jl:10\nin expression starting at\
    \ /tmp/tmplvlc9k68.jl:10\n"
  stdout: ''
  timestamp: 1659822071
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    return split(s)\nend\nusing Test\n\n@testset begin\n\ncandidate = words_string;\n\
    \t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\"\
    , \"John\"])\n\t@test(candidate(\"One, two, three, four, five, six\") == [\"One\"\
    , \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"Hi, my\
    \ name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpy9_padcp.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpy9_padcp.jl:15\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"Hi,\", \"my\", \"name\", \"is\", \"John\"] == [\"Hi\", \"my\", \"name\",\
    \ \"is\", \"John\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy9_padcp.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpy9_padcp.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpy9_padcp.jl:16\n  Expression: candidate(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n   Evaluated: [\"One,\", \"two,\", \"three,\", \"four,\", \"five,\", \"six\"\
    ] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy9_padcp.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpy9_padcp.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpy9_padcp.jl:17\n  Expression: candidate(\"Hi, my name\") ==\
    \ [\"Hi\", \"my\", \"name\"]\n   Evaluated: [\"Hi,\", \"my\", \"name\"] == [\"\
    Hi\", \"my\", \"name\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy9_padcp.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpy9_padcp.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpy9_padcp.jl:18\n  Expression: candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\n   Evaluated: [\"One,,\", \"two,\", \"three,\", \"four,\", \"five,\",\
    \ \"six,\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n "
  timestamp: 1659822054
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    split(s)\nend\nusing Test\n\n@testset begin\n\ncandidate = words_string;\n\
    \t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\"\
    , \"John\"])\n\t@test(candidate(\"One, two, three, four, five, six\") == [\"One\"\
    , \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"Hi, my\
    \ name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpp3_2nvm5.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpp3_2nvm5.jl:15\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"Hi,\", \"my\", \"name\", \"is\", \"John\"] == [\"Hi\", \"my\", \"name\",\
    \ \"is\", \"John\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpp3_2nvm5.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpp3_2nvm5.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpp3_2nvm5.jl:16\n  Expression: candidate(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n   Evaluated: [\"One,\", \"two,\", \"three,\", \"four,\", \"five,\", \"six\"\
    ] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpp3_2nvm5.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpp3_2nvm5.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpp3_2nvm5.jl:17\n  Expression: candidate(\"Hi, my name\") ==\
    \ [\"Hi\", \"my\", \"name\"]\n   Evaluated: [\"Hi,\", \"my\", \"name\"] == [\"\
    Hi\", \"my\", \"name\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpp3_2nvm5.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpp3_2nvm5.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpp3_2nvm5.jl:18\n  Expression: candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\n   Evaluated: [\"One,,\", \"two,\", \"three,\", \"four,\", \"five,\",\
    \ \"six,\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n "
  timestamp: 1659822054
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    return split(s, r\"[\\s,]+\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpuitkyhzn.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpuitkyhzn.jl:18\n  Expression: candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"]\n   Evaluated: [\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpuitkyhzn.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpuitkyhzn.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpuitkyhzn.jl:19\n  Expression: candidate(\"\") == Vector{String}([])\n\
    \   Evaluated: [\"\"] == String[]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpuitkyhzn.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpuitkyhzn.jl:14\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     2      6\n"
  timestamp: 1659822054
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    s = split(s)\n    return s\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\"\
    , \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\
    Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two,\
    \ three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmps83zzimx.jl:13

    '
  stdout: "test set: Test Failed at /tmp/tmps83zzimx.jl:16\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"Hi,\", \"my\", \"name\", \"is\", \"John\"] == [\"Hi\", \"my\", \"name\",\
    \ \"is\", \"John\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmps83zzimx.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmps83zzimx.jl:15\ntest set: Test\
    \ Failed at /tmp/tmps83zzimx.jl:17\n  Expression: candidate(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n   Evaluated: [\"One,\", \"two,\", \"three,\", \"four,\", \"five,\", \"six\"\
    ] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmps83zzimx.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmps83zzimx.jl:15\ntest set: Test\
    \ Failed at /tmp/tmps83zzimx.jl:18\n  Expression: candidate(\"Hi, my name\") ==\
    \ [\"Hi\", \"my\", \"name\"]\n   Evaluated: [\"Hi,\", \"my\", \"name\"] == [\"\
    Hi\", \"my\", \"name\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmps83zzimx.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmps83zzimx.jl:15\ntest set: Test\
    \ Failed at /tmp/tmps83zzimx.jl:19\n  Expression: candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\n   Evaluated: [\"One,,\", \"two,\", \"three,\", \"four,\", \"five,\",\
    \ \"six,\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n "
  timestamp: 1659822062
- exit_code: 0
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    \"\"\"\n    Split the string into words and return an array of the words.\n\
    \    \"\"\"\n    v = split(s, [' ', ','])\n    v1 = filter(n -> n != \"\", v)\n\
    \    return v1\nend\nusing Test\n\n@testset begin\n\ncandidate = words_string;\n\
    \t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\"\
    , \"John\"])\n\t@test(candidate(\"One, two, three, four, five, six\") == [\"One\"\
    , \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"Hi, my\
    \ name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    6      6

    '
  stdout: ''
  timestamp: 1659822070
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    return split(s)\nend\nusing Test\n\n@testset begin\n\ncandidate = words_string;\n\
    \t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\"\
    , \"John\"])\n\t@test(candidate(\"One, two, three, four, five, six\") == [\"One\"\
    , \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"Hi, my\
    \ name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpy9_padcp.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpy9_padcp.jl:15\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"Hi,\", \"my\", \"name\", \"is\", \"John\"] == [\"Hi\", \"my\", \"name\",\
    \ \"is\", \"John\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy9_padcp.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpy9_padcp.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpy9_padcp.jl:16\n  Expression: candidate(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n   Evaluated: [\"One,\", \"two,\", \"three,\", \"four,\", \"five,\", \"six\"\
    ] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy9_padcp.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpy9_padcp.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpy9_padcp.jl:17\n  Expression: candidate(\"Hi, my name\") ==\
    \ [\"Hi\", \"my\", \"name\"]\n   Evaluated: [\"Hi,\", \"my\", \"name\"] == [\"\
    Hi\", \"my\", \"name\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy9_padcp.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpy9_padcp.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpy9_padcp.jl:18\n  Expression: candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\n   Evaluated: [\"One,,\", \"two,\", \"three,\", \"four,\", \"five,\",\
    \ \"six,\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n "
  timestamp: 1659822054
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    string = split(s)\n    return string\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = words_string;\n\t@test(candidate(\"Hi, my name is John\") == [\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"])\n\t@test(candidate(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ])\n\t@test(candidate(\"Hi, my name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"\
    One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpzwd12bpd.jl:13

    '
  stdout: "test set: Test Failed at /tmp/tmpzwd12bpd.jl:16\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"Hi,\", \"my\", \"name\", \"is\", \"John\"] == [\"Hi\", \"my\", \"name\",\
    \ \"is\", \"John\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzwd12bpd.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzwd12bpd.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpzwd12bpd.jl:17\n  Expression: candidate(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n   Evaluated: [\"One,\", \"two,\", \"three,\", \"four,\", \"five,\", \"six\"\
    ] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzwd12bpd.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzwd12bpd.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpzwd12bpd.jl:18\n  Expression: candidate(\"Hi, my name\") ==\
    \ [\"Hi\", \"my\", \"name\"]\n   Evaluated: [\"Hi,\", \"my\", \"name\"] == [\"\
    Hi\", \"my\", \"name\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzwd12bpd.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzwd12bpd.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpzwd12bpd.jl:19\n  Expression: candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\n   Evaluated: [\"One,,\", \"two,\", \"three,\", \"four,\", \"five,\",\
    \ \"six,\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n "
  timestamp: 1659822072
- exit_code: 1
  program: "\"\"\"\n    You will be given a string of words separated by commas or\
    \ spaces. Your task is\n    to split the string into words and return an array\
    \ of the words.\n    \n    For example:\n            \"\"\"\nfunction words_string(s::String)::Vector{String}\
    \ \n    return split(s)\nend\nusing Test\n\n@testset begin\n\ncandidate = words_string;\n\
    \t@test(candidate(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\"\
    , \"John\"])\n\t@test(candidate(\"One, two, three, four, five, six\") == [\"One\"\
    , \"two\", \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"Hi, my\
    \ name\") == [\"Hi\", \"my\", \"name\"])\n\t@test(candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\t@test(candidate(\"\
    ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpy9_padcp.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpy9_padcp.jl:15\n  Expression: candidate(\"\
    Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n   Evaluated:\
    \ [\"Hi,\", \"my\", \"name\", \"is\", \"John\"] == [\"Hi\", \"my\", \"name\",\
    \ \"is\", \"John\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy9_padcp.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpy9_padcp.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpy9_padcp.jl:16\n  Expression: candidate(\"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n   Evaluated: [\"One,\", \"two,\", \"three,\", \"four,\", \"five,\", \"six\"\
    ] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy9_padcp.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpy9_padcp.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpy9_padcp.jl:17\n  Expression: candidate(\"Hi, my name\") ==\
    \ [\"Hi\", \"my\", \"name\"]\n   Evaluated: [\"Hi,\", \"my\", \"name\"] == [\"\
    Hi\", \"my\", \"name\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy9_padcp.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpy9_padcp.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpy9_padcp.jl:18\n  Expression: candidate(\"One,, two, three,\
    \ four, five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"\
    six\"]\n   Evaluated: [\"One,,\", \"two,\", \"three,\", \"four,\", \"five,\",\
    \ \"six,\"] == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n "
  timestamp: 1659822054

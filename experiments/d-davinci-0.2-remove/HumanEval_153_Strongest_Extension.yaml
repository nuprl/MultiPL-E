name: HumanEval_153_Strongest_Extension
language: d
prompt: "import std.typecons;\nimport std.math;\n/*\nYou will be given the name of\
  \ a class (a string) and a list of extensions.\n    The extensions are to be used\
  \ to load additional classes to the class. The\n    strength of the extension is\
  \ as follows: Let CAP be the number of the uppercase\n    letters in the extension's\
  \ name, and let SM be the number of lowercase letters \n    in the extension's name,\
  \ the strength is given by the fraction CAP - SM. \n    You should find the strongest\
  \ extension and return a string in this \n    format: ClassName.StrongestExtensionName.\n\
  \    If there are two or more extensions with the same strength, you should\n  \
  \  choose the one that comes first in the list.\n    For example, if you are given\
  \ \"Slices\" as the class and a list of the\n    extensions: ['SErviNGSliCes', 'Cheese',\
  \ 'StuFfed'] then you should\n    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes'\
  \ is the strongest extension \n    (its strength is -1).\n    Example:\n       \
  \ \n*/\nstring Strongest_Extension(string class_name, string[] extensions) \n"
tests: "unittest\n{\n    alias candidate = Strongest_Extension;\n\n    assert(candidate(\"\
  Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\");\n    assert(candidate(\"\
  Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
  );\n    assert(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
  , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\");\n    assert(candidate(\"\
  K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\");\n    assert(candidate(\"\
  __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\");\n    assert(candidate(\"\
  YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
  YameRore.okIWILL123\");\n    assert(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
  , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\");\n    assert(candidate(\"_\", [\"Bb\"\
  , \"91245\"]) == \"_.Bb\");\n    assert(candidate(\"Sp\", [\"671235\", \"Bb\"])\
  \ == \"Sp.671235\");\n}\nvoid main(){}"
completions: ["{\n    string strongest_extension = \"\";\n    double strongest_strength\
    \ = 0;\n    foreach(string extension; extensions)\n    {\n        double strength\
    \ = 0;\n        foreach(char c; extension)\n        {\n            if(isupper(c))\n\
    \                strength++;\n            else if(islower(c))\n              \
    \  strength--;\n        }\n        if(strength > strongest_strength)\n       \
    \ {\n            strongest_strength = strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name ~ \".\" ~ strongest_extension;\n\
    }", "{\n    int max_strength = 0;\n    string strongest_extension = \"\";\n  \
    \  foreach(string extension; extensions)\n    {\n        int strength = 0;\n \
    \       foreach(char c; extension)\n        {\n            if(c.isUpper)\n   \
    \             strength++;\n            else if(c.isLower)\n                strength--;\n\
    \        }\n        if(strength > max_strength)\n        {\n            max_strength\
    \ = strength;\n            strongest_extension = extension;\n        }\n    }\n\
    \    return class_name ~ \".\" ~ strongest_extension;\n}", "{\n    string result\
    \ = class_name;\n    double strength = 0;\n    foreach(string extension; extensions)\n\
    \    {\n        double temp = 0;\n        foreach(char c; extension)\n       \
    \ {\n            if(c.isUpper)\n                temp++;\n            else\n  \
    \              temp--;\n        }\n        if(temp > strength)\n        {\n  \
    \          strength = temp;\n            result = class_name ~ \".\" ~ extension;\n\
    \        }\n    }\n    return result;\n}", "{\n    string strongest_extension\
    \ = \"\";\n    float strongest_extension_strength = 0.0f;\n    foreach(string\
    \ extension; extensions)\n    {\n        float extension_strength = 0.0f;\n  \
    \      foreach(char c; extension)\n        {\n            if(isUpper(c))\n   \
    \             extension_strength += 1.0f;\n            else if(isLower(c))\n \
    \               extension_strength -= 1.0f;\n        }\n        if(extension_strength\
    \ > strongest_extension_strength)\n        {\n            strongest_extension_strength\
    \ = extension_strength;\n            strongest_extension = extension;\n      \
    \  }\n    }\n    return class_name ~ \".\" ~ strongest_extension;\n}", "{\n  \
    \  int max_strength = 0;\n    string strongest_extension = \"\";\n    foreach(string\
    \ extension; extensions)\n    {\n        int cap = 0;\n        int sm = 0;\n \
    \       foreach(char c; extension)\n        {\n            if(c >= 'A' && c <=\
    \ 'Z')\n                cap++;\n            else if(c >= 'a' && c <= 'z')\n  \
    \              sm++;\n        }\n        int strength = cap - sm;\n        if(strength\
    \ > max_strength)\n        {\n            max_strength = strength;\n         \
    \   strongest_extension = extension;\n        }\n    }\n    return class_name\
    \ ~ \".\" ~ strongest_extension;\n}", "{\n    string strongest_extension = \"\"\
    ;\n    double strongest_strength = 0;\n    foreach(string extension; extensions)\n\
    \    {\n        double strength = 0;\n        foreach(char c; extension)\n   \
    \     {\n            if(isUpper(c))\n                strength++;\n           \
    \ else if(isLower(c))\n                strength--;\n        }\n        if(strength\
    \ > strongest_strength)\n        {\n            strongest_strength = strength;\n\
    \            strongest_extension = extension;\n        }\n    }\n    return class_name\
    \ ~ \".\" ~ strongest_extension;\n}", "{\n    int max_strength = 0;\n    string\
    \ strongest_extension = \"\";\n    foreach(string extension; extensions)\n   \
    \ {\n        int strength = 0;\n        foreach(char c; extension)\n        {\n\
    \            if(c.isUpper)\n                strength++;\n            else\n  \
    \              strength--;\n        }\n        if(strength > max_strength)\n \
    \       {\n            max_strength = strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name ~ \".\" ~ strongest_extension;\n\
    }", "{\n    string strongest_extension = \"\";\n    double strongest_strength\
    \ = 0;\n    foreach(extension; extensions)\n    {\n        double strength = 0;\n\
    \        foreach(c; extension)\n        {\n            if(c.isUpper)\n       \
    \         strength++;\n            else\n                strength--;\n       \
    \ }\n        if(strength > strongest_strength)\n        {\n            strongest_strength\
    \ = strength;\n            strongest_extension = extension;\n        }\n    }\n\
    \    return class_name ~ \".\" ~ strongest_extension;\n}", "{\n    int[] strengths\
    \ = extensions.map!((string s) => s.count!(c => c.isUpper) - s.count!(c => c.isLower));\n\
    \    int max_strength = strengths.max;\n    int index = strengths.indexOf(max_strength);\n\
    \    return class_name ~ \".\" ~ extensions[index];\n}", "{\n    double max_strength\
    \ = 0;\n    string strongest_extension = \"\";\n    foreach(string extension;\
    \ extensions)\n    {\n        double strength = 0;\n        foreach(char c; extension)\n\
    \        {\n            if(c.isUpper)\n                strength++;\n         \
    \   else if(c.isLower)\n                strength--;\n        }\n        if(strength\
    \ > max_strength)\n        {\n            max_strength = strength;\n         \
    \   strongest_extension = extension;\n        }\n    }\n    return class_name\
    \ ~ \".\" ~ strongest_extension;\n}", "{\n    int max_strength = 0;\n    string\
    \ max_extension = \"\";\n    foreach(string extension; extensions)\n    {\n  \
    \      int strength = 0;\n        foreach(char c; extension)\n        {\n    \
    \        if(c.isUpper)\n                strength++;\n            else if(c.isLower)\n\
    \                strength--;\n        }\n        if(abs(strength) > max_strength)\n\
    \        {\n            max_strength = abs(strength);\n            max_extension\
    \ = extension;\n        }\n    }\n    return class_name ~ \".\" ~ max_extension;\n\
    }", "{\n    int max_strength = 0;\n    string strongest_extension = \"\";\n  \
    \  foreach(string extension; extensions)\n    {\n        int strength = 0;\n \
    \       foreach(char c; extension)\n        {\n            if(isupper(c))\n  \
    \              strength++;\n            else if(islower(c))\n                strength--;\n\
    \        }\n        if(strength > max_strength)\n        {\n            max_strength\
    \ = strength;\n            strongest_extension = extension;\n        }\n    }\n\
    \    return class_name ~ \".\" ~ strongest_extension;\n}", "{\n    string strongest_extension\
    \ = \"\";\n    double strongest_strength = 0;\n    foreach(string extension; extensions)\n\
    \    {\n        double strength = 0;\n        foreach(char c; extension)\n   \
    \     {\n            if(c.isUpper)\n                strength++;\n            else\
    \ if(c.isLower)\n                strength--;\n        }\n        if(strength >\
    \ strongest_strength)\n        {\n            strongest_strength = strength;\n\
    \            strongest_extension = extension;\n        }\n    }\n    return class_name\
    \ ~ \".\" ~ strongest_extension;\n}", "{\n    int max_strength = 0;\n    string\
    \ strongest_extension = \"\";\n    foreach(extension; extensions)\n    {\n   \
    \     int strength = 0;\n        foreach(c; extension)\n        {\n          \
    \  if(c.isUpper)\n                strength++;\n            else\n            \
    \    strength--;\n        }\n        if(strength > max_strength)\n        {\n\
    \            max_strength = strength;\n            strongest_extension = extension;\n\
    \        }\n    }\n    return class_name ~ \".\" ~ strongest_extension;\n}", "{\n\
    \    string strongest_extension = \"\";\n    float strongest_extension_strength\
    \ = 0;\n    foreach(string extension; extensions)\n    {\n        float extension_strength\
    \ = 0;\n        foreach(char c; extension)\n        {\n            if(c.isUpper)\n\
    \                extension_strength++;\n            else if(c.isLower)\n     \
    \           extension_strength--;\n        }\n        if(extension_strength >\
    \ strongest_extension_strength)\n        {\n            strongest_extension_strength\
    \ = extension_strength;\n            strongest_extension = extension;\n      \
    \  }\n    }\n    return class_name ~ \".\" ~ strongest_extension;\n}", "{\n  \
    \  int max_strength = 0;\n    string strongest_extension = \"\";\n    foreach(string\
    \ ext; extensions)\n    {\n        int strength = 0;\n        foreach(char c;\
    \ ext)\n        {\n            if(c.isUpper)\n                strength++;\n  \
    \          else\n                strength--;\n        }\n        if(strength >\
    \ max_strength)\n        {\n            max_strength = strength;\n           \
    \ strongest_extension = ext;\n        }\n    }\n    return class_name ~ \".\"\
    \ ~ strongest_extension;\n}", "{\n    int[] strength = new int[extensions.length];\n\
    \    int max_strength = 0;\n    int max_index = 0;\n    for (int i = 0; i < extensions.length;\
    \ i++)\n    {\n        int cap = 0;\n        int sm = 0;\n        foreach (char\
    \ c; extensions[i])\n        {\n            if (c >= 'A' && c <= 'Z')\n      \
    \          cap++;\n            else if (c >= 'a' && c <= 'z')\n              \
    \  sm++;\n        }\n        strength[i] = cap - sm;\n        if (strength[i]\
    \ > max_strength)\n        {\n            max_strength = strength[i];\n      \
    \      max_index = i;\n        }\n    }\n    return class_name ~ \".\" ~ extensions[max_index];\n\
    }", "{\n    int max_strength = -1;\n    string strongest_extension = \"\";\n \
    \   foreach(string extension; extensions)\n    {\n        int strength = 0;\n\
    \        foreach(char c; extension)\n        {\n            if(isUpper(c))\n \
    \               strength++;\n            else\n                strength--;\n \
    \       }\n        if(strength > max_strength)\n        {\n            max_strength\
    \ = strength;\n            strongest_extension = extension;\n        }\n    }\n\
    \    return class_name ~ \".\" ~ strongest_extension;\n}", "{\n    int max_strength\
    \ = 0;\n    string strongest_extension = \"\";\n    foreach(string extension;\
    \ extensions)\n    {\n        int strength = 0;\n        foreach(char c; extension)\n\
    \        {\n            if(isupper(c))\n                strength++;\n        \
    \    else if(islower(c))\n                strength--;\n        }\n        if(strength\
    \ > max_strength)\n        {\n            max_strength = strength;\n         \
    \   strongest_extension = extension;\n        }\n    }\n    return class_name\
    \ ~ \".\" ~ strongest_extension;\n}", "{\n    int max_strength = -100;\n    string\
    \ max_extension = \"\";\n    foreach(string extension; extensions)\n    {\n  \
    \      int cap = 0;\n        int sm = 0;\n        foreach(char c; extension)\n\
    \        {\n            if(c >= 'A' && c <= 'Z')\n                cap++;\n   \
    \         else if(c >= 'a' && c <= 'z')\n                sm++;\n        }\n  \
    \      int strength = cap - sm;\n        if(strength > max_strength)\n       \
    \ {\n            max_strength = strength;\n            max_extension = extension;\n\
    \        }\n    }\n    return class_name ~ \".\" ~ max_extension;\n}", "{\n  \
    \  int[] strength = new int[extensions.length];\n    int max = 0;\n    int index\
    \ = 0;\n    foreach(i, ext; extensions)\n    {\n        int cap = 0;\n       \
    \ int sm = 0;\n        foreach(c; ext)\n        {\n            if(c.isUpper)\n\
    \                cap++;\n            else\n                sm++;\n        }\n\
    \        strength[i] = cap - sm;\n        if(strength[i] > max)\n        {\n \
    \           max = strength[i];\n            index = i;\n        }\n    }\n   \
    \ return class_name ~ \".\" ~ extensions[index];\n}", "{\n    int max_strength\
    \ = 0;\n    string strongest_extension = \"\";\n    foreach(string extension;\
    \ extensions)\n    {\n        int strength = 0;\n        foreach(char c; extension)\n\
    \        {\n            if(c.isUpper)\n                strength++;\n         \
    \   else\n                strength--;\n        }\n        if(abs(strength) > max_strength)\n\
    \        {\n            max_strength = abs(strength);\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name ~ \".\" ~ strongest_extension;\n\
    }", "{\n    int max_strength = 0;\n    string strongest_extension = \"\";\n  \
    \  foreach(string extension; extensions)\n    {\n        int strength = 0;\n \
    \       foreach(char c; extension)\n        {\n            if(c.isUpper)\n   \
    \             strength++;\n            else\n                strength--;\n   \
    \     }\n        if(strength > max_strength)\n        {\n            max_strength\
    \ = strength;\n            strongest_extension = extension;\n        }\n    }\n\
    \    return class_name ~ \".\" ~ strongest_extension;\n}", "{\n    string result\
    \ = class_name;\n    double strength = 0;\n    foreach(string extension; extensions)\n\
    \    {\n        double current_strength = 0;\n        foreach(char c; extension)\n\
    \        {\n            if(c.isUpper)\n                current_strength++;\n \
    \           else\n                current_strength--;\n        }\n        if(abs(current_strength)\
    \ > abs(strength))\n        {\n            strength = current_strength;\n    \
    \        result = class_name ~ \".\" ~ extension;\n        }\n    }\n    return\
    \ result;\n}", "{\n    int max_strength = 0;\n    string strongest_extension =\
    \ \"\";\n    foreach(extension; extensions)\n    {\n        int strength = 0;\n\
    \        foreach(letter; extension)\n        {\n            if(letter.isUpper)\n\
    \                strength++;\n            else\n                strength--;\n\
    \        }\n        if(strength > max_strength)\n        {\n            max_strength\
    \ = strength;\n            strongest_extension = extension;\n        }\n    }\n\
    \    return class_name ~ \".\" ~ strongest_extension;\n}", "{\n    auto strongest\
    \ = extensions[0];\n    double strength = 0;\n    foreach(ext; extensions)\n \
    \   {\n        int cap = 0;\n        int sm = 0;\n        foreach(c; ext)\n  \
    \      {\n            if(c.isUpper)\n                cap++;\n            else\n\
    \                sm++;\n        }\n        double curr_strength = cap - sm;\n\
    \        if(curr_strength > strength)\n        {\n            strength = curr_strength;\n\
    \            strongest = ext;\n        }\n    }\n    return class_name ~ \".\"\
    \ ~ strongest;\n}", "{\n    string strongest_extension = \"\";\n    double strongest_extension_strength\
    \ = 0;\n    foreach(string extension; extensions)\n    {\n        double extension_strength\
    \ = 0;\n        foreach(char c; extension)\n        {\n            if(c.isUpper)\n\
    \                extension_strength++;\n            else if(c.isLower)\n     \
    \           extension_strength--;\n        }\n        if(extension_strength >\
    \ strongest_extension_strength)\n        {\n            strongest_extension_strength\
    \ = extension_strength;\n            strongest_extension = extension;\n      \
    \  }\n    }\n    return class_name ~ \".\" ~ strongest_extension;\n}", "{\n  \
    \  string strongest = \"\";\n    double strength = 0;\n    foreach(string ext;\
    \ extensions)\n    {\n        double cap = 0;\n        double sm = 0;\n      \
    \  foreach(char c; ext)\n        {\n            if(c.isUpper)\n              \
    \  cap++;\n            else if(c.isLower)\n                sm++;\n        }\n\
    \        double new_strength = cap - sm;\n        if(new_strength > strength)\n\
    \        {\n            strength = new_strength;\n            strongest = ext;\n\
    \        }\n    }\n    return class_name ~ \".\" ~ strongest;\n}", "{\n    string\
    \ strongest_extension = \"\";\n    double strongest_strength = 0;\n    foreach(string\
    \ extension; extensions)\n    {\n        double strength = 0;\n        foreach(char\
    \ c; extension)\n        {\n            if(c.isUpper)\n                strength++;\n\
    \            else if(c.isLower)\n                strength--;\n        }\n    \
    \    if(strength > strongest_strength)\n        {\n            strongest_strength\
    \ = strength;\n            strongest_extension = extension;\n        }\n    }\n\
    \    return class_name ~ \".\" ~ strongest_extension;\n}", "{\n    string strongest_extension\
    \ = \"\";\n    double strongest_strength = 0;\n    foreach(string extension; extensions)\n\
    \    {\n        double strength = 0;\n        foreach(char c; extension)\n   \
    \     {\n            if(c.isUpper)\n                strength++;\n            else\
    \ if(c.isLower)\n                strength--;\n        }\n        if(strength >\
    \ strongest_strength)\n        {\n            strongest_strength = strength;\n\
    \            strongest_extension = extension;\n        }\n    }\n    return class_name\
    \ ~ \".\" ~ strongest_extension;\n}", "{\n    int[] strength = new int[extensions.length];\n\
    \    int max = 0;\n    int index = 0;\n    for (int i = 0; i < extensions.length;\
    \ i++)\n    {\n        int cap = 0;\n        int sm = 0;\n        foreach (char\
    \ c; extensions[i])\n        {\n            if (c >= 'A' && c <= 'Z')\n      \
    \          cap++;\n            else if (c >= 'a' && c <= 'z')\n              \
    \  sm++;\n        }\n        strength[i] = cap - sm;\n        if (strength[i]\
    \ > max)\n        {\n            max = strength[i];\n            index = i;\n\
    \        }\n    }\n    return class_name ~ \".\" ~ extensions[index];\n}", "{\n\
    \    int max_strength = 0;\n    string strongest_extension = \"\";\n    foreach(string\
    \ extension; extensions)\n    {\n        int strength = 0;\n        foreach(char\
    \ c; extension)\n        {\n            if(c.isUpper)\n                strength++;\n\
    \            else\n                strength--;\n        }\n        if(strength\
    \ > max_strength)\n        {\n            max_strength = strength;\n         \
    \   strongest_extension = extension;\n        }\n    }\n    return class_name\
    \ ~ \".\" ~ strongest_extension;\n}\n/*\n    You are given a list of strings.\
    \ You should find the longest string\n    that is a prefix of all the strings\
    \ in the list.\n    Example:\n        For [\"hello\", \"hell\", \"hellow\", \"\
    helloworld\"] the answer is \"hell\"\n        For [\"hello\", \"hell\", \"hellow\"\
    , \"helloworld\", \"helloworlds\"] the answer is \"hello\"\n*/\nstring Longest_Prefix(string[]\
    \ strings)\n{\n    string prefix = \"\";\n    foreach(string s; strings)\n   \
    \ {\n        if(prefix.length > s.length)\n            prefix = s;\n    }\n  \
    \  foreach(string s; strings)\n    {\n        if(prefix.length > s.length)\n \
    \           prefix = s;\n        else\n        {\n            for(int i = 0; i\
    \ < prefix.length; i++)\n            {\n                if(prefix[i] != s[i])\n\
    \                {\n                    prefix = prefix[0..i];\n             \
    \       break;\n                }\n            }\n        }\n    }\n    return\
    \ prefix;\n}\n/*\n    You are given a list of strings. You should find the longest\
    \ string\n    that is a suffix of all the strings in the list.\n    Example:\n\
    \        For [\"hello\", \"hell\", \"hellow\", \"helloworld\"] the answer is \"\
    hell\"\n        For [\"hello\", \"hell\", \"hellow\", \"helloworld\", \"helloworlds\"\
    ] the answer is \"worlds\"\n*/\nstring Longest_Suffix(string[] strings)\n{\n \
    \   string suffix = \"\";\n    foreach(string s; strings)\n   ", "{\n    int max_strength\
    \ = 0;\n    string strongest_extension = \"\";\n    foreach(string extension;\
    \ extensions)\n    {\n        int strength = 0;\n        foreach(char c; extension)\n\
    \        {\n            if(isUpper(c))\n                strength++;\n        \
    \    else\n                strength--;\n        }\n        if(strength > max_strength)\n\
    \        {\n            max_strength = strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name ~ \".\" ~ strongest_extension;\n\
    }", "{\n    string strongest_extension = \"\";\n    double strongest_strength\
    \ = 0;\n    foreach(string extension; extensions)\n    {\n        double strength\
    \ = 0;\n        foreach(char c; extension)\n        {\n            if(isUpper(c))\n\
    \                strength += 1;\n            else if(isLower(c))\n           \
    \     strength -= 1;\n        }\n        if(strength > strongest_strength)\n \
    \       {\n            strongest_strength = strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name ~ \".\" ~ strongest_extension;\n\
    }", "{\n    int max_strength = 0;\n    string strongest_extension = \"\";\n  \
    \  foreach(string extension; extensions)\n    {\n        int strength = 0;\n \
    \       foreach(char c; extension)\n        {\n            if(c.isUpper)\n   \
    \             strength++;\n            else if(c.isLower)\n                strength--;\n\
    \        }\n        if(strength > max_strength)\n        {\n            max_strength\
    \ = strength;\n            strongest_extension = extension;\n        }\n    }\n\
    \    return class_name ~ \".\" ~ strongest_extension;\n}", "{\n    float strongest\
    \ = 0;\n    string strongest_extension = \"\";\n    foreach(string extension;\
    \ extensions)\n    {\n        float strength = 0;\n        foreach(char c; extension)\n\
    \        {\n            if(c.isUpper)\n                strength++;\n         \
    \   else if(c.isLower)\n                strength--;\n        }\n        if(strength\
    \ > strongest)\n        {\n            strongest = strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name ~ \".\" ~ strongest_extension;\n\
    }", "{\n    int max_strength = 0;\n    string strongest_extension = \"\";\n  \
    \  foreach(string extension; extensions)\n    {\n        int strength = 0;\n \
    \       foreach(char c; extension)\n        {\n            if(c.isUpper)\n   \
    \             strength++;\n            else if(c.isLower)\n                strength--;\n\
    \        }\n        if(strength > max_strength)\n        {\n            max_strength\
    \ = strength;\n            strongest_extension = extension;\n        }\n    }\n\
    \    return class_name ~ \".\" ~ strongest_extension;\n}", "{\n    int max_strength\
    \ = 0;\n    string strongest_extension = \"\";\n    foreach(extension; extensions)\n\
    \    {\n        int strength = 0;\n        foreach(c; extension)\n        {\n\
    \            if(c.isUpper)\n                strength++;\n            else\n  \
    \              strength--;\n        }\n        if(strength > max_strength)\n \
    \       {\n            max_strength = strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name ~ \".\" ~ strongest_extension;\n\
    }", "{\n    int max_strength = 0;\n    string strongest_extension = \"\";\n  \
    \  foreach(string extension; extensions)\n    {\n        int strength = 0;\n \
    \       foreach(char c; extension)\n        {\n            if(isUpper(c))\n  \
    \              strength++;\n            else if(isLower(c))\n                strength--;\n\
    \        }\n        if(strength > max_strength)\n        {\n            max_strength\
    \ = strength;\n            strongest_extension = extension;\n        }\n    }\n\
    \    return class_name ~ \".\" ~ strongest_extension;\n}", "{\n    int max_strength\
    \ = 0;\n    string strongest_extension = \"\";\n    foreach(string extension;\
    \ extensions)\n    {\n        int strength = 0;\n        foreach(char c; extension)\n\
    \        {\n            if(c.isUpper)\n                strength++;\n         \
    \   else if(c.isLower)\n                strength--;\n        }\n        if(strength\
    \ > max_strength)\n        {\n            max_strength = strength;\n         \
    \   strongest_extension = extension;\n        }\n    }\n    return class_name\
    \ ~ \".\" ~ strongest_extension;\n}", "{\n    string strongest_extension = \"\"\
    ;\n    double strongest_strength = 0;\n    foreach(string extension; extensions)\n\
    \    {\n        double strength = 0;\n        foreach(char c; extension)\n   \
    \     {\n            if(c.isUpper)\n                strength++;\n            else\
    \ if(c.isLower)\n                strength--;\n        }\n        if(strength >\
    \ strongest_strength)\n        {\n            strongest_strength = strength;\n\
    \            strongest_extension = extension;\n        }\n    }\n    return class_name\
    \ ~ \".\" ~ strongest_extension;\n}", "{\n    string strongest = \"\";\n    double\
    \ strongest_strength = 0;\n    foreach(extension; extensions)\n    {\n       \
    \ double strength = 0;\n        foreach(char c; extension)\n        {\n      \
    \      if(c.isUpper)\n                strength++;\n            else\n        \
    \        strength--;\n        }\n        if(abs(strength) > abs(strongest_strength))\n\
    \        {\n            strongest_strength = strength;\n            strongest\
    \ = extension;\n        }\n    }\n    return class_name ~ \".\" ~ strongest;\n\
    }", "{\n    int max_strength = int.min;\n    string strongest_extension = \"\"\
    ;\n    foreach(extension; extensions)\n    {\n        int strength = 0;\n    \
    \    foreach(letter; extension)\n        {\n            if(letter.isUpper)\n \
    \               strength++;\n            else\n                strength--;\n \
    \       }\n        if(strength > max_strength)\n        {\n            max_strength\
    \ = strength;\n            strongest_extension = extension;\n        }\n    }\n\
    \    return class_name ~ \".\" ~ strongest_extension;\n}", "{\n    int[] strength\
    \ = new int[extensions.length];\n    int max = 0;\n    string result = \"\";\n\
    \    foreach(i, ext; extensions)\n    {\n        int cap = 0;\n        int sm\
    \ = 0;\n        foreach(c; ext)\n        {\n            if(c.isUpper)\n      \
    \          cap++;\n            else\n                sm++;\n        }\n      \
    \  strength[i] = cap - sm;\n        if(strength[i] > max)\n        {\n       \
    \     max = strength[i];\n            result = class_name ~ \".\" ~ ext;\n   \
    \     }\n    }\n    return result;\n}", "{\n    string strongest = \"\";\n   \
    \ float strength = 0;\n    foreach(string ext; extensions)\n    {\n        float\
    \ cap = 0;\n        float sm = 0;\n        foreach(char c; ext)\n        {\n \
    \           if(c.isUpper)\n                cap++;\n            else\n        \
    \        sm++;\n        }\n        float curr_strength = cap - sm;\n        if(curr_strength\
    \ > strength)\n        {\n            strength = curr_strength;\n            strongest\
    \ = ext;\n        }\n    }\n    return class_name ~ \".\" ~ strongest;\n}", "{\n\
    \    int[] strengths = new int[extensions.length];\n    int max_strength = 0;\n\
    \    int max_index = 0;\n    for (int i = 0; i < extensions.length; i++)\n   \
    \ {\n        int cap = 0;\n        int sm = 0;\n        foreach (char c; extensions[i])\n\
    \        {\n            if (c >= 'A' && c <= 'Z')\n                cap++;\n  \
    \          else if (c >= 'a' && c <= 'z')\n                sm++;\n        }\n\
    \        strengths[i] = cap - sm;\n        if (strengths[i] > max_strength)\n\
    \        {\n            max_strength = strengths[i];\n            max_index =\
    \ i;\n        }\n    }\n    return class_name ~ \".\" ~ extensions[max_index];\n\
    }", "{\n    string strongest_extension = \"\";\n    double strongest_strength\
    \ = 0;\n    foreach(string extension; extensions)\n    {\n        double strength\
    \ = 0;\n        foreach(char c; extension)\n        {\n            if(c.isUpper)\n\
    \                strength++;\n            else if(c.isLower)\n               \
    \ strength--;\n        }\n        if(strength > strongest_strength)\n        {\n\
    \            strongest_strength = strength;\n            strongest_extension =\
    \ extension;\n        }\n    }\n    return class_name ~ \".\" ~ strongest_extension;\n\
    }", "{\n    int max_strength = 0;\n    string strongest_extension = \"\";\n  \
    \  foreach(string extension; extensions)\n    {\n        int strength = 0;\n \
    \       foreach(char c; extension)\n        {\n            if(c.isUpper)\n   \
    \             strength++;\n            else if(c.isLower)\n                strength--;\n\
    \        }\n        if(strength > max_strength)\n        {\n            max_strength\
    \ = strength;\n            strongest_extension = extension;\n        }\n    }\n\
    \    return class_name ~ \".\" ~ strongest_extension;\n}", "{\n    string strongest_extension\
    \ = \"\";\n    double strongest_strength = 0;\n    foreach(string extension; extensions)\n\
    \    {\n        int upper_case_count = 0;\n        int lower_case_count = 0;\n\
    \        foreach(char c; extension)\n        {\n            if(c.isUpper)\n  \
    \              upper_case_count++;\n            else if(c.isLower)\n         \
    \       lower_case_count++;\n        }\n        double strength = (double)upper_case_count\
    \ - (double)lower_case_count;\n        if(strength > strongest_strength)\n   \
    \     {\n            strongest_strength = strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name ~ \".\" ~ strongest_extension;\n\
    }", "{\n    string strongest_extension = \"\";\n    double strongest_extension_strength\
    \ = 0;\n    foreach(string extension; extensions)\n    {\n        double extension_strength\
    \ = 0;\n        foreach(char c; extension)\n        {\n            if(c.isUpper)\n\
    \                extension_strength++;\n            else if(c.isLower)\n     \
    \           extension_strength--;\n        }\n        if(extension_strength >\
    \ strongest_extension_strength)\n        {\n            strongest_extension_strength\
    \ = extension_strength;\n            strongest_extension = extension;\n      \
    \  }\n    }\n    return class_name ~ \".\" ~ strongest_extension;\n}", "{\n  \
    \  int max_strength = 0;\n    string strongest_extension = \"\";\n    foreach(string\
    \ extension; extensions)\n    {\n        int strength = 0;\n        foreach(char\
    \ c; extension)\n        {\n            if(c.isUpper)\n                strength++;\n\
    \            else\n                strength--;\n        }\n        if(strength\
    \ > max_strength)\n        {\n            max_strength = strength;\n         \
    \   strongest_extension = extension;\n        }\n    }\n    return class_name\
    \ ~ \".\" ~ strongest_extension;\n}", "{\n    string strongest_extension = \"\"\
    ;\n    double strongest_strength = 0;\n    foreach(string extension; extensions)\n\
    \    {\n        double strength = 0;\n        foreach(char c; extension)\n   \
    \     {\n            if(c.isUpper)\n                strength++;\n            else\
    \ if(c.isLower)\n                strength--;\n        }\n        if(strength >\
    \ strongest_strength)\n        {\n            strongest_strength = strength;\n\
    \            strongest_extension = extension;\n        }\n    }\n    return class_name\
    \ ~ \".\" ~ strongest_extension;\n}", "{\n    string strongest_extension = \"\"\
    ;\n    double strongest_strength = 0;\n    foreach(string extension; extensions)\n\
    \    {\n        double strength = 0;\n        foreach(char c; extension)\n   \
    \     {\n            if(isUpper(c))\n                strength += 1;\n        \
    \    else if(isLower(c))\n                strength -= 1;\n        }\n        if(strength\
    \ > strongest_strength)\n        {\n            strongest_strength = strength;\n\
    \            strongest_extension = extension;\n        }\n    }\n    return class_name\
    \ ~ \".\" ~ strongest_extension;\n}", "{\n    int max_strength = 0;\n    string\
    \ strongest_extension = \"\";\n    foreach(string extension; extensions)\n   \
    \ {\n        int strength = 0;\n        foreach(char c; extension)\n        {\n\
    \            if(c.isUpper)\n                strength++;\n            else if(c.isLower)\n\
    \                strength--;\n        }\n        if(strength > max_strength)\n\
    \        {\n            max_strength = strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name ~ \".\" ~ strongest_extension;\n\
    }", "{\n    int max_strength = 0;\n    string strongest_extension = \"\";\n  \
    \  foreach(string extension; extensions)\n    {\n        int strength = 0;\n \
    \       foreach(char c; extension)\n        {\n            if(c.isUpper)\n   \
    \             strength++;\n            else\n                strength--;\n   \
    \     }\n        if(strength > max_strength)\n        {\n            max_strength\
    \ = strength;\n            strongest_extension = extension;\n        }\n    }\n\
    \    return class_name ~ \".\" ~ strongest_extension;\n}", "{\n    string strongest_extension\
    \ = \"\";\n    double strongest_strength = 0;\n    foreach(string extension; extensions)\n\
    \    {\n        double strength = 0;\n        foreach(char c; extension)\n   \
    \     {\n            if(c.isUpper)\n                strength++;\n            else\
    \ if(c.isLower)\n                strength--;\n        }\n        if(strength >\
    \ strongest_strength)\n        {\n            strongest_strength = strength;\n\
    \            strongest_extension = extension;\n        }\n    }\n    return class_name\
    \ ~ \".\" ~ strongest_extension;\n}", "{\n    int max_strength = 0;\n    string\
    \ strongest_extension = \"\";\n    foreach(extension; extensions)\n    {\n   \
    \     int strength = 0;\n        foreach(c; extension)\n        {\n          \
    \  if(c.isUpper)\n                strength++;\n            else\n            \
    \    strength--;\n        }\n        if(strength > max_strength)\n        {\n\
    \            max_strength = strength;\n            strongest_extension = extension;\n\
    \        }\n    }\n    return class_name ~ \".\" ~ strongest_extension;\n}", "{\n\
    \    int max_strength = 0;\n    string strongest_extension = \"\";\n    foreach(string\
    \ extension; extensions)\n    {\n        int strength = 0;\n        foreach(char\
    \ c; extension)\n        {\n            if(isUpper(c))\n                strength++;\n\
    \            else\n                strength--;\n        }\n        if(strength\
    \ > max_strength)\n        {\n            max_strength = strength;\n         \
    \   strongest_extension = extension;\n        }\n    }\n    return class_name\
    \ ~ \".\" ~ strongest_extension;\n}", "{\n    int[] strength = new int[extensions.length];\n\
    \    int max = 0;\n    int index = 0;\n    for (int i = 0; i < extensions.length;\
    \ i++)\n    {\n        int cap = 0;\n        int sm = 0;\n        foreach (char\
    \ c; extensions[i])\n        {\n            if (c >= 'A' && c <= 'Z')\n      \
    \          cap++;\n            else if (c >= 'a' && c <= 'z')\n              \
    \  sm++;\n        }\n        strength[i] = cap - sm;\n        if (strength[i]\
    \ > max)\n        {\n            max = strength[i];\n            index = i;\n\
    \        }\n    }\n    return class_name ~ \".\" ~ extensions[index];\n}", "{\n\
    \    int max = 0;\n    string result = \"\";\n    foreach(string ext; extensions)\n\
    \    {\n        int cap = 0;\n        int sm = 0;\n        foreach(char c; ext)\n\
    \        {\n            if(c.isUpper)\n                cap++;\n            else\n\
    \                sm++;\n        }\n        int strength = cap - sm;\n        if(strength\
    \ > max)\n        {\n            max = strength;\n            result = class_name\
    \ ~ \".\" ~ ext;\n        }\n    }\n    return result;\n}", "{\n    auto strongest\
    \ = extensions.front;\n    double strongest_strength = 0;\n    foreach(ext; extensions)\n\
    \    {\n        int cap = 0;\n        int sm = 0;\n        foreach(c; ext)\n \
    \       {\n            if(c.isUpper)\n                cap++;\n            else\n\
    \                sm++;\n        }\n        double strength = cap - sm;\n     \
    \   if(strength > strongest_strength)\n        {\n            strongest = ext;\n\
    \            strongest_strength = strength;\n        }\n    }\n    return class_name\
    \ ~ \".\" ~ strongest;\n}", "{\n    int max_strength = 0;\n    string strongest_extension\
    \ = \"\";\n    foreach(extension; extensions)\n    {\n        int strength = 0;\n\
    \        foreach(c; extension)\n        {\n            if(c.isUpper)\n       \
    \         strength++;\n            else\n                strength--;\n       \
    \ }\n        if(strength > max_strength)\n        {\n            max_strength\
    \ = strength;\n            strongest_extension = extension;\n        }\n    }\n\
    \    return class_name ~ \".\" ~ strongest_extension;\n}", "{\n    string strongest_extension\
    \ = \"\";\n    double strongest_extension_strength = 0;\n    foreach(string extension;\
    \ extensions)\n    {\n        double extension_strength = 0;\n        foreach(char\
    \ c; extension)\n        {\n            if(isUpper(c))\n            {\n      \
    \          extension_strength++;\n            }\n            else if(isLower(c))\n\
    \            {\n                extension_strength--;\n            }\n       \
    \ }\n        if(extension_strength > strongest_extension_strength)\n        {\n\
    \            strongest_extension_strength = extension_strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name ~ \".\" ~ strongest_extension;\n\
    }", "{\n    int max_strength = 0;\n    string strongest_extension = \"\";\n  \
    \  foreach(string extension; extensions)\n    {\n        int strength = 0;\n \
    \       foreach(char c; extension)\n        {\n            if(c.isUpper)\n   \
    \             strength++;\n            else if(c.isLower)\n                strength--;\n\
    \        }\n        if(strength > max_strength)\n        {\n            max_strength\
    \ = strength;\n            strongest_extension = extension;\n        }\n    }\n\
    \    return class_name ~ \".\" ~ strongest_extension;\n}", "{\n    int max_strength\
    \ = 0;\n    string strongest_extension = \"\";\n    foreach(string extension;\
    \ extensions)\n    {\n        int strength = 0;\n        foreach(char c; extension)\n\
    \        {\n            if(c.isUpper)\n                strength++;\n         \
    \   else if(c.isLower)\n                strength--;\n        }\n        if(strength\
    \ > max_strength)\n        {\n            max_strength = strength;\n         \
    \   strongest_extension = extension;\n        }\n    }\n    return class_name\
    \ ~ \".\" ~ strongest_extension;\n}", "{\n    string strongest_extension = \"\"\
    ;\n    double strongest_strength = 0;\n    foreach(string extension; extensions)\n\
    \    {\n        double strength = 0;\n        foreach(char c; extension)\n   \
    \     {\n            if(c.isUpper)\n                strength++;\n            else\
    \ if(c.isLower)\n                strength--;\n        }\n        if(strength >\
    \ strongest_strength)\n        {\n            strongest_strength = strength;\n\
    \            strongest_extension = extension;\n        }\n    }\n    return class_name\
    \ ~ \".\" ~ strongest_extension;\n}", "{\n    string result = \"\";\n    double\
    \ max_strength = 0;\n    foreach(string extension; extensions)\n    {\n      \
    \  int cap = 0;\n        int sm = 0;\n        foreach(char c; extension)\n   \
    \     {\n            if(isUpper(c))\n                cap++;\n            else\n\
    \                sm++;\n        }\n        double strength = (double)cap - sm;\n\
    \        if(strength > max_strength)\n        {\n            max_strength = strength;\n\
    \            result = class_name ~ \".\" ~ extension;\n        }\n    }\n    return\
    \ result;\n}", "{\n    string strongest_extension = \"\";\n    double strongest_extension_strength\
    \ = 0;\n    foreach(string extension; extensions)\n    {\n        double strength\
    \ = 0;\n        foreach(char c; extension)\n        {\n            if(c.isUpper)\n\
    \                strength++;\n            else\n                strength--;\n\
    \        }\n        if(strength > strongest_extension_strength)\n        {\n \
    \           strongest_extension_strength = strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name ~ \".\" ~ strongest_extension;\n\
    }", "{\n    string strongest_extension = \"\";\n    double strongest_strength\
    \ = 0;\n    foreach(string extension; extensions)\n    {\n        double strength\
    \ = 0;\n        foreach(char c; extension)\n        {\n            if(c.isUpper)\n\
    \                strength++;\n            else if(c.isLower)\n               \
    \ strength--;\n        }\n        if(strength > strongest_strength)\n        {\n\
    \            strongest_strength = strength;\n            strongest_extension =\
    \ extension;\n        }\n    }\n    return class_name ~ \".\" ~ strongest_extension;\n\
    }", "{\n    int max_strength = 0;\n    string strongest_extension = \"\";\n  \
    \  foreach(string extension; extensions)\n    {\n        int strength = 0;\n \
    \       foreach(char c; extension)\n        {\n            if (c >= 'A' && c <=\
    \ 'Z')\n                strength++;\n            else if (c >= 'a' && c <= 'z')\n\
    \                strength--;\n        }\n        if (strength > max_strength)\n\
    \        {\n            max_strength = strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name ~ \".\" ~ strongest_extension;\n\
    }", "{\n    int max_strength = 0;\n    string strongest_extension = \"\";\n  \
    \  foreach(string extension; extensions)\n    {\n        int strength = 0;\n \
    \       foreach(char c; extension)\n        {\n            if(isupper(c))\n  \
    \              strength++;\n            else if(islower(c))\n                strength--;\n\
    \        }\n        if(strength > max_strength)\n        {\n            max_strength\
    \ = strength;\n            strongest_extension = extension;\n        }\n    }\n\
    \    return class_name ~ \".\" ~ strongest_extension;\n}", "{\n    int max_strength\
    \ = 0;\n    string strongest_extension = \"\";\n    foreach(string extension;\
    \ extensions)\n    {\n        int strength = 0;\n        foreach(char c; extension)\n\
    \        {\n            if(c.isUpper)\n                strength++;\n         \
    \   else\n                strength--;\n        }\n        if(abs(strength) > max_strength)\n\
    \        {\n            max_strength = abs(strength);\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name ~ \".\" ~ strongest_extension;\n\
    }", "{\n    int max_strength = 0;\n    string strongest_extension = \"\";\n  \
    \  foreach(string extension; extensions)\n    {\n        int strength = 0;\n \
    \       foreach(char c; extension)\n        {\n            if(c.isUpper)\n   \
    \             strength++;\n            else\n                strength--;\n   \
    \     }\n        if(strength > max_strength)\n        {\n            max_strength\
    \ = strength;\n            strongest_extension = extension;\n        }\n    }\n\
    \    return class_name ~ \".\" ~ strongest_extension;\n}", "{\n    string strongest_extension\
    \ = \"\";\n    double strongest_extension_strength = 0;\n    foreach(string extension;\
    \ extensions)\n    {\n        double extension_strength = 0;\n        foreach(char\
    \ c; extension)\n        {\n            if(c.isUpper)\n                extension_strength++;\n\
    \            else if(c.isLower)\n                extension_strength--;\n     \
    \   }\n        if(extension_strength > strongest_extension_strength)\n       \
    \ {\n            strongest_extension_strength = extension_strength;\n        \
    \    strongest_extension = extension;\n        }\n    }\n    return class_name\
    \ ~ \".\" ~ strongest_extension;\n}", "{\n    string strongest_extension = \"\"\
    ;\n    float strongest_strength = 0;\n    float strength = 0;\n    int cap = 0;\n\
    \    int sm = 0;\n    foreach(string extension; extensions)\n    {\n        cap\
    \ = 0;\n        sm = 0;\n        foreach(char c; extension)\n        {\n     \
    \       if(c.isUpper)\n                cap++;\n            else\n            \
    \    sm++;\n        }\n        strength = cap - sm;\n        if(strength > strongest_strength)\n\
    \        {\n            strongest_strength = strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name ~ \".\" ~ strongest_extension;\n\
    }", "{\n    string strongest_extension = \"\";\n    double strongest_strength\
    \ = 0;\n    foreach(extension; extensions)\n    {\n        int cap = 0;\n    \
    \    int sm = 0;\n        foreach(c; extension)\n        {\n            if(c.isUpper)\n\
    \                cap++;\n            else if(c.isLower)\n                sm++;\n\
    \        }\n        double strength = cap - sm;\n        if(strength > strongest_strength)\n\
    \        {\n            strongest_strength = strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name ~ \".\" ~ strongest_extension;\n\
    }", "{\n    int max_strength = 0;\n    string strongest_extension = \"\";\n  \
    \  foreach(string extension; extensions)\n    {\n        int strength = 0;\n \
    \       foreach(char c; extension)\n        {\n            if(c.isUpper)\n   \
    \             strength++;\n            else if(c.isLower)\n                strength--;\n\
    \        }\n        if(strength > max_strength)\n        {\n            max_strength\
    \ = strength;\n            strongest_extension = extension;\n        }\n    }\n\
    \    return class_name ~ \".\" ~ strongest_extension;\n}", "{\n    int max_strength\
    \ = 0;\n    string strongest_extension = \"\";\n    foreach(string extension;\
    \ extensions)\n    {\n        int cap = 0;\n        int sm = 0;\n        foreach(char\
    \ c; extension)\n        {\n            if(c >= 'A' && c <= 'Z')\n           \
    \     cap++;\n            else if(c >= 'a' && c <= 'z')\n                sm++;\n\
    \        }\n        int strength = cap - sm;\n        if(strength > max_strength)\n\
    \        {\n            max_strength = strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name ~ \".\" ~ strongest_extension;\n\
    }", "{\n    string strongest_extension = \"\";\n    float strongest_strength =\
    \ 0.0f;\n    foreach(string extension; extensions)\n    {\n        float strength\
    \ = 0.0f;\n        foreach(char c; extension)\n        {\n            if(c.isUpper)\n\
    \                strength += 1.0f;\n            else if(c.isLower)\n         \
    \       strength -= 1.0f;\n        }\n        if(strength > strongest_strength)\n\
    \        {\n            strongest_strength = strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name ~ \".\" ~ strongest_extension;\n\
    }", "{\n    string strongest_extension = \"\";\n    double strongest_strength\
    \ = 0;\n    foreach(string extension; extensions)\n    {\n        double strength\
    \ = 0;\n        foreach(char c; extension)\n        {\n            if(c.isUpper)\n\
    \                strength++;\n            else if(c.isLower)\n               \
    \ strength--;\n        }\n        if(strength > strongest_strength)\n        {\n\
    \            strongest_strength = strength;\n            strongest_extension =\
    \ extension;\n        }\n    }\n    return class_name ~ \".\" ~ strongest_extension;\n\
    }", "{\n    float[] strength = new float[extensions.length];\n    int[] upper\
    \ = new int[extensions.length];\n    int[] lower = new int[extensions.length];\n\
    \    for (int i = 0; i < extensions.length; i++)\n    {\n        foreach (char\
    \ c; extensions[i])\n        {\n            if (c.isUpper)\n                upper[i]++;\n\
    \            else if (c.isLower)\n                lower[i]++;\n        }\n   \
    \     strength[i] = upper[i] - lower[i];\n    }\n    int max_index = 0;\n    float\
    \ max_strength = strength[0];\n    for (int i = 1; i < strength.length; i++)\n\
    \    {\n        if (strength[i] > max_strength)\n        {\n            max_index\
    \ = i;\n            max_strength = strength[i];\n        }\n    }\n    return\
    \ class_name ~ \".\" ~ extensions[max_index];\n}", "{\n    int[] strength = new\
    \ int[extensions.length];\n    int max = 0;\n    int index = 0;\n    for (int\
    \ i = 0; i < extensions.length; i++)\n    {\n        int cap = 0;\n        int\
    \ sm = 0;\n        foreach (char c; extensions[i])\n        {\n            if\
    \ (c.isUpper)\n                cap++;\n            else if (c.isLower)\n     \
    \           sm++;\n        }\n        strength[i] = cap - sm;\n        if (strength[i]\
    \ > max)\n        {\n            max = strength[i];\n            index = i;\n\
    \        }\n    }\n    return class_name ~ \".\" ~ extensions[index];\n}", "{\n\
    \    int max_strength = 0;\n    string strongest_extension = \"\";\n    foreach(string\
    \ extension; extensions)\n    {\n        int cap = 0;\n        int sm = 0;\n \
    \       foreach(char c; extension)\n        {\n            if(c.isUpper)\n   \
    \             cap++;\n            else\n                sm++;\n        }\n   \
    \     int strength = cap - sm;\n        if(strength > max_strength)\n        {\n\
    \            max_strength = strength;\n            strongest_extension = extension;\n\
    \        }\n    }\n    return class_name ~ \".\" ~ strongest_extension;\n}", "{\n\
    \    int max_strength = 0;\n    string strongest_extension = \"\";\n    foreach(string\
    \ extension; extensions)\n    {\n        int strength = 0;\n        foreach(char\
    \ c; extension)\n        {\n            if(isUpper(c))\n                strength++;\n\
    \            else if(isLower(c))\n                strength--;\n        }\n   \
    \     if(strength > max_strength)\n        {\n            max_strength = strength;\n\
    \            strongest_extension = extension;\n        }\n    }\n    return class_name\
    \ ~ \".\" ~ strongest_extension;\n}", "{\n    int max_strength = 0;\n    string\
    \ strongest_extension = \"\";\n    foreach(string extension; extensions)\n   \
    \ {\n        int upper_case_count = 0;\n        int lower_case_count = 0;\n  \
    \      foreach(char c; extension)\n        {\n            if(c.isUpper)\n    \
    \            upper_case_count++;\n            else if(c.isLower)\n           \
    \     lower_case_count++;\n        }\n        int strength = upper_case_count\
    \ - lower_case_count;\n        if(strength > max_strength)\n        {\n      \
    \      max_strength = strength;\n            strongest_extension = extension;\n\
    \        }\n    }\n    return class_name ~ \".\" ~ strongest_extension;\n}", "{\n\
    \    string strongest_extension = \"\";\n    float strongest_strength = 0;\n \
    \   foreach(string extension; extensions) {\n        float strength = 0;\n   \
    \     foreach(char c; extension) {\n            if(c.isUpper) {\n            \
    \    strength++;\n            } else if(c.isLower) {\n                strength--;\n\
    \            }\n        }\n        if(strength > strongest_strength) {\n     \
    \       strongest_strength = strength;\n            strongest_extension = extension;\n\
    \        }\n    }\n    return class_name ~ \".\" ~ strongest_extension;\n}", "{\n\
    \    int max_strength = 0;\n    string strongest_extension = \"\";\n    foreach(string\
    \ extension; extensions)\n    {\n        int upper_case_count = 0;\n        int\
    \ lower_case_count = 0;\n        foreach(char c; extension)\n        {\n     \
    \       if(isUpper(c))\n                upper_case_count++;\n            else\
    \ if(isLower(c))\n                lower_case_count++;\n        }\n        int\
    \ strength = upper_case_count - lower_case_count;\n        if(strength > max_strength)\n\
    \        {\n            max_strength = strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name ~ \".\" ~ strongest_extension;\n\
    }", "{\n    double strongest = 0;\n    string strongest_extension = \"\";\n  \
    \  foreach(string extension; extensions)\n    {\n        double strength = 0;\n\
    \        foreach(char c; extension)\n        {\n            if(c.isUpper)\n  \
    \              strength++;\n            else if(c.isLower)\n                strength--;\n\
    \        }\n        if(strength > strongest)\n        {\n            strongest\
    \ = strength;\n            strongest_extension = extension;\n        }\n    }\n\
    \    return class_name ~ \".\" ~ strongest_extension;\n}", "{\n    int max_strength\
    \ = 0;\n    string strongest_extension = \"\";\n    foreach(string extension;\
    \ extensions)\n    {\n        int strength = 0;\n        foreach(char c; extension)\n\
    \        {\n            if(isupper(c))\n                strength++;\n        \
    \    else if(islower(c))\n                strength--;\n        }\n        if(strength\
    \ > max_strength)\n        {\n            max_strength = strength;\n         \
    \   strongest_extension = extension;\n        }\n    }\n    return class_name\
    \ ~ \".\" ~ strongest_extension;\n}", "{\n    string strongest_extension = \"\"\
    ;\n    float strongest_strength = 0.0f;\n    foreach(extension; extensions)\n\
    \    {\n        float strength = 0.0f;\n        foreach(c; extension)\n      \
    \  {\n            if(c.isUpper)\n                strength += 1.0f;\n         \
    \   else\n                strength -= 1.0f;\n        }\n        if(strength >\
    \ strongest_strength)\n        {\n            strongest_strength = strength;\n\
    \            strongest_extension = extension;\n        }\n    }\n    return class_name\
    \ ~ \".\" ~ strongest_extension;\n}", "{\n    string result = \"\";\n    double\
    \ max = 0;\n    foreach(string extension; extensions)\n    {\n        double strength\
    \ = 0;\n        foreach(char c; extension)\n        {\n            if(c.isUpper)\n\
    \                strength++;\n            else\n                strength--;\n\
    \        }\n        if(strength > max)\n        {\n            max = strength;\n\
    \            result = class_name ~ \".\" ~ extension;\n        }\n    }\n    return\
    \ result;\n}", "{\n    string strongest_extension = \"\";\n    float strongest_strength\
    \ = 0;\n    foreach(string extension; extensions)\n    {\n        float strength\
    \ = 0;\n        foreach(char c; extension)\n        {\n            if(c.isUpper)\n\
    \                strength++;\n            else if(c.isLower)\n               \
    \ strength--;\n        }\n        if(strength > strongest_strength)\n        {\n\
    \            strongest_strength = strength;\n            strongest_extension =\
    \ extension;\n        }\n    }\n    return class_name ~ \".\" ~ strongest_extension;\n\
    }", "{\n    string strongest_extension = \"\";\n    double strength = 0;\n   \
    \ foreach(string extension; extensions)\n    {\n        int cap = 0;\n       \
    \ int sm = 0;\n        foreach(char c; extension)\n        {\n            if(c.isUpper)\n\
    \                cap++;\n            else\n                sm++;\n        }\n\
    \        double cur_strength = cap - sm;\n        if(cur_strength > strength)\n\
    \        {\n            strength = cur_strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name ~ \".\" ~ strongest_extension;\n\
    }", "{\n    string strongest_extension = \"\";\n    double strongest_strength\
    \ = 0;\n    foreach(string extension; extensions)\n    {\n        double strength\
    \ = 0;\n        foreach(char c; extension)\n        {\n            if(c.isUpper)\n\
    \                strength++;\n            else if(c.isLower)\n               \
    \ strength--;\n        }\n        if(abs(strength) > abs(strongest_strength))\n\
    \        {\n            strongest_strength = strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name ~ \".\" ~ strongest_extension;\n\
    }", "{\n    int max_strength = 0;\n    string strongest_extension = \"\";\n  \
    \  foreach(string extension; extensions)\n    {\n        int strength = 0;\n \
    \       foreach(char c; extension)\n        {\n            if(c >= 'A' && c <=\
    \ 'Z')\n                strength++;\n            else if(c >= 'a' && c <= 'z')\n\
    \                strength--;\n        }\n        if(strength > max_strength)\n\
    \        {\n            max_strength = strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name ~ \".\" ~ strongest_extension;\n\
    }", "{\n    string strongest_extension = \"\";\n    double strongest_extension_strength\
    \ = 0;\n    foreach(string extension; extensions)\n    {\n        double extension_strength\
    \ = 0;\n        foreach(char c; extension)\n        {\n            if(c.isUpper)\n\
    \                extension_strength++;\n            else if(c.isLower)\n     \
    \           extension_strength--;\n        }\n        if(extension_strength >\
    \ strongest_extension_strength)\n        {\n            strongest_extension_strength\
    \ = extension_strength;\n            strongest_extension = extension;\n      \
    \  }\n    }\n    return class_name ~ \".\" ~ strongest_extension;\n}", "{\n  \
    \  int max_strength = 0;\n    int max_index = 0;\n    for (int i = 0; i < extensions.length;\
    \ i++)\n    {\n        int upper = 0;\n        int lower = 0;\n        foreach\
    \ (c; extensions[i])\n        {\n            if (c >= 'A' && c <= 'Z')\n     \
    \           upper++;\n            else if (c >= 'a' && c <= 'z')\n           \
    \     lower++;\n        }\n        int strength = upper - lower;\n        if (strength\
    \ > max_strength)\n        {\n            max_strength = strength;\n         \
    \   max_index = i;\n        }\n    }\n    return class_name ~ \".\" ~ extensions[max_index];\n\
    }", "{\n    int max_strength = 0;\n    string strongest_extension = \"\";\n  \
    \  foreach(string extension; extensions)\n    {\n        int strength = 0;\n \
    \       foreach(char c; extension)\n        {\n            if(isupper(c))\n  \
    \              strength++;\n            else if(islower(c))\n                strength--;\n\
    \        }\n        if(strength > max_strength)\n        {\n            max_strength\
    \ = strength;\n            strongest_extension = extension;\n        }\n    }\n\
    \    return class_name ~ \".\" ~ strongest_extension;\n}", "{\n    string strongest_extension\
    \ = \"\";\n    double strongest_strength = 0;\n    foreach(string extension; extensions)\n\
    \    {\n        double strength = 0;\n        foreach(char c; extension)\n   \
    \     {\n            if(c.isUpper)\n                strength++;\n            else\
    \ if(c.isLower)\n                strength--;\n        }\n        if(strength >\
    \ strongest_strength)\n        {\n            strongest_strength = strength;\n\
    \            strongest_extension = extension;\n        }\n    }\n    return class_name\
    \ ~ \".\" ~ strongest_extension;\n}", "{\n    int max_strength = -1;\n    string\
    \ strongest_extension = \"\";\n    foreach(string extension; extensions)\n   \
    \ {\n        int strength = 0;\n        foreach(char c; extension)\n        {\n\
    \            if(c.isUpper)\n                strength++;\n            else\n  \
    \              strength--;\n        }\n        if(strength > max_strength)\n \
    \       {\n            max_strength = strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name ~ \".\" ~ strongest_extension;\n\
    }", "{\n    string strongest_extension = \"\";\n    double strongest_extension_strength\
    \ = 0;\n    foreach(string extension; extensions)\n    {\n        double extension_strength\
    \ = 0;\n        foreach(char c; extension)\n        {\n            if (c.isUpper)\n\
    \                extension_strength++;\n            else if (c.isLower)\n    \
    \            extension_strength--;\n        }\n        if (extension_strength\
    \ > strongest_extension_strength)\n        {\n            strongest_extension_strength\
    \ = extension_strength;\n            strongest_extension = extension;\n      \
    \  }\n    }\n    return class_name ~ \".\" ~ strongest_extension;\n}", "{\n  \
    \  int[] strengths = new int[extensions.length];\n    int strongest = 0;\n   \
    \ foreach(i, extension; extensions)\n    {\n        int cap = 0;\n        int\
    \ sm = 0;\n        foreach(c; extension)\n        {\n            if(c.isUpper)\n\
    \                cap++;\n            else\n                sm++;\n        }\n\
    \        strengths[i] = cap - sm;\n        if(strengths[i] > strengths[strongest])\n\
    \            strongest = i;\n    }\n    return class_name ~ \".\" ~ extensions[strongest];\n\
    }", "{\n    float max_strength = 0.0f;\n    string strongest_extension = \"\"\
    ;\n    foreach(string extension; extensions)\n    {\n        float strength =\
    \ 0.0f;\n        foreach(char c; extension)\n        {\n            if(isUpper(c))\n\
    \                strength += 1.0f;\n            else if(isLower(c))\n        \
    \        strength -= 1.0f;\n        }\n        if(strength > max_strength)\n \
    \       {\n            max_strength = strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name ~ \".\" ~ strongest_extension;\n\
    }", "{\n    string strongest_extension = \"\";\n    double strongest_strength\
    \ = 0;\n    foreach(extension; extensions)\n    {\n        double strength = 0;\n\
    \        foreach(c; extension)\n        {\n            if(c.isUpper)\n       \
    \         strength++;\n            else\n                strength--;\n       \
    \ }\n        if(strength > strongest_strength)\n        {\n            strongest_strength\
    \ = strength;\n            strongest_extension = extension;\n        }\n    }\n\
    \    return class_name ~ \".\" ~ strongest_extension;\n}", "{\n    string strongest_extension\
    \ = \"\";\n    double strongest_strength = 0;\n    foreach(string extension; extensions)\n\
    \    {\n        double strength = 0;\n        foreach(char c; extension)\n   \
    \     {\n            if(c.isUpper)\n                strength += 1;\n         \
    \   else\n                strength -= 1;\n        }\n        if(strength > strongest_strength)\n\
    \        {\n            strongest_strength = strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name ~ \".\" ~ strongest_extension;\n\
    }", "{\n    int max_strength = int.min;\n    string strongest_extension = \"\"\
    ;\n    foreach(string extension; extensions)\n    {\n        int strength = 0;\n\
    \        foreach(char c; extension)\n        {\n            if(c.isUpper)\n  \
    \              strength++;\n            else if(c.isLower)\n                strength--;\n\
    \        }\n        if(strength > max_strength)\n        {\n            max_strength\
    \ = strength;\n            strongest_extension = extension;\n        }\n    }\n\
    \    return class_name ~ \".\" ~ strongest_extension;\n}", "{\n    int max_strength\
    \ = 0;\n    string strongest_extension = \"\";\n    foreach(extension; extensions)\n\
    \    {\n        int strength = 0;\n        foreach(c; extension)\n        {\n\
    \            if(c.isUpper)\n                strength++;\n            else if(c.isLower)\n\
    \                strength--;\n        }\n        if(strength > max_strength)\n\
    \        {\n            max_strength = strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name ~ \".\" ~ strongest_extension;\n\
    }", "{\n    float max_strength = 0;\n    string strongest_extension = \"\";\n\
    \    foreach(string extension; extensions)\n    {\n        float strength = 0;\n\
    \        foreach(char c; extension)\n        {\n            if(c.isUpper)\n  \
    \              strength++;\n            else if(c.isLower)\n                strength--;\n\
    \        }\n        if(strength > max_strength)\n        {\n            max_strength\
    \ = strength;\n            strongest_extension = extension;\n        }\n    }\n\
    \    return class_name ~ \".\" ~ strongest_extension;\n}", "{\n    int max_strength\
    \ = 0;\n    int max_index = 0;\n    int strength = 0;\n    foreach(i, extension;\
    \ extensions)\n    {\n        strength = 0;\n        foreach(c; extension)\n \
    \       {\n            if(c.isUpper)\n                strength++;\n          \
    \  else\n                strength--;\n        }\n        if(strength > max_strength)\n\
    \        {\n            max_strength = strength;\n            max_index = i;\n\
    \        }\n    }\n    return class_name ~ \".\" ~ extensions[max_index];\n}",
  "{\n    float strength = 0.0f;\n    string strongest = \"\";\n    foreach(string\
    \ ext; extensions)\n    {\n        float curr_strength = 0.0f;\n        foreach(char\
    \ c; ext)\n        {\n            if(c.isUpper)\n                curr_strength++;\n\
    \            else if(c.isLower)\n                curr_strength--;\n        }\n\
    \        if(curr_strength > strength)\n        {\n            strength = curr_strength;\n\
    \            strongest = ext;\n        }\n    }\n    return class_name ~ \".\"\
    \ ~ strongest;\n}", "{\n    int max_strength = 0;\n    string strongest_extension\
    \ = \"\";\n    foreach(extension; extensions)\n    {\n        int cap = 0;\n \
    \       int sm = 0;\n        foreach(c; extension)\n        {\n            if(c.isUpper)\n\
    \                cap++;\n            else\n                sm++;\n        }\n\
    \        int strength = cap - sm;\n        if(strength > max_strength)\n     \
    \   {\n            max_strength = strength;\n            strongest_extension =\
    \ extension;\n        }\n    }\n    return class_name ~ \".\" ~ strongest_extension;\n\
    }", "{\n    int max_strength = int.min;\n    string strongest_extension = \"\"\
    ;\n    foreach(extension; extensions)\n    {\n        int strength = 0;\n    \
    \    foreach(c; extension)\n        {\n            if(c.isUpper)\n           \
    \     strength++;\n            else\n                strength--;\n        }\n\
    \        if(strength > max_strength)\n        {\n            max_strength = strength;\n\
    \            strongest_extension = extension;\n        }\n    }\n    return class_name\
    \ ~ \".\" ~ strongest_extension;\n}", "{\n    int strength = 0;\n    string strongest\
    \ = \"\";\n    foreach(string ext; extensions)\n    {\n        int cap = 0;\n\
    \        int sm = 0;\n        foreach(char c; ext)\n        {\n            if(isUpper(c))\n\
    \                cap++;\n            else\n                sm++;\n        }\n\
    \        int new_strength = cap - sm;\n        if(new_strength > strength)\n \
    \       {\n            strength = new_strength;\n            strongest = ext;\n\
    \        }\n    }\n    return class_name ~ \".\" ~ strongest;\n}", "{\n    string\
    \ strongest = \"\";\n    double strength = 0;\n    foreach(string ext; extensions)\n\
    \    {\n        double cap = 0;\n        double sm = 0;\n        foreach(char\
    \ c; ext)\n        {\n            if(c.isUpper)\n                cap++;\n    \
    \        else\n                sm++;\n        }\n        double cur_strength =\
    \ cap - sm;\n        if(cur_strength > strength)\n        {\n            strength\
    \ = cur_strength;\n            strongest = ext;\n        }\n    }\n    return\
    \ class_name ~ \".\" ~ strongest;\n}", "{\n    string strongest_extension = \"\
    \";\n    double strongest_strength = 0;\n    foreach(string extension; extensions)\n\
    \    {\n        double strength = 0;\n        foreach(char c; extension)\n   \
    \     {\n            if(c.isUpper)\n                strength++;\n            else\
    \ if(c.isLower)\n                strength--;\n        }\n        if(strength >\
    \ strongest_strength)\n        {\n            strongest_strength = strength;\n\
    \            strongest_extension = extension;\n        }\n    }\n    return class_name\
    \ ~ \".\" ~ strongest_extension;\n}", "{\n    string strongest_extension = \"\"\
    ;\n    double strongest_strength = 0;\n    foreach(extension; extensions)\n  \
    \  {\n        double strength = 0;\n        foreach(c; extension)\n        {\n\
    \            if(c.isUpper)\n                strength++;\n            else\n  \
    \              strength--;\n        }\n        if(strength > strongest_strength)\n\
    \        {\n            strongest_strength = strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name ~ \".\" ~ strongest_extension;\n\
    }", "{\n    string strongest_extension = \"\";\n    double strongest_strength\
    \ = -1.0;\n    foreach(string extension; extensions)\n    {\n        double strength\
    \ = 0.0;\n        foreach(char c; extension)\n        {\n            if(c.isUpper)\n\
    \                strength += 1.0;\n            else if(c.isLower)\n          \
    \      strength -= 1.0;\n        }\n        if(strength > strongest_strength)\n\
    \        {\n            strongest_strength = strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name ~ \".\" ~ strongest_extension;\n\
    }", "{\n    string strongest_extension = \"\";\n    double strongest_strength\
    \ = 0;\n    foreach(string extension; extensions)\n    {\n        double strength\
    \ = 0;\n        foreach(char c; extension)\n        {\n            if(c.isUpper)\n\
    \                strength++;\n            else if(c.isLower)\n               \
    \ strength--;\n        }\n        if(strength > strongest_strength)\n        {\n\
    \            strongest_strength = strength;\n            strongest_extension =\
    \ extension;\n        }\n    }\n    return class_name ~ \".\" ~ strongest_extension;\n\
    }", "{\n    int max_strength = 0;\n    string strongest_extension = \"\";\n  \
    \  foreach(string extension; extensions)\n    {\n        int strength = 0;\n \
    \       foreach(char c; extension)\n        {\n            if(c.isUpper)\n   \
    \             strength++;\n            else if(c.isLower)\n                strength--;\n\
    \        }\n        if(strength > max_strength)\n        {\n            max_strength\
    \ = strength;\n            strongest_extension = extension;\n        }\n    }\n\
    \    return class_name ~ \".\" ~ strongest_extension;\n}", "{\n    int max_strength\
    \ = 0;\n    int strength = 0;\n    string strongest_extension = \"\";\n    foreach(string\
    \ extension; extensions)\n    {\n        strength = 0;\n        foreach(char c;\
    \ extension)\n        {\n            if(c.isUpper)\n                strength++;\n\
    \            else if(c.isLower)\n                strength--;\n        }\n    \
    \    if(strength > max_strength)\n        {\n            max_strength = strength;\n\
    \            strongest_extension = extension;\n        }\n    }\n    return class_name\
    \ ~ \".\" ~ strongest_extension;\n}", "{\n    int[] strengths = extensions.map!(ext\
    \ => ext.count!(c => c.isUpper) - ext.count!(c => c.isLower));\n    int max_strength\
    \ = strengths.max;\n    int max_index = strengths.indexOf(max_strength);\n   \
    \ return class_name ~ \".\" ~ extensions[max_index];\n}", "{\n    int max_strength\
    \ = -1;\n    string strongest_extension = \"\";\n    foreach(string extension;\
    \ extensions)\n    {\n        int strength = 0;\n        foreach(char c; extension)\n\
    \        {\n            if(c.isUpper)\n                strength++;\n         \
    \   else if(c.isLower)\n                strength--;\n        }\n        if(strength\
    \ > max_strength)\n        {\n            max_strength = strength;\n         \
    \   strongest_extension = extension;\n        }\n    }\n    return class_name\
    \ ~ \".\" ~ strongest_extension;\n}", "{\n    string strongest_extension = \"\"\
    ;\n    double strongest_extension_strength = 0;\n    foreach(string extension;\
    \ extensions)\n    {\n        double extension_strength = 0;\n        foreach(char\
    \ c; extension)\n        {\n            if(c.isUpper)\n                extension_strength++;\n\
    \            else if(c.isLower)\n                extension_strength--;\n     \
    \   }\n        if(extension_strength > strongest_extension_strength)\n       \
    \ {\n            strongest_extension_strength = extension_strength;\n        \
    \    strongest_extension = extension;\n        }\n    }\n    return class_name\
    \ ~ \".\" ~ strongest_extension;\n}", "{\n    int max_strength = 0;\n    string\
    \ strongest_extension = \"\";\n    foreach(string extension; extensions)\n   \
    \ {\n        int strength = 0;\n        foreach(char c; extension)\n        {\n\
    \            if(c.isUpper)\n                strength++;\n            else\n  \
    \              strength--;\n        }\n        if(strength > max_strength)\n \
    \       {\n            max_strength = strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name ~ \".\" ~ strongest_extension;\n\
    }", "{\n    string strongest_extension = \"\";\n    float strongest_extension_strength\
    \ = 0;\n    foreach(extension; extensions)\n    {\n        float strength = 0;\n\
    \        foreach(c; extension)\n        {\n            if(c.isUpper)\n       \
    \         strength++;\n            else\n                strength--;\n       \
    \ }\n        if(strength > strongest_extension_strength)\n        {\n        \
    \    strongest_extension_strength = strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name ~ \".\" ~ strongest_extension;\n\
    }", "{\n    string strongest_extension = \"\";\n    double strongest_strength\
    \ = 0;\n    foreach(string extension; extensions)\n    {\n        double strength\
    \ = 0;\n        foreach(char c; extension)\n        {\n            if(c.isUpper)\n\
    \                strength++;\n            else if(c.isLower)\n               \
    \ strength--;\n        }\n        if(strength > strongest_strength)\n        {\n\
    \            strongest_strength = strength;\n            strongest_extension =\
    \ extension;\n        }\n    }\n    return class_name ~ \".\" ~ strongest_extension;\n\
    }", "{\n    int max_strength = 0;\n    string strongest_extension = \"\";\n  \
    \  foreach(string extension; extensions)\n    {\n        int strength = 0;\n \
    \       foreach(char c; extension)\n        {\n            if(isupper(c))\n  \
    \              strength++;\n            else if(islower(c))\n                strength--;\n\
    \        }\n        if(strength > max_strength)\n        {\n            max_strength\
    \ = strength;\n            strongest_extension = extension;\n        }\n    }\n\
    \    return class_name ~ \".\" ~ strongest_extension;\n}", "{\n    int max_strength\
    \ = 0;\n    string strongest_extension = \"\";\n    foreach(string extension;\
    \ extensions)\n    {\n        int strength = 0;\n        foreach(char c; extension)\n\
    \        {\n            if(c.isUpper)\n                strength++;\n         \
    \   else\n                strength--;\n        }\n        if(strength > max_strength)\n\
    \        {\n            max_strength = strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name ~ \".\" ~ strongest_extension;\n\
    }", "{\n    string strongest_extension = \"\";\n    double strongest_strength\
    \ = 0;\n    foreach(string extension; extensions)\n    {\n        double strength\
    \ = 0;\n        foreach(char c; extension)\n        {\n            if(c.isUpper)\n\
    \                strength++;\n            else if(c.isLower)\n               \
    \ strength--;\n        }\n        if(strength > strongest_strength)\n        {\n\
    \            strongest_strength = strength;\n            strongest_extension =\
    \ extension;\n        }\n    }\n    return class_name ~ \".\" ~ strongest_extension;\n\
    }", "{\n    int max = 0;\n    string result = \"\";\n    foreach(string ext; extensions)\n\
    \    {\n        int cap = 0;\n        int sm = 0;\n        foreach(char ch; ext)\n\
    \        {\n            if(ch.isUpper)\n                cap++;\n            else\
    \ if(ch.isLower)\n                sm++;\n        }\n        if(cap - sm > max)\n\
    \        {\n            max = cap - sm;\n            result = class_name ~ \"\
    .\" ~ ext;\n        }\n    }\n    return result;\n}", "{\n    int max_strength\
    \ = 0;\n    string strongest_extension = \"\";\n    foreach(string extension;\
    \ extensions)\n    {\n        int strength = 0;\n        foreach(char c; extension)\n\
    \        {\n            if(isUpper(c))\n                strength++;\n        \
    \    else if(isLower(c))\n                strength--;\n        }\n        if(strength\
    \ > max_strength)\n        {\n            max_strength = strength;\n         \
    \   strongest_extension = extension;\n        }\n    }\n    return class_name\
    \ ~ \".\" ~ strongest_extension;\n}", "{\n    int[] strength = new int[extensions.length];\n\
    \    int max = 0;\n    int index = 0;\n    foreach(i, ext; extensions)\n    {\n\
    \        int cap = 0;\n        int sm = 0;\n        foreach(c; ext)\n        {\n\
    \            if(c.isUpper)\n                cap++;\n            else\n       \
    \         sm++;\n        }\n        strength[i] = cap - sm;\n        if(strength[i]\
    \ > max)\n        {\n            max = strength[i];\n            index = i;\n\
    \        }\n    }\n    return class_name ~ \".\" ~ extensions[index];\n}", "{\n\
    \    int max_strength = 0;\n    string strongest_extension = \"\";\n    foreach(string\
    \ extension; extensions)\n    {\n        int strength = 0;\n        foreach(char\
    \ c; extension)\n        {\n            if(c.isUpper)\n                strength++;\n\
    \            else\n                strength--;\n        }\n        if(strength\
    \ > max_strength)\n        {\n            max_strength = strength;\n         \
    \   strongest_extension = extension;\n        }\n    }\n    return class_name\
    \ ~ \".\" ~ strongest_extension;\n}", "{\n    string strongest_extension = \"\"\
    ;\n    double strongest_strength = 0;\n    foreach(string extension; extensions)\n\
    \    {\n        double strength = 0;\n        foreach(char c; extension)\n   \
    \     {\n            if(c.isUpper)\n                strength++;\n            else\
    \ if(c.isLower)\n                strength--;\n        }\n        if(strength >\
    \ strongest_strength)\n        {\n            strongest_strength = strength;\n\
    \            strongest_extension = extension;\n        }\n    }\n    return class_name\
    \ ~ \".\" ~ strongest_extension;\n}", "{\n    int max_strength = 0;\n    string\
    \ strongest_extension = \"\";\n    foreach(string extension; extensions)\n   \
    \ {\n        int strength = 0;\n        foreach(char c; extension)\n        {\n\
    \            if(isUpper(c))\n                strength++;\n            else\n \
    \               strength--;\n        }\n        if(strength > max_strength)\n\
    \        {\n            max_strength = strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name ~ \".\" ~ strongest_extension;\n\
    }", "{\n    string strongest = \"\";\n    double strength = 0;\n    foreach(string\
    \ ext; extensions)\n    {\n        double cap = 0;\n        double sm = 0;\n \
    \       foreach(char c; ext)\n        {\n            if(isUpper(c))\n        \
    \        cap++;\n            else\n                sm++;\n        }\n        double\
    \ cur_strength = cap - sm;\n        if(cur_strength > strength)\n        {\n \
    \           strength = cur_strength;\n            strongest = ext;\n        }\n\
    \    }\n    return class_name ~ \".\" ~ strongest;\n}", "{\n    string strongest_extension\
    \ = \"\";\n    double strongest_strength = 0;\n    foreach(string extension; extensions)\n\
    \    {\n        double strength = 0;\n        foreach(char c; extension)\n   \
    \     {\n            if(c.isUpper)\n                strength++;\n            else\
    \ if(c.isLower)\n                strength--;\n        }\n        if(strength >\
    \ strongest_strength)\n        {\n            strongest_strength = strength;\n\
    \            strongest_extension = extension;\n        }\n    }\n    return class_name\
    \ ~ \".\" ~ strongest_extension;\n}\n/*\n    Test.assertEquals(Strongest_Extension(\"\
    Slices\", [\"SErviNGSliCes\", \"Cheese\", \"StuFfed\"]), \"Slices.SErviNGSliCes\"\
    );\n    Test.assertEquals(Strongest_Extension(\"Slices\", [\"SErviNGSliCes\",\
    \ \"Cheese\", \"StuFfed\", \"SErviNGSliCes\"]), \"Slices.SErviNGSliCes\");\n \
    \   Test.assertEquals(Strongest_Extension(\"Slices\", [\"SErviNGSliCes\", \"Cheese\"\
    , \"StuFfed\", \"SErviNGSliCes\", \"SErviNGSliCes\"]), \"Slices.SErviNGSliCes\"\
    );\n    Test.assertEquals(Strongest_Extension(\"Slices\", [\"SErviNGSliCes\",\
    \ \"Cheese\", \"StuFfed\", \"SErviNGSliCes\", \"SErviNGSliCes\", \"SErviNGSliCes\"\
    ]), \"Slices.SErviNGSliCes\");\n    Test.assertEquals(Strongest_Extension(\"Slices\"\
    , [\"SErviNGSliCes\", \"Cheese\", \"StuFfed\", \"SErviNGSliCes\", \"SErviNGSliCes\"\
    , \"SErviNGSliCes\", \"SErviNGSliCes\"]), \"Slices.SErviNGSliCes\");\n    Test.assertEqu",
  "{\n    string strongest_extension = extensions[0];\n    float strongest_extension_strength\
    \ = 0;\n    float extension_strength = 0;\n    foreach(string extension; extensions)\n\
    \    {\n        extension_strength = 0;\n        foreach(char c; extension)\n\
    \        {\n            if(c.isUpper)\n            {\n                extension_strength++;\n\
    \            }\n            else\n            {\n                extension_strength--;\n\
    \            }\n        }\n        if(extension_strength > strongest_extension_strength)\n\
    \        {\n            strongest_extension_strength = extension_strength;\n \
    \           strongest_extension = extension;\n        }\n    }\n    return class_name\
    \ ~ \".\" ~ strongest_extension;\n}", "{\n    int max_strength = 0;\n    string\
    \ strongest_extension = \"\";\n    foreach(string extension; extensions)\n   \
    \ {\n        int strength = 0;\n        foreach(char c; extension)\n        {\n\
    \            if(c.isUpper)\n                strength++;\n            else\n  \
    \              strength--;\n        }\n        if(strength > max_strength)\n \
    \       {\n            max_strength = strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name ~ \".\" ~ strongest_extension;\n\
    }", "{\n    int max_strength = 0;\n    string strongest_extension = \"\";\n  \
    \  foreach(string extension; extensions)\n    {\n        int cap = 0;\n      \
    \  int sm = 0;\n        foreach(char c; extension)\n        {\n            if(c.isUpper)\n\
    \                cap++;\n            else\n                sm++;\n        }\n\
    \        int strength = cap - sm;\n        if(strength > max_strength)\n     \
    \   {\n            max_strength = strength;\n            strongest_extension =\
    \ extension;\n        }\n    }\n    return class_name ~ \".\" ~ strongest_extension;\n\
    }", "{\n    int max_strength = 0;\n    string strongest_extension = \"\";\n  \
    \  foreach(string extension; extensions)\n    {\n        int strength = 0;\n \
    \       foreach(char c; extension)\n        {\n            if(c.isUpper)\n   \
    \             strength++;\n            else\n                strength--;\n   \
    \     }\n        if(strength > max_strength)\n        {\n            max_strength\
    \ = strength;\n            strongest_extension = extension;\n        }\n    }\n\
    \    return class_name ~ \".\" ~ strongest_extension;\n}", "{\n    int max_strength\
    \ = 0;\n    string strongest_extension = \"\";\n    foreach(string extension;\
    \ extensions)\n    {\n        int strength = 0;\n        foreach(char c; extension)\n\
    \        {\n            if(isUpper(c))\n                strength++;\n        \
    \    else if(isLower(c))\n                strength--;\n        }\n        if(strength\
    \ > max_strength)\n        {\n            max_strength = strength;\n         \
    \   strongest_extension = extension;\n        }\n    }\n    return class_name\
    \ ~ \".\" ~ strongest_extension;\n}", "{\n    int max_strength = 0;\n    string\
    \ strongest_extension = \"\";\n    foreach(string extension; extensions)\n   \
    \ {\n        int strength = 0;\n        foreach(char c; extension)\n        {\n\
    \            if(c.isUpper)\n                strength++;\n            else\n  \
    \              strength--;\n        }\n        if(strength > max_strength)\n \
    \       {\n            max_strength = strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name ~ \".\" ~ strongest_extension;\n\
    }", "{\n    int max_strength = 0;\n    string strongest_extension = \"\";\n  \
    \  foreach(string extension; extensions)\n    {\n        int strength = 0;\n \
    \       foreach(char c; extension)\n        {\n            if(c.isUpper)\n   \
    \             strength++;\n            else\n                strength--;\n   \
    \     }\n        if(strength > max_strength)\n        {\n            max_strength\
    \ = strength;\n            strongest_extension = extension;\n        }\n    }\n\
    \    return class_name ~ \".\" ~ strongest_extension;\n}", "{\n    float max_strength\
    \ = 0;\n    string strongest_extension = \"\";\n    foreach(extension; extensions)\n\
    \    {\n        float strength = 0;\n        foreach(c; extension)\n        {\n\
    \            if(c.isUpper)\n                strength += 1;\n            else if(c.isLower)\n\
    \                strength -= 1;\n        }\n        if(strength > max_strength)\n\
    \        {\n            max_strength = strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name ~ \".\" ~ strongest_extension;\n\
    }", "{\n    int max_strength = int.min;\n    string strongest_extension = \"\"\
    ;\n    foreach(string extension; extensions)\n    {\n        int strength = 0;\n\
    \        foreach(char c; extension)\n        {\n            if(c.isUpper)\n  \
    \              strength++;\n            else\n                strength--;\n  \
    \      }\n        if(strength > max_strength)\n        {\n            max_strength\
    \ = strength;\n            strongest_extension = extension;\n        }\n    }\n\
    \    return class_name ~ \".\" ~ strongest_extension;\n}", "{\n    int max_strength\
    \ = 0;\n    string strongest_extension = \"\";\n    foreach(string extension;\
    \ extensions)\n    {\n        int cap = 0;\n        int sm = 0;\n        foreach(char\
    \ c; extension)\n        {\n            if(c.isUpper)\n                cap++;\n\
    \            else if(c.isLower)\n                sm++;\n        }\n        int\
    \ strength = cap - sm;\n        if(strength > max_strength)\n        {\n     \
    \       max_strength = strength;\n            strongest_extension = extension;\n\
    \        }\n    }\n    return class_name ~ \".\" ~ strongest_extension;\n}", "{\n\
    \    string strongest_extension = \"\";\n    float strongest_strength = -1.0f;\n\
    \    foreach(string extension; extensions)\n    {\n        float strength = 0.0f;\n\
    \        foreach(char c; extension)\n        {\n            if(c.isUpper)\n  \
    \              strength += 1.0f;\n            else if(c.isLower)\n           \
    \     strength -= 1.0f;\n        }\n        if(strength > strongest_strength)\n\
    \        {\n            strongest_strength = strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name ~ \".\" ~ strongest_extension;\n\
    }", "{\n    auto strengths = extensions.map!(ext => ext.count!(c => c.isUpper)\
    \ - ext.count!(c => c.isLower));\n    auto strongest = strengths.max;\n    return\
    \ class_name ~ \".\" ~ extensions[strengths.indexOf(strongest)];\n}", "{\n   \
    \ double[] strength = new double[extensions.length];\n    int[] caps = new int[extensions.length];\n\
    \    int[] smalls = new int[extensions.length];\n    foreach(i, ext; extensions)\n\
    \    {\n        foreach(c; ext)\n        {\n            if(isUpper(c))\n     \
    \           caps[i]++;\n            else\n                smalls[i]++;\n     \
    \   }\n        strength[i] = caps[i] - smalls[i];\n    }\n    int index = 0;\n\
    \    double max = strength[0];\n    foreach(i, s; strength)\n    {\n        if(s\
    \ > max)\n        {\n            max = s;\n            index = i;\n        }\n\
    \    }\n    return class_name ~ \".\" ~ extensions[index];\n}", "{\n    int max_strength\
    \ = 0;\n    string strongest_extension = \"\";\n    foreach(string extension;\
    \ extensions)\n    {\n        int strength = 0;\n        foreach(char c; extension)\n\
    \        {\n            if(c.isUpper)\n                strength++;\n         \
    \   else if(c.isLower)\n                strength--;\n        }\n        if(strength\
    \ > max_strength)\n        {\n            max_strength = strength;\n         \
    \   strongest_extension = extension;\n        }\n    }\n    return class_name\
    \ ~ \".\" ~ strongest_extension;\n}", "{\n    int max_strength = 0;\n    string\
    \ strongest_extension = \"\";\n    foreach(extension; extensions)\n    {\n   \
    \     int cap = 0;\n        int sm = 0;\n        foreach(ch; extension)\n    \
    \    {\n            if(isUpper(ch))\n                cap++;\n            else\
    \ if(isLower(ch))\n                sm++;\n        }\n        int strength = cap\
    \ - sm;\n        if(strength > max_strength)\n        {\n            max_strength\
    \ = strength;\n            strongest_extension = extension;\n        }\n    }\n\
    \    return class_name ~ \".\" ~ strongest_extension;\n}", "{\n    auto strongest\
    \ = extensions[0];\n    auto strongest_strength = 0;\n    foreach(extension; extensions)\n\
    \    {\n        auto strength = 0;\n        foreach(c; extension)\n        {\n\
    \            if(c.isUpper)\n                strength++;\n            else\n  \
    \              strength--;\n        }\n        if(strength > strongest_strength)\n\
    \        {\n            strongest = extension;\n            strongest_strength\
    \ = strength;\n        }\n    }\n    return class_name ~ \".\" ~ strongest;\n}",
  "{\n    int max_strength = 0;\n    string strongest_extension = \"\";\n    foreach(string\
    \ extension; extensions)\n    {\n        int strength = 0;\n        foreach(char\
    \ c; extension)\n        {\n            if(c.isUpper)\n                strength++;\n\
    \            else\n                strength--;\n        }\n        if(strength\
    \ > max_strength)\n        {\n            max_strength = strength;\n         \
    \   strongest_extension = extension;\n        }\n    }\n    return class_name\
    \ ~ \".\" ~ strongest_extension;\n}", "{\n    int max_strength = 0;\n    string\
    \ strongest_extension = \"\";\n    foreach(string extension; extensions)\n   \
    \ {\n        int strength = 0;\n        foreach(char c; extension)\n        {\n\
    \            if(isUpper(c))\n                strength++;\n            else if(isLower(c))\n\
    \                strength--;\n        }\n        if(strength > max_strength)\n\
    \        {\n            max_strength = strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name ~ \".\" ~ strongest_extension;\n\
    }", "{\n    string strongest_extension = \"\";\n    double strongest_strength\
    \ = 0;\n    foreach(string extension; extensions)\n    {\n        double strength\
    \ = 0;\n        foreach(char c; extension)\n        {\n            if(c.isUpper)\n\
    \                strength++;\n            else if(c.isLower)\n               \
    \ strength--;\n        }\n        if(abs(strength) > abs(strongest_strength))\n\
    \        {\n            strongest_strength = strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name ~ \".\" ~ strongest_extension;\n\
    }", "{\n    int max_strength = 0;\n    string strongest_extension = \"\";\n  \
    \  foreach(extension; extensions)\n    {\n        int CAP = 0;\n        int SM\
    \ = 0;\n        foreach(c; extension)\n        {\n            if(c.isUpper)\n\
    \                CAP++;\n            else\n                SM++;\n        }\n\
    \        int strength = CAP - SM;\n        if(strength > max_strength)\n     \
    \   {\n            max_strength = strength;\n            strongest_extension =\
    \ extension;\n        }\n    }\n    return class_name ~ \".\" ~ strongest_extension;\n\
    }", "{\n    int max_strength = 0;\n    int max_index = 0;\n    foreach(int i,\
    \ string ext; extensions)\n    {\n        int strength = 0;\n        foreach(char\
    \ c; ext)\n        {\n            if(c.isUpper)\n                strength++;\n\
    \            else if(c.isLower)\n                strength--;\n        }\n    \
    \    if(strength > max_strength)\n        {\n            max_strength = strength;\n\
    \            max_index = i;\n        }\n    }\n    return class_name ~ \".\" ~\
    \ extensions[max_index];\n}", "{\n    int max_strength = 0;\n    string result\
    \ = \"\";\n    foreach(string extension; extensions)\n    {\n        int strength\
    \ = 0;\n        foreach(char c; extension)\n        {\n            if(c.isUpper)\n\
    \                strength++;\n            else if(c.isLower)\n               \
    \ strength--;\n        }\n        if(strength > max_strength)\n        {\n   \
    \         max_strength = strength;\n            result = class_name ~ \".\" ~\
    \ extension;\n        }\n    }\n    return result;\n}", "{\n    int max_strength\
    \ = 0;\n    string strongest_extension = \"\";\n    foreach(extension; extensions)\n\
    \    {\n        int strength = 0;\n        foreach(c; extension)\n        {\n\
    \            if(c.isUpper)\n                strength++;\n            else\n  \
    \              strength--;\n        }\n        if(strength > max_strength)\n \
    \       {\n            max_strength = strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name ~ \".\" ~ strongest_extension;\n\
    }", "{\n    string strongest_extension = \"\";\n    double strongest_strength\
    \ = 0;\n    foreach(string extension; extensions)\n    {\n        double strength\
    \ = 0;\n        foreach(char c; extension)\n        {\n            if(c.isUpper)\n\
    \                strength++;\n            else if(c.isLower)\n               \
    \ strength--;\n        }\n        if(strength > strongest_strength)\n        {\n\
    \            strongest_strength = strength;\n            strongest_extension =\
    \ extension;\n        }\n    }\n    return class_name ~ \".\" ~ strongest_extension;\n\
    }", "{\n    int max = 0;\n    string result = \"\";\n    foreach(string ext; extensions)\n\
    \    {\n        int cap = 0;\n        int sm = 0;\n        foreach(char c; ext)\n\
    \        {\n            if(c.isUpper)\n                cap++;\n            else\
    \ if(c.isLower)\n                sm++;\n        }\n        int strength = cap\
    \ - sm;\n        if(strength > max)\n        {\n            max = strength;\n\
    \            result = class_name ~ \".\" ~ ext;\n        }\n    }\n    return\
    \ result;\n}", "{\n    string strongest_extension = \"\";\n    double strongest_extension_strength\
    \ = 0;\n    foreach(string extension; extensions)\n    {\n        double extension_strength\
    \ = 0;\n        foreach(char c; extension)\n        {\n            if(c >= 'A'\
    \ && c <= 'Z')\n            {\n                extension_strength++;\n       \
    \     }\n            else if(c >= 'a' && c <= 'z')\n            {\n          \
    \      extension_strength--;\n            }\n        }\n        if(extension_strength\
    \ > strongest_extension_strength)\n        {\n            strongest_extension_strength\
    \ = extension_strength;\n            strongest_extension = extension;\n      \
    \  }\n    }\n    return class_name ~ \".\" ~ strongest_extension;\n}", "{\n  \
    \  int max_strength = 0;\n    string strongest_extension = \"\";\n    foreach(extension;\
    \ extensions)\n    {\n        int strength = 0;\n        foreach(c; extension)\n\
    \        {\n            if(c.isUpper)\n                strength++;\n         \
    \   else\n                strength--;\n        }\n        if(strength > max_strength)\n\
    \        {\n            max_strength = strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name ~ \".\" ~ strongest_extension;\n\
    }", "{\n    string strongest_extension = \"\";\n    double strongest_strength\
    \ = 0;\n    foreach(string extension; extensions)\n    {\n        double strength\
    \ = 0;\n        foreach(char c; extension)\n        {\n            if(c.isUpper)\n\
    \                strength++;\n            else if(c.isLower)\n               \
    \ strength--;\n        }\n        if(strength > strongest_strength)\n        {\n\
    \            strongest_strength = strength;\n            strongest_extension =\
    \ extension;\n        }\n    }\n    return class_name ~ \".\" ~ strongest_extension;\n\
    }", "{\n    string strongest_extension = \"\";\n    double strongest_strength\
    \ = 0;\n    foreach(string extension; extensions)\n    {\n        double strength\
    \ = 0;\n        foreach(char c; extension)\n        {\n            if(c.isUpper)\n\
    \                strength++;\n            else if(c.isLower)\n               \
    \ strength--;\n        }\n        if(strength > strongest_strength)\n        {\n\
    \            strongest_strength = strength;\n            strongest_extension =\
    \ extension;\n        }\n    }\n    return class_name ~ \".\" ~ strongest_extension;\n\
    }", "{\n    int[] strengths = extensions.map!((string s) => s.count!(c => c.isUpper)\
    \ - s.count!(c => c.isLower));\n    int max_strength = strengths.max;\n    int\
    \ max_index = strengths.indexOf(max_strength);\n    return class_name ~ \".\"\
    \ ~ extensions[max_index];\n}", "{\n    int max_strength = 0;\n    string strongest_extension\
    \ = \"\";\n    foreach(extension; extensions)\n    {\n        int strength = 0;\n\
    \        foreach(ch; extension)\n        {\n            if(ch.isUpper)\n     \
    \           strength++;\n            else\n                strength--;\n     \
    \   }\n        if(strength > max_strength)\n        {\n            max_strength\
    \ = strength;\n            strongest_extension = extension;\n        }\n    }\n\
    \    return class_name ~ \".\" ~ strongest_extension;\n}", "{\n    int max_strength\
    \ = 0;\n    string strongest_extension = \"\";\n    foreach(extension; extensions)\n\
    \    {\n        int strength = 0;\n        foreach(c; extension)\n        {\n\
    \            if(c.isUpper)\n                strength++;\n            else if(c.isLower)\n\
    \                strength--;\n        }\n        if(strength > max_strength)\n\
    \        {\n            max_strength = strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name ~ \".\" ~ strongest_extension;\n\
    }", "{\n    string strongest_extension = \"\";\n    double strongest_strength\
    \ = 0;\n    foreach(string extension; extensions)\n    {\n        int cap = 0;\n\
    \        int sm = 0;\n        foreach(char c; extension)\n        {\n        \
    \    if(c.isUpper)\n                cap++;\n            else\n               \
    \ sm++;\n        }\n        double strength = cap - sm;\n        if(strength >\
    \ strongest_strength)\n        {\n            strongest_strength = strength;\n\
    \            strongest_extension = extension;\n        }\n    }\n    return class_name\
    \ ~ \".\" ~ strongest_extension;\n}", "{\n    int max_strength = 0;\n    string\
    \ strongest_extension = \"\";\n    foreach(string extension; extensions)\n   \
    \ {\n        int strength = 0;\n        foreach(char c; extension)\n        {\n\
    \            if(isUpper(c))\n                strength++;\n            else\n \
    \               strength--;\n        }\n        if(strength > max_strength)\n\
    \        {\n            max_strength = strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name ~ \".\" ~ strongest_extension;\n\
    }", "{\n    string strongest_extension = \"\";\n    double strongest_extension_strength\
    \ = 0;\n    foreach(string extension; extensions)\n    {\n        double strength\
    \ = 0;\n        foreach(char c; extension)\n        {\n            if(isUpper(c))\n\
    \                strength++;\n            else\n                strength--;\n\
    \        }\n        if(strength > strongest_extension_strength)\n        {\n \
    \           strongest_extension_strength = strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name ~ \".\" ~ strongest_extension;\n\
    }", "{\n    int max_strength = 0;\n    string strongest_extension = \"\";\n  \
    \  foreach(string extension; extensions)\n    {\n        int strength = 0;\n \
    \       foreach(char c; extension)\n        {\n            if(isUpper(c))\n  \
    \              strength++;\n            else if(isLower(c))\n                strength--;\n\
    \        }\n        if(strength > max_strength)\n        {\n            max_strength\
    \ = strength;\n            strongest_extension = extension;\n        }\n    }\n\
    \    return class_name ~ \".\" ~ strongest_extension;\n}", "{\n    int max_strength\
    \ = 0;\n    string strongest_extension = \"\";\n    foreach(extension; extensions)\n\
    \    {\n        int strength = 0;\n        foreach(c; extension)\n        {\n\
    \            if(c.isUpper)\n                strength++;\n            else if(c.isLower)\n\
    \                strength--;\n        }\n        if(strength > max_strength)\n\
    \        {\n            max_strength = strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name ~ \".\" ~ strongest_extension;\n\
    }", "{\n    string strongest_extension = \"\";\n    double strongest_extension_strength\
    \ = 0;\n    foreach(string extension; extensions)\n    {\n        double strength\
    \ = 0;\n        foreach(char c; extension)\n        {\n            if(c.isUpper)\n\
    \                strength++;\n            else\n                strength--;\n\
    \        }\n        if(strength > strongest_extension_strength)\n        {\n \
    \           strongest_extension_strength = strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name ~ \".\" ~ strongest_extension;\n\
    }", "{\n    string strongest_extension = \"\";\n    double strongest_strength\
    \ = 0;\n    foreach(string extension; extensions)\n    {\n        double strength\
    \ = 0;\n        foreach(char c; extension)\n        {\n            if(isUpper(c))\n\
    \                strength++;\n            else if(isLower(c))\n              \
    \  strength--;\n        }\n        if(strength > strongest_strength)\n       \
    \ {\n            strongest_strength = strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name ~ \".\" ~ strongest_extension;\n\
    }", "{\n    string strongest_extension = \"\";\n    float strongest_strength =\
    \ 0;\n    foreach(string extension; extensions)\n    {\n        float strength\
    \ = 0;\n        foreach(char c; extension)\n        {\n            if(c.isUpper)\n\
    \                strength++;\n            else if(c.isLower)\n               \
    \ strength--;\n        }\n        if(strength > strongest_strength)\n        {\n\
    \            strongest_strength = strength;\n            strongest_extension =\
    \ extension;\n        }\n    }\n    return class_name ~ \".\" ~ strongest_extension;\n\
    }", "{\n    string strongest_extension = \"\";\n    float strongest_extension_strength\
    \ = 0;\n    foreach(string extension; extensions)\n    {\n        float extension_strength\
    \ = 0;\n        foreach(char c; extension)\n        {\n            if(c.isUpper)\n\
    \                extension_strength++;\n            else if(c.isLower)\n     \
    \           extension_strength--;\n        }\n        if(extension_strength >\
    \ strongest_extension_strength)\n        {\n            strongest_extension_strength\
    \ = extension_strength;\n            strongest_extension = extension;\n      \
    \  }\n    }\n    return class_name ~ \".\" ~ strongest_extension;\n}", "{\n  \
    \  int max_strength = 0;\n    string strongest_extension = \"\";\n    foreach(string\
    \ extension; extensions)\n    {\n        int strength = 0;\n        foreach(char\
    \ c; extension)\n        {\n            if(isUpper(c))\n                strength++;\n\
    \            else\n                strength--;\n        }\n        if(strength\
    \ > max_strength)\n        {\n            max_strength = strength;\n         \
    \   strongest_extension = extension;\n        }\n    }\n    return class_name\
    \ ~ \".\" ~ strongest_extension;\n}", "{\n    auto strongest = extensions[0];\n\
    \    int strongest_strength = 0;\n    foreach(extension; extensions)\n    {\n\
    \        int strength = 0;\n        foreach(c; extension)\n        {\n       \
    \     if(c.isUpper)\n                strength++;\n            else\n         \
    \       strength--;\n        }\n        if(strength > strongest_strength)\n  \
    \      {\n            strongest_strength = strength;\n            strongest =\
    \ extension;\n        }\n    }\n    return class_name ~ \".\" ~ strongest;\n}",
  "{\n    int max_strength = 0;\n    string strongest_extension = \"\";\n    foreach(string\
    \ extension; extensions)\n    {\n        int strength = 0;\n        foreach(char\
    \ c; extension)\n        {\n            if(c.isUpper)\n                strength++;\n\
    \            else if(c.isLower)\n                strength--;\n        }\n    \
    \    if(strength > max_strength)\n        {\n            max_strength = strength;\n\
    \            strongest_extension = extension;\n        }\n    }\n    return class_name\
    \ ~ \".\" ~ strongest_extension;\n}", "{\n    string strongest_extension = \"\"\
    ;\n    double strongest_strength = 0;\n    foreach(string extension; extensions)\n\
    \    {\n        double strength = 0;\n        foreach(char c; extension)\n   \
    \     {\n            if(isUpper(c))\n                strength++;\n           \
    \ else if(isLower(c))\n                strength--;\n        }\n        if(strength\
    \ > strongest_strength)\n        {\n            strongest_strength = strength;\n\
    \            strongest_extension = extension;\n        }\n    }\n    return class_name\
    \ ~ \".\" ~ strongest_extension;\n}", "{\n    int max_strength = 0;\n    string\
    \ strongest_extension = \"\";\n    foreach(string extension; extensions)\n   \
    \ {\n        int strength = 0;\n        foreach(char c; extension)\n        {\n\
    \            if(c.isUpper)\n                strength++;\n            else if(c.isLower)\n\
    \                strength--;\n        }\n        if(strength > max_strength)\n\
    \        {\n            max_strength = strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name ~ \".\" ~ strongest_extension;\n\
    }", "{\n    int max_strength = 0;\n    string strongest_extension = \"\";\n  \
    \  foreach(string extension; extensions)\n    {\n        int strength = 0;\n \
    \       foreach(char c; extension)\n        {\n            if(c.isUpper)\n   \
    \             strength++;\n            else if(c.isLower)\n                strength--;\n\
    \        }\n        if(strength > max_strength)\n        {\n            max_strength\
    \ = strength;\n            strongest_extension = extension;\n        }\n    }\n\
    \    return class_name ~ \".\" ~ strongest_extension;\n}", "{\n    int max_strength\
    \ = 0;\n    string strongest_extension = \"\";\n    foreach(string extension;\
    \ extensions)\n    {\n        int strength = 0;\n        foreach(char c; extension)\n\
    \        {\n            if(c >= 'A' && c <= 'Z')\n                strength++;\n\
    \            else if(c >= 'a' && c <= 'z')\n                strength--;\n    \
    \    }\n        if(strength > max_strength)\n        {\n            max_strength\
    \ = strength;\n            strongest_extension = extension;\n        }\n    }\n\
    \    return class_name ~ \".\" ~ strongest_extension;\n}", "{\n    int[] strength_array\
    \ = new int[extensions.length];\n    int[] strength_array_sorted = new int[extensions.length];\n\
    \    int[] strength_array_sorted_index = new int[extensions.length];\n    int[]\
    \ strength_array_sorted_index_sorted = new int[extensions.length];\n    string[]\
    \ extensions_sorted = new string[extensions.length];\n    string[] extensions_sorted_sorted\
    \ = new string[extensions.length];\n    string[] extensions_sorted_sorted_sorted\
    \ = new string[extensions.length];\n    int i = 0;\n    int j = 0;\n    int k\
    \ = 0;\n    int l = 0;\n    int m = 0;\n    int n = 0;\n    int o = 0;\n    int\
    \ p = 0;\n    int q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n   \
    \ int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n\
    \    int z = 0;\n    int a = 0;\n    int b = 0;\n    int c = 0;\n    int d = 0;\n\
    \    int e = 0;\n    int f = 0;\n    int g = 0;\n    int h = 0;\n    int strength\
    \ = 0;\n    int strength_sorted = 0;\n    int strength_sorted_index = 0;\n   \
    \ int strength_sorted_index_sorted = 0;\n    int strength_sorted_index_sorted_sorted\
    \ = 0;\n    int strength_sorted_index_sorted_sorted_sorted = 0;\n    int strength_sorted_index_sorted_sorted_sorted_sorted\
    \ = 0;\n    int strength_sorted_index_sorted_sorted_sorted_sorted_sorted = 0;\n\
    \    int strength_sorted_index_sorted_sorted_sorted_sorted_sorted_sorted = 0;\n\
    \    int strength_sorted_index_sorted_sorted_sorted_sorted_sorted", "{\n    string\
    \ strongest_extension = \"\";\n    float strongest_extension_strength = 0;\n \
    \   foreach(string extension; extensions)\n    {\n        float strength = 0;\n\
    \        foreach(char c; extension)\n        {\n            if(isUpper(c))\n \
    \               strength++;\n            else\n                strength--;\n \
    \       }\n        if(strength > strongest_extension_strength)\n        {\n  \
    \          strongest_extension_strength = strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name ~ \".\" ~ strongest_extension;\n\
    }", "{\n    int max_strength = 0;\n    string strongest_extension = \"\";\n  \
    \  foreach(string extension; extensions)\n    {\n        int strength = 0;\n \
    \       foreach(char c; extension)\n        {\n            if(isUpper(c))\n  \
    \              strength++;\n            else\n                strength--;\n  \
    \      }\n        if(strength > max_strength)\n        {\n            max_strength\
    \ = strength;\n            strongest_extension = extension;\n        }\n    }\n\
    \    return class_name ~ \".\" ~ strongest_extension;\n}", "{\n    int max_strength\
    \ = 0;\n    string strongest_extension = \"\";\n    foreach(string extension;\
    \ extensions)\n    {\n        int strength = 0;\n        foreach(char c; extension)\n\
    \        {\n            if(isupper(c))\n                strength++;\n        \
    \    else if(islower(c))\n                strength--;\n        }\n        if(strength\
    \ > max_strength)\n        {\n            max_strength = strength;\n         \
    \   strongest_extension = extension;\n        }\n    }\n    return class_name\
    \ ~ \".\" ~ strongest_extension;\n}", "{\n    int max_strength = 0;\n    string\
    \ strongest_extension = \"\";\n    foreach(string extension; extensions)\n   \
    \ {\n        int strength = 0;\n        foreach(char c; extension)\n        {\n\
    \            if(isUpper(c))\n                strength++;\n            else if(isLower(c))\n\
    \                strength--;\n        }\n        if(strength > max_strength)\n\
    \        {\n            max_strength = strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name ~ \".\" ~ strongest_extension;\n\
    }", "{\n    int max_strength = 0;\n    string strongest_extension = \"\";\n  \
    \  foreach(string extension; extensions)\n    {\n        int strength = 0;\n \
    \       foreach(char ch; extension)\n        {\n            if(isupper(ch))\n\
    \                strength++;\n            else if(islower(ch))\n             \
    \   strength--;\n        }\n        if(strength > max_strength)\n        {\n \
    \           max_strength = strength;\n            strongest_extension = extension;\n\
    \        }\n    }\n    return class_name ~ \".\" ~ strongest_extension;\n}", "{\n\
    \    int max_strength = 0;\n    string strongest_extension = \"\";\n    foreach(string\
    \ extension; extensions)\n    {\n        int strength = 0;\n        foreach(char\
    \ c; extension)\n        {\n            if(c.isUpper)\n                strength++;\n\
    \            else if(c.isLower)\n                strength--;\n        }\n    \
    \    if(strength > max_strength)\n        {\n            max_strength = strength;\n\
    \            strongest_extension = extension;\n        }\n    }\n    return class_name\
    \ ~ \".\" ~ strongest_extension;\n}", "{\n    string strongest_extension = \"\"\
    ;\n    float strongest_strength = 0;\n    foreach(string extension; extensions)\n\
    \    {\n        float strength = 0;\n        foreach(char c; extension)\n    \
    \    {\n            if(isUpper(c))\n                strength++;\n            else\
    \ if(isLower(c))\n                strength--;\n        }\n        if(strength\
    \ > strongest_strength)\n        {\n            strongest_strength = strength;\n\
    \            strongest_extension = extension;\n        }\n    }\n    return class_name\
    \ ~ \".\" ~ strongest_extension;\n}", "{\n    int max_strength = int.min;\n  \
    \  string strongest_extension = \"\";\n    foreach(string extension; extensions)\n\
    \    {\n        int strength = 0;\n        foreach(char c; extension)\n      \
    \  {\n            if(c.isUpper)\n                strength++;\n            else\n\
    \                strength--;\n        }\n        if(strength > max_strength)\n\
    \        {\n            max_strength = strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name ~ \".\" ~ strongest_extension;\n\
    }", "{\n    string strongest_extension = \"\";\n    float strongest_strength =\
    \ 0;\n    foreach(string extension; extensions)\n    {\n        float strength\
    \ = 0;\n        foreach(char c; extension)\n        {\n            if(c.isUpper)\n\
    \                strength++;\n            else if(c.isLower)\n               \
    \ strength--;\n        }\n        if(strength > strongest_strength)\n        {\n\
    \            strongest_strength = strength;\n            strongest_extension =\
    \ extension;\n        }\n    }\n    return class_name ~ \".\" ~ strongest_extension;\n\
    }", "{\n    string strongest_extension = \"\";\n    double strongest_strength\
    \ = 0;\n    foreach(string extension; extensions)\n    {\n        double strength\
    \ = 0;\n        foreach(char c; extension)\n        {\n            if(c.isUpper)\n\
    \                strength++;\n            else if(c.isLower)\n               \
    \ strength--;\n        }\n        if(strength > strongest_strength)\n        {\n\
    \            strongest_strength = strength;\n            strongest_extension =\
    \ extension;\n        }\n    }\n    return class_name ~ \".\" ~ strongest_extension;\n\
    }", "{\n    int max_strength = 0;\n    string strongest_extension = \"\";\n  \
    \  foreach(extension; extensions)\n    {\n        int strength = 0;\n        foreach(char\
    \ c; extension)\n        {\n            if(isUpper(c))\n                strength++;\n\
    \            else\n                strength--;\n        }\n        if(strength\
    \ > max_strength)\n        {\n            max_strength = strength;\n         \
    \   strongest_extension = extension;\n        }\n    }\n    return class_name\
    \ ~ \".\" ~ strongest_extension;\n}", "{\n    int max_strength = 0;\n    string\
    \ strongest_extension = \"\";\n    foreach(extension; extensions)\n    {\n   \
    \     int strength = 0;\n        foreach(letter; extension)\n        {\n     \
    \       if(letter.isUpper)\n                strength++;\n            else\n  \
    \              strength--;\n        }\n        if(strength > max_strength)\n \
    \       {\n            max_strength = strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name ~ \".\" ~ strongest_extension;\n\
    }", "{\n    int max_strength = 0;\n    string strongest_extension = \"\";\n  \
    \  foreach(string extension; extensions)\n    {\n        int strength = 0;\n \
    \       foreach(char c; extension)\n        {\n            if(c.isUpper)\n   \
    \             strength++;\n            else if(c.isLower)\n                strength--;\n\
    \        }\n        if(strength > max_strength)\n        {\n            max_strength\
    \ = strength;\n            strongest_extension = extension;\n        }\n    }\n\
    \    return class_name ~ \".\" ~ strongest_extension;\n}", "{\n    string strongest_extension\
    \ = \"\";\n    double strongest_extension_strength = 0;\n    foreach(string extension;\
    \ extensions)\n    {\n        double extension_strength = 0;\n        foreach(char\
    \ c; extension)\n        {\n            if(isUpper(c))\n            {\n      \
    \          extension_strength++;\n            }\n            else if(isLower(c))\n\
    \            {\n                extension_strength--;\n            }\n       \
    \ }\n        if(extension_strength > strongest_extension_strength)\n        {\n\
    \            strongest_extension_strength = extension_strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name ~ \".\" ~ strongest_extension;\n\
    }"]
stop_tokens:
- "\n\n"
- "\nvoid"
- "\nbool"
- "\nint"

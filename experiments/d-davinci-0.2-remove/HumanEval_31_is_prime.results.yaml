language: d
name: HumanEval_31_is_prime
results:
- exit_code: 1
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n < 2) return false;\n    if (n == 2) return true;\n    if (n % 2 ==\
    \ 0) return false;\n    for (long i = 3; i <= sqrt(n); i += 2)\n    {\n      \
    \  if (n % i == 0) return false;\n    }\n    return true;\n}\nunittest\n{\n  \
    \  alias candidate = is_prime;\n\n    assert(candidate(6L) == false);\n    assert(candidate(101L)\
    \ == true);\n    assert(candidate(11L) == true);\n    assert(candidate(13441L)\
    \ == true);\n    assert(candidate(61L) == true);\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(1L) == false);\n    assert(candidate(5L) == true);\n\
    \    assert(candidate(11L) == true);\n    assert(candidate(17L) == true);\n  \
    \  assert(candidate(85L) == false);\n    assert(candidate(77L) == false);\n  \
    \  assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpwiv99psh.d(11): Error: `std.math.sqrt` called with argument types
    `(long)` matches both:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float
    x)`

    and:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real
    x)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwiv99psh.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163949
- exit_code: 1
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n <= 1)\n        return false;\n    else if (n <= 3)\n        return\
    \ true;\n    else if (n % 2 == 0 || n % 3 == 0)\n        return false;\n    long\
    \ i = 5;\n    while (i * i <= n) \n    {\n        if (n % i == 0 || n % (i + 2)\
    \ == 0)\n            return false;\n        i = i + 6;\n    }\n    return true;\n\
    }\n/*\nReturn the nth prime number.\n                                \n*/\nlong\
    \ nth_prime(long n) \n{\n    long i = 2;\n    long count = 0;\n    while (count\
    \ < n) \n    {\n        if (is_prime(i))\n            count++;\n        i++;\n\
    \    }\n    return i - 1;\n}\n/*\nReturn the sum of all prime numbers less than\
    \ or equal to n.\n                                \n*/\nlong sum_primes(long n)\
    \ \n{\n    long i = 2;\n    long sum = 0;\n    while (i <= n) \n    {\n      \
    \  if (is_prime(i))\n            sum += i;\n        i++;\n    }\n    return sum;\n\
    }\n/*\nReturn the sum of all prime numbers less than or equal to n.\n        \
    \                        \n*/\nlong sum_primes_sqrt(long n) \n{\n    long i =\
    \ 2;\n    long sum = 0;\n    while (i <= n) \n    {\n        if (is_prime(i))\n\
    \            sum += i;\n        i++;\n    }\n    return sum;\n}\n/*\nReturn the\
    \ sum of all prime numbers less than or equal to n.\n                        \
    \        \n*/\nlong sum_primes_sqrt_sieve(long n) \n{\n    long i = 2;\n    long\
    \ sum = 0;\n    while (i <= n) \n    {\n        if (is_prime(i))\n           \
    \ sum += i;\n        i++;\n    }\n    return sum;\n}\n/*\nReturn the sum of all\
    \ prime numbers less than or equal to n.\n                                \n*/\n\
    long sum_primes_sieve\nunittest\n{\n    alias candidate = is_prime;\n\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(101L) == true);\n    assert(candidate(11L)\
    \ == true);\n    assert(candidate(13441L) == true);\n    assert(candidate(61L)\
    \ == true);\n    assert(candidate(4L) == false);\n    assert(candidate(1L) ==\
    \ false);\n    assert(candidate(5L) == true);\n    assert(candidate(11L) == true);\n\
    \    assert(candidate(17L) == true);\n    assert(candidate(85L) == false);\n \
    \   assert(candidate(77L) == false);\n    assert(candidate(255379L) == false);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpv7dxx1kr.d(92): Error: semicolon expected, not `unittest`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpv7dxx1kr.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163949
- exit_code: 1
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n < 2) \n        return false;\n    if (n == 2) \n        return true;\n\
    \    if (n % 2 == 0) \n        return false;\n    for (long i = 3; i <= sqrt(n);\
    \ i += 2) \n    {\n        if (n % i == 0) \n            return false;\n    }\n\
    \    return true;\n}\nunittest\n{\n    alias candidate = is_prime;\n\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(101L) == true);\n    assert(candidate(11L)\
    \ == true);\n    assert(candidate(13441L) == true);\n    assert(candidate(61L)\
    \ == true);\n    assert(candidate(4L) == false);\n    assert(candidate(1L) ==\
    \ false);\n    assert(candidate(5L) == true);\n    assert(candidate(11L) == true);\n\
    \    assert(candidate(17L) == true);\n    assert(candidate(85L) == false);\n \
    \   assert(candidate(77L) == false);\n    assert(candidate(255379L) == false);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp_g96fhh9.d(14): Error: `std.math.sqrt` called with argument types
    `(long)` matches both:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float
    x)`

    and:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real
    x)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_g96fhh9.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163949
- exit_code: 1
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n < 2) \n    {\n        return false;\n    }\n    for (long i = 2; i\
    \ <= sqrt(n); i++) \n    {\n        if (n % i == 0) \n        {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\nunittest\n{\n    alias candidate\
    \ = is_prime;\n\n    assert(candidate(6L) == false);\n    assert(candidate(101L)\
    \ == true);\n    assert(candidate(11L) == true);\n    assert(candidate(13441L)\
    \ == true);\n    assert(candidate(61L) == true);\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(1L) == false);\n    assert(candidate(5L) == true);\n\
    \    assert(candidate(11L) == true);\n    assert(candidate(17L) == true);\n  \
    \  assert(candidate(85L) == false);\n    assert(candidate(77L) == false);\n  \
    \  assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpswv1ox8n.d(12): Error: `std.math.sqrt` called with argument types
    `(long)` matches both:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float
    x)`

    and:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real
    x)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpswv1ox8n.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163949
- exit_code: 0
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n <= 1) \n    {\n        return false;\n    }\n    else if (n <= 3) \n\
    \    {\n        return true;\n    }\n    else if (n % 2 == 0 || n % 3 == 0) \n\
    \    {\n        return false;\n    }\n    long i = 5;\n    while (i * i <= n)\
    \ \n    {\n        if (n % i == 0 || n % (i + 2) == 0) \n        {\n         \
    \   return false;\n        }\n        i = i + 6;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = is_prime;\n\n    assert(candidate(6L) == false);\n\
    \    assert(candidate(101L) == true);\n    assert(candidate(11L) == true);\n \
    \   assert(candidate(13441L) == true);\n    assert(candidate(61L) == true);\n\
    \    assert(candidate(4L) == false);\n    assert(candidate(1L) == false);\n  \
    \  assert(candidate(5L) == true);\n    assert(candidate(11L) == true);\n    assert(candidate(17L)\
    \ == true);\n    assert(candidate(85L) == false);\n    assert(candidate(77L) ==\
    \ false);\n    assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163950
- exit_code: 1
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n <= 1) return false;\n    if (n == 2) return true;\n    if (n % 2 ==\
    \ 0) return false;\n    for (long i = 3; i <= sqrt(n); i += 2)\n    {\n      \
    \  if (n % i == 0) return false;\n    }\n    return true;\n}\nunittest\n{\n  \
    \  alias candidate = is_prime;\n\n    assert(candidate(6L) == false);\n    assert(candidate(101L)\
    \ == true);\n    assert(candidate(11L) == true);\n    assert(candidate(13441L)\
    \ == true);\n    assert(candidate(61L) == true);\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(1L) == false);\n    assert(candidate(5L) == true);\n\
    \    assert(candidate(11L) == true);\n    assert(candidate(17L) == true);\n  \
    \  assert(candidate(85L) == false);\n    assert(candidate(77L) == false);\n  \
    \  assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpwqwpihuc.d(11): Error: `std.math.sqrt` called with argument types
    `(long)` matches both:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float
    x)`

    and:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real
    x)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwqwpihuc.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163949
- exit_code: 0
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n <= 1) \n        return false;\n    if (n <= 3) \n        return true;\n\
    \    if (n % 2 == 0 || n % 3 == 0) \n        return false;\n    for (long i =\
    \ 5; i * i <= n; i = i + 6) \n        if (n % i == 0 || n % (i + 2) == 0) \n \
    \           return false;\n    return true;\n}\nunittest\n{\n    alias candidate\
    \ = is_prime;\n\n    assert(candidate(6L) == false);\n    assert(candidate(101L)\
    \ == true);\n    assert(candidate(11L) == true);\n    assert(candidate(13441L)\
    \ == true);\n    assert(candidate(61L) == true);\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(1L) == false);\n    assert(candidate(5L) == true);\n\
    \    assert(candidate(11L) == true);\n    assert(candidate(17L) == true);\n  \
    \  assert(candidate(85L) == false);\n    assert(candidate(77L) == false);\n  \
    \  assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163950
- exit_code: 0
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n <= 1) \n        return false;\n    else if (n <= 3) \n        return\
    \ true;\n    else if (n % 2 == 0 || n % 3 == 0) \n        return false;\n    long\
    \ i = 5;\n    while (i * i <= n) \n    {\n        if (n % i == 0 || n % (i + 2)\
    \ == 0) \n            return false;\n        i = i + 6;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = is_prime;\n\n    assert(candidate(6L) ==\
    \ false);\n    assert(candidate(101L) == true);\n    assert(candidate(11L) ==\
    \ true);\n    assert(candidate(13441L) == true);\n    assert(candidate(61L) ==\
    \ true);\n    assert(candidate(4L) == false);\n    assert(candidate(1L) == false);\n\
    \    assert(candidate(5L) == true);\n    assert(candidate(11L) == true);\n   \
    \ assert(candidate(17L) == true);\n    assert(candidate(85L) == false);\n    assert(candidate(77L)\
    \ == false);\n    assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163950
- exit_code: 1
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n < 2) return false;\n    if (n == 2) return true;\n    if (n % 2 ==\
    \ 0) return false;\n    for (long i = 3; i <= sqrt(n); i += 2) \n    {\n     \
    \   if (n % i == 0) return false;\n    }\n    return true;\n}\nunittest\n{\n \
    \   alias candidate = is_prime;\n\n    assert(candidate(6L) == false);\n    assert(candidate(101L)\
    \ == true);\n    assert(candidate(11L) == true);\n    assert(candidate(13441L)\
    \ == true);\n    assert(candidate(61L) == true);\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(1L) == false);\n    assert(candidate(5L) == true);\n\
    \    assert(candidate(11L) == true);\n    assert(candidate(17L) == true);\n  \
    \  assert(candidate(85L) == false);\n    assert(candidate(77L) == false);\n  \
    \  assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpk_l25oio.d(11): Error: `std.math.sqrt` called with argument types
    `(long)` matches both:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float
    x)`

    and:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real
    x)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk_l25oio.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163949
- exit_code: 1
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n <= 1) return false;\n    if (n == 2) return true;\n    if (n % 2 ==\
    \ 0) return false;\n    for (long i = 3; i <= sqrt(n); i += 2) \n    {\n     \
    \   if (n % i == 0) return false;\n    }\n    return true;\n}\nunittest\n{\n \
    \   alias candidate = is_prime;\n\n    assert(candidate(6L) == false);\n    assert(candidate(101L)\
    \ == true);\n    assert(candidate(11L) == true);\n    assert(candidate(13441L)\
    \ == true);\n    assert(candidate(61L) == true);\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(1L) == false);\n    assert(candidate(5L) == true);\n\
    \    assert(candidate(11L) == true);\n    assert(candidate(17L) == true);\n  \
    \  assert(candidate(85L) == false);\n    assert(candidate(77L) == false);\n  \
    \  assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpb2jbq_7k.d(11): Error: `std.math.sqrt` called with argument types
    `(long)` matches both:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float
    x)`

    and:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real
    x)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpb2jbq_7k.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163949
- exit_code: 1
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n < 2)\n        return false;\n    if (n == 2)\n        return true;\n\
    \    if (n % 2 == 0)\n        return false;\n    for (long i = 3; i <= sqrt(n);\
    \ i += 2)\n        if (n % i == 0)\n            return false;\n    return true;\n\
    }\nunittest\n{\n    alias candidate = is_prime;\n\n    assert(candidate(6L) ==\
    \ false);\n    assert(candidate(101L) == true);\n    assert(candidate(11L) ==\
    \ true);\n    assert(candidate(13441L) == true);\n    assert(candidate(61L) ==\
    \ true);\n    assert(candidate(4L) == false);\n    assert(candidate(1L) == false);\n\
    \    assert(candidate(5L) == true);\n    assert(candidate(11L) == true);\n   \
    \ assert(candidate(17L) == true);\n    assert(candidate(85L) == false);\n    assert(candidate(77L)\
    \ == false);\n    assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpb2l1dt3r.d(14): Error: `std.math.sqrt` called with argument types
    `(long)` matches both:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float
    x)`

    and:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real
    x)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpb2l1dt3r.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163949
- exit_code: 1
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n < 2) return false;\n    if (n == 2) return true;\n    if (n % 2 ==\
    \ 0) return false;\n    long m = cast(long)sqrt(n);\n    for (long i = 3; i <=\
    \ m; i += 2) \n    {\n        if (n % i == 0) return false;\n    }\n    return\
    \ true;\n}\nunittest\n{\n    alias candidate = is_prime;\n\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(101L) == true);\n    assert(candidate(11L)\
    \ == true);\n    assert(candidate(13441L) == true);\n    assert(candidate(61L)\
    \ == true);\n    assert(candidate(4L) == false);\n    assert(candidate(1L) ==\
    \ false);\n    assert(candidate(5L) == true);\n    assert(candidate(11L) == true);\n\
    \    assert(candidate(17L) == true);\n    assert(candidate(85L) == false);\n \
    \   assert(candidate(77L) == false);\n    assert(candidate(255379L) == false);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpoe6piq8w.d(11): Error: `std.math.sqrt` called with argument types
    `(long)` matches both:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float
    x)`

    and:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real
    x)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpoe6piq8w.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163949
- exit_code: 1
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n <= 1)\n    {\n        return false;\n    }\n    else if (n <= 3)\n\
    \    {\n        return true;\n    }\n    else if (n % 2 == 0 || n % 3 == 0)\n\
    \    {\n        return false;\n    }\n    else\n    {\n        for (int i = 5;\
    \ i <= sqrt(n); i += 6)\n        {\n            if (n % i == 0 || n % (i + 2)\
    \ == 0)\n            {\n                return false;\n            }\n       \
    \ }\n        return true;\n    }\n}\nunittest\n{\n    alias candidate = is_prime;\n\
    \n    assert(candidate(6L) == false);\n    assert(candidate(101L) == true);\n\
    \    assert(candidate(11L) == true);\n    assert(candidate(13441L) == true);\n\
    \    assert(candidate(61L) == true);\n    assert(candidate(4L) == false);\n  \
    \  assert(candidate(1L) == false);\n    assert(candidate(5L) == true);\n    assert(candidate(11L)\
    \ == true);\n    assert(candidate(17L) == true);\n    assert(candidate(85L) ==\
    \ false);\n    assert(candidate(77L) == false);\n    assert(candidate(255379L)\
    \ == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpt9szwrxf.d(22): Error: `std.math.sqrt` called with argument types
    `(long)` matches both:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float
    x)`

    and:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real
    x)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpt9szwrxf.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163949
- exit_code: 1
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n <= 1)\n        return false;\n    else if (n <= 3)\n        return\
    \ true;\n    else if (n % 2 == 0 || n % 3 == 0)\n        return false;\n    else\n\
    \    {\n        long i = 5;\n        while (i * i <= n)\n        {\n         \
    \   if (n % i == 0 || n % (i + 2) == 0)\n                return false;\n     \
    \       i += 6;\n        }\n        return true;\n    }\n}\n/*\nReturn the sum\
    \ of all prime numbers less than or equal to a given number.\n               \
    \                 \n*/\nlong sum_primes(long n) \n{\n    long sum = 0;\n    for\
    \ (long i = 2; i <= n; i++)\n    {\n        if (is_prime(i))\n            sum\
    \ += i;\n    }\n    return sum;\n}\n/*\nReturn the sum of all prime numbers less\
    \ than or equal to a given number.\n                                \n*/\nlong\
    \ sum_primes_2(long n) \n{\n    long sum = 0;\n    for (long i = 2; i <= n; i++)\n\
    \    {\n        if (is_prime(i))\n            sum += i;\n    }\n    return sum;\n\
    }\n/*\nReturn the sum of all prime numbers less than or equal to a given number.\n\
    \                                \n*/\nlong sum_primes_3(long n) \n{\n    long\
    \ sum = 0;\n    for (long i = 2; i <= n; i++)\n    {\n        if (is_prime(i))\n\
    \            sum += i;\n    }\n    return sum;\n}\n/*\nReturn the sum of all prime\
    \ numbers less than or equal to a given number.\n                            \
    \    \n*/\nlong sum_primes_4(long n) \n{\n    long sum = 0;\n    for (long i =\
    \ 2; i <= n; i++)\n    {\n        if (is_prime(i))\n            sum += i;\n  \
    \  }\n    return sum;\n}\n/*\nReturn the sum of all prime numbers less than or\
    \ equal to a given number.\n                                \n*/\nlong sum_primes_5(\n\
    unittest\n{\n    alias candidate = is_prime;\n\n    assert(candidate(6L) == false);\n\
    \    assert(candidate(101L) == true);\n    assert(candidate(11L) == true);\n \
    \   assert(candidate(13441L) == true);\n    assert(candidate(61L) == true);\n\
    \    assert(candidate(4L) == false);\n    assert(candidate(1L) == false);\n  \
    \  assert(candidate(5L) == true);\n    assert(candidate(11L) == true);\n    assert(candidate(17L)\
    \ == true);\n    assert(candidate(85L) == false);\n    assert(candidate(77L) ==\
    \ false);\n    assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp7afva4v7.d(87): Error: basic type expected, not `unittest`

    /tmp/tmp7afva4v7.d(87): Error: found `unittest` when expecting `)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7afva4v7.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163949
- exit_code: 1
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n < 2) return false;\n    if (n == 2) return true;\n    if (n % 2 ==\
    \ 0) return false;\n    for (long i = 3; i <= sqrt(n); i += 2)\n    {\n      \
    \  if (n % i == 0) return false;\n    }\n    return true;\n}\nunittest\n{\n  \
    \  alias candidate = is_prime;\n\n    assert(candidate(6L) == false);\n    assert(candidate(101L)\
    \ == true);\n    assert(candidate(11L) == true);\n    assert(candidate(13441L)\
    \ == true);\n    assert(candidate(61L) == true);\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(1L) == false);\n    assert(candidate(5L) == true);\n\
    \    assert(candidate(11L) == true);\n    assert(candidate(17L) == true);\n  \
    \  assert(candidate(85L) == false);\n    assert(candidate(77L) == false);\n  \
    \  assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpwiv99psh.d(11): Error: `std.math.sqrt` called with argument types
    `(long)` matches both:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float
    x)`

    and:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real
    x)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwiv99psh.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163949
- exit_code: 1
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n < 2) return false;\n    if (n == 2) return true;\n    if (n % 2 ==\
    \ 0) return false;\n    for (long i = 3; i <= sqrt(n); i += 2)\n    {\n      \
    \  if (n % i == 0) return false;\n    }\n    return true;\n}\nunittest\n{\n  \
    \  alias candidate = is_prime;\n\n    assert(candidate(6L) == false);\n    assert(candidate(101L)\
    \ == true);\n    assert(candidate(11L) == true);\n    assert(candidate(13441L)\
    \ == true);\n    assert(candidate(61L) == true);\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(1L) == false);\n    assert(candidate(5L) == true);\n\
    \    assert(candidate(11L) == true);\n    assert(candidate(17L) == true);\n  \
    \  assert(candidate(85L) == false);\n    assert(candidate(77L) == false);\n  \
    \  assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpwiv99psh.d(11): Error: `std.math.sqrt` called with argument types
    `(long)` matches both:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float
    x)`

    and:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real
    x)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwiv99psh.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163949
- exit_code: 0
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n < 2) return false;\n    if (n == 2) return true;\n    if (n % 2 ==\
    \ 0) return false;\n    for (long i = 3; i < n; i += 2)\n    {\n        if (n\
    \ % i == 0) return false;\n    }\n    return true;\n}\nunittest\n{\n    alias\
    \ candidate = is_prime;\n\n    assert(candidate(6L) == false);\n    assert(candidate(101L)\
    \ == true);\n    assert(candidate(11L) == true);\n    assert(candidate(13441L)\
    \ == true);\n    assert(candidate(61L) == true);\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(1L) == false);\n    assert(candidate(5L) == true);\n\
    \    assert(candidate(11L) == true);\n    assert(candidate(17L) == true);\n  \
    \  assert(candidate(85L) == false);\n    assert(candidate(77L) == false);\n  \
    \  assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163950
- exit_code: 1
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n < 2) \n        return false;\n    if (n == 2) \n        return true;\n\
    \    if (n % 2 == 0) \n        return false;\n    for (long i = 3; i <= sqrt(n);\
    \ i += 2) \n    {\n        if (n % i == 0) \n            return false;\n    }\n\
    \    return true;\n}\nunittest\n{\n    alias candidate = is_prime;\n\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(101L) == true);\n    assert(candidate(11L)\
    \ == true);\n    assert(candidate(13441L) == true);\n    assert(candidate(61L)\
    \ == true);\n    assert(candidate(4L) == false);\n    assert(candidate(1L) ==\
    \ false);\n    assert(candidate(5L) == true);\n    assert(candidate(11L) == true);\n\
    \    assert(candidate(17L) == true);\n    assert(candidate(85L) == false);\n \
    \   assert(candidate(77L) == false);\n    assert(candidate(255379L) == false);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp_g96fhh9.d(14): Error: `std.math.sqrt` called with argument types
    `(long)` matches both:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float
    x)`

    and:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real
    x)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_g96fhh9.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163949
- exit_code: 1
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n < 2) return false;\n    if (n == 2) return true;\n    if (n % 2 ==\
    \ 0) return false;\n    for (long i = 3; i <= sqrt(n); i += 2)\n    {\n      \
    \  if (n % i == 0) return false;\n    }\n    return true;\n}\nunittest\n{\n  \
    \  alias candidate = is_prime;\n\n    assert(candidate(6L) == false);\n    assert(candidate(101L)\
    \ == true);\n    assert(candidate(11L) == true);\n    assert(candidate(13441L)\
    \ == true);\n    assert(candidate(61L) == true);\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(1L) == false);\n    assert(candidate(5L) == true);\n\
    \    assert(candidate(11L) == true);\n    assert(candidate(17L) == true);\n  \
    \  assert(candidate(85L) == false);\n    assert(candidate(77L) == false);\n  \
    \  assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpwiv99psh.d(11): Error: `std.math.sqrt` called with argument types
    `(long)` matches both:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float
    x)`

    and:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real
    x)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwiv99psh.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163949
- exit_code: 0
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n <= 1) \n        return false;\n    else if (n <= 3) \n        return\
    \ true;\n    else if (n % 2 == 0 || n % 3 == 0) \n        return false;\n    long\
    \ i = 5;\n    while (i * i <= n) \n    {\n        if (n % i == 0 || n % (i + 2)\
    \ == 0) \n            return false;\n        i = i + 6;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = is_prime;\n\n    assert(candidate(6L) ==\
    \ false);\n    assert(candidate(101L) == true);\n    assert(candidate(11L) ==\
    \ true);\n    assert(candidate(13441L) == true);\n    assert(candidate(61L) ==\
    \ true);\n    assert(candidate(4L) == false);\n    assert(candidate(1L) == false);\n\
    \    assert(candidate(5L) == true);\n    assert(candidate(11L) == true);\n   \
    \ assert(candidate(17L) == true);\n    assert(candidate(85L) == false);\n    assert(candidate(77L)\
    \ == false);\n    assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163950
- exit_code: 1
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n < 2) return false;\n    if (n == 2) return true;\n    if (n % 2 ==\
    \ 0) return false;\n    for (long i = 3; i <= sqrt(n); i += 2)\n    {\n      \
    \  if (n % i == 0) return false;\n    }\n    return true;\n}\nunittest\n{\n  \
    \  alias candidate = is_prime;\n\n    assert(candidate(6L) == false);\n    assert(candidate(101L)\
    \ == true);\n    assert(candidate(11L) == true);\n    assert(candidate(13441L)\
    \ == true);\n    assert(candidate(61L) == true);\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(1L) == false);\n    assert(candidate(5L) == true);\n\
    \    assert(candidate(11L) == true);\n    assert(candidate(17L) == true);\n  \
    \  assert(candidate(85L) == false);\n    assert(candidate(77L) == false);\n  \
    \  assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpwiv99psh.d(11): Error: `std.math.sqrt` called with argument types
    `(long)` matches both:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float
    x)`

    and:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real
    x)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwiv99psh.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163949
- exit_code: 0
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n <= 1) \n    {\n        return false;\n    }\n    else if (n <= 3) \n\
    \    {\n        return true;\n    }\n    else if (n % 2 == 0 || n % 3 == 0) \n\
    \    {\n        return false;\n    }\n    long i = 5;\n    while (i * i <= n)\
    \ \n    {\n        if (n % i == 0 || n % (i + 2) == 0) \n        {\n         \
    \   return false;\n        }\n        i = i + 6;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = is_prime;\n\n    assert(candidate(6L) == false);\n\
    \    assert(candidate(101L) == true);\n    assert(candidate(11L) == true);\n \
    \   assert(candidate(13441L) == true);\n    assert(candidate(61L) == true);\n\
    \    assert(candidate(4L) == false);\n    assert(candidate(1L) == false);\n  \
    \  assert(candidate(5L) == true);\n    assert(candidate(11L) == true);\n    assert(candidate(17L)\
    \ == true);\n    assert(candidate(85L) == false);\n    assert(candidate(77L) ==\
    \ false);\n    assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163950
- exit_code: 0
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n <= 1)\n        return false;\n    else if (n <= 3)\n        return\
    \ true;\n    else if (n % 2 == 0 || n % 3 == 0)\n        return false;\n    else\n\
    \    {\n        long i = 5;\n        while (i * i <= n)\n        {\n         \
    \   if (n % i == 0 || n % (i + 2) == 0)\n                return false;\n     \
    \       i += 6;\n        }\n        return true;\n    }\n}\nunittest\n{\n    alias\
    \ candidate = is_prime;\n\n    assert(candidate(6L) == false);\n    assert(candidate(101L)\
    \ == true);\n    assert(candidate(11L) == true);\n    assert(candidate(13441L)\
    \ == true);\n    assert(candidate(61L) == true);\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(1L) == false);\n    assert(candidate(5L) == true);\n\
    \    assert(candidate(11L) == true);\n    assert(candidate(17L) == true);\n  \
    \  assert(candidate(85L) == false);\n    assert(candidate(77L) == false);\n  \
    \  assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163950
- exit_code: 1
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n < 2) return false;\n    if (n == 2) return true;\n    if (n % 2 ==\
    \ 0) return false;\n    for (long i = 3; i <= sqrt(n); i += 2)\n    {\n      \
    \  if (n % i == 0) return false;\n    }\n    return true;\n}\nunittest\n{\n  \
    \  alias candidate = is_prime;\n\n    assert(candidate(6L) == false);\n    assert(candidate(101L)\
    \ == true);\n    assert(candidate(11L) == true);\n    assert(candidate(13441L)\
    \ == true);\n    assert(candidate(61L) == true);\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(1L) == false);\n    assert(candidate(5L) == true);\n\
    \    assert(candidate(11L) == true);\n    assert(candidate(17L) == true);\n  \
    \  assert(candidate(85L) == false);\n    assert(candidate(77L) == false);\n  \
    \  assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpwiv99psh.d(11): Error: `std.math.sqrt` called with argument types
    `(long)` matches both:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float
    x)`

    and:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real
    x)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwiv99psh.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163949
- exit_code: 0
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n <= 1) return false;\n    if (n <= 3) return true;\n    if (n % 2 ==\
    \ 0 || n % 3 == 0) return false;\n    for (long i = 5; i * i <= n; i += 6) \n\
    \    {\n        if (n % i == 0 || n % (i + 2) == 0) return false;\n    }\n   \
    \ return true;\n}\nunittest\n{\n    alias candidate = is_prime;\n\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(101L) == true);\n    assert(candidate(11L)\
    \ == true);\n    assert(candidate(13441L) == true);\n    assert(candidate(61L)\
    \ == true);\n    assert(candidate(4L) == false);\n    assert(candidate(1L) ==\
    \ false);\n    assert(candidate(5L) == true);\n    assert(candidate(11L) == true);\n\
    \    assert(candidate(17L) == true);\n    assert(candidate(85L) == false);\n \
    \   assert(candidate(77L) == false);\n    assert(candidate(255379L) == false);\n\
    }\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163950
- exit_code: 0
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n <= 1) return false;\n    if (n <= 3) return true;\n    if (n % 2 ==\
    \ 0 || n % 3 == 0) return false;\n    for (long i = 5; i * i <= n; i += 6) \n\
    \    {\n        if (n % i == 0 || n % (i + 2) == 0) return false;\n    }\n   \
    \ return true;\n}\nunittest\n{\n    alias candidate = is_prime;\n\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(101L) == true);\n    assert(candidate(11L)\
    \ == true);\n    assert(candidate(13441L) == true);\n    assert(candidate(61L)\
    \ == true);\n    assert(candidate(4L) == false);\n    assert(candidate(1L) ==\
    \ false);\n    assert(candidate(5L) == true);\n    assert(candidate(11L) == true);\n\
    \    assert(candidate(17L) == true);\n    assert(candidate(85L) == false);\n \
    \   assert(candidate(77L) == false);\n    assert(candidate(255379L) == false);\n\
    }\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163950
- exit_code: 1
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n <= 1) return false;\n    if (n == 2) return true;\n    if (n % 2 ==\
    \ 0) return false;\n    for (long i = 3; i <= sqrt(n); i += 2)\n    {\n      \
    \  if (n % i == 0) return false;\n    }\n    return true;\n}\nunittest\n{\n  \
    \  alias candidate = is_prime;\n\n    assert(candidate(6L) == false);\n    assert(candidate(101L)\
    \ == true);\n    assert(candidate(11L) == true);\n    assert(candidate(13441L)\
    \ == true);\n    assert(candidate(61L) == true);\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(1L) == false);\n    assert(candidate(5L) == true);\n\
    \    assert(candidate(11L) == true);\n    assert(candidate(17L) == true);\n  \
    \  assert(candidate(85L) == false);\n    assert(candidate(77L) == false);\n  \
    \  assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpwqwpihuc.d(11): Error: `std.math.sqrt` called with argument types
    `(long)` matches both:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float
    x)`

    and:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real
    x)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwqwpihuc.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163949
- exit_code: 0
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n <= 1)\n        return false;\n    else if (n <= 3)\n        return\
    \ true;\n    else if (n % 2 == 0 || n % 3 == 0)\n        return false;\n    long\
    \ i = 5;\n    while (i * i <= n) {\n        if (n % i == 0 || n % (i + 2) == 0)\n\
    \            return false;\n        i += 6;\n    }\n    return true;\n}\nunittest\n\
    {\n    alias candidate = is_prime;\n\n    assert(candidate(6L) == false);\n  \
    \  assert(candidate(101L) == true);\n    assert(candidate(11L) == true);\n   \
    \ assert(candidate(13441L) == true);\n    assert(candidate(61L) == true);\n  \
    \  assert(candidate(4L) == false);\n    assert(candidate(1L) == false);\n    assert(candidate(5L)\
    \ == true);\n    assert(candidate(11L) == true);\n    assert(candidate(17L) ==\
    \ true);\n    assert(candidate(85L) == false);\n    assert(candidate(77L) == false);\n\
    \    assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163950
- exit_code: 1
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n < 2)\n        return false;\n    if (n == 2)\n        return true;\n\
    \    if (n % 2 == 0)\n        return false;\n    for (long i = 3; i <= sqrt(n);\
    \ i += 2)\n        if (n % i == 0)\n            return false;\n    return true;\n\
    }\nunittest\n{\n    alias candidate = is_prime;\n\n    assert(candidate(6L) ==\
    \ false);\n    assert(candidate(101L) == true);\n    assert(candidate(11L) ==\
    \ true);\n    assert(candidate(13441L) == true);\n    assert(candidate(61L) ==\
    \ true);\n    assert(candidate(4L) == false);\n    assert(candidate(1L) == false);\n\
    \    assert(candidate(5L) == true);\n    assert(candidate(11L) == true);\n   \
    \ assert(candidate(17L) == true);\n    assert(candidate(85L) == false);\n    assert(candidate(77L)\
    \ == false);\n    assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpb2l1dt3r.d(14): Error: `std.math.sqrt` called with argument types
    `(long)` matches both:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float
    x)`

    and:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real
    x)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpb2l1dt3r.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163949
- exit_code: 1
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n < 2) return false;\n    if (n == 2) return true;\n    if (n % 2 ==\
    \ 0) return false;\n    for (long i = 3; i <= sqrt(n); i += 2)\n    {\n      \
    \  if (n % i == 0) return false;\n    }\n    return true;\n}\nunittest\n{\n  \
    \  alias candidate = is_prime;\n\n    assert(candidate(6L) == false);\n    assert(candidate(101L)\
    \ == true);\n    assert(candidate(11L) == true);\n    assert(candidate(13441L)\
    \ == true);\n    assert(candidate(61L) == true);\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(1L) == false);\n    assert(candidate(5L) == true);\n\
    \    assert(candidate(11L) == true);\n    assert(candidate(17L) == true);\n  \
    \  assert(candidate(85L) == false);\n    assert(candidate(77L) == false);\n  \
    \  assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpwiv99psh.d(11): Error: `std.math.sqrt` called with argument types
    `(long)` matches both:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float
    x)`

    and:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real
    x)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwiv99psh.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163949
- exit_code: 0
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n <= 1) \n        return false;\n    else if (n <= 3) \n        return\
    \ true;\n    else if (n % 2 == 0 || n % 3 == 0) \n        return false;\n    long\
    \ i = 5;\n    while (i * i <= n) \n    {\n        if (n % i == 0 || n % (i + 2)\
    \ == 0) \n            return false;\n        i = i + 6;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = is_prime;\n\n    assert(candidate(6L) ==\
    \ false);\n    assert(candidate(101L) == true);\n    assert(candidate(11L) ==\
    \ true);\n    assert(candidate(13441L) == true);\n    assert(candidate(61L) ==\
    \ true);\n    assert(candidate(4L) == false);\n    assert(candidate(1L) == false);\n\
    \    assert(candidate(5L) == true);\n    assert(candidate(11L) == true);\n   \
    \ assert(candidate(17L) == true);\n    assert(candidate(85L) == false);\n    assert(candidate(77L)\
    \ == false);\n    assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163950
- exit_code: 0
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n <= 1) \n    {\n        return false;\n    }\n    if (n <= 3) \n   \
    \ {\n        return true;\n    }\n    if (n % 2 == 0 || n % 3 == 0) \n    {\n\
    \        return false;\n    }\n    for (long i = 5; i * i <= n; i += 6) \n   \
    \ {\n        if (n % i == 0 || n % (i + 2) == 0) \n        {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\nunittest\n{\n    alias candidate\
    \ = is_prime;\n\n    assert(candidate(6L) == false);\n    assert(candidate(101L)\
    \ == true);\n    assert(candidate(11L) == true);\n    assert(candidate(13441L)\
    \ == true);\n    assert(candidate(61L) == true);\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(1L) == false);\n    assert(candidate(5L) == true);\n\
    \    assert(candidate(11L) == true);\n    assert(candidate(17L) == true);\n  \
    \  assert(candidate(85L) == false);\n    assert(candidate(77L) == false);\n  \
    \  assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163950
- exit_code: 1
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n < 2) return false;\n    if (n == 2) return true;\n    if (n % 2 ==\
    \ 0) return false;\n    for (long i = 3; i <= sqrt(n); i += 2)\n    {\n      \
    \  if (n % i == 0) return false;\n    }\n    return true;\n}\nunittest\n{\n  \
    \  alias candidate = is_prime;\n\n    assert(candidate(6L) == false);\n    assert(candidate(101L)\
    \ == true);\n    assert(candidate(11L) == true);\n    assert(candidate(13441L)\
    \ == true);\n    assert(candidate(61L) == true);\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(1L) == false);\n    assert(candidate(5L) == true);\n\
    \    assert(candidate(11L) == true);\n    assert(candidate(17L) == true);\n  \
    \  assert(candidate(85L) == false);\n    assert(candidate(77L) == false);\n  \
    \  assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpwiv99psh.d(11): Error: `std.math.sqrt` called with argument types
    `(long)` matches both:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float
    x)`

    and:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real
    x)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwiv99psh.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163949
- exit_code: 0
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n <= 1)\n        return false;\n    if (n <= 3)\n        return true;\n\
    \    if (n % 2 == 0 || n % 3 == 0)\n        return false;\n    for (int i = 5;\
    \ i * i <= n; i = i + 6)\n        if (n % i == 0 || n % (i + 2) == 0)\n      \
    \      return false;\n    return true;\n}\nunittest\n{\n    alias candidate =\
    \ is_prime;\n\n    assert(candidate(6L) == false);\n    assert(candidate(101L)\
    \ == true);\n    assert(candidate(11L) == true);\n    assert(candidate(13441L)\
    \ == true);\n    assert(candidate(61L) == true);\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(1L) == false);\n    assert(candidate(5L) == true);\n\
    \    assert(candidate(11L) == true);\n    assert(candidate(17L) == true);\n  \
    \  assert(candidate(85L) == false);\n    assert(candidate(77L) == false);\n  \
    \  assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163950
- exit_code: 0
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n <= 1)\n        return false;\n    else if (n <= 3)\n        return\
    \ true;\n    else if (n % 2 == 0 || n % 3 == 0)\n        return false;\n    else\n\
    \    {\n        for (long i = 5; i * i <= n; i += 6)\n        {\n            if\
    \ (n % i == 0 || n % (i + 2) == 0)\n                return false;\n        }\n\
    \        return true;\n    }\n}\nunittest\n{\n    alias candidate = is_prime;\n\
    \n    assert(candidate(6L) == false);\n    assert(candidate(101L) == true);\n\
    \    assert(candidate(11L) == true);\n    assert(candidate(13441L) == true);\n\
    \    assert(candidate(61L) == true);\n    assert(candidate(4L) == false);\n  \
    \  assert(candidate(1L) == false);\n    assert(candidate(5L) == true);\n    assert(candidate(11L)\
    \ == true);\n    assert(candidate(17L) == true);\n    assert(candidate(85L) ==\
    \ false);\n    assert(candidate(77L) == false);\n    assert(candidate(255379L)\
    \ == false);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163950
- exit_code: 1
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n < 2)\n        return false;\n    if (n == 2)\n        return true;\n\
    \    if (n % 2 == 0)\n        return false;\n    for (long i = 3; i <= sqrt(n);\
    \ i += 2)\n        if (n % i == 0)\n            return false;\n    return true;\n\
    }\nunittest\n{\n    alias candidate = is_prime;\n\n    assert(candidate(6L) ==\
    \ false);\n    assert(candidate(101L) == true);\n    assert(candidate(11L) ==\
    \ true);\n    assert(candidate(13441L) == true);\n    assert(candidate(61L) ==\
    \ true);\n    assert(candidate(4L) == false);\n    assert(candidate(1L) == false);\n\
    \    assert(candidate(5L) == true);\n    assert(candidate(11L) == true);\n   \
    \ assert(candidate(17L) == true);\n    assert(candidate(85L) == false);\n    assert(candidate(77L)\
    \ == false);\n    assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpb2l1dt3r.d(14): Error: `std.math.sqrt` called with argument types
    `(long)` matches both:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float
    x)`

    and:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real
    x)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpb2l1dt3r.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163949
- exit_code: 1
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n < 2) return false;\n    if (n == 2) return true;\n    if (n % 2 ==\
    \ 0) return false;\n    for (long i = 3; i <= sqrt(n); i += 2)\n    {\n      \
    \  if (n % i == 0) return false;\n    }\n    return true;\n}\nunittest\n{\n  \
    \  alias candidate = is_prime;\n\n    assert(candidate(6L) == false);\n    assert(candidate(101L)\
    \ == true);\n    assert(candidate(11L) == true);\n    assert(candidate(13441L)\
    \ == true);\n    assert(candidate(61L) == true);\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(1L) == false);\n    assert(candidate(5L) == true);\n\
    \    assert(candidate(11L) == true);\n    assert(candidate(17L) == true);\n  \
    \  assert(candidate(85L) == false);\n    assert(candidate(77L) == false);\n  \
    \  assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpwiv99psh.d(11): Error: `std.math.sqrt` called with argument types
    `(long)` matches both:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float
    x)`

    and:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real
    x)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwiv99psh.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163949
- exit_code: 1
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n < 2) return false;\n    if (n == 2) return true;\n    if (n % 2 ==\
    \ 0) return false;\n    for (long i = 3; i <= sqrt(n); i += 2)\n    {\n      \
    \  if (n % i == 0) return false;\n    }\n    return true;\n}\nunittest\n{\n  \
    \  alias candidate = is_prime;\n\n    assert(candidate(6L) == false);\n    assert(candidate(101L)\
    \ == true);\n    assert(candidate(11L) == true);\n    assert(candidate(13441L)\
    \ == true);\n    assert(candidate(61L) == true);\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(1L) == false);\n    assert(candidate(5L) == true);\n\
    \    assert(candidate(11L) == true);\n    assert(candidate(17L) == true);\n  \
    \  assert(candidate(85L) == false);\n    assert(candidate(77L) == false);\n  \
    \  assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpwiv99psh.d(11): Error: `std.math.sqrt` called with argument types
    `(long)` matches both:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float
    x)`

    and:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real
    x)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwiv99psh.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163949
- exit_code: 0
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n <= 1) \n        return false;\n    else if (n <= 3) \n        return\
    \ true;\n    else if (n % 2 == 0 || n % 3 == 0) \n        return false;\n    long\
    \ i = 5;\n    while (i * i <= n) \n    {\n        if (n % i == 0 || n % (i + 2)\
    \ == 0) \n            return false;\n        i = i + 6;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = is_prime;\n\n    assert(candidate(6L) ==\
    \ false);\n    assert(candidate(101L) == true);\n    assert(candidate(11L) ==\
    \ true);\n    assert(candidate(13441L) == true);\n    assert(candidate(61L) ==\
    \ true);\n    assert(candidate(4L) == false);\n    assert(candidate(1L) == false);\n\
    \    assert(candidate(5L) == true);\n    assert(candidate(11L) == true);\n   \
    \ assert(candidate(17L) == true);\n    assert(candidate(85L) == false);\n    assert(candidate(77L)\
    \ == false);\n    assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163950
- exit_code: 1
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n < 2) return false;\n    if (n == 2) return true;\n    if (n % 2 ==\
    \ 0) return false;\n    for (long i = 3; i <= sqrt(n); i += 2)\n    {\n      \
    \  if (n % i == 0) return false;\n    }\n    return true;\n}\nunittest\n{\n  \
    \  alias candidate = is_prime;\n\n    assert(candidate(6L) == false);\n    assert(candidate(101L)\
    \ == true);\n    assert(candidate(11L) == true);\n    assert(candidate(13441L)\
    \ == true);\n    assert(candidate(61L) == true);\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(1L) == false);\n    assert(candidate(5L) == true);\n\
    \    assert(candidate(11L) == true);\n    assert(candidate(17L) == true);\n  \
    \  assert(candidate(85L) == false);\n    assert(candidate(77L) == false);\n  \
    \  assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpwiv99psh.d(11): Error: `std.math.sqrt` called with argument types
    `(long)` matches both:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float
    x)`

    and:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real
    x)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwiv99psh.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163949
- exit_code: 1
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n < 2) return false;\n    if (n == 2) return true;\n    if (n % 2 ==\
    \ 0) return false;\n    for (long i = 3; i <= sqrt(n); i += 2)\n    {\n      \
    \  if (n % i == 0) return false;\n    }\n    return true;\n}\nunittest\n{\n  \
    \  alias candidate = is_prime;\n\n    assert(candidate(6L) == false);\n    assert(candidate(101L)\
    \ == true);\n    assert(candidate(11L) == true);\n    assert(candidate(13441L)\
    \ == true);\n    assert(candidate(61L) == true);\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(1L) == false);\n    assert(candidate(5L) == true);\n\
    \    assert(candidate(11L) == true);\n    assert(candidate(17L) == true);\n  \
    \  assert(candidate(85L) == false);\n    assert(candidate(77L) == false);\n  \
    \  assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpwiv99psh.d(11): Error: `std.math.sqrt` called with argument types
    `(long)` matches both:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float
    x)`

    and:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real
    x)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwiv99psh.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163949
- exit_code: 1
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n < 2) return false;\n    if (n == 2) return true;\n    if (n % 2 ==\
    \ 0) return false;\n    for (long i = 3; i <= sqrt(n); i += 2)\n    {\n      \
    \  if (n % i == 0) return false;\n    }\n    return true;\n}\nunittest\n{\n  \
    \  alias candidate = is_prime;\n\n    assert(candidate(6L) == false);\n    assert(candidate(101L)\
    \ == true);\n    assert(candidate(11L) == true);\n    assert(candidate(13441L)\
    \ == true);\n    assert(candidate(61L) == true);\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(1L) == false);\n    assert(candidate(5L) == true);\n\
    \    assert(candidate(11L) == true);\n    assert(candidate(17L) == true);\n  \
    \  assert(candidate(85L) == false);\n    assert(candidate(77L) == false);\n  \
    \  assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpwiv99psh.d(11): Error: `std.math.sqrt` called with argument types
    `(long)` matches both:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float
    x)`

    and:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real
    x)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwiv99psh.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163949
- exit_code: 1
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n < 2) \n        return false;\n    if (n == 2) \n        return true;\n\
    \    if (n % 2 == 0) \n        return false;\n    foreach (i; 2 .. sqrt(n) + 1)\
    \ \n    {\n        if (n % i == 0) \n            return false;\n    }\n    return\
    \ true;\n}\nunittest\n{\n    alias candidate = is_prime;\n\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(101L) == true);\n    assert(candidate(11L)\
    \ == true);\n    assert(candidate(13441L) == true);\n    assert(candidate(61L)\
    \ == true);\n    assert(candidate(4L) == false);\n    assert(candidate(1L) ==\
    \ false);\n    assert(candidate(5L) == true);\n    assert(candidate(11L) == true);\n\
    \    assert(candidate(17L) == true);\n    assert(candidate(85L) == false);\n \
    \   assert(candidate(77L) == false);\n    assert(candidate(255379L) == false);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp8gyp8cnp.d(14): Error: `std.math.sqrt` called with argument types
    `(long)` matches both:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float
    x)`

    and:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real
    x)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8gyp8cnp.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163949
- exit_code: 1
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n <= 1) return false;\n    if (n == 2) return true;\n    if (n % 2 ==\
    \ 0) return false;\n    for (long i = 3; i <= sqrt(n); i += 2) \n    {\n     \
    \   if (n % i == 0) return false;\n    }\n    return true;\n}\nunittest\n{\n \
    \   alias candidate = is_prime;\n\n    assert(candidate(6L) == false);\n    assert(candidate(101L)\
    \ == true);\n    assert(candidate(11L) == true);\n    assert(candidate(13441L)\
    \ == true);\n    assert(candidate(61L) == true);\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(1L) == false);\n    assert(candidate(5L) == true);\n\
    \    assert(candidate(11L) == true);\n    assert(candidate(17L) == true);\n  \
    \  assert(candidate(85L) == false);\n    assert(candidate(77L) == false);\n  \
    \  assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpb2jbq_7k.d(11): Error: `std.math.sqrt` called with argument types
    `(long)` matches both:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float
    x)`

    and:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real
    x)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpb2jbq_7k.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163949
- exit_code: 1
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n < 2) return false;\n    if (n == 2) return true;\n    if (n % 2 ==\
    \ 0) return false;\n    for (long i = 3; i <= sqrt(n); i += 2) \n    {\n     \
    \   if (n % i == 0) return false;\n    }\n    return true;\n}\nunittest\n{\n \
    \   alias candidate = is_prime;\n\n    assert(candidate(6L) == false);\n    assert(candidate(101L)\
    \ == true);\n    assert(candidate(11L) == true);\n    assert(candidate(13441L)\
    \ == true);\n    assert(candidate(61L) == true);\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(1L) == false);\n    assert(candidate(5L) == true);\n\
    \    assert(candidate(11L) == true);\n    assert(candidate(17L) == true);\n  \
    \  assert(candidate(85L) == false);\n    assert(candidate(77L) == false);\n  \
    \  assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpk_l25oio.d(11): Error: `std.math.sqrt` called with argument types
    `(long)` matches both:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float
    x)`

    and:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real
    x)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk_l25oio.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163949
- exit_code: 1
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n <= 1) return false;\n    if (n == 2) return true;\n    if (n % 2 ==\
    \ 0) return false;\n    for (long i = 3; i <= sqrt(n); i += 2)\n    {\n      \
    \  if (n % i == 0) return false;\n    }\n    return true;\n}\nunittest\n{\n  \
    \  alias candidate = is_prime;\n\n    assert(candidate(6L) == false);\n    assert(candidate(101L)\
    \ == true);\n    assert(candidate(11L) == true);\n    assert(candidate(13441L)\
    \ == true);\n    assert(candidate(61L) == true);\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(1L) == false);\n    assert(candidate(5L) == true);\n\
    \    assert(candidate(11L) == true);\n    assert(candidate(17L) == true);\n  \
    \  assert(candidate(85L) == false);\n    assert(candidate(77L) == false);\n  \
    \  assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpwqwpihuc.d(11): Error: `std.math.sqrt` called with argument types
    `(long)` matches both:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float
    x)`

    and:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real
    x)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwqwpihuc.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163949
- exit_code: 1
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n < 2) return false;\n    if (n == 2) return true;\n    if (n % 2 ==\
    \ 0) return false;\n    for (long i = 3; i <= sqrt(n); i += 2)\n    {\n      \
    \  if (n % i == 0) return false;\n    }\n    return true;\n}\nunittest\n{\n  \
    \  alias candidate = is_prime;\n\n    assert(candidate(6L) == false);\n    assert(candidate(101L)\
    \ == true);\n    assert(candidate(11L) == true);\n    assert(candidate(13441L)\
    \ == true);\n    assert(candidate(61L) == true);\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(1L) == false);\n    assert(candidate(5L) == true);\n\
    \    assert(candidate(11L) == true);\n    assert(candidate(17L) == true);\n  \
    \  assert(candidate(85L) == false);\n    assert(candidate(77L) == false);\n  \
    \  assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpwiv99psh.d(11): Error: `std.math.sqrt` called with argument types
    `(long)` matches both:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float
    x)`

    and:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real
    x)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwiv99psh.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163949
- exit_code: 0
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n <= 1) return false;\n    if (n <= 3) return true;\n    if (n % 2 ==\
    \ 0 || n % 3 == 0) return false;\n    for (long i = 5; i * i <= n; i += 6) \n\
    \    {\n        if (n % i == 0 || n % (i + 2) == 0) return false;\n    }\n   \
    \ return true;\n}\nunittest\n{\n    alias candidate = is_prime;\n\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(101L) == true);\n    assert(candidate(11L)\
    \ == true);\n    assert(candidate(13441L) == true);\n    assert(candidate(61L)\
    \ == true);\n    assert(candidate(4L) == false);\n    assert(candidate(1L) ==\
    \ false);\n    assert(candidate(5L) == true);\n    assert(candidate(11L) == true);\n\
    \    assert(candidate(17L) == true);\n    assert(candidate(85L) == false);\n \
    \   assert(candidate(77L) == false);\n    assert(candidate(255379L) == false);\n\
    }\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163950
- exit_code: 1
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n < 2) return false;\n    if (n == 2) return true;\n    if (n % 2 ==\
    \ 0) return false;\n    for (long i = 3; i <= sqrt(n); i += 2)\n    {\n      \
    \  if (n % i == 0) return false;\n    }\n    return true;\n}\nunittest\n{\n  \
    \  alias candidate = is_prime;\n\n    assert(candidate(6L) == false);\n    assert(candidate(101L)\
    \ == true);\n    assert(candidate(11L) == true);\n    assert(candidate(13441L)\
    \ == true);\n    assert(candidate(61L) == true);\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(1L) == false);\n    assert(candidate(5L) == true);\n\
    \    assert(candidate(11L) == true);\n    assert(candidate(17L) == true);\n  \
    \  assert(candidate(85L) == false);\n    assert(candidate(77L) == false);\n  \
    \  assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpwiv99psh.d(11): Error: `std.math.sqrt` called with argument types
    `(long)` matches both:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float
    x)`

    and:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real
    x)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwiv99psh.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163949
- exit_code: 1
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n < 2) return false;\n    if (n == 2) return true;\n    if (n % 2 ==\
    \ 0) return false;\n    for (long i = 3; i <= sqrt(n); i += 2)\n    {\n      \
    \  if (n % i == 0) return false;\n    }\n    return true;\n}\nunittest\n{\n  \
    \  alias candidate = is_prime;\n\n    assert(candidate(6L) == false);\n    assert(candidate(101L)\
    \ == true);\n    assert(candidate(11L) == true);\n    assert(candidate(13441L)\
    \ == true);\n    assert(candidate(61L) == true);\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(1L) == false);\n    assert(candidate(5L) == true);\n\
    \    assert(candidate(11L) == true);\n    assert(candidate(17L) == true);\n  \
    \  assert(candidate(85L) == false);\n    assert(candidate(77L) == false);\n  \
    \  assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpwiv99psh.d(11): Error: `std.math.sqrt` called with argument types
    `(long)` matches both:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float
    x)`

    and:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real
    x)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwiv99psh.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163949
- exit_code: 1
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n <= 1) return false;\n    if (n == 2) return true;\n    if (n % 2 ==\
    \ 0) return false;\n    for (long i = 3; i <= sqrt(n); i += 2) \n    {\n     \
    \   if (n % i == 0) return false;\n    }\n    return true;\n}\nunittest\n{\n \
    \   alias candidate = is_prime;\n\n    assert(candidate(6L) == false);\n    assert(candidate(101L)\
    \ == true);\n    assert(candidate(11L) == true);\n    assert(candidate(13441L)\
    \ == true);\n    assert(candidate(61L) == true);\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(1L) == false);\n    assert(candidate(5L) == true);\n\
    \    assert(candidate(11L) == true);\n    assert(candidate(17L) == true);\n  \
    \  assert(candidate(85L) == false);\n    assert(candidate(77L) == false);\n  \
    \  assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpb2jbq_7k.d(11): Error: `std.math.sqrt` called with argument types
    `(long)` matches both:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float
    x)`

    and:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real
    x)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpb2jbq_7k.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163949
- exit_code: 1
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n < 2) return false;\n    if (n == 2) return true;\n    if (n % 2 ==\
    \ 0) return false;\n    for (long i = 3; i <= sqrt(n); i += 2)\n    {\n      \
    \  if (n % i == 0) return false;\n    }\n    return true;\n}\nunittest\n{\n  \
    \  alias candidate = is_prime;\n\n    assert(candidate(6L) == false);\n    assert(candidate(101L)\
    \ == true);\n    assert(candidate(11L) == true);\n    assert(candidate(13441L)\
    \ == true);\n    assert(candidate(61L) == true);\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(1L) == false);\n    assert(candidate(5L) == true);\n\
    \    assert(candidate(11L) == true);\n    assert(candidate(17L) == true);\n  \
    \  assert(candidate(85L) == false);\n    assert(candidate(77L) == false);\n  \
    \  assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpwiv99psh.d(11): Error: `std.math.sqrt` called with argument types
    `(long)` matches both:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float
    x)`

    and:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real
    x)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwiv99psh.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163949
- exit_code: 1
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n < 2) return false;\n    if (n == 2) return true;\n    if (n % 2 ==\
    \ 0) return false;\n    for (long i = 3; i <= sqrt(n); i += 2)\n    {\n      \
    \  if (n % i == 0) return false;\n    }\n    return true;\n}\nunittest\n{\n  \
    \  alias candidate = is_prime;\n\n    assert(candidate(6L) == false);\n    assert(candidate(101L)\
    \ == true);\n    assert(candidate(11L) == true);\n    assert(candidate(13441L)\
    \ == true);\n    assert(candidate(61L) == true);\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(1L) == false);\n    assert(candidate(5L) == true);\n\
    \    assert(candidate(11L) == true);\n    assert(candidate(17L) == true);\n  \
    \  assert(candidate(85L) == false);\n    assert(candidate(77L) == false);\n  \
    \  assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpwiv99psh.d(11): Error: `std.math.sqrt` called with argument types
    `(long)` matches both:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float
    x)`

    and:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real
    x)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwiv99psh.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163949
- exit_code: 1
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n <= 1)\n        return false;\n    if (n == 2)\n        return true;\n\
    \    if (n % 2 == 0)\n        return false;\n    for (long i = 3; i <= sqrt(n);\
    \ i += 2)\n        if (n % i == 0)\n            return false;\n    return true;\n\
    }\nunittest\n{\n    alias candidate = is_prime;\n\n    assert(candidate(6L) ==\
    \ false);\n    assert(candidate(101L) == true);\n    assert(candidate(11L) ==\
    \ true);\n    assert(candidate(13441L) == true);\n    assert(candidate(61L) ==\
    \ true);\n    assert(candidate(4L) == false);\n    assert(candidate(1L) == false);\n\
    \    assert(candidate(5L) == true);\n    assert(candidate(11L) == true);\n   \
    \ assert(candidate(17L) == true);\n    assert(candidate(85L) == false);\n    assert(candidate(77L)\
    \ == false);\n    assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp2opzo5tf.d(14): Error: `std.math.sqrt` called with argument types
    `(long)` matches both:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float
    x)`

    and:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real
    x)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2opzo5tf.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163949
- exit_code: 0
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n <= 1) \n        return false;\n    if (n <= 3) \n        return true;\n\
    \    if (n % 2 == 0 || n % 3 == 0) \n        return false;\n    for (long i =\
    \ 5; i * i <= n; i = i + 6) \n        if (n % i == 0 || n % (i + 2) == 0) \n \
    \           return false;\n    return true;\n}\nunittest\n{\n    alias candidate\
    \ = is_prime;\n\n    assert(candidate(6L) == false);\n    assert(candidate(101L)\
    \ == true);\n    assert(candidate(11L) == true);\n    assert(candidate(13441L)\
    \ == true);\n    assert(candidate(61L) == true);\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(1L) == false);\n    assert(candidate(5L) == true);\n\
    \    assert(candidate(11L) == true);\n    assert(candidate(17L) == true);\n  \
    \  assert(candidate(85L) == false);\n    assert(candidate(77L) == false);\n  \
    \  assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163950
- exit_code: 0
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n <= 1) \n    {\n        return false;\n    }\n    else if (n <= 3) \n\
    \    {\n        return true;\n    }\n    else if (n % 2 == 0 || n % 3 == 0) \n\
    \    {\n        return false;\n    }\n    long i = 5;\n    while (i * i <= n)\
    \ \n    {\n        if (n % i == 0 || n % (i + 2) == 0) \n        {\n         \
    \   return false;\n        }\n        i = i + 6;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = is_prime;\n\n    assert(candidate(6L) == false);\n\
    \    assert(candidate(101L) == true);\n    assert(candidate(11L) == true);\n \
    \   assert(candidate(13441L) == true);\n    assert(candidate(61L) == true);\n\
    \    assert(candidate(4L) == false);\n    assert(candidate(1L) == false);\n  \
    \  assert(candidate(5L) == true);\n    assert(candidate(11L) == true);\n    assert(candidate(17L)\
    \ == true);\n    assert(candidate(85L) == false);\n    assert(candidate(77L) ==\
    \ false);\n    assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163950
- exit_code: 0
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n <= 1) return false;\n    if (n <= 3) return true;\n    if (n % 2 ==\
    \ 0 || n % 3 == 0) return false;\n    for (long i = 5; i * i <= n; i += 6) \n\
    \    {\n        if (n % i == 0 || n % (i + 2) == 0) return false;\n    }\n   \
    \ return true;\n}\nunittest\n{\n    alias candidate = is_prime;\n\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(101L) == true);\n    assert(candidate(11L)\
    \ == true);\n    assert(candidate(13441L) == true);\n    assert(candidate(61L)\
    \ == true);\n    assert(candidate(4L) == false);\n    assert(candidate(1L) ==\
    \ false);\n    assert(candidate(5L) == true);\n    assert(candidate(11L) == true);\n\
    \    assert(candidate(17L) == true);\n    assert(candidate(85L) == false);\n \
    \   assert(candidate(77L) == false);\n    assert(candidate(255379L) == false);\n\
    }\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163950
- exit_code: 0
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n <= 1)\n        return false;\n    else if (n <= 3)\n        return\
    \ true;\n    else if (n % 2 == 0 || n % 3 == 0)\n        return false;\n    long\
    \ i = 5;\n    while (i * i <= n) \n    {\n        if (n % i == 0 || n % (i + 2)\
    \ == 0)\n            return false;\n        i = i + 6;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = is_prime;\n\n    assert(candidate(6L) ==\
    \ false);\n    assert(candidate(101L) == true);\n    assert(candidate(11L) ==\
    \ true);\n    assert(candidate(13441L) == true);\n    assert(candidate(61L) ==\
    \ true);\n    assert(candidate(4L) == false);\n    assert(candidate(1L) == false);\n\
    \    assert(candidate(5L) == true);\n    assert(candidate(11L) == true);\n   \
    \ assert(candidate(17L) == true);\n    assert(candidate(85L) == false);\n    assert(candidate(77L)\
    \ == false);\n    assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163950
- exit_code: 1
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n < 2)\n        return false;\n    if (n == 2)\n        return true;\n\
    \    if (n % 2 == 0)\n        return false;\n    for (long i = 3; i <= sqrt(n);\
    \ i += 2)\n        if (n % i == 0)\n            return false;\n    return true;\n\
    }\nunittest\n{\n    alias candidate = is_prime;\n\n    assert(candidate(6L) ==\
    \ false);\n    assert(candidate(101L) == true);\n    assert(candidate(11L) ==\
    \ true);\n    assert(candidate(13441L) == true);\n    assert(candidate(61L) ==\
    \ true);\n    assert(candidate(4L) == false);\n    assert(candidate(1L) == false);\n\
    \    assert(candidate(5L) == true);\n    assert(candidate(11L) == true);\n   \
    \ assert(candidate(17L) == true);\n    assert(candidate(85L) == false);\n    assert(candidate(77L)\
    \ == false);\n    assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpb2l1dt3r.d(14): Error: `std.math.sqrt` called with argument types
    `(long)` matches both:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float
    x)`

    and:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real
    x)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpb2l1dt3r.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163949
- exit_code: 1
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n < 2) return false;\n    if (n == 2) return true;\n    if (n % 2 ==\
    \ 0) return false;\n    for (long i = 3; i <= sqrt(n); i += 2)\n    {\n      \
    \  if (n % i == 0) return false;\n    }\n    return true;\n}\nunittest\n{\n  \
    \  alias candidate = is_prime;\n\n    assert(candidate(6L) == false);\n    assert(candidate(101L)\
    \ == true);\n    assert(candidate(11L) == true);\n    assert(candidate(13441L)\
    \ == true);\n    assert(candidate(61L) == true);\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(1L) == false);\n    assert(candidate(5L) == true);\n\
    \    assert(candidate(11L) == true);\n    assert(candidate(17L) == true);\n  \
    \  assert(candidate(85L) == false);\n    assert(candidate(77L) == false);\n  \
    \  assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpwiv99psh.d(11): Error: `std.math.sqrt` called with argument types
    `(long)` matches both:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float
    x)`

    and:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real
    x)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwiv99psh.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163949
- exit_code: 1
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n <= 1) return false;\n    if (n == 2) return true;\n    if (n % 2 ==\
    \ 0) return false;\n    for (long i = 3; i <= sqrt(n); i += 2)\n    {\n      \
    \  if (n % i == 0) return false;\n    }\n    return true;\n}\nunittest\n{\n  \
    \  alias candidate = is_prime;\n\n    assert(candidate(6L) == false);\n    assert(candidate(101L)\
    \ == true);\n    assert(candidate(11L) == true);\n    assert(candidate(13441L)\
    \ == true);\n    assert(candidate(61L) == true);\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(1L) == false);\n    assert(candidate(5L) == true);\n\
    \    assert(candidate(11L) == true);\n    assert(candidate(17L) == true);\n  \
    \  assert(candidate(85L) == false);\n    assert(candidate(77L) == false);\n  \
    \  assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpwqwpihuc.d(11): Error: `std.math.sqrt` called with argument types
    `(long)` matches both:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float
    x)`

    and:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real
    x)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwqwpihuc.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163949
- exit_code: 1
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n < 2) return false;\n    if (n == 2) return true;\n    if (n % 2 ==\
    \ 0) return false;\n    for (long i = 3; i <= sqrt(n); i += 2)\n    {\n      \
    \  if (n % i == 0) return false;\n    }\n    return true;\n}\nunittest\n{\n  \
    \  alias candidate = is_prime;\n\n    assert(candidate(6L) == false);\n    assert(candidate(101L)\
    \ == true);\n    assert(candidate(11L) == true);\n    assert(candidate(13441L)\
    \ == true);\n    assert(candidate(61L) == true);\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(1L) == false);\n    assert(candidate(5L) == true);\n\
    \    assert(candidate(11L) == true);\n    assert(candidate(17L) == true);\n  \
    \  assert(candidate(85L) == false);\n    assert(candidate(77L) == false);\n  \
    \  assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpwiv99psh.d(11): Error: `std.math.sqrt` called with argument types
    `(long)` matches both:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float
    x)`

    and:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real
    x)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwiv99psh.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163949
- exit_code: 1
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n < 2) return false;\n    if (n == 2) return true;\n    if (n % 2 ==\
    \ 0) return false;\n    for (long i = 3; i <= sqrt(n); i += 2)\n    {\n      \
    \  if (n % i == 0) return false;\n    }\n    return true;\n}\nunittest\n{\n  \
    \  alias candidate = is_prime;\n\n    assert(candidate(6L) == false);\n    assert(candidate(101L)\
    \ == true);\n    assert(candidate(11L) == true);\n    assert(candidate(13441L)\
    \ == true);\n    assert(candidate(61L) == true);\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(1L) == false);\n    assert(candidate(5L) == true);\n\
    \    assert(candidate(11L) == true);\n    assert(candidate(17L) == true);\n  \
    \  assert(candidate(85L) == false);\n    assert(candidate(77L) == false);\n  \
    \  assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpwiv99psh.d(11): Error: `std.math.sqrt` called with argument types
    `(long)` matches both:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float
    x)`

    and:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real
    x)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwiv99psh.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163949
- exit_code: 1
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n < 2)\n        return false;\n    if (n == 2)\n        return true;\n\
    \    if (n % 2 == 0)\n        return false;\n    for (long i = 3; i <= sqrt(n);\
    \ i += 2)\n        if (n % i == 0)\n            return false;\n    return true;\n\
    }\nunittest\n{\n    alias candidate = is_prime;\n\n    assert(candidate(6L) ==\
    \ false);\n    assert(candidate(101L) == true);\n    assert(candidate(11L) ==\
    \ true);\n    assert(candidate(13441L) == true);\n    assert(candidate(61L) ==\
    \ true);\n    assert(candidate(4L) == false);\n    assert(candidate(1L) == false);\n\
    \    assert(candidate(5L) == true);\n    assert(candidate(11L) == true);\n   \
    \ assert(candidate(17L) == true);\n    assert(candidate(85L) == false);\n    assert(candidate(77L)\
    \ == false);\n    assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpb2l1dt3r.d(14): Error: `std.math.sqrt` called with argument types
    `(long)` matches both:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float
    x)`

    and:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real
    x)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpb2l1dt3r.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163949
- exit_code: 1
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n <= 1) return false;\n    if (n == 2) return true;\n    if (n % 2 ==\
    \ 0) return false;\n    for (long i = 3; i <= sqrt(n); i += 2)\n    {\n      \
    \  if (n % i == 0) return false;\n    }\n    return true;\n}\nunittest\n{\n  \
    \  alias candidate = is_prime;\n\n    assert(candidate(6L) == false);\n    assert(candidate(101L)\
    \ == true);\n    assert(candidate(11L) == true);\n    assert(candidate(13441L)\
    \ == true);\n    assert(candidate(61L) == true);\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(1L) == false);\n    assert(candidate(5L) == true);\n\
    \    assert(candidate(11L) == true);\n    assert(candidate(17L) == true);\n  \
    \  assert(candidate(85L) == false);\n    assert(candidate(77L) == false);\n  \
    \  assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpwqwpihuc.d(11): Error: `std.math.sqrt` called with argument types
    `(long)` matches both:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float
    x)`

    and:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real
    x)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwqwpihuc.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163949
- exit_code: 0
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n <= 1) \n        return false;\n    if (n <= 3) \n        return true;\n\
    \    if (n % 2 == 0 || n % 3 == 0) \n        return false;\n    for (long i =\
    \ 5; i * i <= n; i = i + 6) \n        if (n % i == 0 || n % (i + 2) == 0) \n \
    \           return false;\n    return true;\n}\nunittest\n{\n    alias candidate\
    \ = is_prime;\n\n    assert(candidate(6L) == false);\n    assert(candidate(101L)\
    \ == true);\n    assert(candidate(11L) == true);\n    assert(candidate(13441L)\
    \ == true);\n    assert(candidate(61L) == true);\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(1L) == false);\n    assert(candidate(5L) == true);\n\
    \    assert(candidate(11L) == true);\n    assert(candidate(17L) == true);\n  \
    \  assert(candidate(85L) == false);\n    assert(candidate(77L) == false);\n  \
    \  assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163950
- exit_code: 1
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n < 2) return false;\n    if (n == 2) return true;\n    if (n % 2 ==\
    \ 0) return false;\n    foreach (i; 2 .. cast(long)sqrt(n) + 1) {\n        if\
    \ (n % i == 0) return false;\n    }\n    return true;\n}\nunittest\n{\n    alias\
    \ candidate = is_prime;\n\n    assert(candidate(6L) == false);\n    assert(candidate(101L)\
    \ == true);\n    assert(candidate(11L) == true);\n    assert(candidate(13441L)\
    \ == true);\n    assert(candidate(61L) == true);\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(1L) == false);\n    assert(candidate(5L) == true);\n\
    \    assert(candidate(11L) == true);\n    assert(candidate(17L) == true);\n  \
    \  assert(candidate(85L) == false);\n    assert(candidate(77L) == false);\n  \
    \  assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp2slyijz2.d(11): Error: `std.math.sqrt` called with argument types
    `(long)` matches both:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float
    x)`

    and:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real
    x)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2slyijz2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163949
- exit_code: 1
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n < 2) return false;\n    if (n == 2) return true;\n    if (n % 2 ==\
    \ 0) return false;\n    for (long i = 3; i <= sqrt(n); i += 2)\n    {\n      \
    \  if (n % i == 0) return false;\n    }\n    return true;\n}\nunittest\n{\n  \
    \  alias candidate = is_prime;\n\n    assert(candidate(6L) == false);\n    assert(candidate(101L)\
    \ == true);\n    assert(candidate(11L) == true);\n    assert(candidate(13441L)\
    \ == true);\n    assert(candidate(61L) == true);\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(1L) == false);\n    assert(candidate(5L) == true);\n\
    \    assert(candidate(11L) == true);\n    assert(candidate(17L) == true);\n  \
    \  assert(candidate(85L) == false);\n    assert(candidate(77L) == false);\n  \
    \  assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpwiv99psh.d(11): Error: `std.math.sqrt` called with argument types
    `(long)` matches both:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float
    x)`

    and:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real
    x)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwiv99psh.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163949
- exit_code: 0
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n <= 1)\n        return false;\n    else if (n <= 3)\n        return\
    \ true;\n    else if (n % 2 == 0 || n % 3 == 0)\n        return false;\n    long\
    \ i = 5;\n    while (i * i <= n) \n    {\n        if (n % i == 0 || n % (i + 2)\
    \ == 0)\n            return false;\n        i = i + 6;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = is_prime;\n\n    assert(candidate(6L) ==\
    \ false);\n    assert(candidate(101L) == true);\n    assert(candidate(11L) ==\
    \ true);\n    assert(candidate(13441L) == true);\n    assert(candidate(61L) ==\
    \ true);\n    assert(candidate(4L) == false);\n    assert(candidate(1L) == false);\n\
    \    assert(candidate(5L) == true);\n    assert(candidate(11L) == true);\n   \
    \ assert(candidate(17L) == true);\n    assert(candidate(85L) == false);\n    assert(candidate(77L)\
    \ == false);\n    assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163950
- exit_code: 1
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n <= 1) return false;\n    if (n == 2) return true;\n    if (n % 2 ==\
    \ 0) return false;\n    for (long i = 3; i <= sqrt(n); i += 2) \n    {\n     \
    \   if (n % i == 0) return false;\n    }\n    return true;\n}\nunittest\n{\n \
    \   alias candidate = is_prime;\n\n    assert(candidate(6L) == false);\n    assert(candidate(101L)\
    \ == true);\n    assert(candidate(11L) == true);\n    assert(candidate(13441L)\
    \ == true);\n    assert(candidate(61L) == true);\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(1L) == false);\n    assert(candidate(5L) == true);\n\
    \    assert(candidate(11L) == true);\n    assert(candidate(17L) == true);\n  \
    \  assert(candidate(85L) == false);\n    assert(candidate(77L) == false);\n  \
    \  assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpb2jbq_7k.d(11): Error: `std.math.sqrt` called with argument types
    `(long)` matches both:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float
    x)`

    and:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real
    x)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpb2jbq_7k.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163949
- exit_code: 1
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n < 2) return false;\n    if (n == 2) return true;\n    if (n % 2 ==\
    \ 0) return false;\n    for (long i = 3; i <= sqrt(n); i += 2) \n    {\n     \
    \   if (n % i == 0) return false;\n    }\n    return true;\n}\nunittest\n{\n \
    \   alias candidate = is_prime;\n\n    assert(candidate(6L) == false);\n    assert(candidate(101L)\
    \ == true);\n    assert(candidate(11L) == true);\n    assert(candidate(13441L)\
    \ == true);\n    assert(candidate(61L) == true);\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(1L) == false);\n    assert(candidate(5L) == true);\n\
    \    assert(candidate(11L) == true);\n    assert(candidate(17L) == true);\n  \
    \  assert(candidate(85L) == false);\n    assert(candidate(77L) == false);\n  \
    \  assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpk_l25oio.d(11): Error: `std.math.sqrt` called with argument types
    `(long)` matches both:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float
    x)`

    and:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real
    x)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk_l25oio.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163949
- exit_code: 1
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n < 2) return false;\n    if (n == 2) return true;\n    if (n % 2 ==\
    \ 0) return false;\n    for (long i = 3; i <= sqrt(n); i += 2)\n    {\n      \
    \  if (n % i == 0) return false;\n    }\n    return true;\n}\nunittest\n{\n  \
    \  alias candidate = is_prime;\n\n    assert(candidate(6L) == false);\n    assert(candidate(101L)\
    \ == true);\n    assert(candidate(11L) == true);\n    assert(candidate(13441L)\
    \ == true);\n    assert(candidate(61L) == true);\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(1L) == false);\n    assert(candidate(5L) == true);\n\
    \    assert(candidate(11L) == true);\n    assert(candidate(17L) == true);\n  \
    \  assert(candidate(85L) == false);\n    assert(candidate(77L) == false);\n  \
    \  assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpwiv99psh.d(11): Error: `std.math.sqrt` called with argument types
    `(long)` matches both:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float
    x)`

    and:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real
    x)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwiv99psh.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163949
- exit_code: 1
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n < 2) return false;\n    if (n == 2) return true;\n    if (n % 2 ==\
    \ 0) return false;\n    for (long i = 3; i <= sqrt(n); i += 2) \n    {\n     \
    \   if (n % i == 0) return false;\n    }\n    return true;\n}\nunittest\n{\n \
    \   alias candidate = is_prime;\n\n    assert(candidate(6L) == false);\n    assert(candidate(101L)\
    \ == true);\n    assert(candidate(11L) == true);\n    assert(candidate(13441L)\
    \ == true);\n    assert(candidate(61L) == true);\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(1L) == false);\n    assert(candidate(5L) == true);\n\
    \    assert(candidate(11L) == true);\n    assert(candidate(17L) == true);\n  \
    \  assert(candidate(85L) == false);\n    assert(candidate(77L) == false);\n  \
    \  assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpk_l25oio.d(11): Error: `std.math.sqrt` called with argument types
    `(long)` matches both:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float
    x)`

    and:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real
    x)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk_l25oio.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163949
- exit_code: 1
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n < 2) return false;\n    if (n == 2) return true;\n    if (n % 2 ==\
    \ 0) return false;\n    for (long i = 3; i <= sqrt(n); i += 2)\n    {\n      \
    \  if (n % i == 0) return false;\n    }\n    return true;\n}\nunittest\n{\n  \
    \  alias candidate = is_prime;\n\n    assert(candidate(6L) == false);\n    assert(candidate(101L)\
    \ == true);\n    assert(candidate(11L) == true);\n    assert(candidate(13441L)\
    \ == true);\n    assert(candidate(61L) == true);\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(1L) == false);\n    assert(candidate(5L) == true);\n\
    \    assert(candidate(11L) == true);\n    assert(candidate(17L) == true);\n  \
    \  assert(candidate(85L) == false);\n    assert(candidate(77L) == false);\n  \
    \  assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpwiv99psh.d(11): Error: `std.math.sqrt` called with argument types
    `(long)` matches both:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float
    x)`

    and:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real
    x)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwiv99psh.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163949
- exit_code: 0
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n <= 1) \n        return false;\n    else if (n <= 3) \n        return\
    \ true;\n    else if (n % 2 == 0 || n % 3 == 0) \n        return false;\n    long\
    \ i = 5;\n    while (i * i <= n) \n    {\n        if (n % i == 0 || n % (i + 2)\
    \ == 0) \n            return false;\n        i = i + 6;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = is_prime;\n\n    assert(candidate(6L) ==\
    \ false);\n    assert(candidate(101L) == true);\n    assert(candidate(11L) ==\
    \ true);\n    assert(candidate(13441L) == true);\n    assert(candidate(61L) ==\
    \ true);\n    assert(candidate(4L) == false);\n    assert(candidate(1L) == false);\n\
    \    assert(candidate(5L) == true);\n    assert(candidate(11L) == true);\n   \
    \ assert(candidate(17L) == true);\n    assert(candidate(85L) == false);\n    assert(candidate(77L)\
    \ == false);\n    assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163950
- exit_code: 1
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n < 2)\n        return false;\n    if (n == 2)\n        return true;\n\
    \    if (n % 2 == 0)\n        return false;\n    for (long i = 3; i <= sqrt(n);\
    \ i += 2)\n        if (n % i == 0)\n            return false;\n    return true;\n\
    }\nunittest\n{\n    alias candidate = is_prime;\n\n    assert(candidate(6L) ==\
    \ false);\n    assert(candidate(101L) == true);\n    assert(candidate(11L) ==\
    \ true);\n    assert(candidate(13441L) == true);\n    assert(candidate(61L) ==\
    \ true);\n    assert(candidate(4L) == false);\n    assert(candidate(1L) == false);\n\
    \    assert(candidate(5L) == true);\n    assert(candidate(11L) == true);\n   \
    \ assert(candidate(17L) == true);\n    assert(candidate(85L) == false);\n    assert(candidate(77L)\
    \ == false);\n    assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpb2l1dt3r.d(14): Error: `std.math.sqrt` called with argument types
    `(long)` matches both:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float
    x)`

    and:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real
    x)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpb2l1dt3r.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163949
- exit_code: 1
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n < 2) return false;\n    for (long i = 2; i <= sqrt(n); i++) \n    {\n\
    \        if (n % i == 0) return false;\n    }\n    return true;\n}\nunittest\n\
    {\n    alias candidate = is_prime;\n\n    assert(candidate(6L) == false);\n  \
    \  assert(candidate(101L) == true);\n    assert(candidate(11L) == true);\n   \
    \ assert(candidate(13441L) == true);\n    assert(candidate(61L) == true);\n  \
    \  assert(candidate(4L) == false);\n    assert(candidate(1L) == false);\n    assert(candidate(5L)\
    \ == true);\n    assert(candidate(11L) == true);\n    assert(candidate(17L) ==\
    \ true);\n    assert(candidate(85L) == false);\n    assert(candidate(77L) == false);\n\
    \    assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpzdbalcin.d(9): Error: `std.math.sqrt` called with argument types
    `(long)` matches both:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float
    x)`

    and:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real
    x)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpzdbalcin.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163949
- exit_code: 0
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n <= 1) return false;\n    if (n <= 3) return true;\n    if (n % 2 ==\
    \ 0 || n % 3 == 0) return false;\n    for (long i = 5; i * i <= n; i += 6) \n\
    \    {\n        if (n % i == 0 || n % (i + 2) == 0) return false;\n    }\n   \
    \ return true;\n}\nunittest\n{\n    alias candidate = is_prime;\n\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(101L) == true);\n    assert(candidate(11L)\
    \ == true);\n    assert(candidate(13441L) == true);\n    assert(candidate(61L)\
    \ == true);\n    assert(candidate(4L) == false);\n    assert(candidate(1L) ==\
    \ false);\n    assert(candidate(5L) == true);\n    assert(candidate(11L) == true);\n\
    \    assert(candidate(17L) == true);\n    assert(candidate(85L) == false);\n \
    \   assert(candidate(77L) == false);\n    assert(candidate(255379L) == false);\n\
    }\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163950
- exit_code: 1
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n < 2) return false;\n    if (n == 2) return true;\n    if (n % 2 ==\
    \ 0) return false;\n    for (long i = 3; i <= sqrt(n); i += 2) \n    {\n     \
    \   if (n % i == 0) return false;\n    }\n    return true;\n}\nunittest\n{\n \
    \   alias candidate = is_prime;\n\n    assert(candidate(6L) == false);\n    assert(candidate(101L)\
    \ == true);\n    assert(candidate(11L) == true);\n    assert(candidate(13441L)\
    \ == true);\n    assert(candidate(61L) == true);\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(1L) == false);\n    assert(candidate(5L) == true);\n\
    \    assert(candidate(11L) == true);\n    assert(candidate(17L) == true);\n  \
    \  assert(candidate(85L) == false);\n    assert(candidate(77L) == false);\n  \
    \  assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpk_l25oio.d(11): Error: `std.math.sqrt` called with argument types
    `(long)` matches both:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float
    x)`

    and:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real
    x)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk_l25oio.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163949
- exit_code: 0
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n <= 1) return false;\n    if (n <= 3) return true;\n    if (n % 2 ==\
    \ 0 || n % 3 == 0) return false;\n    for (long i = 5; i * i <= n; i += 6) \n\
    \    {\n        if (n % i == 0 || n % (i + 2) == 0) return false;\n    }\n   \
    \ return true;\n}\nunittest\n{\n    alias candidate = is_prime;\n\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(101L) == true);\n    assert(candidate(11L)\
    \ == true);\n    assert(candidate(13441L) == true);\n    assert(candidate(61L)\
    \ == true);\n    assert(candidate(4L) == false);\n    assert(candidate(1L) ==\
    \ false);\n    assert(candidate(5L) == true);\n    assert(candidate(11L) == true);\n\
    \    assert(candidate(17L) == true);\n    assert(candidate(85L) == false);\n \
    \   assert(candidate(77L) == false);\n    assert(candidate(255379L) == false);\n\
    }\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163950
- exit_code: 0
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n <= 1)\n        return false;\n    if (n <= 3)\n        return true;\n\
    \    if (n % 2 == 0 || n % 3 == 0)\n        return false;\n    for (long i = 5;\
    \ i * i <= n; i = i + 6)\n        if (n % i == 0 || n % (i + 2) == 0)\n      \
    \      return false;\n    return true;\n}\nunittest\n{\n    alias candidate =\
    \ is_prime;\n\n    assert(candidate(6L) == false);\n    assert(candidate(101L)\
    \ == true);\n    assert(candidate(11L) == true);\n    assert(candidate(13441L)\
    \ == true);\n    assert(candidate(61L) == true);\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(1L) == false);\n    assert(candidate(5L) == true);\n\
    \    assert(candidate(11L) == true);\n    assert(candidate(17L) == true);\n  \
    \  assert(candidate(85L) == false);\n    assert(candidate(77L) == false);\n  \
    \  assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163950
- exit_code: 1
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n < 2) return false;\n    if (n == 2) return true;\n    if (n % 2 ==\
    \ 0) return false;\n    for (long i = 3; i <= sqrt(n); i += 2)\n    {\n      \
    \  if (n % i == 0) return false;\n    }\n    return true;\n}\nunittest\n{\n  \
    \  alias candidate = is_prime;\n\n    assert(candidate(6L) == false);\n    assert(candidate(101L)\
    \ == true);\n    assert(candidate(11L) == true);\n    assert(candidate(13441L)\
    \ == true);\n    assert(candidate(61L) == true);\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(1L) == false);\n    assert(candidate(5L) == true);\n\
    \    assert(candidate(11L) == true);\n    assert(candidate(17L) == true);\n  \
    \  assert(candidate(85L) == false);\n    assert(candidate(77L) == false);\n  \
    \  assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpwiv99psh.d(11): Error: `std.math.sqrt` called with argument types
    `(long)` matches both:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float
    x)`

    and:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real
    x)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwiv99psh.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163949
- exit_code: 1
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n < 2) return false;\n    if (n == 2) return true;\n    if (n % 2 ==\
    \ 0) return false;\n    for (long i = 3; i <= sqrt(n); i += 2) \n    {\n     \
    \   if (n % i == 0) return false;\n    }\n    return true;\n}\nunittest\n{\n \
    \   alias candidate = is_prime;\n\n    assert(candidate(6L) == false);\n    assert(candidate(101L)\
    \ == true);\n    assert(candidate(11L) == true);\n    assert(candidate(13441L)\
    \ == true);\n    assert(candidate(61L) == true);\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(1L) == false);\n    assert(candidate(5L) == true);\n\
    \    assert(candidate(11L) == true);\n    assert(candidate(17L) == true);\n  \
    \  assert(candidate(85L) == false);\n    assert(candidate(77L) == false);\n  \
    \  assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpk_l25oio.d(11): Error: `std.math.sqrt` called with argument types
    `(long)` matches both:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float
    x)`

    and:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real
    x)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk_l25oio.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163949
- exit_code: 0
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n <= 1) return false;\n    if (n <= 3) return true;\n    if (n % 2 ==\
    \ 0 || n % 3 == 0) return false;\n    for (long i = 5; i * i <= n; i += 6) \n\
    \    {\n        if (n % i == 0 || n % (i + 2) == 0) return false;\n    }\n   \
    \ return true;\n}\nunittest\n{\n    alias candidate = is_prime;\n\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(101L) == true);\n    assert(candidate(11L)\
    \ == true);\n    assert(candidate(13441L) == true);\n    assert(candidate(61L)\
    \ == true);\n    assert(candidate(4L) == false);\n    assert(candidate(1L) ==\
    \ false);\n    assert(candidate(5L) == true);\n    assert(candidate(11L) == true);\n\
    \    assert(candidate(17L) == true);\n    assert(candidate(85L) == false);\n \
    \   assert(candidate(77L) == false);\n    assert(candidate(255379L) == false);\n\
    }\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163950
- exit_code: 1
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n < 2) return false;\n    if (n == 2) return true;\n    if (n % 2 ==\
    \ 0) return false;\n    for (long i = 3; i <= sqrt(n); i += 2)\n    {\n      \
    \  if (n % i == 0) return false;\n    }\n    return true;\n}\nunittest\n{\n  \
    \  alias candidate = is_prime;\n\n    assert(candidate(6L) == false);\n    assert(candidate(101L)\
    \ == true);\n    assert(candidate(11L) == true);\n    assert(candidate(13441L)\
    \ == true);\n    assert(candidate(61L) == true);\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(1L) == false);\n    assert(candidate(5L) == true);\n\
    \    assert(candidate(11L) == true);\n    assert(candidate(17L) == true);\n  \
    \  assert(candidate(85L) == false);\n    assert(candidate(77L) == false);\n  \
    \  assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpwiv99psh.d(11): Error: `std.math.sqrt` called with argument types
    `(long)` matches both:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float
    x)`

    and:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real
    x)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwiv99psh.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163949
- exit_code: 0
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n <= 1)\n        return false;\n    else if (n <= 3)\n        return\
    \ true;\n    else if (n % 2 == 0 || n % 3 == 0)\n        return false;\n    else\n\
    \    {\n        for (long i = 5; i * i <= n; i += 6)\n        {\n            if\
    \ (n % i == 0 || n % (i + 2) == 0)\n                return false;\n        }\n\
    \        return true;\n    }\n}\nunittest\n{\n    alias candidate = is_prime;\n\
    \n    assert(candidate(6L) == false);\n    assert(candidate(101L) == true);\n\
    \    assert(candidate(11L) == true);\n    assert(candidate(13441L) == true);\n\
    \    assert(candidate(61L) == true);\n    assert(candidate(4L) == false);\n  \
    \  assert(candidate(1L) == false);\n    assert(candidate(5L) == true);\n    assert(candidate(11L)\
    \ == true);\n    assert(candidate(17L) == true);\n    assert(candidate(85L) ==\
    \ false);\n    assert(candidate(77L) == false);\n    assert(candidate(255379L)\
    \ == false);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163950
- exit_code: 0
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n <= 1)\n        return false;\n    else if (n <= 3)\n        return\
    \ true;\n    else if (n % 2 == 0 || n % 3 == 0)\n        return false;\n    long\
    \ i = 5;\n    while (i * i <= n) {\n        if (n % i == 0 || n % (i + 2) == 0)\n\
    \            return false;\n        i = i + 6;\n    }\n    return true;\n}\nunittest\n\
    {\n    alias candidate = is_prime;\n\n    assert(candidate(6L) == false);\n  \
    \  assert(candidate(101L) == true);\n    assert(candidate(11L) == true);\n   \
    \ assert(candidate(13441L) == true);\n    assert(candidate(61L) == true);\n  \
    \  assert(candidate(4L) == false);\n    assert(candidate(1L) == false);\n    assert(candidate(5L)\
    \ == true);\n    assert(candidate(11L) == true);\n    assert(candidate(17L) ==\
    \ true);\n    assert(candidate(85L) == false);\n    assert(candidate(77L) == false);\n\
    \    assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163950
- exit_code: 0
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n <= 1)\n        return false;\n    else if (n <= 3)\n        return\
    \ true;\n    else if (n % 2 == 0 || n % 3 == 0)\n        return false;\n    long\
    \ i = 5;\n    while (i * i <= n) {\n        if (n % i == 0 || n % (i + 2) == 0)\n\
    \            return false;\n        i += 6;\n    }\n    return true;\n}\nunittest\n\
    {\n    alias candidate = is_prime;\n\n    assert(candidate(6L) == false);\n  \
    \  assert(candidate(101L) == true);\n    assert(candidate(11L) == true);\n   \
    \ assert(candidate(13441L) == true);\n    assert(candidate(61L) == true);\n  \
    \  assert(candidate(4L) == false);\n    assert(candidate(1L) == false);\n    assert(candidate(5L)\
    \ == true);\n    assert(candidate(11L) == true);\n    assert(candidate(17L) ==\
    \ true);\n    assert(candidate(85L) == false);\n    assert(candidate(77L) == false);\n\
    \    assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163950
- exit_code: 0
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n <= 1) return false;\n    if (n <= 3) return true;\n    if (n % 2 ==\
    \ 0 || n % 3 == 0) return false;\n    for (long i = 5; i * i <= n; i += 6) \n\
    \    {\n        if (n % i == 0 || n % (i + 2) == 0) return false;\n    }\n   \
    \ return true;\n}\nunittest\n{\n    alias candidate = is_prime;\n\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(101L) == true);\n    assert(candidate(11L)\
    \ == true);\n    assert(candidate(13441L) == true);\n    assert(candidate(61L)\
    \ == true);\n    assert(candidate(4L) == false);\n    assert(candidate(1L) ==\
    \ false);\n    assert(candidate(5L) == true);\n    assert(candidate(11L) == true);\n\
    \    assert(candidate(17L) == true);\n    assert(candidate(85L) == false);\n \
    \   assert(candidate(77L) == false);\n    assert(candidate(255379L) == false);\n\
    }\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163950
- exit_code: 1
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n < 2) \n        return false;\n    for (long i = 2; i <= sqrt(n); i++)\
    \ \n        if (n % i == 0) \n            return false;\n    return true;\n}\n\
    unittest\n{\n    alias candidate = is_prime;\n\n    assert(candidate(6L) == false);\n\
    \    assert(candidate(101L) == true);\n    assert(candidate(11L) == true);\n \
    \   assert(candidate(13441L) == true);\n    assert(candidate(61L) == true);\n\
    \    assert(candidate(4L) == false);\n    assert(candidate(1L) == false);\n  \
    \  assert(candidate(5L) == true);\n    assert(candidate(11L) == true);\n    assert(candidate(17L)\
    \ == true);\n    assert(candidate(85L) == false);\n    assert(candidate(77L) ==\
    \ false);\n    assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmplmgq8tf8.d(10): Error: `std.math.sqrt` called with argument types
    `(long)` matches both:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float
    x)`

    and:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real
    x)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplmgq8tf8.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163950
- exit_code: 1
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n < 2) return false;\n    if (n == 2) return true;\n    if (n % 2 ==\
    \ 0) return false;\n    for (long i = 3; i <= sqrt(n); i += 2) \n    {\n     \
    \   if (n % i == 0) return false;\n    }\n    return true;\n}\nunittest\n{\n \
    \   alias candidate = is_prime;\n\n    assert(candidate(6L) == false);\n    assert(candidate(101L)\
    \ == true);\n    assert(candidate(11L) == true);\n    assert(candidate(13441L)\
    \ == true);\n    assert(candidate(61L) == true);\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(1L) == false);\n    assert(candidate(5L) == true);\n\
    \    assert(candidate(11L) == true);\n    assert(candidate(17L) == true);\n  \
    \  assert(candidate(85L) == false);\n    assert(candidate(77L) == false);\n  \
    \  assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpk_l25oio.d(11): Error: `std.math.sqrt` called with argument types
    `(long)` matches both:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float
    x)`

    and:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real
    x)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk_l25oio.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163949
- exit_code: 1
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n < 2)\n    {\n        return false;\n    }\n    else if (n == 2)\n \
    \   {\n        return true;\n    }\n    else if (n % 2 == 0)\n    {\n        return\
    \ false;\n    }\n    else\n    {\n        for (long i = 3; i <= sqrt(n); i +=\
    \ 2)\n        {\n            if (n % i == 0)\n            {\n                return\
    \ false;\n            }\n        }\n        return true;\n    }\n}\nunittest\n\
    {\n    alias candidate = is_prime;\n\n    assert(candidate(6L) == false);\n  \
    \  assert(candidate(101L) == true);\n    assert(candidate(11L) == true);\n   \
    \ assert(candidate(13441L) == true);\n    assert(candidate(61L) == true);\n  \
    \  assert(candidate(4L) == false);\n    assert(candidate(1L) == false);\n    assert(candidate(5L)\
    \ == true);\n    assert(candidate(11L) == true);\n    assert(candidate(17L) ==\
    \ true);\n    assert(candidate(85L) == false);\n    assert(candidate(77L) == false);\n\
    \    assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp2xl8dq8i.d(22): Error: `std.math.sqrt` called with argument types
    `(long)` matches both:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float
    x)`

    and:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real
    x)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2xl8dq8i.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163949
- exit_code: 0
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n <= 1)\n        return false;\n    if (n <= 3)\n        return true;\n\
    \    if (n % 2 == 0 || n % 3 == 0)\n        return false;\n    for (long i = 5;\
    \ i * i <= n; i = i + 6)\n        if (n % i == 0 || n % (i + 2) == 0)\n      \
    \      return false;\n    return true;\n}\nunittest\n{\n    alias candidate =\
    \ is_prime;\n\n    assert(candidate(6L) == false);\n    assert(candidate(101L)\
    \ == true);\n    assert(candidate(11L) == true);\n    assert(candidate(13441L)\
    \ == true);\n    assert(candidate(61L) == true);\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(1L) == false);\n    assert(candidate(5L) == true);\n\
    \    assert(candidate(11L) == true);\n    assert(candidate(17L) == true);\n  \
    \  assert(candidate(85L) == false);\n    assert(candidate(77L) == false);\n  \
    \  assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163950
- exit_code: 0
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n <= 1) return false;\n    if (n <= 3) return true;\n    if (n % 2 ==\
    \ 0 || n % 3 == 0) return false;\n    for (long i = 5; i * i <= n; i += 6)\n \
    \       if (n % i == 0 || n % (i + 2) == 0)\n            return false;\n    return\
    \ true;\n}\nunittest\n{\n    alias candidate = is_prime;\n\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(101L) == true);\n    assert(candidate(11L)\
    \ == true);\n    assert(candidate(13441L) == true);\n    assert(candidate(61L)\
    \ == true);\n    assert(candidate(4L) == false);\n    assert(candidate(1L) ==\
    \ false);\n    assert(candidate(5L) == true);\n    assert(candidate(11L) == true);\n\
    \    assert(candidate(17L) == true);\n    assert(candidate(85L) == false);\n \
    \   assert(candidate(77L) == false);\n    assert(candidate(255379L) == false);\n\
    }\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163950
- exit_code: 0
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n <= 1)\n        return false;\n    if (n <= 3)\n        return true;\n\
    \    if (n % 2 == 0 || n % 3 == 0)\n        return false;\n    for (long i = 5;\
    \ i * i <= n; i = i + 6)\n        if (n % i == 0 || n % (i + 2) == 0)\n      \
    \      return false;\n    return true;\n}\nunittest\n{\n    alias candidate =\
    \ is_prime;\n\n    assert(candidate(6L) == false);\n    assert(candidate(101L)\
    \ == true);\n    assert(candidate(11L) == true);\n    assert(candidate(13441L)\
    \ == true);\n    assert(candidate(61L) == true);\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(1L) == false);\n    assert(candidate(5L) == true);\n\
    \    assert(candidate(11L) == true);\n    assert(candidate(17L) == true);\n  \
    \  assert(candidate(85L) == false);\n    assert(candidate(77L) == false);\n  \
    \  assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163950
- exit_code: 0
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n <= 1)\n        return false;\n    if (n <= 3)\n        return true;\n\
    \    if (n % 2 == 0 || n % 3 == 0)\n        return false;\n    for (int i = 5;\
    \ i * i <= n; i = i + 6)\n        if (n % i == 0 || n % (i + 2) == 0)\n      \
    \      return false;\n    return true;\n}\nunittest\n{\n    alias candidate =\
    \ is_prime;\n\n    assert(candidate(6L) == false);\n    assert(candidate(101L)\
    \ == true);\n    assert(candidate(11L) == true);\n    assert(candidate(13441L)\
    \ == true);\n    assert(candidate(61L) == true);\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(1L) == false);\n    assert(candidate(5L) == true);\n\
    \    assert(candidate(11L) == true);\n    assert(candidate(17L) == true);\n  \
    \  assert(candidate(85L) == false);\n    assert(candidate(77L) == false);\n  \
    \  assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163950
- exit_code: 1
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n < 2) return false;\n    if (n == 2) return true;\n    if (n % 2 ==\
    \ 0) return false;\n    for (long i = 3; i <= sqrt(n); i += 2)\n    {\n      \
    \  if (n % i == 0) return false;\n    }\n    return true;\n}\nunittest\n{\n  \
    \  alias candidate = is_prime;\n\n    assert(candidate(6L) == false);\n    assert(candidate(101L)\
    \ == true);\n    assert(candidate(11L) == true);\n    assert(candidate(13441L)\
    \ == true);\n    assert(candidate(61L) == true);\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(1L) == false);\n    assert(candidate(5L) == true);\n\
    \    assert(candidate(11L) == true);\n    assert(candidate(17L) == true);\n  \
    \  assert(candidate(85L) == false);\n    assert(candidate(77L) == false);\n  \
    \  assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpwiv99psh.d(11): Error: `std.math.sqrt` called with argument types
    `(long)` matches both:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float
    x)`

    and:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real
    x)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwiv99psh.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163949
- exit_code: 0
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n <= 1)\n        return false;\n    if (n <= 3)\n        return true;\n\
    \    if (n % 2 == 0 || n % 3 == 0)\n        return false;\n    for (long i = 5;\
    \ i * i <= n; i = i + 6)\n        if (n % i == 0 || n % (i + 2) == 0)\n      \
    \      return false;\n    return true;\n}\nunittest\n{\n    alias candidate =\
    \ is_prime;\n\n    assert(candidate(6L) == false);\n    assert(candidate(101L)\
    \ == true);\n    assert(candidate(11L) == true);\n    assert(candidate(13441L)\
    \ == true);\n    assert(candidate(61L) == true);\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(1L) == false);\n    assert(candidate(5L) == true);\n\
    \    assert(candidate(11L) == true);\n    assert(candidate(17L) == true);\n  \
    \  assert(candidate(85L) == false);\n    assert(candidate(77L) == false);\n  \
    \  assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163950
- exit_code: 1
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n < 2)\n        return false;\n    if (n == 2)\n        return true;\n\
    \    if (n % 2 == 0)\n        return false;\n    for (long i = 3; i <= sqrt(n);\
    \ i += 2)\n        if (n % i == 0)\n            return false;\n    return true;\n\
    }\nunittest\n{\n    alias candidate = is_prime;\n\n    assert(candidate(6L) ==\
    \ false);\n    assert(candidate(101L) == true);\n    assert(candidate(11L) ==\
    \ true);\n    assert(candidate(13441L) == true);\n    assert(candidate(61L) ==\
    \ true);\n    assert(candidate(4L) == false);\n    assert(candidate(1L) == false);\n\
    \    assert(candidate(5L) == true);\n    assert(candidate(11L) == true);\n   \
    \ assert(candidate(17L) == true);\n    assert(candidate(85L) == false);\n    assert(candidate(77L)\
    \ == false);\n    assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpb2l1dt3r.d(14): Error: `std.math.sqrt` called with argument types
    `(long)` matches both:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float
    x)`

    and:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real
    x)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpb2l1dt3r.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163949
- exit_code: 0
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n <= 1) \n    {\n        return false;\n    }\n    else if (n <= 3) \n\
    \    {\n        return true;\n    }\n    else if (n % 2 == 0 || n % 3 == 0) \n\
    \    {\n        return false;\n    }\n    long i = 5;\n    while (i * i <= n)\
    \ \n    {\n        if (n % i == 0 || n % (i + 2) == 0) \n        {\n         \
    \   return false;\n        }\n        i = i + 6;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = is_prime;\n\n    assert(candidate(6L) == false);\n\
    \    assert(candidate(101L) == true);\n    assert(candidate(11L) == true);\n \
    \   assert(candidate(13441L) == true);\n    assert(candidate(61L) == true);\n\
    \    assert(candidate(4L) == false);\n    assert(candidate(1L) == false);\n  \
    \  assert(candidate(5L) == true);\n    assert(candidate(11L) == true);\n    assert(candidate(17L)\
    \ == true);\n    assert(candidate(85L) == false);\n    assert(candidate(77L) ==\
    \ false);\n    assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163950
- exit_code: 1
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n < 2) return false;\n    if (n == 2) return true;\n    if (n % 2 ==\
    \ 0) return false;\n    for (long i = 3; i <= sqrt(n); i += 2)\n    {\n      \
    \  if (n % i == 0) return false;\n    }\n    return true;\n}\nunittest\n{\n  \
    \  alias candidate = is_prime;\n\n    assert(candidate(6L) == false);\n    assert(candidate(101L)\
    \ == true);\n    assert(candidate(11L) == true);\n    assert(candidate(13441L)\
    \ == true);\n    assert(candidate(61L) == true);\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(1L) == false);\n    assert(candidate(5L) == true);\n\
    \    assert(candidate(11L) == true);\n    assert(candidate(17L) == true);\n  \
    \  assert(candidate(85L) == false);\n    assert(candidate(77L) == false);\n  \
    \  assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpwiv99psh.d(11): Error: `std.math.sqrt` called with argument types
    `(long)` matches both:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float
    x)`

    and:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real
    x)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwiv99psh.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163949
- exit_code: 0
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n <= 1) return false;\n    if (n <= 3) return true;\n    if (n % 2 ==\
    \ 0 || n % 3 == 0) return false;\n    for (long i = 5; i * i <= n; i += 6) \n\
    \    {\n        if (n % i == 0 || n % (i + 2) == 0) return false;\n    }\n   \
    \ return true;\n}\nunittest\n{\n    alias candidate = is_prime;\n\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(101L) == true);\n    assert(candidate(11L)\
    \ == true);\n    assert(candidate(13441L) == true);\n    assert(candidate(61L)\
    \ == true);\n    assert(candidate(4L) == false);\n    assert(candidate(1L) ==\
    \ false);\n    assert(candidate(5L) == true);\n    assert(candidate(11L) == true);\n\
    \    assert(candidate(17L) == true);\n    assert(candidate(85L) == false);\n \
    \   assert(candidate(77L) == false);\n    assert(candidate(255379L) == false);\n\
    }\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163950
- exit_code: 0
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n <= 1)\n        return false;\n    else if (n <= 3)\n        return\
    \ true;\n    else if (n % 2 == 0 || n % 3 == 0)\n        return false;\n    else\n\
    \    {\n        for (long i = 5; i * i <= n; i += 6)\n        {\n            if\
    \ (n % i == 0 || n % (i + 2) == 0)\n                return false;\n        }\n\
    \        return true;\n    }\n}\nunittest\n{\n    alias candidate = is_prime;\n\
    \n    assert(candidate(6L) == false);\n    assert(candidate(101L) == true);\n\
    \    assert(candidate(11L) == true);\n    assert(candidate(13441L) == true);\n\
    \    assert(candidate(61L) == true);\n    assert(candidate(4L) == false);\n  \
    \  assert(candidate(1L) == false);\n    assert(candidate(5L) == true);\n    assert(candidate(11L)\
    \ == true);\n    assert(candidate(17L) == true);\n    assert(candidate(85L) ==\
    \ false);\n    assert(candidate(77L) == false);\n    assert(candidate(255379L)\
    \ == false);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163950
- exit_code: 1
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n < 2)\n        return false;\n    if (n == 2)\n        return true;\n\
    \    if (n % 2 == 0)\n        return false;\n    for (long i = 3; i <= sqrt(n);\
    \ i += 2)\n        if (n % i == 0)\n            return false;\n    return true;\n\
    }\nunittest\n{\n    alias candidate = is_prime;\n\n    assert(candidate(6L) ==\
    \ false);\n    assert(candidate(101L) == true);\n    assert(candidate(11L) ==\
    \ true);\n    assert(candidate(13441L) == true);\n    assert(candidate(61L) ==\
    \ true);\n    assert(candidate(4L) == false);\n    assert(candidate(1L) == false);\n\
    \    assert(candidate(5L) == true);\n    assert(candidate(11L) == true);\n   \
    \ assert(candidate(17L) == true);\n    assert(candidate(85L) == false);\n    assert(candidate(77L)\
    \ == false);\n    assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpb2l1dt3r.d(14): Error: `std.math.sqrt` called with argument types
    `(long)` matches both:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float
    x)`

    and:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real
    x)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpb2l1dt3r.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163949
- exit_code: 1
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n < 2) return false;\n    if (n == 2) return true;\n    if (n % 2 ==\
    \ 0) return false;\n    for (long i = 3; i <= sqrt(n); i += 2)\n    {\n      \
    \  if (n % i == 0) return false;\n    }\n    return true;\n}\nunittest\n{\n  \
    \  alias candidate = is_prime;\n\n    assert(candidate(6L) == false);\n    assert(candidate(101L)\
    \ == true);\n    assert(candidate(11L) == true);\n    assert(candidate(13441L)\
    \ == true);\n    assert(candidate(61L) == true);\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(1L) == false);\n    assert(candidate(5L) == true);\n\
    \    assert(candidate(11L) == true);\n    assert(candidate(17L) == true);\n  \
    \  assert(candidate(85L) == false);\n    assert(candidate(77L) == false);\n  \
    \  assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpwiv99psh.d(11): Error: `std.math.sqrt` called with argument types
    `(long)` matches both:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float
    x)`

    and:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real
    x)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwiv99psh.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163949
- exit_code: 0
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n <= 1) return false;\n    if (n <= 3) return true;\n    if (n % 2 ==\
    \ 0 || n % 3 == 0) return false;\n    for (long i = 5; i * i <= n; i += 6) \n\
    \    {\n        if (n % i == 0 || n % (i + 2) == 0) return false;\n    }\n   \
    \ return true;\n}\nunittest\n{\n    alias candidate = is_prime;\n\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(101L) == true);\n    assert(candidate(11L)\
    \ == true);\n    assert(candidate(13441L) == true);\n    assert(candidate(61L)\
    \ == true);\n    assert(candidate(4L) == false);\n    assert(candidate(1L) ==\
    \ false);\n    assert(candidate(5L) == true);\n    assert(candidate(11L) == true);\n\
    \    assert(candidate(17L) == true);\n    assert(candidate(85L) == false);\n \
    \   assert(candidate(77L) == false);\n    assert(candidate(255379L) == false);\n\
    }\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163950
- exit_code: 0
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n <= 1) return false;\n    if (n <= 3) return true;\n    if (n % 2 ==\
    \ 0 || n % 3 == 0) return false;\n    for (long i = 5; i * i <= n; i += 6) \n\
    \    {\n        if (n % i == 0 || n % (i + 2) == 0) return false;\n    }\n   \
    \ return true;\n}\nunittest\n{\n    alias candidate = is_prime;\n\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(101L) == true);\n    assert(candidate(11L)\
    \ == true);\n    assert(candidate(13441L) == true);\n    assert(candidate(61L)\
    \ == true);\n    assert(candidate(4L) == false);\n    assert(candidate(1L) ==\
    \ false);\n    assert(candidate(5L) == true);\n    assert(candidate(11L) == true);\n\
    \    assert(candidate(17L) == true);\n    assert(candidate(85L) == false);\n \
    \   assert(candidate(77L) == false);\n    assert(candidate(255379L) == false);\n\
    }\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163950
- exit_code: 1
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n < 2) return false;\n    if (n == 2) return true;\n    if (n % 2 ==\
    \ 0) return false;\n    for (long i = 3; i <= sqrt(n); i += 2)\n    {\n      \
    \  if (n % i == 0) return false;\n    }\n    return true;\n}\nunittest\n{\n  \
    \  alias candidate = is_prime;\n\n    assert(candidate(6L) == false);\n    assert(candidate(101L)\
    \ == true);\n    assert(candidate(11L) == true);\n    assert(candidate(13441L)\
    \ == true);\n    assert(candidate(61L) == true);\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(1L) == false);\n    assert(candidate(5L) == true);\n\
    \    assert(candidate(11L) == true);\n    assert(candidate(17L) == true);\n  \
    \  assert(candidate(85L) == false);\n    assert(candidate(77L) == false);\n  \
    \  assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpwiv99psh.d(11): Error: `std.math.sqrt` called with argument types
    `(long)` matches both:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float
    x)`

    and:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real
    x)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwiv99psh.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163949
- exit_code: 1
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n < 2) return false;\n    if (n == 2) return true;\n    if (n % 2 ==\
    \ 0) return false;\n    for (long i = 3; i <= sqrt(n); i += 2) \n    {\n     \
    \   if (n % i == 0) return false;\n    }\n    return true;\n}\nunittest\n{\n \
    \   alias candidate = is_prime;\n\n    assert(candidate(6L) == false);\n    assert(candidate(101L)\
    \ == true);\n    assert(candidate(11L) == true);\n    assert(candidate(13441L)\
    \ == true);\n    assert(candidate(61L) == true);\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(1L) == false);\n    assert(candidate(5L) == true);\n\
    \    assert(candidate(11L) == true);\n    assert(candidate(17L) == true);\n  \
    \  assert(candidate(85L) == false);\n    assert(candidate(77L) == false);\n  \
    \  assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpk_l25oio.d(11): Error: `std.math.sqrt` called with argument types
    `(long)` matches both:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float
    x)`

    and:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real
    x)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk_l25oio.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163949
- exit_code: 1
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n < 2)\n        return false;\n    else if (n == 2)\n        return true;\n\
    \    else if (n % 2 == 0)\n        return false;\n    else\n    {\n        long\
    \ i = 3;\n        long max = sqrt(n);\n        while (i <= max)\n        {\n \
    \           if (n % i == 0)\n                return false;\n            i += 2;\n\
    \        }\n        return true;\n    }\n}\nunittest\n{\n    alias candidate =\
    \ is_prime;\n\n    assert(candidate(6L) == false);\n    assert(candidate(101L)\
    \ == true);\n    assert(candidate(11L) == true);\n    assert(candidate(13441L)\
    \ == true);\n    assert(candidate(61L) == true);\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(1L) == false);\n    assert(candidate(5L) == true);\n\
    \    assert(candidate(11L) == true);\n    assert(candidate(17L) == true);\n  \
    \  assert(candidate(85L) == false);\n    assert(candidate(77L) == false);\n  \
    \  assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpyiycvtex.d(17): Error: `std.math.sqrt` called with argument types
    `(long)` matches both:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float
    x)`

    and:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real
    x)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyiycvtex.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163950
- exit_code: 1
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n < 2)\n        return false;\n    if (n < 4)\n        return true;\n\
    \    if (n % 2 == 0)\n        return false;\n    if (n < 9)\n        return true;\n\
    \    if (n % 3 == 0)\n        return false;\n    long r = floor(sqrt(n));\n  \
    \  long f = 5;\n    while (f <= r) \n    {\n        if (n % f == 0)\n        \
    \    return false;\n        if (n % (f + 2) == 0)\n            return false;\n\
    \        f += 6;\n    }\n    return true;\n}\nunittest\n{\n    alias candidate\
    \ = is_prime;\n\n    assert(candidate(6L) == false);\n    assert(candidate(101L)\
    \ == true);\n    assert(candidate(11L) == true);\n    assert(candidate(13441L)\
    \ == true);\n    assert(candidate(61L) == true);\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(1L) == false);\n    assert(candidate(5L) == true);\n\
    \    assert(candidate(11L) == true);\n    assert(candidate(17L) == true);\n  \
    \  assert(candidate(85L) == false);\n    assert(candidate(77L) == false);\n  \
    \  assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpuxv364f1.d(18): Error: `std.math.sqrt` called with argument types
    `(long)` matches both:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float
    x)`

    and:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real
    x)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpuxv364f1.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163950
- exit_code: 0
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n <= 1)\n        return false;\n    if (n <= 3)\n        return true;\n\
    \    if (n % 2 == 0 || n % 3 == 0)\n        return false;\n    for (long i = 5;\
    \ i * i <= n; i = i + 6)\n        if (n % i == 0 || n % (i + 2) == 0)\n      \
    \      return false;\n    return true;\n}\nunittest\n{\n    alias candidate =\
    \ is_prime;\n\n    assert(candidate(6L) == false);\n    assert(candidate(101L)\
    \ == true);\n    assert(candidate(11L) == true);\n    assert(candidate(13441L)\
    \ == true);\n    assert(candidate(61L) == true);\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(1L) == false);\n    assert(candidate(5L) == true);\n\
    \    assert(candidate(11L) == true);\n    assert(candidate(17L) == true);\n  \
    \  assert(candidate(85L) == false);\n    assert(candidate(77L) == false);\n  \
    \  assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163950
- exit_code: 1
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n < 2)\n        return false;\n    if (n == 2)\n        return true;\n\
    \    if (n % 2 == 0)\n        return false;\n    for (long i = 3; i <= sqrt(n);\
    \ i += 2)\n        if (n % i == 0)\n            return false;\n    return true;\n\
    }\nunittest\n{\n    alias candidate = is_prime;\n\n    assert(candidate(6L) ==\
    \ false);\n    assert(candidate(101L) == true);\n    assert(candidate(11L) ==\
    \ true);\n    assert(candidate(13441L) == true);\n    assert(candidate(61L) ==\
    \ true);\n    assert(candidate(4L) == false);\n    assert(candidate(1L) == false);\n\
    \    assert(candidate(5L) == true);\n    assert(candidate(11L) == true);\n   \
    \ assert(candidate(17L) == true);\n    assert(candidate(85L) == false);\n    assert(candidate(77L)\
    \ == false);\n    assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpb2l1dt3r.d(14): Error: `std.math.sqrt` called with argument types
    `(long)` matches both:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float
    x)`

    and:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real
    x)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpb2l1dt3r.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163949
- exit_code: 0
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n <= 1) return false;\n    if (n <= 3) return true;\n    if (n % 2 ==\
    \ 0 || n % 3 == 0) return false;\n    for (int i = 5; i * i <= n; i += 6) \n \
    \   {\n        if (n % i == 0 || n % (i + 2) == 0) return false;\n    }\n    return\
    \ true;\n}\nunittest\n{\n    alias candidate = is_prime;\n\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(101L) == true);\n    assert(candidate(11L)\
    \ == true);\n    assert(candidate(13441L) == true);\n    assert(candidate(61L)\
    \ == true);\n    assert(candidate(4L) == false);\n    assert(candidate(1L) ==\
    \ false);\n    assert(candidate(5L) == true);\n    assert(candidate(11L) == true);\n\
    \    assert(candidate(17L) == true);\n    assert(candidate(85L) == false);\n \
    \   assert(candidate(77L) == false);\n    assert(candidate(255379L) == false);\n\
    }\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163950
- exit_code: 1
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n < 2)\n        return false;\n    for (long i = 2; i <= sqrt(n); i++)\n\
    \        if (n % i == 0)\n            return false;\n    return true;\n}\nunittest\n\
    {\n    alias candidate = is_prime;\n\n    assert(candidate(6L) == false);\n  \
    \  assert(candidate(101L) == true);\n    assert(candidate(11L) == true);\n   \
    \ assert(candidate(13441L) == true);\n    assert(candidate(61L) == true);\n  \
    \  assert(candidate(4L) == false);\n    assert(candidate(1L) == false);\n    assert(candidate(5L)\
    \ == true);\n    assert(candidate(11L) == true);\n    assert(candidate(17L) ==\
    \ true);\n    assert(candidate(85L) == false);\n    assert(candidate(77L) == false);\n\
    \    assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpk85ayo0y.d(10): Error: `std.math.sqrt` called with argument types
    `(long)` matches both:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float
    x)`

    and:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real
    x)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk85ayo0y.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163950
- exit_code: 1
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n < 2) return false;\n    if (n == 2) return true;\n    if (n % 2 ==\
    \ 0) return false;\n    for (int i = 3; i <= sqrt(n); i += 2)\n    {\n       \
    \ if (n % i == 0) return false;\n    }\n    return true;\n}\nunittest\n{\n   \
    \ alias candidate = is_prime;\n\n    assert(candidate(6L) == false);\n    assert(candidate(101L)\
    \ == true);\n    assert(candidate(11L) == true);\n    assert(candidate(13441L)\
    \ == true);\n    assert(candidate(61L) == true);\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(1L) == false);\n    assert(candidate(5L) == true);\n\
    \    assert(candidate(11L) == true);\n    assert(candidate(17L) == true);\n  \
    \  assert(candidate(85L) == false);\n    assert(candidate(77L) == false);\n  \
    \  assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmph_uw_bkt.d(11): Error: `std.math.sqrt` called with argument types
    `(long)` matches both:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float
    x)`

    and:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real
    x)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmph_uw_bkt.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163950
- exit_code: 1
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n < 2) \n        return false;\n    else if (n == 2) \n        return\
    \ true;\n    else if (n % 2 == 0) \n        return false;\n    else \n    {\n\
    \        for (long i = 3; i <= sqrt(n); i += 2) \n        {\n            if (n\
    \ % i == 0) \n                return false;\n        }\n        return true;\n\
    \    }\n}\nunittest\n{\n    alias candidate = is_prime;\n\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(101L) == true);\n    assert(candidate(11L)\
    \ == true);\n    assert(candidate(13441L) == true);\n    assert(candidate(61L)\
    \ == true);\n    assert(candidate(4L) == false);\n    assert(candidate(1L) ==\
    \ false);\n    assert(candidate(5L) == true);\n    assert(candidate(11L) == true);\n\
    \    assert(candidate(17L) == true);\n    assert(candidate(85L) == false);\n \
    \   assert(candidate(77L) == false);\n    assert(candidate(255379L) == false);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpjqunq9p7.d(16): Error: `std.math.sqrt` called with argument types
    `(long)` matches both:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float
    x)`

    and:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real
    x)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjqunq9p7.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163950
- exit_code: 0
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n <= 1) return false;\n    if (n <= 3) return true;\n    if (n % 2 ==\
    \ 0 || n % 3 == 0) return false;\n    for (long i = 5; i * i <= n; i += 6) \n\
    \    {\n        if (n % i == 0 || n % (i + 2) == 0) return false;\n    }\n   \
    \ return true;\n}\nunittest\n{\n    alias candidate = is_prime;\n\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(101L) == true);\n    assert(candidate(11L)\
    \ == true);\n    assert(candidate(13441L) == true);\n    assert(candidate(61L)\
    \ == true);\n    assert(candidate(4L) == false);\n    assert(candidate(1L) ==\
    \ false);\n    assert(candidate(5L) == true);\n    assert(candidate(11L) == true);\n\
    \    assert(candidate(17L) == true);\n    assert(candidate(85L) == false);\n \
    \   assert(candidate(77L) == false);\n    assert(candidate(255379L) == false);\n\
    }\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163950
- exit_code: 1
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n < 2) return false;\n    if (n == 2) return true;\n    if (n % 2 ==\
    \ 0) return false;\n    for (long i = 3; i <= sqrt(n); i += 2)\n    {\n      \
    \  if (n % i == 0) return false;\n    }\n    return true;\n}\nunittest\n{\n  \
    \  alias candidate = is_prime;\n\n    assert(candidate(6L) == false);\n    assert(candidate(101L)\
    \ == true);\n    assert(candidate(11L) == true);\n    assert(candidate(13441L)\
    \ == true);\n    assert(candidate(61L) == true);\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(1L) == false);\n    assert(candidate(5L) == true);\n\
    \    assert(candidate(11L) == true);\n    assert(candidate(17L) == true);\n  \
    \  assert(candidate(85L) == false);\n    assert(candidate(77L) == false);\n  \
    \  assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpwiv99psh.d(11): Error: `std.math.sqrt` called with argument types
    `(long)` matches both:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float
    x)`

    and:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real
    x)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwiv99psh.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163949
- exit_code: 0
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n <= 1) \n    {\n        return false;\n    }\n    else if (n <= 3) \n\
    \    {\n        return true;\n    }\n    else if (n % 2 == 0 || n % 3 == 0) \n\
    \    {\n        return false;\n    }\n    long i = 5;\n    while (i * i <= n)\
    \ \n    {\n        if (n % i == 0 || n % (i + 2) == 0) \n        {\n         \
    \   return false;\n        }\n        i = i + 6;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = is_prime;\n\n    assert(candidate(6L) == false);\n\
    \    assert(candidate(101L) == true);\n    assert(candidate(11L) == true);\n \
    \   assert(candidate(13441L) == true);\n    assert(candidate(61L) == true);\n\
    \    assert(candidate(4L) == false);\n    assert(candidate(1L) == false);\n  \
    \  assert(candidate(5L) == true);\n    assert(candidate(11L) == true);\n    assert(candidate(17L)\
    \ == true);\n    assert(candidate(85L) == false);\n    assert(candidate(77L) ==\
    \ false);\n    assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163950
- exit_code: 0
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n <= 1) return false;\n    if (n <= 3) return true;\n    if (n % 2 ==\
    \ 0 || n % 3 == 0) return false;\n    for (long i = 5; i * i <= n; i += 6) \n\
    \    {\n        if (n % i == 0 || n % (i + 2) == 0) return false;\n    }\n   \
    \ return true;\n}\nunittest\n{\n    alias candidate = is_prime;\n\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(101L) == true);\n    assert(candidate(11L)\
    \ == true);\n    assert(candidate(13441L) == true);\n    assert(candidate(61L)\
    \ == true);\n    assert(candidate(4L) == false);\n    assert(candidate(1L) ==\
    \ false);\n    assert(candidate(5L) == true);\n    assert(candidate(11L) == true);\n\
    \    assert(candidate(17L) == true);\n    assert(candidate(85L) == false);\n \
    \   assert(candidate(77L) == false);\n    assert(candidate(255379L) == false);\n\
    }\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163950
- exit_code: 1
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n <= 1) return false;\n    if (n == 2) return true;\n    if (n % 2 ==\
    \ 0) return false;\n    for (long i = 3; i <= sqrt(n); i += 2)\n    {\n      \
    \  if (n % i == 0) return false;\n    }\n    return true;\n}\nunittest\n{\n  \
    \  alias candidate = is_prime;\n\n    assert(candidate(6L) == false);\n    assert(candidate(101L)\
    \ == true);\n    assert(candidate(11L) == true);\n    assert(candidate(13441L)\
    \ == true);\n    assert(candidate(61L) == true);\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(1L) == false);\n    assert(candidate(5L) == true);\n\
    \    assert(candidate(11L) == true);\n    assert(candidate(17L) == true);\n  \
    \  assert(candidate(85L) == false);\n    assert(candidate(77L) == false);\n  \
    \  assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpwqwpihuc.d(11): Error: `std.math.sqrt` called with argument types
    `(long)` matches both:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float
    x)`

    and:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real
    x)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwqwpihuc.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163949
- exit_code: 1
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n < 2)\n        return false;\n    if (n == 2)\n        return true;\n\
    \    if (n % 2 == 0)\n        return false;\n    for (long i = 3; i <= sqrt(n);\
    \ i += 2)\n        if (n % i == 0)\n            return false;\n    return true;\n\
    }\nunittest\n{\n    alias candidate = is_prime;\n\n    assert(candidate(6L) ==\
    \ false);\n    assert(candidate(101L) == true);\n    assert(candidate(11L) ==\
    \ true);\n    assert(candidate(13441L) == true);\n    assert(candidate(61L) ==\
    \ true);\n    assert(candidate(4L) == false);\n    assert(candidate(1L) == false);\n\
    \    assert(candidate(5L) == true);\n    assert(candidate(11L) == true);\n   \
    \ assert(candidate(17L) == true);\n    assert(candidate(85L) == false);\n    assert(candidate(77L)\
    \ == false);\n    assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpb2l1dt3r.d(14): Error: `std.math.sqrt` called with argument types
    `(long)` matches both:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float
    x)`

    and:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real
    x)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpb2l1dt3r.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163949
- exit_code: 1
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n < 2)\n        return false;\n    if (n == 2)\n        return true;\n\
    \    if (n % 2 == 0)\n        return false;\n    for (long i = 3; i <= sqrt(n);\
    \ i += 2)\n        if (n % i == 0)\n            return false;\n    return true;\n\
    }\nunittest\n{\n    alias candidate = is_prime;\n\n    assert(candidate(6L) ==\
    \ false);\n    assert(candidate(101L) == true);\n    assert(candidate(11L) ==\
    \ true);\n    assert(candidate(13441L) == true);\n    assert(candidate(61L) ==\
    \ true);\n    assert(candidate(4L) == false);\n    assert(candidate(1L) == false);\n\
    \    assert(candidate(5L) == true);\n    assert(candidate(11L) == true);\n   \
    \ assert(candidate(17L) == true);\n    assert(candidate(85L) == false);\n    assert(candidate(77L)\
    \ == false);\n    assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpb2l1dt3r.d(14): Error: `std.math.sqrt` called with argument types
    `(long)` matches both:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float
    x)`

    and:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real
    x)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpb2l1dt3r.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163949
- exit_code: 1
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n < 2) return false;\n    if (n == 2) return true;\n    if (n % 2 ==\
    \ 0) return false;\n    for (long i = 3; i <= sqrt(n); i += 2) \n    {\n     \
    \   if (n % i == 0) return false;\n    }\n    return true;\n}\nunittest\n{\n \
    \   alias candidate = is_prime;\n\n    assert(candidate(6L) == false);\n    assert(candidate(101L)\
    \ == true);\n    assert(candidate(11L) == true);\n    assert(candidate(13441L)\
    \ == true);\n    assert(candidate(61L) == true);\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(1L) == false);\n    assert(candidate(5L) == true);\n\
    \    assert(candidate(11L) == true);\n    assert(candidate(17L) == true);\n  \
    \  assert(candidate(85L) == false);\n    assert(candidate(77L) == false);\n  \
    \  assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpk_l25oio.d(11): Error: `std.math.sqrt` called with argument types
    `(long)` matches both:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float
    x)`

    and:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real
    x)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk_l25oio.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163949
- exit_code: 0
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n <= 1)\n        return false;\n    else if (n <= 3)\n        return\
    \ true;\n    else if (n % 2 == 0 || n % 3 == 0)\n        return false;\n    long\
    \ i = 5;\n    while (i * i <= n) \n    {\n        if (n % i == 0 || n % (i + 2)\
    \ == 0)\n            return false;\n        i = i + 6;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = is_prime;\n\n    assert(candidate(6L) ==\
    \ false);\n    assert(candidate(101L) == true);\n    assert(candidate(11L) ==\
    \ true);\n    assert(candidate(13441L) == true);\n    assert(candidate(61L) ==\
    \ true);\n    assert(candidate(4L) == false);\n    assert(candidate(1L) == false);\n\
    \    assert(candidate(5L) == true);\n    assert(candidate(11L) == true);\n   \
    \ assert(candidate(17L) == true);\n    assert(candidate(85L) == false);\n    assert(candidate(77L)\
    \ == false);\n    assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163950
- exit_code: 1
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n < 2) \n        return false;\n    else if (n == 2) \n        return\
    \ true;\n    else if (n % 2 == 0) \n        return false;\n    else \n    {\n\
    \        for (long i = 3; i <= sqrt(n); i += 2) \n        {\n            if (n\
    \ % i == 0) \n                return false;\n        }\n        return true;\n\
    \    }\n}\nunittest\n{\n    alias candidate = is_prime;\n\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(101L) == true);\n    assert(candidate(11L)\
    \ == true);\n    assert(candidate(13441L) == true);\n    assert(candidate(61L)\
    \ == true);\n    assert(candidate(4L) == false);\n    assert(candidate(1L) ==\
    \ false);\n    assert(candidate(5L) == true);\n    assert(candidate(11L) == true);\n\
    \    assert(candidate(17L) == true);\n    assert(candidate(85L) == false);\n \
    \   assert(candidate(77L) == false);\n    assert(candidate(255379L) == false);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpjqunq9p7.d(16): Error: `std.math.sqrt` called with argument types
    `(long)` matches both:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float
    x)`

    and:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real
    x)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjqunq9p7.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163950
- exit_code: 0
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n <= 1) \n    {\n        return false;\n    }\n    else if (n <= 3) \n\
    \    {\n        return true;\n    }\n    else if (n % 2 == 0 || n % 3 == 0) \n\
    \    {\n        return false;\n    }\n    long i = 5;\n    while (i * i <= n)\
    \ \n    {\n        if (n % i == 0 || n % (i + 2) == 0) \n        {\n         \
    \   return false;\n        }\n        i = i + 6;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = is_prime;\n\n    assert(candidate(6L) == false);\n\
    \    assert(candidate(101L) == true);\n    assert(candidate(11L) == true);\n \
    \   assert(candidate(13441L) == true);\n    assert(candidate(61L) == true);\n\
    \    assert(candidate(4L) == false);\n    assert(candidate(1L) == false);\n  \
    \  assert(candidate(5L) == true);\n    assert(candidate(11L) == true);\n    assert(candidate(17L)\
    \ == true);\n    assert(candidate(85L) == false);\n    assert(candidate(77L) ==\
    \ false);\n    assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163950
- exit_code: 0
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n <= 1)\n        return false;\n    else if (n <= 3)\n        return\
    \ true;\n    else if (n % 2 == 0 || n % 3 == 0)\n        return false;\n    long\
    \ i = 5;\n    while (i * i <= n) {\n        if (n % i == 0 || n % (i + 2) == 0)\n\
    \            return false;\n        i = i + 6;\n    }\n    return true;\n}\nunittest\n\
    {\n    alias candidate = is_prime;\n\n    assert(candidate(6L) == false);\n  \
    \  assert(candidate(101L) == true);\n    assert(candidate(11L) == true);\n   \
    \ assert(candidate(13441L) == true);\n    assert(candidate(61L) == true);\n  \
    \  assert(candidate(4L) == false);\n    assert(candidate(1L) == false);\n    assert(candidate(5L)\
    \ == true);\n    assert(candidate(11L) == true);\n    assert(candidate(17L) ==\
    \ true);\n    assert(candidate(85L) == false);\n    assert(candidate(77L) == false);\n\
    \    assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163950
- exit_code: 1
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n < 2) return false;\n    if (n == 2) return true;\n    if (n % 2 ==\
    \ 0) return false;\n    long max = cast(long)sqrt(n);\n    for (long i = 3; i\
    \ <= max; i += 2)\n        if (n % i == 0) return false;\n    return true;\n}\n\
    unittest\n{\n    alias candidate = is_prime;\n\n    assert(candidate(6L) == false);\n\
    \    assert(candidate(101L) == true);\n    assert(candidate(11L) == true);\n \
    \   assert(candidate(13441L) == true);\n    assert(candidate(61L) == true);\n\
    \    assert(candidate(4L) == false);\n    assert(candidate(1L) == false);\n  \
    \  assert(candidate(5L) == true);\n    assert(candidate(11L) == true);\n    assert(candidate(17L)\
    \ == true);\n    assert(candidate(85L) == false);\n    assert(candidate(77L) ==\
    \ false);\n    assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpkc96wvm8.d(11): Error: `std.math.sqrt` called with argument types
    `(long)` matches both:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float
    x)`

    and:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real
    x)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkc96wvm8.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163950
- exit_code: 0
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n <= 1)\n        return false;\n    else if (n <= 3)\n        return\
    \ true;\n    else if (n % 2 == 0 || n % 3 == 0)\n        return false;\n    long\
    \ i = 5;\n    while (i * i <= n) \n    {\n        if (n % i == 0 || n % (i + 2)\
    \ == 0)\n            return false;\n        i = i + 6;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = is_prime;\n\n    assert(candidate(6L) ==\
    \ false);\n    assert(candidate(101L) == true);\n    assert(candidate(11L) ==\
    \ true);\n    assert(candidate(13441L) == true);\n    assert(candidate(61L) ==\
    \ true);\n    assert(candidate(4L) == false);\n    assert(candidate(1L) == false);\n\
    \    assert(candidate(5L) == true);\n    assert(candidate(11L) == true);\n   \
    \ assert(candidate(17L) == true);\n    assert(candidate(85L) == false);\n    assert(candidate(77L)\
    \ == false);\n    assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163950
- exit_code: 1
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n < 2)\n        return false;\n    if (n == 2)\n        return true;\n\
    \    if (n % 2 == 0)\n        return false;\n    for (long i = 3; i <= sqrt(n);\
    \ i += 2)\n        if (n % i == 0)\n            return false;\n    return true;\n\
    }\nunittest\n{\n    alias candidate = is_prime;\n\n    assert(candidate(6L) ==\
    \ false);\n    assert(candidate(101L) == true);\n    assert(candidate(11L) ==\
    \ true);\n    assert(candidate(13441L) == true);\n    assert(candidate(61L) ==\
    \ true);\n    assert(candidate(4L) == false);\n    assert(candidate(1L) == false);\n\
    \    assert(candidate(5L) == true);\n    assert(candidate(11L) == true);\n   \
    \ assert(candidate(17L) == true);\n    assert(candidate(85L) == false);\n    assert(candidate(77L)\
    \ == false);\n    assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpb2l1dt3r.d(14): Error: `std.math.sqrt` called with argument types
    `(long)` matches both:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float
    x)`

    and:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real
    x)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpb2l1dt3r.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163949
- exit_code: 1
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n < 2)\n        return false;\n    if (n == 2)\n        return true;\n\
    \    if (n % 2 == 0)\n        return false;\n    for (long i = 3; i <= sqrt(n);\
    \ i += 2)\n        if (n % i == 0)\n            return false;\n    return true;\n\
    }\nunittest\n{\n    alias candidate = is_prime;\n\n    assert(candidate(6L) ==\
    \ false);\n    assert(candidate(101L) == true);\n    assert(candidate(11L) ==\
    \ true);\n    assert(candidate(13441L) == true);\n    assert(candidate(61L) ==\
    \ true);\n    assert(candidate(4L) == false);\n    assert(candidate(1L) == false);\n\
    \    assert(candidate(5L) == true);\n    assert(candidate(11L) == true);\n   \
    \ assert(candidate(17L) == true);\n    assert(candidate(85L) == false);\n    assert(candidate(77L)\
    \ == false);\n    assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpb2l1dt3r.d(14): Error: `std.math.sqrt` called with argument types
    `(long)` matches both:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float
    x)`

    and:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real
    x)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpb2l1dt3r.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163949
- exit_code: 1
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n < 2) return false;\n    if (n == 2) return true;\n    if (n % 2 ==\
    \ 0) return false;\n    for (long i = 3; i <= sqrt(n); i += 2)\n    {\n      \
    \  if (n % i == 0) return false;\n    }\n    return true;\n}\nunittest\n{\n  \
    \  alias candidate = is_prime;\n\n    assert(candidate(6L) == false);\n    assert(candidate(101L)\
    \ == true);\n    assert(candidate(11L) == true);\n    assert(candidate(13441L)\
    \ == true);\n    assert(candidate(61L) == true);\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(1L) == false);\n    assert(candidate(5L) == true);\n\
    \    assert(candidate(11L) == true);\n    assert(candidate(17L) == true);\n  \
    \  assert(candidate(85L) == false);\n    assert(candidate(77L) == false);\n  \
    \  assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpwiv99psh.d(11): Error: `std.math.sqrt` called with argument types
    `(long)` matches both:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float
    x)`

    and:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real
    x)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwiv99psh.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163949
- exit_code: 1
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n <= 1) return false;\n    if (n == 2) return true;\n    if (n % 2 ==\
    \ 0) return false;\n    for (long i = 3; i < sqrt(n) + 1; i += 2)\n    {\n   \
    \     if (n % i == 0) return false;\n    }\n    return true;\n}\nunittest\n{\n\
    \    alias candidate = is_prime;\n\n    assert(candidate(6L) == false);\n    assert(candidate(101L)\
    \ == true);\n    assert(candidate(11L) == true);\n    assert(candidate(13441L)\
    \ == true);\n    assert(candidate(61L) == true);\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(1L) == false);\n    assert(candidate(5L) == true);\n\
    \    assert(candidate(11L) == true);\n    assert(candidate(17L) == true);\n  \
    \  assert(candidate(85L) == false);\n    assert(candidate(77L) == false);\n  \
    \  assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpuxa6cyaw.d(11): Error: `std.math.sqrt` called with argument types
    `(long)` matches both:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float
    x)`

    and:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real
    x)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpuxa6cyaw.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163950
- exit_code: 1
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n < 2)\n        return false;\n    if (n == 2)\n        return true;\n\
    \    if (n % 2 == 0)\n        return false;\n    for (long i = 3; i <= sqrt(n);\
    \ i += 2)\n        if (n % i == 0)\n            return false;\n    return true;\n\
    }\nunittest\n{\n    alias candidate = is_prime;\n\n    assert(candidate(6L) ==\
    \ false);\n    assert(candidate(101L) == true);\n    assert(candidate(11L) ==\
    \ true);\n    assert(candidate(13441L) == true);\n    assert(candidate(61L) ==\
    \ true);\n    assert(candidate(4L) == false);\n    assert(candidate(1L) == false);\n\
    \    assert(candidate(5L) == true);\n    assert(candidate(11L) == true);\n   \
    \ assert(candidate(17L) == true);\n    assert(candidate(85L) == false);\n    assert(candidate(77L)\
    \ == false);\n    assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpb2l1dt3r.d(14): Error: `std.math.sqrt` called with argument types
    `(long)` matches both:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float
    x)`

    and:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real
    x)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpb2l1dt3r.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163949
- exit_code: 0
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n <= 1) \n        return false;\n    if (n <= 3) \n        return true;\n\
    \    if (n % 2 == 0 || n % 3 == 0) \n        return false;\n    for (long i =\
    \ 5; i * i <= n; i = i + 6) \n        if (n % i == 0 || n % (i + 2) == 0) \n \
    \           return false;\n    return true;\n}\nunittest\n{\n    alias candidate\
    \ = is_prime;\n\n    assert(candidate(6L) == false);\n    assert(candidate(101L)\
    \ == true);\n    assert(candidate(11L) == true);\n    assert(candidate(13441L)\
    \ == true);\n    assert(candidate(61L) == true);\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(1L) == false);\n    assert(candidate(5L) == true);\n\
    \    assert(candidate(11L) == true);\n    assert(candidate(17L) == true);\n  \
    \  assert(candidate(85L) == false);\n    assert(candidate(77L) == false);\n  \
    \  assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163950
- exit_code: 1
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n < 2) return false;\n    if (n == 2) return true;\n    if (n % 2 ==\
    \ 0) return false;\n    for (long i = 3; i <= sqrt(n); i += 2)\n    {\n      \
    \  if (n % i == 0) return false;\n    }\n    return true;\n}\nunittest\n{\n  \
    \  alias candidate = is_prime;\n\n    assert(candidate(6L) == false);\n    assert(candidate(101L)\
    \ == true);\n    assert(candidate(11L) == true);\n    assert(candidate(13441L)\
    \ == true);\n    assert(candidate(61L) == true);\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(1L) == false);\n    assert(candidate(5L) == true);\n\
    \    assert(candidate(11L) == true);\n    assert(candidate(17L) == true);\n  \
    \  assert(candidate(85L) == false);\n    assert(candidate(77L) == false);\n  \
    \  assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpwiv99psh.d(11): Error: `std.math.sqrt` called with argument types
    `(long)` matches both:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float
    x)`

    and:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real
    x)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwiv99psh.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163949
- exit_code: 1
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n < 2) return false;\n    if (n == 2) return true;\n    if (n % 2 ==\
    \ 0) return false;\n    for (long i = 3; i <= sqrt(n); i += 2) \n    {\n     \
    \   if (n % i == 0) return false;\n    }\n    return true;\n}\nunittest\n{\n \
    \   alias candidate = is_prime;\n\n    assert(candidate(6L) == false);\n    assert(candidate(101L)\
    \ == true);\n    assert(candidate(11L) == true);\n    assert(candidate(13441L)\
    \ == true);\n    assert(candidate(61L) == true);\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(1L) == false);\n    assert(candidate(5L) == true);\n\
    \    assert(candidate(11L) == true);\n    assert(candidate(17L) == true);\n  \
    \  assert(candidate(85L) == false);\n    assert(candidate(77L) == false);\n  \
    \  assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpk_l25oio.d(11): Error: `std.math.sqrt` called with argument types
    `(long)` matches both:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float
    x)`

    and:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real
    x)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk_l25oio.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163949
- exit_code: 1
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n < 2) return false;\n    if (n == 2) return true;\n    if (n % 2 ==\
    \ 0) return false;\n    for (long i = 3; i <= sqrt(n); i += 2)\n    {\n      \
    \  if (n % i == 0) return false;\n    }\n    return true;\n}\nunittest\n{\n  \
    \  alias candidate = is_prime;\n\n    assert(candidate(6L) == false);\n    assert(candidate(101L)\
    \ == true);\n    assert(candidate(11L) == true);\n    assert(candidate(13441L)\
    \ == true);\n    assert(candidate(61L) == true);\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(1L) == false);\n    assert(candidate(5L) == true);\n\
    \    assert(candidate(11L) == true);\n    assert(candidate(17L) == true);\n  \
    \  assert(candidate(85L) == false);\n    assert(candidate(77L) == false);\n  \
    \  assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpwiv99psh.d(11): Error: `std.math.sqrt` called with argument types
    `(long)` matches both:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float
    x)`

    and:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real
    x)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwiv99psh.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163949
- exit_code: 0
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n <= 1)\n        return false;\n    if (n <= 3)\n        return true;\n\
    \    if (n % 2 == 0 || n % 3 == 0)\n        return false;\n    for (long i = 5;\
    \ i * i <= n; i = i + 6)\n        if (n % i == 0 || n % (i + 2) == 0)\n      \
    \      return false;\n    return true;\n}\nunittest\n{\n    alias candidate =\
    \ is_prime;\n\n    assert(candidate(6L) == false);\n    assert(candidate(101L)\
    \ == true);\n    assert(candidate(11L) == true);\n    assert(candidate(13441L)\
    \ == true);\n    assert(candidate(61L) == true);\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(1L) == false);\n    assert(candidate(5L) == true);\n\
    \    assert(candidate(11L) == true);\n    assert(candidate(17L) == true);\n  \
    \  assert(candidate(85L) == false);\n    assert(candidate(77L) == false);\n  \
    \  assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163950
- exit_code: 0
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n <= 1) return false;\n    if (n <= 3) return true;\n    if (n % 2 ==\
    \ 0 || n % 3 == 0) return false;\n    for (long i = 5; i * i <= n; i += 6)\n \
    \       if (n % i == 0 || n % (i + 2) == 0)\n            return false;\n    return\
    \ true;\n}\nunittest\n{\n    alias candidate = is_prime;\n\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(101L) == true);\n    assert(candidate(11L)\
    \ == true);\n    assert(candidate(13441L) == true);\n    assert(candidate(61L)\
    \ == true);\n    assert(candidate(4L) == false);\n    assert(candidate(1L) ==\
    \ false);\n    assert(candidate(5L) == true);\n    assert(candidate(11L) == true);\n\
    \    assert(candidate(17L) == true);\n    assert(candidate(85L) == false);\n \
    \   assert(candidate(77L) == false);\n    assert(candidate(255379L) == false);\n\
    }\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163950
- exit_code: 1
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n <= 1) \n        return false;\n    if (n == 2) \n        return true;\n\
    \    if (n % 2 == 0) \n        return false;\n    for (long i = 3; i <= sqrt(n);\
    \ i += 2) \n    {\n        if (n % i == 0) \n            return false;\n    }\n\
    \    return true;\n}\nunittest\n{\n    alias candidate = is_prime;\n\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(101L) == true);\n    assert(candidate(11L)\
    \ == true);\n    assert(candidate(13441L) == true);\n    assert(candidate(61L)\
    \ == true);\n    assert(candidate(4L) == false);\n    assert(candidate(1L) ==\
    \ false);\n    assert(candidate(5L) == true);\n    assert(candidate(11L) == true);\n\
    \    assert(candidate(17L) == true);\n    assert(candidate(85L) == false);\n \
    \   assert(candidate(77L) == false);\n    assert(candidate(255379L) == false);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmplxsbme07.d(14): Error: `std.math.sqrt` called with argument types
    `(long)` matches both:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float
    x)`

    and:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real
    x)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplxsbme07.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163950
- exit_code: 1
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n < 2) return false;\n    if (n == 2) return true;\n    if (n % 2 ==\
    \ 0) return false;\n    for (long i = 3; i <= sqrt(n); i += 2)\n    {\n      \
    \  if (n % i == 0) return false;\n    }\n    return true;\n}\nunittest\n{\n  \
    \  alias candidate = is_prime;\n\n    assert(candidate(6L) == false);\n    assert(candidate(101L)\
    \ == true);\n    assert(candidate(11L) == true);\n    assert(candidate(13441L)\
    \ == true);\n    assert(candidate(61L) == true);\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(1L) == false);\n    assert(candidate(5L) == true);\n\
    \    assert(candidate(11L) == true);\n    assert(candidate(17L) == true);\n  \
    \  assert(candidate(85L) == false);\n    assert(candidate(77L) == false);\n  \
    \  assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpwiv99psh.d(11): Error: `std.math.sqrt` called with argument types
    `(long)` matches both:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float
    x)`

    and:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real
    x)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwiv99psh.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163949
- exit_code: 1
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n < 2) return false;\n    if (n == 2) return true;\n    if (n % 2 ==\
    \ 0) return false;\n    for (long i = 3; i <= sqrt(n); i += 2) \n    {\n     \
    \   if (n % i == 0) return false;\n    }\n    return true;\n}\nunittest\n{\n \
    \   alias candidate = is_prime;\n\n    assert(candidate(6L) == false);\n    assert(candidate(101L)\
    \ == true);\n    assert(candidate(11L) == true);\n    assert(candidate(13441L)\
    \ == true);\n    assert(candidate(61L) == true);\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(1L) == false);\n    assert(candidate(5L) == true);\n\
    \    assert(candidate(11L) == true);\n    assert(candidate(17L) == true);\n  \
    \  assert(candidate(85L) == false);\n    assert(candidate(77L) == false);\n  \
    \  assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpk_l25oio.d(11): Error: `std.math.sqrt` called with argument types
    `(long)` matches both:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float
    x)`

    and:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real
    x)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk_l25oio.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163949
- exit_code: 1
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n < 2) return false;\n    if (n == 2) return true;\n    if (n % 2 ==\
    \ 0) return false;\n    for (long i = 3; i <= sqrt(n); i += 2) \n    {\n     \
    \   if (n % i == 0) return false;\n    }\n    return true;\n}\nunittest\n{\n \
    \   alias candidate = is_prime;\n\n    assert(candidate(6L) == false);\n    assert(candidate(101L)\
    \ == true);\n    assert(candidate(11L) == true);\n    assert(candidate(13441L)\
    \ == true);\n    assert(candidate(61L) == true);\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(1L) == false);\n    assert(candidate(5L) == true);\n\
    \    assert(candidate(11L) == true);\n    assert(candidate(17L) == true);\n  \
    \  assert(candidate(85L) == false);\n    assert(candidate(77L) == false);\n  \
    \  assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpk_l25oio.d(11): Error: `std.math.sqrt` called with argument types
    `(long)` matches both:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float
    x)`

    and:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real
    x)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk_l25oio.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163949
- exit_code: 0
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n < 2) \n    {\n        return false;\n    }\n    for (long i = 2; i\
    \ < n; i++) \n    {\n        if (n % i == 0) \n        {\n            return false;\n\
    \        }\n    }\n    return true;\n}\nunittest\n{\n    alias candidate = is_prime;\n\
    \n    assert(candidate(6L) == false);\n    assert(candidate(101L) == true);\n\
    \    assert(candidate(11L) == true);\n    assert(candidate(13441L) == true);\n\
    \    assert(candidate(61L) == true);\n    assert(candidate(4L) == false);\n  \
    \  assert(candidate(1L) == false);\n    assert(candidate(5L) == true);\n    assert(candidate(11L)\
    \ == true);\n    assert(candidate(17L) == true);\n    assert(candidate(85L) ==\
    \ false);\n    assert(candidate(77L) == false);\n    assert(candidate(255379L)\
    \ == false);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163950
- exit_code: 1
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n < 2) return false;\n    if (n == 2) return true;\n    if (n % 2 ==\
    \ 0) return false;\n    for (long i = 3; i <= sqrt(n); i += 2)\n    {\n      \
    \  if (n % i == 0) return false;\n    }\n    return true;\n}\nunittest\n{\n  \
    \  alias candidate = is_prime;\n\n    assert(candidate(6L) == false);\n    assert(candidate(101L)\
    \ == true);\n    assert(candidate(11L) == true);\n    assert(candidate(13441L)\
    \ == true);\n    assert(candidate(61L) == true);\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(1L) == false);\n    assert(candidate(5L) == true);\n\
    \    assert(candidate(11L) == true);\n    assert(candidate(17L) == true);\n  \
    \  assert(candidate(85L) == false);\n    assert(candidate(77L) == false);\n  \
    \  assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpwiv99psh.d(11): Error: `std.math.sqrt` called with argument types
    `(long)` matches both:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float
    x)`

    and:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real
    x)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwiv99psh.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163949
- exit_code: 1
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n < 2) return false;\n    if (n == 2) return true;\n    if (n % 2 ==\
    \ 0) return false;\n    for (long i = 3; i <= sqrt(n); i += 2) \n    {\n     \
    \   if (n % i == 0) return false;\n    }\n    return true;\n}\nunittest\n{\n \
    \   alias candidate = is_prime;\n\n    assert(candidate(6L) == false);\n    assert(candidate(101L)\
    \ == true);\n    assert(candidate(11L) == true);\n    assert(candidate(13441L)\
    \ == true);\n    assert(candidate(61L) == true);\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(1L) == false);\n    assert(candidate(5L) == true);\n\
    \    assert(candidate(11L) == true);\n    assert(candidate(17L) == true);\n  \
    \  assert(candidate(85L) == false);\n    assert(candidate(77L) == false);\n  \
    \  assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpk_l25oio.d(11): Error: `std.math.sqrt` called with argument types
    `(long)` matches both:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float
    x)`

    and:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real
    x)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk_l25oio.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163949
- exit_code: 1
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n < 2) return false;\n    if (n == 2) return true;\n    if (n % 2 ==\
    \ 0) return false;\n    for (long i = 3; i <= sqrt(n); i += 2)\n    {\n      \
    \  if (n % i == 0) return false;\n    }\n    return true;\n}\nunittest\n{\n  \
    \  alias candidate = is_prime;\n\n    assert(candidate(6L) == false);\n    assert(candidate(101L)\
    \ == true);\n    assert(candidate(11L) == true);\n    assert(candidate(13441L)\
    \ == true);\n    assert(candidate(61L) == true);\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(1L) == false);\n    assert(candidate(5L) == true);\n\
    \    assert(candidate(11L) == true);\n    assert(candidate(17L) == true);\n  \
    \  assert(candidate(85L) == false);\n    assert(candidate(77L) == false);\n  \
    \  assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpwiv99psh.d(11): Error: `std.math.sqrt` called with argument types
    `(long)` matches both:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float
    x)`

    and:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real
    x)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwiv99psh.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163949
- exit_code: 0
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n <= 1)\n        return false;\n    else if (n <= 3)\n        return\
    \ true;\n    else if (n % 2 == 0 || n % 3 == 0)\n        return false;\n    long\
    \ i = 5;\n    while (i * i <= n) {\n        if (n % i == 0 || n % (i + 2) == 0)\n\
    \            return false;\n        i = i + 6;\n    }\n    return true;\n}\nunittest\n\
    {\n    alias candidate = is_prime;\n\n    assert(candidate(6L) == false);\n  \
    \  assert(candidate(101L) == true);\n    assert(candidate(11L) == true);\n   \
    \ assert(candidate(13441L) == true);\n    assert(candidate(61L) == true);\n  \
    \  assert(candidate(4L) == false);\n    assert(candidate(1L) == false);\n    assert(candidate(5L)\
    \ == true);\n    assert(candidate(11L) == true);\n    assert(candidate(17L) ==\
    \ true);\n    assert(candidate(85L) == false);\n    assert(candidate(77L) == false);\n\
    \    assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163950
- exit_code: 1
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n < 2) return false;\n    if (n == 2) return true;\n    if (n % 2 ==\
    \ 0) return false;\n    for (long i = 3; i <= sqrt(n); i += 2)\n    {\n      \
    \  if (n % i == 0) return false;\n    }\n    return true;\n}\nunittest\n{\n  \
    \  alias candidate = is_prime;\n\n    assert(candidate(6L) == false);\n    assert(candidate(101L)\
    \ == true);\n    assert(candidate(11L) == true);\n    assert(candidate(13441L)\
    \ == true);\n    assert(candidate(61L) == true);\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(1L) == false);\n    assert(candidate(5L) == true);\n\
    \    assert(candidate(11L) == true);\n    assert(candidate(17L) == true);\n  \
    \  assert(candidate(85L) == false);\n    assert(candidate(77L) == false);\n  \
    \  assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpwiv99psh.d(11): Error: `std.math.sqrt` called with argument types
    `(long)` matches both:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float
    x)`

    and:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real
    x)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwiv99psh.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163949
- exit_code: 1
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n < 2)\n        return false;\n    if (n == 2)\n        return true;\n\
    \    if (n % 2 == 0)\n        return false;\n    for (long i = 3; i <= sqrt(n);\
    \ i += 2)\n        if (n % i == 0)\n            return false;\n    return true;\n\
    }\nunittest\n{\n    alias candidate = is_prime;\n\n    assert(candidate(6L) ==\
    \ false);\n    assert(candidate(101L) == true);\n    assert(candidate(11L) ==\
    \ true);\n    assert(candidate(13441L) == true);\n    assert(candidate(61L) ==\
    \ true);\n    assert(candidate(4L) == false);\n    assert(candidate(1L) == false);\n\
    \    assert(candidate(5L) == true);\n    assert(candidate(11L) == true);\n   \
    \ assert(candidate(17L) == true);\n    assert(candidate(85L) == false);\n    assert(candidate(77L)\
    \ == false);\n    assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpb2l1dt3r.d(14): Error: `std.math.sqrt` called with argument types
    `(long)` matches both:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float
    x)`

    and:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real
    x)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpb2l1dt3r.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163949
- exit_code: 1
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n < 2) return false;\n    if (n == 2) return true;\n    if (n % 2 ==\
    \ 0) return false;\n    for (long i = 3; i <= sqrt(n); i += 2)\n    {\n      \
    \  if (n % i == 0) return false;\n    }\n    return true;\n}\nunittest\n{\n  \
    \  alias candidate = is_prime;\n\n    assert(candidate(6L) == false);\n    assert(candidate(101L)\
    \ == true);\n    assert(candidate(11L) == true);\n    assert(candidate(13441L)\
    \ == true);\n    assert(candidate(61L) == true);\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(1L) == false);\n    assert(candidate(5L) == true);\n\
    \    assert(candidate(11L) == true);\n    assert(candidate(17L) == true);\n  \
    \  assert(candidate(85L) == false);\n    assert(candidate(77L) == false);\n  \
    \  assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpwiv99psh.d(11): Error: `std.math.sqrt` called with argument types
    `(long)` matches both:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float
    x)`

    and:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real
    x)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwiv99psh.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163949
- exit_code: 1
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n <= 1) return false;\n    if (n == 2) return true;\n    if (n % 2 ==\
    \ 0) return false;\n    for (int i = 3; i <= sqrt(n); i += 2)\n    {\n       \
    \ if (n % i == 0) return false;\n    }\n    return true;\n}\nunittest\n{\n   \
    \ alias candidate = is_prime;\n\n    assert(candidate(6L) == false);\n    assert(candidate(101L)\
    \ == true);\n    assert(candidate(11L) == true);\n    assert(candidate(13441L)\
    \ == true);\n    assert(candidate(61L) == true);\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(1L) == false);\n    assert(candidate(5L) == true);\n\
    \    assert(candidate(11L) == true);\n    assert(candidate(17L) == true);\n  \
    \  assert(candidate(85L) == false);\n    assert(candidate(77L) == false);\n  \
    \  assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpjwnw1fv1.d(11): Error: `std.math.sqrt` called with argument types
    `(long)` matches both:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float
    x)`

    and:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real
    x)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjwnw1fv1.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163950
- exit_code: 0
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n <= 1) \n    {\n        return false;\n    }\n    else if (n <= 3) \n\
    \    {\n        return true;\n    }\n    else if (n % 2 == 0 || n % 3 == 0) \n\
    \    {\n        return false;\n    }\n    long i = 5;\n    while (i * i <= n)\
    \ \n    {\n        if (n % i == 0 || n % (i + 2) == 0) \n        {\n         \
    \   return false;\n        }\n        i = i + 6;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = is_prime;\n\n    assert(candidate(6L) == false);\n\
    \    assert(candidate(101L) == true);\n    assert(candidate(11L) == true);\n \
    \   assert(candidate(13441L) == true);\n    assert(candidate(61L) == true);\n\
    \    assert(candidate(4L) == false);\n    assert(candidate(1L) == false);\n  \
    \  assert(candidate(5L) == true);\n    assert(candidate(11L) == true);\n    assert(candidate(17L)\
    \ == true);\n    assert(candidate(85L) == false);\n    assert(candidate(77L) ==\
    \ false);\n    assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163950
- exit_code: 1
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n < 2) return false;\n    if (n == 2) return true;\n    if (n % 2 ==\
    \ 0) return false;\n    for (long i = 3; i <= sqrt(n); i += 2)\n    {\n      \
    \  if (n % i == 0) return false;\n    }\n    return true;\n}\nunittest\n{\n  \
    \  alias candidate = is_prime;\n\n    assert(candidate(6L) == false);\n    assert(candidate(101L)\
    \ == true);\n    assert(candidate(11L) == true);\n    assert(candidate(13441L)\
    \ == true);\n    assert(candidate(61L) == true);\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(1L) == false);\n    assert(candidate(5L) == true);\n\
    \    assert(candidate(11L) == true);\n    assert(candidate(17L) == true);\n  \
    \  assert(candidate(85L) == false);\n    assert(candidate(77L) == false);\n  \
    \  assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpwiv99psh.d(11): Error: `std.math.sqrt` called with argument types
    `(long)` matches both:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float
    x)`

    and:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real
    x)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwiv99psh.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163949
- exit_code: 0
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n <= 1) return false;\n    if (n <= 3) return true;\n    if (n % 2 ==\
    \ 0 || n % 3 == 0) return false;\n    for (long i = 5; i * i <= n; i += 6)\n \
    \       if (n % i == 0 || n % (i + 2) == 0) return false;\n    return true;\n\
    }\nunittest\n{\n    alias candidate = is_prime;\n\n    assert(candidate(6L) ==\
    \ false);\n    assert(candidate(101L) == true);\n    assert(candidate(11L) ==\
    \ true);\n    assert(candidate(13441L) == true);\n    assert(candidate(61L) ==\
    \ true);\n    assert(candidate(4L) == false);\n    assert(candidate(1L) == false);\n\
    \    assert(candidate(5L) == true);\n    assert(candidate(11L) == true);\n   \
    \ assert(candidate(17L) == true);\n    assert(candidate(85L) == false);\n    assert(candidate(77L)\
    \ == false);\n    assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163950
- exit_code: 1
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n < 2) return false;\n    if (n == 2) return true;\n    if (n % 2 ==\
    \ 0) return false;\n    for (long i = 3; i <= sqrt(n); i += 2) \n    {\n     \
    \   if (n % i == 0) return false;\n    }\n    return true;\n}\nunittest\n{\n \
    \   alias candidate = is_prime;\n\n    assert(candidate(6L) == false);\n    assert(candidate(101L)\
    \ == true);\n    assert(candidate(11L) == true);\n    assert(candidate(13441L)\
    \ == true);\n    assert(candidate(61L) == true);\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(1L) == false);\n    assert(candidate(5L) == true);\n\
    \    assert(candidate(11L) == true);\n    assert(candidate(17L) == true);\n  \
    \  assert(candidate(85L) == false);\n    assert(candidate(77L) == false);\n  \
    \  assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpk_l25oio.d(11): Error: `std.math.sqrt` called with argument types
    `(long)` matches both:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float
    x)`

    and:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real
    x)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk_l25oio.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163949
- exit_code: 1
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n < 2)\n        return false;\n    if (n == 2)\n        return true;\n\
    \    if (n % 2 == 0)\n        return false;\n    for (long i = 3; i <= sqrt(n);\
    \ i += 2)\n        if (n % i == 0)\n            return false;\n    return true;\n\
    }\nunittest\n{\n    alias candidate = is_prime;\n\n    assert(candidate(6L) ==\
    \ false);\n    assert(candidate(101L) == true);\n    assert(candidate(11L) ==\
    \ true);\n    assert(candidate(13441L) == true);\n    assert(candidate(61L) ==\
    \ true);\n    assert(candidate(4L) == false);\n    assert(candidate(1L) == false);\n\
    \    assert(candidate(5L) == true);\n    assert(candidate(11L) == true);\n   \
    \ assert(candidate(17L) == true);\n    assert(candidate(85L) == false);\n    assert(candidate(77L)\
    \ == false);\n    assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpb2l1dt3r.d(14): Error: `std.math.sqrt` called with argument types
    `(long)` matches both:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float
    x)`

    and:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real
    x)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpb2l1dt3r.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163949
- exit_code: 1
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n < 2)\n        return false;\n    else if (n == 2)\n        return true;\n\
    \    else if (n % 2 == 0)\n        return false;\n    else\n    {\n        for\
    \ (long i = 3; i <= sqrt(n); i += 2)\n        {\n            if (n % i == 0)\n\
    \                return false;\n        }\n        return true;\n    }\n}\nunittest\n\
    {\n    alias candidate = is_prime;\n\n    assert(candidate(6L) == false);\n  \
    \  assert(candidate(101L) == true);\n    assert(candidate(11L) == true);\n   \
    \ assert(candidate(13441L) == true);\n    assert(candidate(61L) == true);\n  \
    \  assert(candidate(4L) == false);\n    assert(candidate(1L) == false);\n    assert(candidate(5L)\
    \ == true);\n    assert(candidate(11L) == true);\n    assert(candidate(17L) ==\
    \ true);\n    assert(candidate(85L) == false);\n    assert(candidate(77L) == false);\n\
    \    assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpswvf0y47.d(16): Error: `std.math.sqrt` called with argument types
    `(long)` matches both:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float
    x)`

    and:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real
    x)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpswvf0y47.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163950
- exit_code: 1
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n < 2)\n        return false;\n    if (n == 2)\n        return true;\n\
    \    if (n % 2 == 0)\n        return false;\n    for (long i = 3; i <= sqrt(n);\
    \ i += 2)\n        if (n % i == 0)\n            return false;\n    return true;\n\
    }\nunittest\n{\n    alias candidate = is_prime;\n\n    assert(candidate(6L) ==\
    \ false);\n    assert(candidate(101L) == true);\n    assert(candidate(11L) ==\
    \ true);\n    assert(candidate(13441L) == true);\n    assert(candidate(61L) ==\
    \ true);\n    assert(candidate(4L) == false);\n    assert(candidate(1L) == false);\n\
    \    assert(candidate(5L) == true);\n    assert(candidate(11L) == true);\n   \
    \ assert(candidate(17L) == true);\n    assert(candidate(85L) == false);\n    assert(candidate(77L)\
    \ == false);\n    assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpb2l1dt3r.d(14): Error: `std.math.sqrt` called with argument types
    `(long)` matches both:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float
    x)`

    and:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real
    x)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpb2l1dt3r.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163949
- exit_code: 1
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n < 2) return false;\n    if (n == 2) return true;\n    if (n % 2 ==\
    \ 0) return false;\n    for (long i = 3; i <= sqrt(n); i += 2)\n    {\n      \
    \  if (n % i == 0) return false;\n    }\n    return true;\n}\nunittest\n{\n  \
    \  alias candidate = is_prime;\n\n    assert(candidate(6L) == false);\n    assert(candidate(101L)\
    \ == true);\n    assert(candidate(11L) == true);\n    assert(candidate(13441L)\
    \ == true);\n    assert(candidate(61L) == true);\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(1L) == false);\n    assert(candidate(5L) == true);\n\
    \    assert(candidate(11L) == true);\n    assert(candidate(17L) == true);\n  \
    \  assert(candidate(85L) == false);\n    assert(candidate(77L) == false);\n  \
    \  assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpwiv99psh.d(11): Error: `std.math.sqrt` called with argument types
    `(long)` matches both:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float
    x)`

    and:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real
    x)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwiv99psh.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163949
- exit_code: 1
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n < 2) \n    {\n        return false;\n    }\n    for (long i = 2; i\
    \ <= sqrt(n); i++) \n    {\n        if (n % i == 0) \n        {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\nunittest\n{\n    alias candidate\
    \ = is_prime;\n\n    assert(candidate(6L) == false);\n    assert(candidate(101L)\
    \ == true);\n    assert(candidate(11L) == true);\n    assert(candidate(13441L)\
    \ == true);\n    assert(candidate(61L) == true);\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(1L) == false);\n    assert(candidate(5L) == true);\n\
    \    assert(candidate(11L) == true);\n    assert(candidate(17L) == true);\n  \
    \  assert(candidate(85L) == false);\n    assert(candidate(77L) == false);\n  \
    \  assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpswv1ox8n.d(12): Error: `std.math.sqrt` called with argument types
    `(long)` matches both:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float
    x)`

    and:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real
    x)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpswv1ox8n.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163949
- exit_code: 1
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n < 2) \n        return false;\n    if (n == 2) \n        return true;\n\
    \    if (n % 2 == 0) \n        return false;\n    for (long i = 3; i <= sqrt(n);\
    \ i += 2) \n    {\n        if (n % i == 0) \n            return false;\n    }\n\
    \    return true;\n}\nunittest\n{\n    alias candidate = is_prime;\n\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(101L) == true);\n    assert(candidate(11L)\
    \ == true);\n    assert(candidate(13441L) == true);\n    assert(candidate(61L)\
    \ == true);\n    assert(candidate(4L) == false);\n    assert(candidate(1L) ==\
    \ false);\n    assert(candidate(5L) == true);\n    assert(candidate(11L) == true);\n\
    \    assert(candidate(17L) == true);\n    assert(candidate(85L) == false);\n \
    \   assert(candidate(77L) == false);\n    assert(candidate(255379L) == false);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp_g96fhh9.d(14): Error: `std.math.sqrt` called with argument types
    `(long)` matches both:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float
    x)`

    and:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real
    x)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_g96fhh9.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163949
- exit_code: 0
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n <= 1) return false;\n    if (n <= 3) return true;\n    if (n % 2 ==\
    \ 0 || n % 3 == 0) return false;\n    for (long i = 5; i * i <= n; i += 6) \n\
    \    {\n        if (n % i == 0 || n % (i + 2) == 0) return false;\n    }\n   \
    \ return true;\n}\nunittest\n{\n    alias candidate = is_prime;\n\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(101L) == true);\n    assert(candidate(11L)\
    \ == true);\n    assert(candidate(13441L) == true);\n    assert(candidate(61L)\
    \ == true);\n    assert(candidate(4L) == false);\n    assert(candidate(1L) ==\
    \ false);\n    assert(candidate(5L) == true);\n    assert(candidate(11L) == true);\n\
    \    assert(candidate(17L) == true);\n    assert(candidate(85L) == false);\n \
    \   assert(candidate(77L) == false);\n    assert(candidate(255379L) == false);\n\
    }\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163950
- exit_code: 1
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n < 2)\n        return false;\n    if (n == 2)\n        return true;\n\
    \    if (n % 2 == 0)\n        return false;\n    for (long i = 3; i <= sqrt(n);\
    \ i += 2)\n        if (n % i == 0)\n            return false;\n    return true;\n\
    }\nunittest\n{\n    alias candidate = is_prime;\n\n    assert(candidate(6L) ==\
    \ false);\n    assert(candidate(101L) == true);\n    assert(candidate(11L) ==\
    \ true);\n    assert(candidate(13441L) == true);\n    assert(candidate(61L) ==\
    \ true);\n    assert(candidate(4L) == false);\n    assert(candidate(1L) == false);\n\
    \    assert(candidate(5L) == true);\n    assert(candidate(11L) == true);\n   \
    \ assert(candidate(17L) == true);\n    assert(candidate(85L) == false);\n    assert(candidate(77L)\
    \ == false);\n    assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpb2l1dt3r.d(14): Error: `std.math.sqrt` called with argument types
    `(long)` matches both:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float
    x)`

    and:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real
    x)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpb2l1dt3r.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163949
- exit_code: 1
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n < 2) return false;\n    if (n == 2) return true;\n    if (n % 2 ==\
    \ 0) return false;\n    for (long i = 3; i <= sqrt(n); i += 2) \n    {\n     \
    \   if (n % i == 0) return false;\n    }\n    return true;\n}\nunittest\n{\n \
    \   alias candidate = is_prime;\n\n    assert(candidate(6L) == false);\n    assert(candidate(101L)\
    \ == true);\n    assert(candidate(11L) == true);\n    assert(candidate(13441L)\
    \ == true);\n    assert(candidate(61L) == true);\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(1L) == false);\n    assert(candidate(5L) == true);\n\
    \    assert(candidate(11L) == true);\n    assert(candidate(17L) == true);\n  \
    \  assert(candidate(85L) == false);\n    assert(candidate(77L) == false);\n  \
    \  assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpk_l25oio.d(11): Error: `std.math.sqrt` called with argument types
    `(long)` matches both:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float
    x)`

    and:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real
    x)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk_l25oio.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163949
- exit_code: 0
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n <= 1) \n        return false;\n    else if (n <= 3) \n        return\
    \ true;\n    else if (n % 2 == 0 || n % 3 == 0) \n        return false;\n    else\
    \ \n    {\n        for (long i = 5; i * i <= n; i += 6) \n        {\n        \
    \    if (n % i == 0 || n % (i + 2) == 0) \n                return false;\n   \
    \     }\n        return true;\n    }\n}\nunittest\n{\n    alias candidate = is_prime;\n\
    \n    assert(candidate(6L) == false);\n    assert(candidate(101L) == true);\n\
    \    assert(candidate(11L) == true);\n    assert(candidate(13441L) == true);\n\
    \    assert(candidate(61L) == true);\n    assert(candidate(4L) == false);\n  \
    \  assert(candidate(1L) == false);\n    assert(candidate(5L) == true);\n    assert(candidate(11L)\
    \ == true);\n    assert(candidate(17L) == true);\n    assert(candidate(85L) ==\
    \ false);\n    assert(candidate(77L) == false);\n    assert(candidate(255379L)\
    \ == false);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163950
- exit_code: 1
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n <= 1) return false;\n    if (n == 2) return true;\n    if (n % 2 ==\
    \ 0) return false;\n    for (long i = 3; i <= sqrt(n); i += 2)\n    {\n      \
    \  if (n % i == 0) return false;\n    }\n    return true;\n}\nunittest\n{\n  \
    \  alias candidate = is_prime;\n\n    assert(candidate(6L) == false);\n    assert(candidate(101L)\
    \ == true);\n    assert(candidate(11L) == true);\n    assert(candidate(13441L)\
    \ == true);\n    assert(candidate(61L) == true);\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(1L) == false);\n    assert(candidate(5L) == true);\n\
    \    assert(candidate(11L) == true);\n    assert(candidate(17L) == true);\n  \
    \  assert(candidate(85L) == false);\n    assert(candidate(77L) == false);\n  \
    \  assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpwqwpihuc.d(11): Error: `std.math.sqrt` called with argument types
    `(long)` matches both:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float
    x)`

    and:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real
    x)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwqwpihuc.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163949
- exit_code: 0
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n <= 1) return false;\n    if (n <= 3) return true;\n    if (n % 2 ==\
    \ 0 || n % 3 == 0) return false;\n    for (long i = 5; i * i <= n; i += 6) \n\
    \    {\n        if (n % i == 0 || n % (i + 2) == 0) return false;\n    }\n   \
    \ return true;\n}\nunittest\n{\n    alias candidate = is_prime;\n\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(101L) == true);\n    assert(candidate(11L)\
    \ == true);\n    assert(candidate(13441L) == true);\n    assert(candidate(61L)\
    \ == true);\n    assert(candidate(4L) == false);\n    assert(candidate(1L) ==\
    \ false);\n    assert(candidate(5L) == true);\n    assert(candidate(11L) == true);\n\
    \    assert(candidate(17L) == true);\n    assert(candidate(85L) == false);\n \
    \   assert(candidate(77L) == false);\n    assert(candidate(255379L) == false);\n\
    }\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163950
- exit_code: 1
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n < 2) return false;\n    if (n == 2) return true;\n    if (n % 2 ==\
    \ 0) return false;\n    for (long i = 3; i <= sqrt(n); i += 2)\n    {\n      \
    \  if (n % i == 0) return false;\n    }\n    return true;\n}\nunittest\n{\n  \
    \  alias candidate = is_prime;\n\n    assert(candidate(6L) == false);\n    assert(candidate(101L)\
    \ == true);\n    assert(candidate(11L) == true);\n    assert(candidate(13441L)\
    \ == true);\n    assert(candidate(61L) == true);\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(1L) == false);\n    assert(candidate(5L) == true);\n\
    \    assert(candidate(11L) == true);\n    assert(candidate(17L) == true);\n  \
    \  assert(candidate(85L) == false);\n    assert(candidate(77L) == false);\n  \
    \  assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpwiv99psh.d(11): Error: `std.math.sqrt` called with argument types
    `(long)` matches both:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float
    x)`

    and:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real
    x)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwiv99psh.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163949
- exit_code: 0
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n <= 1)\n        return false;\n    else if (n <= 3)\n        return\
    \ true;\n    else if (n % 2 == 0 || n % 3 == 0)\n        return false;\n    else\n\
    \    {\n        for (int i = 5; i * i <= n; i += 6)\n        {\n            if\
    \ (n % i == 0 || n % (i + 2) == 0)\n                return false;\n        }\n\
    \        return true;\n    }\n}\nunittest\n{\n    alias candidate = is_prime;\n\
    \n    assert(candidate(6L) == false);\n    assert(candidate(101L) == true);\n\
    \    assert(candidate(11L) == true);\n    assert(candidate(13441L) == true);\n\
    \    assert(candidate(61L) == true);\n    assert(candidate(4L) == false);\n  \
    \  assert(candidate(1L) == false);\n    assert(candidate(5L) == true);\n    assert(candidate(11L)\
    \ == true);\n    assert(candidate(17L) == true);\n    assert(candidate(85L) ==\
    \ false);\n    assert(candidate(77L) == false);\n    assert(candidate(255379L)\
    \ == false);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163950
- exit_code: 1
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n < 2) return false;\n    if (n == 2) return true;\n    if (n % 2 ==\
    \ 0) return false;\n    for (long i = 3; i <= sqrt(n); i += 2)\n    {\n      \
    \  if (n % i == 0) return false;\n    }\n    return true;\n}\nunittest\n{\n  \
    \  alias candidate = is_prime;\n\n    assert(candidate(6L) == false);\n    assert(candidate(101L)\
    \ == true);\n    assert(candidate(11L) == true);\n    assert(candidate(13441L)\
    \ == true);\n    assert(candidate(61L) == true);\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(1L) == false);\n    assert(candidate(5L) == true);\n\
    \    assert(candidate(11L) == true);\n    assert(candidate(17L) == true);\n  \
    \  assert(candidate(85L) == false);\n    assert(candidate(77L) == false);\n  \
    \  assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpwiv99psh.d(11): Error: `std.math.sqrt` called with argument types
    `(long)` matches both:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float
    x)`

    and:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real
    x)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwiv99psh.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163949
- exit_code: 1
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n < 2) return false;\n    if (n == 2) return true;\n    if (n % 2 ==\
    \ 0) return false;\n    for (long i = 3; i <= sqrt(n); i += 2)\n    {\n      \
    \  if (n % i == 0) return false;\n    }\n    return true;\n}\nunittest\n{\n  \
    \  alias candidate = is_prime;\n\n    assert(candidate(6L) == false);\n    assert(candidate(101L)\
    \ == true);\n    assert(candidate(11L) == true);\n    assert(candidate(13441L)\
    \ == true);\n    assert(candidate(61L) == true);\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(1L) == false);\n    assert(candidate(5L) == true);\n\
    \    assert(candidate(11L) == true);\n    assert(candidate(17L) == true);\n  \
    \  assert(candidate(85L) == false);\n    assert(candidate(77L) == false);\n  \
    \  assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpwiv99psh.d(11): Error: `std.math.sqrt` called with argument types
    `(long)` matches both:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float
    x)`

    and:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real
    x)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwiv99psh.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163949
- exit_code: 0
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n <= 1)\n        return false;\n    else if (n <= 3)\n        return\
    \ true;\n    else if (n % 2 == 0 || n % 3 == 0)\n        return false;\n    long\
    \ i = 5;\n    while (i * i <= n) {\n        if (n % i == 0 || n % (i + 2) == 0)\n\
    \            return false;\n        i += 6;\n    }\n    return true;\n}\nunittest\n\
    {\n    alias candidate = is_prime;\n\n    assert(candidate(6L) == false);\n  \
    \  assert(candidate(101L) == true);\n    assert(candidate(11L) == true);\n   \
    \ assert(candidate(13441L) == true);\n    assert(candidate(61L) == true);\n  \
    \  assert(candidate(4L) == false);\n    assert(candidate(1L) == false);\n    assert(candidate(5L)\
    \ == true);\n    assert(candidate(11L) == true);\n    assert(candidate(17L) ==\
    \ true);\n    assert(candidate(85L) == false);\n    assert(candidate(77L) == false);\n\
    \    assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163950
- exit_code: 1
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n < 2) return false;\n    if (n == 2) return true;\n    if (n % 2 ==\
    \ 0) return false;\n    for (long i = 3; i <= sqrt(n); i += 2)\n    {\n      \
    \  if (n % i == 0) return false;\n    }\n    return true;\n}\nunittest\n{\n  \
    \  alias candidate = is_prime;\n\n    assert(candidate(6L) == false);\n    assert(candidate(101L)\
    \ == true);\n    assert(candidate(11L) == true);\n    assert(candidate(13441L)\
    \ == true);\n    assert(candidate(61L) == true);\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(1L) == false);\n    assert(candidate(5L) == true);\n\
    \    assert(candidate(11L) == true);\n    assert(candidate(17L) == true);\n  \
    \  assert(candidate(85L) == false);\n    assert(candidate(77L) == false);\n  \
    \  assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpwiv99psh.d(11): Error: `std.math.sqrt` called with argument types
    `(long)` matches both:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float
    x)`

    and:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real
    x)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwiv99psh.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163949
- exit_code: 0
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n <= 1) return false;\n    if (n <= 3) return true;\n    if (n % 2 ==\
    \ 0 || n % 3 == 0) return false;\n    for (long i = 5; i * i <= n; i += 6) \n\
    \    {\n        if (n % i == 0 || n % (i + 2) == 0) return false;\n    }\n   \
    \ return true;\n}\nunittest\n{\n    alias candidate = is_prime;\n\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(101L) == true);\n    assert(candidate(11L)\
    \ == true);\n    assert(candidate(13441L) == true);\n    assert(candidate(61L)\
    \ == true);\n    assert(candidate(4L) == false);\n    assert(candidate(1L) ==\
    \ false);\n    assert(candidate(5L) == true);\n    assert(candidate(11L) == true);\n\
    \    assert(candidate(17L) == true);\n    assert(candidate(85L) == false);\n \
    \   assert(candidate(77L) == false);\n    assert(candidate(255379L) == false);\n\
    }\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163950
- exit_code: 0
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n <= 1) \n        return false;\n    if (n <= 3) \n        return true;\n\
    \    if (n % 2 == 0 || n % 3 == 0) \n        return false;\n    for (int i = 5;\
    \ i * i <= n; i = i + 6) \n        if (n % i == 0 || n % (i + 2) == 0) \n    \
    \        return false;\n    return true;\n}\nunittest\n{\n    alias candidate\
    \ = is_prime;\n\n    assert(candidate(6L) == false);\n    assert(candidate(101L)\
    \ == true);\n    assert(candidate(11L) == true);\n    assert(candidate(13441L)\
    \ == true);\n    assert(candidate(61L) == true);\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(1L) == false);\n    assert(candidate(5L) == true);\n\
    \    assert(candidate(11L) == true);\n    assert(candidate(17L) == true);\n  \
    \  assert(candidate(85L) == false);\n    assert(candidate(77L) == false);\n  \
    \  assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163950
- exit_code: 1
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n <= 1)\n        return false;\n    if (n == 2)\n        return true;\n\
    \    if (n % 2 == 0)\n        return false;\n    for (long i = 3; i <= sqrt(n);\
    \ i += 2)\n        if (n % i == 0)\n            return false;\n    return true;\n\
    }\nunittest\n{\n    alias candidate = is_prime;\n\n    assert(candidate(6L) ==\
    \ false);\n    assert(candidate(101L) == true);\n    assert(candidate(11L) ==\
    \ true);\n    assert(candidate(13441L) == true);\n    assert(candidate(61L) ==\
    \ true);\n    assert(candidate(4L) == false);\n    assert(candidate(1L) == false);\n\
    \    assert(candidate(5L) == true);\n    assert(candidate(11L) == true);\n   \
    \ assert(candidate(17L) == true);\n    assert(candidate(85L) == false);\n    assert(candidate(77L)\
    \ == false);\n    assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp2opzo5tf.d(14): Error: `std.math.sqrt` called with argument types
    `(long)` matches both:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float
    x)`

    and:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real
    x)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2opzo5tf.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163949
- exit_code: 1
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n < 2)\n        return false;\n    else if (n == 2)\n        return true;\n\
    \    else if (n % 2 == 0)\n        return false;\n    else\n    {\n        for\
    \ (long i = 3; i <= sqrt(n); i += 2)\n        {\n            if (n % i == 0)\n\
    \                return false;\n        }\n        return true;\n    }\n}\nunittest\n\
    {\n    alias candidate = is_prime;\n\n    assert(candidate(6L) == false);\n  \
    \  assert(candidate(101L) == true);\n    assert(candidate(11L) == true);\n   \
    \ assert(candidate(13441L) == true);\n    assert(candidate(61L) == true);\n  \
    \  assert(candidate(4L) == false);\n    assert(candidate(1L) == false);\n    assert(candidate(5L)\
    \ == true);\n    assert(candidate(11L) == true);\n    assert(candidate(17L) ==\
    \ true);\n    assert(candidate(85L) == false);\n    assert(candidate(77L) == false);\n\
    \    assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpswvf0y47.d(16): Error: `std.math.sqrt` called with argument types
    `(long)` matches both:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float
    x)`

    and:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real
    x)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpswvf0y47.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163950
- exit_code: 1
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n < 2) return false;\n    if (n == 2) return true;\n    if (n % 2 ==\
    \ 0) return false;\n    for (long i = 3; i <= sqrt(n); i += 2)\n    {\n      \
    \  if (n % i == 0) return false;\n    }\n    return true;\n}\nunittest\n{\n  \
    \  alias candidate = is_prime;\n\n    assert(candidate(6L) == false);\n    assert(candidate(101L)\
    \ == true);\n    assert(candidate(11L) == true);\n    assert(candidate(13441L)\
    \ == true);\n    assert(candidate(61L) == true);\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(1L) == false);\n    assert(candidate(5L) == true);\n\
    \    assert(candidate(11L) == true);\n    assert(candidate(17L) == true);\n  \
    \  assert(candidate(85L) == false);\n    assert(candidate(77L) == false);\n  \
    \  assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpwiv99psh.d(11): Error: `std.math.sqrt` called with argument types
    `(long)` matches both:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float
    x)`

    and:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real
    x)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwiv99psh.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163949
- exit_code: 1
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n < 2) return false;\n    if (n == 2) return true;\n    if (n % 2 ==\
    \ 0) return false;\n    for (long i = 3; i <= sqrt(n); i += 2)\n    {\n      \
    \  if (n % i == 0) return false;\n    }\n    return true;\n}\nunittest\n{\n  \
    \  alias candidate = is_prime;\n\n    assert(candidate(6L) == false);\n    assert(candidate(101L)\
    \ == true);\n    assert(candidate(11L) == true);\n    assert(candidate(13441L)\
    \ == true);\n    assert(candidate(61L) == true);\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(1L) == false);\n    assert(candidate(5L) == true);\n\
    \    assert(candidate(11L) == true);\n    assert(candidate(17L) == true);\n  \
    \  assert(candidate(85L) == false);\n    assert(candidate(77L) == false);\n  \
    \  assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpwiv99psh.d(11): Error: `std.math.sqrt` called with argument types
    `(long)` matches both:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float
    x)`

    and:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real
    x)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwiv99psh.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163949
- exit_code: 1
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n < 2) return false;\n    if (n == 2) return true;\n    if (n % 2 ==\
    \ 0) return false;\n    for (long i = 3; i <= sqrt(n); i += 2) \n    {\n     \
    \   if (n % i == 0) return false;\n    }\n    return true;\n}\nunittest\n{\n \
    \   alias candidate = is_prime;\n\n    assert(candidate(6L) == false);\n    assert(candidate(101L)\
    \ == true);\n    assert(candidate(11L) == true);\n    assert(candidate(13441L)\
    \ == true);\n    assert(candidate(61L) == true);\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(1L) == false);\n    assert(candidate(5L) == true);\n\
    \    assert(candidate(11L) == true);\n    assert(candidate(17L) == true);\n  \
    \  assert(candidate(85L) == false);\n    assert(candidate(77L) == false);\n  \
    \  assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpk_l25oio.d(11): Error: `std.math.sqrt` called with argument types
    `(long)` matches both:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float
    x)`

    and:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real
    x)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk_l25oio.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163949
- exit_code: 1
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n < 2)\n        return false;\n    if (n == 2)\n        return true;\n\
    \    if (n % 2 == 0)\n        return false;\n    for (long i = 3; i <= sqrt(n);\
    \ i += 2)\n        if (n % i == 0)\n            return false;\n    return true;\n\
    }\nunittest\n{\n    alias candidate = is_prime;\n\n    assert(candidate(6L) ==\
    \ false);\n    assert(candidate(101L) == true);\n    assert(candidate(11L) ==\
    \ true);\n    assert(candidate(13441L) == true);\n    assert(candidate(61L) ==\
    \ true);\n    assert(candidate(4L) == false);\n    assert(candidate(1L) == false);\n\
    \    assert(candidate(5L) == true);\n    assert(candidate(11L) == true);\n   \
    \ assert(candidate(17L) == true);\n    assert(candidate(85L) == false);\n    assert(candidate(77L)\
    \ == false);\n    assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpb2l1dt3r.d(14): Error: `std.math.sqrt` called with argument types
    `(long)` matches both:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float
    x)`

    and:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real
    x)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpb2l1dt3r.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163949
- exit_code: 1
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n <= 1) return false;\n    if (n == 2) return true;\n    if (n % 2 ==\
    \ 0) return false;\n    for (long i = 3; i <= sqrt(n); i += 2)\n    {\n      \
    \  if (n % i == 0) return false;\n    }\n    return true;\n}\nunittest\n{\n  \
    \  alias candidate = is_prime;\n\n    assert(candidate(6L) == false);\n    assert(candidate(101L)\
    \ == true);\n    assert(candidate(11L) == true);\n    assert(candidate(13441L)\
    \ == true);\n    assert(candidate(61L) == true);\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(1L) == false);\n    assert(candidate(5L) == true);\n\
    \    assert(candidate(11L) == true);\n    assert(candidate(17L) == true);\n  \
    \  assert(candidate(85L) == false);\n    assert(candidate(77L) == false);\n  \
    \  assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpwqwpihuc.d(11): Error: `std.math.sqrt` called with argument types
    `(long)` matches both:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float
    x)`

    and:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real
    x)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwqwpihuc.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163949
- exit_code: 0
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n <= 1)\n        return false;\n    else if (n <= 3)\n        return\
    \ true;\n    else if (n % 2 == 0 || n % 3 == 0)\n        return false;\n    else\n\
    \    {\n        for (long i = 5; i * i <= n; i += 6)\n        {\n            if\
    \ (n % i == 0 || n % (i + 2) == 0)\n                return false;\n        }\n\
    \        return true;\n    }\n}\nunittest\n{\n    alias candidate = is_prime;\n\
    \n    assert(candidate(6L) == false);\n    assert(candidate(101L) == true);\n\
    \    assert(candidate(11L) == true);\n    assert(candidate(13441L) == true);\n\
    \    assert(candidate(61L) == true);\n    assert(candidate(4L) == false);\n  \
    \  assert(candidate(1L) == false);\n    assert(candidate(5L) == true);\n    assert(candidate(11L)\
    \ == true);\n    assert(candidate(17L) == true);\n    assert(candidate(85L) ==\
    \ false);\n    assert(candidate(77L) == false);\n    assert(candidate(255379L)\
    \ == false);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163950
- exit_code: 0
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n <= 1)\n        return false;\n    else if (n <= 3)\n        return\
    \ true;\n    else if (n % 2 == 0 || n % 3 == 0)\n        return false;\n    long\
    \ i = 5;\n    while (i * i <= n) {\n        if (n % i == 0 || n % (i + 2) == 0)\n\
    \            return false;\n        i = i + 6;\n    }\n    return true;\n}\nunittest\n\
    {\n    alias candidate = is_prime;\n\n    assert(candidate(6L) == false);\n  \
    \  assert(candidate(101L) == true);\n    assert(candidate(11L) == true);\n   \
    \ assert(candidate(13441L) == true);\n    assert(candidate(61L) == true);\n  \
    \  assert(candidate(4L) == false);\n    assert(candidate(1L) == false);\n    assert(candidate(5L)\
    \ == true);\n    assert(candidate(11L) == true);\n    assert(candidate(17L) ==\
    \ true);\n    assert(candidate(85L) == false);\n    assert(candidate(77L) == false);\n\
    \    assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163950
- exit_code: 1
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n < 2) return false;\n    if (n == 2) return true;\n    if (n % 2 ==\
    \ 0) return false;\n    for (long i = 3; i <= sqrt(n); i += 2)\n    {\n      \
    \  if (n % i == 0) return false;\n    }\n    return true;\n}\nunittest\n{\n  \
    \  alias candidate = is_prime;\n\n    assert(candidate(6L) == false);\n    assert(candidate(101L)\
    \ == true);\n    assert(candidate(11L) == true);\n    assert(candidate(13441L)\
    \ == true);\n    assert(candidate(61L) == true);\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(1L) == false);\n    assert(candidate(5L) == true);\n\
    \    assert(candidate(11L) == true);\n    assert(candidate(17L) == true);\n  \
    \  assert(candidate(85L) == false);\n    assert(candidate(77L) == false);\n  \
    \  assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpwiv99psh.d(11): Error: `std.math.sqrt` called with argument types
    `(long)` matches both:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float
    x)`

    and:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real
    x)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwiv99psh.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163949
- exit_code: 1
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n < 2) return false;\n    if (n == 2) return true;\n    if (n % 2 ==\
    \ 0) return false;\n    for (long i = 3; i <= sqrt(n); i += 2) \n    {\n     \
    \   if (n % i == 0) return false;\n    }\n    return true;\n}\nunittest\n{\n \
    \   alias candidate = is_prime;\n\n    assert(candidate(6L) == false);\n    assert(candidate(101L)\
    \ == true);\n    assert(candidate(11L) == true);\n    assert(candidate(13441L)\
    \ == true);\n    assert(candidate(61L) == true);\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(1L) == false);\n    assert(candidate(5L) == true);\n\
    \    assert(candidate(11L) == true);\n    assert(candidate(17L) == true);\n  \
    \  assert(candidate(85L) == false);\n    assert(candidate(77L) == false);\n  \
    \  assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpk_l25oio.d(11): Error: `std.math.sqrt` called with argument types
    `(long)` matches both:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float
    x)`

    and:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real
    x)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk_l25oio.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163949
- exit_code: 1
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n < 2) return false;\n    if (n == 2) return true;\n    if (n % 2 ==\
    \ 0) return false;\n    for (long i = 3; i <= sqrt(n); i += 2)\n    {\n      \
    \  if (n % i == 0) return false;\n    }\n    return true;\n}\nunittest\n{\n  \
    \  alias candidate = is_prime;\n\n    assert(candidate(6L) == false);\n    assert(candidate(101L)\
    \ == true);\n    assert(candidate(11L) == true);\n    assert(candidate(13441L)\
    \ == true);\n    assert(candidate(61L) == true);\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(1L) == false);\n    assert(candidate(5L) == true);\n\
    \    assert(candidate(11L) == true);\n    assert(candidate(17L) == true);\n  \
    \  assert(candidate(85L) == false);\n    assert(candidate(77L) == false);\n  \
    \  assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpwiv99psh.d(11): Error: `std.math.sqrt` called with argument types
    `(long)` matches both:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float
    x)`

    and:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real
    x)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwiv99psh.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163949
- exit_code: 1
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n < 2)\n        return false;\n    if (n == 2)\n        return true;\n\
    \    if (n % 2 == 0)\n        return false;\n    for (long i = 3; i <= sqrt(n);\
    \ i += 2)\n        if (n % i == 0)\n            return false;\n    return true;\n\
    }\nunittest\n{\n    alias candidate = is_prime;\n\n    assert(candidate(6L) ==\
    \ false);\n    assert(candidate(101L) == true);\n    assert(candidate(11L) ==\
    \ true);\n    assert(candidate(13441L) == true);\n    assert(candidate(61L) ==\
    \ true);\n    assert(candidate(4L) == false);\n    assert(candidate(1L) == false);\n\
    \    assert(candidate(5L) == true);\n    assert(candidate(11L) == true);\n   \
    \ assert(candidate(17L) == true);\n    assert(candidate(85L) == false);\n    assert(candidate(77L)\
    \ == false);\n    assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpb2l1dt3r.d(14): Error: `std.math.sqrt` called with argument types
    `(long)` matches both:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float
    x)`

    and:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real
    x)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpb2l1dt3r.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163949
- exit_code: 1
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n < 2)\n        return false;\n    if (n == 2)\n        return true;\n\
    \    if (n % 2 == 0)\n        return false;\n    for (long i = 3; i <= sqrt(n);\
    \ i += 2)\n        if (n % i == 0)\n            return false;\n    return true;\n\
    }\nunittest\n{\n    alias candidate = is_prime;\n\n    assert(candidate(6L) ==\
    \ false);\n    assert(candidate(101L) == true);\n    assert(candidate(11L) ==\
    \ true);\n    assert(candidate(13441L) == true);\n    assert(candidate(61L) ==\
    \ true);\n    assert(candidate(4L) == false);\n    assert(candidate(1L) == false);\n\
    \    assert(candidate(5L) == true);\n    assert(candidate(11L) == true);\n   \
    \ assert(candidate(17L) == true);\n    assert(candidate(85L) == false);\n    assert(candidate(77L)\
    \ == false);\n    assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpb2l1dt3r.d(14): Error: `std.math.sqrt` called with argument types
    `(long)` matches both:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float
    x)`

    and:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real
    x)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpb2l1dt3r.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163949
- exit_code: 0
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n <= 1)\n        return false;\n    else if (n <= 3)\n        return\
    \ true;\n    else if (n % 2 == 0 || n % 3 == 0)\n        return false;\n    int\
    \ i = 5;\n    while (i * i <= n) {\n        if (n % i == 0 || n % (i + 2) == 0)\n\
    \            return false;\n        i += 6;\n    }\n    return true;\n}\nunittest\n\
    {\n    alias candidate = is_prime;\n\n    assert(candidate(6L) == false);\n  \
    \  assert(candidate(101L) == true);\n    assert(candidate(11L) == true);\n   \
    \ assert(candidate(13441L) == true);\n    assert(candidate(61L) == true);\n  \
    \  assert(candidate(4L) == false);\n    assert(candidate(1L) == false);\n    assert(candidate(5L)\
    \ == true);\n    assert(candidate(11L) == true);\n    assert(candidate(17L) ==\
    \ true);\n    assert(candidate(85L) == false);\n    assert(candidate(77L) == false);\n\
    \    assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163950
- exit_code: 0
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n <= 1) return false;\n    if (n <= 3) return true;\n    if (n % 2 ==\
    \ 0 || n % 3 == 0) return false;\n    for (long i = 5; i * i <= n; i += 6)\n \
    \       if (n % i == 0 || n % (i + 2) == 0)\n            return false;\n    return\
    \ true;\n}\nunittest\n{\n    alias candidate = is_prime;\n\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(101L) == true);\n    assert(candidate(11L)\
    \ == true);\n    assert(candidate(13441L) == true);\n    assert(candidate(61L)\
    \ == true);\n    assert(candidate(4L) == false);\n    assert(candidate(1L) ==\
    \ false);\n    assert(candidate(5L) == true);\n    assert(candidate(11L) == true);\n\
    \    assert(candidate(17L) == true);\n    assert(candidate(85L) == false);\n \
    \   assert(candidate(77L) == false);\n    assert(candidate(255379L) == false);\n\
    }\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163950
- exit_code: 1
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n < 2) return false;\n    if (n == 2) return true;\n    if (n % 2 ==\
    \ 0) return false;\n    for (long i = 3; i <= sqrt(n); i += 2) \n    {\n     \
    \   if (n % i == 0) return false;\n    }\n    return true;\n}\nunittest\n{\n \
    \   alias candidate = is_prime;\n\n    assert(candidate(6L) == false);\n    assert(candidate(101L)\
    \ == true);\n    assert(candidate(11L) == true);\n    assert(candidate(13441L)\
    \ == true);\n    assert(candidate(61L) == true);\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(1L) == false);\n    assert(candidate(5L) == true);\n\
    \    assert(candidate(11L) == true);\n    assert(candidate(17L) == true);\n  \
    \  assert(candidate(85L) == false);\n    assert(candidate(77L) == false);\n  \
    \  assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpk_l25oio.d(11): Error: `std.math.sqrt` called with argument types
    `(long)` matches both:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float
    x)`

    and:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real
    x)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk_l25oio.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163949
- exit_code: 1
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n < 2)\n        return false;\n    if (n == 2)\n        return true;\n\
    \    if (n % 2 == 0)\n        return false;\n    for (long i = 3; i <= sqrt(n);\
    \ i += 2)\n        if (n % i == 0)\n            return false;\n    return true;\n\
    }\nunittest\n{\n    alias candidate = is_prime;\n\n    assert(candidate(6L) ==\
    \ false);\n    assert(candidate(101L) == true);\n    assert(candidate(11L) ==\
    \ true);\n    assert(candidate(13441L) == true);\n    assert(candidate(61L) ==\
    \ true);\n    assert(candidate(4L) == false);\n    assert(candidate(1L) == false);\n\
    \    assert(candidate(5L) == true);\n    assert(candidate(11L) == true);\n   \
    \ assert(candidate(17L) == true);\n    assert(candidate(85L) == false);\n    assert(candidate(77L)\
    \ == false);\n    assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpb2l1dt3r.d(14): Error: `std.math.sqrt` called with argument types
    `(long)` matches both:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float
    x)`

    and:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real
    x)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpb2l1dt3r.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163949
- exit_code: 1
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n < 2)\n        return false;\n    if (n == 2)\n        return true;\n\
    \    if (n % 2 == 0)\n        return false;\n    for (long i = 3; i <= sqrt(n);\
    \ i += 2)\n        if (n % i == 0)\n            return false;\n    return true;\n\
    }\nunittest\n{\n    alias candidate = is_prime;\n\n    assert(candidate(6L) ==\
    \ false);\n    assert(candidate(101L) == true);\n    assert(candidate(11L) ==\
    \ true);\n    assert(candidate(13441L) == true);\n    assert(candidate(61L) ==\
    \ true);\n    assert(candidate(4L) == false);\n    assert(candidate(1L) == false);\n\
    \    assert(candidate(5L) == true);\n    assert(candidate(11L) == true);\n   \
    \ assert(candidate(17L) == true);\n    assert(candidate(85L) == false);\n    assert(candidate(77L)\
    \ == false);\n    assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpb2l1dt3r.d(14): Error: `std.math.sqrt` called with argument types
    `(long)` matches both:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float
    x)`

    and:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real
    x)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpb2l1dt3r.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163949
- exit_code: 1
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n < 2) return false;\n    if (n == 2) return true;\n    if (n % 2 ==\
    \ 0) return false;\n    for (long i = 3; i <= sqrt(n); i += 2) \n    {\n     \
    \   if (n % i == 0) return false;\n    }\n    return true;\n}\nunittest\n{\n \
    \   alias candidate = is_prime;\n\n    assert(candidate(6L) == false);\n    assert(candidate(101L)\
    \ == true);\n    assert(candidate(11L) == true);\n    assert(candidate(13441L)\
    \ == true);\n    assert(candidate(61L) == true);\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(1L) == false);\n    assert(candidate(5L) == true);\n\
    \    assert(candidate(11L) == true);\n    assert(candidate(17L) == true);\n  \
    \  assert(candidate(85L) == false);\n    assert(candidate(77L) == false);\n  \
    \  assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpk_l25oio.d(11): Error: `std.math.sqrt` called with argument types
    `(long)` matches both:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float
    x)`

    and:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real
    x)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk_l25oio.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163949
- exit_code: 1
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n                                \n*/\nbool is_prime(long n) \n{\n\
    \    if (n < 2) return false;\n    if (n == 2) return true;\n    if (n % 2 ==\
    \ 0) return false;\n    for (long i = 3; i <= sqrt(n); i += 2)\n    {\n      \
    \  if (n % i == 0) return false;\n    }\n    return true;\n}\nunittest\n{\n  \
    \  alias candidate = is_prime;\n\n    assert(candidate(6L) == false);\n    assert(candidate(101L)\
    \ == true);\n    assert(candidate(11L) == true);\n    assert(candidate(13441L)\
    \ == true);\n    assert(candidate(61L) == true);\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(1L) == false);\n    assert(candidate(5L) == true);\n\
    \    assert(candidate(11L) == true);\n    assert(candidate(17L) == true);\n  \
    \  assert(candidate(85L) == false);\n    assert(candidate(77L) == false);\n  \
    \  assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpwiv99psh.d(11): Error: `std.math.sqrt` called with argument types
    `(long)` matches both:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float
    x)`

    and:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real
    x)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwiv99psh.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163949

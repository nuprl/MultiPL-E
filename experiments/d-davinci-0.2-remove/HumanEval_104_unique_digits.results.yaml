language: d
name: HumanEval_104_unique_digits
results:
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    auto result = new long[];\n\
    \    foreach(i; x)\n    {\n        if(i.digits.all!(a => a % 2 != 0))\n      \
    \      result ~= i;\n    }\n    return result.sort;\n}\nunittest\n{\n    alias\
    \ candidate = unique_digits;\n\n    assert(candidate([15L, 33L, 1422L, 1L]) ==\
    \ [1L, 15L, 33L]);\n    assert(candidate([152L, 323L, 1422L, 10L]) == []);\n \
    \   assert(candidate([12345L, 2033L, 111L, 151L]) == [111L, 151L]);\n    assert(candidate([135L,\
    \ 103L, 31L]) == [31L, 135L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp13qgb3fo.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    long[] res = new long[x.length];\n\
    \    int count = 0;\n    foreach(long i; x)\n    {\n        if(i == 0)\n     \
    \   {\n            res[count] = i;\n            count++;\n        }\n        else\n\
    \        {\n            int flag = 0;\n            while(i != 0)\n           \
    \ {\n                if(i % 2 == 0)\n                {\n                    flag\
    \ = 1;\n                    break;\n                }\n                i /= 10;\n\
    \            }\n            if(flag == 0)\n            {\n                res[count]\
    \ = i;\n                count++;\n            }\n        }\n    }\n    res = res[0..count];\n\
    \    sort(res);\n    return res;\n}\nunittest\n{\n    alias candidate = unique_digits;\n\
    \n    assert(candidate([15L, 33L, 1422L, 1L]) == [1L, 15L, 33L]);\n    assert(candidate([152L,\
    \ 323L, 1422L, 10L]) == []);\n    assert(candidate([12345L, 2033L, 111L, 151L])\
    \ == [111L, 151L]);\n    assert(candidate([135L, 103L, 31L]) == [31L, 135L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpt2r9izmz.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    long[] result = new long[0];\n\
    \    foreach(long i; x)\n    {\n        if(i.toString().length == 1)\n       \
    \ {\n            result ~= i;\n        }\n        else\n        {\n          \
    \  bool isEven = false;\n            foreach(char c; i.toString())\n         \
    \   {\n                if(c.to!int % 2 == 0)\n                {\n            \
    \        isEven = true;\n                    break;\n                }\n     \
    \       }\n            if(!isEven)\n            {\n                result ~= i;\n\
    \            }\n        }\n    }\n    return result.sort();\n}\nunittest\n{\n\
    \    alias candidate = unique_digits;\n\n    assert(candidate([15L, 33L, 1422L,\
    \ 1L]) == [1L, 15L, 33L]);\n    assert(candidate([152L, 323L, 1422L, 10L]) ==\
    \ []);\n    assert(candidate([12345L, 2033L, 111L, 151L]) == [111L, 151L]);\n\
    \    assert(candidate([135L, 103L, 31L]) == [31L, 135L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3t3dsodm.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    int[] evens = [0,2,4,6,8];\n\
    \    int[] odds = [1,3,5,7,9];\n    long[] result = [];\n    foreach(long i; x)\n\
    \    {\n        bool even = false;\n        foreach(long j; evens)\n        {\n\
    \            if(i.toString().contains(j.toString()))\n            {\n        \
    \        even = true;\n                break;\n            }\n        }\n    \
    \    if(!even)\n        {\n            result ~= i;\n        }\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = unique_digits;\n\n    assert(candidate([15L,\
    \ 33L, 1422L, 1L]) == [1L, 15L, 33L]);\n    assert(candidate([152L, 323L, 1422L,\
    \ 10L]) == []);\n    assert(candidate([12345L, 2033L, 111L, 151L]) == [111L, 151L]);\n\
    \    assert(candidate([135L, 103L, 31L]) == [31L, 135L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9vnpkzj9.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    long[] result = new long[0];\n\
    \    foreach(long i; x)\n    {\n        if(i.digits.all!(a => a % 2 != 0))\n \
    \       {\n            result ~= i;\n        }\n    }\n    return result.sort;\n\
    }\nunittest\n{\n    alias candidate = unique_digits;\n\n    assert(candidate([15L,\
    \ 33L, 1422L, 1L]) == [1L, 15L, 33L]);\n    assert(candidate([152L, 323L, 1422L,\
    \ 10L]) == []);\n    assert(candidate([12345L, 2033L, 111L, 151L]) == [111L, 151L]);\n\
    \    assert(candidate([135L, 103L, 31L]) == [31L, 135L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpuwud5mw2.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    long[] result = new long[0];\n\
    \    foreach(long i; x)\n    {\n        if(i.digits.all!(a => a.isOdd))\n    \
    \    {\n            result ~= i;\n        }\n    }\n    return result.sort;\n\
    }\nunittest\n{\n    alias candidate = unique_digits;\n\n    assert(candidate([15L,\
    \ 33L, 1422L, 1L]) == [1L, 15L, 33L]);\n    assert(candidate([152L, 323L, 1422L,\
    \ 10L]) == []);\n    assert(candidate([12345L, 2033L, 111L, 151L]) == [111L, 151L]);\n\
    \    assert(candidate([135L, 103L, 31L]) == [31L, 135L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxb9it585.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    auto res = new long[];\n \
    \   foreach(i; x)\n    {\n        if(i.digits.filter!(a => a % 2 == 0).empty)\n\
    \            res ~= i;\n    }\n    return res.sort;\n}\nunittest\n{\n    alias\
    \ candidate = unique_digits;\n\n    assert(candidate([15L, 33L, 1422L, 1L]) ==\
    \ [1L, 15L, 33L]);\n    assert(candidate([152L, 323L, 1422L, 10L]) == []);\n \
    \   assert(candidate([12345L, 2033L, 111L, 151L]) == [111L, 151L]);\n    assert(candidate([135L,\
    \ 103L, 31L]) == [31L, 135L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpoxit5it3.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    int[] evens = [0,2,4,6,8];\n\
    \    auto res = new long[];\n    foreach(num; x)\n    {\n        bool hasEven\
    \ = false;\n        foreach(digit; num.toString())\n        {\n            if(evens.canFind(digit.to!int))\n\
    \            {\n                hasEven = true;\n                break;\n    \
    \        }\n        }\n        if(!hasEven)\n        {\n            res ~= num;\n\
    \        }\n    }\n    return res.sort();\n}\nunittest\n{\n    alias candidate\
    \ = unique_digits;\n\n    assert(candidate([15L, 33L, 1422L, 1L]) == [1L, 15L,\
    \ 33L]);\n    assert(candidate([152L, 323L, 1422L, 10L]) == []);\n    assert(candidate([12345L,\
    \ 2033L, 111L, 151L]) == [111L, 151L]);\n    assert(candidate([135L, 103L, 31L])\
    \ == [31L, 135L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnqnobbm5.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    long[] result = new long[0];\n\
    \    foreach(long i; x)\n    {\n        if(i.toString().length == 1)\n       \
    \ {\n            result ~= i;\n        }\n        else\n        {\n          \
    \  bool isEven = false;\n            foreach(char c; i.toString())\n         \
    \   {\n                if(c.to!int() % 2 == 0)\n                {\n          \
    \          isEven = true;\n                    break;\n                }\n   \
    \         }\n            if(!isEven)\n            {\n                result ~=\
    \ i;\n            }\n        }\n    }\n    return result.sort();\n}\nunittest\n\
    {\n    alias candidate = unique_digits;\n\n    assert(candidate([15L, 33L, 1422L,\
    \ 1L]) == [1L, 15L, 33L]);\n    assert(candidate([152L, 323L, 1422L, 10L]) ==\
    \ []);\n    assert(candidate([12345L, 2033L, 111L, 151L]) == [111L, 151L]);\n\
    \    assert(candidate([135L, 103L, 31L]) == [31L, 135L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpteoe5nlz.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    int[] result = new int[0];\n\
    \    foreach(int i; x)\n    {\n        if(i % 2 == 0)\n        {\n           \
    \ continue;\n        }\n        result ~= i;\n    }\n    sort(result);\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = unique_digits;\n\n    assert(candidate([15L,\
    \ 33L, 1422L, 1L]) == [1L, 15L, 33L]);\n    assert(candidate([152L, 323L, 1422L,\
    \ 10L]) == []);\n    assert(candidate([12345L, 2033L, 111L, 151L]) == [111L, 151L]);\n\
    \    assert(candidate([135L, 103L, 31L]) == [31L, 135L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphlremf6w.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    auto result = new long[];\n\
    \    foreach(i; x)\n    {\n        if(i.digits.all!(a => a % 2 != 0))\n      \
    \      result ~= i;\n    }\n    return result.sort;\n}\nunittest\n{\n    alias\
    \ candidate = unique_digits;\n\n    assert(candidate([15L, 33L, 1422L, 1L]) ==\
    \ [1L, 15L, 33L]);\n    assert(candidate([152L, 323L, 1422L, 10L]) == []);\n \
    \   assert(candidate([12345L, 2033L, 111L, 151L]) == [111L, 151L]);\n    assert(candidate([135L,\
    \ 103L, 31L]) == [31L, 135L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp13qgb3fo.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    long[] res = new long[x.length];\n\
    \    int count = 0;\n    foreach(long i; x)\n    {\n        if(i % 2 != 0)\n \
    \       {\n            res[count] = i;\n            count++;\n        }\n    }\n\
    \    return res[0..count];\n}\nunittest\n{\n    alias candidate = unique_digits;\n\
    \n    assert(candidate([15L, 33L, 1422L, 1L]) == [1L, 15L, 33L]);\n    assert(candidate([152L,\
    \ 323L, 1422L, 10L]) == []);\n    assert(candidate([12345L, 2033L, 111L, 151L])\
    \ == [111L, 151L]);\n    assert(candidate([135L, 103L, 31L]) == [31L, 135L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnbtd1tk4.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    long[] res = new long[x.length];\n\
    \    int j = 0;\n    for (int i = 0; i < x.length; i++)\n    {\n        if (x[i]\
    \ % 2 != 0)\n        {\n            res[j] = x[i];\n            j++;\n       \
    \ }\n    }\n    res = res.sort();\n    return res;\n}\nunittest\n{\n    alias\
    \ candidate = unique_digits;\n\n    assert(candidate([15L, 33L, 1422L, 1L]) ==\
    \ [1L, 15L, 33L]);\n    assert(candidate([152L, 323L, 1422L, 10L]) == []);\n \
    \   assert(candidate([12345L, 2033L, 111L, 151L]) == [111L, 151L]);\n    assert(candidate([135L,\
    \ 103L, 31L]) == [31L, 135L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3tqyzxe4.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    long[] result = new long[0];\n\
    \    foreach(long i; x)\n    {\n        if(!hasEvenDigit(i))\n        {\n    \
    \        result ~= i;\n        }\n    }\n    sort(result);\n    return result;\n\
    }\nunittest\n{\n    alias candidate = unique_digits;\n\n    assert(candidate([15L,\
    \ 33L, 1422L, 1L]) == [1L, 15L, 33L]);\n    assert(candidate([152L, 323L, 1422L,\
    \ 10L]) == []);\n    assert(candidate([12345L, 2033L, 111L, 151L]) == [111L, 151L]);\n\
    \    assert(candidate([135L, 103L, 31L]) == [31L, 135L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp97gkmri7.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    auto evenDigits = [](long\
    \ n) {\n        while (n > 0) {\n            if (n % 2 == 0) return true;\n  \
    \          n /= 10;\n        }\n        return false;\n    };\n    return x.filter!(n\
    \ => !evenDigits(n)).sort();\n}\nunittest\n{\n    alias candidate = unique_digits;\n\
    \n    assert(candidate([15L, 33L, 1422L, 1L]) == [1L, 15L, 33L]);\n    assert(candidate([152L,\
    \ 323L, 1422L, 10L]) == []);\n    assert(candidate([12345L, 2033L, 111L, 151L])\
    \ == [111L, 151L]);\n    assert(candidate([135L, 103L, 31L]) == [31L, 135L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpb3dr5164.d(13): Error: found \''n\'' when expecting \''.\''
    following long\n/tmp/tmpb3dr5164.d(13): Error: found \'')\'' when expecting identifier
    following \''long.\''\n/tmp/tmpb3dr5164.d(13): Error: found \''{\'' when expecting
    \'',\''\n/tmp/tmpb3dr5164.d(14): Error: expression expected, not \''while\''\n/tmp/tmpb3dr5164.d(14):
    Error: found \''{\'' when expecting \'',\''\n/tmp/tmpb3dr5164.d(15): Error: expression
    expected, not \''if\''\n/tmp/tmpb3dr5164.d(15): Error: found \''return\'' when
    expecting \'',\''\n/tmp/tmpb3dr5164.d(15): Error: found \'';\'' when expecting
    \'',\''\n/tmp/tmpb3dr5164.d(16): Error: found \'';\'' when expecting \'',\''\n/tmp/tmpb3dr5164.d(17):
    Error: expression expected, not \''}\''\n/tmp/tmpb3dr5164.d(18): Error: found
    \''return\'' when expecting \'',\''\n/tmp/tmpb3dr5164.d(18): Error: found \'';\''
    when expecting \'',\''\n/tmp/tmpb3dr5164.d(19): Error: expression expected, not
    \''}\''\n/tmp/tmpb3dr5164.d(19): Error: found \'';\'' when expecting \'',\''\n/tmp/tmpb3dr5164.d(20):
    Error: expression expected, not \''return\''\n/tmp/tmpb3dr5164.d(20): Error: found
    \''x\'' when expecting \'',\''\n/tmp/tmpb3dr5164.d(20): Error: found \'';\'' when
    expecting \'',\''\n/tmp/tmpb3dr5164.d(21): Error: expression expected, not \''}\''\n/tmp/tmpb3dr5164.d(22):
    Error: found \''unittest\'' when expecting \'',\''\n/tmp/tmpb3dr5164.d(31): Error:
    found \''void\'' when expecting \'',\''\n/tmp/tmpb3dr5164.d(31): Error: found
    \''{\'' when expecting \'',\''\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpb3dr5164.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    long[] result = new long[0];\n\
    \    foreach(long i; x)\n    {\n        if(i.toString().count(\"2\") == 0 && i.toString().count(\"\
    4\") == 0 && i.toString().count(\"6\") == 0 && i.toString().count(\"8\") == 0)\n\
    \        {\n            result ~= i;\n        }\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = unique_digits;\n\n    assert(candidate([15L,\
    \ 33L, 1422L, 1L]) == [1L, 15L, 33L]);\n    assert(candidate([152L, 323L, 1422L,\
    \ 10L]) == []);\n    assert(candidate([12345L, 2033L, 111L, 151L]) == [111L, 151L]);\n\
    \    assert(candidate([135L, 103L, 31L]) == [31L, 135L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmvjjqfiz.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    auto evenDigits = [](long\
    \ n) {\n        while (n > 0) {\n            if (n % 2 == 0) {\n             \
    \   return true;\n            }\n            n /= 10;\n        }\n        return\
    \ false;\n    };\n    return x.filter!(a => !evenDigits(a)).sort;\n}\nunittest\n\
    {\n    alias candidate = unique_digits;\n\n    assert(candidate([15L, 33L, 1422L,\
    \ 1L]) == [1L, 15L, 33L]);\n    assert(candidate([152L, 323L, 1422L, 10L]) ==\
    \ []);\n    assert(candidate([12345L, 2033L, 111L, 151L]) == [111L, 151L]);\n\
    \    assert(candidate([135L, 103L, 31L]) == [31L, 135L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpkdstwd_1.d(13): Error: found \''n\'' when expecting \''.\''
    following long\n/tmp/tmpkdstwd_1.d(13): Error: found \'')\'' when expecting identifier
    following \''long.\''\n/tmp/tmpkdstwd_1.d(13): Error: found \''{\'' when expecting
    \'',\''\n/tmp/tmpkdstwd_1.d(14): Error: expression expected, not \''while\''\n/tmp/tmpkdstwd_1.d(14):
    Error: found \''{\'' when expecting \'',\''\n/tmp/tmpkdstwd_1.d(15): Error: expression
    expected, not \''if\''\n/tmp/tmpkdstwd_1.d(15): Error: found \''{\'' when expecting
    \'',\''\n/tmp/tmpkdstwd_1.d(16): Error: expression expected, not \''return\''\n/tmp/tmpkdstwd_1.d(16):
    Error: found \''true\'' when expecting \'',\''\n/tmp/tmpkdstwd_1.d(16): Error:
    expression expected, not \'';\''\n/tmp/tmpkdstwd_1.d(17): Error: found \''}\''
    when expecting \'',\''\n/tmp/tmpkdstwd_1.d(18): Error: found \'';\'' when expecting
    \'',\''\n/tmp/tmpkdstwd_1.d(19): Error: expression expected, not \''}\''\n/tmp/tmpkdstwd_1.d(20):
    Error: found \''return\'' when expecting \'',\''\n/tmp/tmpkdstwd_1.d(20): Error:
    found \'';\'' when expecting \'',\''\n/tmp/tmpkdstwd_1.d(21): Error: expression
    expected, not \''}\''\n/tmp/tmpkdstwd_1.d(21): Error: found \'';\'' when expecting
    \'',\''\n/tmp/tmpkdstwd_1.d(22): Error: expression expected, not \''return\''\n/tmp/tmpkdstwd_1.d(22):
    Error: found \''x\'' when expecting \'',\''\n/tmp/tmpkdstwd_1.d(22): Error: found
    \'';\'' when expecting \'',\''\n/tmp/tmpkdstwd_1.d(23): Error: expression expected,
    not \''}\''\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkdstwd_1.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    auto result = [];\n    foreach(i;\
    \ x)\n    {\n        if(i.to!string.count!(a => a.isDigit && a.isEven) == 0)\n\
    \            result ~= i;\n    }\n    return result.sort;\n}\nunittest\n{\n  \
    \  alias candidate = unique_digits;\n\n    assert(candidate([15L, 33L, 1422L,\
    \ 1L]) == [1L, 15L, 33L]);\n    assert(candidate([152L, 323L, 1422L, 10L]) ==\
    \ []);\n    assert(candidate([12345L, 2033L, 111L, 151L]) == [111L, 151L]);\n\
    \    assert(candidate([135L, 103L, 31L]) == [31L, 135L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsjg9hdiv.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    long[] result = new long[x.length];\n\
    \    int count = 0;\n    foreach(long i; x)\n    {\n        if(!hasEvenDigit(i))\n\
    \        {\n            result[count] = i;\n            count++;\n        }\n\
    \    }\n    return result[0..count];\n}\nunittest\n{\n    alias candidate = unique_digits;\n\
    \n    assert(candidate([15L, 33L, 1422L, 1L]) == [1L, 15L, 33L]);\n    assert(candidate([152L,\
    \ 323L, 1422L, 10L]) == []);\n    assert(candidate([12345L, 2033L, 111L, 151L])\
    \ == [111L, 151L]);\n    assert(candidate([135L, 103L, 31L]) == [31L, 135L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpl_e2xhbv.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    long[] result = [];\n    foreach(long\
    \ i; x)\n    {\n        if(i.toString().length == 1)\n        {\n            result\
    \ ~= i;\n        }\n        else\n        {\n            bool isEven = false;\n\
    \            foreach(char c; i.toString())\n            {\n                if(c\
    \ == '0' || c == '2' || c == '4' || c == '6' || c == '8')\n                {\n\
    \                    isEven = true;\n                    break;\n            \
    \    }\n            }\n            if(!isEven)\n            {\n              \
    \  result ~= i;\n            }\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = unique_digits;\n\n    assert(candidate([15L, 33L, 1422L,\
    \ 1L]) == [1L, 15L, 33L]);\n    assert(candidate([152L, 323L, 1422L, 10L]) ==\
    \ []);\n    assert(candidate([12345L, 2033L, 111L, 151L]) == [111L, 151L]);\n\
    \    assert(candidate([135L, 103L, 31L]) == [31L, 135L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprii2n1ts.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    int[] even = [0,2,4,6,8];\n\
    \    int[] odd = [1,3,5,7,9];\n    int[] result = [];\n    foreach(int i; x)\n\
    \    {\n        int[] digits = [];\n        int n = i;\n        while(n > 0)\n\
    \        {\n            digits ~= n % 10;\n            n /= 10;\n        }\n \
    \       bool is_even = false;\n        foreach(int d; digits)\n        {\n   \
    \         if(even.canFind(d))\n            {\n                is_even = true;\n\
    \                break;\n            }\n        }\n        if(!is_even)\n    \
    \    {\n            result ~= i;\n        }\n    }\n    return result.sort();\n\
    }\nunittest\n{\n    alias candidate = unique_digits;\n\n    assert(candidate([15L,\
    \ 33L, 1422L, 1L]) == [1L, 15L, 33L]);\n    assert(candidate([152L, 323L, 1422L,\
    \ 10L]) == []);\n    assert(candidate([12345L, 2033L, 111L, 151L]) == [111L, 151L]);\n\
    \    assert(candidate([135L, 103L, 31L]) == [31L, 135L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp530xqjoj.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    long[] result = new long[x.length];\n\
    \    int count = 0;\n    foreach(long i; x)\n    {\n        if(!hasEvenDigit(i))\n\
    \        {\n            result[count] = i;\n            count++;\n        }\n\
    \    }\n    return result[0..count];\n}\nunittest\n{\n    alias candidate = unique_digits;\n\
    \n    assert(candidate([15L, 33L, 1422L, 1L]) == [1L, 15L, 33L]);\n    assert(candidate([152L,\
    \ 323L, 1422L, 10L]) == []);\n    assert(candidate([12345L, 2033L, 111L, 151L])\
    \ == [111L, 151L]);\n    assert(candidate([135L, 103L, 31L]) == [31L, 135L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpl_e2xhbv.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    long[] result = new long[x.length];\n\
    \    int j = 0;\n    for (int i = 0; i < x.length; i++)\n    {\n        if (x[i]\
    \ % 2 != 0)\n        {\n            result[j] = x[i];\n            j++;\n    \
    \    }\n    }\n    result = result.dup[0..j];\n    sort(result);\n    return result;\n\
    }\nunittest\n{\n    alias candidate = unique_digits;\n\n    assert(candidate([15L,\
    \ 33L, 1422L, 1L]) == [1L, 15L, 33L]);\n    assert(candidate([152L, 323L, 1422L,\
    \ 10L]) == []);\n    assert(candidate([12345L, 2033L, 111L, 151L]) == [111L, 151L]);\n\
    \    assert(candidate([135L, 103L, 31L]) == [31L, 135L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg4a3p5yd.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    auto res = new long[];\n \
    \   foreach(i; x)\n    {\n        if(i.digits.filter!(a => a % 2 == 0).empty)\n\
    \            res ~= i;\n    }\n    return res.sort;\n}\nunittest\n{\n    alias\
    \ candidate = unique_digits;\n\n    assert(candidate([15L, 33L, 1422L, 1L]) ==\
    \ [1L, 15L, 33L]);\n    assert(candidate([152L, 323L, 1422L, 10L]) == []);\n \
    \   assert(candidate([12345L, 2033L, 111L, 151L]) == [111L, 151L]);\n    assert(candidate([135L,\
    \ 103L, 31L]) == [31L, 135L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpoxit5it3.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    auto result = new long[];\n\
    \    foreach(i; x)\n    {\n        if(i % 2 != 0)\n        {\n            result\
    \ ~= i;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = unique_digits;\n\n    assert(candidate([15L, 33L, 1422L, 1L]) == [1L, 15L,\
    \ 33L]);\n    assert(candidate([152L, 323L, 1422L, 10L]) == []);\n    assert(candidate([12345L,\
    \ 2033L, 111L, 151L]) == [111L, 151L]);\n    assert(candidate([135L, 103L, 31L])\
    \ == [31L, 135L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg4rke7av.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    long[] result = new long[0];\n\
    \    foreach(long i; x)\n    {\n        if(!has_even_digit(i))\n        {\n  \
    \          result ~= i;\n        }\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = unique_digits;\n\n    assert(candidate([15L, 33L, 1422L,\
    \ 1L]) == [1L, 15L, 33L]);\n    assert(candidate([152L, 323L, 1422L, 10L]) ==\
    \ []);\n    assert(candidate([12345L, 2033L, 111L, 151L]) == [111L, 151L]);\n\
    \    assert(candidate([135L, 103L, 31L]) == [31L, 135L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphgmqd68s.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    long[] result = new long[0];\n\
    \    foreach(long i; x)\n    {\n        if(i.toString().length == 1)\n       \
    \ {\n            result ~= i;\n        }\n        else\n        {\n          \
    \  bool isEven = false;\n            foreach(char c; i.toString())\n         \
    \   {\n                if(c.to!int % 2 == 0)\n                {\n            \
    \        isEven = true;\n                    break;\n                }\n     \
    \       }\n            if(!isEven)\n            {\n                result ~= i;\n\
    \            }\n        }\n    }\n    return result.sort();\n}\nunittest\n{\n\
    \    alias candidate = unique_digits;\n\n    assert(candidate([15L, 33L, 1422L,\
    \ 1L]) == [1L, 15L, 33L]);\n    assert(candidate([152L, 323L, 1422L, 10L]) ==\
    \ []);\n    assert(candidate([12345L, 2033L, 111L, 151L]) == [111L, 151L]);\n\
    \    assert(candidate([135L, 103L, 31L]) == [31L, 135L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3t3dsodm.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    long[] res = new long[x.length];\n\
    \    int j = 0;\n    for (int i = 0; i < x.length; i++)\n    {\n        if (x[i]\
    \ % 2 != 0)\n        {\n            res[j] = x[i];\n            j++;\n       \
    \ }\n    }\n    res = res.sort();\n    return res;\n}\nunittest\n{\n    alias\
    \ candidate = unique_digits;\n\n    assert(candidate([15L, 33L, 1422L, 1L]) ==\
    \ [1L, 15L, 33L]);\n    assert(candidate([152L, 323L, 1422L, 10L]) == []);\n \
    \   assert(candidate([12345L, 2033L, 111L, 151L]) == [111L, 151L]);\n    assert(candidate([135L,\
    \ 103L, 31L]) == [31L, 135L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3tqyzxe4.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    auto result = new long[];\n\
    \    foreach(i; x)\n    {\n        if(i.digits.all!(a => a % 2 == 1))\n      \
    \      result ~= i;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = unique_digits;\n\n    assert(candidate([15L, 33L, 1422L, 1L]) == [1L, 15L,\
    \ 33L]);\n    assert(candidate([152L, 323L, 1422L, 10L]) == []);\n    assert(candidate([12345L,\
    \ 2033L, 111L, 151L]) == [111L, 151L]);\n    assert(candidate([135L, 103L, 31L])\
    \ == [31L, 135L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprs9_gmb5.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    long[] result = new long[x.length];\n\
    \    int count = 0;\n    foreach(long i; x)\n    {\n        if(i % 2 != 0)\n \
    \       {\n            result[count] = i;\n            count++;\n        }\n \
    \   }\n    return result[0..count];\n}\nunittest\n{\n    alias candidate = unique_digits;\n\
    \n    assert(candidate([15L, 33L, 1422L, 1L]) == [1L, 15L, 33L]);\n    assert(candidate([152L,\
    \ 323L, 1422L, 10L]) == []);\n    assert(candidate([12345L, 2033L, 111L, 151L])\
    \ == [111L, 151L]);\n    assert(candidate([135L, 103L, 31L]) == [31L, 135L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpafq_r_ka.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    long[] res = new long[0];\n\
    \    foreach(long i; x)\n    {\n        if(i % 2 != 0)\n        {\n          \
    \  res ~= i;\n        }\n    }\n    return res;\n}\nunittest\n{\n    alias candidate\
    \ = unique_digits;\n\n    assert(candidate([15L, 33L, 1422L, 1L]) == [1L, 15L,\
    \ 33L]);\n    assert(candidate([152L, 323L, 1422L, 10L]) == []);\n    assert(candidate([12345L,\
    \ 2033L, 111L, 151L]) == [111L, 151L]);\n    assert(candidate([135L, 103L, 31L])\
    \ == [31L, 135L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwf4bpnz0.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    long[] result = new long[0];\n\
    \    foreach(long i; x)\n    {\n        if(i.digits.all!(a => a % 2 != 0))\n \
    \       {\n            result ~= i;\n        }\n    }\n    return result.sort;\n\
    }\nunittest\n{\n    alias candidate = unique_digits;\n\n    assert(candidate([15L,\
    \ 33L, 1422L, 1L]) == [1L, 15L, 33L]);\n    assert(candidate([152L, 323L, 1422L,\
    \ 10L]) == []);\n    assert(candidate([12345L, 2033L, 111L, 151L]) == [111L, 151L]);\n\
    \    assert(candidate([135L, 103L, 31L]) == [31L, 135L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpuwud5mw2.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    long[] res = new long[x.length];\n\
    \    int i = 0;\n    foreach(long num; x)\n    {\n        string s = num.to!string;\n\
    \        bool isEven = false;\n        foreach(char c; s)\n        {\n       \
    \     if(c.to!int % 2 == 0)\n            {\n                isEven = true;\n \
    \               break;\n            }\n        }\n        if(!isEven)\n      \
    \  {\n            res[i] = num;\n            i++;\n        }\n    }\n    res =\
    \ res[0..i];\n    std.algorithm.sort(res);\n    return res;\n}\nunittest\n{\n\
    \    alias candidate = unique_digits;\n\n    assert(candidate([15L, 33L, 1422L,\
    \ 1L]) == [1L, 15L, 33L]);\n    assert(candidate([152L, 323L, 1422L, 10L]) ==\
    \ []);\n    assert(candidate([12345L, 2033L, 111L, 151L]) == [111L, 151L]);\n\
    \    assert(candidate([135L, 103L, 31L]) == [31L, 135L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0icqk90d.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    long[] result = new long[0];\n\
    \    foreach(long i; x)\n    {\n        if(i.toString().length == 1)\n       \
    \ {\n            result ~= i;\n        }\n        else\n        {\n          \
    \  bool isEven = false;\n            foreach(char c; i.toString())\n         \
    \   {\n                if(c.isDigit && c.to!int % 2 == 0)\n                {\n\
    \                    isEven = true;\n                    break;\n            \
    \    }\n            }\n            if(!isEven)\n            {\n              \
    \  result ~= i;\n            }\n        }\n    }\n    return result.sort();\n\
    }\nunittest\n{\n    alias candidate = unique_digits;\n\n    assert(candidate([15L,\
    \ 33L, 1422L, 1L]) == [1L, 15L, 33L]);\n    assert(candidate([152L, 323L, 1422L,\
    \ 10L]) == []);\n    assert(candidate([12345L, 2033L, 111L, 151L]) == [111L, 151L]);\n\
    \    assert(candidate([135L, 103L, 31L]) == [31L, 135L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp535f0eiy.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    long[] res = new long[0];\n\
    \    foreach(long i; x)\n    {\n        if(i.toString().length == 1)\n       \
    \ {\n            res ~= i;\n        }\n        else\n        {\n            bool\
    \ isEven = false;\n            foreach(char c; i.toString())\n            {\n\
    \                if(c.to!int % 2 == 0)\n                {\n                  \
    \  isEven = true;\n                    break;\n                }\n           \
    \ }\n            if(!isEven)\n            {\n                res ~= i;\n     \
    \       }\n        }\n    }\n    return res.sort();\n}\nunittest\n{\n    alias\
    \ candidate = unique_digits;\n\n    assert(candidate([15L, 33L, 1422L, 1L]) ==\
    \ [1L, 15L, 33L]);\n    assert(candidate([152L, 323L, 1422L, 10L]) == []);\n \
    \   assert(candidate([12345L, 2033L, 111L, 151L]) == [111L, 151L]);\n    assert(candidate([135L,\
    \ 103L, 31L]) == [31L, 135L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvx8wdupu.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    long[] result = [];\n    foreach(long\
    \ i; x)\n    {\n        if(i % 2 == 0)\n            continue;\n        else\n\
    \            result ~= i;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = unique_digits;\n\n    assert(candidate([15L, 33L, 1422L, 1L]) ==\
    \ [1L, 15L, 33L]);\n    assert(candidate([152L, 323L, 1422L, 10L]) == []);\n \
    \   assert(candidate([12345L, 2033L, 111L, 151L]) == [111L, 151L]);\n    assert(candidate([135L,\
    \ 103L, 31L]) == [31L, 135L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpouj9ovvf.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    auto evenDigits = [](long\
    \ n) {\n        while (n > 0) {\n            if (n % 2 == 0) {\n             \
    \   return true;\n            }\n            n /= 10;\n        }\n        return\
    \ false;\n    };\n    return x.filter!(n => !evenDigits(n)).sort;\n}\nunittest\n\
    {\n    alias candidate = unique_digits;\n\n    assert(candidate([15L, 33L, 1422L,\
    \ 1L]) == [1L, 15L, 33L]);\n    assert(candidate([152L, 323L, 1422L, 10L]) ==\
    \ []);\n    assert(candidate([12345L, 2033L, 111L, 151L]) == [111L, 151L]);\n\
    \    assert(candidate([135L, 103L, 31L]) == [31L, 135L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpc0eyk031.d(13): Error: found \''n\'' when expecting \''.\''
    following long\n/tmp/tmpc0eyk031.d(13): Error: found \'')\'' when expecting identifier
    following \''long.\''\n/tmp/tmpc0eyk031.d(13): Error: found \''{\'' when expecting
    \'',\''\n/tmp/tmpc0eyk031.d(14): Error: expression expected, not \''while\''\n/tmp/tmpc0eyk031.d(14):
    Error: found \''{\'' when expecting \'',\''\n/tmp/tmpc0eyk031.d(15): Error: expression
    expected, not \''if\''\n/tmp/tmpc0eyk031.d(15): Error: found \''{\'' when expecting
    \'',\''\n/tmp/tmpc0eyk031.d(16): Error: expression expected, not \''return\''\n/tmp/tmpc0eyk031.d(16):
    Error: found \''true\'' when expecting \'',\''\n/tmp/tmpc0eyk031.d(16): Error:
    expression expected, not \'';\''\n/tmp/tmpc0eyk031.d(17): Error: found \''}\''
    when expecting \'',\''\n/tmp/tmpc0eyk031.d(18): Error: found \'';\'' when expecting
    \'',\''\n/tmp/tmpc0eyk031.d(19): Error: expression expected, not \''}\''\n/tmp/tmpc0eyk031.d(20):
    Error: found \''return\'' when expecting \'',\''\n/tmp/tmpc0eyk031.d(20): Error:
    found \'';\'' when expecting \'',\''\n/tmp/tmpc0eyk031.d(21): Error: expression
    expected, not \''}\''\n/tmp/tmpc0eyk031.d(21): Error: found \'';\'' when expecting
    \'',\''\n/tmp/tmpc0eyk031.d(22): Error: expression expected, not \''return\''\n/tmp/tmpc0eyk031.d(22):
    Error: found \''x\'' when expecting \'',\''\n/tmp/tmpc0eyk031.d(22): Error: found
    \'';\'' when expecting \'',\''\n/tmp/tmpc0eyk031.d(23): Error: expression expected,
    not \''}\''\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpc0eyk031.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    long[] result = new long[x.length];\n\
    \    int count = 0;\n    foreach(long i; x)\n    {\n        if(i % 2 != 0)\n \
    \       {\n            result[count] = i;\n            count++;\n        }\n \
    \   }\n    return result[0..count];\n}\nunittest\n{\n    alias candidate = unique_digits;\n\
    \n    assert(candidate([15L, 33L, 1422L, 1L]) == [1L, 15L, 33L]);\n    assert(candidate([152L,\
    \ 323L, 1422L, 10L]) == []);\n    assert(candidate([12345L, 2033L, 111L, 151L])\
    \ == [111L, 151L]);\n    assert(candidate([135L, 103L, 31L]) == [31L, 135L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpafq_r_ka.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    long[] res = new long[0];\n\
    \    foreach(long i; x)\n    {\n        if(i < 10)\n        {\n            res\
    \ ~= i;\n        }\n        else\n        {\n            bool flag = true;\n \
    \           while(i > 0)\n            {\n                if(i % 2 == 0)\n    \
    \            {\n                    flag = false;\n                    break;\n\
    \                }\n                i /= 10;\n            }\n            if(flag)\n\
    \            {\n                res ~= i;\n            }\n        }\n    }\n \
    \   return res;\n}\nunittest\n{\n    alias candidate = unique_digits;\n\n    assert(candidate([15L,\
    \ 33L, 1422L, 1L]) == [1L, 15L, 33L]);\n    assert(candidate([152L, 323L, 1422L,\
    \ 10L]) == []);\n    assert(candidate([12345L, 2033L, 111L, 151L]) == [111L, 151L]);\n\
    \    assert(candidate([135L, 103L, 31L]) == [31L, 135L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpoe2ogsvx.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    // your code here\n    long[]\
    \ result = new long[x.length];\n    int count = 0;\n    for(int i = 0; i < x.length;\
    \ i++)\n    {\n        if(x[i] % 2 != 0)\n        {\n            result[count]\
    \ = x[i];\n            count++;\n        }\n    }\n    result = result[0..count];\n\
    \    sort(result);\n    return result;\n}\nunittest\n{\n    alias candidate =\
    \ unique_digits;\n\n    assert(candidate([15L, 33L, 1422L, 1L]) == [1L, 15L, 33L]);\n\
    \    assert(candidate([152L, 323L, 1422L, 10L]) == []);\n    assert(candidate([12345L,\
    \ 2033L, 111L, 151L]) == [111L, 151L]);\n    assert(candidate([135L, 103L, 31L])\
    \ == [31L, 135L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpv9f7y4cp.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    int[] evenDigits = [0,2,4,6,8];\n\
    \    int[] oddDigits = [1,3,5,7,9];\n    int[] digits;\n    int[] result;\n  \
    \  int i;\n    int j;\n    int k;\n    int l;\n    int m;\n    int n;\n    int\
    \ o;\n    int p;\n    int q;\n    int r;\n    int s;\n    int t;\n    int u;\n\
    \    int v;\n    int w;\n    int x;\n    int y;\n    int z;\n    int a;\n    int\
    \ b;\n    int c;\n    int d;\n    int e;\n    int f;\n    int g;\n    int h;\n\
    \    int ii;\n    int jj;\n    int kk;\n    int ll;\n    int mm;\n    int nn;\n\
    \    int oo;\n    int pp;\n    int qq;\n    int rr;\n    int ss;\n    int tt;\n\
    \    int uu;\n    int vv;\n    int ww;\n    int xx;\n    int yy;\n    int zz;\n\
    \    int aa;\n    int bb;\n    int cc;\n    int dd;\n    int ee;\n    int ff;\n\
    \    int gg;\n    int hh;\n    int iii;\n    int jjj;\n    int kkk;\n    int lll;\n\
    \    int mmm;\n    int nnn;\n    int ooo;\n    int ppp;\n    int qqq;\n    int\
    \ rrr;\n    int sss;\n    int ttt;\n    int uuu;\n    int vvv;\n    int www;\n\
    \    int xxx;\n    int yyy;\n    int zzz;\n    int aaaa;\n    int bbbb;\n    int\
    \ cccc;\n    int dddd;\n    int eeee;\n    int ffff;\n    int gggg;\n    int hhhh;\n\
    \    int iiii;\n    int jjjj;\n    int kkkk;\n    int ll\nunittest\n{\n    alias\
    \ candidate = unique_digits;\n\n    assert(candidate([15L, 33L, 1422L, 1L]) ==\
    \ [1L, 15L, 33L]);\n    assert(candidate([152L, 323L, 1422L, 10L]) == []);\n \
    \   assert(candidate([12345L, 2033L, 111L, 151L]) == [111L, 151L]);\n    assert(candidate([135L,\
    \ 103L, 31L]) == [31L, 135L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpxkn8cj6l.d(99): Error: semicolon expected, not \''unittest\''\n/tmp/tmpxkn8cj6l.d(99):
    Error: found \''unittest\'' instead of statement\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmpxkn8cj6l.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    long[] result = new long[0];\n\
    \    foreach(long i; x)\n    {\n        if(i.toString().length == 1)\n       \
    \ {\n            result ~= i;\n        }\n        else\n        {\n          \
    \  bool isEven = false;\n            foreach(char c; i.toString())\n         \
    \   {\n                if(c.to!int() % 2 == 0)\n                {\n          \
    \          isEven = true;\n                    break;\n                }\n   \
    \         }\n            if(!isEven)\n            {\n                result ~=\
    \ i;\n            }\n        }\n    }\n    return result.sort();\n}\nunittest\n\
    {\n    alias candidate = unique_digits;\n\n    assert(candidate([15L, 33L, 1422L,\
    \ 1L]) == [1L, 15L, 33L]);\n    assert(candidate([152L, 323L, 1422L, 10L]) ==\
    \ []);\n    assert(candidate([12345L, 2033L, 111L, 151L]) == [111L, 151L]);\n\
    \    assert(candidate([135L, 103L, 31L]) == [31L, 135L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpteoe5nlz.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    long[] result = new long[x.length];\n\
    \    int count = 0;\n    foreach(long i; x)\n    {\n        if(!hasEvenDigit(i))\n\
    \        {\n            result[count] = i;\n            count++;\n        }\n\
    \    }\n    return result[0..count];\n}\nunittest\n{\n    alias candidate = unique_digits;\n\
    \n    assert(candidate([15L, 33L, 1422L, 1L]) == [1L, 15L, 33L]);\n    assert(candidate([152L,\
    \ 323L, 1422L, 10L]) == []);\n    assert(candidate([12345L, 2033L, 111L, 151L])\
    \ == [111L, 151L]);\n    assert(candidate([135L, 103L, 31L]) == [31L, 135L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpl_e2xhbv.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    long[] result = new long[x.length];\n\
    \    int count = 0;\n    for (int i = 0; i < x.length; i++)\n    {\n        if\
    \ (x[i] % 2 != 0)\n        {\n            result[count] = x[i];\n            count++;\n\
    \        }\n    }\n    result = result[0..count];\n    result.sort;\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = unique_digits;\n\n    assert(candidate([15L,\
    \ 33L, 1422L, 1L]) == [1L, 15L, 33L]);\n    assert(candidate([152L, 323L, 1422L,\
    \ 10L]) == []);\n    assert(candidate([12345L, 2033L, 111L, 151L]) == [111L, 151L]);\n\
    \    assert(candidate([135L, 103L, 31L]) == [31L, 135L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp775g37pk.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    long[] res = new long[0];\n\
    \    foreach(long i; x)\n    {\n        bool flag = true;\n        foreach(long\
    \ j; i.digits)\n        {\n            if(j % 2 == 0)\n            {\n       \
    \         flag = false;\n                break;\n            }\n        }\n  \
    \      if(flag)\n        {\n            res ~= i;\n        }\n    }\n    res.sort;\n\
    \    return res;\n}\nunittest\n{\n    alias candidate = unique_digits;\n\n   \
    \ assert(candidate([15L, 33L, 1422L, 1L]) == [1L, 15L, 33L]);\n    assert(candidate([152L,\
    \ 323L, 1422L, 10L]) == []);\n    assert(candidate([12345L, 2033L, 111L, 151L])\
    \ == [111L, 151L]);\n    assert(candidate([135L, 103L, 31L]) == [31L, 135L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfu0my9xs.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    long[] result = new long[0];\n\
    \    foreach(long i; x)\n    {\n        if(i.digits.all!(a => a % 2 == 1))\n \
    \       {\n            result ~= i;\n        }\n    }\n    return result.sort;\n\
    }\nunittest\n{\n    alias candidate = unique_digits;\n\n    assert(candidate([15L,\
    \ 33L, 1422L, 1L]) == [1L, 15L, 33L]);\n    assert(candidate([152L, 323L, 1422L,\
    \ 10L]) == []);\n    assert(candidate([12345L, 2033L, 111L, 151L]) == [111L, 151L]);\n\
    \    assert(candidate([135L, 103L, 31L]) == [31L, 135L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyw3rzdv0.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    long[] res = new long[x.length];\n\
    \    int count = 0;\n    foreach(long i; x)\n    {\n        if(i % 2 != 0)\n \
    \       {\n            res[count] = i;\n            count++;\n        }\n    }\n\
    \    res = res[0..count];\n    res = res.sort();\n    return res;\n}\nunittest\n\
    {\n    alias candidate = unique_digits;\n\n    assert(candidate([15L, 33L, 1422L,\
    \ 1L]) == [1L, 15L, 33L]);\n    assert(candidate([152L, 323L, 1422L, 10L]) ==\
    \ []);\n    assert(candidate([12345L, 2033L, 111L, 151L]) == [111L, 151L]);\n\
    \    assert(candidate([135L, 103L, 31L]) == [31L, 135L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpq3hs53rf.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    long[] res = new long[0];\n\
    \    foreach(long i; x)\n    {\n        if(i.digits.all!(a => a % 2 == 1))\n \
    \           res ~= i;\n    }\n    return res.sort;\n}\nunittest\n{\n    alias\
    \ candidate = unique_digits;\n\n    assert(candidate([15L, 33L, 1422L, 1L]) ==\
    \ [1L, 15L, 33L]);\n    assert(candidate([152L, 323L, 1422L, 10L]) == []);\n \
    \   assert(candidate([12345L, 2033L, 111L, 151L]) == [111L, 151L]);\n    assert(candidate([135L,\
    \ 103L, 31L]) == [31L, 135L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdgiavwvy.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    long[] res = new long[0];\n\
    \    foreach(long i; x)\n    {\n        if(i.toString().length == 1)\n       \
    \ {\n            res ~= i;\n        }\n        else\n        {\n            bool\
    \ is_even = false;\n            foreach(char c; i.toString())\n            {\n\
    \                if(c.to!int % 2 == 0)\n                {\n                  \
    \  is_even = true;\n                    break;\n                }\n          \
    \  }\n            if(!is_even)\n            {\n                res ~= i;\n   \
    \         }\n        }\n    }\n    return res.sort;\n}\nunittest\n{\n    alias\
    \ candidate = unique_digits;\n\n    assert(candidate([15L, 33L, 1422L, 1L]) ==\
    \ [1L, 15L, 33L]);\n    assert(candidate([152L, 323L, 1422L, 10L]) == []);\n \
    \   assert(candidate([12345L, 2033L, 111L, 151L]) == [111L, 151L]);\n    assert(candidate([135L,\
    \ 103L, 31L]) == [31L, 135L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjjab8d22.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    long[] result = new long[x.length];\n\
    \    int j = 0;\n    for (int i = 0; i < x.length; i++)\n    {\n        if (x[i]\
    \ % 2 != 0)\n        {\n            result[j] = x[i];\n            j++;\n    \
    \    }\n    }\n    result = result.sort();\n    return result;\n}\nunittest\n\
    {\n    alias candidate = unique_digits;\n\n    assert(candidate([15L, 33L, 1422L,\
    \ 1L]) == [1L, 15L, 33L]);\n    assert(candidate([152L, 323L, 1422L, 10L]) ==\
    \ []);\n    assert(candidate([12345L, 2033L, 111L, 151L]) == [111L, 151L]);\n\
    \    assert(candidate([135L, 103L, 31L]) == [31L, 135L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4sy51pv9.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    long[] result = new long[0];\n\
    \    foreach(long i; x)\n    {\n        if(i.toString().length == 1)\n       \
    \ {\n            result ~= i;\n        }\n        else\n        {\n          \
    \  bool isEven = false;\n            foreach(char c; i.toString())\n         \
    \   {\n                if(c.to!int % 2 == 0)\n                {\n            \
    \        isEven = true;\n                    break;\n                }\n     \
    \       }\n            if(!isEven)\n            {\n                result ~= i;\n\
    \            }\n        }\n    }\n    return result.sort;\n}\nunittest\n{\n  \
    \  alias candidate = unique_digits;\n\n    assert(candidate([15L, 33L, 1422L,\
    \ 1L]) == [1L, 15L, 33L]);\n    assert(candidate([152L, 323L, 1422L, 10L]) ==\
    \ []);\n    assert(candidate([12345L, 2033L, 111L, 151L]) == [111L, 151L]);\n\
    \    assert(candidate([135L, 103L, 31L]) == [31L, 135L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp62bi5aob.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    long[] result = [];\n    foreach(long\
    \ i; x)\n    {\n        if(!hasEvenDigit(i))\n            result ~= i;\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = unique_digits;\n\n\
    \    assert(candidate([15L, 33L, 1422L, 1L]) == [1L, 15L, 33L]);\n    assert(candidate([152L,\
    \ 323L, 1422L, 10L]) == []);\n    assert(candidate([12345L, 2033L, 111L, 151L])\
    \ == [111L, 151L]);\n    assert(candidate([135L, 103L, 31L]) == [31L, 135L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpawjv_y42.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    int[] evenDigits = {0, 2,\
    \ 4, 6, 8};\n    int[] oddDigits = {1, 3, 5, 7, 9};\n    int[] digits = new int[10];\n\
    \    int[] result = new int[x.length];\n    int count = 0;\n    for (int i = 0;\
    \ i < x.length; i++)\n    {\n        int temp = x[i];\n        while (temp !=\
    \ 0)\n        {\n            digits[temp % 10]++;\n            temp /= 10;\n \
    \       }\n        bool isEven = false;\n        for (int j = 0; j < evenDigits.length;\
    \ j++)\n        {\n            if (digits[evenDigits[j]] != 0)\n            {\n\
    \                isEven = true;\n                break;\n            }\n     \
    \   }\n        if (!isEven)\n        {\n            result[count] = x[i];\n  \
    \          count++;\n        }\n        for (int j = 0; j < digits.length; j++)\n\
    \        {\n            digits[j] = 0;\n        }\n    }\n    return result[0..count];\n\
    }\nunittest\n{\n    alias candidate = unique_digits;\n\n    assert(candidate([15L,\
    \ 33L, 1422L, 1L]) == [1L, 15L, 33L]);\n    assert(candidate([152L, 323L, 1422L,\
    \ 10L]) == []);\n    assert(candidate([12345L, 2033L, 111L, 151L]) == [111L, 151L]);\n\
    \    assert(candidate([135L, 103L, 31L]) == [31L, 135L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpi4tz9tzo.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    return x.filter!(a => a.toString().all!(b\
    \ => b % 2 == 1)).sort();\n}\nunittest\n{\n    alias candidate = unique_digits;\n\
    \n    assert(candidate([15L, 33L, 1422L, 1L]) == [1L, 15L, 33L]);\n    assert(candidate([152L,\
    \ 323L, 1422L, 10L]) == []);\n    assert(candidate([12345L, 2033L, 111L, 151L])\
    \ == [111L, 151L]);\n    assert(candidate([135L, 103L, 31L]) == [31L, 135L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkinshvc4.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    auto even_digits = [](long\
    \ n) {\n        while (n > 0) {\n            if (n % 2 == 0) return true;\n  \
    \          n /= 10;\n        }\n        return false;\n    };\n    return x.filter!(n\
    \ => !even_digits(n)).sort;\n}\nunittest\n{\n    alias candidate = unique_digits;\n\
    \n    assert(candidate([15L, 33L, 1422L, 1L]) == [1L, 15L, 33L]);\n    assert(candidate([152L,\
    \ 323L, 1422L, 10L]) == []);\n    assert(candidate([12345L, 2033L, 111L, 151L])\
    \ == [111L, 151L]);\n    assert(candidate([135L, 103L, 31L]) == [31L, 135L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmplf5frks4.d(13): Error: found \''n\'' when expecting \''.\''
    following long\n/tmp/tmplf5frks4.d(13): Error: found \'')\'' when expecting identifier
    following \''long.\''\n/tmp/tmplf5frks4.d(13): Error: found \''{\'' when expecting
    \'',\''\n/tmp/tmplf5frks4.d(14): Error: expression expected, not \''while\''\n/tmp/tmplf5frks4.d(14):
    Error: found \''{\'' when expecting \'',\''\n/tmp/tmplf5frks4.d(15): Error: expression
    expected, not \''if\''\n/tmp/tmplf5frks4.d(15): Error: found \''return\'' when
    expecting \'',\''\n/tmp/tmplf5frks4.d(15): Error: found \'';\'' when expecting
    \'',\''\n/tmp/tmplf5frks4.d(16): Error: found \'';\'' when expecting \'',\''\n/tmp/tmplf5frks4.d(17):
    Error: expression expected, not \''}\''\n/tmp/tmplf5frks4.d(18): Error: found
    \''return\'' when expecting \'',\''\n/tmp/tmplf5frks4.d(18): Error: found \'';\''
    when expecting \'',\''\n/tmp/tmplf5frks4.d(19): Error: expression expected, not
    \''}\''\n/tmp/tmplf5frks4.d(19): Error: found \'';\'' when expecting \'',\''\n/tmp/tmplf5frks4.d(20):
    Error: expression expected, not \''return\''\n/tmp/tmplf5frks4.d(20): Error: found
    \''x\'' when expecting \'',\''\n/tmp/tmplf5frks4.d(20): Error: found \'';\'' when
    expecting \'',\''\n/tmp/tmplf5frks4.d(21): Error: expression expected, not \''}\''\n/tmp/tmplf5frks4.d(22):
    Error: found \''unittest\'' when expecting \'',\''\n/tmp/tmplf5frks4.d(31): Error:
    found \''void\'' when expecting \'',\''\n/tmp/tmplf5frks4.d(31): Error: found
    \''{\'' when expecting \'',\''\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplf5frks4.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    auto result = new long[];\n\
    \    foreach(i; x)\n    {\n        if(i.digits.all!(a => a % 2 != 0))\n      \
    \      result ~= i;\n    }\n    return result.sort;\n}\nunittest\n{\n    alias\
    \ candidate = unique_digits;\n\n    assert(candidate([15L, 33L, 1422L, 1L]) ==\
    \ [1L, 15L, 33L]);\n    assert(candidate([152L, 323L, 1422L, 10L]) == []);\n \
    \   assert(candidate([12345L, 2033L, 111L, 151L]) == [111L, 151L]);\n    assert(candidate([135L,\
    \ 103L, 31L]) == [31L, 135L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp13qgb3fo.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    auto result = new long[];\n\
    \    foreach(i; x)\n    {\n        if(i.digits.filter!(a => a % 2 == 0).length\
    \ == 0)\n        {\n            result ~= i;\n        }\n    }\n    return result.sort;\n\
    }\nunittest\n{\n    alias candidate = unique_digits;\n\n    assert(candidate([15L,\
    \ 33L, 1422L, 1L]) == [1L, 15L, 33L]);\n    assert(candidate([152L, 323L, 1422L,\
    \ 10L]) == []);\n    assert(candidate([12345L, 2033L, 111L, 151L]) == [111L, 151L]);\n\
    \    assert(candidate([135L, 103L, 31L]) == [31L, 135L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6lzxf3gr.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    long[] result = new long[0];\n\
    \    foreach(long i; x)\n    {\n        bool isEven = false;\n        while(i\
    \ > 0)\n        {\n            if((i % 10) % 2 == 0)\n            {\n        \
    \        isEven = true;\n                break;\n            }\n            i\
    \ /= 10;\n        }\n        if(!isEven)\n        {\n            result ~= i;\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = unique_digits;\n\
    \n    assert(candidate([15L, 33L, 1422L, 1L]) == [1L, 15L, 33L]);\n    assert(candidate([152L,\
    \ 323L, 1422L, 10L]) == []);\n    assert(candidate([12345L, 2033L, 111L, 151L])\
    \ == [111L, 151L]);\n    assert(candidate([135L, 103L, 31L]) == [31L, 135L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpuip69c8a.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    // your code here\n    int[]\
    \ even = {0,2,4,6,8};\n    int[] odd = {1,3,5,7,9};\n    int[] digits = new int[10];\n\
    \    for(int i = 0; i < x.length; i++)\n    {\n        int temp = x[i];\n    \
    \    while(temp > 0)\n        {\n            digits[temp%10]++;\n            temp\
    \ /= 10;\n        }\n    }\n    int[] result = new int[x.length];\n    int index\
    \ = 0;\n    for(int i = 0; i < x.length; i++)\n    {\n        int temp = x[i];\n\
    \        bool flag = true;\n        while(temp > 0)\n        {\n            if(digits[temp%10]\
    \ > 1)\n            {\n                flag = false;\n                break;\n\
    \            }\n            temp /= 10;\n        }\n        if(flag)\n       \
    \ {\n            result[index++] = x[i];\n        }\n    }\n    return result[0..index];\n\
    }\nunittest\n{\n    alias candidate = unique_digits;\n\n    assert(candidate([15L,\
    \ 33L, 1422L, 1L]) == [1L, 15L, 33L]);\n    assert(candidate([152L, 323L, 1422L,\
    \ 10L]) == []);\n    assert(candidate([12345L, 2033L, 111L, 151L]) == [111L, 151L]);\n\
    \    assert(candidate([135L, 103L, 31L]) == [31L, 135L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpthe15g_h.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    int[] even = {0,2,4,6,8};\n\
    \    int[] odd = {1,3,5,7,9};\n    int[] temp = new int[x.length];\n    int count\
    \ = 0;\n    int j = 0;\n    for(int i = 0; i < x.length; i++)\n    {\n       \
    \ temp[i] = x[i];\n    }\n    for(int i = 0; i < x.length; i++)\n    {\n     \
    \   for(int k = 0; k < even.length; k++)\n        {\n            if(temp[i] %\
    \ 10 == even[k])\n            {\n                temp[i] = 0;\n            }\n\
    \        }\n        temp[i] /= 10;\n    }\n    for(int i = 0; i < x.length; i++)\n\
    \    {\n        if(temp[i] != 0)\n        {\n            count++;\n        }\n\
    \    }\n    long[] result = new long[count];\n    for(int i = 0; i < x.length;\
    \ i++)\n    {\n        if(temp[i] != 0)\n        {\n            result[j] = x[i];\n\
    \            j++;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = unique_digits;\n\n    assert(candidate([15L, 33L, 1422L, 1L]) ==\
    \ [1L, 15L, 33L]);\n    assert(candidate([152L, 323L, 1422L, 10L]) == []);\n \
    \   assert(candidate([12345L, 2033L, 111L, 151L]) == [111L, 151L]);\n    assert(candidate([135L,\
    \ 103L, 31L]) == [31L, 135L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpe7ej2i95.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    long[] result = new long[x.length];\n\
    \    int count = 0;\n    foreach(long i; x)\n    {\n        if(i % 2 != 0)\n \
    \       {\n            result[count] = i;\n            count++;\n        }\n \
    \   }\n    return result[0..count];\n}\nunittest\n{\n    alias candidate = unique_digits;\n\
    \n    assert(candidate([15L, 33L, 1422L, 1L]) == [1L, 15L, 33L]);\n    assert(candidate([152L,\
    \ 323L, 1422L, 10L]) == []);\n    assert(candidate([12345L, 2033L, 111L, 151L])\
    \ == [111L, 151L]);\n    assert(candidate([135L, 103L, 31L]) == [31L, 135L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpafq_r_ka.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    long[] result = new long[0];\n\
    \    foreach(long i; x)\n    {\n        if(i.digits.all!(a => a % 2 != 0))\n \
    \       {\n            result ~= i;\n        }\n    }\n    return result.sort;\n\
    }\nunittest\n{\n    alias candidate = unique_digits;\n\n    assert(candidate([15L,\
    \ 33L, 1422L, 1L]) == [1L, 15L, 33L]);\n    assert(candidate([152L, 323L, 1422L,\
    \ 10L]) == []);\n    assert(candidate([12345L, 2033L, 111L, 151L]) == [111L, 151L]);\n\
    \    assert(candidate([135L, 103L, 31L]) == [31L, 135L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpuwud5mw2.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    long[] result = new long[x.length];\n\
    \    int count = 0;\n    foreach(long i; x)\n    {\n        if(!hasEvenDigit(i))\n\
    \        {\n            result[count] = i;\n            count++;\n        }\n\
    \    }\n    return result[0..count];\n}\nunittest\n{\n    alias candidate = unique_digits;\n\
    \n    assert(candidate([15L, 33L, 1422L, 1L]) == [1L, 15L, 33L]);\n    assert(candidate([152L,\
    \ 323L, 1422L, 10L]) == []);\n    assert(candidate([12345L, 2033L, 111L, 151L])\
    \ == [111L, 151L]);\n    assert(candidate([135L, 103L, 31L]) == [31L, 135L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpl_e2xhbv.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    long[] result = new long[0];\n\
    \    foreach(long i; x)\n    {\n        if(i.toString().length == 1)\n       \
    \ {\n            result ~= i;\n        }\n        else\n        {\n          \
    \  bool isEven = false;\n            foreach(char c; i.toString())\n         \
    \   {\n                if(c.to!int() % 2 == 0)\n                {\n          \
    \          isEven = true;\n                    break;\n                }\n   \
    \         }\n            if(!isEven)\n            {\n                result ~=\
    \ i;\n            }\n        }\n    }\n    return result.sort();\n}\nunittest\n\
    {\n    alias candidate = unique_digits;\n\n    assert(candidate([15L, 33L, 1422L,\
    \ 1L]) == [1L, 15L, 33L]);\n    assert(candidate([152L, 323L, 1422L, 10L]) ==\
    \ []);\n    assert(candidate([12345L, 2033L, 111L, 151L]) == [111L, 151L]);\n\
    \    assert(candidate([135L, 103L, 31L]) == [31L, 135L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpteoe5nlz.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    auto result = new long[];\n\
    \    foreach(i; x)\n    {\n        if(i.to!string.length.all!(a => a % 2 == 1))\n\
    \        {\n            result ~= i;\n        }\n    }\n    return result.sort;\n\
    }\nunittest\n{\n    alias candidate = unique_digits;\n\n    assert(candidate([15L,\
    \ 33L, 1422L, 1L]) == [1L, 15L, 33L]);\n    assert(candidate([152L, 323L, 1422L,\
    \ 10L]) == []);\n    assert(candidate([12345L, 2033L, 111L, 151L]) == [111L, 151L]);\n\
    \    assert(candidate([135L, 103L, 31L]) == [31L, 135L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1r7jvgm9.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    long[] result = new long[0];\n\
    \    foreach(long i; x)\n    {\n        if(i.toString().count(\"[02468]\") ==\
    \ 0)\n        {\n            result ~= i;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = unique_digits;\n\n    assert(candidate([15L,\
    \ 33L, 1422L, 1L]) == [1L, 15L, 33L]);\n    assert(candidate([152L, 323L, 1422L,\
    \ 10L]) == []);\n    assert(candidate([12345L, 2033L, 111L, 151L]) == [111L, 151L]);\n\
    \    assert(candidate([135L, 103L, 31L]) == [31L, 135L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkah_snoc.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    int[] even = {0,2,4,6,8};\n\
    \    int[] odd = {1,3,5,7,9};\n    int[] digits;\n    int[] result;\n    int[]\
    \ temp;\n    int count = 0;\n    int index = 0;\n    int i = 0;\n    int j = 0;\n\
    \    int k = 0;\n    int l = 0;\n    int m = 0;\n    int n = 0;\n    int p = 0;\n\
    \    int q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n\
    \    int v = 0;\n    int w = 0;\n    int x1 = 0;\n    int y = 0;\n    int z =\
    \ 0;\n    int a = 0;\n    int b = 0;\n    int c = 0;\n    int d = 0;\n    int\
    \ e = 0;\n    int f = 0;\n    int g = 0;\n    int h = 0;\n    int ii = 0;\n  \
    \  int jj = 0;\n    int kk = 0;\n    int ll = 0;\n    int mm = 0;\n    int nn\
    \ = 0;\n    int oo = 0;\n    int pp = 0;\n    int qq = 0;\n    int rr = 0;\n \
    \   int ss = 0;\n    int tt = 0;\n    int uu = 0;\n    int vv = 0;\n    int ww\
    \ = 0;\n    int xx = 0;\n    int yy = 0;\n    int zz = 0;\n    int aa = 0;\n \
    \   int bb = 0;\n    int cc = 0;\n    int dd = 0;\n    int ee = 0;\n    int ff\
    \ = 0;\n    int gg = 0;\n    int hh = 0;\n    int iii = 0;\n    int jjj = 0;\n\
    \    int kkk = 0;\n    int lll = 0;\n    int mmm = 0;\n    int nnn = 0;\n    int\
    \ ooo = 0;\n    int ppp = 0;\n    int qqq =\nunittest\n{\n    alias candidate\
    \ = unique_digits;\n\n    assert(candidate([15L, 33L, 1422L, 1L]) == [1L, 15L,\
    \ 33L]);\n    assert(candidate([152L, 323L, 1422L, 10L]) == []);\n    assert(candidate([12345L,\
    \ 2033L, 111L, 151L]) == [111L, 151L]);\n    assert(candidate([135L, 103L, 31L])\
    \ == [31L, 135L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp6dmysieq.d(80): Error: expression expected, not \''unittest\''\n/tmp/tmp6dmysieq.d(81):
    Error: semicolon expected, not \''{\''\n/tmp/tmp6dmysieq.d(89): Error: found \''EOF\''
    when expecting \''}\'' following compound statement\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmp6dmysieq.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    auto result = new long[];\n\
    \    foreach(i; x)\n    {\n        if(!hasEvenDigit(i))\n            result ~=\
    \ i;\n    }\n    std.algorithm.sort(result);\n    return result;\n}\nunittest\n\
    {\n    alias candidate = unique_digits;\n\n    assert(candidate([15L, 33L, 1422L,\
    \ 1L]) == [1L, 15L, 33L]);\n    assert(candidate([152L, 323L, 1422L, 10L]) ==\
    \ []);\n    assert(candidate([12345L, 2033L, 111L, 151L]) == [111L, 151L]);\n\
    \    assert(candidate([135L, 103L, 31L]) == [31L, 135L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmgvc96sz.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    long[] result = new long[0];\n\
    \    foreach(long i; x)\n    {\n        if(i.toString().length == 1)\n       \
    \ {\n            result ~= i;\n        }\n        else\n        {\n          \
    \  bool isEven = false;\n            foreach(char c; i.toString())\n         \
    \   {\n                if(c.to!int % 2 == 0)\n                {\n            \
    \        isEven = true;\n                    break;\n                }\n     \
    \       }\n            if(!isEven)\n            {\n                result ~= i;\n\
    \            }\n        }\n    }\n    return result.sort;\n}\nunittest\n{\n  \
    \  alias candidate = unique_digits;\n\n    assert(candidate([15L, 33L, 1422L,\
    \ 1L]) == [1L, 15L, 33L]);\n    assert(candidate([152L, 323L, 1422L, 10L]) ==\
    \ []);\n    assert(candidate([12345L, 2033L, 111L, 151L]) == [111L, 151L]);\n\
    \    assert(candidate([135L, 103L, 31L]) == [31L, 135L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp62bi5aob.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    int[] even = {0,2,4,6,8};\n\
    \    int[] odd = {1,3,5,7,9};\n    int[] digits = new int[10];\n    int[] result\
    \ = new int[x.length];\n    int count = 0;\n    foreach(int i; x)\n    {\n   \
    \     int temp = i;\n        while(temp > 0)\n        {\n            digits[temp\
    \ % 10]++;\n            temp /= 10;\n        }\n        bool isOdd = true;\n \
    \       foreach(int j; even)\n        {\n            if(digits[j] > 0)\n     \
    \       {\n                isOdd = false;\n                break;\n          \
    \  }\n        }\n        if(isOdd)\n        {\n            result[count] = i;\n\
    \            count++;\n        }\n        foreach(int j; digits)\n        {\n\
    \            j = 0;\n        }\n    }\n    return result[0..count];\n}\nunittest\n\
    {\n    alias candidate = unique_digits;\n\n    assert(candidate([15L, 33L, 1422L,\
    \ 1L]) == [1L, 15L, 33L]);\n    assert(candidate([152L, 323L, 1422L, 10L]) ==\
    \ []);\n    assert(candidate([12345L, 2033L, 111L, 151L]) == [111L, 151L]);\n\
    \    assert(candidate([135L, 103L, 31L]) == [31L, 135L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1ea6aajn.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    long[] result = new long[x.length];\n\
    \    int count = 0;\n    for (int i = 0; i < x.length; i++)\n    {\n        if\
    \ (x[i] % 2 != 0)\n        {\n            result[count] = x[i];\n            count++;\n\
    \        }\n    }\n    long[] finalResult = new long[count];\n    for (int i =\
    \ 0; i < count; i++)\n    {\n        finalResult[i] = result[i];\n    }\n    return\
    \ finalResult;\n}\nunittest\n{\n    alias candidate = unique_digits;\n\n    assert(candidate([15L,\
    \ 33L, 1422L, 1L]) == [1L, 15L, 33L]);\n    assert(candidate([152L, 323L, 1422L,\
    \ 10L]) == []);\n    assert(candidate([12345L, 2033L, 111L, 151L]) == [111L, 151L]);\n\
    \    assert(candidate([135L, 103L, 31L]) == [31L, 135L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpw2r4kfl_.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    long[] result = new long[x.length];\n\
    \    int j = 0;\n    for (int i = 0; i < x.length; i++)\n    {\n        if(x[i]\
    \ % 2 != 0)\n        {\n            result[j] = x[i];\n            j++;\n    \
    \    }\n    }\n    result = result.sort();\n    return result;\n}\nunittest\n\
    {\n    alias candidate = unique_digits;\n\n    assert(candidate([15L, 33L, 1422L,\
    \ 1L]) == [1L, 15L, 33L]);\n    assert(candidate([152L, 323L, 1422L, 10L]) ==\
    \ []);\n    assert(candidate([12345L, 2033L, 111L, 151L]) == [111L, 151L]);\n\
    \    assert(candidate([135L, 103L, 31L]) == [31L, 135L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0c_4mj4x.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    long[] result = new long[x.length];\n\
    \    int count = 0;\n    foreach(long num; x)\n    {\n        if(num % 2 != 0)\n\
    \        {\n            result[count] = num;\n            count++;\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = unique_digits;\n\
    \n    assert(candidate([15L, 33L, 1422L, 1L]) == [1L, 15L, 33L]);\n    assert(candidate([152L,\
    \ 323L, 1422L, 10L]) == []);\n    assert(candidate([12345L, 2033L, 111L, 151L])\
    \ == [111L, 151L]);\n    assert(candidate([135L, 103L, 31L]) == [31L, 135L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbaoey495.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    auto result = new long[];\n\
    \    foreach(e; x)\n    {\n        if(e.digits.all!(a => a % 2 == 1))\n      \
    \      result ~= e;\n    }\n    return result.sort;\n}\nunittest\n{\n    alias\
    \ candidate = unique_digits;\n\n    assert(candidate([15L, 33L, 1422L, 1L]) ==\
    \ [1L, 15L, 33L]);\n    assert(candidate([152L, 323L, 1422L, 10L]) == []);\n \
    \   assert(candidate([12345L, 2033L, 111L, 151L]) == [111L, 151L]);\n    assert(candidate([135L,\
    \ 103L, 31L]) == [31L, 135L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjkv01wrk.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    long[] result = new long[0];\n\
    \    foreach(long i; x)\n    {\n        if(i % 2 != 0)\n        {\n          \
    \  result ~= i;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = unique_digits;\n\n    assert(candidate([15L, 33L, 1422L, 1L]) ==\
    \ [1L, 15L, 33L]);\n    assert(candidate([152L, 323L, 1422L, 10L]) == []);\n \
    \   assert(candidate([12345L, 2033L, 111L, 151L]) == [111L, 151L]);\n    assert(candidate([135L,\
    \ 103L, 31L]) == [31L, 135L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpglics3nv.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    long[] result = new long[0];\n\
    \    foreach(long i; x)\n    {\n        bool found = false;\n        foreach(long\
    \ j; i.digits)\n        {\n            if(j % 2 == 0)\n            {\n       \
    \         found = true;\n                break;\n            }\n        }\n  \
    \      if(!found)\n        {\n            result ~= i;\n        }\n    }\n   \
    \ return result.sort();\n}\nunittest\n{\n    alias candidate = unique_digits;\n\
    \n    assert(candidate([15L, 33L, 1422L, 1L]) == [1L, 15L, 33L]);\n    assert(candidate([152L,\
    \ 323L, 1422L, 10L]) == []);\n    assert(candidate([12345L, 2033L, 111L, 151L])\
    \ == [111L, 151L]);\n    assert(candidate([135L, 103L, 31L]) == [31L, 135L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_g3wjlw6.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    long[] result = new long[0];\n\
    \    foreach(long i; x)\n    {\n        if(i.toString().length == 1)\n       \
    \ {\n            result ~= i;\n        }\n        else\n        {\n          \
    \  bool isEven = false;\n            foreach(char c; i.toString())\n         \
    \   {\n                if(c.to!int() % 2 == 0)\n                {\n          \
    \          isEven = true;\n                    break;\n                }\n   \
    \         }\n            if(!isEven)\n            {\n                result ~=\
    \ i;\n            }\n        }\n    }\n    return result.sort();\n}\nunittest\n\
    {\n    alias candidate = unique_digits;\n\n    assert(candidate([15L, 33L, 1422L,\
    \ 1L]) == [1L, 15L, 33L]);\n    assert(candidate([152L, 323L, 1422L, 10L]) ==\
    \ []);\n    assert(candidate([12345L, 2033L, 111L, 151L]) == [111L, 151L]);\n\
    \    assert(candidate([135L, 103L, 31L]) == [31L, 135L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpteoe5nlz.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    long[] result = new long[0];\n\
    \    foreach(long i; x)\n    {\n        if(!hasEvenDigit(i))\n        {\n    \
    \        result ~= i;\n        }\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = unique_digits;\n\n    assert(candidate([15L, 33L, 1422L,\
    \ 1L]) == [1L, 15L, 33L]);\n    assert(candidate([152L, 323L, 1422L, 10L]) ==\
    \ []);\n    assert(candidate([12345L, 2033L, 111L, 151L]) == [111L, 151L]);\n\
    \    assert(candidate([135L, 103L, 31L]) == [31L, 135L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5hune2e4.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    auto result = new long[];\n\
    \    foreach(i; x)\n    {\n        if(i.digits.filter!(a => a % 2 == 0).length\
    \ == 0)\n        {\n            result ~= i;\n        }\n    }\n    return result.sort;\n\
    }\nunittest\n{\n    alias candidate = unique_digits;\n\n    assert(candidate([15L,\
    \ 33L, 1422L, 1L]) == [1L, 15L, 33L]);\n    assert(candidate([152L, 323L, 1422L,\
    \ 10L]) == []);\n    assert(candidate([12345L, 2033L, 111L, 151L]) == [111L, 151L]);\n\
    \    assert(candidate([135L, 103L, 31L]) == [31L, 135L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6lzxf3gr.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    long[] result = new long[x.length];\n\
    \    int j = 0;\n    for (int i = 0; i < x.length; i++)\n    {\n        if (x[i]\
    \ % 2 != 0)\n        {\n            result[j] = x[i];\n            j++;\n    \
    \    }\n    }\n    result = result.take(j);\n    result.sort();\n    return result;\n\
    }\nunittest\n{\n    alias candidate = unique_digits;\n\n    assert(candidate([15L,\
    \ 33L, 1422L, 1L]) == [1L, 15L, 33L]);\n    assert(candidate([152L, 323L, 1422L,\
    \ 10L]) == []);\n    assert(candidate([12345L, 2033L, 111L, 151L]) == [111L, 151L]);\n\
    \    assert(candidate([135L, 103L, 31L]) == [31L, 135L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2kl250hv.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    long[] result = new long[0];\n\
    \    foreach(long i; x)\n    {\n        if(i.toString().length == 1)\n       \
    \ {\n            result ~= i;\n        }\n        else\n        {\n          \
    \  bool even = false;\n            foreach(char c; i.toString())\n           \
    \ {\n                if(c.to!int % 2 == 0)\n                {\n              \
    \      even = true;\n                    break;\n                }\n         \
    \   }\n            if(!even)\n            {\n                result ~= i;\n  \
    \          }\n        }\n    }\n    return result.sort();\n}\nunittest\n{\n  \
    \  alias candidate = unique_digits;\n\n    assert(candidate([15L, 33L, 1422L,\
    \ 1L]) == [1L, 15L, 33L]);\n    assert(candidate([152L, 323L, 1422L, 10L]) ==\
    \ []);\n    assert(candidate([12345L, 2033L, 111L, 151L]) == [111L, 151L]);\n\
    \    assert(candidate([135L, 103L, 31L]) == [31L, 135L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkunbl_hy.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    long[] result = new long[x.length];\n\
    \    int j = 0;\n    foreach(long i; x)\n    {\n        if(i%2 != 0)\n       \
    \ {\n            result[j] = i;\n            j++;\n        }\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = unique_digits;\n\n    assert(candidate([15L,\
    \ 33L, 1422L, 1L]) == [1L, 15L, 33L]);\n    assert(candidate([152L, 323L, 1422L,\
    \ 10L]) == []);\n    assert(candidate([12345L, 2033L, 111L, 151L]) == [111L, 151L]);\n\
    \    assert(candidate([135L, 103L, 31L]) == [31L, 135L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_yxxj3pd.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    long[] result = [];\n    foreach(long\
    \ i; x)\n    {\n        if(i % 2 != 0)\n        {\n            result ~= i;\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = unique_digits;\n\
    \n    assert(candidate([15L, 33L, 1422L, 1L]) == [1L, 15L, 33L]);\n    assert(candidate([152L,\
    \ 323L, 1422L, 10L]) == []);\n    assert(candidate([12345L, 2033L, 111L, 151L])\
    \ == [111L, 151L]);\n    assert(candidate([135L, 103L, 31L]) == [31L, 135L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_04n0jl6.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    auto result = new long[];\n\
    \    foreach(num; x)\n    {\n        if(num.digits.all!(a => a % 2 != 0))\n  \
    \          result ~= num;\n    }\n    return result.sort;\n}\nunittest\n{\n  \
    \  alias candidate = unique_digits;\n\n    assert(candidate([15L, 33L, 1422L,\
    \ 1L]) == [1L, 15L, 33L]);\n    assert(candidate([152L, 323L, 1422L, 10L]) ==\
    \ []);\n    assert(candidate([12345L, 2033L, 111L, 151L]) == [111L, 151L]);\n\
    \    assert(candidate([135L, 103L, 31L]) == [31L, 135L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkjybzect.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    auto result = new long[];\n\
    \    foreach(i; x)\n    {\n        auto hasEven = false;\n        auto num = i;\n\
    \        while(num > 0)\n        {\n            if(num % 2 == 0)\n           \
    \ {\n                hasEven = true;\n                break;\n            }\n\
    \            num /= 10;\n        }\n        if(!hasEven)\n        {\n        \
    \    result ~= i;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = unique_digits;\n\n    assert(candidate([15L, 33L, 1422L, 1L]) ==\
    \ [1L, 15L, 33L]);\n    assert(candidate([152L, 323L, 1422L, 10L]) == []);\n \
    \   assert(candidate([12345L, 2033L, 111L, 151L]) == [111L, 151L]);\n    assert(candidate([135L,\
    \ 103L, 31L]) == [31L, 135L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpf01xhz0f.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    auto result = new long[];\n\
    \    foreach(i; x)\n    {\n        auto s = to!string(i);\n        bool isEven\
    \ = false;\n        foreach(c; s)\n        {\n            if(c == '2' || c ==\
    \ '4' || c == '6' || c == '8' || c == '0')\n            {\n                isEven\
    \ = true;\n                break;\n            }\n        }\n        if(!isEven)\n\
    \        {\n            result ~= i;\n        }\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = unique_digits;\n\n    assert(candidate([15L,\
    \ 33L, 1422L, 1L]) == [1L, 15L, 33L]);\n    assert(candidate([152L, 323L, 1422L,\
    \ 10L]) == []);\n    assert(candidate([12345L, 2033L, 111L, 151L]) == [111L, 151L]);\n\
    \    assert(candidate([135L, 103L, 31L]) == [31L, 135L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmfauuwnq.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    auto result = new long[];\n\
    \    foreach(num; x)\n    {\n        if(num.digits.filter!(a => a % 2 == 0).length\
    \ == 0)\n            result ~= num;\n    }\n    return result.sort;\n}\nunittest\n\
    {\n    alias candidate = unique_digits;\n\n    assert(candidate([15L, 33L, 1422L,\
    \ 1L]) == [1L, 15L, 33L]);\n    assert(candidate([152L, 323L, 1422L, 10L]) ==\
    \ []);\n    assert(candidate([12345L, 2033L, 111L, 151L]) == [111L, 151L]);\n\
    \    assert(candidate([135L, 103L, 31L]) == [31L, 135L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwqxioc4m.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    long[] result = new long[0];\n\
    \    foreach(long i; x)\n    {\n        if(i.toString().length == 1)\n       \
    \ {\n            result ~= i;\n        }\n        else\n        {\n          \
    \  bool isEven = false;\n            foreach(char c; i.toString())\n         \
    \   {\n                if(c.to!int % 2 == 0)\n                {\n            \
    \        isEven = true;\n                    break;\n                }\n     \
    \       }\n            if(!isEven)\n            {\n                result ~= i;\n\
    \            }\n        }\n    }\n    return result.sort;\n}\nunittest\n{\n  \
    \  alias candidate = unique_digits;\n\n    assert(candidate([15L, 33L, 1422L,\
    \ 1L]) == [1L, 15L, 33L]);\n    assert(candidate([152L, 323L, 1422L, 10L]) ==\
    \ []);\n    assert(candidate([12345L, 2033L, 111L, 151L]) == [111L, 151L]);\n\
    \    assert(candidate([135L, 103L, 31L]) == [31L, 135L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp62bi5aob.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    long[] result = new long[0];\n\
    \    foreach(long n; x)\n    {\n        bool hasEven = false;\n        while(n\
    \ > 0)\n        {\n            if(n % 2 == 0)\n            {\n               \
    \ hasEven = true;\n                break;\n            }\n            n /= 10;\n\
    \        }\n        if(!hasEven)\n        {\n            result ~= n;\n      \
    \  }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = unique_digits;\n\
    \n    assert(candidate([15L, 33L, 1422L, 1L]) == [1L, 15L, 33L]);\n    assert(candidate([152L,\
    \ 323L, 1422L, 10L]) == []);\n    assert(candidate([12345L, 2033L, 111L, 151L])\
    \ == [111L, 151L]);\n    assert(candidate([135L, 103L, 31L]) == [31L, 135L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvppvimgx.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    auto result = new long[];\n\
    \    foreach(i; x)\n    {\n        if(!hasEvenDigit(i))\n            result ~=\
    \ i;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = unique_digits;\n\
    \n    assert(candidate([15L, 33L, 1422L, 1L]) == [1L, 15L, 33L]);\n    assert(candidate([152L,\
    \ 323L, 1422L, 10L]) == []);\n    assert(candidate([12345L, 2033L, 111L, 151L])\
    \ == [111L, 151L]);\n    assert(candidate([135L, 103L, 31L]) == [31L, 135L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpn8ik8dmp.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    auto result = new long[];\n\
    \    foreach(i; x)\n    {\n        if(i.digits.filter!(a => a % 2 == 0).length\
    \ == 0)\n        {\n            result ~= i;\n        }\n    }\n    return result.sort;\n\
    }\nunittest\n{\n    alias candidate = unique_digits;\n\n    assert(candidate([15L,\
    \ 33L, 1422L, 1L]) == [1L, 15L, 33L]);\n    assert(candidate([152L, 323L, 1422L,\
    \ 10L]) == []);\n    assert(candidate([12345L, 2033L, 111L, 151L]) == [111L, 151L]);\n\
    \    assert(candidate([135L, 103L, 31L]) == [31L, 135L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6lzxf3gr.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    auto result = new long[];\n\
    \    foreach(e; x)\n    {\n        if(!e.to!string.canFind(\"2\") && !e.to!string.canFind(\"\
    4\") && !e.to!string.canFind(\"6\") && !e.to!string.canFind(\"8\"))\n        {\n\
    \            result ~= e;\n        }\n    }\n    return result.sort();\n}\nunittest\n\
    {\n    alias candidate = unique_digits;\n\n    assert(candidate([15L, 33L, 1422L,\
    \ 1L]) == [1L, 15L, 33L]);\n    assert(candidate([152L, 323L, 1422L, 10L]) ==\
    \ []);\n    assert(candidate([12345L, 2033L, 111L, 151L]) == [111L, 151L]);\n\
    \    assert(candidate([135L, 103L, 31L]) == [31L, 135L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpicxbp_ia.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    long[] result = new long[0];\n\
    \    foreach(long i; x)\n    {\n        if(i.toString().length == 1)\n       \
    \ {\n            result ~= i;\n        }\n        else\n        {\n          \
    \  bool isUnique = true;\n            foreach(char c; i.toString())\n        \
    \    {\n                if(c.isDigit && c.to!int % 2 == 0)\n                {\n\
    \                    isUnique = false;\n                    break;\n         \
    \       }\n            }\n            if(isUnique)\n            {\n          \
    \      result ~= i;\n            }\n        }\n    }\n    return result.sort();\n\
    }\nunittest\n{\n    alias candidate = unique_digits;\n\n    assert(candidate([15L,\
    \ 33L, 1422L, 1L]) == [1L, 15L, 33L]);\n    assert(candidate([152L, 323L, 1422L,\
    \ 10L]) == []);\n    assert(candidate([12345L, 2033L, 111L, 151L]) == [111L, 151L]);\n\
    \    assert(candidate([135L, 103L, 31L]) == [31L, 135L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4pbtpo11.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    long[] result = new long[0];\n\
    \    foreach(long i; x)\n    {\n        if(i % 2 != 0)\n        {\n          \
    \  result ~= i;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = unique_digits;\n\n    assert(candidate([15L, 33L, 1422L, 1L]) ==\
    \ [1L, 15L, 33L]);\n    assert(candidate([152L, 323L, 1422L, 10L]) == []);\n \
    \   assert(candidate([12345L, 2033L, 111L, 151L]) == [111L, 151L]);\n    assert(candidate([135L,\
    \ 103L, 31L]) == [31L, 135L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpglics3nv.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    long[] result = new long[0];\n\
    \    foreach(long i; x)\n    {\n        if(i.toString().length == 1)\n       \
    \ {\n            result ~= i;\n        }\n        else\n        {\n          \
    \  bool is_even = false;\n            foreach(char c; i.toString())\n        \
    \    {\n                if(c.to!int() % 2 == 0)\n                {\n         \
    \           is_even = true;\n                    break;\n                }\n \
    \           }\n            if(!is_even)\n            {\n                result\
    \ ~= i;\n            }\n        }\n    }\n    return result.sort();\n}\nunittest\n\
    {\n    alias candidate = unique_digits;\n\n    assert(candidate([15L, 33L, 1422L,\
    \ 1L]) == [1L, 15L, 33L]);\n    assert(candidate([152L, 323L, 1422L, 10L]) ==\
    \ []);\n    assert(candidate([12345L, 2033L, 111L, 151L]) == [111L, 151L]);\n\
    \    assert(candidate([135L, 103L, 31L]) == [31L, 135L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptrxihpiq.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    auto result = new long[];\n\
    \    foreach(i; x)\n    {\n        if(!hasEvenDigit(i))\n            result ~=\
    \ i;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = unique_digits;\n\
    \n    assert(candidate([15L, 33L, 1422L, 1L]) == [1L, 15L, 33L]);\n    assert(candidate([152L,\
    \ 323L, 1422L, 10L]) == []);\n    assert(candidate([12345L, 2033L, 111L, 151L])\
    \ == [111L, 151L]);\n    assert(candidate([135L, 103L, 31L]) == [31L, 135L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpn8ik8dmp.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    auto result = [];\n    foreach(i;\
    \ x)\n    {\n        if(i % 2 != 0)\n        {\n            result ~= i;\n   \
    \     }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = unique_digits;\n\
    \n    assert(candidate([15L, 33L, 1422L, 1L]) == [1L, 15L, 33L]);\n    assert(candidate([152L,\
    \ 323L, 1422L, 10L]) == []);\n    assert(candidate([12345L, 2033L, 111L, 151L])\
    \ == [111L, 151L]);\n    assert(candidate([135L, 103L, 31L]) == [31L, 135L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpillwhzwo.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    long[] res = new long[x.length];\n\
    \    int j = 0;\n    foreach(long i; x)\n    {\n        if(i % 2 != 0)\n     \
    \   {\n            res[j] = i;\n            j++;\n        }\n    }\n    return\
    \ res;\n}\nunittest\n{\n    alias candidate = unique_digits;\n\n    assert(candidate([15L,\
    \ 33L, 1422L, 1L]) == [1L, 15L, 33L]);\n    assert(candidate([152L, 323L, 1422L,\
    \ 10L]) == []);\n    assert(candidate([12345L, 2033L, 111L, 151L]) == [111L, 151L]);\n\
    \    assert(candidate([135L, 103L, 31L]) == [31L, 135L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpc0yen5o2.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    long[] res = new long[0];\n\
    \    foreach(long i; x)\n    {\n        if(i.digits.all!(a => a % 2 != 0))\n \
    \       {\n            res ~= i;\n        }\n    }\n    return res.sort;\n}\n\
    unittest\n{\n    alias candidate = unique_digits;\n\n    assert(candidate([15L,\
    \ 33L, 1422L, 1L]) == [1L, 15L, 33L]);\n    assert(candidate([152L, 323L, 1422L,\
    \ 10L]) == []);\n    assert(candidate([12345L, 2033L, 111L, 151L]) == [111L, 151L]);\n\
    \    assert(candidate([135L, 103L, 31L]) == [31L, 135L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7shzv7d1.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    long[] result = new long[0];\n\
    \    foreach(long n; x)\n    {\n        if(n.digits.all!(d => d % 2 != 0))\n \
    \       {\n            result ~= n;\n        }\n    }\n    return result.sort;\n\
    }\nunittest\n{\n    alias candidate = unique_digits;\n\n    assert(candidate([15L,\
    \ 33L, 1422L, 1L]) == [1L, 15L, 33L]);\n    assert(candidate([152L, 323L, 1422L,\
    \ 10L]) == []);\n    assert(candidate([12345L, 2033L, 111L, 151L]) == [111L, 151L]);\n\
    \    assert(candidate([135L, 103L, 31L]) == [31L, 135L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpj_8fggb4.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    long[] result = new long[x.length];\n\
    \    int count = 0;\n    foreach(long i; x)\n    {\n        if(!hasEvenDigit(i))\n\
    \        {\n            result[count] = i;\n            count++;\n        }\n\
    \    }\n    return result[0..count];\n}\nunittest\n{\n    alias candidate = unique_digits;\n\
    \n    assert(candidate([15L, 33L, 1422L, 1L]) == [1L, 15L, 33L]);\n    assert(candidate([152L,\
    \ 323L, 1422L, 10L]) == []);\n    assert(candidate([12345L, 2033L, 111L, 151L])\
    \ == [111L, 151L]);\n    assert(candidate([135L, 103L, 31L]) == [31L, 135L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpl_e2xhbv.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    long[] result = new long[0];\n\
    \    foreach(long i; x)\n    {\n        if(!hasEvenDigit(i))\n        {\n    \
    \        result ~= i;\n        }\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = unique_digits;\n\n    assert(candidate([15L, 33L, 1422L,\
    \ 1L]) == [1L, 15L, 33L]);\n    assert(candidate([152L, 323L, 1422L, 10L]) ==\
    \ []);\n    assert(candidate([12345L, 2033L, 111L, 151L]) == [111L, 151L]);\n\
    \    assert(candidate([135L, 103L, 31L]) == [31L, 135L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5hune2e4.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    long[] result = new long[x.length];\n\
    \    int count = 0;\n    foreach(long i; x)\n    {\n        if(i % 2 != 0)\n \
    \       {\n            result[count] = i;\n            count++;\n        }\n \
    \   }\n    return result[0..count];\n}\nunittest\n{\n    alias candidate = unique_digits;\n\
    \n    assert(candidate([15L, 33L, 1422L, 1L]) == [1L, 15L, 33L]);\n    assert(candidate([152L,\
    \ 323L, 1422L, 10L]) == []);\n    assert(candidate([12345L, 2033L, 111L, 151L])\
    \ == [111L, 151L]);\n    assert(candidate([135L, 103L, 31L]) == [31L, 135L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpafq_r_ka.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    auto result = new long[];\n\
    \    foreach(i; x)\n    {\n        if(i.digits.all!(a => a % 2 == 1))\n      \
    \      result ~= i;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = unique_digits;\n\n    assert(candidate([15L, 33L, 1422L, 1L]) == [1L, 15L,\
    \ 33L]);\n    assert(candidate([152L, 323L, 1422L, 10L]) == []);\n    assert(candidate([12345L,\
    \ 2033L, 111L, 151L]) == [111L, 151L]);\n    assert(candidate([135L, 103L, 31L])\
    \ == [31L, 135L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprs9_gmb5.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    long[] res = new long[0];\n\
    \    foreach(long i; x)\n    {\n        if(i.digits.all!(a => a % 2 != 0))\n \
    \       {\n            res ~= i;\n        }\n    }\n    return res.sort;\n}\n\
    unittest\n{\n    alias candidate = unique_digits;\n\n    assert(candidate([15L,\
    \ 33L, 1422L, 1L]) == [1L, 15L, 33L]);\n    assert(candidate([152L, 323L, 1422L,\
    \ 10L]) == []);\n    assert(candidate([12345L, 2033L, 111L, 151L]) == [111L, 151L]);\n\
    \    assert(candidate([135L, 103L, 31L]) == [31L, 135L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7shzv7d1.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    long[] result = new long[0];\n\
    \    foreach(long num; x)\n    {\n        if(num.toString.length == 1)\n     \
    \   {\n            result ~= num;\n        }\n        else\n        {\n      \
    \      bool isEven = false;\n            foreach(char c; num.toString)\n     \
    \       {\n                if(c.to!int % 2 == 0)\n                {\n        \
    \            isEven = true;\n                    break;\n                }\n \
    \           }\n            if(!isEven)\n            {\n                result\
    \ ~= num;\n            }\n        }\n    }\n    return result.sort;\n}\nunittest\n\
    {\n    alias candidate = unique_digits;\n\n    assert(candidate([15L, 33L, 1422L,\
    \ 1L]) == [1L, 15L, 33L]);\n    assert(candidate([152L, 323L, 1422L, 10L]) ==\
    \ []);\n    assert(candidate([12345L, 2033L, 111L, 151L]) == [111L, 151L]);\n\
    \    assert(candidate([135L, 103L, 31L]) == [31L, 135L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5ylcjgaj.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    auto result = new long[];\n\
    \    foreach(i; x)\n    {\n        if(i.digits.filter!(a => a % 2 == 0).length\
    \ == 0)\n        {\n            result ~= i;\n        }\n    }\n    return result.sort;\n\
    }\nunittest\n{\n    alias candidate = unique_digits;\n\n    assert(candidate([15L,\
    \ 33L, 1422L, 1L]) == [1L, 15L, 33L]);\n    assert(candidate([152L, 323L, 1422L,\
    \ 10L]) == []);\n    assert(candidate([12345L, 2033L, 111L, 151L]) == [111L, 151L]);\n\
    \    assert(candidate([135L, 103L, 31L]) == [31L, 135L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6lzxf3gr.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    long[] result = new long[x.length];\n\
    \    int count = 0;\n    foreach(long i; x)\n    {\n        if(i % 2 != 0)\n \
    \       {\n            result[count] = i;\n            count++;\n        }\n \
    \   }\n    return result[0..count];\n}\nunittest\n{\n    alias candidate = unique_digits;\n\
    \n    assert(candidate([15L, 33L, 1422L, 1L]) == [1L, 15L, 33L]);\n    assert(candidate([152L,\
    \ 323L, 1422L, 10L]) == []);\n    assert(candidate([12345L, 2033L, 111L, 151L])\
    \ == [111L, 151L]);\n    assert(candidate([135L, 103L, 31L]) == [31L, 135L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpafq_r_ka.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    long[] result = [];\n    foreach(long\
    \ i; x)\n    {\n        if(i % 2 != 0)\n        {\n            result ~= i;\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = unique_digits;\n\
    \n    assert(candidate([15L, 33L, 1422L, 1L]) == [1L, 15L, 33L]);\n    assert(candidate([152L,\
    \ 323L, 1422L, 10L]) == []);\n    assert(candidate([12345L, 2033L, 111L, 151L])\
    \ == [111L, 151L]);\n    assert(candidate([135L, 103L, 31L]) == [31L, 135L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_04n0jl6.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    int[] even = {0,2,4,6,8};\n\
    \    auto evenDigits = new bool[x.length];\n    foreach(i, v; x)\n    {\n    \
    \    foreach(e; even)\n        {\n            if(v.to!string.indexOf(e.to!string)\
    \ != -1)\n            {\n                evenDigits[i] = true;\n             \
    \   break;\n            }\n        }\n    }\n    return x.filter!(a => !evenDigits[a.index]).array;\n\
    }\nunittest\n{\n    alias candidate = unique_digits;\n\n    assert(candidate([15L,\
    \ 33L, 1422L, 1L]) == [1L, 15L, 33L]);\n    assert(candidate([152L, 323L, 1422L,\
    \ 10L]) == []);\n    assert(candidate([12345L, 2033L, 111L, 151L]) == [111L, 151L]);\n\
    \    assert(candidate([135L, 103L, 31L]) == [31L, 135L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3tltgj5a.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    auto result = new long[];\n\
    \    foreach(i; x)\n    {\n        if(i % 2 != 0)\n        {\n            result\
    \ ~= i;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = unique_digits;\n\n    assert(candidate([15L, 33L, 1422L, 1L]) == [1L, 15L,\
    \ 33L]);\n    assert(candidate([152L, 323L, 1422L, 10L]) == []);\n    assert(candidate([12345L,\
    \ 2033L, 111L, 151L]) == [111L, 151L]);\n    assert(candidate([135L, 103L, 31L])\
    \ == [31L, 135L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg4rke7av.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    long[] result = new long[x.length];\n\
    \    int count = 0;\n    foreach(long i; x)\n    {\n        bool hasEven = false;\n\
    \        foreach(char c; i.to!string)\n        {\n            if(c.to!int % 2\
    \ == 0)\n            {\n                hasEven = true;\n                break;\n\
    \            }\n        }\n        if(!hasEven)\n        {\n            result[count]\
    \ = i;\n            count++;\n        }\n    }\n    return result[0..count].sort();\n\
    }\nunittest\n{\n    alias candidate = unique_digits;\n\n    assert(candidate([15L,\
    \ 33L, 1422L, 1L]) == [1L, 15L, 33L]);\n    assert(candidate([152L, 323L, 1422L,\
    \ 10L]) == []);\n    assert(candidate([12345L, 2033L, 111L, 151L]) == [111L, 151L]);\n\
    \    assert(candidate([135L, 103L, 31L]) == [31L, 135L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmdjp1dy6.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    int[] res = new int[x.length];\n\
    \    int count = 0;\n    foreach(int i; x)\n    {\n        if(!hasEvenDigit(i))\n\
    \        {\n            res[count] = i;\n            count++;\n        }\n   \
    \ }\n    return res[0..count];\n}\nunittest\n{\n    alias candidate = unique_digits;\n\
    \n    assert(candidate([15L, 33L, 1422L, 1L]) == [1L, 15L, 33L]);\n    assert(candidate([152L,\
    \ 323L, 1422L, 10L]) == []);\n    assert(candidate([12345L, 2033L, 111L, 151L])\
    \ == [111L, 151L]);\n    assert(candidate([135L, 103L, 31L]) == [31L, 135L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpv3i36tcb.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    auto result = new long[];\n\
    \    foreach(num; x)\n    {\n        if(num.digits.filter!(a => a % 2 == 0).length\
    \ == 0)\n            result ~= num;\n    }\n    return result.sort;\n}\nunittest\n\
    {\n    alias candidate = unique_digits;\n\n    assert(candidate([15L, 33L, 1422L,\
    \ 1L]) == [1L, 15L, 33L]);\n    assert(candidate([152L, 323L, 1422L, 10L]) ==\
    \ []);\n    assert(candidate([12345L, 2033L, 111L, 151L]) == [111L, 151L]);\n\
    \    assert(candidate([135L, 103L, 31L]) == [31L, 135L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwqxioc4m.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    long[] result = new long[x.length];\n\
    \    int j = 0;\n    foreach(long i; x)\n    {\n        if(i.toString().count(\"\
    2\") == 0 && i.toString().count(\"4\") == 0 && i.toString().count(\"6\") == 0\
    \ && i.toString().count(\"8\") == 0)\n        {\n            result[j] = i;\n\
    \            j++;\n        }\n    }\n    result = result[0..j];\n    result.sort;\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = unique_digits;\n\n\
    \    assert(candidate([15L, 33L, 1422L, 1L]) == [1L, 15L, 33L]);\n    assert(candidate([152L,\
    \ 323L, 1422L, 10L]) == []);\n    assert(candidate([12345L, 2033L, 111L, 151L])\
    \ == [111L, 151L]);\n    assert(candidate([135L, 103L, 31L]) == [31L, 135L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcc2emkri.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    auto evenDigits = [](long\
    \ n) {\n        while (n > 0) {\n            if (n % 2 == 0) return true;\n  \
    \          n /= 10;\n        }\n        return false;\n    };\n    return x.filter!(n\
    \ => !evenDigits(n)).sort;\n}\nunittest\n{\n    alias candidate = unique_digits;\n\
    \n    assert(candidate([15L, 33L, 1422L, 1L]) == [1L, 15L, 33L]);\n    assert(candidate([152L,\
    \ 323L, 1422L, 10L]) == []);\n    assert(candidate([12345L, 2033L, 111L, 151L])\
    \ == [111L, 151L]);\n    assert(candidate([135L, 103L, 31L]) == [31L, 135L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpjpmvaksn.d(13): Error: found \''n\'' when expecting \''.\''
    following long\n/tmp/tmpjpmvaksn.d(13): Error: found \'')\'' when expecting identifier
    following \''long.\''\n/tmp/tmpjpmvaksn.d(13): Error: found \''{\'' when expecting
    \'',\''\n/tmp/tmpjpmvaksn.d(14): Error: expression expected, not \''while\''\n/tmp/tmpjpmvaksn.d(14):
    Error: found \''{\'' when expecting \'',\''\n/tmp/tmpjpmvaksn.d(15): Error: expression
    expected, not \''if\''\n/tmp/tmpjpmvaksn.d(15): Error: found \''return\'' when
    expecting \'',\''\n/tmp/tmpjpmvaksn.d(15): Error: found \'';\'' when expecting
    \'',\''\n/tmp/tmpjpmvaksn.d(16): Error: found \'';\'' when expecting \'',\''\n/tmp/tmpjpmvaksn.d(17):
    Error: expression expected, not \''}\''\n/tmp/tmpjpmvaksn.d(18): Error: found
    \''return\'' when expecting \'',\''\n/tmp/tmpjpmvaksn.d(18): Error: found \'';\''
    when expecting \'',\''\n/tmp/tmpjpmvaksn.d(19): Error: expression expected, not
    \''}\''\n/tmp/tmpjpmvaksn.d(19): Error: found \'';\'' when expecting \'',\''\n/tmp/tmpjpmvaksn.d(20):
    Error: expression expected, not \''return\''\n/tmp/tmpjpmvaksn.d(20): Error: found
    \''x\'' when expecting \'',\''\n/tmp/tmpjpmvaksn.d(20): Error: found \'';\'' when
    expecting \'',\''\n/tmp/tmpjpmvaksn.d(21): Error: expression expected, not \''}\''\n/tmp/tmpjpmvaksn.d(22):
    Error: found \''unittest\'' when expecting \'',\''\n/tmp/tmpjpmvaksn.d(31): Error:
    found \''void\'' when expecting \'',\''\n/tmp/tmpjpmvaksn.d(31): Error: found
    \''{\'' when expecting \'',\''\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjpmvaksn.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    long[] result = new long[0];\n\
    \    foreach(long num; x)\n    {\n        bool isEven = false;\n        while(num\
    \ > 0)\n        {\n            if(num % 2 == 0)\n            {\n             \
    \   isEven = true;\n                break;\n            }\n            num /=\
    \ 10;\n        }\n        if(!isEven)\n        {\n            result ~= num;\n\
    \        }\n    }\n    sort(result);\n    return result;\n}\nunittest\n{\n   \
    \ alias candidate = unique_digits;\n\n    assert(candidate([15L, 33L, 1422L, 1L])\
    \ == [1L, 15L, 33L]);\n    assert(candidate([152L, 323L, 1422L, 10L]) == []);\n\
    \    assert(candidate([12345L, 2033L, 111L, 151L]) == [111L, 151L]);\n    assert(candidate([135L,\
    \ 103L, 31L]) == [31L, 135L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpr989h7v5.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    long[] result = new long[0];\n\
    \    foreach(long i; x)\n    {\n        if(!hasEvenDigit(i))\n        {\n    \
    \        result ~= i;\n        }\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = unique_digits;\n\n    assert(candidate([15L, 33L, 1422L,\
    \ 1L]) == [1L, 15L, 33L]);\n    assert(candidate([152L, 323L, 1422L, 10L]) ==\
    \ []);\n    assert(candidate([12345L, 2033L, 111L, 151L]) == [111L, 151L]);\n\
    \    assert(candidate([135L, 103L, 31L]) == [31L, 135L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5hune2e4.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    auto evenDigits = [](long\
    \ n) {\n        while (n > 0) {\n            if (n % 2 == 0) {\n             \
    \   return true;\n            }\n            n /= 10;\n        }\n        return\
    \ false;\n    };\n    return x.filter!(a => !evenDigits(a)).sort();\n}\nunittest\n\
    {\n    alias candidate = unique_digits;\n\n    assert(candidate([15L, 33L, 1422L,\
    \ 1L]) == [1L, 15L, 33L]);\n    assert(candidate([152L, 323L, 1422L, 10L]) ==\
    \ []);\n    assert(candidate([12345L, 2033L, 111L, 151L]) == [111L, 151L]);\n\
    \    assert(candidate([135L, 103L, 31L]) == [31L, 135L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmprm3rz6e3.d(13): Error: found \''n\'' when expecting \''.\''
    following long\n/tmp/tmprm3rz6e3.d(13): Error: found \'')\'' when expecting identifier
    following \''long.\''\n/tmp/tmprm3rz6e3.d(13): Error: found \''{\'' when expecting
    \'',\''\n/tmp/tmprm3rz6e3.d(14): Error: expression expected, not \''while\''\n/tmp/tmprm3rz6e3.d(14):
    Error: found \''{\'' when expecting \'',\''\n/tmp/tmprm3rz6e3.d(15): Error: expression
    expected, not \''if\''\n/tmp/tmprm3rz6e3.d(15): Error: found \''{\'' when expecting
    \'',\''\n/tmp/tmprm3rz6e3.d(16): Error: expression expected, not \''return\''\n/tmp/tmprm3rz6e3.d(16):
    Error: found \''true\'' when expecting \'',\''\n/tmp/tmprm3rz6e3.d(16): Error:
    expression expected, not \'';\''\n/tmp/tmprm3rz6e3.d(17): Error: found \''}\''
    when expecting \'',\''\n/tmp/tmprm3rz6e3.d(18): Error: found \'';\'' when expecting
    \'',\''\n/tmp/tmprm3rz6e3.d(19): Error: expression expected, not \''}\''\n/tmp/tmprm3rz6e3.d(20):
    Error: found \''return\'' when expecting \'',\''\n/tmp/tmprm3rz6e3.d(20): Error:
    found \'';\'' when expecting \'',\''\n/tmp/tmprm3rz6e3.d(21): Error: expression
    expected, not \''}\''\n/tmp/tmprm3rz6e3.d(21): Error: found \'';\'' when expecting
    \'',\''\n/tmp/tmprm3rz6e3.d(22): Error: expression expected, not \''return\''\n/tmp/tmprm3rz6e3.d(22):
    Error: found \''x\'' when expecting \'',\''\n/tmp/tmprm3rz6e3.d(22): Error: found
    \'';\'' when expecting \'',\''\n/tmp/tmprm3rz6e3.d(23): Error: expression expected,
    not \''}\''\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprm3rz6e3.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    long[] result = new long[x.length];\n\
    \    int count = 0;\n    foreach(long i; x)\n    {\n        if(i < 10)\n     \
    \   {\n            result[count] = i;\n            count++;\n        }\n     \
    \   else\n        {\n            bool even = false;\n            while(i > 0)\n\
    \            {\n                if(i % 2 == 0)\n                {\n          \
    \          even = true;\n                    break;\n                }\n     \
    \           i /= 10;\n            }\n            if(!even)\n            {\n  \
    \              result[count] = i;\n                count++;\n            }\n \
    \       }\n    }\n    return result[0..count];\n}\nunittest\n{\n    alias candidate\
    \ = unique_digits;\n\n    assert(candidate([15L, 33L, 1422L, 1L]) == [1L, 15L,\
    \ 33L]);\n    assert(candidate([152L, 323L, 1422L, 10L]) == []);\n    assert(candidate([12345L,\
    \ 2033L, 111L, 151L]) == [111L, 151L]);\n    assert(candidate([135L, 103L, 31L])\
    \ == [31L, 135L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2fs5f45c.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    long[] result = new long[x.length];\n\
    \    long[] temp = new long[x.length];\n    int count = 0;\n    int count2 = 0;\n\
    \    for(int i = 0; i < x.length; i++)\n    {\n        long num = x[i];\n    \
    \    while(num > 0)\n        {\n            long digit = num % 10;\n         \
    \   if(digit % 2 == 0)\n            {\n                temp[count] = x[i];\n \
    \               count++;\n                break;\n            }\n            num\
    \ /= 10;\n        }\n    }\n    for(int i = 0; i < x.length; i++)\n    {\n   \
    \     bool found = false;\n        for(int j = 0; j < temp.length; j++)\n    \
    \    {\n            if(x[i] == temp[j])\n            {\n                found\
    \ = true;\n                break;\n            }\n        }\n        if(!found)\n\
    \        {\n            result[count2] = x[i];\n            count2++;\n      \
    \  }\n    }\n    result = result[0..count2];\n    sort(result);\n    return result;\n\
    }\nunittest\n{\n    alias candidate = unique_digits;\n\n    assert(candidate([15L,\
    \ 33L, 1422L, 1L]) == [1L, 15L, 33L]);\n    assert(candidate([152L, 323L, 1422L,\
    \ 10L]) == []);\n    assert(candidate([12345L, 2033L, 111L, 151L]) == [111L, 151L]);\n\
    \    assert(candidate([135L, 103L, 31L]) == [31L, 135L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6_3y5u0y.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    long[] result = new long[0];\n\
    \    foreach(long i; x)\n    {\n        if(i.toString().count(\"2\") == 0 && i.toString().count(\"\
    4\") == 0 && i.toString().count(\"6\") == 0 && i.toString().count(\"8\") == 0)\n\
    \        {\n            result ~= i;\n        }\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = unique_digits;\n\n    assert(candidate([15L,\
    \ 33L, 1422L, 1L]) == [1L, 15L, 33L]);\n    assert(candidate([152L, 323L, 1422L,\
    \ 10L]) == []);\n    assert(candidate([12345L, 2033L, 111L, 151L]) == [111L, 151L]);\n\
    \    assert(candidate([135L, 103L, 31L]) == [31L, 135L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmvjjqfiz.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    long[] result = [];\n    foreach(long\
    \ i; x)\n    {\n        if(i == 0)\n        {\n            result ~= i;\n    \
    \        continue;\n        }\n        while(i > 0)\n        {\n            if(i\
    \ % 2 == 0)\n            {\n                break;\n            }\n          \
    \  i /= 10;\n        }\n        if(i == 0)\n        {\n            result ~= i;\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = unique_digits;\n\
    \n    assert(candidate([15L, 33L, 1422L, 1L]) == [1L, 15L, 33L]);\n    assert(candidate([152L,\
    \ 323L, 1422L, 10L]) == []);\n    assert(candidate([12345L, 2033L, 111L, 151L])\
    \ == [111L, 151L]);\n    assert(candidate([135L, 103L, 31L]) == [31L, 135L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpoxf0mbas.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    auto result = new long[];\n\
    \    foreach(i; x)\n    {\n        if(i % 2 != 0)\n        {\n            result\
    \ ~= i;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = unique_digits;\n\n    assert(candidate([15L, 33L, 1422L, 1L]) == [1L, 15L,\
    \ 33L]);\n    assert(candidate([152L, 323L, 1422L, 10L]) == []);\n    assert(candidate([12345L,\
    \ 2033L, 111L, 151L]) == [111L, 151L]);\n    assert(candidate([135L, 103L, 31L])\
    \ == [31L, 135L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg4rke7av.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    long[] result = new long[0];\n\
    \    foreach(long i; x)\n    {\n        if(i.toString().count(\"2\") == 0 && i.toString().count(\"\
    4\") == 0 && i.toString().count(\"6\") == 0 && i.toString().count(\"8\") == 0)\n\
    \        {\n            result ~= i;\n        }\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = unique_digits;\n\n    assert(candidate([15L,\
    \ 33L, 1422L, 1L]) == [1L, 15L, 33L]);\n    assert(candidate([152L, 323L, 1422L,\
    \ 10L]) == []);\n    assert(candidate([12345L, 2033L, 111L, 151L]) == [111L, 151L]);\n\
    \    assert(candidate([135L, 103L, 31L]) == [31L, 135L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmvjjqfiz.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    long[] res = new long[x.length];\n\
    \    int count = 0;\n    foreach(long i; x)\n    {\n        if(i % 2 != 0)\n \
    \       {\n            res[count] = i;\n            count++;\n        }\n    }\n\
    \    res = res[0..count];\n    res.sort;\n    return res;\n}\nunittest\n{\n  \
    \  alias candidate = unique_digits;\n\n    assert(candidate([15L, 33L, 1422L,\
    \ 1L]) == [1L, 15L, 33L]);\n    assert(candidate([152L, 323L, 1422L, 10L]) ==\
    \ []);\n    assert(candidate([12345L, 2033L, 111L, 151L]) == [111L, 151L]);\n\
    \    assert(candidate([135L, 103L, 31L]) == [31L, 135L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcokl205e.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    auto result = new long[];\n\
    \    foreach(i; x)\n    {\n        if(i.to!string.length.all!(a => a % 2 == 1))\n\
    \        {\n            result ~= i;\n        }\n    }\n    return result.sort;\n\
    }\nunittest\n{\n    alias candidate = unique_digits;\n\n    assert(candidate([15L,\
    \ 33L, 1422L, 1L]) == [1L, 15L, 33L]);\n    assert(candidate([152L, 323L, 1422L,\
    \ 10L]) == []);\n    assert(candidate([12345L, 2033L, 111L, 151L]) == [111L, 151L]);\n\
    \    assert(candidate([135L, 103L, 31L]) == [31L, 135L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1r7jvgm9.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    auto evenDigits = [](long\
    \ n)\n    {\n        while (n != 0)\n        {\n            if ((n % 10) % 2 ==\
    \ 0)\n                return true;\n            n /= 10;\n        }\n        return\
    \ false;\n    };\n    return x.filter!(a => !evenDigits(a)).sort;\n}\nunittest\n\
    {\n    alias candidate = unique_digits;\n\n    assert(candidate([15L, 33L, 1422L,\
    \ 1L]) == [1L, 15L, 33L]);\n    assert(candidate([152L, 323L, 1422L, 10L]) ==\
    \ []);\n    assert(candidate([12345L, 2033L, 111L, 151L]) == [111L, 151L]);\n\
    \    assert(candidate([135L, 103L, 31L]) == [31L, 135L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp70g6gdl1.d(13): Error: found \''n\'' when expecting \''.\''
    following long\n/tmp/tmp70g6gdl1.d(13): Error: found \'')\'' when expecting identifier
    following \''long.\''\n/tmp/tmp70g6gdl1.d(14): Error: found \''{\'' when expecting
    \'',\''\n/tmp/tmp70g6gdl1.d(15): Error: expression expected, not \''while\''\n/tmp/tmp70g6gdl1.d(16):
    Error: found \''{\'' when expecting \'',\''\n/tmp/tmp70g6gdl1.d(17): Error: expression
    expected, not \''if\''\n/tmp/tmp70g6gdl1.d(18): Error: found \''return\'' when
    expecting \'',\''\n/tmp/tmp70g6gdl1.d(18): Error: found \'';\'' when expecting
    \'',\''\n/tmp/tmp70g6gdl1.d(19): Error: found \'';\'' when expecting \'',\''\n/tmp/tmp70g6gdl1.d(20):
    Error: expression expected, not \''}\''\n/tmp/tmp70g6gdl1.d(21): Error: found
    \''return\'' when expecting \'',\''\n/tmp/tmp70g6gdl1.d(21): Error: found \'';\''
    when expecting \'',\''\n/tmp/tmp70g6gdl1.d(22): Error: expression expected, not
    \''}\''\n/tmp/tmp70g6gdl1.d(22): Error: found \'';\'' when expecting \'',\''\n/tmp/tmp70g6gdl1.d(23):
    Error: expression expected, not \''return\''\n/tmp/tmp70g6gdl1.d(23): Error: found
    \''x\'' when expecting \'',\''\n/tmp/tmp70g6gdl1.d(23): Error: found \'';\'' when
    expecting \'',\''\n/tmp/tmp70g6gdl1.d(24): Error: expression expected, not \''}\''\n/tmp/tmp70g6gdl1.d(25):
    Error: found \''unittest\'' when expecting \'',\''\n/tmp/tmp70g6gdl1.d(34): Error:
    found \''void\'' when expecting \'',\''\n/tmp/tmp70g6gdl1.d(34): Error: found
    \''{\'' when expecting \'',\''\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp70g6gdl1.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    auto result = new long[];\n\
    \    foreach(i; x)\n    {\n        if(i.digits.all!(a => a % 2 != 0))\n      \
    \      result ~= i;\n    }\n    return result.sort;\n}\nunittest\n{\n    alias\
    \ candidate = unique_digits;\n\n    assert(candidate([15L, 33L, 1422L, 1L]) ==\
    \ [1L, 15L, 33L]);\n    assert(candidate([152L, 323L, 1422L, 10L]) == []);\n \
    \   assert(candidate([12345L, 2033L, 111L, 151L]) == [111L, 151L]);\n    assert(candidate([135L,\
    \ 103L, 31L]) == [31L, 135L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp13qgb3fo.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    long[] result = new long[x.length];\n\
    \    int count = 0;\n    for (int i = 0; i < x.length; i++)\n    {\n        if\
    \ (isUnique(x[i]))\n        {\n            result[count] = x[i];\n           \
    \ count++;\n        }\n    }\n    return result[0..count];\n}\nunittest\n{\n \
    \   alias candidate = unique_digits;\n\n    assert(candidate([15L, 33L, 1422L,\
    \ 1L]) == [1L, 15L, 33L]);\n    assert(candidate([152L, 323L, 1422L, 10L]) ==\
    \ []);\n    assert(candidate([12345L, 2033L, 111L, 151L]) == [111L, 151L]);\n\
    \    assert(candidate([135L, 103L, 31L]) == [31L, 135L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1fz55nio.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    long[] result = new long[x.length];\n\
    \    int count = 0;\n    foreach(long i; x)\n    {\n        if(i % 2 != 0)\n \
    \       {\n            result[count] = i;\n            count++;\n        }\n \
    \   }\n    return result[0..count];\n}\nunittest\n{\n    alias candidate = unique_digits;\n\
    \n    assert(candidate([15L, 33L, 1422L, 1L]) == [1L, 15L, 33L]);\n    assert(candidate([152L,\
    \ 323L, 1422L, 10L]) == []);\n    assert(candidate([12345L, 2033L, 111L, 151L])\
    \ == [111L, 151L]);\n    assert(candidate([135L, 103L, 31L]) == [31L, 135L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpafq_r_ka.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    long[] result = new long[x.length];\n\
    \    int count = 0;\n    foreach(long i; x)\n    {\n        if(!hasEvenDigit(i))\n\
    \        {\n            result[count] = i;\n            count++;\n        }\n\
    \    }\n    return result[0..count];\n}\nunittest\n{\n    alias candidate = unique_digits;\n\
    \n    assert(candidate([15L, 33L, 1422L, 1L]) == [1L, 15L, 33L]);\n    assert(candidate([152L,\
    \ 323L, 1422L, 10L]) == []);\n    assert(candidate([12345L, 2033L, 111L, 151L])\
    \ == [111L, 151L]);\n    assert(candidate([135L, 103L, 31L]) == [31L, 135L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpl_e2xhbv.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    auto result = new long[];\n\
    \    foreach(i; x)\n    {\n        if(i.digits.all!(a => a % 2 != 0))\n      \
    \      result ~= i;\n    }\n    return result.sort;\n}\nunittest\n{\n    alias\
    \ candidate = unique_digits;\n\n    assert(candidate([15L, 33L, 1422L, 1L]) ==\
    \ [1L, 15L, 33L]);\n    assert(candidate([152L, 323L, 1422L, 10L]) == []);\n \
    \   assert(candidate([12345L, 2033L, 111L, 151L]) == [111L, 151L]);\n    assert(candidate([135L,\
    \ 103L, 31L]) == [31L, 135L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp13qgb3fo.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    long[] res = [];\n    foreach(long\
    \ i; x)\n    {\n        if(i.toString.length == 1)\n        {\n            res\
    \ ~= i;\n        }\n        else\n        {\n            bool is_even = false;\n\
    \            foreach(char c; i.toString)\n            {\n                if(c.to!int\
    \ % 2 == 0)\n                {\n                    is_even = true;\n        \
    \            break;\n                }\n            }\n            if(!is_even)\n\
    \            {\n                res ~= i;\n            }\n        }\n    }\n \
    \   return res.sort;\n}\nunittest\n{\n    alias candidate = unique_digits;\n\n\
    \    assert(candidate([15L, 33L, 1422L, 1L]) == [1L, 15L, 33L]);\n    assert(candidate([152L,\
    \ 323L, 1422L, 10L]) == []);\n    assert(candidate([12345L, 2033L, 111L, 151L])\
    \ == [111L, 151L]);\n    assert(candidate([135L, 103L, 31L]) == [31L, 135L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6toiwnrp.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    long[] result = [];\n    foreach(long\
    \ i; x)\n    {\n        if(i % 2 != 0)\n        {\n            result ~= i;\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = unique_digits;\n\
    \n    assert(candidate([15L, 33L, 1422L, 1L]) == [1L, 15L, 33L]);\n    assert(candidate([152L,\
    \ 323L, 1422L, 10L]) == []);\n    assert(candidate([12345L, 2033L, 111L, 151L])\
    \ == [111L, 151L]);\n    assert(candidate([135L, 103L, 31L]) == [31L, 135L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_04n0jl6.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    long[] res = new long[x.length];\n\
    \    int count = 0;\n    foreach(long i; x)\n    {\n        if(i % 2 != 0)\n \
    \       {\n            res[count] = i;\n            count++;\n        }\n    }\n\
    \    res = res[0..count];\n    sort(res);\n    return res;\n}\nunittest\n{\n \
    \   alias candidate = unique_digits;\n\n    assert(candidate([15L, 33L, 1422L,\
    \ 1L]) == [1L, 15L, 33L]);\n    assert(candidate([152L, 323L, 1422L, 10L]) ==\
    \ []);\n    assert(candidate([12345L, 2033L, 111L, 151L]) == [111L, 151L]);\n\
    \    assert(candidate([135L, 103L, 31L]) == [31L, 135L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpp16jrdi1.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    auto result = new long[];\n\
    \    foreach(i; x)\n    {\n        if(i.digits.all!(a => a % 2 != 0))\n      \
    \      result ~= i;\n    }\n    return result.sort;\n}\nunittest\n{\n    alias\
    \ candidate = unique_digits;\n\n    assert(candidate([15L, 33L, 1422L, 1L]) ==\
    \ [1L, 15L, 33L]);\n    assert(candidate([152L, 323L, 1422L, 10L]) == []);\n \
    \   assert(candidate([12345L, 2033L, 111L, 151L]) == [111L, 151L]);\n    assert(candidate([135L,\
    \ 103L, 31L]) == [31L, 135L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp13qgb3fo.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    long[] result = new long[0];\n\
    \    foreach(long i; x)\n    {\n        bool hasEven = false;\n        foreach(char\
    \ c; to!string(i))\n        {\n            if(c == '0' || c == '2' || c == '4'\
    \ || c == '6' || c == '8')\n            {\n                hasEven = true;\n \
    \               break;\n            }\n        }\n        if(!hasEven)\n     \
    \   {\n            result ~= i;\n        }\n    }\n    return sort(result);\n\
    }\nunittest\n{\n    alias candidate = unique_digits;\n\n    assert(candidate([15L,\
    \ 33L, 1422L, 1L]) == [1L, 15L, 33L]);\n    assert(candidate([152L, 323L, 1422L,\
    \ 10L]) == []);\n    assert(candidate([12345L, 2033L, 111L, 151L]) == [111L, 151L]);\n\
    \    assert(candidate([135L, 103L, 31L]) == [31L, 135L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbjwgfbbp.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    auto result = new long[];\n\
    \    foreach(i; x)\n    {\n        if(i % 2 == 0)\n            continue;\n   \
    \     auto digits = new long[];\n        auto temp = i;\n        while(temp >\
    \ 0)\n        {\n            digits ~= temp % 10;\n            temp /= 10;\n \
    \       }\n        if(digits.length == digits.unique.length)\n            result\
    \ ~= i;\n    }\n    return result.sort;\n}\nunittest\n{\n    alias candidate =\
    \ unique_digits;\n\n    assert(candidate([15L, 33L, 1422L, 1L]) == [1L, 15L, 33L]);\n\
    \    assert(candidate([152L, 323L, 1422L, 10L]) == []);\n    assert(candidate([12345L,\
    \ 2033L, 111L, 151L]) == [111L, 151L]);\n    assert(candidate([135L, 103L, 31L])\
    \ == [31L, 135L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpe2qe8wwy.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    long[] result = [];\n    foreach(long\
    \ i; x)\n    {\n        if(i % 2 == 0)\n            continue;\n        else\n\
    \            result ~= i;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = unique_digits;\n\n    assert(candidate([15L, 33L, 1422L, 1L]) ==\
    \ [1L, 15L, 33L]);\n    assert(candidate([152L, 323L, 1422L, 10L]) == []);\n \
    \   assert(candidate([12345L, 2033L, 111L, 151L]) == [111L, 151L]);\n    assert(candidate([135L,\
    \ 103L, 31L]) == [31L, 135L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpouj9ovvf.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    long[] result;\n    foreach(long\
    \ i; x)\n    {\n        if(i % 2 != 0)\n        {\n            result ~= i;\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = unique_digits;\n\
    \n    assert(candidate([15L, 33L, 1422L, 1L]) == [1L, 15L, 33L]);\n    assert(candidate([152L,\
    \ 323L, 1422L, 10L]) == []);\n    assert(candidate([12345L, 2033L, 111L, 151L])\
    \ == [111L, 151L]);\n    assert(candidate([135L, 103L, 31L]) == [31L, 135L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkpfhagyj.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    long[] result = new long[x.length];\n\
    \    int count = 0;\n    foreach(long i; x)\n    {\n        if(i % 2 != 0)\n \
    \       {\n            result[count] = i;\n            count++;\n        }\n \
    \   }\n    return result[0..count];\n}\nunittest\n{\n    alias candidate = unique_digits;\n\
    \n    assert(candidate([15L, 33L, 1422L, 1L]) == [1L, 15L, 33L]);\n    assert(candidate([152L,\
    \ 323L, 1422L, 10L]) == []);\n    assert(candidate([12345L, 2033L, 111L, 151L])\
    \ == [111L, 151L]);\n    assert(candidate([135L, 103L, 31L]) == [31L, 135L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpafq_r_ka.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    long[] result = new long[x.length];\n\
    \    int count = 0;\n    foreach(long i; x)\n    {\n        if(i % 2 != 0)\n \
    \       {\n            result[count] = i;\n            count++;\n        }\n \
    \   }\n    return result[0..count];\n}\nunittest\n{\n    alias candidate = unique_digits;\n\
    \n    assert(candidate([15L, 33L, 1422L, 1L]) == [1L, 15L, 33L]);\n    assert(candidate([152L,\
    \ 323L, 1422L, 10L]) == []);\n    assert(candidate([12345L, 2033L, 111L, 151L])\
    \ == [111L, 151L]);\n    assert(candidate([135L, 103L, 31L]) == [31L, 135L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpafq_r_ka.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    auto result = new long[];\n\
    \    foreach(i; x)\n    {\n        if(i.to!string.canFind(\"2\") || i.to!string.canFind(\"\
    4\") || i.to!string.canFind(\"6\") || i.to!string.canFind(\"8\"))\n        {\n\
    \            continue;\n        }\n        else\n        {\n            result\
    \ ~= i;\n        }\n    }\n    return result.sort;\n}\nunittest\n{\n    alias\
    \ candidate = unique_digits;\n\n    assert(candidate([15L, 33L, 1422L, 1L]) ==\
    \ [1L, 15L, 33L]);\n    assert(candidate([152L, 323L, 1422L, 10L]) == []);\n \
    \   assert(candidate([12345L, 2033L, 111L, 151L]) == [111L, 151L]);\n    assert(candidate([135L,\
    \ 103L, 31L]) == [31L, 135L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpz4j41hg_.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    long[] result = new long[0];\n\
    \    foreach(long i; x)\n    {\n        if(i.toString().count(\"2\") == 0 && i.toString().count(\"\
    4\") == 0 && i.toString().count(\"6\") == 0 && i.toString().count(\"8\") == 0)\n\
    \        {\n            result ~= i;\n        }\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = unique_digits;\n\n    assert(candidate([15L,\
    \ 33L, 1422L, 1L]) == [1L, 15L, 33L]);\n    assert(candidate([152L, 323L, 1422L,\
    \ 10L]) == []);\n    assert(candidate([12345L, 2033L, 111L, 151L]) == [111L, 151L]);\n\
    \    assert(candidate([135L, 103L, 31L]) == [31L, 135L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmvjjqfiz.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    long[] result = new long[0];\n\
    \    foreach(long i; x)\n    {\n        if(i.toString().length == 1)\n       \
    \ {\n            result ~= i;\n        }\n        else\n        {\n          \
    \  bool isEven = false;\n            foreach(char c; i.toString())\n         \
    \   {\n                if(c.to!int() % 2 == 0)\n                {\n          \
    \          isEven = true;\n                    break;\n                }\n   \
    \         }\n            if(!isEven)\n            {\n                result ~=\
    \ i;\n            }\n        }\n    }\n    return result.sort();\n}\nunittest\n\
    {\n    alias candidate = unique_digits;\n\n    assert(candidate([15L, 33L, 1422L,\
    \ 1L]) == [1L, 15L, 33L]);\n    assert(candidate([152L, 323L, 1422L, 10L]) ==\
    \ []);\n    assert(candidate([12345L, 2033L, 111L, 151L]) == [111L, 151L]);\n\
    \    assert(candidate([135L, 103L, 31L]) == [31L, 135L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpteoe5nlz.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    long[] result = new long[0];\n\
    \    foreach(long i; x)\n    {\n        if(!hasEvenDigit(i))\n        {\n    \
    \        result ~= i;\n        }\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = unique_digits;\n\n    assert(candidate([15L, 33L, 1422L,\
    \ 1L]) == [1L, 15L, 33L]);\n    assert(candidate([152L, 323L, 1422L, 10L]) ==\
    \ []);\n    assert(candidate([12345L, 2033L, 111L, 151L]) == [111L, 151L]);\n\
    \    assert(candidate([135L, 103L, 31L]) == [31L, 135L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5hune2e4.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    long[] result = new long[x.length];\n\
    \    int count = 0;\n    foreach(long num; x)\n    {\n        if(num % 2 != 0)\n\
    \        {\n            result[count] = num;\n            count++;\n        }\n\
    \    }\n    return result[0..count];\n}\nunittest\n{\n    alias candidate = unique_digits;\n\
    \n    assert(candidate([15L, 33L, 1422L, 1L]) == [1L, 15L, 33L]);\n    assert(candidate([152L,\
    \ 323L, 1422L, 10L]) == []);\n    assert(candidate([12345L, 2033L, 111L, 151L])\
    \ == [111L, 151L]);\n    assert(candidate([135L, 103L, 31L]) == [31L, 135L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpiwtj5028.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    return x.filter!(a => a.toString().chars.all!(b\
    \ => b.toString().toLong() % 2 == 1)).array;\n}\nunittest\n{\n    alias candidate\
    \ = unique_digits;\n\n    assert(candidate([15L, 33L, 1422L, 1L]) == [1L, 15L,\
    \ 33L]);\n    assert(candidate([152L, 323L, 1422L, 10L]) == []);\n    assert(candidate([12345L,\
    \ 2033L, 111L, 151L]) == [111L, 151L]);\n    assert(candidate([135L, 103L, 31L])\
    \ == [31L, 135L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpf_h3k0df.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    long[] result = new long[x.length];\n\
    \    int count = 0;\n    foreach(long i; x)\n    {\n        if(i % 2 != 0)\n \
    \       {\n            result[count] = i;\n            count++;\n        }\n \
    \   }\n    return result[0..count];\n}\nunittest\n{\n    alias candidate = unique_digits;\n\
    \n    assert(candidate([15L, 33L, 1422L, 1L]) == [1L, 15L, 33L]);\n    assert(candidate([152L,\
    \ 323L, 1422L, 10L]) == []);\n    assert(candidate([12345L, 2033L, 111L, 151L])\
    \ == [111L, 151L]);\n    assert(candidate([135L, 103L, 31L]) == [31L, 135L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpafq_r_ka.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    long[] result = new long[x.length];\n\
    \    long[] temp = new long[x.length];\n    int count = 0;\n    for (int i = 0;\
    \ i < x.length; i++)\n    {\n        long num = x[i];\n        bool isUnique =\
    \ true;\n        while (num > 0)\n        {\n            long digit = num % 10;\n\
    \            if (digit % 2 == 0)\n            {\n                isUnique = false;\n\
    \                break;\n            }\n            num /= 10;\n        }\n  \
    \      if (isUnique)\n        {\n            result[count] = x[i];\n         \
    \   count++;\n        }\n    }\n    temp = new long[count];\n    for (int i =\
    \ 0; i < count; i++)\n    {\n        temp[i] = result[i];\n    }\n    return temp;\n\
    }\nunittest\n{\n    alias candidate = unique_digits;\n\n    assert(candidate([15L,\
    \ 33L, 1422L, 1L]) == [1L, 15L, 33L]);\n    assert(candidate([152L, 323L, 1422L,\
    \ 10L]) == []);\n    assert(candidate([12345L, 2033L, 111L, 151L]) == [111L, 151L]);\n\
    \    assert(candidate([135L, 103L, 31L]) == [31L, 135L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp73f_td6q.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    auto result = new long[];\n\
    \    foreach(i; x)\n    {\n        if(i.to!string.length.filter!(a => a % 2 ==\
    \ 0).length == 0)\n        {\n            result ~= i;\n        }\n    }\n   \
    \ return result.sort;\n}\nunittest\n{\n    alias candidate = unique_digits;\n\n\
    \    assert(candidate([15L, 33L, 1422L, 1L]) == [1L, 15L, 33L]);\n    assert(candidate([152L,\
    \ 323L, 1422L, 10L]) == []);\n    assert(candidate([12345L, 2033L, 111L, 151L])\
    \ == [111L, 151L]);\n    assert(candidate([135L, 103L, 31L]) == [31L, 135L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp132vj_wp.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    auto result = new long[];\n\
    \    foreach(i; x)\n    {\n        if(!hasEvenDigit(i))\n            result ~=\
    \ i;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = unique_digits;\n\
    \n    assert(candidate([15L, 33L, 1422L, 1L]) == [1L, 15L, 33L]);\n    assert(candidate([152L,\
    \ 323L, 1422L, 10L]) == []);\n    assert(candidate([12345L, 2033L, 111L, 151L])\
    \ == [111L, 151L]);\n    assert(candidate([135L, 103L, 31L]) == [31L, 135L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpn8ik8dmp.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    long[] res = new long[x.length];\n\
    \    int count = 0;\n    foreach(long i; x)\n    {\n        if(i.to!string.countif!(a\
    \ => a.isEven))\n        {\n            res[count] = i;\n            count++;\n\
    \        }\n    }\n    return res[0..count];\n}\nunittest\n{\n    alias candidate\
    \ = unique_digits;\n\n    assert(candidate([15L, 33L, 1422L, 1L]) == [1L, 15L,\
    \ 33L]);\n    assert(candidate([152L, 323L, 1422L, 10L]) == []);\n    assert(candidate([12345L,\
    \ 2033L, 111L, 151L]) == [111L, 151L]);\n    assert(candidate([135L, 103L, 31L])\
    \ == [31L, 135L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmalpvlmu.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    long[] result = new long[0];\n\
    \    foreach(long i; x)\n    {\n        if(i.digits.all!(a => a % 2 == 1))\n \
    \       {\n            result ~= i;\n        }\n    }\n    return result.sort;\n\
    }\nunittest\n{\n    alias candidate = unique_digits;\n\n    assert(candidate([15L,\
    \ 33L, 1422L, 1L]) == [1L, 15L, 33L]);\n    assert(candidate([152L, 323L, 1422L,\
    \ 10L]) == []);\n    assert(candidate([12345L, 2033L, 111L, 151L]) == [111L, 151L]);\n\
    \    assert(candidate([135L, 103L, 31L]) == [31L, 135L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyw3rzdv0.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    long[] result = new long[0];\n\
    \    foreach(long i; x)\n    {\n        bool is_unique = true;\n        foreach(long\
    \ j; i.digits)\n        {\n            if(j % 2 == 0)\n            {\n       \
    \         is_unique = false;\n                break;\n            }\n        }\n\
    \        if(is_unique)\n        {\n            result ~= i;\n        }\n    }\n\
    \    return result.sort;\n}\nunittest\n{\n    alias candidate = unique_digits;\n\
    \n    assert(candidate([15L, 33L, 1422L, 1L]) == [1L, 15L, 33L]);\n    assert(candidate([152L,\
    \ 323L, 1422L, 10L]) == []);\n    assert(candidate([12345L, 2033L, 111L, 151L])\
    \ == [111L, 151L]);\n    assert(candidate([135L, 103L, 31L]) == [31L, 135L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpph0tv7j5.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    auto result = new long[];\n\
    \    foreach(i; x)\n    {\n        if(!isEven(i))\n        {\n            result\
    \ ~= i;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = unique_digits;\n\n    assert(candidate([15L, 33L, 1422L, 1L]) == [1L, 15L,\
    \ 33L]);\n    assert(candidate([152L, 323L, 1422L, 10L]) == []);\n    assert(candidate([12345L,\
    \ 2033L, 111L, 151L]) == [111L, 151L]);\n    assert(candidate([135L, 103L, 31L])\
    \ == [31L, 135L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4snerjxa.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    long[] result = new long[0];\n\
    \    foreach(long i; x)\n    {\n        if(!hasEvenDigit(i))\n        {\n    \
    \        result ~= i;\n        }\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = unique_digits;\n\n    assert(candidate([15L, 33L, 1422L,\
    \ 1L]) == [1L, 15L, 33L]);\n    assert(candidate([152L, 323L, 1422L, 10L]) ==\
    \ []);\n    assert(candidate([12345L, 2033L, 111L, 151L]) == [111L, 151L]);\n\
    \    assert(candidate([135L, 103L, 31L]) == [31L, 135L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5hune2e4.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    long[] result = new long[x.length];\n\
    \    int count = 0;\n    for (int i = 0; i < x.length; i++)\n    {\n        if\
    \ (x[i] % 2 != 0)\n        {\n            result[count] = x[i];\n            count++;\n\
    \        }\n    }\n    result = result[0..count];\n    result.sort;\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = unique_digits;\n\n    assert(candidate([15L,\
    \ 33L, 1422L, 1L]) == [1L, 15L, 33L]);\n    assert(candidate([152L, 323L, 1422L,\
    \ 10L]) == []);\n    assert(candidate([12345L, 2033L, 111L, 151L]) == [111L, 151L]);\n\
    \    assert(candidate([135L, 103L, 31L]) == [31L, 135L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp775g37pk.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    int[] even = [0,2,4,6,8];\n\
    \    int[] odd = [1,3,5,7,9];\n    int[] digits = [];\n    int[] result = [];\n\
    \    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n\
    \    int n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n\
    \    int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n\
    \    int x1 = 0;\n    int y = 0;\n    int z = 0;\n    int aa = 0;\n    int bb\
    \ = 0;\n    int cc = 0;\n    int dd = 0;\n    int ee = 0;\n    int ff = 0;\n \
    \   int gg = 0;\n    int hh = 0;\n    int ii = 0;\n    int jj = 0;\n    int kk\
    \ = 0;\n    int ll = 0;\n    int mm = 0;\n    int nn = 0;\n    int oo = 0;\n \
    \   int pp = 0;\n    int qq = 0;\n    int rr = 0;\n    int ss = 0;\n    int tt\
    \ = 0;\n    int uu = 0;\n    int vv = 0;\n    int ww = 0;\n    int xx = 0;\n \
    \   int yy = 0;\n    int zz = 0;\n    int aaa = 0;\n    int bbb = 0;\n    int\
    \ ccc = 0;\n    int ddd = 0;\n    int eee = 0;\n    int fff = 0;\n    int ggg\
    \ = 0;\n    int hhh = 0;\n    int iii = 0;\n    int jjj = 0;\n    int kkk = 0;\n\
    \    int lll = 0;\n    int mmm = 0;\n    int nnn = 0;\n    int ooo = 0;\n    int\
    \ ppp = 0;\n    int qqq = 0;\n\nunittest\n{\n    alias candidate = unique_digits;\n\
    \n    assert(candidate([15L, 33L, 1422L, 1L]) == [1L, 15L, 33L]);\n    assert(candidate([152L,\
    \ 323L, 1422L, 10L]) == []);\n    assert(candidate([12345L, 2033L, 111L, 151L])\
    \ == [111L, 151L]);\n    assert(candidate([135L, 103L, 31L]) == [31L, 135L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp373rt0q7.d(79): Error: found \''unittest\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp373rt0q7.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    auto result = new long[];\n\
    \    foreach(i; x)\n    {\n        if(i.to!string.length.filter!(a => a % 2 ==\
    \ 0).length == 0)\n        {\n            result ~= i;\n        }\n    }\n   \
    \ return result.sort;\n}\nunittest\n{\n    alias candidate = unique_digits;\n\n\
    \    assert(candidate([15L, 33L, 1422L, 1L]) == [1L, 15L, 33L]);\n    assert(candidate([152L,\
    \ 323L, 1422L, 10L]) == []);\n    assert(candidate([12345L, 2033L, 111L, 151L])\
    \ == [111L, 151L]);\n    assert(candidate([135L, 103L, 31L]) == [31L, 135L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp132vj_wp.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    long[] result;\n    foreach(long\
    \ i; x)\n    {\n        if(!hasEvenDigit(i))\n        {\n            result ~=\
    \ i;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = unique_digits;\n\n    assert(candidate([15L, 33L, 1422L, 1L]) == [1L, 15L,\
    \ 33L]);\n    assert(candidate([152L, 323L, 1422L, 10L]) == []);\n    assert(candidate([12345L,\
    \ 2033L, 111L, 151L]) == [111L, 151L]);\n    assert(candidate([135L, 103L, 31L])\
    \ == [31L, 135L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbe4y1lht.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    long[] result = new long[0];\n\
    \    foreach(long i; x)\n    {\n        if(i.toString().length == 1)\n       \
    \ {\n            result ~= i;\n        }\n        else\n        {\n          \
    \  bool is_even = false;\n            foreach(char c; i.toString())\n        \
    \    {\n                if(c.to!int() % 2 == 0)\n                {\n         \
    \           is_even = true;\n                    break;\n                }\n \
    \           }\n            if(!is_even)\n            {\n                result\
    \ ~= i;\n            }\n        }\n    }\n    return result.sort();\n}\nunittest\n\
    {\n    alias candidate = unique_digits;\n\n    assert(candidate([15L, 33L, 1422L,\
    \ 1L]) == [1L, 15L, 33L]);\n    assert(candidate([152L, 323L, 1422L, 10L]) ==\
    \ []);\n    assert(candidate([12345L, 2033L, 111L, 151L]) == [111L, 151L]);\n\
    \    assert(candidate([135L, 103L, 31L]) == [31L, 135L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptrxihpiq.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    auto res = new long[];\n \
    \   foreach(i; x)\n    {\n        if(i.to!string.length.filter!(a => a % 2 ==\
    \ 0).empty)\n            res ~= i;\n    }\n    return res.sort;\n}\nunittest\n\
    {\n    alias candidate = unique_digits;\n\n    assert(candidate([15L, 33L, 1422L,\
    \ 1L]) == [1L, 15L, 33L]);\n    assert(candidate([152L, 323L, 1422L, 10L]) ==\
    \ []);\n    assert(candidate([12345L, 2033L, 111L, 151L]) == [111L, 151L]);\n\
    \    assert(candidate([135L, 103L, 31L]) == [31L, 135L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpeowk2k6m.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    int[] even = new int[10];\n\
    \    even[0] = 1;\n    even[2] = 1;\n    even[4] = 1;\n    even[6] = 1;\n    even[8]\
    \ = 1;\n    int[] odd = new int[10];\n    odd[1] = 1;\n    odd[3] = 1;\n    odd[5]\
    \ = 1;\n    odd[7] = 1;\n    odd[9] = 1;\n    int[] result = new int[x.length];\n\
    \    int count = 0;\n    for (int i = 0; i < x.length; i++)\n    {\n        long\
    \ num = x[i];\n        bool isEven = false;\n        while (num > 0)\n       \
    \ {\n            int digit = (int)(num % 10);\n            if (even[digit] ==\
    \ 1)\n            {\n                isEven = true;\n                break;\n\
    \            }\n            num /= 10;\n        }\n        if (!isEven)\n    \
    \    {\n            result[count] = (int)x[i];\n            count++;\n       \
    \ }\n    }\n    long[] res = new long[count];\n    for (int i = 0; i < count;\
    \ i++)\n    {\n        res[i] = result[i];\n    }\n    sort(res);\n    return\
    \ res;\n}\nunittest\n{\n    alias candidate = unique_digits;\n\n    assert(candidate([15L,\
    \ 33L, 1422L, 1L]) == [1L, 15L, 33L]);\n    assert(candidate([152L, 323L, 1422L,\
    \ 10L]) == []);\n    assert(candidate([12345L, 2033L, 111L, 151L]) == [111L, 151L]);\n\
    \    assert(candidate([135L, 103L, 31L]) == [31L, 135L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp926eb8rp.d(33): Error: C style cast illegal, use cast(int)(num
    % 10)\n/tmp/tmp926eb8rp.d(43): Error: C style cast illegal, use cast(int)x[i]\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp926eb8rp.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    long[] result = new long[0];\n\
    \    foreach(long i; x)\n    {\n        if(i.toString().length == 1)\n       \
    \ {\n            result ~= i;\n        }\n        else\n        {\n          \
    \  bool isEven = false;\n            foreach(char c; i.toString())\n         \
    \   {\n                if(c.to!int() % 2 == 0)\n                {\n          \
    \          isEven = true;\n                    break;\n                }\n   \
    \         }\n            if(!isEven)\n            {\n                result ~=\
    \ i;\n            }\n        }\n    }\n    return result.sort();\n}\nunittest\n\
    {\n    alias candidate = unique_digits;\n\n    assert(candidate([15L, 33L, 1422L,\
    \ 1L]) == [1L, 15L, 33L]);\n    assert(candidate([152L, 323L, 1422L, 10L]) ==\
    \ []);\n    assert(candidate([12345L, 2033L, 111L, 151L]) == [111L, 151L]);\n\
    \    assert(candidate([135L, 103L, 31L]) == [31L, 135L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpteoe5nlz.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    int count = 0;\n    foreach(long\
    \ i; x)\n    {\n        if(i % 2 != 0)\n        {\n            count++;\n    \
    \    }\n    }\n    long[] result = new long[count];\n    int j = 0;\n    foreach(long\
    \ i; x)\n    {\n        if(i % 2 != 0)\n        {\n            result[j] = i;\n\
    \            j++;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = unique_digits;\n\n    assert(candidate([15L, 33L, 1422L, 1L]) ==\
    \ [1L, 15L, 33L]);\n    assert(candidate([152L, 323L, 1422L, 10L]) == []);\n \
    \   assert(candidate([12345L, 2033L, 111L, 151L]) == [111L, 151L]);\n    assert(candidate([135L,\
    \ 103L, 31L]) == [31L, 135L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprg_hzf0h.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    auto result = new long[];\n\
    \    foreach(i; x)\n    {\n        if(i.digits.all!(a => a % 2 != 0))\n      \
    \      result ~= i;\n    }\n    return result.sort;\n}\nunittest\n{\n    alias\
    \ candidate = unique_digits;\n\n    assert(candidate([15L, 33L, 1422L, 1L]) ==\
    \ [1L, 15L, 33L]);\n    assert(candidate([152L, 323L, 1422L, 10L]) == []);\n \
    \   assert(candidate([12345L, 2033L, 111L, 151L]) == [111L, 151L]);\n    assert(candidate([135L,\
    \ 103L, 31L]) == [31L, 135L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp13qgb3fo.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    auto result = new long[];\n\
    \    for (long i = 0; i < x.length; i++)\n    {\n        auto temp = x[i];\n \
    \       bool flag = true;\n        while (temp > 0)\n        {\n            if\
    \ (temp % 2 == 0)\n            {\n                flag = false;\n            \
    \    break;\n            }\n            temp /= 10;\n        }\n        if (flag)\n\
    \            result ~= x[i];\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = unique_digits;\n\n    assert(candidate([15L, 33L, 1422L, 1L]) ==\
    \ [1L, 15L, 33L]);\n    assert(candidate([152L, 323L, 1422L, 10L]) == []);\n \
    \   assert(candidate([12345L, 2033L, 111L, 151L]) == [111L, 151L]);\n    assert(candidate([135L,\
    \ 103L, 31L]) == [31L, 135L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpc8itzw_l.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    long[] result = new long[0];\n\
    \    foreach(long i; x)\n    {\n        if(i.toString().indexOf(\"2\") == -1 &&\n\
    \           i.toString().indexOf(\"4\") == -1 &&\n           i.toString().indexOf(\"\
    6\") == -1 &&\n           i.toString().indexOf(\"8\") == -1)\n        {\n    \
    \        result ~= i;\n        }\n    }\n    return result.sort();\n}\nunittest\n\
    {\n    alias candidate = unique_digits;\n\n    assert(candidate([15L, 33L, 1422L,\
    \ 1L]) == [1L, 15L, 33L]);\n    assert(candidate([152L, 323L, 1422L, 10L]) ==\
    \ []);\n    assert(candidate([12345L, 2033L, 111L, 151L]) == [111L, 151L]);\n\
    \    assert(candidate([135L, 103L, 31L]) == [31L, 135L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprop61mxk.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    long[] result = new long[x.length];\n\
    \    int count = 0;\n    foreach(long num; x)\n    {\n        if(num % 2 != 0)\n\
    \        {\n            result[count] = num;\n            count++;\n        }\n\
    \    }\n    return result[0..count];\n}\nunittest\n{\n    alias candidate = unique_digits;\n\
    \n    assert(candidate([15L, 33L, 1422L, 1L]) == [1L, 15L, 33L]);\n    assert(candidate([152L,\
    \ 323L, 1422L, 10L]) == []);\n    assert(candidate([12345L, 2033L, 111L, 151L])\
    \ == [111L, 151L]);\n    assert(candidate([135L, 103L, 31L]) == [31L, 135L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpiwtj5028.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    long[] res = new long[x.length];\n\
    \    int count = 0;\n    foreach(long i; x)\n    {\n        if(i % 2 != 0)\n \
    \       {\n            res[count] = i;\n            count++;\n        }\n    }\n\
    \    res = res[0..count];\n    sort(res);\n    return res;\n}\nunittest\n{\n \
    \   alias candidate = unique_digits;\n\n    assert(candidate([15L, 33L, 1422L,\
    \ 1L]) == [1L, 15L, 33L]);\n    assert(candidate([152L, 323L, 1422L, 10L]) ==\
    \ []);\n    assert(candidate([12345L, 2033L, 111L, 151L]) == [111L, 151L]);\n\
    \    assert(candidate([135L, 103L, 31L]) == [31L, 135L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpp16jrdi1.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    // your code here\n    long[]\
    \ res = new long[x.length];\n    int count = 0;\n    foreach(long i; x)\n    {\n\
    \        if(i % 2 != 0)\n        {\n            res[count] = i;\n            count++;\n\
    \        }\n    }\n    return res[0..count];\n}\nunittest\n{\n    alias candidate\
    \ = unique_digits;\n\n    assert(candidate([15L, 33L, 1422L, 1L]) == [1L, 15L,\
    \ 33L]);\n    assert(candidate([152L, 323L, 1422L, 10L]) == []);\n    assert(candidate([12345L,\
    \ 2033L, 111L, 151L]) == [111L, 151L]);\n    assert(candidate([135L, 103L, 31L])\
    \ == [31L, 135L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2fe_u_a4.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    long[] result = new long[0];\n\
    \    foreach(long i; x)\n    {\n        if(i % 2 != 0)\n        {\n          \
    \  result ~= i;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = unique_digits;\n\n    assert(candidate([15L, 33L, 1422L, 1L]) ==\
    \ [1L, 15L, 33L]);\n    assert(candidate([152L, 323L, 1422L, 10L]) == []);\n \
    \   assert(candidate([12345L, 2033L, 111L, 151L]) == [111L, 151L]);\n    assert(candidate([135L,\
    \ 103L, 31L]) == [31L, 135L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpglics3nv.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    long[] result = new long[0];\n\
    \    foreach(long i; x)\n    {\n        if(!hasEvenDigit(i))\n        {\n    \
    \        result ~= i;\n        }\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = unique_digits;\n\n    assert(candidate([15L, 33L, 1422L,\
    \ 1L]) == [1L, 15L, 33L]);\n    assert(candidate([152L, 323L, 1422L, 10L]) ==\
    \ []);\n    assert(candidate([12345L, 2033L, 111L, 151L]) == [111L, 151L]);\n\
    \    assert(candidate([135L, 103L, 31L]) == [31L, 135L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5hune2e4.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    auto evenDigits = [](long\
    \ n) {\n        while (n > 0) {\n            if (n % 2 == 0) {\n             \
    \   return true;\n            }\n            n /= 10;\n        }\n        return\
    \ false;\n    };\n    auto result = x.filter!(n => !evenDigits(n)).array;\n  \
    \  result.sort;\n    return result;\n}\nunittest\n{\n    alias candidate = unique_digits;\n\
    \n    assert(candidate([15L, 33L, 1422L, 1L]) == [1L, 15L, 33L]);\n    assert(candidate([152L,\
    \ 323L, 1422L, 10L]) == []);\n    assert(candidate([12345L, 2033L, 111L, 151L])\
    \ == [111L, 151L]);\n    assert(candidate([135L, 103L, 31L]) == [31L, 135L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpzi4pqwdu.d(13): Error: found \''n\'' when expecting \''.\''
    following long\n/tmp/tmpzi4pqwdu.d(13): Error: found \'')\'' when expecting identifier
    following \''long.\''\n/tmp/tmpzi4pqwdu.d(13): Error: found \''{\'' when expecting
    \'',\''\n/tmp/tmpzi4pqwdu.d(14): Error: expression expected, not \''while\''\n/tmp/tmpzi4pqwdu.d(14):
    Error: found \''{\'' when expecting \'',\''\n/tmp/tmpzi4pqwdu.d(15): Error: expression
    expected, not \''if\''\n/tmp/tmpzi4pqwdu.d(15): Error: found \''{\'' when expecting
    \'',\''\n/tmp/tmpzi4pqwdu.d(16): Error: expression expected, not \''return\''\n/tmp/tmpzi4pqwdu.d(16):
    Error: found \''true\'' when expecting \'',\''\n/tmp/tmpzi4pqwdu.d(16): Error:
    expression expected, not \'';\''\n/tmp/tmpzi4pqwdu.d(17): Error: found \''}\''
    when expecting \'',\''\n/tmp/tmpzi4pqwdu.d(18): Error: found \'';\'' when expecting
    \'',\''\n/tmp/tmpzi4pqwdu.d(19): Error: expression expected, not \''}\''\n/tmp/tmpzi4pqwdu.d(20):
    Error: found \''return\'' when expecting \'',\''\n/tmp/tmpzi4pqwdu.d(20): Error:
    found \'';\'' when expecting \'',\''\n/tmp/tmpzi4pqwdu.d(21): Error: expression
    expected, not \''}\''\n/tmp/tmpzi4pqwdu.d(21): Error: found \'';\'' when expecting
    \'',\''\n/tmp/tmpzi4pqwdu.d(22): Error: expression expected, not \''auto\''\n/tmp/tmpzi4pqwdu.d(22):
    Error: found \''result\'' when expecting \'',\''\n/tmp/tmpzi4pqwdu.d(22): Error:
    expression expected, not \''=\''\n/tmp/tmpzi4pqwdu.d(22): Error: found \''x\''
    when expecting \'',\''\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpzi4pqwdu.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    long[] result = new long[x.length];\n\
    \    int count = 0;\n    foreach(long i; x)\n    {\n        bool flag = true;\n\
    \        while(i > 0)\n        {\n            if((i % 10) % 2 == 0)\n        \
    \    {\n                flag = false;\n                break;\n            }\n\
    \            i /= 10;\n        }\n        if(flag)\n        {\n            result[count]\
    \ = i;\n            count++;\n        }\n    }\n    result = result[0..count];\n\
    \    sort(result);\n    return result;\n}\nunittest\n{\n    alias candidate =\
    \ unique_digits;\n\n    assert(candidate([15L, 33L, 1422L, 1L]) == [1L, 15L, 33L]);\n\
    \    assert(candidate([152L, 323L, 1422L, 10L]) == []);\n    assert(candidate([12345L,\
    \ 2033L, 111L, 151L]) == [111L, 151L]);\n    assert(candidate([135L, 103L, 31L])\
    \ == [31L, 135L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdcg7jqmi.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    auto result = new long[];\n\
    \    foreach(i; x)\n    {\n        auto isEven = false;\n        auto temp = i;\n\
    \        while(temp != 0)\n        {\n            if((temp % 10) % 2 == 0)\n \
    \           {\n                isEven = true;\n                break;\n      \
    \      }\n            temp /= 10;\n        }\n        if(!isEven)\n          \
    \  result ~= i;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = unique_digits;\n\n    assert(candidate([15L, 33L, 1422L, 1L]) == [1L, 15L,\
    \ 33L]);\n    assert(candidate([152L, 323L, 1422L, 10L]) == []);\n    assert(candidate([12345L,\
    \ 2033L, 111L, 151L]) == [111L, 151L]);\n    assert(candidate([135L, 103L, 31L])\
    \ == [31L, 135L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpihs8ylqs.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    // Write your code here\n\
    \    long[] result = new long[x.length];\n    int count = 0;\n    for(int i =\
    \ 0; i < x.length; i++)\n    {\n        long temp = x[i];\n        while(temp\
    \ > 0)\n        {\n            if(temp % 2 == 0)\n            {\n            \
    \    break;\n            }\n            temp /= 10;\n        }\n        if(temp\
    \ == 0)\n        {\n            result[count] = x[i];\n            count++;\n\
    \        }\n    }\n    long[] finalResult = new long[count];\n    for(int i =\
    \ 0; i < count; i++)\n    {\n        finalResult[i] = result[i];\n    }\n    sort(finalResult);\n\
    \    return finalResult;\n}\nunittest\n{\n    alias candidate = unique_digits;\n\
    \n    assert(candidate([15L, 33L, 1422L, 1L]) == [1L, 15L, 33L]);\n    assert(candidate([152L,\
    \ 323L, 1422L, 10L]) == []);\n    assert(candidate([12345L, 2033L, 111L, 151L])\
    \ == [111L, 151L]);\n    assert(candidate([135L, 103L, 31L]) == [31L, 135L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpj435z1ti.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    // your code here\n    long[]\
    \ result = [];\n    foreach(long n; x)\n    {\n        if(!hasEvenDigit(n))\n\
    \            result ~= n;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = unique_digits;\n\n    assert(candidate([15L, 33L, 1422L, 1L]) ==\
    \ [1L, 15L, 33L]);\n    assert(candidate([152L, 323L, 1422L, 10L]) == []);\n \
    \   assert(candidate([12345L, 2033L, 111L, 151L]) == [111L, 151L]);\n    assert(candidate([135L,\
    \ 103L, 31L]) == [31L, 135L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpr7qaobmh.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    long[] result = new long[x.length];\n\
    \    int count = 0;\n    foreach(long i; x)\n    {\n        if(i.toString().length\
    \ == 1)\n        {\n            result[count] = i;\n            count++;\n   \
    \     }\n        else\n        {\n            bool isEven = false;\n         \
    \   foreach(char c; i.toString())\n            {\n                if(c.to!int()\
    \ % 2 == 0)\n                {\n                    isEven = true;\n         \
    \           break;\n                }\n            }\n            if(!isEven)\n\
    \            {\n                result[count] = i;\n                count++;\n\
    \            }\n        }\n    }\n    return result[0..count].sort();\n}\nunittest\n\
    {\n    alias candidate = unique_digits;\n\n    assert(candidate([15L, 33L, 1422L,\
    \ 1L]) == [1L, 15L, 33L]);\n    assert(candidate([152L, 323L, 1422L, 10L]) ==\
    \ []);\n    assert(candidate([12345L, 2033L, 111L, 151L]) == [111L, 151L]);\n\
    \    assert(candidate([135L, 103L, 31L]) == [31L, 135L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9ah_noa5.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    long[] result = new long[x.length];\n\
    \    int count = 0;\n    foreach(num; x)\n    {\n        if(num.to!string.length.all!(a\
    \ => a.to!int % 2 != 0))\n        {\n            result[count] = num;\n      \
    \      count++;\n        }\n    }\n    return result[0..count];\n}\nunittest\n\
    {\n    alias candidate = unique_digits;\n\n    assert(candidate([15L, 33L, 1422L,\
    \ 1L]) == [1L, 15L, 33L]);\n    assert(candidate([152L, 323L, 1422L, 10L]) ==\
    \ []);\n    assert(candidate([12345L, 2033L, 111L, 151L]) == [111L, 151L]);\n\
    \    assert(candidate([135L, 103L, 31L]) == [31L, 135L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpynvmrppk.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    long[] res = new long[0];\n\
    \    foreach(long i; x)\n    {\n        if(!hasEvenDigit(i))\n        {\n    \
    \        res ~= i;\n        }\n    }\n    return res;\n}\nunittest\n{\n    alias\
    \ candidate = unique_digits;\n\n    assert(candidate([15L, 33L, 1422L, 1L]) ==\
    \ [1L, 15L, 33L]);\n    assert(candidate([152L, 323L, 1422L, 10L]) == []);\n \
    \   assert(candidate([12345L, 2033L, 111L, 151L]) == [111L, 151L]);\n    assert(candidate([135L,\
    \ 103L, 31L]) == [31L, 135L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnb4z2l54.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    int[] evens = [0,2,4,6,8];\n\
    \    int[] odds = [1,3,5,7,9];\n    long[] result = [];\n    foreach(long i; x)\n\
    \    {\n        bool even = false;\n        foreach(int j; evens)\n        {\n\
    \            if(i.toString().contains(j.toString()))\n            {\n        \
    \        even = true;\n                break;\n            }\n        }\n    \
    \    if(!even)\n        {\n            result ~= i;\n        }\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = unique_digits;\n\n    assert(candidate([15L,\
    \ 33L, 1422L, 1L]) == [1L, 15L, 33L]);\n    assert(candidate([152L, 323L, 1422L,\
    \ 10L]) == []);\n    assert(candidate([12345L, 2033L, 111L, 151L]) == [111L, 151L]);\n\
    \    assert(candidate([135L, 103L, 31L]) == [31L, 135L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphmghe5q5.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    auto result = new long[];\n\
    \    foreach(i; x)\n    {\n        if(i % 2 != 0)\n        {\n            result\
    \ ~= i;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = unique_digits;\n\n    assert(candidate([15L, 33L, 1422L, 1L]) == [1L, 15L,\
    \ 33L]);\n    assert(candidate([152L, 323L, 1422L, 10L]) == []);\n    assert(candidate([12345L,\
    \ 2033L, 111L, 151L]) == [111L, 151L]);\n    assert(candidate([135L, 103L, 31L])\
    \ == [31L, 135L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg4rke7av.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    auto res = new long[];\n \
    \   foreach(i; x)\n    {\n        if(i.to!string.length.all!(a => a % 2 == 1))\n\
    \            res ~= i;\n    }\n    return res.sort;\n}\nunittest\n{\n    alias\
    \ candidate = unique_digits;\n\n    assert(candidate([15L, 33L, 1422L, 1L]) ==\
    \ [1L, 15L, 33L]);\n    assert(candidate([152L, 323L, 1422L, 10L]) == []);\n \
    \   assert(candidate([12345L, 2033L, 111L, 151L]) == [111L, 151L]);\n    assert(candidate([135L,\
    \ 103L, 31L]) == [31L, 135L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7a_xnrqe.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    long[] result = new long[0];\n\
    \    foreach(long i; x)\n    {\n        if(i < 10)\n        {\n            result\
    \ ~= i;\n        }\n        else\n        {\n            bool isEven = false;\n\
    \            while(i > 0)\n            {\n                if(i % 2 == 0)\n   \
    \             {\n                    isEven = true;\n                    break;\n\
    \                }\n                i /= 10;\n            }\n            if(!isEven)\n\
    \            {\n                result ~= i;\n            }\n        }\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = unique_digits;\n\n\
    \    assert(candidate([15L, 33L, 1422L, 1L]) == [1L, 15L, 33L]);\n    assert(candidate([152L,\
    \ 323L, 1422L, 10L]) == []);\n    assert(candidate([12345L, 2033L, 111L, 151L])\
    \ == [111L, 151L]);\n    assert(candidate([135L, 103L, 31L]) == [31L, 135L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphvwa7rwa.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    long[] result = new long[0];\n\
    \    foreach(long i; x)\n    {\n        if(i.toString().length == 1)\n       \
    \ {\n            result ~= i;\n        }\n        else\n        {\n          \
    \  bool isEven = false;\n            foreach(char c; i.toString())\n         \
    \   {\n                if(c.to!int() % 2 == 0)\n                {\n          \
    \          isEven = true;\n                    break;\n                }\n   \
    \         }\n            if(!isEven)\n            {\n                result ~=\
    \ i;\n            }\n        }\n    }\n    return result.sort();\n}\nunittest\n\
    {\n    alias candidate = unique_digits;\n\n    assert(candidate([15L, 33L, 1422L,\
    \ 1L]) == [1L, 15L, 33L]);\n    assert(candidate([152L, 323L, 1422L, 10L]) ==\
    \ []);\n    assert(candidate([12345L, 2033L, 111L, 151L]) == [111L, 151L]);\n\
    \    assert(candidate([135L, 103L, 31L]) == [31L, 135L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpteoe5nlz.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    long[] result = new long[x.length];\n\
    \    int count = 0;\n    foreach(long i; x)\n    {\n        if(i % 2 != 0)\n \
    \       {\n            result[count] = i;\n            count++;\n        }\n \
    \   }\n    return result[0..count];\n}\nunittest\n{\n    alias candidate = unique_digits;\n\
    \n    assert(candidate([15L, 33L, 1422L, 1L]) == [1L, 15L, 33L]);\n    assert(candidate([152L,\
    \ 323L, 1422L, 10L]) == []);\n    assert(candidate([12345L, 2033L, 111L, 151L])\
    \ == [111L, 151L]);\n    assert(candidate([135L, 103L, 31L]) == [31L, 135L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpafq_r_ka.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    long[] result = new long[0];\n\
    \    foreach(long i; x)\n    {\n        if(i.digits.all!(a => a % 2 != 0))\n \
    \       {\n            result ~= i;\n        }\n    }\n    return result.sort;\n\
    }\nunittest\n{\n    alias candidate = unique_digits;\n\n    assert(candidate([15L,\
    \ 33L, 1422L, 1L]) == [1L, 15L, 33L]);\n    assert(candidate([152L, 323L, 1422L,\
    \ 10L]) == []);\n    assert(candidate([12345L, 2033L, 111L, 151L]) == [111L, 151L]);\n\
    \    assert(candidate([135L, 103L, 31L]) == [31L, 135L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpuwud5mw2.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    long[] res = new long[0];\n\
    \    foreach(long i; x)\n    {\n        if(i.digits.all!(a => a % 2 != 0))\n \
    \       {\n            res ~= i;\n        }\n    }\n    return res.sort;\n}\n\
    unittest\n{\n    alias candidate = unique_digits;\n\n    assert(candidate([15L,\
    \ 33L, 1422L, 1L]) == [1L, 15L, 33L]);\n    assert(candidate([152L, 323L, 1422L,\
    \ 10L]) == []);\n    assert(candidate([12345L, 2033L, 111L, 151L]) == [111L, 151L]);\n\
    \    assert(candidate([135L, 103L, 31L]) == [31L, 135L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7shzv7d1.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    return x.filter!(a => a.toString().chars.all!(b\
    \ => b.toString().toLong() % 2 == 1)).sort;\n}\nunittest\n{\n    alias candidate\
    \ = unique_digits;\n\n    assert(candidate([15L, 33L, 1422L, 1L]) == [1L, 15L,\
    \ 33L]);\n    assert(candidate([152L, 323L, 1422L, 10L]) == []);\n    assert(candidate([12345L,\
    \ 2033L, 111L, 151L]) == [111L, 151L]);\n    assert(candidate([135L, 103L, 31L])\
    \ == [31L, 135L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp185g8552.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    long[] result = new long[x.length];\n\
    \    int count = 0;\n    foreach(long i; x)\n    {\n        if(i.toString().length\
    \ == 1)\n        {\n            result[count] = i;\n            count++;\n   \
    \     }\n        else\n        {\n            bool isEven = false;\n         \
    \   foreach(char c; i.toString())\n            {\n                if(c.to!int()\
    \ % 2 == 0)\n                {\n                    isEven = true;\n         \
    \           break;\n                }\n            }\n            if(!isEven)\n\
    \            {\n                result[count] = i;\n                count++;\n\
    \            }\n        }\n    }\n    return result[0..count].sort();\n}\nunittest\n\
    {\n    alias candidate = unique_digits;\n\n    assert(candidate([15L, 33L, 1422L,\
    \ 1L]) == [1L, 15L, 33L]);\n    assert(candidate([152L, 323L, 1422L, 10L]) ==\
    \ []);\n    assert(candidate([12345L, 2033L, 111L, 151L]) == [111L, 151L]);\n\
    \    assert(candidate([135L, 103L, 31L]) == [31L, 135L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9ah_noa5.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    long[] result = new long[0];\n\
    \    foreach(long num; x)\n    {\n        if(!hasEvenDigit(num))\n        {\n\
    \            result ~= num;\n        }\n    }\n    return result.sort();\n}\n\
    unittest\n{\n    alias candidate = unique_digits;\n\n    assert(candidate([15L,\
    \ 33L, 1422L, 1L]) == [1L, 15L, 33L]);\n    assert(candidate([152L, 323L, 1422L,\
    \ 10L]) == []);\n    assert(candidate([12345L, 2033L, 111L, 151L]) == [111L, 151L]);\n\
    \    assert(candidate([135L, 103L, 31L]) == [31L, 135L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpecj2lz7a.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    long[] result = new long[x.length];\n\
    \    int count = 0;\n    foreach(long i; x)\n    {\n        if(!hasEvenDigit(i))\n\
    \        {\n            result[count] = i;\n            count++;\n        }\n\
    \    }\n    return result[0..count];\n}\nunittest\n{\n    alias candidate = unique_digits;\n\
    \n    assert(candidate([15L, 33L, 1422L, 1L]) == [1L, 15L, 33L]);\n    assert(candidate([152L,\
    \ 323L, 1422L, 10L]) == []);\n    assert(candidate([12345L, 2033L, 111L, 151L])\
    \ == [111L, 151L]);\n    assert(candidate([135L, 103L, 31L]) == [31L, 135L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpl_e2xhbv.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    long[] res = new long[x.length];\n\
    \    int j = 0;\n    for (int i = 0; i < x.length; i++)\n    {\n        if (x[i]\
    \ % 2 != 0)\n        {\n            res[j] = x[i];\n            j++;\n       \
    \ }\n    }\n    return res[0..j];\n}\nunittest\n{\n    alias candidate = unique_digits;\n\
    \n    assert(candidate([15L, 33L, 1422L, 1L]) == [1L, 15L, 33L]);\n    assert(candidate([152L,\
    \ 323L, 1422L, 10L]) == []);\n    assert(candidate([12345L, 2033L, 111L, 151L])\
    \ == [111L, 151L]);\n    assert(candidate([135L, 103L, 31L]) == [31L, 135L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7ftebmet.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    long[] result = new long[0];\n\
    \    foreach(long i; x)\n    {\n        bool isEven = false;\n        foreach(char\
    \ c; to!string(i))\n        {\n            if(c == '0' || c == '2' || c == '4'\
    \ || c == '6' || c == '8')\n            {\n                isEven = true;\n  \
    \              break;\n            }\n        }\n        if(!isEven)\n       \
    \ {\n            result ~= i;\n        }\n    }\n    return result.sort;\n}\n\
    unittest\n{\n    alias candidate = unique_digits;\n\n    assert(candidate([15L,\
    \ 33L, 1422L, 1L]) == [1L, 15L, 33L]);\n    assert(candidate([152L, 323L, 1422L,\
    \ 10L]) == []);\n    assert(candidate([12345L, 2033L, 111L, 151L]) == [111L, 151L]);\n\
    \    assert(candidate([135L, 103L, 31L]) == [31L, 135L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1sfkc9pa.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    long[] result = new long[x.length];\n\
    \    int count = 0;\n    foreach(long i; x)\n    {\n        if(i % 2 != 0)\n \
    \       {\n            result[count] = i;\n            count++;\n        }\n \
    \   }\n    return result[0..count];\n}\nunittest\n{\n    alias candidate = unique_digits;\n\
    \n    assert(candidate([15L, 33L, 1422L, 1L]) == [1L, 15L, 33L]);\n    assert(candidate([152L,\
    \ 323L, 1422L, 10L]) == []);\n    assert(candidate([12345L, 2033L, 111L, 151L])\
    \ == [111L, 151L]);\n    assert(candidate([135L, 103L, 31L]) == [31L, 135L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpafq_r_ka.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    auto result = new long[];\n\
    \    foreach(num; x)\n    {\n        if(num < 10)\n        {\n            result\
    \ ~= num;\n        }\n        else\n        {\n            auto digits = new long[];\n\
    \            while(num > 0)\n            {\n                digits ~= num % 10;\n\
    \                num /= 10;\n            }\n            if(all!(d => d % 2 !=\
    \ 0)(digits))\n            {\n                result ~= num;\n            }\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = unique_digits;\n\
    \n    assert(candidate([15L, 33L, 1422L, 1L]) == [1L, 15L, 33L]);\n    assert(candidate([152L,\
    \ 323L, 1422L, 10L]) == []);\n    assert(candidate([12345L, 2033L, 111L, 151L])\
    \ == [111L, 151L]);\n    assert(candidate([135L, 103L, 31L]) == [31L, 135L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjtab6bjp.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781
- exit_code: 1
  program: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
    \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned\
    \ list should be sorted in increasing order.\n    \n    For example:\n       \
    \     \n*/\nlong[] unique_digits(long[] x) \n{\n    return x.filter!(a => a.toString().all!(b\
    \ => b % 2 != 0)).sort;\n}\nunittest\n{\n    alias candidate = unique_digits;\n\
    \n    assert(candidate([15L, 33L, 1422L, 1L]) == [1L, 15L, 33L]);\n    assert(candidate([152L,\
    \ 323L, 1422L, 10L]) == []);\n    assert(candidate([12345L, 2033L, 111L, 151L])\
    \ == [111L, 151L]);\n    assert(candidate([135L, 103L, 31L]) == [31L, 135L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpd4nb71de.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977781

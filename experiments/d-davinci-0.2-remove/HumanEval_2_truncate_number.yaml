name: HumanEval_2_truncate_number
language: d
prompt: "import std.typecons;\nimport std.math;\n/*\n Given a positive floating point\
  \ number, it can be decomposed into\n    and integer part (largest integer smaller\
  \ than given number) and decimals\n    (leftover part always smaller than 1).\n\n\
  \    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
  \ number) \n"
tests: "unittest\n{\n    alias candidate = truncate_number;\n\n    assert(candidate(3.5)\
  \ == 0.5);\n    assert(candidate(1.25) == 0.25);\n    assert(candidate(123.0) ==\
  \ 0.0);\n}\nvoid main(){}"
completions: ["{\n    return number - cast(int)number;\n}", "{\n    return number\
    \ - cast(int)number;\n}", "{\n    return number - cast(int)number;\n}", "{\n \
    \   return number - cast(int)number;\n}", "{\n    return number - cast(int)number;\n\
    }", "{\n    return number - cast(int)number;\n}", "{\n    return number - cast(int)number;\n\
    }", "{\n    return number - cast(int)number;\n}", "{\n    return number - cast(int)number;\n\
    }", "{\n    return number - cast(int)number;\n}", "{\n    return number - cast(int)number;\n\
    }", "{\n    return number - cast(int)number;\n}", "{\n    return number - cast(int)number;\n\
    }", "{\n    return number - cast(int)number;\n}", "{\n    return number - cast(int)number;\n\
    }", "{\n    return number - cast(int)number;\n}", "{\n    return number - cast(int)number;\n\
    }", "{\n    return number - cast(int)number;\n}", "{\n    float int_part;\n  \
    \  return modf(number, &int_part);\n}", "{\n    float result;\n    int integer_part;\n\
    \    float decimal_part;\n    integer_part = cast(int)number;\n    decimal_part\
    \ = number - integer_part;\n    result = decimal_part;\n    return result;\n}",
  "{\n    float int_part;\n    return modf(number, &int_part);\n}", "{\n    return\
    \ number - cast(int)number;\n}", "{\n    return number - cast(int)number;\n}",
  "{\n    return number - cast(int)number;\n}", "{\n    return number - cast(int)number;\n\
    }", "{\n    return number - cast(int)number;\n}", "{\n    return number - cast(int)number;\n\
    }", "{\n    return number - cast(int)number;\n}", "{\n    float result;\n    result\
    \ = number - cast(int)number;\n    return result;\n}", "{\n    return number -\
    \ cast(int)number;\n}", "{\n    float int_part;\n    float dec_part;\n    dec_part\
    \ = modf(number, &int_part);\n    return dec_part;\n}", "{\n    return number\
    \ - cast(int)number;\n}", "{\n    return number - cast(int)number;\n}", "{\n \
    \   float int_part;\n    return modf(number, &int_part);\n}", "{\n    return number\
    \ - cast(int)number;\n}", "{\n    return number - cast(int)number;\n}", "{\n \
    \   return number - cast(int)number;\n}", "{\n    float int_part;\n    return\
    \ modf(number, &int_part);\n}", "{\n    return number - cast(int)number;\n}",
  "{\n    return number - cast(int)number;\n}", "{\n    return number - cast(int)number;\n\
    }", "{\n    return number - cast(int)number;\n}", "{\n    return number - cast(int)number;\n\
    }", "{\n    return number - cast(int)number;\n}", "{\n    return number - cast(int)number;\n\
    }", "{\n    float int_part;\n    return modf(number, &int_part);\n}", "{\n   \
    \ return number - cast(int)number;\n}", "{\n    return number - cast(int)number;\n\
    }", "{\n    return number - cast(int)number;\n}", "{\n    return number - cast(int)number;\n\
    }", "{\n    return number - cast(int)number;\n}", "{\n    return number - cast(int)number;\n\
    }", "{\n    float result;\n    float int_part;\n    float dec_part;\n    float\
    \ fractional_part;\n    float fractional_part_2;\n    float fractional_part_3;\n\
    \    float fractional_part_4;\n    float fractional_part_5;\n    float fractional_part_6;\n\
    \    float fractional_part_7;\n    float fractional_part_8;\n    float fractional_part_9;\n\
    \    float fractional_part_10;\n    float fractional_part_11;\n    float fractional_part_12;\n\
    \    float fractional_part_13;\n    float fractional_part_14;\n    float fractional_part_15;\n\
    \    float fractional_part_16;\n    float fractional_part_17;\n    float fractional_part_18;\n\
    \    float fractional_part_19;\n    float fractional_part_20;\n    float fractional_part_21;\n\
    \    float fractional_part_22;\n    float fractional_part_23;\n    float fractional_part_24;\n\
    \    float fractional_part_25;\n    float fractional_part_26;\n    float fractional_part_27;\n\
    \    float fractional_part_28;\n    float fractional_part_29;\n    float fractional_part_30;\n\
    \    float fractional_part_31;\n    float fractional_part_32;\n    float fractional_part_33;\n\
    \    float fractional_part_34;\n    float fractional_part_35;\n    float fractional_part_36;\n\
    \    float fractional_part_37;\n    float fractional_part_38;\n    float fractional_part_39;\n\
    \    float fractional_part_40;\n    float fractional_part_41;\n    float fractional_part_42;\n\
    \    float fractional_part_43;\n    float fractional_part_44;\n    float fractional_part_45;\n\
    \    float fractional_part_46;\n    float fractional_part_47;\n    float fractional_part_48;\n\
    \    float fractional_part_49;\n    float", "{\n    float int_part = cast(float)\
    \ cast(int) number;\n    return number - int_part;\n}", "{\n    return number\
    \ - cast(int)number;\n}", "{\n    return number - cast(int)number;\n}", "{\n \
    \   float integer_part = cast(float) cast(int) number;\n    return number - integer_part;\n\
    }", "{\n    return number - cast(int)number;\n}", "{\n    return number - cast(int)number;\n\
    }", "{\n    return number - cast(int)number;\n}", "{\n    return number - cast(int)number;\n\
    }", "{\n    return number - cast(int)number;\n}", "{\n    return number - cast(int)number;\n\
    }", "{\n    return number - cast(int)number;\n}", "{\n    return number - cast(int)number;\n\
    }", "{\n    return number - cast(int)number;\n}", "{\n    return number - cast(int)number;\n\
    }", "{\n    return number - cast(int)number;\n}", "{\n    int integer_part = cast(int)number;\n\
    \    float decimal_part = number - integer_part;\n    return decimal_part;\n}",
  "{\n    return number - cast(int)number;\n}", "{\n    return number - cast(int)number;\n\
    }", "{\n    return number - cast(int)number;\n}", "{\n    return number - cast(int)number;\n\
    }", "{\n    float int_part;\n    return modf(number, &int_part);\n}", "{\n   \
    \ return number - cast(int)number;\n}", "{\n    float int_part;\n    return modf(number,\
    \ &int_part);\n}", "{\n    return number - cast(int)number;\n}", "{\n    return\
    \ number - cast(int)number;\n}", "{\n    return number - cast(int)number;\n}",
  "{\n    return number - cast(int)number;\n}", "{\n    return number - cast(int)number;\n\
    }", "{\n    return number - cast(int)number;\n}", "{\n    return number - cast(int)number;\n\
    }", "{\n    return number - cast(int)number;\n}", "{\n    return number - cast(int)number;\n\
    }", "{\n    return number - cast(int)number;\n}", "{\n    return number - cast(int)number;\n\
    }", "{\n    int integer_part = cast(int)number;\n    float decimal_part = number\
    \ - integer_part;\n    return decimal_part;\n}", "{\n    return number - cast(int)number;\n\
    }", "{\n    return number - cast(int)number;\n}", "{\n    return number - cast(int)number;\n\
    }", "{\n    return number - cast(int)number;\n}", "{\n    return number - cast(int)number;\n\
    }", "{\n    return number - cast(int)number;\n}", "{\n    return number - cast(int)number;\n\
    }", "{\n    return number - cast(int)number;\n}", "{\n    return number - cast(int)number;\n\
    }", "{\n    return number - cast(int)number;\n}", "{\n    return number - cast(int)number;\n\
    }", "{\n    return number - cast(int)number;\n}", "{\n    return number - cast(int)number;\n\
    }", "{\n    return number - cast(int)number;\n}", "{\n    return number - cast(int)number;\n\
    }", "{\n    return number - cast(int)number;\n}", "{\n    return number - cast(int)number;\n\
    }", "{\n    return number - cast(int)number;\n}", "{\n    return number - cast(int)number;\n\
    }", "{\n    return number - cast(int)number;\n}", "{\n    return number - cast(int)number;\n\
    }", "{\n    return number - cast(int)number;\n}", "{\n    return number - cast(int)number;\n\
    }", "{\n    return number - cast(int)number;\n}", "{\n    return number - cast(int)number;\n\
    }", "{\n    float integer_part;\n    float decimal_part;\n    float result;\n\
    \    float sign;\n    float abs_number;\n    float abs_result;\n    float abs_integer_part;\n\
    \    float abs_decimal_part;\n    float abs_result;\n    float abs_integer_part;\n\
    \    float abs_decimal_part;\n    float abs_result;\n    float abs_integer_part;\n\
    \    float abs_decimal_part;\n    float abs_result;\n    float abs_integer_part;\n\
    \    float abs_decimal_part;\n    float abs_result;\n    float abs_integer_part;\n\
    \    float abs_decimal_part;\n    float abs_result;\n    float abs_integer_part;\n\
    \    float abs_decimal_part;\n    float abs_result;\n    float abs_integer_part;\n\
    \    float abs_decimal_part;\n    float abs_result;\n    float abs_integer_part;\n\
    \    float abs_decimal_part;\n    float abs_result;\n    float abs_integer_part;\n\
    \    float abs_decimal_part;\n    float abs_result;\n    float abs_integer_part;\n\
    \    float abs_decimal_part;\n    float abs_result;\n    float abs_integer_part;\n\
    \    float abs_decimal_part;\n    float abs_result;\n    float abs_integer_part;\n\
    \    float abs_decimal_part;\n    float abs_result;\n    float abs_integer_part;\n\
    \    float abs_decimal_part;\n    float abs_result;\n    float abs_integer_part;\n\
    \    float abs_decimal_part;\n    float abs_result;\n    float abs_integer_part;\n\
    \    float abs_decimal_part;\n    float abs_result;\n    float abs_integer_part;\n\
    \    float abs_decimal_part;\n    float abs_result;\n    float abs_integer_part;\n\
    \    float abs_decimal_part;\n    float abs_result;\n    float abs_integer_part;\n\
    \    float abs_decimal_part;\n    float abs_result;\n    float abs", "{\n    return\
    \ number - cast(int)number;\n}", "{\n    return number - cast(int)number;\n}",
  "{\n    return number - cast(int)number;\n}", "{\n    return number - cast(int)number;\n\
    }", "{\n    return number - cast(int)number;\n}", "{\n    return number - cast(int)number;\n\
    }", "{\n    return number - cast(int)number;\n}", "{\n    return number - cast(int)number;\n\
    }", "{\n    return number - cast(int)number;\n}", "{\n    return number - cast(int)number;\n\
    }", "{\n    return number - cast(int)number;\n}", "{\n    return number - cast(int)number;\n\
    }", "{\n    return number - cast(int)number;\n}", "{\n    return number - cast(int)number;\n\
    }", "{\n    float integer_part = cast(int)number;\n    float decimal_part = number\
    \ - integer_part;\n    return decimal_part;\n}", "{\n    return number - cast(int)number;\n\
    }", "{\n    return number - cast(int)number;\n}", "{\n    return number - cast(int)number;\n\
    }", "{\n    return number - cast(int)number;\n}", "{\n    return number - cast(int)number;\n\
    }", "{\n    return number - cast(int)number;\n}", "{\n    float int_part;\n  \
    \  return modf(number, &int_part);\n}", "{\n    return number - cast(int)number;\n\
    }", "{\n    return number - cast(int)number;\n}", "{\n    return number - cast(int)number;\n\
    }", "{\n    return number - cast(int)number;\n}", "{\n    return number - cast(int)number;\n\
    }", "{\n    return number - cast(int)number;\n}", "{\n    return number - cast(int)number;\n\
    }", "{\n    return number - cast(int)number;\n}", "{\n    return number - cast(int)number;\n\
    }", "{\n    return number - cast(int)number;\n}", "{\n    return number - cast(int)number;\n\
    }", "{\n    return number - cast(int)number;\n}", "{\n    return number - cast(int)number;\n\
    }", "{\n    return number - cast(int)number;\n}", "{\n    return number - cast(int)number;\n\
    }", "{\n    return number - cast(int)number;\n}", "{\n    return number - cast(int)number;\n\
    }", "{\n    return number - cast(int)number;\n}", "{\n    return number - cast(int)number;\n\
    }", "{\n    return number - cast(int)number;\n}", "{\n    float int_part;\n  \
    \  return modf(number, &int_part);\n}", "{\n    return number - cast(int)number;\n\
    }", "{\n    return number - cast(int)number;\n}", "{\n    return number - cast(int)number;\n\
    }", "{\n    return number - cast(int)number;\n}", "{\n    return number - cast(int)number;\n\
    }", "{\n    return number - cast(int)number;\n}", "{\n    return number - cast(int)number;\n\
    }", "{\n    return number - cast(int)number;\n}", "{\n    return number - cast(int)number;\n\
    }", "{\n    return number - cast(int)number;\n}", "{\n    return number - cast(int)number;\n\
    }", "{\n    return number - cast(int)number;\n}", "{\n    return number - cast(int)number;\n\
    }", "{\n    return number - cast(int)number;\n}", "{\n    return number - cast(int)number;\n\
    }", "{\n    return number - cast(int)number;\n}", "{\n    return number - cast(int)number;\n\
    }", "{\n    return number - cast(int)number;\n}", "{\n    return number - cast(int)number;\n\
    }", "{\n    return number - cast(int)number;\n}", "{\n    return number - cast(int)number;\n\
    }", "{\n    return number - cast(int)number;\n}", "{\n    return number - cast(int)number;\n\
    }", "{\n    float integer_part = cast(float) cast(int) number;\n    return number\
    \ - integer_part;\n}", "{\n    int integer_part = cast(int)number;\n    float\
    \ decimal_part = number - integer_part;\n    return decimal_part;\n}", "{\n  \
    \  float integer_part;\n    float decimal_part;\n    float result;\n    float\
    \ temp;\n    float temp2;\n    float temp3;\n    float temp4;\n    float temp5;\n\
    \    float temp6;\n    float temp7;\n    float temp8;\n    float temp9;\n    float\
    \ temp10;\n    float temp11;\n    float temp12;\n    float temp13;\n    float\
    \ temp14;\n    float temp15;\n    float temp16;\n    float temp17;\n    float\
    \ temp18;\n    float temp19;\n    float temp20;\n    float temp21;\n    float\
    \ temp22;\n    float temp23;\n    float temp24;\n    float temp25;\n    float\
    \ temp26;\n    float temp27;\n    float temp28;\n    float temp29;\n    float\
    \ temp30;\n    float temp31;\n    float temp32;\n    float temp33;\n    float\
    \ temp34;\n    float temp35;\n    float temp36;\n    float temp37;\n    float\
    \ temp38;\n    float temp39;\n    float temp40;\n    float temp41;\n    float\
    \ temp42;\n    float temp43;\n    float temp44;\n    float temp45;\n    float\
    \ temp46;\n    float temp47;\n    float temp48;\n    float temp49;\n    float\
    \ temp50;\n    float temp51;\n    float temp52;\n    float temp53;\n    float\
    \ temp54;\n    float temp55;\n    float temp56;\n    float temp57;\n    float\
    \ temp58;\n    float temp59;\n    float temp60;\n    float temp61;\n    float\
    \ temp62;\n    float temp63;\n    float temp64;\n    float temp65;\n    float\
    \ temp66;\n    float temp67;\n    float temp68;\n    float temp69;\n    float\
    \ temp70;\n    float temp71;\n    float temp72;\n    float temp73;\n    float\
    \ temp74;\n    float temp75;\n    float temp76;\n    float temp77;\n    float\
    \ temp78;\n    float temp79;\n    float temp80;\n    float temp81;\n    float\
    \ temp82;", "{\n    return number - cast(int)number;\n}", "{\n    return number\
    \ - cast(int)number;\n}", "{\n    return number - cast(int)number;\n}", "{\n \
    \   return number - cast(int)number;\n}", "{\n    return number - cast(int)number;\n\
    }", "{\n    return number - cast(int)number;\n}", "{\n    return number - cast(int)number;\n\
    }", "{\n    return number - cast(int)number;\n}", "{\n    return number - cast(int)number;\n\
    }", "{\n    return number - cast(int)number;\n}", "{\n    return number - cast(int)number;\n\
    }", "{\n    return number - cast(int)number;\n}", "{\n    return number - cast(int)number;\n\
    }", "{\n    return number - cast(int)number;\n}", "{\n    return number - cast(int)number;\n\
    }", "{\n    return number - cast(int)number;\n}", "{\n    return number - cast(int)number;\n\
    }"]
stop_tokens:
- "\n\n"
- "\nvoid"
- "\nbool"
- "\nint"

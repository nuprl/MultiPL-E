language: d
name: HumanEval_19_sort_numbers
results:
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    int[] nums = new int[numbers.length];\n\
    \    int i = 0;\n    foreach(n; numbers.split(\" \"))\n    {\n        switch(n)\n\
    \        {\n            case \"zero\": nums[i] = 0; break;\n            case \"\
    one\": nums[i] = 1; break;\n            case \"two\": nums[i] = 2; break;\n  \
    \          case \"three\": nums[i] = 3; break;\n            case \"four\": nums[i]\
    \ = 4; break;\n            case \"five\": nums[i] = 5; break;\n            case\
    \ \"six\": nums[i] = 6; break;\n            case \"seven\": nums[i] = 7; break;\n\
    \            case \"eight\": nums[i] = 8; break;\n            case \"nine\": nums[i]\
    \ = 9; break;\n        }\n        i++;\n    }\n    nums.sort();\n    string ret\
    \ = \"\";\n    foreach(n; nums)\n    {\n        switch(n)\n        {\n       \
    \     case 0: ret ~= \"zero \"; break;\n            case 1: ret ~= \"one \"; break;\n\
    \            case 2: ret ~= \"two \"; break;\n            case 3: ret ~= \"three\
    \ \"; break;\n            case 4: ret ~= \"four \"; break;\n            case 5:\
    \ ret ~= \"five \"; break;\n            case 6: ret ~= \"six \"; break;\n    \
    \        case 7: ret ~= \"seven \"; break;\n            case 8: ret ~= \"eight\
    \ \"; break;\n            case 9: ret ~= \"nine \"; break;\n        }\n    }\n\
    \    return ret.trimRight();\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"\
    three\");\n    assert(candidate(\"three five nine\") == \"three five nine\");\n\
    \    assert(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\");\n    assert(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp3zp4mfsd.d(13): Error: no property `split` for type `string`

    /tmp/tmp3zp4mfsd.d(30): Error: no property `sort` for type `int[]`

    /tmp/tmp3zp4mfsd.d(34): Error: `switch` statement without a `default`; use `final
    switch` or add `default: assert(0);` or add `default: break;`

    /tmp/tmp3zp4mfsd.d(48): Error: no property `trimRight` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3zp4mfsd.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    int[] nums = new int[numbers.length];\n\
    \    int i = 0;\n    foreach(string num; numbers.split(\" \"))\n    {\n      \
    \  switch(num)\n        {\n            case \"zero\":\n                nums[i]\
    \ = 0;\n                break;\n            case \"one\":\n                nums[i]\
    \ = 1;\n                break;\n            case \"two\":\n                nums[i]\
    \ = 2;\n                break;\n            case \"three\":\n                nums[i]\
    \ = 3;\n                break;\n            case \"four\":\n                nums[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums[i]\
    \ = 9;\n                break;\n        }\n        i++;\n    }\n    nums.sort();\n\
    \    string ret = \"\";\n    foreach(int num; nums)\n    {\n        switch(num)\n\
    \        {\n            case 0:\n                ret ~= \"zero \";\n         \
    \       break;\n            case 1:\n                ret ~= \"one \";\n      \
    \          break;\n            case 2:\n                ret ~= \"two \";\n   \
    \             break;\n            case 3:\n                ret ~= \"three \";\n\
    \                break;\n            case 4:\n                ret ~= \"four \"\
    ;\n                break;\n            case 5:\n                ret ~= \"five\
    \ \";\n                break;\n            case 6:\n                ret ~= \"\
    six \";\n                break;\n            case 7:\n                ret ~= \"\
    seven \";\n                break;\n            case 8:\n                ret ~=\
    \ \"eight \";\n                break;\n            case 9:\n                ret\
    \ ~= \"nine \";\n                break;\n        }\n    }\n    return ret.stripRight;\n\
    }\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpd7or_z1u.d(13): Error: no property `split` for type `string`

    /tmp/tmpd7or_z1u.d(50): Error: no property `sort` for type `int[]`

    /tmp/tmpd7or_z1u.d(54): Error: `switch` statement without a `default`; use `final
    switch` or add `default: assert(0);` or add `default: break;`

    /tmp/tmpd7or_z1u.d(88): Error: no property `stripRight` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpd7or_z1u.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split(\" \");\n\
    \    int[] nums_int = new int[nums.length];\n    foreach(i, n; nums)\n    {\n\
    \        switch(n)\n        {\n            case \"zero\": nums_int[i] = 0; break;\n\
    \            case \"one\": nums_int[i] = 1; break;\n            case \"two\":\
    \ nums_int[i] = 2; break;\n            case \"three\": nums_int[i] = 3; break;\n\
    \            case \"four\": nums_int[i] = 4; break;\n            case \"five\"\
    : nums_int[i] = 5; break;\n            case \"six\": nums_int[i] = 6; break;\n\
    \            case \"seven\": nums_int[i] = 7; break;\n            case \"eight\"\
    : nums_int[i] = 8; break;\n            case \"nine\": nums_int[i] = 9; break;\n\
    \        }\n    }\n    nums_int.sort;\n    foreach(i, n; nums_int)\n    {\n  \
    \      switch(n)\n        {\n            case 0: nums[i] = \"zero\"; break;\n\
    \            case 1: nums[i] = \"one\"; break;\n            case 2: nums[i] =\
    \ \"two\"; break;\n            case 3: nums[i] = \"three\"; break;\n         \
    \   case 4: nums[i] = \"four\"; break;\n            case 5: nums[i] = \"five\"\
    ; break;\n            case 6: nums[i] = \"six\"; break;\n            case 7: nums[i]\
    \ = \"seven\"; break;\n            case 8: nums[i] = \"eight\"; break;\n     \
    \       case 9: nums[i] = \"nine\"; break;\n        }\n    }\n    return nums.join(\"\
    \ \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpc8_6cagd.d(11): Error: no property `split` for type `string`

    /tmp/tmpc8_6cagd.d(15): Error: `switch` statement without a `default`; use `final
    switch` or add `default: assert(0);` or add `default: break;`

    /tmp/tmpc8_6cagd.d(29): Error: no property `sort` for type `int[]`

    /tmp/tmpc8_6cagd.d(32): Error: `switch` statement without a `default`; use `final
    switch` or add `default: assert(0);` or add `default: break;`

    /tmp/tmpc8_6cagd.d(46): Error: no property `join` for type `string[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpc8_6cagd.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split(\" \");\n\
    \    int[] nums_int = new int[nums.length];\n    foreach(i, num; nums)\n    {\n\
    \        switch(num)\n        {\n            case \"zero\":\n                nums_int[i]\
    \ = 0;\n                break;\n            case \"one\":\n                nums_int[i]\
    \ = 1;\n                break;\n            case \"two\":\n                nums_int[i]\
    \ = 2;\n                break;\n            case \"three\":\n                nums_int[i]\
    \ = 3;\n                break;\n            case \"four\":\n                nums_int[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort();\n    foreach(i,\
    \ num; nums_int)\n    {\n        switch(num)\n        {\n            case 0:\n\
    \                nums[i] = \"zero\";\n                break;\n            case\
    \ 1:\n                nums[i] = \"one\";\n                break;\n           \
    \ case 2:\n                nums[i] = \"two\";\n                break;\n      \
    \      case 3:\n                nums[i] = \"three\";\n                break;\n\
    \            case 4:\n                nums[i] = \"four\";\n                break;\n\
    \            case 5:\n                nums[i] = \"five\";\n                break;\n\
    \            case 6:\n                nums[i] = \"six\";\n                break;\n\
    \            case 7:\n                nums[i] = \"seven\";\n                break;\n\
    \            case 8:\n                nums[i] = \"eight\";\n                break;\n\
    \            case 9:\n                nums[i] = \"nine\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpzj6gcnh4.d(87): Error: Implicit string concatenation is deprecated,
    use "nine\x0aunittest\x0a{\x0a    alias candidate = sort_numbers;\x0a\x0a    assert(candidate("
    ~ ") == " instead

    /tmp/tmpzj6gcnh4.d(87): Error: Implicit string concatenation is deprecated, use
    ") == " ~ ");\x0a    assert(candidate(" instead

    /tmp/tmpzj6gcnh4.d(88): Error: found `three` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(88): Error: found `three` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(89): Error: found `three` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(89): Error: found `nine` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(89): Error: found `three` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(89): Error: found `nine` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(90): Error: found `five` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(90): Error: found `four` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(90): Error: found `'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split(\" \");\n\
    \    int[] nums_int = new int[nums.length];\n    foreach(int i, string num; nums)\n\
    \    {\n        switch(num)\n        {\n            case \"zero\":\n         \
    \       nums_int[i] = 0;\n                break;\n            case \"one\":\n\
    \                nums_int[i] = 1;\n                break;\n            case \"\
    two\":\n                nums_int[i] = 2;\n                break;\n           \
    \ case \"three\":\n                nums_int[i] = 3;\n                break;\n\
    \            case \"four\":\n                nums_int[i] = 4;\n              \
    \  break;\n            case \"five\":\n                nums_int[i] = 5;\n    \
    \            break;\n            case \"six\":\n                nums_int[i] =\
    \ 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort();\n    foreach(int\
    \ i, int num; nums_int)\n    {\n        switch(num)\n        {\n            case\
    \ 0:\n                nums[i] = \"zero\";\n                break;\n          \
    \  case 1:\n                nums[i] = \"one\";\n                break;\n     \
    \       case 2:\n                nums[i] = \"two\";\n                break;\n\
    \            case 3:\n                nums[i] = \"three\";\n                break;\n\
    \            case 4:\n                nums[i] = \"four\";\n                break;\n\
    \            case 5:\n                nums[i] = \"five\";\n                break;\n\
    \            case 6:\n                nums[i] = \"six\";\n                break;\n\
    \            case 7:\n                nums[i] = \"seven\";\n                break;\n\
    \            case 8:\n                nums[i] = \"eight\";\n                break;\n\
    \            case 9:\n                nums[i\nunittest\n{\n    alias candidate\
    \ = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp5qnryr00.d(83): Error: found `unittest` when expecting `,`

    /tmp/tmp5qnryr00.d(93): Error: found `void` when expecting `,`

    /tmp/tmp5qnryr00.d(93): Error: found `{` when expecting `,`

    /tmp/tmp5qnryr00.d(93): Error: expression expected, not `}`

    /tmp/tmp5qnryr00.d(93): Error: found `End of File` when expecting `,`

    /tmp/tmp5qnryr00.d(93): Error: found `End of File` when expecting `]`

    /tmp/tmp5qnryr00.d(93): Error: found `End of File` when expecting `;` following
    statement

    /tmp/tmp5qnryr00.d(93): Error: found `End of File` when expecting `}` following
    compound statement

    /tmp/tmp5qnryr00.d(93): Error: found `End of File` when expecting `}` following
    compound statement

    /tmp/tmp5qnryr00.d(93): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5qnryr00.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split(\" \");\n\
    \    int[] nums_int = new int[nums.length];\n    foreach(int i, string num; nums)\n\
    \    {\n        switch(num)\n        {\n            case \"zero\":\n         \
    \       nums_int[i] = 0;\n                break;\n            case \"one\":\n\
    \                nums_int[i] = 1;\n                break;\n            case \"\
    two\":\n                nums_int[i] = 2;\n                break;\n           \
    \ case \"three\":\n                nums_int[i] = 3;\n                break;\n\
    \            case \"four\":\n                nums_int[i] = 4;\n              \
    \  break;\n            case \"five\":\n                nums_int[i] = 5;\n    \
    \            break;\n            case \"six\":\n                nums_int[i] =\
    \ 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort();\n    foreach(int\
    \ i, int num; nums_int)\n    {\n        switch(num)\n        {\n            case\
    \ 0:\n                nums[i] = \"zero\";\n                break;\n          \
    \  case 1:\n                nums[i] = \"one\";\n                break;\n     \
    \       case 2:\n                nums[i] = \"two\";\n                break;\n\
    \            case 3:\n                nums[i] = \"three\";\n                break;\n\
    \            case 4:\n                nums[i] = \"four\";\n                break;\n\
    \            case 5:\n                nums[i] = \"five\";\n                break;\n\
    \            case 6:\n                nums[i] = \"six\";\n                break;\n\
    \            case 7:\n                nums[i] = \"seven\";\n                break;\n\
    \            case 8:\n                nums[i] = \"eight\";\n                break;\n\
    \            case 9:\n                nums[i\nunittest\n{\n    alias candidate\
    \ = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp5qnryr00.d(83): Error: found `unittest` when expecting `,`

    /tmp/tmp5qnryr00.d(93): Error: found `void` when expecting `,`

    /tmp/tmp5qnryr00.d(93): Error: found `{` when expecting `,`

    /tmp/tmp5qnryr00.d(93): Error: expression expected, not `}`

    /tmp/tmp5qnryr00.d(93): Error: found `End of File` when expecting `,`

    /tmp/tmp5qnryr00.d(93): Error: found `End of File` when expecting `]`

    /tmp/tmp5qnryr00.d(93): Error: found `End of File` when expecting `;` following
    statement

    /tmp/tmp5qnryr00.d(93): Error: found `End of File` when expecting `}` following
    compound statement

    /tmp/tmp5qnryr00.d(93): Error: found `End of File` when expecting `}` following
    compound statement

    /tmp/tmp5qnryr00.d(93): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5qnryr00.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split(\" \");\n\
    \    int[] nums_int = new int[nums.length];\n    foreach(i, num; nums)\n    {\n\
    \        switch(num)\n        {\n            case \"zero\":\n                nums_int[i]\
    \ = 0;\n                break;\n            case \"one\":\n                nums_int[i]\
    \ = 1;\n                break;\n            case \"two\":\n                nums_int[i]\
    \ = 2;\n                break;\n            case \"three\":\n                nums_int[i]\
    \ = 3;\n                break;\n            case \"four\":\n                nums_int[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort();\n    foreach(i,\
    \ num; nums_int)\n    {\n        switch(num)\n        {\n            case 0:\n\
    \                nums[i] = \"zero\";\n                break;\n            case\
    \ 1:\n                nums[i] = \"one\";\n                break;\n           \
    \ case 2:\n                nums[i] = \"two\";\n                break;\n      \
    \      case 3:\n                nums[i] = \"three\";\n                break;\n\
    \            case 4:\n                nums[i] = \"four\";\n                break;\n\
    \            case 5:\n                nums[i] = \"five\";\n                break;\n\
    \            case 6:\n                nums[i] = \"six\";\n                break;\n\
    \            case 7:\n                nums[i] = \"seven\";\n                break;\n\
    \            case 8:\n                nums[i] = \"eight\";\n                break;\n\
    \            case 9:\n                nums[i] = \"nine\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpzj6gcnh4.d(87): Error: Implicit string concatenation is deprecated,
    use "nine\x0aunittest\x0a{\x0a    alias candidate = sort_numbers;\x0a\x0a    assert(candidate("
    ~ ") == " instead

    /tmp/tmpzj6gcnh4.d(87): Error: Implicit string concatenation is deprecated, use
    ") == " ~ ");\x0a    assert(candidate(" instead

    /tmp/tmpzj6gcnh4.d(88): Error: found `three` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(88): Error: found `three` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(89): Error: found `three` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(89): Error: found `nine` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(89): Error: found `three` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(89): Error: found `nine` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(90): Error: found `five` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(90): Error: found `four` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(90): Error: found `'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split(\" \");\n\
    \    int[] nums_int = new int[nums.length];\n    foreach(i, num; nums)\n    {\n\
    \        switch(num)\n        {\n            case \"zero\":\n                nums_int[i]\
    \ = 0;\n                break;\n            case \"one\":\n                nums_int[i]\
    \ = 1;\n                break;\n            case \"two\":\n                nums_int[i]\
    \ = 2;\n                break;\n            case \"three\":\n                nums_int[i]\
    \ = 3;\n                break;\n            case \"four\":\n                nums_int[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort!(\"a < b\"\
    );\n    foreach(i, num; nums_int)\n    {\n        switch(num)\n        {\n   \
    \         case 0:\n                nums[i] = \"zero\";\n                break;\n\
    \            case 1:\n                nums[i] = \"one\";\n                break;\n\
    \            case 2:\n                nums[i] = \"two\";\n                break;\n\
    \            case 3:\n                nums[i] = \"three\";\n                break;\n\
    \            case 4:\n                nums[i] = \"four\";\n                break;\n\
    \            case 5:\n                nums[i] = \"five\";\n                break;\n\
    \            case 6:\n                nums[i] = \"six\";\n                break;\n\
    \            case 7:\n                nums[i] = \"seven\";\n                break;\n\
    \            case 8:\n                nums[i] = \"eight\";\n                break;\n\
    \            case 9:\n                nums[\nunittest\n{\n    alias candidate\
    \ = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp13rfkz4b.d(83): Error: expression expected, not `unittest`

    /tmp/tmp13rfkz4b.d(84): Error: found `{` when expecting `,`

    /tmp/tmp13rfkz4b.d(85): Error: expression expected, not `alias`

    /tmp/tmp13rfkz4b.d(85): Error: found `candidate` when expecting `,`

    /tmp/tmp13rfkz4b.d(85): Error: expression expected, not `=`

    /tmp/tmp13rfkz4b.d(85): Error: found `sort_numbers` when expecting `,`

    /tmp/tmp13rfkz4b.d(85): Error: expression expected, not `;`

    /tmp/tmp13rfkz4b.d(87): Error: found `assert` when expecting `,`

    /tmp/tmp13rfkz4b.d(87): Error: found `;` when expecting `,`

    /tmp/tmp13rfkz4b.d(88): Error: found `;` when expecting `,`

    /tmp/tmp13rfkz4b.d(89): Error: found `;` when expecting `,`

    /tmp/tmp13rfkz4b.d(90): Error: found `;` when expecting `,`

    /tmp/tmp13rfkz4b.d(91): Error: found `;` when expecting `,`

    /tmp/tmp13rfkz4b.d(92): Error: expression expected, not `}`

    /tmp/tmp13rfkz4b.d(93): Error: found `void` when expecting `,`

    /tmp/tmp13rfkz4b.d(93): Error: found `{` when expecting `,`

    /tmp/tmp13rfkz4b.d(93): Er'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    int[] nums = numbers.split(\" \").map!(a\
    \ => to!int(a)).sort;\n    return nums.map!(a => to!string(a)).join(\" \");\n\
    }\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp35lxo99h.d(11): Error: no property `split` for type `string`

    /tmp/tmp35lxo99h.d(12): Error: no property `map` for type `int[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp35lxo99h.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split(\" \");\n\
    \    int[] nums_int = new int[nums.length];\n    foreach(i, num; nums)\n    {\n\
    \        switch(num)\n        {\n            case \"zero\":\n                nums_int[i]\
    \ = 0;\n                break;\n            case \"one\":\n                nums_int[i]\
    \ = 1;\n                break;\n            case \"two\":\n                nums_int[i]\
    \ = 2;\n                break;\n            case \"three\":\n                nums_int[i]\
    \ = 3;\n                break;\n            case \"four\":\n                nums_int[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort();\n    foreach(i,\
    \ num; nums_int)\n    {\n        switch(num)\n        {\n            case 0:\n\
    \                nums[i] = \"zero\";\n                break;\n            case\
    \ 1:\n                nums[i] = \"one\";\n                break;\n           \
    \ case 2:\n                nums[i] = \"two\";\n                break;\n      \
    \      case 3:\n                nums[i] = \"three\";\n                break;\n\
    \            case 4:\n                nums[i] = \"four\";\n                break;\n\
    \            case 5:\n                nums[i] = \"five\";\n                break;\n\
    \            case 6:\n                nums[i] = \"six\";\n                break;\n\
    \            case 7:\n                nums[i] = \"seven\";\n                break;\n\
    \            case 8:\n                nums[i] = \"eight\";\n                break;\n\
    \            case 9:\n                nums[i] = \"nine\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpzj6gcnh4.d(87): Error: Implicit string concatenation is deprecated,
    use "nine\x0aunittest\x0a{\x0a    alias candidate = sort_numbers;\x0a\x0a    assert(candidate("
    ~ ") == " instead

    /tmp/tmpzj6gcnh4.d(87): Error: Implicit string concatenation is deprecated, use
    ") == " ~ ");\x0a    assert(candidate(" instead

    /tmp/tmpzj6gcnh4.d(88): Error: found `three` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(88): Error: found `three` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(89): Error: found `three` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(89): Error: found `nine` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(89): Error: found `three` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(89): Error: found `nine` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(90): Error: found `five` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(90): Error: found `four` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(90): Error: found `'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split(\" \");\n\
    \    int[] nums_int = new int[nums.length];\n    for (int i = 0; i < nums.length;\
    \ i++)\n    {\n        switch (nums[i])\n        {\n            case \"zero\"\
    :\n                nums_int[i] = 0;\n                break;\n            case\
    \ \"one\":\n                nums_int[i] = 1;\n                break;\n       \
    \     case \"two\":\n                nums_int[i] = 2;\n                break;\n\
    \            case \"three\":\n                nums_int[i] = 3;\n             \
    \   break;\n            case \"four\":\n                nums_int[i] = 4;\n   \
    \             break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort();\n    string[]\
    \ nums_str = new string[nums_int.length];\n    for (int i = 0; i < nums_int.length;\
    \ i++)\n    {\n        switch (nums_int[i])\n        {\n            case 0:\n\
    \                nums_str[i] = \"zero\";\n                break;\n           \
    \ case 1:\n                nums_str[i] = \"one\";\n                break;\n  \
    \          case 2:\n                nums_str[i] = \"two\";\n                break;\n\
    \            case 3:\n                nums_str[i] = \"three\";\n             \
    \   break;\n            case 4:\n                nums_str[i] = \"four\";\n   \
    \             break;\n            case 5:\n                nums_str[i] = \"five\"\
    ;\n                break;\n            case 6:\n                nums_str[i] =\
    \ \"six\";\n                break;\n           \nunittest\n{\n    alias candidate\
    \ = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp7gpi5z3q.d(77): Error: found `unittest` instead of statement

    /tmp/tmp7gpi5z3q.d(87): Error: found `End of File` when expecting `}` following
    compound statement

    /tmp/tmp7gpi5z3q.d(87): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7gpi5z3q.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split;\n    int[]\
    \ nums_int = new int[nums.length];\n    foreach(i, n; nums)\n    {\n        switch(n)\n\
    \        {\n            case \"zero\":\n                nums_int[i] = 0;\n   \
    \             break;\n            case \"one\":\n                nums_int[i] =\
    \ 1;\n                break;\n            case \"two\":\n                nums_int[i]\
    \ = 2;\n                break;\n            case \"three\":\n                nums_int[i]\
    \ = 3;\n                break;\n            case \"four\":\n                nums_int[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort;\n    foreach(i,\
    \ n; nums_int)\n    {\n        switch(n)\n        {\n            case 0:\n   \
    \             nums[i] = \"zero\";\n                break;\n            case 1:\n\
    \                nums[i] = \"one\";\n                break;\n            case\
    \ 2:\n                nums[i] = \"two\";\n                break;\n           \
    \ case 3:\n                nums[i] = \"three\";\n                break;\n    \
    \        case 4:\n                nums[i] = \"four\";\n                break;\n\
    \            case 5:\n                nums[i] = \"five\";\n                break;\n\
    \            case 6:\n                nums[i] = \"six\";\n                break;\n\
    \            case 7:\n                nums[i] = \"seven\";\n                break;\n\
    \            case 8:\n                nums[i] = \"eight\";\n                break;\n\
    \            case 9:\n                nums[i] = \"nine\";\n\nunittest\n{\n   \
    \ alias candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n  \
    \  assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"three five\
    \ nine\") == \"three five nine\");\n    assert(candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpfs_m6p94.d(84): Error: found `unittest` instead of statement

    /tmp/tmpfs_m6p94.d(94): Error: found `End of File` when expecting `}` following
    compound statement

    /tmp/tmpfs_m6p94.d(94): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfs_m6p94.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split(\" \");\n\
    \    int[] nums_int = new int[nums.length];\n    for (int i = 0; i < nums.length;\
    \ i++) {\n        switch (nums[i]) {\n            case \"zero\": nums_int[i] =\
    \ 0; break;\n            case \"one\": nums_int[i] = 1; break;\n            case\
    \ \"two\": nums_int[i] = 2; break;\n            case \"three\": nums_int[i] =\
    \ 3; break;\n            case \"four\": nums_int[i] = 4; break;\n            case\
    \ \"five\": nums_int[i] = 5; break;\n            case \"six\": nums_int[i] = 6;\
    \ break;\n            case \"seven\": nums_int[i] = 7; break;\n            case\
    \ \"eight\": nums_int[i] = 8; break;\n            case \"nine\": nums_int[i] =\
    \ 9; break;\n        }\n    }\n    nums_int.sort();\n    for (int i = 0; i < nums.length;\
    \ i++) {\n        switch (nums_int[i]) {\n            case 0: nums[i] = \"zero\"\
    ; break;\n            case 1: nums[i] = \"one\"; break;\n            case 2: nums[i]\
    \ = \"two\"; break;\n            case 3: nums[i] = \"three\"; break;\n       \
    \     case 4: nums[i] = \"four\"; break;\n            case 5: nums[i] = \"five\"\
    ; break;\n            case 6: nums[i] = \"six\"; break;\n            case 7: nums[i]\
    \ = \"seven\"; break;\n            case 8: nums[i] = \"eight\"; break;\n     \
    \       case 9: nums[i] = \"nine\"; break;\n        }\n    }\n    return nums.join(\"\
    \ \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpcrr95dox.d(11): Error: no property `split` for type `string`

    /tmp/tmpcrr95dox.d(14): Error: `switch` statement without a `default`; use `final
    switch` or add `default: assert(0);` or add `default: break;`

    /tmp/tmpcrr95dox.d(27): Error: no property `sort` for type `int[]`

    /tmp/tmpcrr95dox.d(29): Error: `switch` statement without a `default`; use `final
    switch` or add `default: assert(0);` or add `default: break;`

    /tmp/tmpcrr95dox.d(42): Error: no property `join` for type `string[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcrr95dox.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split;\n    string[]\
    \ nums_sorted = nums.sort;\n    string result = \"\";\n    foreach(string num;\
    \ nums_sorted)\n    {\n        result ~= num ~ \" \";\n    }\n    return result.stripRight;\n\
    }\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpoa07gd1x.d(11): Error: no property `split` for type `string`

    /tmp/tmpoa07gd1x.d(12): Error: no property `sort` for type `string[]`

    /tmp/tmpoa07gd1x.d(18): Error: no property `stripRight` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpoa07gd1x.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split(\" \");\n\
    \    int[] num_ints = new int[nums.length];\n    foreach(i, num; nums)\n    {\n\
    \        switch(num)\n        {\n            case \"zero\":\n                num_ints[i]\
    \ = 0;\n                break;\n            case \"one\":\n                num_ints[i]\
    \ = 1;\n                break;\n            case \"two\":\n                num_ints[i]\
    \ = 2;\n                break;\n            case \"three\":\n                num_ints[i]\
    \ = 3;\n                break;\n            case \"four\":\n                num_ints[i]\
    \ = 4;\n                break;\n            case \"five\":\n                num_ints[i]\
    \ = 5;\n                break;\n            case \"six\":\n                num_ints[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                num_ints[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                num_ints[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                num_ints[i]\
    \ = 9;\n                break;\n        }\n    }\n    num_ints.sort;\n    string[]\
    \ num_strings = new string[nums.length];\n    foreach(i, num; num_ints)\n    {\n\
    \        switch(num)\n        {\n            case 0:\n                num_strings[i]\
    \ = \"zero\";\n                break;\n            case 1:\n                num_strings[i]\
    \ = \"one\";\n                break;\n            case 2:\n                num_strings[i]\
    \ = \"two\";\n                break;\n            case 3:\n                num_strings[i]\
    \ = \"three\";\n                break;\n            case 4:\n                num_strings[i]\
    \ = \"four\";\n                break;\n            case 5:\n                num_strings[i]\
    \ = \"five\";\n                break;\n            case 6:\n                num_strings[i]\
    \ = \"six\";\n                break;\n            case 7:\n                num_strings[i]\
    \ = \"seven\";\n                break;\n            case 8:\n                num_strings[i]\
    \ = \"eight\";\n                break;\n            case\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp95uzxn18.d(83): Error: expression expected, not `unittest`

    /tmp/tmp95uzxn18.d(84): Error: found `{` when expecting `:`

    /tmp/tmp95uzxn18.d(93): Error: found `End of File` when expecting `}` following
    compound statement

    /tmp/tmp95uzxn18.d(93): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp95uzxn18.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split(\" \");\n\
    \    int[] nums_int = new int[nums.length];\n    foreach(int i, string num; nums)\n\
    \    {\n        switch(num)\n        {\n            case \"zero\":\n         \
    \       nums_int[i] = 0;\n                break;\n            case \"one\":\n\
    \                nums_int[i] = 1;\n                break;\n            case \"\
    two\":\n                nums_int[i] = 2;\n                break;\n           \
    \ case \"three\":\n                nums_int[i] = 3;\n                break;\n\
    \            case \"four\":\n                nums_int[i] = 4;\n              \
    \  break;\n            case \"five\":\n                nums_int[i] = 5;\n    \
    \            break;\n            case \"six\":\n                nums_int[i] =\
    \ 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort();\n    foreach(int\
    \ i, int num; nums_int)\n    {\n        switch(num)\n        {\n            case\
    \ 0:\n                nums[i] = \"zero\";\n                break;\n          \
    \  case 1:\n                nums[i] = \"one\";\n                break;\n     \
    \       case 2:\n                nums[i] = \"two\";\n                break;\n\
    \            case 3:\n                nums[i] = \"three\";\n                break;\n\
    \            case 4:\n                nums[i] = \"four\";\n                break;\n\
    \            case 5:\n                nums[i] = \"five\";\n                break;\n\
    \            case 6:\n                nums[i] = \"six\";\n                break;\n\
    \            case 7:\n                nums[i] = \"seven\";\n                break;\n\
    \            case 8:\n                nums[i] = \"eight\";\n                break;\n\
    \            case 9:\n                nums[i\nunittest\n{\n    alias candidate\
    \ = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp5qnryr00.d(83): Error: found `unittest` when expecting `,`

    /tmp/tmp5qnryr00.d(93): Error: found `void` when expecting `,`

    /tmp/tmp5qnryr00.d(93): Error: found `{` when expecting `,`

    /tmp/tmp5qnryr00.d(93): Error: expression expected, not `}`

    /tmp/tmp5qnryr00.d(93): Error: found `End of File` when expecting `,`

    /tmp/tmp5qnryr00.d(93): Error: found `End of File` when expecting `]`

    /tmp/tmp5qnryr00.d(93): Error: found `End of File` when expecting `;` following
    statement

    /tmp/tmp5qnryr00.d(93): Error: found `End of File` when expecting `}` following
    compound statement

    /tmp/tmp5qnryr00.d(93): Error: found `End of File` when expecting `}` following
    compound statement

    /tmp/tmp5qnryr00.d(93): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5qnryr00.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split(\" \");\n\
    \    string[] nums_sorted = sort(nums);\n    return join(nums_sorted, \" \");\n\
    }\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpw4ldv8ci.d(11): Error: no property `split` for type `string`

    /tmp/tmpw4ldv8ci.d(12): Error: undefined identifier `sort`, did you mean function
    `sqrt`?

    /tmp/tmpw4ldv8ci.d(13): Error: undefined identifier `join`, did you mean function
    `main`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpw4ldv8ci.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split(\" \");\n\
    \    int[] nums_int = new int[nums.length];\n    foreach(i, num; nums)\n    {\n\
    \        switch(num)\n        {\n            case \"zero\": nums_int[i] = 0; break;\n\
    \            case \"one\": nums_int[i] = 1; break;\n            case \"two\":\
    \ nums_int[i] = 2; break;\n            case \"three\": nums_int[i] = 3; break;\n\
    \            case \"four\": nums_int[i] = 4; break;\n            case \"five\"\
    : nums_int[i] = 5; break;\n            case \"six\": nums_int[i] = 6; break;\n\
    \            case \"seven\": nums_int[i] = 7; break;\n            case \"eight\"\
    : nums_int[i] = 8; break;\n            case \"nine\": nums_int[i] = 9; break;\n\
    \        }\n    }\n    nums_int.sort;\n    string[] nums_str = new string[nums.length];\n\
    \    foreach(i, num; nums_int)\n    {\n        switch(num)\n        {\n      \
    \      case 0: nums_str[i] = \"zero\"; break;\n            case 1: nums_str[i]\
    \ = \"one\"; break;\n            case 2: nums_str[i] = \"two\"; break;\n     \
    \       case 3: nums_str[i] = \"three\"; break;\n            case 4: nums_str[i]\
    \ = \"four\"; break;\n            case 5: nums_str[i] = \"five\"; break;\n   \
    \         case 6: nums_str[i] = \"six\"; break;\n            case 7: nums_str[i]\
    \ = \"seven\"; break;\n            case 8: nums_str[i] = \"eight\"; break;\n \
    \           case 9: nums_str[i] = \"nine\"; break;\n        }\n    }\n    return\
    \ nums_str.join(\" \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"\
    three\");\n    assert(candidate(\"three five nine\") == \"three five nine\");\n\
    \    assert(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\");\n    assert(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmppvpoa7u0.d(11): Error: no property `split` for type `string`

    /tmp/tmppvpoa7u0.d(15): Error: `switch` statement without a `default`; use `final
    switch` or add `default: assert(0);` or add `default: break;`

    /tmp/tmppvpoa7u0.d(29): Error: no property `sort` for type `int[]`

    /tmp/tmppvpoa7u0.d(33): Error: `switch` statement without a `default`; use `final
    switch` or add `default: assert(0);` or add `default: break;`

    /tmp/tmppvpoa7u0.d(47): Error: no property `join` for type `string[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmppvpoa7u0.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split(\" \");\n\
    \    int[] nums_int = new int[nums.length];\n    foreach(i, num; nums)\n    {\n\
    \        switch(num)\n        {\n            case \"zero\":\n                nums_int[i]\
    \ = 0;\n                break;\n            case \"one\":\n                nums_int[i]\
    \ = 1;\n                break;\n            case \"two\":\n                nums_int[i]\
    \ = 2;\n                break;\n            case \"three\":\n                nums_int[i]\
    \ = 3;\n                break;\n            case \"four\":\n                nums_int[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort;\n    foreach(i,\
    \ num; nums_int)\n    {\n        switch(num)\n        {\n            case 0:\n\
    \                nums[i] = \"zero\";\n                break;\n            case\
    \ 1:\n                nums[i] = \"one\";\n                break;\n           \
    \ case 2:\n                nums[i] = \"two\";\n                break;\n      \
    \      case 3:\n                nums[i] = \"three\";\n                break;\n\
    \            case 4:\n                nums[i] = \"four\";\n                break;\n\
    \            case 5:\n                nums[i] = \"five\";\n                break;\n\
    \            case 6:\n                nums[i] = \"six\";\n                break;\n\
    \            case 7:\n                nums[i] = \"seven\";\n                break;\n\
    \            case 8:\n                nums[i] = \"eight\";\n                break;\n\
    \            case 9:\n                nums[i] = \"nine\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpsxj9dx32.d(87): Error: Implicit string concatenation is deprecated,
    use "nine\x0aunittest\x0a{\x0a    alias candidate = sort_numbers;\x0a\x0a    assert(candidate("
    ~ ") == " instead

    /tmp/tmpsxj9dx32.d(87): Error: Implicit string concatenation is deprecated, use
    ") == " ~ ");\x0a    assert(candidate(" instead

    /tmp/tmpsxj9dx32.d(88): Error: found `three` when expecting `;` following statement

    /tmp/tmpsxj9dx32.d(88): Error: found `three` when expecting `;` following statement

    /tmp/tmpsxj9dx32.d(89): Error: found `three` when expecting `;` following statement

    /tmp/tmpsxj9dx32.d(89): Error: found `nine` when expecting `;` following statement

    /tmp/tmpsxj9dx32.d(89): Error: found `three` when expecting `;` following statement

    /tmp/tmpsxj9dx32.d(89): Error: found `nine` when expecting `;` following statement

    /tmp/tmpsxj9dx32.d(90): Error: found `five` when expecting `;` following statement

    /tmp/tmpsxj9dx32.d(90): Error: found `four` when expecting `;` following statement

    /tmp/tmpsxj9dx32.d(90): Error: found `'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split(\" \");\n\
    \    string[] nums_sorted = nums.dup;\n    nums_sorted.sort!((a, b) => a.compare(b));\n\
    \    string result = \"\";\n    foreach(i, num; nums)\n    {\n        foreach(j,\
    \ num_sorted; nums_sorted)\n        {\n            if(num == num_sorted)\n   \
    \         {\n                result ~= j.to!string;\n                break;\n\
    \            }\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp77usel86.d(11): Error: no property `split` for type `string`

    /tmp/tmp77usel86.d(13): Error: no property `sort` for type `string[]`

    /tmp/tmp77usel86.d(21): Error: no property `to` for type `ulong`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp77usel86.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    // Split the string into an array of words\n\
    \    string[] words = numbers.split(\" \");\n    // Create a map of words to numbers\n\
    \    int[string] word_to_num = [\"zero\":0, \"one\":1, \"two\":2, \"three\":3,\
    \ \"four\":4, \"five\":5, \"six\":6, \"seven\":7, \"eight\":8, \"nine\":9];\n\
    \    // Create a map of numbers to words\n    string[int] num_to_word = [\"zero\"\
    :0, \"one\":1, \"two\":2, \"three\":3, \"four\":4, \"five\":5, \"six\":6, \"seven\"\
    :7, \"eight\":8, \"nine\":9];\n    // Create an array of numbers\n    int[] nums\
    \ = new int[words.length];\n    // Populate the array of numbers\n    foreach(i,\
    \ word; words)\n    {\n        nums[i] = word_to_num[word];\n    }\n    // Sort\
    \ the array of numbers\n    nums.sort();\n    // Create an array of words\n  \
    \  string[] sorted_words = new string[words.length];\n    // Populate the array\
    \ of words\n    foreach(i, num; nums)\n    {\n        sorted_words[i] = num_to_word[num];\n\
    \    }\n    // Return the sorted array of words\n    return sorted_words.join(\"\
    \ \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpapcrvfrf.d(12): Error: no property `split` for type `string`

    /tmp/tmpapcrvfrf.d(16): Error: cannot implicitly convert expression `["zero":0,
    "one":1, "two":2, "three":3, "four":4, "five":5, "six":6, "seven":7, "eight":8,
    "nine":9]` of type `int[string]` to `string[int]`

    /tmp/tmpapcrvfrf.d(25): Error: no property `sort` for type `int[]`

    /tmp/tmpapcrvfrf.d(34): Error: no property `join` for type `string[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpapcrvfrf.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    import std.algorithm : sort;\n    import\
    \ std.conv : to;\n    import std.range : iota;\n    import std.array : array;\n\
    \    import std.string : split;\n    import std.typecons : tuple;\n    import\
    \ std.math : min;\n    import std.typecons : tuple;\n    import std.typecons :\
    \ Tuple;\n    import std.typecons : tupleof;\n    import std.typecons : tuple;\n\
    \    import std.typecons : tuple;\n    import std.typecons : tuple;\n    import\
    \ std.typecons : tuple;\n    import std.typecons : tuple;\n    import std.typecons\
    \ : tuple;\n    import std.typecons : tuple;\n    import std.typecons : tuple;\n\
    \    import std.typecons : tuple;\n    import std.typecons : tuple;\n    import\
    \ std.typecons : tuple;\n    import std.typecons : tuple;\n    import std.typecons\
    \ : tuple;\n    import std.typecons : tuple;\n    import std.typecons : tuple;\n\
    \    import std.typecons : tuple;\n    import std.typecons : tuple;\n    import\
    \ std.typecons : tuple;\n    import std.typecons : tuple;\n    import std.typecons\
    \ : tuple;\n    import std.typecons : tuple;\n    import std.typecons : tuple;\n\
    \    import std.typecons : tuple;\n    import std.typecons : tuple;\n    import\
    \ std.typecons : tuple;\n    import std.typecons : tuple;\n    import std.typecons\
    \ : tuple;\n    import std.typecons : tuple;\n    import std.typecons : tuple;\n\
    \    import std.typecons : tuple;\n    import std.typecons : tuple;\n    import\
    \ std.typecons : tuple;\n    import std.typecons : tuple;\n    import std.typecons\
    \ : tuple;\n    import std.typecons : tuple;\n    import std.typecons : tuple;\n\
    \    import std.typecons : tuple;\n    import std.typecons : tuple;\n    import\
    \ std.typecons : tuple;\n    import std.typecons : tuple;\n    import std.typecons\
    \ : tuple;\n   \nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpf73tgyuf.d(63): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpf73tgyuf.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split(\" \");\n\
    \    string[] nums_sorted = nums.sort!((a, b) => a.compare(b));\n    return nums_sorted.join(\"\
    \ \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp3z9d3zcd.d(11): Error: no property `split` for type `string`

    /tmp/tmp3z9d3zcd.d(12): Error: no property `sort` for type `string[]`

    /tmp/tmp3z9d3zcd.d(13): Error: no property `join` for type `string[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3z9d3zcd.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split(\" \");\n\
    \    int[] nums_int = new int[nums.length];\n    foreach(i, num; nums)\n    {\n\
    \        switch(num)\n        {\n            case \"zero\":\n                nums_int[i]\
    \ = 0;\n                break;\n            case \"one\":\n                nums_int[i]\
    \ = 1;\n                break;\n            case \"two\":\n                nums_int[i]\
    \ = 2;\n                break;\n            case \"three\":\n                nums_int[i]\
    \ = 3;\n                break;\n            case \"four\":\n                nums_int[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort();\n    foreach(i,\
    \ num; nums_int)\n    {\n        switch(num)\n        {\n            case 0:\n\
    \                nums[i] = \"zero\";\n                break;\n            case\
    \ 1:\n                nums[i] = \"one\";\n                break;\n           \
    \ case 2:\n                nums[i] = \"two\";\n                break;\n      \
    \      case 3:\n                nums[i] = \"three\";\n                break;\n\
    \            case 4:\n                nums[i] = \"four\";\n                break;\n\
    \            case 5:\n                nums[i] = \"five\";\n                break;\n\
    \            case 6:\n                nums[i] = \"six\";\n                break;\n\
    \            case 7:\n                nums[i] = \"seven\";\n                break;\n\
    \            case 8:\n                nums[i] = \"eight\";\n                break;\n\
    \            case 9:\n                nums[i] = \"nine\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpzj6gcnh4.d(87): Error: Implicit string concatenation is deprecated,
    use "nine\x0aunittest\x0a{\x0a    alias candidate = sort_numbers;\x0a\x0a    assert(candidate("
    ~ ") == " instead

    /tmp/tmpzj6gcnh4.d(87): Error: Implicit string concatenation is deprecated, use
    ") == " ~ ");\x0a    assert(candidate(" instead

    /tmp/tmpzj6gcnh4.d(88): Error: found `three` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(88): Error: found `three` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(89): Error: found `three` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(89): Error: found `nine` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(89): Error: found `three` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(89): Error: found `nine` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(90): Error: found `five` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(90): Error: found `four` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(90): Error: found `'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split(\" \");\n\
    \    string[] nums_sorted = nums.dup;\n    nums_sorted.sort!((a, b) => a.compare(b));\n\
    \    return nums_sorted.join(\" \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"\
    three\");\n    assert(candidate(\"three five nine\") == \"three five nine\");\n\
    \    assert(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\");\n    assert(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4sql963s.d(11): Error: no property `split` for type `string`

    /tmp/tmp4sql963s.d(13): Error: no property `sort` for type `string[]`

    /tmp/tmp4sql963s.d(14): Error: no property `join` for type `string[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4sql963s.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    import std.algorithm;\n    import std.conv;\n\
    \    import std.range;\n    import std.string;\n    import std.typecons;\n   \
    \ import std.math;\n    import std.array;\n    import std.stdio;\n    import std.traits;\n\
    \    import std.typecons;\n    import std.math;\n    import std.array;\n    import\
    \ std.stdio;\n    import std.traits;\n    import std.typecons;\n    import std.math;\n\
    \    import std.array;\n    import std.stdio;\n    import std.traits;\n    import\
    \ std.typecons;\n    import std.math;\n    import std.array;\n    import std.stdio;\n\
    \    import std.traits;\n    import std.typecons;\n    import std.math;\n    import\
    \ std.array;\n    import std.stdio;\n    import std.traits;\n    import std.typecons;\n\
    \    import std.math;\n    import std.array;\n    import std.stdio;\n    import\
    \ std.traits;\n    import std.typecons;\n    import std.math;\n    import std.array;\n\
    \    import std.stdio;\n    import std.traits;\n    import std.typecons;\n   \
    \ import std.math;\n    import std.array;\n    import std.stdio;\n    import std.traits;\n\
    \    import std.typecons;\n    import std.math;\n    import std.array;\n    import\
    \ std.stdio;\n    import std.traits;\n    import std.typecons;\n    import std.math;\n\
    \    import std.array;\n    import std.stdio;\n    import std.traits;\n    import\
    \ std.typecons;\n    import std.math;\n    import std.array;\n    import std.stdio;\n\
    \    import std.traits;\n    import std.typecons;\n    import std.math;\n    import\
    \ std.array;\n    import std.stdio;\n    import std.traits;\n    import std.typecons;\n\
    \    import std.math;\n    import std.array;\n    import\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpc80_3p84.d(79): Error: identifier expected following `import`

    /tmp/tmpc80_3p84.d(79): Error: `;` expected

    /tmp/tmpc80_3p84.d(89): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpc80_3p84.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split(\" \");\n\
    \    int[] nums_int = new int[nums.length];\n    foreach(int i, string num; nums)\n\
    \    {\n        nums_int[i] = num_to_int(num);\n    }\n    sort(nums_int);\n \
    \   foreach(int i, int num; nums_int)\n    {\n        nums[i] = int_to_num(num);\n\
    \    }\n    return join(nums, \" \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"\
    three\");\n    assert(candidate(\"three five nine\") == \"three five nine\");\n\
    \    assert(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\");\n    assert(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpi785iywr.d(11): Error: no property `split` for type `string`

    /tmp/tmpi785iywr.d(15): Error: undefined identifier `num_to_int`

    /tmp/tmpi785iywr.d(17): Error: undefined identifier `sort`, did you mean function
    `sqrt`?

    /tmp/tmpi785iywr.d(20): Error: undefined identifier `int_to_num`

    /tmp/tmpi785iywr.d(22): Error: undefined identifier `join`, did you mean function
    `main`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpi785iywr.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split(\" \");\n\
    \    int[] nums_int = new int[nums.length];\n    foreach(i, num; nums)\n    {\n\
    \        switch(num)\n        {\n            case \"zero\":\n                nums_int[i]\
    \ = 0;\n                break;\n            case \"one\":\n                nums_int[i]\
    \ = 1;\n                break;\n            case \"two\":\n                nums_int[i]\
    \ = 2;\n                break;\n            case \"three\":\n                nums_int[i]\
    \ = 3;\n                break;\n            case \"four\":\n                nums_int[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort;\n    foreach(i,\
    \ num; nums_int)\n    {\n        switch(num)\n        {\n            case 0:\n\
    \                nums[i] = \"zero\";\n                break;\n            case\
    \ 1:\n                nums[i] = \"one\";\n                break;\n           \
    \ case 2:\n                nums[i] = \"two\";\n                break;\n      \
    \      case 3:\n                nums[i] = \"three\";\n                break;\n\
    \            case 4:\n                nums[i] = \"four\";\n                break;\n\
    \            case 5:\n                nums[i] = \"five\";\n                break;\n\
    \            case 6:\n                nums[i] = \"six\";\n                break;\n\
    \            case 7:\n                nums[i] = \"seven\";\n                break;\n\
    \            case 8:\n                nums[i] = \"eight\";\n                break;\n\
    \            case 9:\n                nums[i] = \"nine\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpsxj9dx32.d(87): Error: Implicit string concatenation is deprecated,
    use "nine\x0aunittest\x0a{\x0a    alias candidate = sort_numbers;\x0a\x0a    assert(candidate("
    ~ ") == " instead

    /tmp/tmpsxj9dx32.d(87): Error: Implicit string concatenation is deprecated, use
    ") == " ~ ");\x0a    assert(candidate(" instead

    /tmp/tmpsxj9dx32.d(88): Error: found `three` when expecting `;` following statement

    /tmp/tmpsxj9dx32.d(88): Error: found `three` when expecting `;` following statement

    /tmp/tmpsxj9dx32.d(89): Error: found `three` when expecting `;` following statement

    /tmp/tmpsxj9dx32.d(89): Error: found `nine` when expecting `;` following statement

    /tmp/tmpsxj9dx32.d(89): Error: found `three` when expecting `;` following statement

    /tmp/tmpsxj9dx32.d(89): Error: found `nine` when expecting `;` following statement

    /tmp/tmpsxj9dx32.d(90): Error: found `five` when expecting `;` following statement

    /tmp/tmpsxj9dx32.d(90): Error: found `four` when expecting `;` following statement

    /tmp/tmpsxj9dx32.d(90): Error: found `'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split(\" \");\n\
    \    string[] nums_sorted = nums.sort!((a, b) => a.length < b.length);\n    return\
    \ nums_sorted.join(\" \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"\
    three\");\n    assert(candidate(\"three five nine\") == \"three five nine\");\n\
    \    assert(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\");\n    assert(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpguhyb8uj.d(11): Error: no property `split` for type `string`

    /tmp/tmpguhyb8uj.d(12): Error: no property `sort` for type `string[]`

    /tmp/tmpguhyb8uj.d(13): Error: no property `join` for type `string[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpguhyb8uj.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split(\" \");\n\
    \    int[] nums_int = new int[nums.length];\n    foreach(i, num; nums)\n    {\n\
    \        switch(num)\n        {\n            case \"zero\": nums_int[i] = 0; break;\n\
    \            case \"one\": nums_int[i] = 1; break;\n            case \"two\":\
    \ nums_int[i] = 2; break;\n            case \"three\": nums_int[i] = 3; break;\n\
    \            case \"four\": nums_int[i] = 4; break;\n            case \"five\"\
    : nums_int[i] = 5; break;\n            case \"six\": nums_int[i] = 6; break;\n\
    \            case \"seven\": nums_int[i] = 7; break;\n            case \"eight\"\
    : nums_int[i] = 8; break;\n            case \"nine\": nums_int[i] = 9; break;\n\
    \        }\n    }\n    nums_int.sort();\n    string[] nums_str = new string[nums_int.length];\n\
    \    foreach(i, num; nums_int)\n    {\n        switch(num)\n        {\n      \
    \      case 0: nums_str[i] = \"zero\"; break;\n            case 1: nums_str[i]\
    \ = \"one\"; break;\n            case 2: nums_str[i] = \"two\"; break;\n     \
    \       case 3: nums_str[i] = \"three\"; break;\n            case 4: nums_str[i]\
    \ = \"four\"; break;\n            case 5: nums_str[i] = \"five\"; break;\n   \
    \         case 6: nums_str[i] = \"six\"; break;\n            case 7: nums_str[i]\
    \ = \"seven\"; break;\n            case 8: nums_str[i] = \"eight\"; break;\n \
    \           case 9: nums_str[i] = \"nine\"; break;\n        }\n    }\n    return\
    \ nums_str.join(\" \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"\
    three\");\n    assert(candidate(\"three five nine\") == \"three five nine\");\n\
    \    assert(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\");\n    assert(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpr07lf2ed.d(11): Error: no property `split` for type `string`

    /tmp/tmpr07lf2ed.d(15): Error: `switch` statement without a `default`; use `final
    switch` or add `default: assert(0);` or add `default: break;`

    /tmp/tmpr07lf2ed.d(29): Error: no property `sort` for type `int[]`

    /tmp/tmpr07lf2ed.d(33): Error: `switch` statement without a `default`; use `final
    switch` or add `default: assert(0);` or add `default: break;`

    /tmp/tmpr07lf2ed.d(47): Error: no property `join` for type `string[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpr07lf2ed.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split;\n    string[]\
    \ nums_sorted = nums.sort;\n    return nums_sorted.join(\" \");\n}\nunittest\n\
    {\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"three\
    \ five nine\") == \"three five nine\");\n    assert(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpjoz3gjbf.d(11): Error: no property `split` for type `string`

    /tmp/tmpjoz3gjbf.d(12): Error: no property `sort` for type `string[]`

    /tmp/tmpjoz3gjbf.d(13): Error: no property `join` for type `string[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjoz3gjbf.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split(\" \");\n\
    \    string[] nums_sorted = nums.dup;\n    nums_sorted.sort;\n    string result\
    \ = \"\";\n    foreach(string num; nums)\n    {\n        int index = nums_sorted.indexOf(num);\n\
    \        result ~= nums[index] ~ \" \";\n    }\n    return result.trimRight;\n\
    }\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpyjl5vhi7.d(11): Error: no property `split` for type `string`

    /tmp/tmpyjl5vhi7.d(13): Error: no property `sort` for type `string[]`

    /tmp/tmpyjl5vhi7.d(17): Error: no property `indexOf` for type `string[]`

    /tmp/tmpyjl5vhi7.d(20): Error: no property `trimRight` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyjl5vhi7.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split(\" \");\n\
    \    int[] nums_int = new int[nums.length];\n    foreach(i, num; nums)\n    {\n\
    \        switch(num)\n        {\n            case \"zero\":\n                nums_int[i]\
    \ = 0;\n                break;\n            case \"one\":\n                nums_int[i]\
    \ = 1;\n                break;\n            case \"two\":\n                nums_int[i]\
    \ = 2;\n                break;\n            case \"three\":\n                nums_int[i]\
    \ = 3;\n                break;\n            case \"four\":\n                nums_int[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort;\n    foreach(i,\
    \ num; nums_int)\n    {\n        switch(num)\n        {\n            case 0:\n\
    \                nums[i] = \"zero\";\n                break;\n            case\
    \ 1:\n                nums[i] = \"one\";\n                break;\n           \
    \ case 2:\n                nums[i] = \"two\";\n                break;\n      \
    \      case 3:\n                nums[i] = \"three\";\n                break;\n\
    \            case 4:\n                nums[i] = \"four\";\n                break;\n\
    \            case 5:\n                nums[i] = \"five\";\n                break;\n\
    \            case 6:\n                nums[i] = \"six\";\n                break;\n\
    \            case 7:\n                nums[i] = \"seven\";\n                break;\n\
    \            case 8:\n                nums[i] = \"eight\";\n                break;\n\
    \            case 9:\n                nums[i] = \"nine\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpsxj9dx32.d(87): Error: Implicit string concatenation is deprecated,
    use "nine\x0aunittest\x0a{\x0a    alias candidate = sort_numbers;\x0a\x0a    assert(candidate("
    ~ ") == " instead

    /tmp/tmpsxj9dx32.d(87): Error: Implicit string concatenation is deprecated, use
    ") == " ~ ");\x0a    assert(candidate(" instead

    /tmp/tmpsxj9dx32.d(88): Error: found `three` when expecting `;` following statement

    /tmp/tmpsxj9dx32.d(88): Error: found `three` when expecting `;` following statement

    /tmp/tmpsxj9dx32.d(89): Error: found `three` when expecting `;` following statement

    /tmp/tmpsxj9dx32.d(89): Error: found `nine` when expecting `;` following statement

    /tmp/tmpsxj9dx32.d(89): Error: found `three` when expecting `;` following statement

    /tmp/tmpsxj9dx32.d(89): Error: found `nine` when expecting `;` following statement

    /tmp/tmpsxj9dx32.d(90): Error: found `five` when expecting `;` following statement

    /tmp/tmpsxj9dx32.d(90): Error: found `four` when expecting `;` following statement

    /tmp/tmpsxj9dx32.d(90): Error: found `'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split(\" \");\n\
    \    int[] nums_int = new int[nums.length];\n    foreach(i, num; nums)\n    {\n\
    \        nums_int[i] = to!int(num);\n    }\n    nums_int.sort;\n    string result\
    \ = \"\";\n    foreach(num; nums_int)\n    {\n        result ~= to!string(num)\
    \ ~ \" \";\n    }\n    return result.stripRight;\n}\nunittest\n{\n    alias candidate\
    \ = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpfmy4nk4w.d(11): Error: no property `split` for type `string`

    /tmp/tmpfmy4nk4w.d(15): Error: template instance `to!int` template `to` is not
    defined, did you mean No?

    /tmp/tmpfmy4nk4w.d(17): Error: no property `sort` for type `int[]`

    /tmp/tmpfmy4nk4w.d(21): Error: template instance `to!string` template `to` is
    not defined, did you mean No?

    /tmp/tmpfmy4nk4w.d(23): Error: no property `stripRight` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfmy4nk4w.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split(\" \");\n\
    \    int[] nums_int = new int[nums.length];\n    foreach(i, v; nums)\n    {\n\
    \        switch(v)\n        {\n            case \"zero\": nums_int[i] = 0; break;\n\
    \            case \"one\": nums_int[i] = 1; break;\n            case \"two\":\
    \ nums_int[i] = 2; break;\n            case \"three\": nums_int[i] = 3; break;\n\
    \            case \"four\": nums_int[i] = 4; break;\n            case \"five\"\
    : nums_int[i] = 5; break;\n            case \"six\": nums_int[i] = 6; break;\n\
    \            case \"seven\": nums_int[i] = 7; break;\n            case \"eight\"\
    : nums_int[i] = 8; break;\n            case \"nine\": nums_int[i] = 9; break;\n\
    \        }\n    }\n    nums_int.sort;\n    foreach(i, v; nums_int)\n    {\n  \
    \      switch(v)\n        {\n            case 0: nums[i] = \"zero\"; break;\n\
    \            case 1: nums[i] = \"one\"; break;\n            case 2: nums[i] =\
    \ \"two\"; break;\n            case 3: nums[i] = \"three\"; break;\n         \
    \   case 4: nums[i] = \"four\"; break;\n            case 5: nums[i] = \"five\"\
    ; break;\n            case 6: nums[i] = \"six\"; break;\n            case 7: nums[i]\
    \ = \"seven\"; break;\n            case 8: nums[i] = \"eight\"; break;\n     \
    \       case 9: nums[i] = \"nine\"; break;\n        }\n    }\n    return nums.join(\"\
    \ \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp5h9npd2m.d(11): Error: no property `split` for type `string`

    /tmp/tmp5h9npd2m.d(15): Error: `switch` statement without a `default`; use `final
    switch` or add `default: assert(0);` or add `default: break;`

    /tmp/tmp5h9npd2m.d(29): Error: no property `sort` for type `int[]`

    /tmp/tmp5h9npd2m.d(32): Error: `switch` statement without a `default`; use `final
    switch` or add `default: assert(0);` or add `default: break;`

    /tmp/tmp5h9npd2m.d(46): Error: no property `join` for type `string[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5h9npd2m.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    int[] nums = numbers.split(\" \").map!(a\
    \ => to!int(a)).array;\n    sort(nums);\n    return nums.map!(a => to!string(a)).join(\"\
    \ \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpeqtkoyj4.d(11): Error: no property `split` for type `string`

    /tmp/tmpeqtkoyj4.d(12): Error: undefined identifier `sort`, did you mean function
    `sqrt`?

    /tmp/tmpeqtkoyj4.d(13): Error: no property `map` for type `int[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpeqtkoyj4.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split(\" \");\n\
    \    string[] nums_sorted = nums.dup;\n    nums_sorted.sort;\n    string result\
    \ = \"\";\n    foreach(string num; nums)\n    {\n        foreach(string num_sorted;\
    \ nums_sorted)\n        {\n            if(num == num_sorted)\n            {\n\
    \                result ~= num_sorted ~ \" \";\n                break;\n     \
    \       }\n        }\n    }\n    return result.stripRight;\n}\nunittest\n{\n \
    \   alias candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"three\
    \ five nine\") == \"three five nine\");\n    assert(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpfld0zxt2.d(11): Error: no property `split` for type `string`

    /tmp/tmpfld0zxt2.d(13): Error: no property `sort` for type `string[]`

    /tmp/tmpfld0zxt2.d(26): Error: no property `stripRight` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfld0zxt2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split(\" \");\n\
    \    string[] nums_sorted = nums.dup;\n    nums_sorted.sort!((a, b) => a.compare(b));\n\
    \    return nums_sorted.join(\" \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"\
    three\");\n    assert(candidate(\"three five nine\") == \"three five nine\");\n\
    \    assert(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\");\n    assert(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4sql963s.d(11): Error: no property `split` for type `string`

    /tmp/tmp4sql963s.d(13): Error: no property `sort` for type `string[]`

    /tmp/tmp4sql963s.d(14): Error: no property `join` for type `string[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4sql963s.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split(\" \");\n\
    \    int[] nums_int = new int[nums.length];\n    foreach(int i, string num; nums)\n\
    \    {\n        switch(num)\n        {\n            case \"zero\":\n         \
    \       nums_int[i] = 0;\n                break;\n            case \"one\":\n\
    \                nums_int[i] = 1;\n                break;\n            case \"\
    two\":\n                nums_int[i] = 2;\n                break;\n           \
    \ case \"three\":\n                nums_int[i] = 3;\n                break;\n\
    \            case \"four\":\n                nums_int[i] = 4;\n              \
    \  break;\n            case \"five\":\n                nums_int[i] = 5;\n    \
    \            break;\n            case \"six\":\n                nums_int[i] =\
    \ 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort();\n    foreach(int\
    \ i, int num; nums_int)\n    {\n        switch(num)\n        {\n            case\
    \ 0:\n                nums[i] = \"zero\";\n                break;\n          \
    \  case 1:\n                nums[i] = \"one\";\n                break;\n     \
    \       case 2:\n                nums[i] = \"two\";\n                break;\n\
    \            case 3:\n                nums[i] = \"three\";\n                break;\n\
    \            case 4:\n                nums[i] = \"four\";\n                break;\n\
    \            case 5:\n                nums[i] = \"five\";\n                break;\n\
    \            case 6:\n                nums[i] = \"six\";\n                break;\n\
    \            case 7:\n                nums[i] = \"seven\";\n                break;\n\
    \            case 8:\n                nums[i] = \"eight\";\n                break;\n\
    \            case 9:\n                nums[i\nunittest\n{\n    alias candidate\
    \ = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp5qnryr00.d(83): Error: found `unittest` when expecting `,`

    /tmp/tmp5qnryr00.d(93): Error: found `void` when expecting `,`

    /tmp/tmp5qnryr00.d(93): Error: found `{` when expecting `,`

    /tmp/tmp5qnryr00.d(93): Error: expression expected, not `}`

    /tmp/tmp5qnryr00.d(93): Error: found `End of File` when expecting `,`

    /tmp/tmp5qnryr00.d(93): Error: found `End of File` when expecting `]`

    /tmp/tmp5qnryr00.d(93): Error: found `End of File` when expecting `;` following
    statement

    /tmp/tmp5qnryr00.d(93): Error: found `End of File` when expecting `}` following
    compound statement

    /tmp/tmp5qnryr00.d(93): Error: found `End of File` when expecting `}` following
    compound statement

    /tmp/tmp5qnryr00.d(93): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5qnryr00.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split(\" \");\n\
    \    int[] nums_int = new int[nums.length];\n    foreach(i, num; nums)\n    {\n\
    \        switch(num)\n        {\n            case \"zero\":\n                nums_int[i]\
    \ = 0;\n                break;\n            case \"one\":\n                nums_int[i]\
    \ = 1;\n                break;\n            case \"two\":\n                nums_int[i]\
    \ = 2;\n                break;\n            case \"three\":\n                nums_int[i]\
    \ = 3;\n                break;\n            case \"four\":\n                nums_int[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort!((a, b) =>\
    \ a < b);\n    foreach(i, num; nums_int)\n    {\n        switch(num)\n       \
    \ {\n            case 0:\n                nums[i] = \"zero\";\n              \
    \  break;\n            case 1:\n                nums[i] = \"one\";\n         \
    \       break;\n            case 2:\n                nums[i] = \"two\";\n    \
    \            break;\n            case 3:\n                nums[i] = \"three\"\
    ;\n                break;\n            case 4:\n                nums[i] = \"four\"\
    ;\n                break;\n            case 5:\n                nums[i] = \"five\"\
    ;\n                break;\n            case 6:\n                nums[i] = \"six\"\
    ;\n                break;\n            case 7:\n                nums[i] = \"seven\"\
    ;\n                break;\n            case 8:\n                nums[i] = \"eight\"\
    ;\n                break;\n            case 9:\nunittest\n{\n    alias candidate\
    \ = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp8wnvkhau.d(82): Error: found `unittest` instead of statement

    /tmp/tmp8wnvkhau.d(92): Error: found `End of File` when expecting `}` following
    compound statement

    /tmp/tmp8wnvkhau.d(92): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8wnvkhau.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split(\" \");\n\
    \    int[] nums_int = new int[nums.length];\n    foreach(i, num; nums)\n    {\n\
    \        nums_int[i] = num_to_int(num);\n    }\n    nums_int.sort();\n    foreach(i,\
    \ num; nums_int)\n    {\n        nums[i] = int_to_num(num);\n    }\n    return\
    \ nums.join(\" \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n \
    \   assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"three\"\
    );\n    assert(candidate(\"three five nine\") == \"three five nine\");\n    assert(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\");\n\
    \    assert(candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp9g88fgjm.d(11): Error: no property `split` for type `string`

    /tmp/tmp9g88fgjm.d(15): Error: undefined identifier `num_to_int`

    /tmp/tmp9g88fgjm.d(17): Error: no property `sort` for type `int[]`

    /tmp/tmp9g88fgjm.d(20): Error: undefined identifier `int_to_num`

    /tmp/tmp9g88fgjm.d(22): Error: no property `join` for type `string[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9g88fgjm.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split(\" \");\n\
    \    int[] nums_int = new int[nums.length];\n    foreach(i, num; nums)\n    {\n\
    \        switch(num)\n        {\n            case \"zero\":\n                nums_int[i]\
    \ = 0;\n                break;\n            case \"one\":\n                nums_int[i]\
    \ = 1;\n                break;\n            case \"two\":\n                nums_int[i]\
    \ = 2;\n                break;\n            case \"three\":\n                nums_int[i]\
    \ = 3;\n                break;\n            case \"four\":\n                nums_int[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort();\n    foreach(i,\
    \ num; nums_int)\n    {\n        switch(num)\n        {\n            case 0:\n\
    \                nums[i] = \"zero\";\n                break;\n            case\
    \ 1:\n                nums[i] = \"one\";\n                break;\n           \
    \ case 2:\n                nums[i] = \"two\";\n                break;\n      \
    \      case 3:\n                nums[i] = \"three\";\n                break;\n\
    \            case 4:\n                nums[i] = \"four\";\n                break;\n\
    \            case 5:\n                nums[i] = \"five\";\n                break;\n\
    \            case 6:\n                nums[i] = \"six\";\n                break;\n\
    \            case 7:\n                nums[i] = \"seven\";\n                break;\n\
    \            case 8:\n                nums[i] = \"eight\";\n                break;\n\
    \            case 9:\n                nums[i] = \"nine\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpzj6gcnh4.d(87): Error: Implicit string concatenation is deprecated,
    use "nine\x0aunittest\x0a{\x0a    alias candidate = sort_numbers;\x0a\x0a    assert(candidate("
    ~ ") == " instead

    /tmp/tmpzj6gcnh4.d(87): Error: Implicit string concatenation is deprecated, use
    ") == " ~ ");\x0a    assert(candidate(" instead

    /tmp/tmpzj6gcnh4.d(88): Error: found `three` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(88): Error: found `three` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(89): Error: found `three` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(89): Error: found `nine` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(89): Error: found `three` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(89): Error: found `nine` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(90): Error: found `five` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(90): Error: found `four` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(90): Error: found `'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split(\" \");\n\
    \    int[] nums_int = new int[nums.length];\n    foreach(i, num; nums)\n    {\n\
    \        switch(num)\n        {\n            case \"zero\":\n                nums_int[i]\
    \ = 0;\n                break;\n            case \"one\":\n                nums_int[i]\
    \ = 1;\n                break;\n            case \"two\":\n                nums_int[i]\
    \ = 2;\n                break;\n            case \"three\":\n                nums_int[i]\
    \ = 3;\n                break;\n            case \"four\":\n                nums_int[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort!((a, b) =>\
    \ a < b);\n    foreach(i, num; nums_int)\n    {\n        switch(num)\n       \
    \ {\n            case 0:\n                nums[i] = \"zero\";\n              \
    \  break;\n            case 1:\n                nums[i] = \"one\";\n         \
    \       break;\n            case 2:\n                nums[i] = \"two\";\n    \
    \            break;\n            case 3:\n                nums[i] = \"three\"\
    ;\n                break;\n            case 4:\n                nums[i] = \"four\"\
    ;\n                break;\n            case 5:\n                nums[i] = \"five\"\
    ;\n                break;\n            case 6:\n                nums[i] = \"six\"\
    ;\n                break;\n            case 7:\n                nums[i] = \"seven\"\
    ;\n                break;\n            case 8:\n                nums[i] = \"eight\"\
    ;\n                break;\n            case 9:\nunittest\n{\n    alias candidate\
    \ = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp8wnvkhau.d(82): Error: found `unittest` instead of statement

    /tmp/tmp8wnvkhau.d(92): Error: found `End of File` when expecting `}` following
    compound statement

    /tmp/tmp8wnvkhau.d(92): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8wnvkhau.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split(\" \");\n\
    \    int[] nums_int = new int[nums.length];\n    foreach(i, num; nums)\n    {\n\
    \        switch(num)\n        {\n            case \"zero\": nums_int[i] = 0; break;\n\
    \            case \"one\": nums_int[i] = 1; break;\n            case \"two\":\
    \ nums_int[i] = 2; break;\n            case \"three\": nums_int[i] = 3; break;\n\
    \            case \"four\": nums_int[i] = 4; break;\n            case \"five\"\
    : nums_int[i] = 5; break;\n            case \"six\": nums_int[i] = 6; break;\n\
    \            case \"seven\": nums_int[i] = 7; break;\n            case \"eight\"\
    : nums_int[i] = 8; break;\n            case \"nine\": nums_int[i] = 9; break;\n\
    \        }\n    }\n    nums_int.sort();\n    foreach(i, num; nums_int)\n    {\n\
    \        switch(num)\n        {\n            case 0: nums[i] = \"zero\"; break;\n\
    \            case 1: nums[i] = \"one\"; break;\n            case 2: nums[i] =\
    \ \"two\"; break;\n            case 3: nums[i] = \"three\"; break;\n         \
    \   case 4: nums[i] = \"four\"; break;\n            case 5: nums[i] = \"five\"\
    ; break;\n            case 6: nums[i] = \"six\"; break;\n            case 7: nums[i]\
    \ = \"seven\"; break;\n            case 8: nums[i] = \"eight\"; break;\n     \
    \       case 9: nums[i] = \"nine\"; break;\n        }\n    }\n    return nums.join(\"\
    \ \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp90ozul6z.d(11): Error: no property `split` for type `string`

    /tmp/tmp90ozul6z.d(15): Error: `switch` statement without a `default`; use `final
    switch` or add `default: assert(0);` or add `default: break;`

    /tmp/tmp90ozul6z.d(29): Error: no property `sort` for type `int[]`

    /tmp/tmp90ozul6z.d(32): Error: `switch` statement without a `default`; use `final
    switch` or add `default: assert(0);` or add `default: break;`

    /tmp/tmp90ozul6z.d(46): Error: no property `join` for type `string[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp90ozul6z.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    int[] nums = new int[numbers.length];\n\
    \    string[] nums_str = numbers.split(\" \");\n    foreach(i, num; nums_str)\n\
    \    {\n        switch(num)\n        {\n            case \"zero\":\n         \
    \       nums[i] = 0;\n                break;\n            case \"one\":\n    \
    \            nums[i] = 1;\n                break;\n            case \"two\":\n\
    \                nums[i] = 2;\n                break;\n            case \"three\"\
    :\n                nums[i] = 3;\n                break;\n            case \"four\"\
    :\n                nums[i] = 4;\n                break;\n            case \"five\"\
    :\n                nums[i] = 5;\n                break;\n            case \"six\"\
    :\n                nums[i] = 6;\n                break;\n            case \"seven\"\
    :\n                nums[i] = 7;\n                break;\n            case \"eight\"\
    :\n                nums[i] = 8;\n                break;\n            case \"nine\"\
    :\n                nums[i] = 9;\n                break;\n        }\n    }\n  \
    \  nums.sort;\n    string result = \"\";\n    foreach(i, num; nums)\n    {\n \
    \       switch(num)\n        {\n            case 0:\n                result ~=\
    \ \"zero\";\n                break;\n            case 1:\n                result\
    \ ~= \"one\";\n                break;\n            case 2:\n                result\
    \ ~= \"two\";\n                break;\n            case 3:\n                result\
    \ ~= \"three\";\n                break;\n            case 4:\n               \
    \ result ~= \"four\";\n                break;\n            case 5:\n         \
    \       result ~= \"five\";\n                break;\n            case 6:\n   \
    \             result ~= \"six\";\n                break;\n            case 7:\n\
    \                result ~= \"seven\";\n                break;\n            case\
    \ 8:\n                result ~= \"eight\";\n                break;\n         \
    \   case 9:\n                result ~= \"nine\";\n                break;\n   \
    \     }\n        if(i < nums.length - 1)\n            result ~= \" \";\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n \
    \   assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"three\"\
    );\n    assert(candidate(\"three five nine\") == \"three five nine\");\n    assert(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\");\n\
    \    assert(candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmps06xf51d.d(12): Error: no property `split` for type `string`

    /tmp/tmps06xf51d.d(15): Error: `switch` statement without a `default`; use `final
    switch` or add `default: assert(0);` or add `default: break;`

    /tmp/tmps06xf51d.d(49): Error: no property `sort` for type `int[]`

    /tmp/tmps06xf51d.d(53): Error: `switch` statement without a `default`; use `final
    switch` or add `default: assert(0);` or add `default: break;`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmps06xf51d.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split(\" \");\n\
    \    int[] nums_int = new int[nums.length];\n    foreach(i, num; nums)\n    {\n\
    \        switch(num)\n        {\n            case \"zero\":\n                nums_int[i]\
    \ = 0;\n                break;\n            case \"one\":\n                nums_int[i]\
    \ = 1;\n                break;\n            case \"two\":\n                nums_int[i]\
    \ = 2;\n                break;\n            case \"three\":\n                nums_int[i]\
    \ = 3;\n                break;\n            case \"four\":\n                nums_int[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort();\n    foreach(i,\
    \ num; nums_int)\n    {\n        switch(num)\n        {\n            case 0:\n\
    \                nums[i] = \"zero\";\n                break;\n            case\
    \ 1:\n                nums[i] = \"one\";\n                break;\n           \
    \ case 2:\n                nums[i] = \"two\";\n                break;\n      \
    \      case 3:\n                nums[i] = \"three\";\n                break;\n\
    \            case 4:\n                nums[i] = \"four\";\n                break;\n\
    \            case 5:\n                nums[i] = \"five\";\n                break;\n\
    \            case 6:\n                nums[i] = \"six\";\n                break;\n\
    \            case 7:\n                nums[i] = \"seven\";\n                break;\n\
    \            case 8:\n                nums[i] = \"eight\";\n                break;\n\
    \            case 9:\n                nums[i] = \"nine\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpzj6gcnh4.d(87): Error: Implicit string concatenation is deprecated,
    use "nine\x0aunittest\x0a{\x0a    alias candidate = sort_numbers;\x0a\x0a    assert(candidate("
    ~ ") == " instead

    /tmp/tmpzj6gcnh4.d(87): Error: Implicit string concatenation is deprecated, use
    ") == " ~ ");\x0a    assert(candidate(" instead

    /tmp/tmpzj6gcnh4.d(88): Error: found `three` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(88): Error: found `three` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(89): Error: found `three` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(89): Error: found `nine` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(89): Error: found `three` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(89): Error: found `nine` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(90): Error: found `five` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(90): Error: found `four` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(90): Error: found `'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split(\" \");\n\
    \    int[] nums_int = new int[nums.length];\n    foreach(int i, string num; nums)\n\
    \    {\n        nums_int[i] = to!int(num);\n    }\n    sort(nums_int);\n    string\
    \ result = \"\";\n    foreach(int num; nums_int)\n    {\n        result ~= to!string(num)\
    \ ~ \" \";\n    }\n    return result.trimRight();\n}\nunittest\n{\n    alias candidate\
    \ = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpyoq5e3ri.d(11): Error: no property `split` for type `string`

    /tmp/tmpyoq5e3ri.d(15): Error: template instance `to!int` template `to` is not
    defined, did you mean No?

    /tmp/tmpyoq5e3ri.d(17): Error: undefined identifier `sort`, did you mean function
    `sqrt`?

    /tmp/tmpyoq5e3ri.d(21): Error: template instance `to!string` template `to` is
    not defined, did you mean No?

    /tmp/tmpyoq5e3ri.d(23): Error: no property `trimRight` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyoq5e3ri.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split(\" \");\n\
    \    int[] nums_int = new int[nums.length];\n    foreach(i, num; nums)\n    {\n\
    \        switch(num)\n        {\n            case \"zero\":\n                nums_int[i]\
    \ = 0;\n                break;\n            case \"one\":\n                nums_int[i]\
    \ = 1;\n                break;\n            case \"two\":\n                nums_int[i]\
    \ = 2;\n                break;\n            case \"three\":\n                nums_int[i]\
    \ = 3;\n                break;\n            case \"four\":\n                nums_int[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort!((a, b) =>\
    \ a < b);\n    string[] nums_str = new string[nums.length];\n    foreach(i, num;\
    \ nums_int)\n    {\n        switch(num)\n        {\n            case 0:\n    \
    \            nums_str[i] = \"zero\";\n                break;\n            case\
    \ 1:\n                nums_str[i] = \"one\";\n                break;\n       \
    \     case 2:\n                nums_str[i] = \"two\";\n                break;\n\
    \            case 3:\n                nums_str[i] = \"three\";\n             \
    \   break;\n            case 4:\n                nums_str[i] = \"four\";\n   \
    \             break;\n            case 5:\n                nums_str[i] = \"five\"\
    ;\n                break;\n            case 6:\n                nums_str[i] =\
    \ \"six\";\n                break;\n            case 7:\n                nums_str[i]\n\
    unittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4eeuimiu.d(78): Error: found `unittest` when expecting `;` following
    statement

    /tmp/tmp4eeuimiu.d(88): Error: found `End of File` when expecting `}` following
    compound statement

    /tmp/tmp4eeuimiu.d(88): Error: found `End of File` when expecting `}` following
    compound statement

    /tmp/tmp4eeuimiu.d(88): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4eeuimiu.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    int[] nums = new int[10];\n    foreach(string\
    \ num; numbers.split(\" \"))\n    {\n        switch(num)\n        {\n        \
    \    case \"zero\": nums[0]++; break;\n            case \"one\": nums[1]++; break;\n\
    \            case \"two\": nums[2]++; break;\n            case \"three\": nums[3]++;\
    \ break;\n            case \"four\": nums[4]++; break;\n            case \"five\"\
    : nums[5]++; break;\n            case \"six\": nums[6]++; break;\n           \
    \ case \"seven\": nums[7]++; break;\n            case \"eight\": nums[8]++; break;\n\
    \            case \"nine\": nums[9]++; break;\n        }\n    }\n    string ret\
    \ = \"\";\n    foreach(i; 0..10)\n    {\n        ret ~= repeat(i.to!string(),\
    \ nums[i]);\n        if(i != 9)\n            ret ~= \" \";\n    }\n    return\
    \ ret;\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpsh2wj99r.d(12): Error: no property `split` for type `string`

    /tmp/tmpsh2wj99r.d(31): Error: undefined identifier `repeat`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsh2wj99r.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split(\" \");\n\
    \    int[] nums_int = new int[nums.length];\n    foreach(i, num; nums)\n    {\n\
    \        switch(num)\n        {\n            case \"zero\":\n                nums_int[i]\
    \ = 0;\n                break;\n            case \"one\":\n                nums_int[i]\
    \ = 1;\n                break;\n            case \"two\":\n                nums_int[i]\
    \ = 2;\n                break;\n            case \"three\":\n                nums_int[i]\
    \ = 3;\n                break;\n            case \"four\":\n                nums_int[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort;\n    foreach(i,\
    \ num; nums_int)\n    {\n        switch(num)\n        {\n            case 0:\n\
    \                nums[i] = \"zero\";\n                break;\n            case\
    \ 1:\n                nums[i] = \"one\";\n                break;\n           \
    \ case 2:\n                nums[i] = \"two\";\n                break;\n      \
    \      case 3:\n                nums[i] = \"three\";\n                break;\n\
    \            case 4:\n                nums[i] = \"four\";\n                break;\n\
    \            case 5:\n                nums[i] = \"five\";\n                break;\n\
    \            case 6:\n                nums[i] = \"six\";\n                break;\n\
    \            case 7:\n                nums[i] = \"seven\";\n                break;\n\
    \            case 8:\n                nums[i] = \"eight\";\n                break;\n\
    \            case 9:\n                nums[i] = \"nine\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpsxj9dx32.d(87): Error: Implicit string concatenation is deprecated,
    use "nine\x0aunittest\x0a{\x0a    alias candidate = sort_numbers;\x0a\x0a    assert(candidate("
    ~ ") == " instead

    /tmp/tmpsxj9dx32.d(87): Error: Implicit string concatenation is deprecated, use
    ") == " ~ ");\x0a    assert(candidate(" instead

    /tmp/tmpsxj9dx32.d(88): Error: found `three` when expecting `;` following statement

    /tmp/tmpsxj9dx32.d(88): Error: found `three` when expecting `;` following statement

    /tmp/tmpsxj9dx32.d(89): Error: found `three` when expecting `;` following statement

    /tmp/tmpsxj9dx32.d(89): Error: found `nine` when expecting `;` following statement

    /tmp/tmpsxj9dx32.d(89): Error: found `three` when expecting `;` following statement

    /tmp/tmpsxj9dx32.d(89): Error: found `nine` when expecting `;` following statement

    /tmp/tmpsxj9dx32.d(90): Error: found `five` when expecting `;` following statement

    /tmp/tmpsxj9dx32.d(90): Error: found `four` when expecting `;` following statement

    /tmp/tmpsxj9dx32.d(90): Error: found `'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split(\" \");\n\
    \    int[] num_ints = new int[nums.length];\n    foreach(i, num; nums)\n    {\n\
    \        switch(num)\n        {\n            case \"zero\":\n                num_ints[i]\
    \ = 0;\n                break;\n            case \"one\":\n                num_ints[i]\
    \ = 1;\n                break;\n            case \"two\":\n                num_ints[i]\
    \ = 2;\n                break;\n            case \"three\":\n                num_ints[i]\
    \ = 3;\n                break;\n            case \"four\":\n                num_ints[i]\
    \ = 4;\n                break;\n            case \"five\":\n                num_ints[i]\
    \ = 5;\n                break;\n            case \"six\":\n                num_ints[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                num_ints[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                num_ints[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                num_ints[i]\
    \ = 9;\n                break;\n        }\n    }\n    num_ints.sort;\n    string[]\
    \ num_strings = new string[nums.length];\n    foreach(i, num; num_ints)\n    {\n\
    \        switch(num)\n        {\n            case 0:\n                num_strings[i]\
    \ = \"zero\";\n                break;\n            case 1:\n                num_strings[i]\
    \ = \"one\";\n                break;\n            case 2:\n                num_strings[i]\
    \ = \"two\";\n                break;\n            case 3:\n                num_strings[i]\
    \ = \"three\";\n                break;\n            case 4:\n                num_strings[i]\
    \ = \"four\";\n                break;\n            case 5:\n                num_strings[i]\
    \ = \"five\";\n                break;\n            case 6:\n                num_strings[i]\
    \ = \"six\";\n                break;\n            case 7:\n                num_strings[i]\
    \ = \"seven\";\n                break;\n            case 8:\n                num_strings[i]\
    \ = \"eight\";\n                break;\n            case\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp95uzxn18.d(83): Error: expression expected, not `unittest`

    /tmp/tmp95uzxn18.d(84): Error: found `{` when expecting `:`

    /tmp/tmp95uzxn18.d(93): Error: found `End of File` when expecting `}` following
    compound statement

    /tmp/tmp95uzxn18.d(93): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp95uzxn18.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split(\" \");\n\
    \    int[] nums_int = new int[nums.length];\n    foreach(i, num; nums)\n    {\n\
    \        nums_int[i] = to!int(num);\n    }\n    sort(nums_int);\n    string result\
    \ = \"\";\n    foreach(num; nums_int)\n    {\n        result ~= to!string(num)\
    \ ~ \" \";\n    }\n    return result.stripRight;\n}\nunittest\n{\n    alias candidate\
    \ = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpg4qy2qpg.d(11): Error: no property `split` for type `string`

    /tmp/tmpg4qy2qpg.d(15): Error: template instance `to!int` template `to` is not
    defined, did you mean No?

    /tmp/tmpg4qy2qpg.d(17): Error: undefined identifier `sort`, did you mean function
    `sqrt`?

    /tmp/tmpg4qy2qpg.d(21): Error: template instance `to!string` template `to` is
    not defined, did you mean No?

    /tmp/tmpg4qy2qpg.d(23): Error: no property `stripRight` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg4qy2qpg.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    int[] nums = new int[numbers.length];\n\
    \    int i = 0;\n    foreach(n; numbers.split(\" \"))\n    {\n        switch(n)\n\
    \        {\n            case \"zero\":\n                nums[i] = 0;\n       \
    \         break;\n            case \"one\":\n                nums[i] = 1;\n  \
    \              break;\n            case \"two\":\n                nums[i] = 2;\n\
    \                break;\n            case \"three\":\n                nums[i]\
    \ = 3;\n                break;\n            case \"four\":\n                nums[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums[i]\
    \ = 9;\n                break;\n        }\n        i++;\n    }\n    nums.sort;\n\
    \    string result = \"\";\n    foreach(n; nums)\n    {\n        switch(n)\n \
    \       {\n            case 0:\n                result ~= \"zero \";\n       \
    \         break;\n            case 1:\n                result ~= \"one \";\n \
    \               break;\n            case 2:\n                result ~= \"two \"\
    ;\n                break;\n            case 3:\n                result ~= \"three\
    \ \";\n                break;\n            case 4:\n                result ~=\
    \ \"four \";\n                break;\n            case 5:\n                result\
    \ ~= \"five \";\n                break;\n            case 6:\n               \
    \ result ~= \"six \";\n                break;\n            case 7:\n         \
    \       result ~= \"seven \";\n                break;\n            case 8:\n \
    \               result ~= \"eight \";\n                break;\n            case\
    \ 9:\n                result ~= \"nine \";\n                break;\n        }\n\
    \    }\n    return result.stripRight;\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"\
    three\");\n    assert(candidate(\"three five nine\") == \"three five nine\");\n\
    \    assert(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\");\n    assert(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpb4lnlwci.d(13): Error: no property `split` for type `string`

    /tmp/tmpb4lnlwci.d(50): Error: no property `sort` for type `int[]`

    /tmp/tmpb4lnlwci.d(54): Error: `switch` statement without a `default`; use `final
    switch` or add `default: assert(0);` or add `default: break;`

    /tmp/tmpb4lnlwci.d(88): Error: no property `stripRight` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpb4lnlwci.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split(\" \");\n\
    \    int[] nums_int = new int[nums.length];\n    foreach(int i, string num; nums)\n\
    \    {\n        nums_int[i] = to!int(num);\n    }\n    nums_int.sort;\n    foreach(int\
    \ i, int num; nums_int)\n    {\n        nums[i] = to!string(num);\n    }\n   \
    \ return nums.join(\" \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"\
    three\");\n    assert(candidate(\"three five nine\") == \"three five nine\");\n\
    \    assert(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\");\n    assert(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpcoa157ns.d(11): Error: no property `split` for type `string`

    /tmp/tmpcoa157ns.d(15): Error: template instance `to!int` template `to` is not
    defined, did you mean No?

    /tmp/tmpcoa157ns.d(17): Error: no property `sort` for type `int[]`

    /tmp/tmpcoa157ns.d(20): Error: template instance `to!string` template `to` is
    not defined, did you mean No?

    /tmp/tmpcoa157ns.d(22): Error: no property `join` for type `string[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcoa157ns.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split(\" \");\n\
    \    string[] nums_sorted = nums.dup;\n    nums_sorted.sort!((a, b) => a.length\
    \ < b.length);\n    string[] nums_sorted_numbers = nums_sorted.map!(a => nums.indexOf(a)).map!(a\
    \ => a.to!string).array;\n    return nums_sorted_numbers.join(\" \");\n}\nunittest\n\
    {\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"three\
    \ five nine\") == \"three five nine\");\n    assert(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp5h4y84vl.d(11): Error: no property `split` for type `string`

    /tmp/tmp5h4y84vl.d(13): Error: no property `sort` for type `string[]`

    /tmp/tmp5h4y84vl.d(14): Error: no property `map` for type `string[]`

    /tmp/tmp5h4y84vl.d(15): Error: no property `join` for type `string[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5h4y84vl.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    auto nums = numbers.split(\" \");\n  \
    \  nums.sort!((a, b) => a.to!int < b.to!int);\n    return nums.join(\" \");\n\
    }\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpj1vb_8w8.d(11): Error: no property `split` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpj1vb_8w8.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split(\" \");\n\
    \    int[] nums_int = new int[nums.length];\n    for (int i = 0; i < nums.length;\
    \ i++)\n    {\n        nums_int[i] = to!int(nums[i]);\n    }\n    sort(nums_int);\n\
    \    string nums_str = \"\";\n    foreach (int i; nums_int)\n    {\n        nums_str\
    \ ~= to!string(i) ~ \" \";\n    }\n    return nums_str;\n}\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpt7d4ijhc.d(11): Error: no property `split` for type `string`

    /tmp/tmpt7d4ijhc.d(15): Error: template instance `to!int` template `to` is not
    defined, did you mean No?

    /tmp/tmpt7d4ijhc.d(17): Error: undefined identifier `sort`, did you mean function
    `sqrt`?

    /tmp/tmpt7d4ijhc.d(21): Error: template instance `to!string` template `to` is
    not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpt7d4ijhc.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split(\" \");\n\
    \    int[] nums_int = new int[nums.length];\n    foreach(i, num; nums)\n    {\n\
    \        switch(num)\n        {\n            case \"zero\":\n                nums_int[i]\
    \ = 0;\n                break;\n            case \"one\":\n                nums_int[i]\
    \ = 1;\n                break;\n            case \"two\":\n                nums_int[i]\
    \ = 2;\n                break;\n            case \"three\":\n                nums_int[i]\
    \ = 3;\n                break;\n            case \"four\":\n                nums_int[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort();\n    foreach(i,\
    \ num; nums_int)\n    {\n        switch(num)\n        {\n            case 0:\n\
    \                nums[i] = \"zero\";\n                break;\n            case\
    \ 1:\n                nums[i] = \"one\";\n                break;\n           \
    \ case 2:\n                nums[i] = \"two\";\n                break;\n      \
    \      case 3:\n                nums[i] = \"three\";\n                break;\n\
    \            case 4:\n                nums[i] = \"four\";\n                break;\n\
    \            case 5:\n                nums[i] = \"five\";\n                break;\n\
    \            case 6:\n                nums[i] = \"six\";\n                break;\n\
    \            case 7:\n                nums[i] = \"seven\";\n                break;\n\
    \            case 8:\n                nums[i] = \"eight\";\n                break;\n\
    \            case 9:\n                nums[i] = \"nine\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpzj6gcnh4.d(87): Error: Implicit string concatenation is deprecated,
    use "nine\x0aunittest\x0a{\x0a    alias candidate = sort_numbers;\x0a\x0a    assert(candidate("
    ~ ") == " instead

    /tmp/tmpzj6gcnh4.d(87): Error: Implicit string concatenation is deprecated, use
    ") == " ~ ");\x0a    assert(candidate(" instead

    /tmp/tmpzj6gcnh4.d(88): Error: found `three` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(88): Error: found `three` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(89): Error: found `three` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(89): Error: found `nine` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(89): Error: found `three` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(89): Error: found `nine` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(90): Error: found `five` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(90): Error: found `four` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(90): Error: found `'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split(\" \");\n\
    \    int[] nums_int = new int[nums.length];\n    foreach(i, num; nums)\n    {\n\
    \        switch(num)\n        {\n            case \"zero\":\n                nums_int[i]\
    \ = 0;\n                break;\n            case \"one\":\n                nums_int[i]\
    \ = 1;\n                break;\n            case \"two\":\n                nums_int[i]\
    \ = 2;\n                break;\n            case \"three\":\n                nums_int[i]\
    \ = 3;\n                break;\n            case \"four\":\n                nums_int[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort();\n    foreach(i,\
    \ num; nums_int)\n    {\n        switch(num)\n        {\n            case 0:\n\
    \                nums[i] = \"zero\";\n                break;\n            case\
    \ 1:\n                nums[i] = \"one\";\n                break;\n           \
    \ case 2:\n                nums[i] = \"two\";\n                break;\n      \
    \      case 3:\n                nums[i] = \"three\";\n                break;\n\
    \            case 4:\n                nums[i] = \"four\";\n                break;\n\
    \            case 5:\n                nums[i] = \"five\";\n                break;\n\
    \            case 6:\n                nums[i] = \"six\";\n                break;\n\
    \            case 7:\n                nums[i] = \"seven\";\n                break;\n\
    \            case 8:\n                nums[i] = \"eight\";\n                break;\n\
    \            case 9:\n                nums[i] = \"nine\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpzj6gcnh4.d(87): Error: Implicit string concatenation is deprecated,
    use "nine\x0aunittest\x0a{\x0a    alias candidate = sort_numbers;\x0a\x0a    assert(candidate("
    ~ ") == " instead

    /tmp/tmpzj6gcnh4.d(87): Error: Implicit string concatenation is deprecated, use
    ") == " ~ ");\x0a    assert(candidate(" instead

    /tmp/tmpzj6gcnh4.d(88): Error: found `three` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(88): Error: found `three` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(89): Error: found `three` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(89): Error: found `nine` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(89): Error: found `three` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(89): Error: found `nine` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(90): Error: found `five` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(90): Error: found `four` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(90): Error: found `'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split(\" \");\n\
    \    int[] nums_int = new int[nums.length];\n    foreach(i, num; nums)\n    {\n\
    \        switch(num)\n        {\n            case \"zero\":\n                nums_int[i]\
    \ = 0;\n                break;\n            case \"one\":\n                nums_int[i]\
    \ = 1;\n                break;\n            case \"two\":\n                nums_int[i]\
    \ = 2;\n                break;\n            case \"three\":\n                nums_int[i]\
    \ = 3;\n                break;\n            case \"four\":\n                nums_int[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort;\n    foreach(i,\
    \ num; nums_int)\n    {\n        switch(num)\n        {\n            case 0:\n\
    \                nums[i] = \"zero\";\n                break;\n            case\
    \ 1:\n                nums[i] = \"one\";\n                break;\n           \
    \ case 2:\n                nums[i] = \"two\";\n                break;\n      \
    \      case 3:\n                nums[i] = \"three\";\n                break;\n\
    \            case 4:\n                nums[i] = \"four\";\n                break;\n\
    \            case 5:\n                nums[i] = \"five\";\n                break;\n\
    \            case 6:\n                nums[i] = \"six\";\n                break;\n\
    \            case 7:\n                nums[i] = \"seven\";\n                break;\n\
    \            case 8:\n                nums[i] = \"eight\";\n                break;\n\
    \            case 9:\n                nums[i] = \"nine\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpsxj9dx32.d(87): Error: Implicit string concatenation is deprecated,
    use "nine\x0aunittest\x0a{\x0a    alias candidate = sort_numbers;\x0a\x0a    assert(candidate("
    ~ ") == " instead

    /tmp/tmpsxj9dx32.d(87): Error: Implicit string concatenation is deprecated, use
    ") == " ~ ");\x0a    assert(candidate(" instead

    /tmp/tmpsxj9dx32.d(88): Error: found `three` when expecting `;` following statement

    /tmp/tmpsxj9dx32.d(88): Error: found `three` when expecting `;` following statement

    /tmp/tmpsxj9dx32.d(89): Error: found `three` when expecting `;` following statement

    /tmp/tmpsxj9dx32.d(89): Error: found `nine` when expecting `;` following statement

    /tmp/tmpsxj9dx32.d(89): Error: found `three` when expecting `;` following statement

    /tmp/tmpsxj9dx32.d(89): Error: found `nine` when expecting `;` following statement

    /tmp/tmpsxj9dx32.d(90): Error: found `five` when expecting `;` following statement

    /tmp/tmpsxj9dx32.d(90): Error: found `four` when expecting `;` following statement

    /tmp/tmpsxj9dx32.d(90): Error: found `'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    int[] nums = new int[numbers.length];\n\
    \    int i = 0;\n    foreach(string num; numbers.split(\" \"))\n    {\n      \
    \  switch(num)\n        {\n            case \"zero\":\n                nums[i]\
    \ = 0;\n                break;\n            case \"one\":\n                nums[i]\
    \ = 1;\n                break;\n            case \"two\":\n                nums[i]\
    \ = 2;\n                break;\n            case \"three\":\n                nums[i]\
    \ = 3;\n                break;\n            case \"four\":\n                nums[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums[i]\
    \ = 9;\n                break;\n        }\n        i++;\n    }\n    nums.sort();\n\
    \    string result = \"\";\n    foreach(int num; nums)\n    {\n        switch(num)\n\
    \        {\n            case 0:\n                result ~= \"zero \";\n      \
    \          break;\n            case 1:\n                result ~= \"one \";\n\
    \                break;\n            case 2:\n                result ~= \"two\
    \ \";\n                break;\n            case 3:\n                result ~=\
    \ \"three \";\n                break;\n            case 4:\n                result\
    \ ~= \"four \";\n                break;\n            case 5:\n               \
    \ result ~= \"five \";\n                break;\n            case 6:\n        \
    \        result ~= \"six \";\n                break;\n            case 7:\n  \
    \              result ~= \"seven \";\n                break;\n            case\
    \ 8:\n                result ~= \"eight \";\n                break;\n        \
    \    case 9:\n                result ~= \"nine \";\n                break;\n \
    \       }\n    }\n    return result.trim();\n}\nunittest\n{\n    alias candidate\
    \ = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmphcvtcss9.d(13): Error: no property `split` for type `string`

    /tmp/tmphcvtcss9.d(50): Error: no property `sort` for type `int[]`

    /tmp/tmphcvtcss9.d(54): Error: `switch` statement without a `default`; use `final
    switch` or add `default: assert(0);` or add `default: break;`

    /tmp/tmphcvtcss9.d(88): Error: no property `trim` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphcvtcss9.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split(\" \");\n\
    \    string[] nums_sorted = nums.sort!((a, b) => a.length < b.length);\n    return\
    \ nums_sorted.join(\" \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"\
    three\");\n    assert(candidate(\"three five nine\") == \"three five nine\");\n\
    \    assert(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\");\n    assert(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpguhyb8uj.d(11): Error: no property `split` for type `string`

    /tmp/tmpguhyb8uj.d(12): Error: no property `sort` for type `string[]`

    /tmp/tmpguhyb8uj.d(13): Error: no property `join` for type `string[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpguhyb8uj.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split(\" \");\n\
    \    int[] nums_int = new int[nums.length];\n    foreach(i, num; nums)\n    {\n\
    \        nums_int[i] = to!int(num);\n    }\n    sort(nums_int);\n    string result\
    \ = \"\";\n    foreach(num; nums_int)\n    {\n        result ~= to!string(num)\
    \ ~ \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"\
    three\");\n    assert(candidate(\"three five nine\") == \"three five nine\");\n\
    \    assert(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\");\n    assert(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp6v0sse3f.d(11): Error: no property `split` for type `string`

    /tmp/tmp6v0sse3f.d(15): Error: template instance `to!int` template `to` is not
    defined, did you mean No?

    /tmp/tmp6v0sse3f.d(17): Error: undefined identifier `sort`, did you mean function
    `sqrt`?

    /tmp/tmp6v0sse3f.d(21): Error: template instance `to!string` template `to` is
    not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6v0sse3f.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split(\" \");\n\
    \    int[] nums_int = new int[nums.length];\n    foreach(i, num; nums)\n    {\n\
    \        switch(num)\n        {\n            case \"zero\":\n                nums_int[i]\
    \ = 0;\n                break;\n            case \"one\":\n                nums_int[i]\
    \ = 1;\n                break;\n            case \"two\":\n                nums_int[i]\
    \ = 2;\n                break;\n            case \"three\":\n                nums_int[i]\
    \ = 3;\n                break;\n            case \"four\":\n                nums_int[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort();\n    string[]\
    \ nums_str = new string[nums_int.length];\n    foreach(i, num; nums_int)\n   \
    \ {\n        switch(num)\n        {\n            case 0:\n                nums_str[i]\
    \ = \"zero\";\n                break;\n            case 1:\n                nums_str[i]\
    \ = \"one\";\n                break;\n            case 2:\n                nums_str[i]\
    \ = \"two\";\n                break;\n            case 3:\n                nums_str[i]\
    \ = \"three\";\n                break;\n            case 4:\n                nums_str[i]\
    \ = \"four\";\n                break;\n            case 5:\n                nums_str[i]\
    \ = \"five\";\n                break;\n            case 6:\n                nums_str[i]\
    \ = \"six\";\n                break;\n            case 7:\n                nums_str[i]\
    \ = \"seven\";\n                break;\nunittest\n{\n    alias candidate = sort_numbers;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"\
    three\");\n    assert(candidate(\"three five nine\") == \"three five nine\");\n\
    \    assert(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\");\n    assert(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpx33u1gnj.d(79): Error: found `unittest` instead of statement

    /tmp/tmpx33u1gnj.d(89): Error: found `End of File` when expecting `}` following
    compound statement

    /tmp/tmpx33u1gnj.d(89): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpx33u1gnj.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split(\" \");\n\
    \    int[] numeral_values = new int[nums.length];\n    foreach(i, num; nums)\n\
    \    {\n        numeral_values[i] = numeral_to_int(num);\n    }\n    sort(numeral_values);\n\
    \    foreach(i, num; numeral_values)\n    {\n        nums[i] = int_to_numeral(num);\n\
    \    }\n    return nums.join(\" \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"\
    three\");\n    assert(candidate(\"three five nine\") == \"three five nine\");\n\
    \    assert(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\");\n    assert(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpspuo3v4n.d(11): Error: no property `split` for type `string`

    /tmp/tmpspuo3v4n.d(15): Error: undefined identifier `numeral_to_int`

    /tmp/tmpspuo3v4n.d(17): Error: undefined identifier `sort`, did you mean function
    `sqrt`?

    /tmp/tmpspuo3v4n.d(20): Error: undefined identifier `int_to_numeral`

    /tmp/tmpspuo3v4n.d(22): Error: no property `join` for type `string[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpspuo3v4n.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    import std.algorithm;\n    import std.conv;\n\
    \    import std.range;\n    import std.string;\n    import std.array;\n    import\
    \ std.typecons;\n    import std.math;\n    import std.stdio;\n    import std.traits;\n\
    \    import std.typecons;\n    import std.math;\n    import std.range;\n    import\
    \ std.algorithm;\n    import std.conv;\n    import std.string;\n    import std.array;\n\
    \    import std.typecons;\n    import std.math;\n    import std.stdio;\n    import\
    \ std.traits;\n    import std.typecons;\n    import std.math;\n    import std.range;\n\
    \    import std.algorithm;\n    import std.conv;\n    import std.string;\n   \
    \ import std.array;\n    import std.typecons;\n    import std.math;\n    import\
    \ std.stdio;\n    import std.traits;\n    import std.typecons;\n    import std.math;\n\
    \    import std.range;\n    import std.algorithm;\n    import std.conv;\n    import\
    \ std.string;\n    import std.array;\n    import std.typecons;\n    import std.math;\n\
    \    import std.stdio;\n    import std.traits;\n    import std.typecons;\n   \
    \ import std.math;\n    import std.range;\n    import std.algorithm;\n    import\
    \ std.conv;\n    import std.string;\n    import std.array;\n    import std.typecons;\n\
    \    import std.math;\n    import std.stdio;\n    import std.traits;\n    import\
    \ std.typecons;\n    import std.math;\n    import std.range;\n    import std.algorithm;\n\
    \    import std.conv;\n    import std.string;\n    import std.array;\n    import\
    \ std.typecons;\n    import std.math;\n    import std.stdio;\n    import std.traits;\n\
    \    import std.typecons;\n    import std.math;\n    import std.range;\n    import\
    \ std.algorithm;\n    import\nunittest\n{\n    alias candidate = sort_numbers;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"\
    three\");\n    assert(candidate(\"three five nine\") == \"three five nine\");\n\
    \    assert(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\");\n    assert(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpxq1ofwbq.d(80): Error: identifier expected following `import`

    /tmp/tmpxq1ofwbq.d(80): Error: `;` expected

    /tmp/tmpxq1ofwbq.d(90): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxq1ofwbq.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split(\" \");\n\
    \    int[] nums_int = new int[nums.length];\n    foreach(i, num; nums)\n    {\n\
    \        switch(num)\n        {\n            case \"zero\":\n                nums_int[i]\
    \ = 0;\n                break;\n            case \"one\":\n                nums_int[i]\
    \ = 1;\n                break;\n            case \"two\":\n                nums_int[i]\
    \ = 2;\n                break;\n            case \"three\":\n                nums_int[i]\
    \ = 3;\n                break;\n            case \"four\":\n                nums_int[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort;\n    string\
    \ result = \"\";\n    foreach(num; nums_int)\n    {\n        switch(num)\n   \
    \     {\n            case 0:\n                result ~= \"zero \";\n         \
    \       break;\n            case 1:\n                result ~= \"one \";\n   \
    \             break;\n            case 2:\n                result ~= \"two \"\
    ;\n                break;\n            case 3:\n                result ~= \"three\
    \ \";\n                break;\n            case 4:\n                result ~=\
    \ \"four \";\n                break;\n            case 5:\n                result\
    \ ~= \"five \";\n                break;\n            case 6:\n               \
    \ result ~= \"six \";\n                break;\n            case 7:\n         \
    \       result ~= \"seven \";\n                break;\n            case 8:\n \
    \               result ~= \"eight \";\n                break;\n            case\
    \ 9:\n                result ~= \"nine \";\n                break;\n        }\n\
    \    }\n    return result\nunittest\n{\n    alias candidate = sort_numbers;\n\n\
    \    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"three\"\
    );\n    assert(candidate(\"three five nine\") == \"three five nine\");\n    assert(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\");\n\
    \    assert(candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpfurnoivd.d(88): Error: found `unittest` when expecting `;` following
    `return` statement

    /tmp/tmpfurnoivd.d(98): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfurnoivd.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    auto nums = numbers.split(\" \");\n  \
    \  auto nums_int = nums.map!(a => to!int(a));\n    nums_int.sort;\n    return\
    \ nums_int.map!(a => to!string(a)).join(\" \");\n}\nunittest\n{\n    alias candidate\
    \ = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpd6gqk6f4.d(11): Error: no property `split` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpd6gqk6f4.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    import std.algorithm : sort;\n    import\
    \ std.conv : to;\n    import std.range : map;\n    import std.array : array;\n\
    \    import std.typecons : tuple;\n    import std.string : split;\n    import\
    \ std.traits : isIntegral;\n    import std.math : isNaN;\n    import std.stdio\
    \ : writeln;\n    import std.typecons : tuple;\n    import std.traits : isIntegral;\n\
    \    import std.math : isNaN;\n    import std.stdio : writeln;\n    import std.typecons\
    \ : tuple;\n    import std.traits : isIntegral;\n    import std.math : isNaN;\n\
    \    import std.stdio : writeln;\n    import std.typecons : tuple;\n    import\
    \ std.traits : isIntegral;\n    import std.math : isNaN;\n    import std.stdio\
    \ : writeln;\n    import std.typecons : tuple;\n    import std.traits : isIntegral;\n\
    \    import std.math : isNaN;\n    import std.stdio : writeln;\n    import std.typecons\
    \ : tuple;\n    import std.traits : isIntegral;\n    import std.math : isNaN;\n\
    \    import std.stdio : writeln;\n    import std.typecons : tuple;\n    import\
    \ std.traits : isIntegral;\n    import std.math : isNaN;\n    import std.stdio\
    \ : writeln;\n    import std.typecons : tuple;\n    import std.traits : isIntegral;\n\
    \    import std.math : isNaN;\n    import std.stdio : writeln;\n    import std.typecons\
    \ : tuple;\n    import std.traits : isIntegral;\n    import std.math : isNaN;\n\
    \    import std.stdio : writeln;\n    import std.typecons : tuple;\n    import\
    \ std.traits : isIntegral;\n    import std.math : isNaN;\n    import std.stdio\
    \ : writeln;\n    import std.typecons : tuple;\n    import std.traits : isIntegral;\n\
    \   \nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp_53s7szj.d(59): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_53s7szj.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split(\" \");\n\
    \    int[] nums_int = new int[nums.length];\n    foreach(i, num; nums)\n    {\n\
    \        switch(num)\n        {\n            case \"zero\":\n                nums_int[i]\
    \ = 0;\n                break;\n            case \"one\":\n                nums_int[i]\
    \ = 1;\n                break;\n            case \"two\":\n                nums_int[i]\
    \ = 2;\n                break;\n            case \"three\":\n                nums_int[i]\
    \ = 3;\n                break;\n            case \"four\":\n                nums_int[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort();\n    foreach(i,\
    \ num; nums_int)\n    {\n        switch(num)\n        {\n            case 0:\n\
    \                nums[i] = \"zero\";\n                break;\n            case\
    \ 1:\n                nums[i] = \"one\";\n                break;\n           \
    \ case 2:\n                nums[i] = \"two\";\n                break;\n      \
    \      case 3:\n                nums[i] = \"three\";\n                break;\n\
    \            case 4:\n                nums[i] = \"four\";\n                break;\n\
    \            case 5:\n                nums[i] = \"five\";\n                break;\n\
    \            case 6:\n                nums[i] = \"six\";\n                break;\n\
    \            case 7:\n                nums[i] = \"seven\";\n                break;\n\
    \            case 8:\n                nums[i] = \"eight\";\n                break;\n\
    \            case 9:\n                nums[i] = \"nine\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpzj6gcnh4.d(87): Error: Implicit string concatenation is deprecated,
    use "nine\x0aunittest\x0a{\x0a    alias candidate = sort_numbers;\x0a\x0a    assert(candidate("
    ~ ") == " instead

    /tmp/tmpzj6gcnh4.d(87): Error: Implicit string concatenation is deprecated, use
    ") == " ~ ");\x0a    assert(candidate(" instead

    /tmp/tmpzj6gcnh4.d(88): Error: found `three` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(88): Error: found `three` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(89): Error: found `three` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(89): Error: found `nine` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(89): Error: found `three` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(89): Error: found `nine` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(90): Error: found `five` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(90): Error: found `four` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(90): Error: found `'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    int[] nums;\n    foreach(string num; numbers.split(\"\
    \ \"))\n    {\n        switch(num)\n        {\n            case \"zero\":\n  \
    \              nums ~= 0;\n                break;\n            case \"one\":\n\
    \                nums ~= 1;\n                break;\n            case \"two\"\
    :\n                nums ~= 2;\n                break;\n            case \"three\"\
    :\n                nums ~= 3;\n                break;\n            case \"four\"\
    :\n                nums ~= 4;\n                break;\n            case \"five\"\
    :\n                nums ~= 5;\n                break;\n            case \"six\"\
    :\n                nums ~= 6;\n                break;\n            case \"seven\"\
    :\n                nums ~= 7;\n                break;\n            case \"eight\"\
    :\n                nums ~= 8;\n                break;\n            case \"nine\"\
    :\n                nums ~= 9;\n                break;\n        }\n    }\n    nums.sort;\n\
    \    string result;\n    foreach(int num; nums)\n    {\n        switch(num)\n\
    \        {\n            case 0:\n                result ~= \"zero \";\n      \
    \          break;\n            case 1:\n                result ~= \"one \";\n\
    \                break;\n            case 2:\n                result ~= \"two\
    \ \";\n                break;\n            case 3:\n                result ~=\
    \ \"three \";\n                break;\n            case 4:\n                result\
    \ ~= \"four \";\n                break;\n            case 5:\n               \
    \ result ~= \"five \";\n                break;\n            case 6:\n        \
    \        result ~= \"six \";\n                break;\n            case 7:\n  \
    \              result ~= \"seven \";\n                break;\n            case\
    \ 8:\n                result ~= \"eight \";\n                break;\n        \
    \    case 9:\n                result ~= \"nine \";\n                break;\n \
    \       }\n    }\n    return result.stripRight;\n}\nunittest\n{\n    alias candidate\
    \ = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp60fk7yrk.d(12): Error: no property `split` for type `string`

    /tmp/tmp60fk7yrk.d(48): Error: no property `sort` for type `int[]`

    /tmp/tmp60fk7yrk.d(52): Error: `switch` statement without a `default`; use `final
    switch` or add `default: assert(0);` or add `default: break;`

    /tmp/tmp60fk7yrk.d(86): Error: no property `stripRight` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp60fk7yrk.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split(\" \");\n\
    \    string[] nums_sorted = nums.dup;\n    nums_sorted.sort!((a, b) => a.compare(b));\n\
    \    return nums_sorted.join(\" \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"\
    three\");\n    assert(candidate(\"three five nine\") == \"three five nine\");\n\
    \    assert(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\");\n    assert(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4sql963s.d(11): Error: no property `split` for type `string`

    /tmp/tmp4sql963s.d(13): Error: no property `sort` for type `string[]`

    /tmp/tmp4sql963s.d(14): Error: no property `join` for type `string[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4sql963s.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    int[] nums = numbers.split(\" \").map!(a\
    \ => to!int(a)).array();\n    sort(nums);\n    return nums.map!(a => to!string(a)).join(\"\
    \ \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpej2h6u1r.d(11): Error: no property `split` for type `string`

    /tmp/tmpej2h6u1r.d(12): Error: undefined identifier `sort`, did you mean function
    `sqrt`?

    /tmp/tmpej2h6u1r.d(13): Error: no property `map` for type `int[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpej2h6u1r.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split(\" \");\n\
    \    string[] nums_sorted = nums.dup;\n    nums_sorted.sort;\n    string[] nums_sorted_str\
    \ = nums_sorted.map!(a => to!string(a));\n    string[] nums_sorted_str_int = nums_sorted_str.map!(a\
    \ => to!int(a));\n    string[] nums_sorted_str_int_str = nums_sorted_str_int.map!(a\
    \ => to!string(a));\n    string[] nums_sorted_str_int_str_num = nums_sorted_str_int_str.map!(a\
    \ => to!string(a));\n    string[] nums_sorted_str_int_str_num_sorted = nums_sorted_str_int_str_num.dup;\n\
    \    nums_sorted_str_int_str_num_sorted.sort;\n    return nums_sorted_str_int_str_num_sorted.join(\"\
    \ \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpnou4zdyl.d(11): Error: no property `split` for type `string`

    /tmp/tmpnou4zdyl.d(13): Error: no property `sort` for type `string[]`

    /tmp/tmpnou4zdyl.d(14): Error: no property `map` for type `string[]`

    /tmp/tmpnou4zdyl.d(15): Error: no property `map` for type `string[]`

    /tmp/tmpnou4zdyl.d(16): Error: no property `map` for type `string[]`

    /tmp/tmpnou4zdyl.d(17): Error: no property `map` for type `string[]`

    /tmp/tmpnou4zdyl.d(19): Error: no property `sort` for type `string[]`

    /tmp/tmpnou4zdyl.d(20): Error: no property `join` for type `string[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnou4zdyl.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164104
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split(\" \");\n\
    \    int[] nums_int = new int[nums.length];\n    foreach(i, num; nums)\n    {\n\
    \        switch(num)\n        {\n            case \"zero\": nums_int[i] = 0; break;\n\
    \            case \"one\": nums_int[i] = 1; break;\n            case \"two\":\
    \ nums_int[i] = 2; break;\n            case \"three\": nums_int[i] = 3; break;\n\
    \            case \"four\": nums_int[i] = 4; break;\n            case \"five\"\
    : nums_int[i] = 5; break;\n            case \"six\": nums_int[i] = 6; break;\n\
    \            case \"seven\": nums_int[i] = 7; break;\n            case \"eight\"\
    : nums_int[i] = 8; break;\n            case \"nine\": nums_int[i] = 9; break;\n\
    \        }\n    }\n    nums_int.sort();\n    foreach(i, num; nums_int)\n    {\n\
    \        switch(num)\n        {\n            case 0: nums[i] = \"zero\"; break;\n\
    \            case 1: nums[i] = \"one\"; break;\n            case 2: nums[i] =\
    \ \"two\"; break;\n            case 3: nums[i] = \"three\"; break;\n         \
    \   case 4: nums[i] = \"four\"; break;\n            case 5: nums[i] = \"five\"\
    ; break;\n            case 6: nums[i] = \"six\"; break;\n            case 7: nums[i]\
    \ = \"seven\"; break;\n            case 8: nums[i] = \"eight\"; break;\n     \
    \       case 9: nums[i] = \"nine\"; break;\n        }\n    }\n    return nums.join(\"\
    \ \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp90ozul6z.d(11): Error: no property `split` for type `string`

    /tmp/tmp90ozul6z.d(15): Error: `switch` statement without a `default`; use `final
    switch` or add `default: assert(0);` or add `default: break;`

    /tmp/tmp90ozul6z.d(29): Error: no property `sort` for type `int[]`

    /tmp/tmp90ozul6z.d(32): Error: `switch` statement without a `default`; use `final
    switch` or add `default: assert(0);` or add `default: break;`

    /tmp/tmp90ozul6z.d(46): Error: no property `join` for type `string[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp90ozul6z.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split(\" \");\n\
    \    string[] nums_sorted = nums.dup;\n    nums_sorted.sort;\n    string result\
    \ = \"\";\n    foreach(string num; nums)\n    {\n        if(num == \"zero\")\n\
    \            result ~= \"0\";\n        else if(num == \"one\")\n            result\
    \ ~= \"1\";\n        else if(num == \"two\")\n            result ~= \"2\";\n \
    \       else if(num == \"three\")\n            result ~= \"3\";\n        else\
    \ if(num == \"four\")\n            result ~= \"4\";\n        else if(num == \"\
    five\")\n            result ~= \"5\";\n        else if(num == \"six\")\n     \
    \       result ~= \"6\";\n        else if(num == \"seven\")\n            result\
    \ ~= \"7\";\n        else if(num == \"eight\")\n            result ~= \"8\";\n\
    \        else if(num == \"nine\")\n            result ~= \"9\";\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp0mkaq77t.d(11): Error: no property `split` for type `string`

    /tmp/tmp0mkaq77t.d(13): Error: no property `sort` for type `string[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0mkaq77t.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split(\" \");\n\
    \    int[] nums_int = new int[nums.length];\n    for (int i = 0; i < nums.length;\
    \ i++)\n    {\n        switch (nums[i])\n        {\n            case \"zero\"\
    :\n                nums_int[i] = 0;\n                break;\n            case\
    \ \"one\":\n                nums_int[i] = 1;\n                break;\n       \
    \     case \"two\":\n                nums_int[i] = 2;\n                break;\n\
    \            case \"three\":\n                nums_int[i] = 3;\n             \
    \   break;\n            case \"four\":\n                nums_int[i] = 4;\n   \
    \             break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort();\n    for\
    \ (int i = 0; i < nums.length; i++)\n    {\n        switch (nums_int[i])\n   \
    \     {\n            case 0:\n                nums[i] = \"zero\";\n          \
    \      break;\n            case 1:\n                nums[i] = \"one\";\n     \
    \           break;\n            case 2:\n                nums[i] = \"two\";\n\
    \                break;\n            case 3:\n                nums[i] = \"three\"\
    ;\n                break;\n            case 4:\n                nums[i] = \"four\"\
    ;\n                break;\n            case 5:\n                nums[i] = \"five\"\
    ;\n                break;\n            case 6:\n                nums[i] = \"six\"\
    ;\n                break;\n            case 7:\n                nums[i] = \"seven\"\
    ;\n                break;\n            case 8:\n                nums[i] = \"eight\"\
    ;\n\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmprpob1qkm.d(81): Error: found `unittest` instead of statement

    /tmp/tmprpob1qkm.d(91): Error: found `End of File` when expecting `}` following
    compound statement

    /tmp/tmprpob1qkm.d(91): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprpob1qkm.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split(\" \");\n\
    \    int[] nums_int = new int[nums.length];\n    foreach(i, num; nums)\n    {\n\
    \        switch(num)\n        {\n            case \"zero\":\n                nums_int[i]\
    \ = 0;\n                break;\n            case \"one\":\n                nums_int[i]\
    \ = 1;\n                break;\n            case \"two\":\n                nums_int[i]\
    \ = 2;\n                break;\n            case \"three\":\n                nums_int[i]\
    \ = 3;\n                break;\n            case \"four\":\n                nums_int[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort;\n    string\
    \ result = \"\";\n    foreach(num; nums_int)\n    {\n        switch(num)\n   \
    \     {\n            case 0:\n                result ~= \"zero \";\n         \
    \       break;\n            case 1:\n                result ~= \"one \";\n   \
    \             break;\n            case 2:\n                result ~= \"two \"\
    ;\n                break;\n            case 3:\n                result ~= \"three\
    \ \";\n                break;\n            case 4:\n                result ~=\
    \ \"four \";\n                break;\n            case 5:\n                result\
    \ ~= \"five \";\n                break;\n            case 6:\n               \
    \ result ~= \"six \";\n                break;\n            case 7:\n         \
    \       result ~= \"seven \";\n                break;\n            case 8:\n \
    \               result ~= \"eight \";\n                break;\n            case\
    \ 9:\n                result ~= \"nine \";\n                break;\n        }\n\
    \    }\n    return result\nunittest\n{\n    alias candidate = sort_numbers;\n\n\
    \    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"three\"\
    );\n    assert(candidate(\"three five nine\") == \"three five nine\");\n    assert(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\");\n\
    \    assert(candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpfurnoivd.d(88): Error: found `unittest` when expecting `;` following
    `return` statement

    /tmp/tmpfurnoivd.d(98): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfurnoivd.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split(\" \");\n\
    \    string[] nums_sorted = nums.dup;\n    nums_sorted.sort;\n    string result\
    \ = \"\";\n    foreach(string num; nums_sorted)\n    {\n        result ~= num\
    \ ~ \" \";\n    }\n    return result.trimRight;\n}\nunittest\n{\n    alias candidate\
    \ = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpeg7uiiey.d(11): Error: no property `split` for type `string`

    /tmp/tmpeg7uiiey.d(13): Error: no property `sort` for type `string[]`

    /tmp/tmpeg7uiiey.d(19): Error: no property `trimRight` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpeg7uiiey.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164104
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    int[] nums;\n    foreach(immutable word;\
    \ numbers.split)\n    {\n        switch(word)\n        {\n            case \"\
    zero\": nums ~= 0; break;\n            case \"one\": nums ~= 1; break;\n     \
    \       case \"two\": nums ~= 2; break;\n            case \"three\": nums ~= 3;\
    \ break;\n            case \"four\": nums ~= 4; break;\n            case \"five\"\
    : nums ~= 5; break;\n            case \"six\": nums ~= 6; break;\n           \
    \ case \"seven\": nums ~= 7; break;\n            case \"eight\": nums ~= 8; break;\n\
    \            case \"nine\": nums ~= 9; break;\n        }\n    }\n    nums.sort;\n\
    \    string[] words;\n    foreach(immutable num; nums)\n    {\n        switch(num)\n\
    \        {\n            case 0: words ~= \"zero\"; break;\n            case 1:\
    \ words ~= \"one\"; break;\n            case 2: words ~= \"two\"; break;\n   \
    \         case 3: words ~= \"three\"; break;\n            case 4: words ~= \"\
    four\"; break;\n            case 5: words ~= \"five\"; break;\n            case\
    \ 6: words ~= \"six\"; break;\n            case 7: words ~= \"seven\"; break;\n\
    \            case 8: words ~= \"eight\"; break;\n            case 9: words ~=\
    \ \"nine\"; break;\n        }\n    }\n    return words.join(\" \");\n}\nunittest\n\
    {\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"three\
    \ five nine\") == \"three five nine\");\n    assert(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpyvgkiauv.d(12): Error: no property `split` for type `string`

    /tmp/tmpyvgkiauv.d(28): Error: no property `sort` for type `int[]`

    /tmp/tmpyvgkiauv.d(32): Error: `switch` statement without a `default`; use `final
    switch` or add `default: assert(0);` or add `default: break;`

    /tmp/tmpyvgkiauv.d(46): Error: no property `join` for type `string[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyvgkiauv.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split(\" \");\n\
    \    int[] nums_int = new int[nums.length];\n    foreach(i, num; nums)\n    {\n\
    \        nums_int[i] = to!int(num);\n    }\n    sort(nums_int);\n    string result\
    \ = \"\";\n    foreach(num; nums_int)\n    {\n        result ~= to!string(num)\
    \ ~ \" \";\n    }\n    return result.stripRight();\n}\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp8zsamoms.d(11): Error: no property `split` for type `string`

    /tmp/tmp8zsamoms.d(15): Error: template instance `to!int` template `to` is not
    defined, did you mean No?

    /tmp/tmp8zsamoms.d(17): Error: undefined identifier `sort`, did you mean function
    `sqrt`?

    /tmp/tmp8zsamoms.d(21): Error: template instance `to!string` template `to` is
    not defined, did you mean No?

    /tmp/tmp8zsamoms.d(23): Error: no property `stripRight` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8zsamoms.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164104
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    int[] nums = new int[numbers.length];\n\
    \    int i = 0;\n    foreach(string numeral; numbers.split(\" \"))\n    {\n  \
    \      switch(numeral)\n        {\n            case \"zero\": nums[i] = 0; break;\n\
    \            case \"one\": nums[i] = 1; break;\n            case \"two\": nums[i]\
    \ = 2; break;\n            case \"three\": nums[i] = 3; break;\n            case\
    \ \"four\": nums[i] = 4; break;\n            case \"five\": nums[i] = 5; break;\n\
    \            case \"six\": nums[i] = 6; break;\n            case \"seven\": nums[i]\
    \ = 7; break;\n            case \"eight\": nums[i] = 8; break;\n            case\
    \ \"nine\": nums[i] = 9; break;\n        }\n        i++;\n    }\n    sort(nums);\n\
    \    string result = \"\";\n    foreach(int num; nums)\n    {\n        switch(num)\n\
    \        {\n            case 0: result ~= \"zero \"; break;\n            case\
    \ 1: result ~= \"one \"; break;\n            case 2: result ~= \"two \"; break;\n\
    \            case 3: result ~= \"three \"; break;\n            case 4: result\
    \ ~= \"four \"; break;\n            case 5: result ~= \"five \"; break;\n    \
    \        case 6: result ~= \"six \"; break;\n            case 7: result ~= \"\
    seven \"; break;\n            case 8: result ~= \"eight \"; break;\n         \
    \   case 9: result ~= \"nine \"; break;\n        }\n    }\n    return result.stripRight;\n\
    }\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp81bu8plx.d(13): Error: no property `split` for type `string`

    /tmp/tmp81bu8plx.d(30): Error: undefined identifier `sort`, did you mean function
    `sqrt`?

    /tmp/tmp81bu8plx.d(34): Error: `switch` statement without a `default`; use `final
    switch` or add `default: assert(0);` or add `default: break;`

    /tmp/tmp81bu8plx.d(48): Error: no property `stripRight` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp81bu8plx.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split(\" \");\n\
    \    int[] nums_int = new int[nums.length];\n    foreach(i, num; nums)\n    {\n\
    \        switch(num)\n        {\n            case \"zero\":\n                nums_int[i]\
    \ = 0;\n                break;\n            case \"one\":\n                nums_int[i]\
    \ = 1;\n                break;\n            case \"two\":\n                nums_int[i]\
    \ = 2;\n                break;\n            case \"three\":\n                nums_int[i]\
    \ = 3;\n                break;\n            case \"four\":\n                nums_int[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort;\n    string\
    \ result = \"\";\n    foreach(i, num; nums_int)\n    {\n        switch(num)\n\
    \        {\n            case 0:\n                result ~= \"zero\";\n       \
    \         break;\n            case 1:\n                result ~= \"one\";\n  \
    \              break;\n            case 2:\n                result ~= \"two\"\
    ;\n                break;\n            case 3:\n                result ~= \"three\"\
    ;\n                break;\n            case 4:\n                result ~= \"four\"\
    ;\n                break;\n            case 5:\n                result ~= \"five\"\
    ;\n                break;\n            case 6:\n                result ~= \"six\"\
    ;\n                break;\n            case 7:\n                result ~= \"seven\"\
    ;\n                break;\n            case 8:\n                result ~= \"eight\"\
    ;\n                break;\n            case 9:\n                result ~= \"nine\"\
    ;\n                break;\n        }\n        if(i != nums_int.length - 1)\nunittest\n\
    {\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"three\
    \ five nine\") == \"three five nine\");\n    assert(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpakg_uf78.d(87): Error: found `unittest` instead of statement

    /tmp/tmpakg_uf78.d(97): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpakg_uf78.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split(\" \");\n\
    \    int[] nums_int = new int[nums.length];\n    foreach(i, num; nums)\n    {\n\
    \        switch(num)\n        {\n            case \"zero\":\n                nums_int[i]\
    \ = 0;\n                break;\n            case \"one\":\n                nums_int[i]\
    \ = 1;\n                break;\n            case \"two\":\n                nums_int[i]\
    \ = 2;\n                break;\n            case \"three\":\n                nums_int[i]\
    \ = 3;\n                break;\n            case \"four\":\n                nums_int[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort!((a, b) =>\
    \ a < b);\n    foreach(i, num; nums_int)\n    {\n        switch(num)\n       \
    \ {\n            case 0:\n                nums[i] = \"zero\";\n              \
    \  break;\n            case 1:\n                nums[i] = \"one\";\n         \
    \       break;\n            case 2:\n                nums[i] = \"two\";\n    \
    \            break;\n            case 3:\n                nums[i] = \"three\"\
    ;\n                break;\n            case 4:\n                nums[i] = \"four\"\
    ;\n                break;\n            case 5:\n                nums[i] = \"five\"\
    ;\n                break;\n            case 6:\n                nums[i] = \"six\"\
    ;\n                break;\n            case 7:\n                nums[i] = \"seven\"\
    ;\n                break;\n            case 8:\n                nums[i] = \"eight\"\
    ;\n                break;\n            case 9:\nunittest\n{\n    alias candidate\
    \ = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp8wnvkhau.d(82): Error: found `unittest` instead of statement

    /tmp/tmp8wnvkhau.d(92): Error: found `End of File` when expecting `}` following
    compound statement

    /tmp/tmp8wnvkhau.d(92): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8wnvkhau.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split(\" \");\n\
    \    nums.sort!((a, b) => a.compare(b));\n    return nums.join(\" \");\n}\nunittest\n\
    {\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"three\
    \ five nine\") == \"three five nine\");\n    assert(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpawr_asr7.d(11): Error: no property `split` for type `string`

    /tmp/tmpawr_asr7.d(12): Error: no property `sort` for type `string[]`

    /tmp/tmpawr_asr7.d(13): Error: no property `join` for type `string[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpawr_asr7.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164104
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split(\" \");\n\
    \    int[] nums_int = new int[nums.length];\n    foreach(i, num; nums)\n    {\n\
    \        nums_int[i] = to!int(num);\n    }\n    nums_int.sort();\n    foreach(i,\
    \ num; nums_int)\n    {\n        nums[i] = to!string(num);\n    }\n    return\
    \ nums.join(\" \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n \
    \   assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"three\"\
    );\n    assert(candidate(\"three five nine\") == \"three five nine\");\n    assert(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\");\n\
    \    assert(candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp9ne47o1g.d(11): Error: no property `split` for type `string`

    /tmp/tmp9ne47o1g.d(15): Error: template instance `to!int` template `to` is not
    defined, did you mean No?

    /tmp/tmp9ne47o1g.d(17): Error: no property `sort` for type `int[]`

    /tmp/tmp9ne47o1g.d(20): Error: template instance `to!string` template `to` is
    not defined, did you mean No?

    /tmp/tmp9ne47o1g.d(22): Error: no property `join` for type `string[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9ne47o1g.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164104
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split(\" \");\n\
    \    int[] nums_int = new int[nums.length];\n    foreach(i, num; nums)\n    {\n\
    \        nums_int[i] = num_to_int(num);\n    }\n    nums_int.sort;\n    foreach(i,\
    \ num; nums_int)\n    {\n        nums[i] = int_to_num(num);\n    }\n    return\
    \ nums.join(\" \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n \
    \   assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"three\"\
    );\n    assert(candidate(\"three five nine\") == \"three five nine\");\n    assert(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\");\n\
    \    assert(candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpss6tcppy.d(11): Error: no property `split` for type `string`

    /tmp/tmpss6tcppy.d(15): Error: undefined identifier `num_to_int`

    /tmp/tmpss6tcppy.d(17): Error: no property `sort` for type `int[]`

    /tmp/tmpss6tcppy.d(20): Error: undefined identifier `int_to_num`

    /tmp/tmpss6tcppy.d(22): Error: no property `join` for type `string[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpss6tcppy.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164104
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split(\" \");\n\
    \    int[] nums_int = new int[nums.length];\n    foreach(i, num; nums)\n    {\n\
    \        switch(num)\n        {\n            case \"zero\":\n                nums_int[i]\
    \ = 0;\n                break;\n            case \"one\":\n                nums_int[i]\
    \ = 1;\n                break;\n            case \"two\":\n                nums_int[i]\
    \ = 2;\n                break;\n            case \"three\":\n                nums_int[i]\
    \ = 3;\n                break;\n            case \"four\":\n                nums_int[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort;\n    foreach(i,\
    \ num; nums_int)\n    {\n        switch(num)\n        {\n            case 0:\n\
    \                nums[i] = \"zero\";\n                break;\n            case\
    \ 1:\n                nums[i] = \"one\";\n                break;\n           \
    \ case 2:\n                nums[i] = \"two\";\n                break;\n      \
    \      case 3:\n                nums[i] = \"three\";\n                break;\n\
    \            case 4:\n                nums[i] = \"four\";\n                break;\n\
    \            case 5:\n                nums[i] = \"five\";\n                break;\n\
    \            case 6:\n                nums[i] = \"six\";\n                break;\n\
    \            case 7:\n                nums[i] = \"seven\";\n                break;\n\
    \            case 8:\n                nums[i] = \"eight\";\n                break;\n\
    \            case 9:\n                nums[i] = \"nine\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpsxj9dx32.d(87): Error: Implicit string concatenation is deprecated,
    use "nine\x0aunittest\x0a{\x0a    alias candidate = sort_numbers;\x0a\x0a    assert(candidate("
    ~ ") == " instead

    /tmp/tmpsxj9dx32.d(87): Error: Implicit string concatenation is deprecated, use
    ") == " ~ ");\x0a    assert(candidate(" instead

    /tmp/tmpsxj9dx32.d(88): Error: found `three` when expecting `;` following statement

    /tmp/tmpsxj9dx32.d(88): Error: found `three` when expecting `;` following statement

    /tmp/tmpsxj9dx32.d(89): Error: found `three` when expecting `;` following statement

    /tmp/tmpsxj9dx32.d(89): Error: found `nine` when expecting `;` following statement

    /tmp/tmpsxj9dx32.d(89): Error: found `three` when expecting `;` following statement

    /tmp/tmpsxj9dx32.d(89): Error: found `nine` when expecting `;` following statement

    /tmp/tmpsxj9dx32.d(90): Error: found `five` when expecting `;` following statement

    /tmp/tmpsxj9dx32.d(90): Error: found `four` when expecting `;` following statement

    /tmp/tmpsxj9dx32.d(90): Error: found `'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split(\" \");\n\
    \    string[] nums_sorted = nums.sort!((a, b) => a.compare(b));\n    return nums_sorted.join(\"\
    \ \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp3z9d3zcd.d(11): Error: no property `split` for type `string`

    /tmp/tmp3z9d3zcd.d(12): Error: no property `sort` for type `string[]`

    /tmp/tmp3z9d3zcd.d(13): Error: no property `join` for type `string[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3z9d3zcd.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split(\" \");\n\
    \    int[] nums_int = new int[nums.length];\n    foreach(i, num; nums)\n    {\n\
    \        switch(num)\n        {\n            case \"zero\":\n                nums_int[i]\
    \ = 0;\n                break;\n            case \"one\":\n                nums_int[i]\
    \ = 1;\n                break;\n            case \"two\":\n                nums_int[i]\
    \ = 2;\n                break;\n            case \"three\":\n                nums_int[i]\
    \ = 3;\n                break;\n            case \"four\":\n                nums_int[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort();\n    foreach(i,\
    \ num; nums_int)\n    {\n        switch(num)\n        {\n            case 0:\n\
    \                nums[i] = \"zero\";\n                break;\n            case\
    \ 1:\n                nums[i] = \"one\";\n                break;\n           \
    \ case 2:\n                nums[i] = \"two\";\n                break;\n      \
    \      case 3:\n                nums[i] = \"three\";\n                break;\n\
    \            case 4:\n                nums[i] = \"four\";\n                break;\n\
    \            case 5:\n                nums[i] = \"five\";\n                break;\n\
    \            case 6:\n                nums[i] = \"six\";\n                break;\n\
    \            case 7:\n                nums[i] = \"seven\";\n                break;\n\
    \            case 8:\n                nums[i] = \"eight\";\n                break;\n\
    \            case 9:\n                nums[i] = \"nine\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpzj6gcnh4.d(87): Error: Implicit string concatenation is deprecated,
    use "nine\x0aunittest\x0a{\x0a    alias candidate = sort_numbers;\x0a\x0a    assert(candidate("
    ~ ") == " instead

    /tmp/tmpzj6gcnh4.d(87): Error: Implicit string concatenation is deprecated, use
    ") == " ~ ");\x0a    assert(candidate(" instead

    /tmp/tmpzj6gcnh4.d(88): Error: found `three` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(88): Error: found `three` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(89): Error: found `three` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(89): Error: found `nine` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(89): Error: found `three` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(89): Error: found `nine` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(90): Error: found `five` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(90): Error: found `four` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(90): Error: found `'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split;\n    string[]\
    \ nums_sorted = nums.sort;\n    string result = \"\";\n    foreach(string num;\
    \ nums_sorted)\n    {\n        result ~= num ~ \" \";\n    }\n    return result.stripRight;\n\
    }\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpoa07gd1x.d(11): Error: no property `split` for type `string`

    /tmp/tmpoa07gd1x.d(12): Error: no property `sort` for type `string[]`

    /tmp/tmpoa07gd1x.d(18): Error: no property `stripRight` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpoa07gd1x.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split(\" \");\n\
    \    int[] nums_int = new int[nums.length];\n    foreach(i, num; nums)\n    {\n\
    \        switch(num)\n        {\n            case \"zero\":\n                nums_int[i]\
    \ = 0;\n                break;\n            case \"one\":\n                nums_int[i]\
    \ = 1;\n                break;\n            case \"two\":\n                nums_int[i]\
    \ = 2;\n                break;\n            case \"three\":\n                nums_int[i]\
    \ = 3;\n                break;\n            case \"four\":\n                nums_int[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort;\n    foreach(i,\
    \ num; nums_int)\n    {\n        switch(num)\n        {\n            case 0:\n\
    \                nums[i] = \"zero\";\n                break;\n            case\
    \ 1:\n                nums[i] = \"one\";\n                break;\n           \
    \ case 2:\n                nums[i] = \"two\";\n                break;\n      \
    \      case 3:\n                nums[i] = \"three\";\n                break;\n\
    \            case 4:\n                nums[i] = \"four\";\n                break;\n\
    \            case 5:\n                nums[i] = \"five\";\n                break;\n\
    \            case 6:\n                nums[i] = \"six\";\n                break;\n\
    \            case 7:\n                nums[i] = \"seven\";\n                break;\n\
    \            case 8:\n                nums[i] = \"eight\";\n                break;\n\
    \            case 9:\n                nums[i] = \"nine\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpsxj9dx32.d(87): Error: Implicit string concatenation is deprecated,
    use "nine\x0aunittest\x0a{\x0a    alias candidate = sort_numbers;\x0a\x0a    assert(candidate("
    ~ ") == " instead

    /tmp/tmpsxj9dx32.d(87): Error: Implicit string concatenation is deprecated, use
    ") == " ~ ");\x0a    assert(candidate(" instead

    /tmp/tmpsxj9dx32.d(88): Error: found `three` when expecting `;` following statement

    /tmp/tmpsxj9dx32.d(88): Error: found `three` when expecting `;` following statement

    /tmp/tmpsxj9dx32.d(89): Error: found `three` when expecting `;` following statement

    /tmp/tmpsxj9dx32.d(89): Error: found `nine` when expecting `;` following statement

    /tmp/tmpsxj9dx32.d(89): Error: found `three` when expecting `;` following statement

    /tmp/tmpsxj9dx32.d(89): Error: found `nine` when expecting `;` following statement

    /tmp/tmpsxj9dx32.d(90): Error: found `five` when expecting `;` following statement

    /tmp/tmpsxj9dx32.d(90): Error: found `four` when expecting `;` following statement

    /tmp/tmpsxj9dx32.d(90): Error: found `'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split(\" \");\n\
    \    string[] nums_sorted = nums.dup;\n    nums_sorted.sort;\n    string result\
    \ = \"\";\n    foreach(string num; nums)\n    {\n        result ~= nums_sorted[num.to!int];\n\
    \        if(num != nums[$-1])\n            result ~= \" \";\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp98zw7rmo.d(11): Error: no property `split` for type `string`

    /tmp/tmp98zw7rmo.d(13): Error: no property `sort` for type `string[]`

    /tmp/tmp98zw7rmo.d(17): Error: no property `to` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp98zw7rmo.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164104
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split(\" \");\n\
    \    string[] nums_sorted = nums.dup;\n    nums_sorted.sort;\n    string result\
    \ = \"\";\n    foreach(string num; nums)\n    {\n        int index = nums_sorted.find(num);\n\
    \        if(index == -1)\n            continue;\n        result ~= num;\n    \
    \    nums_sorted[index] = \"\";\n        if(nums_sorted.length > 1)\n        \
    \    result ~= \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp9a_qtb9b.d(11): Error: no property `split` for type `string`

    /tmp/tmp9a_qtb9b.d(13): Error: no property `sort` for type `string[]`

    /tmp/tmp9a_qtb9b.d(17): Error: no property `find` for type `string[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9a_qtb9b.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164104
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    int[] nums = new int[numbers.length];\n\
    \    int i = 0;\n    foreach(string num; numbers.split(\" \"))\n    {\n      \
    \  switch(num)\n        {\n            case \"zero\":\n                nums[i]\
    \ = 0;\n                break;\n            case \"one\":\n                nums[i]\
    \ = 1;\n                break;\n            case \"two\":\n                nums[i]\
    \ = 2;\n                break;\n            case \"three\":\n                nums[i]\
    \ = 3;\n                break;\n            case \"four\":\n                nums[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums[i]\
    \ = 9;\n                break;\n        }\n        i++;\n    }\n    nums.sort();\n\
    \    string result = \"\";\n    foreach(int num; nums)\n    {\n        switch(num)\n\
    \        {\n            case 0:\n                result ~= \"zero \";\n      \
    \          break;\n            case 1:\n                result ~= \"one \";\n\
    \                break;\n            case 2:\n                result ~= \"two\
    \ \";\n                break;\n            case 3:\n                result ~=\
    \ \"three \";\n                break;\n            case 4:\n                result\
    \ ~= \"four \";\n                break;\n            case 5:\n               \
    \ result ~= \"five \";\n                break;\n            case 6:\n        \
    \        result ~= \"six \";\n                break;\n            case 7:\n  \
    \              result ~= \"seven \";\n                break;\n            case\
    \ 8:\n                result ~= \"eight \";\n                break;\n        \
    \    case 9:\n                result ~= \"nine \";\n                break;\n \
    \       }\n    }\n    return result.stripRight;\n}\nunittest\n{\n    alias candidate\
    \ = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp3zu5ffd4.d(13): Error: no property `split` for type `string`

    /tmp/tmp3zu5ffd4.d(50): Error: no property `sort` for type `int[]`

    /tmp/tmp3zu5ffd4.d(54): Error: `switch` statement without a `default`; use `final
    switch` or add `default: assert(0);` or add `default: break;`

    /tmp/tmp3zu5ffd4.d(88): Error: no property `stripRight` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3zu5ffd4.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164104
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split(\" \");\n\
    \    string[] nums_sorted = nums.dup;\n    nums_sorted.sort!((a, b) => a.compare(b));\n\
    \    return nums_sorted.join(\" \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"\
    three\");\n    assert(candidate(\"three five nine\") == \"three five nine\");\n\
    \    assert(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\");\n    assert(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4sql963s.d(11): Error: no property `split` for type `string`

    /tmp/tmp4sql963s.d(13): Error: no property `sort` for type `string[]`

    /tmp/tmp4sql963s.d(14): Error: no property `join` for type `string[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4sql963s.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split(\" \");\n\
    \    string[] nums_sorted = nums.dup;\n    nums_sorted.sort!((a, b) => a.compare(b));\n\
    \    string[] nums_sorted_str = nums_sorted.map!(a => a.to!string);\n    string\
    \ nums_sorted_str_joined = nums_sorted_str.join(\" \");\n    return nums_sorted_str_joined;\n\
    }\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpiqurulvx.d(11): Error: no property `split` for type `string`

    /tmp/tmpiqurulvx.d(13): Error: no property `sort` for type `string[]`

    /tmp/tmpiqurulvx.d(14): Error: no property `map` for type `string[]`

    /tmp/tmpiqurulvx.d(15): Error: no property `join` for type `string[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpiqurulvx.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164104
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split(\" \");\n\
    \    int[] num_ints = new int[nums.length];\n    foreach(i, num; nums)\n    {\n\
    \        num_ints[i] = to!int(num);\n    }\n    num_ints.sort;\n    string result\
    \ = \"\";\n    foreach(num; num_ints)\n    {\n        result ~= to!string(num)\
    \ ~ \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"\
    three\");\n    assert(candidate(\"three five nine\") == \"three five nine\");\n\
    \    assert(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\");\n    assert(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp8e_i64_5.d(11): Error: no property `split` for type `string`

    /tmp/tmp8e_i64_5.d(15): Error: template instance `to!int` template `to` is not
    defined, did you mean No?

    /tmp/tmp8e_i64_5.d(17): Error: no property `sort` for type `int[]`

    /tmp/tmp8e_i64_5.d(21): Error: template instance `to!string` template `to` is
    not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8e_i64_5.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164104
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    int[] nums = numbers.split(\" \").map!(a\
    \ => to!int(a)).array;\n    sort(nums);\n    return nums.map!(a => to!string(a)).join(\"\
    \ \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpeqtkoyj4.d(11): Error: no property `split` for type `string`

    /tmp/tmpeqtkoyj4.d(12): Error: undefined identifier `sort`, did you mean function
    `sqrt`?

    /tmp/tmpeqtkoyj4.d(13): Error: no property `map` for type `int[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpeqtkoyj4.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split(\" \");\n\
    \    int[] nums_int = new int[nums.length];\n    foreach(i, num; nums)\n    {\n\
    \        switch(num)\n        {\n            case \"zero\": nums_int[i] = 0; break;\n\
    \            case \"one\": nums_int[i] = 1; break;\n            case \"two\":\
    \ nums_int[i] = 2; break;\n            case \"three\": nums_int[i] = 3; break;\n\
    \            case \"four\": nums_int[i] = 4; break;\n            case \"five\"\
    : nums_int[i] = 5; break;\n            case \"six\": nums_int[i] = 6; break;\n\
    \            case \"seven\": nums_int[i] = 7; break;\n            case \"eight\"\
    : nums_int[i] = 8; break;\n            case \"nine\": nums_int[i] = 9; break;\n\
    \        }\n    }\n    nums_int.sort;\n    string[] nums_sorted = new string[nums.length];\n\
    \    foreach(i, num; nums_int)\n    {\n        switch(num)\n        {\n      \
    \      case 0: nums_sorted[i] = \"zero\"; break;\n            case 1: nums_sorted[i]\
    \ = \"one\"; break;\n            case 2: nums_sorted[i] = \"two\"; break;\n  \
    \          case 3: nums_sorted[i] = \"three\"; break;\n            case 4: nums_sorted[i]\
    \ = \"four\"; break;\n            case 5: nums_sorted[i] = \"five\"; break;\n\
    \            case 6: nums_sorted[i] = \"six\"; break;\n            case 7: nums_sorted[i]\
    \ = \"seven\"; break;\n            case 8: nums_sorted[i] = \"eight\"; break;\n\
    \            case 9: nums_sorted[i] = \"nine\"; break;\n        }\n    }\n   \
    \ return nums_sorted.join(\" \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"\
    three\");\n    assert(candidate(\"three five nine\") == \"three five nine\");\n\
    \    assert(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\");\n    assert(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp2qn3aqgq.d(11): Error: no property `split` for type `string`

    /tmp/tmp2qn3aqgq.d(15): Error: `switch` statement without a `default`; use `final
    switch` or add `default: assert(0);` or add `default: break;`

    /tmp/tmp2qn3aqgq.d(29): Error: no property `sort` for type `int[]`

    /tmp/tmp2qn3aqgq.d(33): Error: `switch` statement without a `default`; use `final
    switch` or add `default: assert(0);` or add `default: break;`

    /tmp/tmp2qn3aqgq.d(47): Error: no property `join` for type `string[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2qn3aqgq.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164104
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split(\" \");\n\
    \    string[] nums_sorted = nums.dup;\n    nums_sorted.sort;\n    string result\
    \ = \"\";\n    foreach(string num; nums)\n    {\n        int index = nums_sorted.indexOf(num);\n\
    \        if(index == 0)\n        {\n            result = num;\n        }\n   \
    \     else\n        {\n            result ~= \" \" ~ num;\n        }\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n \
    \   assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"three\"\
    );\n    assert(candidate(\"three five nine\") == \"three five nine\");\n    assert(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\");\n\
    \    assert(candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpjky6f002.d(11): Error: no property `split` for type `string`

    /tmp/tmpjky6f002.d(13): Error: no property `sort` for type `string[]`

    /tmp/tmpjky6f002.d(17): Error: no property `indexOf` for type `string[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjky6f002.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164104
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    int[] nums = new int[numbers.length];\n\
    \    int i = 0;\n    foreach(string num; numbers.split(\" \"))\n    {\n      \
    \  switch(num)\n        {\n            case \"zero\": nums[i] = 0; break;\n  \
    \          case \"one\": nums[i] = 1; break;\n            case \"two\": nums[i]\
    \ = 2; break;\n            case \"three\": nums[i] = 3; break;\n            case\
    \ \"four\": nums[i] = 4; break;\n            case \"five\": nums[i] = 5; break;\n\
    \            case \"six\": nums[i] = 6; break;\n            case \"seven\": nums[i]\
    \ = 7; break;\n            case \"eight\": nums[i] = 8; break;\n            case\
    \ \"nine\": nums[i] = 9; break;\n        }\n        i++;\n    }\n    nums.sort();\n\
    \    string result = \"\";\n    foreach(int num; nums)\n    {\n        switch(num)\n\
    \        {\n            case 0: result ~= \"zero \"; break;\n            case\
    \ 1: result ~= \"one \"; break;\n            case 2: result ~= \"two \"; break;\n\
    \            case 3: result ~= \"three \"; break;\n            case 4: result\
    \ ~= \"four \"; break;\n            case 5: result ~= \"five \"; break;\n    \
    \        case 6: result ~= \"six \"; break;\n            case 7: result ~= \"\
    seven \"; break;\n            case 8: result ~= \"eight \"; break;\n         \
    \   case 9: result ~= \"nine \"; break;\n        }\n    }\n    return result.stripRight;\n\
    }\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpri7adqcr.d(13): Error: no property `split` for type `string`

    /tmp/tmpri7adqcr.d(30): Error: no property `sort` for type `int[]`

    /tmp/tmpri7adqcr.d(34): Error: `switch` statement without a `default`; use `final
    switch` or add `default: assert(0);` or add `default: break;`

    /tmp/tmpri7adqcr.d(48): Error: no property `stripRight` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpri7adqcr.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164104
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split(\" \");\n\
    \    int[] nums_int = new int[nums.length];\n    foreach(i, num; nums)\n    {\n\
    \        switch(num)\n        {\n            case \"zero\": nums_int[i] = 0; break;\n\
    \            case \"one\": nums_int[i] = 1; break;\n            case \"two\":\
    \ nums_int[i] = 2; break;\n            case \"three\": nums_int[i] = 3; break;\n\
    \            case \"four\": nums_int[i] = 4; break;\n            case \"five\"\
    : nums_int[i] = 5; break;\n            case \"six\": nums_int[i] = 6; break;\n\
    \            case \"seven\": nums_int[i] = 7; break;\n            case \"eight\"\
    : nums_int[i] = 8; break;\n            case \"nine\": nums_int[i] = 9; break;\n\
    \        }\n    }\n    nums_int.sort();\n    string[] nums_str = new string[nums_int.length];\n\
    \    foreach(i, num; nums_int)\n    {\n        switch(num)\n        {\n      \
    \      case 0: nums_str[i] = \"zero\"; break;\n            case 1: nums_str[i]\
    \ = \"one\"; break;\n            case 2: nums_str[i] = \"two\"; break;\n     \
    \       case 3: nums_str[i] = \"three\"; break;\n            case 4: nums_str[i]\
    \ = \"four\"; break;\n            case 5: nums_str[i] = \"five\"; break;\n   \
    \         case 6: nums_str[i] = \"six\"; break;\n            case 7: nums_str[i]\
    \ = \"seven\"; break;\n            case 8: nums_str[i] = \"eight\"; break;\n \
    \           case 9: nums_str[i] = \"nine\"; break;\n        }\n    }\n    return\
    \ nums_str.join(\" \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"\
    three\");\n    assert(candidate(\"three five nine\") == \"three five nine\");\n\
    \    assert(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\");\n    assert(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpr07lf2ed.d(11): Error: no property `split` for type `string`

    /tmp/tmpr07lf2ed.d(15): Error: `switch` statement without a `default`; use `final
    switch` or add `default: assert(0);` or add `default: break;`

    /tmp/tmpr07lf2ed.d(29): Error: no property `sort` for type `int[]`

    /tmp/tmpr07lf2ed.d(33): Error: `switch` statement without a `default`; use `final
    switch` or add `default: assert(0);` or add `default: break;`

    /tmp/tmpr07lf2ed.d(47): Error: no property `join` for type `string[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpr07lf2ed.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split;\n    int[]\
    \ nums_int = new int[nums.length];\n    foreach(i, num; nums)\n    {\n       \
    \ switch(num)\n        {\n            case \"zero\":\n                nums_int[i]\
    \ = 0;\n                break;\n            case \"one\":\n                nums_int[i]\
    \ = 1;\n                break;\n            case \"two\":\n                nums_int[i]\
    \ = 2;\n                break;\n            case \"three\":\n                nums_int[i]\
    \ = 3;\n                break;\n            case \"four\":\n                nums_int[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort;\n    foreach(i,\
    \ num; nums_int)\n    {\n        switch(num)\n        {\n            case 0:\n\
    \                nums[i] = \"zero\";\n                break;\n            case\
    \ 1:\n                nums[i] = \"one\";\n                break;\n           \
    \ case 2:\n                nums[i] = \"two\";\n                break;\n      \
    \      case 3:\n                nums[i] = \"three\";\n                break;\n\
    \            case 4:\n                nums[i] = \"four\";\n                break;\n\
    \            case 5:\n                nums[i] = \"five\";\n                break;\n\
    \            case 6:\n                nums[i] = \"six\";\n                break;\n\
    \            case 7:\n                nums[i] = \"seven\";\n                break;\n\
    \            case 8:\n                nums[i] = \"eight\";\n                break;\n\
    \            case 9:\n                nums[i] = \"nine\";\n\nunittest\n{\n   \
    \ alias candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n  \
    \  assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"three five\
    \ nine\") == \"three five nine\");\n    assert(candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpwxckvo38.d(84): Error: found `unittest` instead of statement

    /tmp/tmpwxckvo38.d(94): Error: found `End of File` when expecting `}` following
    compound statement

    /tmp/tmpwxckvo38.d(94): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwxckvo38.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    int[] nums;\n    foreach(immutable num;\
    \ numbers.split())\n    {\n        switch(num)\n        {\n            case \"\
    zero\":\n                nums ~= 0;\n                break;\n            case\
    \ \"one\":\n                nums ~= 1;\n                break;\n            case\
    \ \"two\":\n                nums ~= 2;\n                break;\n            case\
    \ \"three\":\n                nums ~= 3;\n                break;\n           \
    \ case \"four\":\n                nums ~= 4;\n                break;\n       \
    \     case \"five\":\n                nums ~= 5;\n                break;\n   \
    \         case \"six\":\n                nums ~= 6;\n                break;\n\
    \            case \"seven\":\n                nums ~= 7;\n                break;\n\
    \            case \"eight\":\n                nums ~= 8;\n                break;\n\
    \            case \"nine\":\n                nums ~= 9;\n                break;\n\
    \        }\n    }\n    nums.sort;\n    string result;\n    foreach(immutable num;\
    \ nums)\n    {\n        switch(num)\n        {\n            case 0:\n        \
    \        result ~= \"zero \";\n                break;\n            case 1:\n \
    \               result ~= \"one \";\n                break;\n            case\
    \ 2:\n                result ~= \"two \";\n                break;\n          \
    \  case 3:\n                result ~= \"three \";\n                break;\n  \
    \          case 4:\n                result ~= \"four \";\n                break;\n\
    \            case 5:\n                result ~= \"five \";\n                break;\n\
    \            case 6:\n                result ~= \"six \";\n                break;\n\
    \            case 7:\n                result ~= \"seven \";\n                break;\n\
    \            case 8:\n                result ~= \"eight \";\n                break;\n\
    \            case 9:\n                result ~= \"nine \";\n                break;\n\
    \        }\n    }\n    return result.idup;\n}\nunittest\n{\n    alias candidate\
    \ = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpsv03v60s.d(12): Error: no property `split` for type `string`

    /tmp/tmpsv03v60s.d(48): Error: no property `sort` for type `int[]`

    /tmp/tmpsv03v60s.d(52): Error: `switch` statement without a `default`; use `final
    switch` or add `default: assert(0);` or add `default: break;`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsv03v60s.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164104
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split(\" \");\n\
    \    int[] nums_int = new int[nums.length];\n    foreach(i, num; nums)\n    {\n\
    \        switch(num)\n        {\n            case \"zero\":\n                nums_int[i]\
    \ = 0;\n                break;\n            case \"one\":\n                nums_int[i]\
    \ = 1;\n                break;\n            case \"two\":\n                nums_int[i]\
    \ = 2;\n                break;\n            case \"three\":\n                nums_int[i]\
    \ = 3;\n                break;\n            case \"four\":\n                nums_int[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort();\n    foreach(i,\
    \ num; nums_int)\n    {\n        switch(num)\n        {\n            case 0:\n\
    \                nums[i] = \"zero\";\n                break;\n            case\
    \ 1:\n                nums[i] = \"one\";\n                break;\n           \
    \ case 2:\n                nums[i] = \"two\";\n                break;\n      \
    \      case 3:\n                nums[i] = \"three\";\n                break;\n\
    \            case 4:\n                nums[i] = \"four\";\n                break;\n\
    \            case 5:\n                nums[i] = \"five\";\n                break;\n\
    \            case 6:\n                nums[i] = \"six\";\n                break;\n\
    \            case 7:\n                nums[i] = \"seven\";\n                break;\n\
    \            case 8:\n                nums[i] = \"eight\";\n                break;\n\
    \            case 9:\n                nums[i] = \"nine\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpzj6gcnh4.d(87): Error: Implicit string concatenation is deprecated,
    use "nine\x0aunittest\x0a{\x0a    alias candidate = sort_numbers;\x0a\x0a    assert(candidate("
    ~ ") == " instead

    /tmp/tmpzj6gcnh4.d(87): Error: Implicit string concatenation is deprecated, use
    ") == " ~ ");\x0a    assert(candidate(" instead

    /tmp/tmpzj6gcnh4.d(88): Error: found `three` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(88): Error: found `three` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(89): Error: found `three` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(89): Error: found `nine` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(89): Error: found `three` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(89): Error: found `nine` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(90): Error: found `five` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(90): Error: found `four` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(90): Error: found `'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split(\" \");\n\
    \    int[] nums_int = new int[nums.length];\n    foreach(i, num; nums)\n    {\n\
    \        switch(num)\n        {\n            case \"zero\":\n                nums_int[i]\
    \ = 0;\n                break;\n            case \"one\":\n                nums_int[i]\
    \ = 1;\n                break;\n            case \"two\":\n                nums_int[i]\
    \ = 2;\n                break;\n            case \"three\":\n                nums_int[i]\
    \ = 3;\n                break;\n            case \"four\":\n                nums_int[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort;\n    foreach(i,\
    \ num; nums_int)\n    {\n        switch(num)\n        {\n            case 0:\n\
    \                nums[i] = \"zero\";\n                break;\n            case\
    \ 1:\n                nums[i] = \"one\";\n                break;\n           \
    \ case 2:\n                nums[i] = \"two\";\n                break;\n      \
    \      case 3:\n                nums[i] = \"three\";\n                break;\n\
    \            case 4:\n                nums[i] = \"four\";\n                break;\n\
    \            case 5:\n                nums[i] = \"five\";\n                break;\n\
    \            case 6:\n                nums[i] = \"six\";\n                break;\n\
    \            case 7:\n                nums[i] = \"seven\";\n                break;\n\
    \            case 8:\n                nums[i] = \"eight\";\n                break;\n\
    \            case 9:\n                nums[i] = \"nine\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpsxj9dx32.d(87): Error: Implicit string concatenation is deprecated,
    use "nine\x0aunittest\x0a{\x0a    alias candidate = sort_numbers;\x0a\x0a    assert(candidate("
    ~ ") == " instead

    /tmp/tmpsxj9dx32.d(87): Error: Implicit string concatenation is deprecated, use
    ") == " ~ ");\x0a    assert(candidate(" instead

    /tmp/tmpsxj9dx32.d(88): Error: found `three` when expecting `;` following statement

    /tmp/tmpsxj9dx32.d(88): Error: found `three` when expecting `;` following statement

    /tmp/tmpsxj9dx32.d(89): Error: found `three` when expecting `;` following statement

    /tmp/tmpsxj9dx32.d(89): Error: found `nine` when expecting `;` following statement

    /tmp/tmpsxj9dx32.d(89): Error: found `three` when expecting `;` following statement

    /tmp/tmpsxj9dx32.d(89): Error: found `nine` when expecting `;` following statement

    /tmp/tmpsxj9dx32.d(90): Error: found `five` when expecting `;` following statement

    /tmp/tmpsxj9dx32.d(90): Error: found `four` when expecting `;` following statement

    /tmp/tmpsxj9dx32.d(90): Error: found `'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split(\" \");\n\
    \    int[] nums_int = new int[nums.length];\n    foreach(i, num; nums)\n    {\n\
    \        nums_int[i] = to!int(num);\n    }\n    nums_int.sort();\n    foreach(i,\
    \ num; nums_int)\n    {\n        nums[i] = to!string(num);\n    }\n    return\
    \ nums.join(\" \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n \
    \   assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"three\"\
    );\n    assert(candidate(\"three five nine\") == \"three five nine\");\n    assert(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\");\n\
    \    assert(candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp9ne47o1g.d(11): Error: no property `split` for type `string`

    /tmp/tmp9ne47o1g.d(15): Error: template instance `to!int` template `to` is not
    defined, did you mean No?

    /tmp/tmp9ne47o1g.d(17): Error: no property `sort` for type `int[]`

    /tmp/tmp9ne47o1g.d(20): Error: template instance `to!string` template `to` is
    not defined, did you mean No?

    /tmp/tmp9ne47o1g.d(22): Error: no property `join` for type `string[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9ne47o1g.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164104
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split(\" \");\n\
    \    int[] nums_int = new int[nums.length];\n    foreach(i, num; nums)\n    {\n\
    \        switch(num)\n        {\n            case \"zero\":\n                nums_int[i]\
    \ = 0;\n                break;\n            case \"one\":\n                nums_int[i]\
    \ = 1;\n                break;\n            case \"two\":\n                nums_int[i]\
    \ = 2;\n                break;\n            case \"three\":\n                nums_int[i]\
    \ = 3;\n                break;\n            case \"four\":\n                nums_int[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort;\n    foreach(i,\
    \ num; nums_int)\n    {\n        switch(num)\n        {\n            case 0:\n\
    \                nums[i] = \"zero\";\n                break;\n            case\
    \ 1:\n                nums[i] = \"one\";\n                break;\n           \
    \ case 2:\n                nums[i] = \"two\";\n                break;\n      \
    \      case 3:\n                nums[i] = \"three\";\n                break;\n\
    \            case 4:\n                nums[i] = \"four\";\n                break;\n\
    \            case 5:\n                nums[i] = \"five\";\n                break;\n\
    \            case 6:\n                nums[i] = \"six\";\n                break;\n\
    \            case 7:\n                nums[i] = \"seven\";\n                break;\n\
    \            case 8:\n                nums[i] = \"eight\";\n                break;\n\
    \            case 9:\n                nums[i] = \"nine\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpsxj9dx32.d(87): Error: Implicit string concatenation is deprecated,
    use "nine\x0aunittest\x0a{\x0a    alias candidate = sort_numbers;\x0a\x0a    assert(candidate("
    ~ ") == " instead

    /tmp/tmpsxj9dx32.d(87): Error: Implicit string concatenation is deprecated, use
    ") == " ~ ");\x0a    assert(candidate(" instead

    /tmp/tmpsxj9dx32.d(88): Error: found `three` when expecting `;` following statement

    /tmp/tmpsxj9dx32.d(88): Error: found `three` when expecting `;` following statement

    /tmp/tmpsxj9dx32.d(89): Error: found `three` when expecting `;` following statement

    /tmp/tmpsxj9dx32.d(89): Error: found `nine` when expecting `;` following statement

    /tmp/tmpsxj9dx32.d(89): Error: found `three` when expecting `;` following statement

    /tmp/tmpsxj9dx32.d(89): Error: found `nine` when expecting `;` following statement

    /tmp/tmpsxj9dx32.d(90): Error: found `five` when expecting `;` following statement

    /tmp/tmpsxj9dx32.d(90): Error: found `four` when expecting `;` following statement

    /tmp/tmpsxj9dx32.d(90): Error: found `'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split(\" \");\n\
    \    string[] nums2 = nums.dup;\n    nums2.sort();\n    string[] nums3 = nums2.dup;\n\
    \    foreach(string num; nums)\n    {\n        if(num == \"zero\")\n         \
    \   nums3[0] = num;\n        else if(num == \"one\")\n            nums3[1] = num;\n\
    \        else if(num == \"two\")\n            nums3[2] = num;\n        else if(num\
    \ == \"three\")\n            nums3[3] = num;\n        else if(num == \"four\"\
    )\n            nums3[4] = num;\n        else if(num == \"five\")\n           \
    \ nums3[5] = num;\n        else if(num == \"six\")\n            nums3[6] = num;\n\
    \        else if(num == \"seven\")\n            nums3[7] = num;\n        else\
    \ if(num == \"eight\")\n            nums3[8] = num;\n        else if(num == \"\
    nine\")\n            nums3[9] = num;\n    }\n    return nums3.join(\" \");\n}\n\
    unittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp5avxifdg.d(11): Error: no property `split` for type `string`

    /tmp/tmp5avxifdg.d(13): Error: no property `sort` for type `string[]`

    /tmp/tmp5avxifdg.d(38): Error: no property `join` for type `string[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5avxifdg.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164104
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split(\" \");\n\
    \    int[] num_ints = new int[nums.length];\n    foreach(i, num; nums)\n    {\n\
    \        switch(num)\n        {\n            case \"zero\": num_ints[i] = 0; break;\n\
    \            case \"one\": num_ints[i] = 1; break;\n            case \"two\":\
    \ num_ints[i] = 2; break;\n            case \"three\": num_ints[i] = 3; break;\n\
    \            case \"four\": num_ints[i] = 4; break;\n            case \"five\"\
    : num_ints[i] = 5; break;\n            case \"six\": num_ints[i] = 6; break;\n\
    \            case \"seven\": num_ints[i] = 7; break;\n            case \"eight\"\
    : num_ints[i] = 8; break;\n            case \"nine\": num_ints[i] = 9; break;\n\
    \        }\n    }\n    num_ints.sort;\n    string[] num_strings = new string[nums.length];\n\
    \    foreach(i, num; num_ints)\n    {\n        switch(num)\n        {\n      \
    \      case 0: num_strings[i] = \"zero\"; break;\n            case 1: num_strings[i]\
    \ = \"one\"; break;\n            case 2: num_strings[i] = \"two\"; break;\n  \
    \          case 3: num_strings[i] = \"three\"; break;\n            case 4: num_strings[i]\
    \ = \"four\"; break;\n            case 5: num_strings[i] = \"five\"; break;\n\
    \            case 6: num_strings[i] = \"six\"; break;\n            case 7: num_strings[i]\
    \ = \"seven\"; break;\n            case 8: num_strings[i] = \"eight\"; break;\n\
    \            case 9: num_strings[i] = \"nine\"; break;\n        }\n    }\n   \
    \ return num_strings.join(\" \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"\
    three\");\n    assert(candidate(\"three five nine\") == \"three five nine\");\n\
    \    assert(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\");\n    assert(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpfb03enfq.d(11): Error: no property `split` for type `string`

    /tmp/tmpfb03enfq.d(15): Error: `switch` statement without a `default`; use `final
    switch` or add `default: assert(0);` or add `default: break;`

    /tmp/tmpfb03enfq.d(29): Error: no property `sort` for type `int[]`

    /tmp/tmpfb03enfq.d(33): Error: `switch` statement without a `default`; use `final
    switch` or add `default: assert(0);` or add `default: break;`

    /tmp/tmpfb03enfq.d(47): Error: no property `join` for type `string[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfb03enfq.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164104
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split(\" \");\n\
    \    string[] nums_sorted = nums.dup;\n    nums_sorted.sort;\n    string result\
    \ = \"\";\n    foreach(string num; nums)\n    {\n        int index = nums_sorted.indexOf(num);\n\
    \        if(index != -1)\n        {\n            nums_sorted[index] = \"\";\n\
    \            result ~= num ~ \" \";\n        }\n    }\n    return result.stripRight;\n\
    }\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1u2arj8g.d(11): Error: no property `split` for type `string`

    /tmp/tmp1u2arj8g.d(13): Error: no property `sort` for type `string[]`

    /tmp/tmp1u2arj8g.d(17): Error: no property `indexOf` for type `string[]`

    /tmp/tmp1u2arj8g.d(24): Error: no property `stripRight` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1u2arj8g.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164104
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split(\" \");\n\
    \    int[] num_ints = new int[nums.length];\n    foreach(i, num; nums)\n    {\n\
    \        switch(num)\n        {\n            case \"zero\":\n                num_ints[i]\
    \ = 0;\n                break;\n            case \"one\":\n                num_ints[i]\
    \ = 1;\n                break;\n            case \"two\":\n                num_ints[i]\
    \ = 2;\n                break;\n            case \"three\":\n                num_ints[i]\
    \ = 3;\n                break;\n            case \"four\":\n                num_ints[i]\
    \ = 4;\n                break;\n            case \"five\":\n                num_ints[i]\
    \ = 5;\n                break;\n            case \"six\":\n                num_ints[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                num_ints[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                num_ints[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                num_ints[i]\
    \ = 9;\n                break;\n        }\n    }\n    num_ints.sort;\n    string[]\
    \ num_strings = new string[nums.length];\n    foreach(i, num; num_ints)\n    {\n\
    \        switch(num)\n        {\n            case 0:\n                num_strings[i]\
    \ = \"zero\";\n                break;\n            case 1:\n                num_strings[i]\
    \ = \"one\";\n                break;\n            case 2:\n                num_strings[i]\
    \ = \"two\";\n                break;\n            case 3:\n                num_strings[i]\
    \ = \"three\";\n                break;\n            case 4:\n                num_strings[i]\
    \ = \"four\";\n                break;\n            case 5:\n                num_strings[i]\
    \ = \"five\";\n                break;\n            case 6:\n                num_strings[i]\
    \ = \"six\";\n                break;\n            case 7:\n                num_strings[i]\
    \ = \"seven\";\n                break;\n            case 8:\n                num_strings[i]\
    \ = \"eight\";\n                break;\n            case\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp95uzxn18.d(83): Error: expression expected, not `unittest`

    /tmp/tmp95uzxn18.d(84): Error: found `{` when expecting `:`

    /tmp/tmp95uzxn18.d(93): Error: found `End of File` when expecting `}` following
    compound statement

    /tmp/tmp95uzxn18.d(93): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp95uzxn18.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split(\" \");\n\
    \    int[] nums_int = new int[nums.length];\n    foreach(i, v; nums)\n    {\n\
    \        switch(v)\n        {\n            case \"zero\":\n                nums_int[i]\
    \ = 0;\n                break;\n            case \"one\":\n                nums_int[i]\
    \ = 1;\n                break;\n            case \"two\":\n                nums_int[i]\
    \ = 2;\n                break;\n            case \"three\":\n                nums_int[i]\
    \ = 3;\n                break;\n            case \"four\":\n                nums_int[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort!((a, b) =>\
    \ a < b);\n    foreach(i, v; nums_int)\n    {\n        switch(v)\n        {\n\
    \            case 0:\n                nums[i] = \"zero\";\n                break;\n\
    \            case 1:\n                nums[i] = \"one\";\n                break;\n\
    \            case 2:\n                nums[i] = \"two\";\n                break;\n\
    \            case 3:\n                nums[i] = \"three\";\n                break;\n\
    \            case 4:\n                nums[i] = \"four\";\n                break;\n\
    \            case 5:\n                nums[i] = \"five\";\n                break;\n\
    \            case 6:\n                nums[i] = \"six\";\n                break;\n\
    \            case 7:\n                nums[i] = \"seven\";\n                break;\n\
    \            case 8:\n                nums[i] = \"eight\";\n                break;\n\
    \            case 9:\nunittest\n{\n    alias candidate = sort_numbers;\n\n   \
    \ assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"three\"\
    );\n    assert(candidate(\"three five nine\") == \"three five nine\");\n    assert(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\");\n\
    \    assert(candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp9g38ws0i.d(82): Error: found `unittest` instead of statement

    /tmp/tmp9g38ws0i.d(92): Error: found `End of File` when expecting `}` following
    compound statement

    /tmp/tmp9g38ws0i.d(92): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9g38ws0i.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164104
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split(\" \");\n\
    \    int[] nums_int = new int[nums.length];\n    foreach(i, num; nums)\n    {\n\
    \        switch(num)\n        {\n            case \"zero\":\n                nums_int[i]\
    \ = 0;\n                break;\n            case \"one\":\n                nums_int[i]\
    \ = 1;\n                break;\n            case \"two\":\n                nums_int[i]\
    \ = 2;\n                break;\n            case \"three\":\n                nums_int[i]\
    \ = 3;\n                break;\n            case \"four\":\n                nums_int[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort;\n    foreach(i,\
    \ num; nums_int)\n    {\n        switch(num)\n        {\n            case 0:\n\
    \                nums[i] = \"zero\";\n                break;\n            case\
    \ 1:\n                nums[i] = \"one\";\n                break;\n           \
    \ case 2:\n                nums[i] = \"two\";\n                break;\n      \
    \      case 3:\n                nums[i] = \"three\";\n                break;\n\
    \            case 4:\n                nums[i] = \"four\";\n                break;\n\
    \            case 5:\n                nums[i] = \"five\";\n                break;\n\
    \            case 6:\n                nums[i] = \"six\";\n                break;\n\
    \            case 7:\n                nums[i] = \"seven\";\n                break;\n\
    \            case 8:\n                nums[i] = \"eight\";\n                break;\n\
    \            case 9:\n                nums[i] = \"nine\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpsxj9dx32.d(87): Error: Implicit string concatenation is deprecated,
    use "nine\x0aunittest\x0a{\x0a    alias candidate = sort_numbers;\x0a\x0a    assert(candidate("
    ~ ") == " instead

    /tmp/tmpsxj9dx32.d(87): Error: Implicit string concatenation is deprecated, use
    ") == " ~ ");\x0a    assert(candidate(" instead

    /tmp/tmpsxj9dx32.d(88): Error: found `three` when expecting `;` following statement

    /tmp/tmpsxj9dx32.d(88): Error: found `three` when expecting `;` following statement

    /tmp/tmpsxj9dx32.d(89): Error: found `three` when expecting `;` following statement

    /tmp/tmpsxj9dx32.d(89): Error: found `nine` when expecting `;` following statement

    /tmp/tmpsxj9dx32.d(89): Error: found `three` when expecting `;` following statement

    /tmp/tmpsxj9dx32.d(89): Error: found `nine` when expecting `;` following statement

    /tmp/tmpsxj9dx32.d(90): Error: found `five` when expecting `;` following statement

    /tmp/tmpsxj9dx32.d(90): Error: found `four` when expecting `;` following statement

    /tmp/tmpsxj9dx32.d(90): Error: found `'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split(\" \");\n\
    \    string[] nums_sorted = nums.dup;\n    nums_sorted.sort;\n    string result\
    \ = \"\";\n    foreach(string num; nums)\n    {\n        int index = nums_sorted.indexOf(num);\n\
    \        result ~= nums[index] ~ \" \";\n    }\n    return result.stripRight;\n\
    }\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmph4kbtz30.d(11): Error: no property `split` for type `string`

    /tmp/tmph4kbtz30.d(13): Error: no property `sort` for type `string[]`

    /tmp/tmph4kbtz30.d(17): Error: no property `indexOf` for type `string[]`

    /tmp/tmph4kbtz30.d(20): Error: no property `stripRight` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmph4kbtz30.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164104
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split(\" \");\n\
    \    int[] nums_int = new int[nums.length];\n    foreach(i, num; nums)\n    {\n\
    \        switch(num)\n        {\n            case \"zero\":\n                nums_int[i]\
    \ = 0;\n                break;\n            case \"one\":\n                nums_int[i]\
    \ = 1;\n                break;\n            case \"two\":\n                nums_int[i]\
    \ = 2;\n                break;\n            case \"three\":\n                nums_int[i]\
    \ = 3;\n                break;\n            case \"four\":\n                nums_int[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort();\n    foreach(i,\
    \ num; nums_int)\n    {\n        switch(num)\n        {\n            case 0:\n\
    \                nums[i] = \"zero\";\n                break;\n            case\
    \ 1:\n                nums[i] = \"one\";\n                break;\n           \
    \ case 2:\n                nums[i] = \"two\";\n                break;\n      \
    \      case 3:\n                nums[i] = \"three\";\n                break;\n\
    \            case 4:\n                nums[i] = \"four\";\n                break;\n\
    \            case 5:\n                nums[i] = \"five\";\n                break;\n\
    \            case 6:\n                nums[i] = \"six\";\n                break;\n\
    \            case 7:\n                nums[i] = \"seven\";\n                break;\n\
    \            case 8:\n                nums[i] = \"eight\";\n                break;\n\
    \            case 9:\n                nums[i] = \"nine\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpzj6gcnh4.d(87): Error: Implicit string concatenation is deprecated,
    use "nine\x0aunittest\x0a{\x0a    alias candidate = sort_numbers;\x0a\x0a    assert(candidate("
    ~ ") == " instead

    /tmp/tmpzj6gcnh4.d(87): Error: Implicit string concatenation is deprecated, use
    ") == " ~ ");\x0a    assert(candidate(" instead

    /tmp/tmpzj6gcnh4.d(88): Error: found `three` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(88): Error: found `three` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(89): Error: found `three` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(89): Error: found `nine` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(89): Error: found `three` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(89): Error: found `nine` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(90): Error: found `five` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(90): Error: found `four` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(90): Error: found `'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split;\n    string[]\
    \ nums2 = nums.dup;\n    nums2.sort;\n    string[] nums3 = nums2.dup;\n    nums3.sort!((a,b)\
    \ => a.length > b.length);\n    string[] nums4 = nums3.dup;\n    nums4.sort!((a,b)\
    \ => a.length < b.length);\n    string[] nums5 = nums4.dup;\n    nums5.sort!((a,b)\
    \ => a.length == b.length);\n    string[] nums6 = nums5.dup;\n    nums6.sort!((a,b)\
    \ => a.length == b.length);\n    string[] nums7 = nums6.dup;\n    nums7.sort!((a,b)\
    \ => a.length == b.length);\n    string[] nums8 = nums7.dup;\n    nums8.sort!((a,b)\
    \ => a.length == b.length);\n    string[] nums9 = nums8.dup;\n    nums9.sort!((a,b)\
    \ => a.length == b.length);\n    string[] nums10 = nums9.dup;\n    nums10.sort!((a,b)\
    \ => a.length == b.length);\n    string[] nums11 = nums10.dup;\n    nums11.sort!((a,b)\
    \ => a.length == b.length);\n    string[] nums12 = nums11.dup;\n    nums12.sort!((a,b)\
    \ => a.length == b.length);\n    string[] nums13 = nums12.dup;\n    nums13.sort!((a,b)\
    \ => a.length == b.length);\n    string[] nums14 = nums13.dup;\n    nums14.sort!((a,b)\
    \ => a.length == b.length);\n    string[] nums15 = nums14.dup;\n    nums15.sort!((a,b)\
    \ => a.length ==\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpdnp_wexl.d(40): Error: expression expected, not `unittest`

    /tmp/tmpdnp_wexl.d(41): Error: found `{` when expecting `)` following template
    argument list

    /tmp/tmpdnp_wexl.d(42): Error: found `alias` when expecting `;` following statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdnp_wexl.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164104
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split(\" \");\n\
    \    string[] nums_sorted = nums.dup;\n    nums_sorted.sort!((a, b) => a.compare(b));\n\
    \    return nums_sorted.join(\" \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"\
    three\");\n    assert(candidate(\"three five nine\") == \"three five nine\");\n\
    \    assert(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\");\n    assert(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4sql963s.d(11): Error: no property `split` for type `string`

    /tmp/tmp4sql963s.d(13): Error: no property `sort` for type `string[]`

    /tmp/tmp4sql963s.d(14): Error: no property `join` for type `string[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4sql963s.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split(\" \");\n\
    \    int[] nums_int = new int[nums.length];\n    foreach(i, num; nums)\n    {\n\
    \        nums_int[i] = to!int(num);\n    }\n    sort(nums_int);\n    foreach(i,\
    \ num; nums_int)\n    {\n        nums[i] = to!string(num);\n    }\n    return\
    \ nums.join(\" \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n \
    \   assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"three\"\
    );\n    assert(candidate(\"three five nine\") == \"three five nine\");\n    assert(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\");\n\
    \    assert(candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpuzfqdmre.d(11): Error: no property `split` for type `string`

    /tmp/tmpuzfqdmre.d(15): Error: template instance `to!int` template `to` is not
    defined, did you mean No?

    /tmp/tmpuzfqdmre.d(17): Error: undefined identifier `sort`, did you mean function
    `sqrt`?

    /tmp/tmpuzfqdmre.d(20): Error: template instance `to!string` template `to` is
    not defined, did you mean No?

    /tmp/tmpuzfqdmre.d(22): Error: no property `join` for type `string[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpuzfqdmre.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164104
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split(\" \");\n\
    \    int[] nums_int = new int[nums.length];\n    foreach(i, num; nums)\n    {\n\
    \        switch(num)\n        {\n            case \"zero\":\n                nums_int[i]\
    \ = 0;\n                break;\n            case \"one\":\n                nums_int[i]\
    \ = 1;\n                break;\n            case \"two\":\n                nums_int[i]\
    \ = 2;\n                break;\n            case \"three\":\n                nums_int[i]\
    \ = 3;\n                break;\n            case \"four\":\n                nums_int[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort;\n    foreach(i,\
    \ num; nums_int)\n    {\n        switch(num)\n        {\n            case 0:\n\
    \                nums[i] = \"zero\";\n                break;\n            case\
    \ 1:\n                nums[i] = \"one\";\n                break;\n           \
    \ case 2:\n                nums[i] = \"two\";\n                break;\n      \
    \      case 3:\n                nums[i] = \"three\";\n                break;\n\
    \            case 4:\n                nums[i] = \"four\";\n                break;\n\
    \            case 5:\n                nums[i] = \"five\";\n                break;\n\
    \            case 6:\n                nums[i] = \"six\";\n                break;\n\
    \            case 7:\n                nums[i] = \"seven\";\n                break;\n\
    \            case 8:\n                nums[i] = \"eight\";\n                break;\n\
    \            case 9:\n                nums[i] = \"nine\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpsxj9dx32.d(87): Error: Implicit string concatenation is deprecated,
    use "nine\x0aunittest\x0a{\x0a    alias candidate = sort_numbers;\x0a\x0a    assert(candidate("
    ~ ") == " instead

    /tmp/tmpsxj9dx32.d(87): Error: Implicit string concatenation is deprecated, use
    ") == " ~ ");\x0a    assert(candidate(" instead

    /tmp/tmpsxj9dx32.d(88): Error: found `three` when expecting `;` following statement

    /tmp/tmpsxj9dx32.d(88): Error: found `three` when expecting `;` following statement

    /tmp/tmpsxj9dx32.d(89): Error: found `three` when expecting `;` following statement

    /tmp/tmpsxj9dx32.d(89): Error: found `nine` when expecting `;` following statement

    /tmp/tmpsxj9dx32.d(89): Error: found `three` when expecting `;` following statement

    /tmp/tmpsxj9dx32.d(89): Error: found `nine` when expecting `;` following statement

    /tmp/tmpsxj9dx32.d(90): Error: found `five` when expecting `;` following statement

    /tmp/tmpsxj9dx32.d(90): Error: found `four` when expecting `;` following statement

    /tmp/tmpsxj9dx32.d(90): Error: found `'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split(\" \");\n\
    \    int[] nums_int = new int[nums.length];\n    foreach(i, num; nums)\n    {\n\
    \        switch(num)\n        {\n            case \"zero\": nums_int[i] = 0; break;\n\
    \            case \"one\": nums_int[i] = 1; break;\n            case \"two\":\
    \ nums_int[i] = 2; break;\n            case \"three\": nums_int[i] = 3; break;\n\
    \            case \"four\": nums_int[i] = 4; break;\n            case \"five\"\
    : nums_int[i] = 5; break;\n            case \"six\": nums_int[i] = 6; break;\n\
    \            case \"seven\": nums_int[i] = 7; break;\n            case \"eight\"\
    : nums_int[i] = 8; break;\n            case \"nine\": nums_int[i] = 9; break;\n\
    \        }\n    }\n    nums_int.sort();\n    foreach(i, num; nums_int)\n    {\n\
    \        switch(num)\n        {\n            case 0: nums[i] = \"zero\"; break;\n\
    \            case 1: nums[i] = \"one\"; break;\n            case 2: nums[i] =\
    \ \"two\"; break;\n            case 3: nums[i] = \"three\"; break;\n         \
    \   case 4: nums[i] = \"four\"; break;\n            case 5: nums[i] = \"five\"\
    ; break;\n            case 6: nums[i] = \"six\"; break;\n            case 7: nums[i]\
    \ = \"seven\"; break;\n            case 8: nums[i] = \"eight\"; break;\n     \
    \       case 9: nums[i] = \"nine\"; break;\n        }\n    }\n    return nums.join(\"\
    \ \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp90ozul6z.d(11): Error: no property `split` for type `string`

    /tmp/tmp90ozul6z.d(15): Error: `switch` statement without a `default`; use `final
    switch` or add `default: assert(0);` or add `default: break;`

    /tmp/tmp90ozul6z.d(29): Error: no property `sort` for type `int[]`

    /tmp/tmp90ozul6z.d(32): Error: `switch` statement without a `default`; use `final
    switch` or add `default: assert(0);` or add `default: break;`

    /tmp/tmp90ozul6z.d(46): Error: no property `join` for type `string[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp90ozul6z.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    int[] nums = new int[numbers.length];\n\
    \    int i = 0;\n    foreach(string num; numbers.split(\" \"))\n    {\n      \
    \  switch(num)\n        {\n            case \"zero\":\n                nums[i]\
    \ = 0;\n                break;\n            case \"one\":\n                nums[i]\
    \ = 1;\n                break;\n            case \"two\":\n                nums[i]\
    \ = 2;\n                break;\n            case \"three\":\n                nums[i]\
    \ = 3;\n                break;\n            case \"four\":\n                nums[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums[i]\
    \ = 9;\n                break;\n        }\n        i++;\n    }\n    nums.sort();\n\
    \    string result = \"\";\n    foreach(int num; nums)\n    {\n        switch(num)\n\
    \        {\n            case 0:\n                result ~= \"zero \";\n      \
    \          break;\n            case 1:\n                result ~= \"one \";\n\
    \                break;\n            case 2:\n                result ~= \"two\
    \ \";\n                break;\n            case 3:\n                result ~=\
    \ \"three \";\n                break;\n            case 4:\n                result\
    \ ~= \"four \";\n                break;\n            case 5:\n               \
    \ result ~= \"five \";\n                break;\n            case 6:\n        \
    \        result ~= \"six \";\n                break;\n            case 7:\n  \
    \              result ~= \"seven \";\n                break;\n            case\
    \ 8:\n                result ~= \"eight \";\n                break;\n        \
    \    case 9:\n                result ~= \"nine \";\n                break;\n \
    \       }\n    }\n    return result.stripRight();\n}\nunittest\n{\n    alias candidate\
    \ = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp19lkgu3c.d(13): Error: no property `split` for type `string`

    /tmp/tmp19lkgu3c.d(50): Error: no property `sort` for type `int[]`

    /tmp/tmp19lkgu3c.d(54): Error: `switch` statement without a `default`; use `final
    switch` or add `default: assert(0);` or add `default: break;`

    /tmp/tmp19lkgu3c.d(88): Error: no property `stripRight` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp19lkgu3c.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164104
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split(\" \");\n\
    \    string[] nums_sorted = nums.dup;\n    nums_sorted.sort!((a, b) => a.compare(b));\n\
    \    return nums_sorted.join(\" \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"\
    three\");\n    assert(candidate(\"three five nine\") == \"three five nine\");\n\
    \    assert(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\");\n    assert(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4sql963s.d(11): Error: no property `split` for type `string`

    /tmp/tmp4sql963s.d(13): Error: no property `sort` for type `string[]`

    /tmp/tmp4sql963s.d(14): Error: no property `join` for type `string[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4sql963s.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split(\" \");\n\
    \    int[] nums_int = new int[nums.length];\n    foreach(int i, string num; nums)\n\
    \    {\n        switch(num)\n        {\n            case \"zero\":\n         \
    \       nums_int[i] = 0;\n                break;\n            case \"one\":\n\
    \                nums_int[i] = 1;\n                break;\n            case \"\
    two\":\n                nums_int[i] = 2;\n                break;\n           \
    \ case \"three\":\n                nums_int[i] = 3;\n                break;\n\
    \            case \"four\":\n                nums_int[i] = 4;\n              \
    \  break;\n            case \"five\":\n                nums_int[i] = 5;\n    \
    \            break;\n            case \"six\":\n                nums_int[i] =\
    \ 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort();\n    foreach(int\
    \ i, int num; nums_int)\n    {\n        switch(num)\n        {\n            case\
    \ 0:\n                nums[i] = \"zero\";\n                break;\n          \
    \  case 1:\n                nums[i] = \"one\";\n                break;\n     \
    \       case 2:\n                nums[i] = \"two\";\n                break;\n\
    \            case 3:\n                nums[i] = \"three\";\n                break;\n\
    \            case 4:\n                nums[i] = \"four\";\n                break;\n\
    \            case 5:\n                nums[i] = \"five\";\n                break;\n\
    \            case 6:\n                nums[i] = \"six\";\n                break;\n\
    \            case 7:\n                nums[i] = \"seven\";\n                break;\n\
    \            case 8:\n                nums[i] = \"eight\";\n                break;\n\
    \            case 9:\n                nums[i\nunittest\n{\n    alias candidate\
    \ = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp5qnryr00.d(83): Error: found `unittest` when expecting `,`

    /tmp/tmp5qnryr00.d(93): Error: found `void` when expecting `,`

    /tmp/tmp5qnryr00.d(93): Error: found `{` when expecting `,`

    /tmp/tmp5qnryr00.d(93): Error: expression expected, not `}`

    /tmp/tmp5qnryr00.d(93): Error: found `End of File` when expecting `,`

    /tmp/tmp5qnryr00.d(93): Error: found `End of File` when expecting `]`

    /tmp/tmp5qnryr00.d(93): Error: found `End of File` when expecting `;` following
    statement

    /tmp/tmp5qnryr00.d(93): Error: found `End of File` when expecting `}` following
    compound statement

    /tmp/tmp5qnryr00.d(93): Error: found `End of File` when expecting `}` following
    compound statement

    /tmp/tmp5qnryr00.d(93): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5qnryr00.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split(\" \");\n\
    \    int[] nums_int = new int[nums.length];\n    foreach(i, num; nums)\n    {\n\
    \        switch(num)\n        {\n            case \"zero\":\n                nums_int[i]\
    \ = 0;\n                break;\n            case \"one\":\n                nums_int[i]\
    \ = 1;\n                break;\n            case \"two\":\n                nums_int[i]\
    \ = 2;\n                break;\n            case \"three\":\n                nums_int[i]\
    \ = 3;\n                break;\n            case \"four\":\n                nums_int[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort();\n    foreach(i,\
    \ num; nums_int)\n    {\n        switch(num)\n        {\n            case 0:\n\
    \                nums[i] = \"zero\";\n                break;\n            case\
    \ 1:\n                nums[i] = \"one\";\n                break;\n           \
    \ case 2:\n                nums[i] = \"two\";\n                break;\n      \
    \      case 3:\n                nums[i] = \"three\";\n                break;\n\
    \            case 4:\n                nums[i] = \"four\";\n                break;\n\
    \            case 5:\n                nums[i] = \"five\";\n                break;\n\
    \            case 6:\n                nums[i] = \"six\";\n                break;\n\
    \            case 7:\n                nums[i] = \"seven\";\n                break;\n\
    \            case 8:\n                nums[i] = \"eight\";\n                break;\n\
    \            case 9:\n                nums[i] = \"nine\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpzj6gcnh4.d(87): Error: Implicit string concatenation is deprecated,
    use "nine\x0aunittest\x0a{\x0a    alias candidate = sort_numbers;\x0a\x0a    assert(candidate("
    ~ ") == " instead

    /tmp/tmpzj6gcnh4.d(87): Error: Implicit string concatenation is deprecated, use
    ") == " ~ ");\x0a    assert(candidate(" instead

    /tmp/tmpzj6gcnh4.d(88): Error: found `three` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(88): Error: found `three` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(89): Error: found `three` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(89): Error: found `nine` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(89): Error: found `three` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(89): Error: found `nine` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(90): Error: found `five` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(90): Error: found `four` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(90): Error: found `'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    int[] nums = new int[numbers.length];\n\
    \    string[] nums_str = numbers.split(\" \");\n    foreach(i, num; nums_str)\n\
    \    {\n        switch(num)\n        {\n            case \"zero\": nums[i] = 0;\
    \ break;\n            case \"one\": nums[i] = 1; break;\n            case \"two\"\
    : nums[i] = 2; break;\n            case \"three\": nums[i] = 3; break;\n     \
    \       case \"four\": nums[i] = 4; break;\n            case \"five\": nums[i]\
    \ = 5; break;\n            case \"six\": nums[i] = 6; break;\n            case\
    \ \"seven\": nums[i] = 7; break;\n            case \"eight\": nums[i] = 8; break;\n\
    \            case \"nine\": nums[i] = 9; break;\n        }\n    }\n    nums.sort();\n\
    \    string result = \"\";\n    foreach(num; nums)\n    {\n        switch(num)\n\
    \        {\n            case 0: result ~= \"zero \"; break;\n            case\
    \ 1: result ~= \"one \"; break;\n            case 2: result ~= \"two \"; break;\n\
    \            case 3: result ~= \"three \"; break;\n            case 4: result\
    \ ~= \"four \"; break;\n            case 5: result ~= \"five \"; break;\n    \
    \        case 6: result ~= \"six \"; break;\n            case 7: result ~= \"\
    seven \"; break;\n            case 8: result ~= \"eight \"; break;\n         \
    \   case 9: result ~= \"nine \"; break;\n        }\n    }\n    return result.stripRight;\n\
    }\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpc5xe7cgq.d(12): Error: no property `split` for type `string`

    /tmp/tmpc5xe7cgq.d(15): Error: `switch` statement without a `default`; use `final
    switch` or add `default: assert(0);` or add `default: break;`

    /tmp/tmpc5xe7cgq.d(29): Error: no property `sort` for type `int[]`

    /tmp/tmpc5xe7cgq.d(33): Error: `switch` statement without a `default`; use `final
    switch` or add `default: assert(0);` or add `default: break;`

    /tmp/tmpc5xe7cgq.d(47): Error: no property `stripRight` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpc5xe7cgq.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164104
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split(\" \");\n\
    \    int[] nums_int = new int[nums.length];\n    foreach(i, num; nums)\n    {\n\
    \        nums_int[i] = numeral_to_int(num);\n    }\n    sort(nums_int);\n    foreach(i,\
    \ num; nums_int)\n    {\n        nums[i] = int_to_numeral(num);\n    }\n    return\
    \ nums.join(\" \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n \
    \   assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"three\"\
    );\n    assert(candidate(\"three five nine\") == \"three five nine\");\n    assert(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\");\n\
    \    assert(candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmputse5s63.d(11): Error: no property `split` for type `string`

    /tmp/tmputse5s63.d(15): Error: undefined identifier `numeral_to_int`

    /tmp/tmputse5s63.d(17): Error: undefined identifier `sort`, did you mean function
    `sqrt`?

    /tmp/tmputse5s63.d(20): Error: undefined identifier `int_to_numeral`

    /tmp/tmputse5s63.d(22): Error: no property `join` for type `string[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmputse5s63.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164104
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split(\" \");\n\
    \    string[] nums_sorted = nums.dup;\n    nums_sorted.sort!((a, b) => a.compare(b));\n\
    \    return nums_sorted.join(\" \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"\
    three\");\n    assert(candidate(\"three five nine\") == \"three five nine\");\n\
    \    assert(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\");\n    assert(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4sql963s.d(11): Error: no property `split` for type `string`

    /tmp/tmp4sql963s.d(13): Error: no property `sort` for type `string[]`

    /tmp/tmp4sql963s.d(14): Error: no property `join` for type `string[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4sql963s.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split(\" \");\n\
    \    int[] num_ints = new int[nums.length];\n    foreach(i, num; nums)\n    {\n\
    \        num_ints[i] = numeral_to_int(num);\n    }\n    num_ints.sort;\n    foreach(i,\
    \ num; num_ints)\n    {\n        nums[i] = int_to_numeral(num);\n    }\n    return\
    \ nums.join(\" \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n \
    \   assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"three\"\
    );\n    assert(candidate(\"three five nine\") == \"three five nine\");\n    assert(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\");\n\
    \    assert(candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp55b8wkc0.d(11): Error: no property `split` for type `string`

    /tmp/tmp55b8wkc0.d(15): Error: undefined identifier `numeral_to_int`

    /tmp/tmp55b8wkc0.d(17): Error: no property `sort` for type `int[]`

    /tmp/tmp55b8wkc0.d(20): Error: undefined identifier `int_to_numeral`

    /tmp/tmp55b8wkc0.d(22): Error: no property `join` for type `string[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp55b8wkc0.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164104
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split(\" \");\n\
    \    string[] nums_sorted = nums.sort!((a, b) => a.compare(b));\n    return nums_sorted.join(\"\
    \ \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp3z9d3zcd.d(11): Error: no property `split` for type `string`

    /tmp/tmp3z9d3zcd.d(12): Error: no property `sort` for type `string[]`

    /tmp/tmp3z9d3zcd.d(13): Error: no property `join` for type `string[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3z9d3zcd.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split(\" \");\n\
    \    int[] nums_int = new int[nums.length];\n    foreach(i, num; nums)\n    {\n\
    \        switch(num)\n        {\n            case \"zero\":\n                nums_int[i]\
    \ = 0;\n                break;\n            case \"one\":\n                nums_int[i]\
    \ = 1;\n                break;\n            case \"two\":\n                nums_int[i]\
    \ = 2;\n                break;\n            case \"three\":\n                nums_int[i]\
    \ = 3;\n                break;\n            case \"four\":\n                nums_int[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort;\n    foreach(i,\
    \ num; nums_int)\n    {\n        switch(num)\n        {\n            case 0:\n\
    \                nums[i] = \"zero\";\n                break;\n            case\
    \ 1:\n                nums[i] = \"one\";\n                break;\n           \
    \ case 2:\n                nums[i] = \"two\";\n                break;\n      \
    \      case 3:\n                nums[i] = \"three\";\n                break;\n\
    \            case 4:\n                nums[i] = \"four\";\n                break;\n\
    \            case 5:\n                nums[i] = \"five\";\n                break;\n\
    \            case 6:\n                nums[i] = \"six\";\n                break;\n\
    \            case 7:\n                nums[i] = \"seven\";\n                break;\n\
    \            case 8:\n                nums[i] = \"eight\";\n                break;\n\
    \            case 9:\n                nums[i] = \"nine\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpsxj9dx32.d(87): Error: Implicit string concatenation is deprecated,
    use "nine\x0aunittest\x0a{\x0a    alias candidate = sort_numbers;\x0a\x0a    assert(candidate("
    ~ ") == " instead

    /tmp/tmpsxj9dx32.d(87): Error: Implicit string concatenation is deprecated, use
    ") == " ~ ");\x0a    assert(candidate(" instead

    /tmp/tmpsxj9dx32.d(88): Error: found `three` when expecting `;` following statement

    /tmp/tmpsxj9dx32.d(88): Error: found `three` when expecting `;` following statement

    /tmp/tmpsxj9dx32.d(89): Error: found `three` when expecting `;` following statement

    /tmp/tmpsxj9dx32.d(89): Error: found `nine` when expecting `;` following statement

    /tmp/tmpsxj9dx32.d(89): Error: found `three` when expecting `;` following statement

    /tmp/tmpsxj9dx32.d(89): Error: found `nine` when expecting `;` following statement

    /tmp/tmpsxj9dx32.d(90): Error: found `five` when expecting `;` following statement

    /tmp/tmpsxj9dx32.d(90): Error: found `four` when expecting `;` following statement

    /tmp/tmpsxj9dx32.d(90): Error: found `'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split(\" \");\n\
    \    int[] nums_int = new int[nums.length];\n    foreach(i, n; nums)\n    {\n\
    \        switch(n)\n        {\n            case \"zero\":\n                nums_int[i]\
    \ = 0;\n                break;\n            case \"one\":\n                nums_int[i]\
    \ = 1;\n                break;\n            case \"two\":\n                nums_int[i]\
    \ = 2;\n                break;\n            case \"three\":\n                nums_int[i]\
    \ = 3;\n                break;\n            case \"four\":\n                nums_int[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort();\n    foreach(i,\
    \ n; nums_int)\n    {\n        switch(n)\n        {\n            case 0:\n   \
    \             nums[i] = \"zero\";\n                break;\n            case 1:\n\
    \                nums[i] = \"one\";\n                break;\n            case\
    \ 2:\n                nums[i] = \"two\";\n                break;\n           \
    \ case 3:\n                nums[i] = \"three\";\n                break;\n    \
    \        case 4:\n                nums[i] = \"four\";\n                break;\n\
    \            case 5:\n                nums[i] = \"five\";\n                break;\n\
    \            case 6:\n                nums[i] = \"six\";\n                break;\n\
    \            case 7:\n                nums[i] = \"seven\";\n                break;\n\
    \            case 8:\n                nums[i] = \"eight\";\n                break;\n\
    \            case 9:\n                nums[i] = \"nine\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbsyhec1k.d(87): Error: Implicit string concatenation is deprecated,
    use "nine\x0aunittest\x0a{\x0a    alias candidate = sort_numbers;\x0a\x0a    assert(candidate("
    ~ ") == " instead

    /tmp/tmpbsyhec1k.d(87): Error: Implicit string concatenation is deprecated, use
    ") == " ~ ");\x0a    assert(candidate(" instead

    /tmp/tmpbsyhec1k.d(88): Error: found `three` when expecting `;` following statement

    /tmp/tmpbsyhec1k.d(88): Error: found `three` when expecting `;` following statement

    /tmp/tmpbsyhec1k.d(89): Error: found `three` when expecting `;` following statement

    /tmp/tmpbsyhec1k.d(89): Error: found `nine` when expecting `;` following statement

    /tmp/tmpbsyhec1k.d(89): Error: found `three` when expecting `;` following statement

    /tmp/tmpbsyhec1k.d(89): Error: found `nine` when expecting `;` following statement

    /tmp/tmpbsyhec1k.d(90): Error: found `five` when expecting `;` following statement

    /tmp/tmpbsyhec1k.d(90): Error: found `four` when expecting `;` following statement

    /tmp/tmpbsyhec1k.d(90): Error: found `'
  stdout: ''
  timestamp: 1660164104
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split(\" \");\n\
    \    int[] nums_int = new int[nums.length];\n    for (int i = 0; i < nums.length;\
    \ i++)\n    {\n        nums_int[i] = to!int(nums[i]);\n    }\n    sort(nums_int);\n\
    \    string result = \"\";\n    foreach (int i; nums_int)\n    {\n        result\
    \ ~= to!string(i) ~ \" \";\n    }\n    return result.stripRight();\n}\nunittest\n\
    {\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"three\
    \ five nine\") == \"three five nine\");\n    assert(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpozvi4wqz.d(11): Error: no property `split` for type `string`

    /tmp/tmpozvi4wqz.d(15): Error: template instance `to!int` template `to` is not
    defined, did you mean No?

    /tmp/tmpozvi4wqz.d(17): Error: undefined identifier `sort`, did you mean function
    `sqrt`?

    /tmp/tmpozvi4wqz.d(21): Error: template instance `to!string` template `to` is
    not defined, did you mean No?

    /tmp/tmpozvi4wqz.d(23): Error: no property `stripRight` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpozvi4wqz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164104
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split(\" \");\n\
    \    string[] nums_sorted = new string[nums.length];\n    int[] nums_int = new\
    \ int[nums.length];\n    foreach(i, num; nums)\n    {\n        nums_int[i] = to!int(num);\n\
    \    }\n    nums_int.sort;\n    foreach(i, num; nums_int)\n    {\n        nums_sorted[i]\
    \ = to!string(num);\n    }\n    return nums_sorted.join(\" \");\n}\nunittest\n\
    {\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"three\
    \ five nine\") == \"three five nine\");\n    assert(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpplyif413.d(11): Error: no property `split` for type `string`

    /tmp/tmpplyif413.d(16): Error: template instance `to!int` template `to` is not
    defined, did you mean No?

    /tmp/tmpplyif413.d(18): Error: no property `sort` for type `int[]`

    /tmp/tmpplyif413.d(21): Error: template instance `to!string` template `to` is
    not defined, did you mean No?

    /tmp/tmpplyif413.d(23): Error: no property `join` for type `string[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpplyif413.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164104
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split(\" \");\n\
    \    int[] nums_int = new int[nums.length];\n    foreach(i, num; nums)\n    {\n\
    \        nums_int[i] = num_to_int(num);\n    }\n    nums_int.sort;\n    foreach(i,\
    \ num; nums_int)\n    {\n        nums[i] = int_to_num(num);\n    }\n    return\
    \ nums.join(\" \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n \
    \   assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"three\"\
    );\n    assert(candidate(\"three five nine\") == \"three five nine\");\n    assert(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\");\n\
    \    assert(candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpss6tcppy.d(11): Error: no property `split` for type `string`

    /tmp/tmpss6tcppy.d(15): Error: undefined identifier `num_to_int`

    /tmp/tmpss6tcppy.d(17): Error: no property `sort` for type `int[]`

    /tmp/tmpss6tcppy.d(20): Error: undefined identifier `int_to_num`

    /tmp/tmpss6tcppy.d(22): Error: no property `join` for type `string[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpss6tcppy.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164104
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] numeral = [\"zero\", \"one\"\
    , \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\"\
    ];\n    int[] num = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];\n    int[] num_count = [0,\
    \ 0, 0, 0, 0, 0, 0, 0, 0, 0];\n    string[] num_str = new string[10];\n    string[]\
    \ num_str_sorted = new string[10];\n    string[] num_str_sorted_final = new string[10];\n\
    \    string[] num_str_sorted_final_final = new string[10];\n    string[] num_str_sorted_final_final_final\
    \ = new string[10];\n    string[] num_str_sorted_final_final_final_final = new\
    \ string[10];\n    string[] num_str_sorted_final_final_final_final_final = new\
    \ string[10];\n    string[] num_str_sorted_final_final_final_final_final_final\
    \ = new string[10];\n    string[] num_str_sorted_final_final_final_final_final_final_final\
    \ = new string[10];\n    string[] num_str_sorted_final_final_final_final_final_final_final_final\
    \ = new string[10];\n    string[] num_str_sorted_final_final_final_final_final_final_final_final_final\
    \ = new string[10];\n    string[] num_str_sorted_final_final_final_final_final_final_final_final_final_final\
    \ = new string[10];\n    string[] num_str_sorted_final_final_final_final_final_final_final_final_final_final_final\
    \ = new string[10];\n    string[] num_str_sorted_final_final_final_final_final_final_final_final_final_final_final_final\
    \ = new string[10];\n    string[] num_str_sorted_final_final_final_final_final_final_final_final_final_final_final_final_final\
    \ = new string\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmprqlq7jz1.d(29): Error: semicolon expected, not `unittest`

    /tmp/tmprqlq7jz1.d(29): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprqlq7jz1.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164104
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    import std.algorithm;\n    import std.array;\n\
    \    import std.conv;\n    import std.range;\n    import std.stdio;\n    import\
    \ std.string;\n    import std.typecons;\n    import std.math;\n    import std.traits;\n\
    \    import std.typecons;\n    import std.uni;\n    import std.utf;\n    import\
    \ std.algorithm;\n    import std.array;\n    import std.conv;\n    import std.range;\n\
    \    import std.stdio;\n    import std.string;\n    import std.typecons;\n   \
    \ import std.math;\n    import std.traits;\n    import std.typecons;\n    import\
    \ std.uni;\n    import std.utf;\n    import std.algorithm;\n    import std.array;\n\
    \    import std.conv;\n    import std.range;\n    import std.stdio;\n    import\
    \ std.string;\n    import std.typecons;\n    import std.math;\n    import std.traits;\n\
    \    import std.typecons;\n    import std.uni;\n    import std.utf;\n    import\
    \ std.algorithm;\n    import std.array;\n    import std.conv;\n    import std.range;\n\
    \    import std.stdio;\n    import std.string;\n    import std.typecons;\n   \
    \ import std.math;\n    import std.traits;\n    import std.typecons;\n    import\
    \ std.uni;\n    import std.utf;\n    import std.algorithm;\n    import std.array;\n\
    \    import std.conv;\n    import std.range;\n    import std.stdio;\n    import\
    \ std.string;\n    import std.typecons;\n    import std.math;\n    import std.traits;\n\
    \    import std.typecons;\n    import std.uni;\n    import std.utf;\n    import\
    \ std.algorithm;\n    import std.array;\n    import std.conv;\n    import std.range;\n\
    \    import std.stdio;\n    import std.string;\n    import std.typecons;\n   \
    \ import std.math;\n    import std.tra\nunittest\n{\n    alias candidate = sort_numbers;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"\
    three\");\n    assert(candidate(\"three five nine\") == \"three five nine\");\n\
    \    assert(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\");\n    assert(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpew5s7cwy.d(80): Error: `;` expected

    /tmp/tmpew5s7cwy.d(90): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpew5s7cwy.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164104
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split(\" \");\n\
    \    int[] nums_int = new int[nums.length];\n    foreach(i, num; nums)\n    {\n\
    \        switch(num)\n        {\n            case \"zero\": nums_int[i] = 0; break;\n\
    \            case \"one\": nums_int[i] = 1; break;\n            case \"two\":\
    \ nums_int[i] = 2; break;\n            case \"three\": nums_int[i] = 3; break;\n\
    \            case \"four\": nums_int[i] = 4; break;\n            case \"five\"\
    : nums_int[i] = 5; break;\n            case \"six\": nums_int[i] = 6; break;\n\
    \            case \"seven\": nums_int[i] = 7; break;\n            case \"eight\"\
    : nums_int[i] = 8; break;\n            case \"nine\": nums_int[i] = 9; break;\n\
    \        }\n    }\n    nums_int.sort();\n    foreach(i, num; nums_int)\n    {\n\
    \        switch(num)\n        {\n            case 0: nums[i] = \"zero\"; break;\n\
    \            case 1: nums[i] = \"one\"; break;\n            case 2: nums[i] =\
    \ \"two\"; break;\n            case 3: nums[i] = \"three\"; break;\n         \
    \   case 4: nums[i] = \"four\"; break;\n            case 5: nums[i] = \"five\"\
    ; break;\n            case 6: nums[i] = \"six\"; break;\n            case 7: nums[i]\
    \ = \"seven\"; break;\n            case 8: nums[i] = \"eight\"; break;\n     \
    \       case 9: nums[i] = \"nine\"; break;\n        }\n    }\n    return nums.join(\"\
    \ \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp90ozul6z.d(11): Error: no property `split` for type `string`

    /tmp/tmp90ozul6z.d(15): Error: `switch` statement without a `default`; use `final
    switch` or add `default: assert(0);` or add `default: break;`

    /tmp/tmp90ozul6z.d(29): Error: no property `sort` for type `int[]`

    /tmp/tmp90ozul6z.d(32): Error: `switch` statement without a `default`; use `final
    switch` or add `default: assert(0);` or add `default: break;`

    /tmp/tmp90ozul6z.d(46): Error: no property `join` for type `string[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp90ozul6z.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split(\" \");\n\
    \    string[] nums_sorted = nums.sort();\n    return nums_sorted.join(\" \");\n\
    }\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpv1u3ccor.d(11): Error: no property `split` for type `string`

    /tmp/tmpv1u3ccor.d(12): Error: no property `sort` for type `string[]`

    /tmp/tmpv1u3ccor.d(13): Error: no property `join` for type `string[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpv1u3ccor.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164104
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split(\" \");\n\
    \    int[] nums_int = new int[nums.length];\n    foreach(i, num; nums)\n    {\n\
    \        switch(num)\n        {\n            case \"zero\": nums_int[i] = 0; break;\n\
    \            case \"one\": nums_int[i] = 1; break;\n            case \"two\":\
    \ nums_int[i] = 2; break;\n            case \"three\": nums_int[i] = 3; break;\n\
    \            case \"four\": nums_int[i] = 4; break;\n            case \"five\"\
    : nums_int[i] = 5; break;\n            case \"six\": nums_int[i] = 6; break;\n\
    \            case \"seven\": nums_int[i] = 7; break;\n            case \"eight\"\
    : nums_int[i] = 8; break;\n            case \"nine\": nums_int[i] = 9; break;\n\
    \        }\n    }\n    nums_int.sort;\n    foreach(i, num; nums_int)\n    {\n\
    \        switch(num)\n        {\n            case 0: nums[i] = \"zero\"; break;\n\
    \            case 1: nums[i] = \"one\"; break;\n            case 2: nums[i] =\
    \ \"two\"; break;\n            case 3: nums[i] = \"three\"; break;\n         \
    \   case 4: nums[i] = \"four\"; break;\n            case 5: nums[i] = \"five\"\
    ; break;\n            case 6: nums[i] = \"six\"; break;\n            case 7: nums[i]\
    \ = \"seven\"; break;\n            case 8: nums[i] = \"eight\"; break;\n     \
    \       case 9: nums[i] = \"nine\"; break;\n        }\n    }\n    return nums.join(\"\
    \ \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpntw7rt2m.d(11): Error: no property `split` for type `string`

    /tmp/tmpntw7rt2m.d(15): Error: `switch` statement without a `default`; use `final
    switch` or add `default: assert(0);` or add `default: break;`

    /tmp/tmpntw7rt2m.d(29): Error: no property `sort` for type `int[]`

    /tmp/tmpntw7rt2m.d(32): Error: `switch` statement without a `default`; use `final
    switch` or add `default: assert(0);` or add `default: break;`

    /tmp/tmpntw7rt2m.d(46): Error: no property `join` for type `string[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpntw7rt2m.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164104
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split(\" \");\n\
    \    int[] nums_int = new int[nums.length];\n    foreach(int i, string num; nums)\n\
    \    {\n        nums_int[i] = num_to_int(num);\n    }\n    nums_int.sort;\n  \
    \  foreach(int i, int num; nums_int)\n    {\n        nums[i] = int_to_num(num);\n\
    \    }\n    return nums.join(\" \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"\
    three\");\n    assert(candidate(\"three five nine\") == \"three five nine\");\n\
    \    assert(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\");\n    assert(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpiwrho30v.d(11): Error: no property `split` for type `string`

    /tmp/tmpiwrho30v.d(15): Error: undefined identifier `num_to_int`

    /tmp/tmpiwrho30v.d(17): Error: no property `sort` for type `int[]`

    /tmp/tmpiwrho30v.d(20): Error: undefined identifier `int_to_num`

    /tmp/tmpiwrho30v.d(22): Error: no property `join` for type `string[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpiwrho30v.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164104
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split(\" \");\n\
    \    int[] nums_int = new int[nums.length];\n    foreach(i, num; nums)\n    {\n\
    \        switch(num)\n        {\n            case \"zero\":\n                nums_int[i]\
    \ = 0;\n                break;\n            case \"one\":\n                nums_int[i]\
    \ = 1;\n                break;\n            case \"two\":\n                nums_int[i]\
    \ = 2;\n                break;\n            case \"three\":\n                nums_int[i]\
    \ = 3;\n                break;\n            case \"four\":\n                nums_int[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort();\n    foreach(i,\
    \ num; nums_int)\n    {\n        switch(num)\n        {\n            case 0:\n\
    \                nums[i] = \"zero\";\n                break;\n            case\
    \ 1:\n                nums[i] = \"one\";\n                break;\n           \
    \ case 2:\n                nums[i] = \"two\";\n                break;\n      \
    \      case 3:\n                nums[i] = \"three\";\n                break;\n\
    \            case 4:\n                nums[i] = \"four\";\n                break;\n\
    \            case 5:\n                nums[i] = \"five\";\n                break;\n\
    \            case 6:\n                nums[i] = \"six\";\n                break;\n\
    \            case 7:\n                nums[i] = \"seven\";\n                break;\n\
    \            case 8:\n                nums[i] = \"eight\";\n                break;\n\
    \            case 9:\n                nums[i] = \"nine\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpzj6gcnh4.d(87): Error: Implicit string concatenation is deprecated,
    use "nine\x0aunittest\x0a{\x0a    alias candidate = sort_numbers;\x0a\x0a    assert(candidate("
    ~ ") == " instead

    /tmp/tmpzj6gcnh4.d(87): Error: Implicit string concatenation is deprecated, use
    ") == " ~ ");\x0a    assert(candidate(" instead

    /tmp/tmpzj6gcnh4.d(88): Error: found `three` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(88): Error: found `three` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(89): Error: found `three` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(89): Error: found `nine` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(89): Error: found `three` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(89): Error: found `nine` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(90): Error: found `five` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(90): Error: found `four` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(90): Error: found `'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    import std.algorithm;\n    import std.array;\n\
    \    import std.conv;\n    import std.range;\n    import std.string;\n    import\
    \ std.typecons;\n    import std.math;\n    import std.stdio;\n    import std.traits;\n\
    \    import std.typecons;\n    import std.typecons;\n    import std.typecons;\n\
    \    import std.typecons;\n    import std.typecons;\n    import std.typecons;\n\
    \    import std.typecons;\n    import std.typecons;\n    import std.typecons;\n\
    \    import std.typecons;\n    import std.typecons;\n    import std.typecons;\n\
    \    import std.typecons;\n    import std.typecons;\n    import std.typecons;\n\
    \    import std.typecons;\n    import std.typecons;\n    import std.typecons;\n\
    \    import std.typecons;\n    import std.typecons;\n    import std.typecons;\n\
    \    import std.typecons;\n    import std.typecons;\n    import std.typecons;\n\
    \    import std.typecons;\n    import std.typecons;\n    import std.typecons;\n\
    \    import std.typecons;\n    import std.typecons;\n    import std.typecons;\n\
    \    import std.typecons;\n    import std.typecons;\n    import std.typecons;\n\
    \    import std.typecons;\n    import std.typecons;\n    import std.typecons;\n\
    \    import std.typecons;\n    import std.typecons;\n    import std.typecons;\n\
    \    import std.typecons;\n    import std.typecons;\n    import std.typecons;\n\
    \    import std.typecons;\n    import std.typecons;\n    import std.typecons;\n\
    \    import std.typecons;\n    import std.typecons;\n    import std.typecons;\n\
    \    import std.typecons;\n    import std.typecons;\n    import std.typecons;\n\
    \    import std.typecons;\n    import std.typecons;\n    import std.typecons;\n\
    \    import std.typecons;\n    import\nunittest\n{\n    alias candidate = sort_numbers;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"\
    three\");\n    assert(candidate(\"three five nine\") == \"three five nine\");\n\
    \    assert(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\");\n    assert(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp191bfdy6.d(76): Error: identifier expected following `import`

    /tmp/tmp191bfdy6.d(76): Error: `;` expected

    /tmp/tmp191bfdy6.d(86): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp191bfdy6.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164104
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split(\" \");\n\
    \    string[] nums_sorted = nums.sort!((a, b) => a.length < b.length);\n    return\
    \ nums_sorted.join(\" \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"\
    three\");\n    assert(candidate(\"three five nine\") == \"three five nine\");\n\
    \    assert(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\");\n    assert(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpguhyb8uj.d(11): Error: no property `split` for type `string`

    /tmp/tmpguhyb8uj.d(12): Error: no property `sort` for type `string[]`

    /tmp/tmpguhyb8uj.d(13): Error: no property `join` for type `string[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpguhyb8uj.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split(\" \");\n\
    \    int[] num_ints = new int[nums.length];\n    foreach(i, num; nums)\n    {\n\
    \        num_ints[i] = numeral_to_int(num);\n    }\n    sort(num_ints);\n    string[]\
    \ num_strings = new string[num_ints.length];\n    foreach(i, num; num_ints)\n\
    \    {\n        num_strings[i] = int_to_numeral(num);\n    }\n    return num_strings.join(\"\
    \ \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpx_pog1e5.d(11): Error: no property `split` for type `string`

    /tmp/tmpx_pog1e5.d(15): Error: undefined identifier `numeral_to_int`

    /tmp/tmpx_pog1e5.d(17): Error: undefined identifier `sort`, did you mean function
    `sqrt`?

    /tmp/tmpx_pog1e5.d(21): Error: undefined identifier `int_to_numeral`

    /tmp/tmpx_pog1e5.d(23): Error: no property `join` for type `string[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpx_pog1e5.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164104
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split(\" \");\n\
    \    int[] nums_int = new int[nums.length];\n    foreach(i, num; nums)\n    {\n\
    \        nums_int[i] = num2int(num);\n    }\n    nums_int.sort;\n    foreach(i,\
    \ num; nums_int)\n    {\n        nums[i] = int2num(num);\n    }\n    return nums.join(\"\
    \ \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpwy8bc9m3.d(11): Error: no property `split` for type `string`

    /tmp/tmpwy8bc9m3.d(15): Error: undefined identifier `num2int`, did you mean variable
    `nums_int`?

    /tmp/tmpwy8bc9m3.d(17): Error: no property `sort` for type `int[]`

    /tmp/tmpwy8bc9m3.d(20): Error: undefined identifier `int2num`

    /tmp/tmpwy8bc9m3.d(22): Error: no property `join` for type `string[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwy8bc9m3.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164104
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    int[] nums = new int[numbers.length];\n\
    \    int i = 0;\n    foreach(string num; numbers.split(\" \"))\n    {\n      \
    \  switch(num)\n        {\n            case \"zero\": nums[i] = 0; break;\n  \
    \          case \"one\": nums[i] = 1; break;\n            case \"two\": nums[i]\
    \ = 2; break;\n            case \"three\": nums[i] = 3; break;\n            case\
    \ \"four\": nums[i] = 4; break;\n            case \"five\": nums[i] = 5; break;\n\
    \            case \"six\": nums[i] = 6; break;\n            case \"seven\": nums[i]\
    \ = 7; break;\n            case \"eight\": nums[i] = 8; break;\n            case\
    \ \"nine\": nums[i] = 9; break;\n        }\n        i++;\n    }\n    sort(nums);\n\
    \    string result = \"\";\n    foreach(int num; nums)\n    {\n        switch(num)\n\
    \        {\n            case 0: result ~= \"zero \"; break;\n            case\
    \ 1: result ~= \"one \"; break;\n            case 2: result ~= \"two \"; break;\n\
    \            case 3: result ~= \"three \"; break;\n            case 4: result\
    \ ~= \"four \"; break;\n            case 5: result ~= \"five \"; break;\n    \
    \        case 6: result ~= \"six \"; break;\n            case 7: result ~= \"\
    seven \"; break;\n            case 8: result ~= \"eight \"; break;\n         \
    \   case 9: result ~= \"nine \"; break;\n        }\n    }\n    return result.stripRight();\n\
    }\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpqsotqpbh.d(13): Error: no property `split` for type `string`

    /tmp/tmpqsotqpbh.d(30): Error: undefined identifier `sort`, did you mean function
    `sqrt`?

    /tmp/tmpqsotqpbh.d(34): Error: `switch` statement without a `default`; use `final
    switch` or add `default: assert(0);` or add `default: break;`

    /tmp/tmpqsotqpbh.d(48): Error: no property `stripRight` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqsotqpbh.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164104
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split(\" \");\n\
    \    int[] nums_int = new int[nums.length];\n    foreach(i, num; nums)\n    {\n\
    \        nums_int[i] = to!int(num);\n    }\n    sort(nums_int);\n    string result\
    \ = \"\";\n    foreach(num; nums_int)\n    {\n        result ~= to!string(num)\
    \ ~ \" \";\n    }\n    return result.trim();\n}\nunittest\n{\n    alias candidate\
    \ = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp00zlaujo.d(11): Error: no property `split` for type `string`

    /tmp/tmp00zlaujo.d(15): Error: template instance `to!int` template `to` is not
    defined, did you mean No?

    /tmp/tmp00zlaujo.d(17): Error: undefined identifier `sort`, did you mean function
    `sqrt`?

    /tmp/tmp00zlaujo.d(21): Error: template instance `to!string` template `to` is
    not defined, did you mean No?

    /tmp/tmp00zlaujo.d(23): Error: no property `trim` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp00zlaujo.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164104
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split(\" \");\n\
    \    int[] nums_int = new int[nums.length];\n    foreach(i, num; nums)\n    {\n\
    \        switch(num)\n        {\n            case \"zero\":\n                nums_int[i]\
    \ = 0;\n                break;\n            case \"one\":\n                nums_int[i]\
    \ = 1;\n                break;\n            case \"two\":\n                nums_int[i]\
    \ = 2;\n                break;\n            case \"three\":\n                nums_int[i]\
    \ = 3;\n                break;\n            case \"four\":\n                nums_int[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort();\n    foreach(i,\
    \ num; nums_int)\n    {\n        switch(num)\n        {\n            case 0:\n\
    \                nums[i] = \"zero\";\n                break;\n            case\
    \ 1:\n                nums[i] = \"one\";\n                break;\n           \
    \ case 2:\n                nums[i] = \"two\";\n                break;\n      \
    \      case 3:\n                nums[i] = \"three\";\n                break;\n\
    \            case 4:\n                nums[i] = \"four\";\n                break;\n\
    \            case 5:\n                nums[i] = \"five\";\n                break;\n\
    \            case 6:\n                nums[i] = \"six\";\n                break;\n\
    \            case 7:\n                nums[i] = \"seven\";\n                break;\n\
    \            case 8:\n                nums[i] = \"eight\";\n                break;\n\
    \            case 9:\n                nums[i] = \"nine\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpzj6gcnh4.d(87): Error: Implicit string concatenation is deprecated,
    use "nine\x0aunittest\x0a{\x0a    alias candidate = sort_numbers;\x0a\x0a    assert(candidate("
    ~ ") == " instead

    /tmp/tmpzj6gcnh4.d(87): Error: Implicit string concatenation is deprecated, use
    ") == " ~ ");\x0a    assert(candidate(" instead

    /tmp/tmpzj6gcnh4.d(88): Error: found `three` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(88): Error: found `three` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(89): Error: found `three` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(89): Error: found `nine` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(89): Error: found `three` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(89): Error: found `nine` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(90): Error: found `five` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(90): Error: found `four` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(90): Error: found `'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    // Create a map of the numberals to their\
    \ numeric values\n    auto numeral_map = [\n        \"zero\": 0,\n        \"one\"\
    : 1,\n        \"two\": 2,\n        \"three\": 3,\n        \"four\": 4,\n     \
    \   \"five\": 5,\n        \"six\": 6,\n        \"seven\": 7,\n        \"eight\"\
    : 8,\n        \"nine\": 9\n    ];\n    \n    // Split the input string into a\
    \ string array\n    auto numeral_array = numbers.split(\" \");\n    \n    // Create\
    \ a map of the numberals to their numeric values\n    auto numeral_values = numeral_array.map!(n\
    \ => numeral_map[n]);\n    \n    // Sort the numeric values\n    numeral_values.sort;\n\
    \    \n    // Create a map of the numeric values to the numberals\n    auto numeral_map_reverse\
    \ = [\n        0: \"zero\",\n        1: \"one\",\n        2: \"two\",\n      \
    \  3: \"three\",\n        4: \"four\",\n        5: \"five\",\n        6: \"six\"\
    ,\n        7: \"seven\",\n        8: \"eight\",\n        9: \"nine\"\n    ];\n\
    \    \n    // Create a string array of the numberals\n    auto numeral_array_sorted\
    \ = numeral_values.map!(n => numeral_map_reverse[n]);\n    \n    // Join the string\
    \ array into a single string\n    return numeral_array_sorted.join(\" \");\n}\n\
    unittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpt02zolds.d(26): Error: no property `split` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpt02zolds.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164104
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split(\" \");\n\
    \    int[] nums_int = new int[nums.length];\n    foreach(i, num; nums)\n    {\n\
    \        switch(num)\n        {\n            case \"zero\":\n                nums_int[i]\
    \ = 0;\n                break;\n            case \"one\":\n                nums_int[i]\
    \ = 1;\n                break;\n            case \"two\":\n                nums_int[i]\
    \ = 2;\n                break;\n            case \"three\":\n                nums_int[i]\
    \ = 3;\n                break;\n            case \"four\":\n                nums_int[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort;\n    foreach(i,\
    \ num; nums_int)\n    {\n        switch(num)\n        {\n            case 0:\n\
    \                nums[i] = \"zero\";\n                break;\n            case\
    \ 1:\n                nums[i] = \"one\";\n                break;\n           \
    \ case 2:\n                nums[i] = \"two\";\n                break;\n      \
    \      case 3:\n                nums[i] = \"three\";\n                break;\n\
    \            case 4:\n                nums[i] = \"four\";\n                break;\n\
    \            case 5:\n                nums[i] = \"five\";\n                break;\n\
    \            case 6:\n                nums[i] = \"six\";\n                break;\n\
    \            case 7:\n                nums[i] = \"seven\";\n                break;\n\
    \            case 8:\n                nums[i] = \"eight\";\n                break;\n\
    \            case 9:\n                nums[i] = \"nine\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpsxj9dx32.d(87): Error: Implicit string concatenation is deprecated,
    use "nine\x0aunittest\x0a{\x0a    alias candidate = sort_numbers;\x0a\x0a    assert(candidate("
    ~ ") == " instead

    /tmp/tmpsxj9dx32.d(87): Error: Implicit string concatenation is deprecated, use
    ") == " ~ ");\x0a    assert(candidate(" instead

    /tmp/tmpsxj9dx32.d(88): Error: found `three` when expecting `;` following statement

    /tmp/tmpsxj9dx32.d(88): Error: found `three` when expecting `;` following statement

    /tmp/tmpsxj9dx32.d(89): Error: found `three` when expecting `;` following statement

    /tmp/tmpsxj9dx32.d(89): Error: found `nine` when expecting `;` following statement

    /tmp/tmpsxj9dx32.d(89): Error: found `three` when expecting `;` following statement

    /tmp/tmpsxj9dx32.d(89): Error: found `nine` when expecting `;` following statement

    /tmp/tmpsxj9dx32.d(90): Error: found `five` when expecting `;` following statement

    /tmp/tmpsxj9dx32.d(90): Error: found `four` when expecting `;` following statement

    /tmp/tmpsxj9dx32.d(90): Error: found `'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    import std.algorithm;\n    import std.array;\n\
    \    import std.conv;\n    import std.range;\n    import std.string;\n    import\
    \ std.typecons;\n    import std.math;\n    import std.stdio;\n    import std.traits;\n\
    \    import std.typecons;\n    import std.math;\n    import std.algorithm;\n \
    \   import std.array;\n    import std.conv;\n    import std.range;\n    import\
    \ std.string;\n    import std.typecons;\n    import std.math;\n    import std.algorithm;\n\
    \    import std.array;\n    import std.conv;\n    import std.range;\n    import\
    \ std.string;\n    import std.typecons;\n    import std.math;\n    import std.algorithm;\n\
    \    import std.array;\n    import std.conv;\n    import std.range;\n    import\
    \ std.string;\n    import std.typecons;\n    import std.math;\n    import std.algorithm;\n\
    \    import std.array;\n    import std.conv;\n    import std.range;\n    import\
    \ std.string;\n    import std.typecons;\n    import std.math;\n    import std.algorithm;\n\
    \    import std.array;\n    import std.conv;\n    import std.range;\n    import\
    \ std.string;\n    import std.typecons;\n    import std.math;\n    import std.algorithm;\n\
    \    import std.array;\n    import std.conv;\n    import std.range;\n    import\
    \ std.string;\n    import std.typecons;\n    import std.math;\n    import std.algorithm;\n\
    \    import std.array;\n    import std.conv;\n    import std.range;\n    import\
    \ std.string;\n    import std.typecons;\n    import std.math;\n    import std.algorithm;\n\
    \    import std.array;\n    import std.conv;\n    import std.range;\n    import\
    \ std.string;\n    import std.typecons;\n    import std.math;\n    import std.algorithm;\n\
    \    import std.array;\n    import std.\nunittest\n{\n    alias candidate = sort_numbers;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"\
    three\");\n    assert(candidate(\"three five nine\") == \"three five nine\");\n\
    \    assert(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\");\n    assert(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp6ovtd2z6.d(81): Error: identifier expected following `package`

    /tmp/tmp6ovtd2z6.d(81): Error: `;` expected

    /tmp/tmp6ovtd2z6.d(91): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6ovtd2z6.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164104
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    int[] nums = numbers.split(\" \").map!(a\
    \ => to!int(a)).array;\n    sort(nums);\n    return nums.map!(a => to!string(a)).join(\"\
    \ \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpeqtkoyj4.d(11): Error: no property `split` for type `string`

    /tmp/tmpeqtkoyj4.d(12): Error: undefined identifier `sort`, did you mean function
    `sqrt`?

    /tmp/tmpeqtkoyj4.d(13): Error: no property `map` for type `int[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpeqtkoyj4.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    int[] nums;\n    foreach(immutable num;\
    \ numbers.split(\" \"))\n    {\n        nums ~= numeralToInt(num);\n    }\n  \
    \  nums.sort();\n    string result;\n    foreach(immutable num; nums)\n    {\n\
    \        result ~= intToNumeral(num) ~ \" \";\n    }\n    return result.stripRight();\n\
    }\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpsg_9ajlw.d(12): Error: no property `split` for type `string`

    /tmp/tmpsg_9ajlw.d(16): Error: no property `sort` for type `int[]`

    /tmp/tmpsg_9ajlw.d(20): Error: undefined identifier `intToNumeral`

    /tmp/tmpsg_9ajlw.d(22): Error: no property `stripRight` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsg_9ajlw.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164104
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split(\" \");\n\
    \    int[] nums_int = new int[nums.length];\n    foreach(i, num; nums)\n    {\n\
    \        nums_int[i] = num_to_int(num);\n    }\n    sort(nums_int);\n    nums\
    \ = new string[nums_int.length];\n    foreach(i, num; nums_int)\n    {\n     \
    \   nums[i] = int_to_num(num);\n    }\n    return nums.join(\" \");\n}\nunittest\n\
    {\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"three\
    \ five nine\") == \"three five nine\");\n    assert(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp_0g6tgva.d(11): Error: no property `split` for type `string`

    /tmp/tmp_0g6tgva.d(15): Error: undefined identifier `num_to_int`

    /tmp/tmp_0g6tgva.d(17): Error: undefined identifier `sort`, did you mean function
    `sqrt`?

    /tmp/tmp_0g6tgva.d(21): Error: undefined identifier `int_to_num`

    /tmp/tmp_0g6tgva.d(23): Error: no property `join` for type `string[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_0g6tgva.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164104
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split(\" \");\n\
    \    int[] nums_int = new int[nums.length];\n    foreach(i, num; nums)\n    {\n\
    \        switch(num)\n        {\n            case \"zero\":\n                nums_int[i]\
    \ = 0;\n                break;\n            case \"one\":\n                nums_int[i]\
    \ = 1;\n                break;\n            case \"two\":\n                nums_int[i]\
    \ = 2;\n                break;\n            case \"three\":\n                nums_int[i]\
    \ = 3;\n                break;\n            case \"four\":\n                nums_int[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort!((a, b) =>\
    \ a < b);\n    foreach(i, num; nums_int)\n    {\n        switch(num)\n       \
    \ {\n            case 0:\n                nums[i] = \"zero\";\n              \
    \  break;\n            case 1:\n                nums[i] = \"one\";\n         \
    \       break;\n            case 2:\n                nums[i] = \"two\";\n    \
    \            break;\n            case 3:\n                nums[i] = \"three\"\
    ;\n                break;\n            case 4:\n                nums[i] = \"four\"\
    ;\n                break;\n            case 5:\n                nums[i] = \"five\"\
    ;\n                break;\n            case 6:\n                nums[i] = \"six\"\
    ;\n                break;\n            case 7:\n                nums[i] = \"seven\"\
    ;\n                break;\n            case 8:\n                nums[i] = \"eight\"\
    ;\n                break;\n            case 9:\nunittest\n{\n    alias candidate\
    \ = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp8wnvkhau.d(82): Error: found `unittest` instead of statement

    /tmp/tmp8wnvkhau.d(92): Error: found `End of File` when expecting `}` following
    compound statement

    /tmp/tmp8wnvkhau.d(92): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8wnvkhau.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    int[] nums = numbers.split(\" \").map!(a\
    \ => to!int(a)).array;\n    sort(nums);\n    return nums.map!(a => to!string(a)).join(\"\
    \ \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpeqtkoyj4.d(11): Error: no property `split` for type `string`

    /tmp/tmpeqtkoyj4.d(12): Error: undefined identifier `sort`, did you mean function
    `sqrt`?

    /tmp/tmpeqtkoyj4.d(13): Error: no property `map` for type `int[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpeqtkoyj4.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split(\" \");\n\
    \    int[] nums_int = new int[nums.length];\n    foreach(i, num; nums)\n    {\n\
    \        switch(num)\n        {\n            case \"zero\":\n                nums_int[i]\
    \ = 0;\n                break;\n            case \"one\":\n                nums_int[i]\
    \ = 1;\n                break;\n            case \"two\":\n                nums_int[i]\
    \ = 2;\n                break;\n            case \"three\":\n                nums_int[i]\
    \ = 3;\n                break;\n            case \"four\":\n                nums_int[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort();\n    foreach(i,\
    \ num; nums_int)\n    {\n        switch(num)\n        {\n            case 0:\n\
    \                nums[i] = \"zero\";\n                break;\n            case\
    \ 1:\n                nums[i] = \"one\";\n                break;\n           \
    \ case 2:\n                nums[i] = \"two\";\n                break;\n      \
    \      case 3:\n                nums[i] = \"three\";\n                break;\n\
    \            case 4:\n                nums[i] = \"four\";\n                break;\n\
    \            case 5:\n                nums[i] = \"five\";\n                break;\n\
    \            case 6:\n                nums[i] = \"six\";\n                break;\n\
    \            case 7:\n                nums[i] = \"seven\";\n                break;\n\
    \            case 8:\n                nums[i] = \"eight\";\n                break;\n\
    \            case 9:\n                nums[i] = \"nine\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpzj6gcnh4.d(87): Error: Implicit string concatenation is deprecated,
    use "nine\x0aunittest\x0a{\x0a    alias candidate = sort_numbers;\x0a\x0a    assert(candidate("
    ~ ") == " instead

    /tmp/tmpzj6gcnh4.d(87): Error: Implicit string concatenation is deprecated, use
    ") == " ~ ");\x0a    assert(candidate(" instead

    /tmp/tmpzj6gcnh4.d(88): Error: found `three` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(88): Error: found `three` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(89): Error: found `three` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(89): Error: found `nine` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(89): Error: found `three` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(89): Error: found `nine` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(90): Error: found `five` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(90): Error: found `four` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(90): Error: found `'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split(\" \");\n\
    \    int[] nums_int = new int[nums.length];\n    foreach(i, num; nums)\n    {\n\
    \        nums_int[i] = to!int(num);\n    }\n    nums_int.sort;\n    foreach(i,\
    \ num; nums_int)\n    {\n        nums[i] = to!string(num);\n    }\n    return\
    \ nums.join(\" \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n \
    \   assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"three\"\
    );\n    assert(candidate(\"three five nine\") == \"three five nine\");\n    assert(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\");\n\
    \    assert(candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp7zp1knin.d(11): Error: no property `split` for type `string`

    /tmp/tmp7zp1knin.d(15): Error: template instance `to!int` template `to` is not
    defined, did you mean No?

    /tmp/tmp7zp1knin.d(17): Error: no property `sort` for type `int[]`

    /tmp/tmp7zp1knin.d(20): Error: template instance `to!string` template `to` is
    not defined, did you mean No?

    /tmp/tmp7zp1knin.d(22): Error: no property `join` for type `string[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7zp1knin.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164104
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split(\" \");\n\
    \    int[] nums_int = new int[nums.length];\n    foreach(i, num; nums)\n    {\n\
    \        nums_int[i] = num_to_int(num);\n    }\n    sort(nums_int);\n    foreach(i,\
    \ num; nums_int)\n    {\n        nums[i] = int_to_num(num);\n    }\n    return\
    \ nums.join(\" \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n \
    \   assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"three\"\
    );\n    assert(candidate(\"three five nine\") == \"three five nine\");\n    assert(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\");\n\
    \    assert(candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpm3lw7ewu.d(11): Error: no property `split` for type `string`

    /tmp/tmpm3lw7ewu.d(15): Error: undefined identifier `num_to_int`

    /tmp/tmpm3lw7ewu.d(17): Error: undefined identifier `sort`, did you mean function
    `sqrt`?

    /tmp/tmpm3lw7ewu.d(20): Error: undefined identifier `int_to_num`

    /tmp/tmpm3lw7ewu.d(22): Error: no property `join` for type `string[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpm3lw7ewu.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164104
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split(\" \");\n\
    \    int[] nums_int = new int[nums.length];\n    foreach(i, num; nums)\n    {\n\
    \        switch(num)\n        {\n            case \"zero\":\n                nums_int[i]\
    \ = 0;\n                break;\n            case \"one\":\n                nums_int[i]\
    \ = 1;\n                break;\n            case \"two\":\n                nums_int[i]\
    \ = 2;\n                break;\n            case \"three\":\n                nums_int[i]\
    \ = 3;\n                break;\n            case \"four\":\n                nums_int[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort();\n    foreach(i,\
    \ num; nums_int)\n    {\n        switch(num)\n        {\n            case 0:\n\
    \                nums[i] = \"zero\";\n                break;\n            case\
    \ 1:\n                nums[i] = \"one\";\n                break;\n           \
    \ case 2:\n                nums[i] = \"two\";\n                break;\n      \
    \      case 3:\n                nums[i] = \"three\";\n                break;\n\
    \            case 4:\n                nums[i] = \"four\";\n                break;\n\
    \            case 5:\n                nums[i] = \"five\";\n                break;\n\
    \            case 6:\n                nums[i] = \"six\";\n                break;\n\
    \            case 7:\n                nums[i] = \"seven\";\n                break;\n\
    \            case 8:\n                nums[i] = \"eight\";\n                break;\n\
    \            case 9:\n                nums[i] = \"nine\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpzj6gcnh4.d(87): Error: Implicit string concatenation is deprecated,
    use "nine\x0aunittest\x0a{\x0a    alias candidate = sort_numbers;\x0a\x0a    assert(candidate("
    ~ ") == " instead

    /tmp/tmpzj6gcnh4.d(87): Error: Implicit string concatenation is deprecated, use
    ") == " ~ ");\x0a    assert(candidate(" instead

    /tmp/tmpzj6gcnh4.d(88): Error: found `three` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(88): Error: found `three` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(89): Error: found `three` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(89): Error: found `nine` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(89): Error: found `three` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(89): Error: found `nine` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(90): Error: found `five` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(90): Error: found `four` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(90): Error: found `'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split(\" \");\n\
    \    int[] nums_int = new int[nums.length];\n    foreach(int i, string num; nums)\n\
    \    {\n        nums_int[i] = to!int(num);\n    }\n    sort(nums_int);\n    foreach(int\
    \ i, int num; nums_int)\n    {\n        nums[i] = to!string(num);\n    }\n   \
    \ return join(nums, \" \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"\
    three\");\n    assert(candidate(\"three five nine\") == \"three five nine\");\n\
    \    assert(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\");\n    assert(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpzin8rk5t.d(11): Error: no property `split` for type `string`

    /tmp/tmpzin8rk5t.d(15): Error: template instance `to!int` template `to` is not
    defined, did you mean No?

    /tmp/tmpzin8rk5t.d(17): Error: undefined identifier `sort`, did you mean function
    `sqrt`?

    /tmp/tmpzin8rk5t.d(20): Error: template instance `to!string` template `to` is
    not defined, did you mean No?

    /tmp/tmpzin8rk5t.d(22): Error: undefined identifier `join`, did you mean function
    `main`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpzin8rk5t.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164104
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    int[] nums = new int[numbers.length];\n\
    \    int i = 0;\n    foreach(string num; numbers.split(\" \"))\n    {\n      \
    \  switch(num)\n        {\n            case \"zero\":\n                nums[i]\
    \ = 0;\n                break;\n            case \"one\":\n                nums[i]\
    \ = 1;\n                break;\n            case \"two\":\n                nums[i]\
    \ = 2;\n                break;\n            case \"three\":\n                nums[i]\
    \ = 3;\n                break;\n            case \"four\":\n                nums[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums[i]\
    \ = 9;\n                break;\n        }\n        i++;\n    }\n    nums.sort;\n\
    \    string result = \"\";\n    foreach(int num; nums)\n    {\n        switch(num)\n\
    \        {\n            case 0:\n                result ~= \"zero \";\n      \
    \          break;\n            case 1:\n                result ~= \"one \";\n\
    \                break;\n            case 2:\n                result ~= \"two\
    \ \";\n                break;\n            case 3:\n                result ~=\
    \ \"three \";\n                break;\n            case 4:\n                result\
    \ ~= \"four \";\n                break;\n            case 5:\n               \
    \ result ~= \"five \";\n                break;\n            case 6:\n        \
    \        result ~= \"six \";\n                break;\n            case 7:\n  \
    \              result ~= \"seven \";\n                break;\n            case\
    \ 8:\n                result ~= \"eight \";\n                break;\n        \
    \    case 9:\n                result ~= \"nine \";\n                break;\n \
    \       }\n    }\n    return result.stripRight;\n}\nunittest\n{\n    alias candidate\
    \ = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp6499_6j8.d(13): Error: no property `split` for type `string`

    /tmp/tmp6499_6j8.d(50): Error: no property `sort` for type `int[]`

    /tmp/tmp6499_6j8.d(54): Error: `switch` statement without a `default`; use `final
    switch` or add `default: assert(0);` or add `default: break;`

    /tmp/tmp6499_6j8.d(88): Error: no property `stripRight` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6499_6j8.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164104
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split(\" \");\n\
    \    int[] nums_int = new int[nums.length];\n    foreach(i, num; nums)\n    {\n\
    \        switch(num)\n        {\n            case \"zero\":\n                nums_int[i]\
    \ = 0;\n                break;\n            case \"one\":\n                nums_int[i]\
    \ = 1;\n                break;\n            case \"two\":\n                nums_int[i]\
    \ = 2;\n                break;\n            case \"three\":\n                nums_int[i]\
    \ = 3;\n                break;\n            case \"four\":\n                nums_int[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort();\n    foreach(i,\
    \ num; nums_int)\n    {\n        switch(num)\n        {\n            case 0:\n\
    \                nums[i] = \"zero\";\n                break;\n            case\
    \ 1:\n                nums[i] = \"one\";\n                break;\n           \
    \ case 2:\n                nums[i] = \"two\";\n                break;\n      \
    \      case 3:\n                nums[i] = \"three\";\n                break;\n\
    \            case 4:\n                nums[i] = \"four\";\n                break;\n\
    \            case 5:\n                nums[i] = \"five\";\n                break;\n\
    \            case 6:\n                nums[i] = \"six\";\n                break;\n\
    \            case 7:\n                nums[i] = \"seven\";\n                break;\n\
    \            case 8:\n                nums[i] = \"eight\";\n                break;\n\
    \            case 9:\n                nums[i] = \"nine\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpzj6gcnh4.d(87): Error: Implicit string concatenation is deprecated,
    use "nine\x0aunittest\x0a{\x0a    alias candidate = sort_numbers;\x0a\x0a    assert(candidate("
    ~ ") == " instead

    /tmp/tmpzj6gcnh4.d(87): Error: Implicit string concatenation is deprecated, use
    ") == " ~ ");\x0a    assert(candidate(" instead

    /tmp/tmpzj6gcnh4.d(88): Error: found `three` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(88): Error: found `three` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(89): Error: found `three` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(89): Error: found `nine` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(89): Error: found `three` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(89): Error: found `nine` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(90): Error: found `five` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(90): Error: found `four` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(90): Error: found `'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    import std.conv;\n    import std.algorithm;\n\
    \    import std.range;\n    import std.array;\n    import std.string;\n    import\
    \ std.typecons;\n    import std.math;\n    import std.stdio;\n    import std.traits;\n\
    \    import std.meta;\n    import std.range;\n    import std.typecons;\n    import\
    \ std.algorithm;\n    import std.array;\n    import std.range;\n    import std.string;\n\
    \    import std.typecons;\n    import std.math;\n    import std.stdio;\n    import\
    \ std.traits;\n    import std.meta;\n    import std.range;\n    import std.typecons;\n\
    \    import std.algorithm;\n    import std.array;\n    import std.range;\n   \
    \ import std.string;\n    import std.typecons;\n    import std.math;\n    import\
    \ std.stdio;\n    import std.traits;\n    import std.meta;\n    import std.range;\n\
    \    import std.typecons;\n    import std.algorithm;\n    import std.array;\n\
    \    import std.range;\n    import std.string;\n    import std.typecons;\n   \
    \ import std.math;\n    import std.stdio;\n    import std.traits;\n    import\
    \ std.meta;\n    import std.range;\n    import std.typecons;\n    import std.algorithm;\n\
    \    import std.array;\n    import std.range;\n    import std.string;\n    import\
    \ std.typecons;\n    import std.math;\n    import std.stdio;\n    import std.traits;\n\
    \    import std.meta;\n    import std.range;\n    import std.typecons;\n    import\
    \ std.algorithm;\n    import std.array;\n    import std.range;\n    import std.string;\n\
    \    import std.typecons;\n    import std.math;\n    import std.stdio;\n    import\
    \ std.traits;\n    import std.meta;\n    import std.range;\n    import std.typecons;\n\
    \    import std.algorithm;\n    import\nunittest\n{\n    alias candidate = sort_numbers;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"\
    three\");\n    assert(candidate(\"three five nine\") == \"three five nine\");\n\
    \    assert(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\");\n    assert(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpaopsx1kw.d(80): Error: identifier expected following `import`

    /tmp/tmpaopsx1kw.d(80): Error: `;` expected

    /tmp/tmpaopsx1kw.d(90): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpaopsx1kw.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164104
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    int[] nums = new int[numbers.length];\n\
    \    int i = 0;\n    foreach(n; numbers.split(\" \"))\n    {\n        switch(n)\n\
    \        {\n            case \"zero\":\n                nums[i] = 0;\n       \
    \         break;\n            case \"one\":\n                nums[i] = 1;\n  \
    \              break;\n            case \"two\":\n                nums[i] = 2;\n\
    \                break;\n            case \"three\":\n                nums[i]\
    \ = 3;\n                break;\n            case \"four\":\n                nums[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums[i]\
    \ = 9;\n                break;\n        }\n        i++;\n    }\n    nums.sort;\n\
    \    string result = \"\";\n    foreach(n; nums)\n    {\n        switch(n)\n \
    \       {\n            case 0:\n                result ~= \"zero \";\n       \
    \         break;\n            case 1:\n                result ~= \"one \";\n \
    \               break;\n            case 2:\n                result ~= \"two \"\
    ;\n                break;\n            case 3:\n                result ~= \"three\
    \ \";\n                break;\n            case 4:\n                result ~=\
    \ \"four \";\n                break;\n            case 5:\n                result\
    \ ~= \"five \";\n                break;\n            case 6:\n               \
    \ result ~= \"six \";\n                break;\n            case 7:\n         \
    \       result ~= \"seven \";\n                break;\n            case 8:\n \
    \               result ~= \"eight \";\n                break;\n            case\
    \ 9:\n                result ~= \"nine \";\n                break;\n        }\n\
    \    }\n    return result.stripRight;\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"\
    three\");\n    assert(candidate(\"three five nine\") == \"three five nine\");\n\
    \    assert(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\");\n    assert(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpb4lnlwci.d(13): Error: no property `split` for type `string`

    /tmp/tmpb4lnlwci.d(50): Error: no property `sort` for type `int[]`

    /tmp/tmpb4lnlwci.d(54): Error: `switch` statement without a `default`; use `final
    switch` or add `default: assert(0);` or add `default: break;`

    /tmp/tmpb4lnlwci.d(88): Error: no property `stripRight` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpb4lnlwci.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split(\" \");\n\
    \    int[] nums_int = new int[nums.length];\n    foreach(i, num; nums)\n    {\n\
    \        switch(num)\n        {\n            case \"zero\":\n                nums_int[i]\
    \ = 0;\n                break;\n            case \"one\":\n                nums_int[i]\
    \ = 1;\n                break;\n            case \"two\":\n                nums_int[i]\
    \ = 2;\n                break;\n            case \"three\":\n                nums_int[i]\
    \ = 3;\n                break;\n            case \"four\":\n                nums_int[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort!((a, b) =>\
    \ a < b);\n    foreach(i, num; nums_int)\n    {\n        switch(num)\n       \
    \ {\n            case 0:\n                nums[i] = \"zero\";\n              \
    \  break;\n            case 1:\n                nums[i] = \"one\";\n         \
    \       break;\n            case 2:\n                nums[i] = \"two\";\n    \
    \            break;\n            case 3:\n                nums[i] = \"three\"\
    ;\n                break;\n            case 4:\n                nums[i] = \"four\"\
    ;\n                break;\n            case 5:\n                nums[i] = \"five\"\
    ;\n                break;\n            case 6:\n                nums[i] = \"six\"\
    ;\n                break;\n            case 7:\n                nums[i] = \"seven\"\
    ;\n                break;\n            case 8:\n                nums[i] = \"eight\"\
    ;\n                break;\n            case 9:\nunittest\n{\n    alias candidate\
    \ = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp8wnvkhau.d(82): Error: found `unittest` instead of statement

    /tmp/tmp8wnvkhau.d(92): Error: found `End of File` when expecting `}` following
    compound statement

    /tmp/tmp8wnvkhau.d(92): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8wnvkhau.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split(\" \");\n\
    \    int[] nums_int = new int[nums.length];\n    foreach(i, num; nums)\n    {\n\
    \        switch(num)\n        {\n            case \"zero\":\n                nums_int[i]\
    \ = 0;\n                break;\n            case \"one\":\n                nums_int[i]\
    \ = 1;\n                break;\n            case \"two\":\n                nums_int[i]\
    \ = 2;\n                break;\n            case \"three\":\n                nums_int[i]\
    \ = 3;\n                break;\n            case \"four\":\n                nums_int[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort;\n    foreach(i,\
    \ num; nums_int)\n    {\n        switch(num)\n        {\n            case 0:\n\
    \                nums[i] = \"zero\";\n                break;\n            case\
    \ 1:\n                nums[i] = \"one\";\n                break;\n           \
    \ case 2:\n                nums[i] = \"two\";\n                break;\n      \
    \      case 3:\n                nums[i] = \"three\";\n                break;\n\
    \            case 4:\n                nums[i] = \"four\";\n                break;\n\
    \            case 5:\n                nums[i] = \"five\";\n                break;\n\
    \            case 6:\n                nums[i] = \"six\";\n                break;\n\
    \            case 7:\n                nums[i] = \"seven\";\n                break;\n\
    \            case 8:\n                nums[i] = \"eight\";\n                break;\n\
    \            case 9:\n                nums[i] = \"nine\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpsxj9dx32.d(87): Error: Implicit string concatenation is deprecated,
    use "nine\x0aunittest\x0a{\x0a    alias candidate = sort_numbers;\x0a\x0a    assert(candidate("
    ~ ") == " instead

    /tmp/tmpsxj9dx32.d(87): Error: Implicit string concatenation is deprecated, use
    ") == " ~ ");\x0a    assert(candidate(" instead

    /tmp/tmpsxj9dx32.d(88): Error: found `three` when expecting `;` following statement

    /tmp/tmpsxj9dx32.d(88): Error: found `three` when expecting `;` following statement

    /tmp/tmpsxj9dx32.d(89): Error: found `three` when expecting `;` following statement

    /tmp/tmpsxj9dx32.d(89): Error: found `nine` when expecting `;` following statement

    /tmp/tmpsxj9dx32.d(89): Error: found `three` when expecting `;` following statement

    /tmp/tmpsxj9dx32.d(89): Error: found `nine` when expecting `;` following statement

    /tmp/tmpsxj9dx32.d(90): Error: found `five` when expecting `;` following statement

    /tmp/tmpsxj9dx32.d(90): Error: found `four` when expecting `;` following statement

    /tmp/tmpsxj9dx32.d(90): Error: found `'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split(\" \");\n\
    \    int[] nums_int = new int[nums.length];\n    foreach(i, num; nums)\n    {\n\
    \        nums_int[i] = to!int(num);\n    }\n    sort(nums_int);\n    string result\
    \ = \"\";\n    foreach(num; nums_int)\n    {\n        result ~= to!string(num)\
    \ ~ \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"\
    three\");\n    assert(candidate(\"three five nine\") == \"three five nine\");\n\
    \    assert(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\");\n    assert(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp6v0sse3f.d(11): Error: no property `split` for type `string`

    /tmp/tmp6v0sse3f.d(15): Error: template instance `to!int` template `to` is not
    defined, did you mean No?

    /tmp/tmp6v0sse3f.d(17): Error: undefined identifier `sort`, did you mean function
    `sqrt`?

    /tmp/tmp6v0sse3f.d(21): Error: template instance `to!string` template `to` is
    not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6v0sse3f.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split(\" \");\n\
    \    string[] nums_sorted = nums.dup;\n    nums_sorted.sort!((a, b) => a.compare(b));\n\
    \    string[] nums_sorted_str = nums_sorted.map!(a => a.idup).array;\n    return\
    \ nums_sorted_str.join(\" \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"\
    three\");\n    assert(candidate(\"three five nine\") == \"three five nine\");\n\
    \    assert(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\");\n    assert(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp8eq0kgc6.d(11): Error: no property `split` for type `string`

    /tmp/tmp8eq0kgc6.d(13): Error: no property `sort` for type `string[]`

    /tmp/tmp8eq0kgc6.d(14): Error: no property `map` for type `string[]`

    /tmp/tmp8eq0kgc6.d(15): Error: no property `join` for type `string[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8eq0kgc6.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164104
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split(\" \");\n\
    \    int[] nums_int = new int[nums.length];\n    foreach(i, num; nums)\n    {\n\
    \        switch(num)\n        {\n            case \"zero\": nums_int[i] = 0; break;\n\
    \            case \"one\": nums_int[i] = 1; break;\n            case \"two\":\
    \ nums_int[i] = 2; break;\n            case \"three\": nums_int[i] = 3; break;\n\
    \            case \"four\": nums_int[i] = 4; break;\n            case \"five\"\
    : nums_int[i] = 5; break;\n            case \"six\": nums_int[i] = 6; break;\n\
    \            case \"seven\": nums_int[i] = 7; break;\n            case \"eight\"\
    : nums_int[i] = 8; break;\n            case \"nine\": nums_int[i] = 9; break;\n\
    \        }\n    }\n    nums_int.sort();\n    foreach(i, num; nums_int)\n    {\n\
    \        switch(num)\n        {\n            case 0: nums[i] = \"zero\"; break;\n\
    \            case 1: nums[i] = \"one\"; break;\n            case 2: nums[i] =\
    \ \"two\"; break;\n            case 3: nums[i] = \"three\"; break;\n         \
    \   case 4: nums[i] = \"four\"; break;\n            case 5: nums[i] = \"five\"\
    ; break;\n            case 6: nums[i] = \"six\"; break;\n            case 7: nums[i]\
    \ = \"seven\"; break;\n            case 8: nums[i] = \"eight\"; break;\n     \
    \       case 9: nums[i] = \"nine\"; break;\n        }\n    }\n    return nums.join(\"\
    \ \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp90ozul6z.d(11): Error: no property `split` for type `string`

    /tmp/tmp90ozul6z.d(15): Error: `switch` statement without a `default`; use `final
    switch` or add `default: assert(0);` or add `default: break;`

    /tmp/tmp90ozul6z.d(29): Error: no property `sort` for type `int[]`

    /tmp/tmp90ozul6z.d(32): Error: `switch` statement without a `default`; use `final
    switch` or add `default: assert(0);` or add `default: break;`

    /tmp/tmp90ozul6z.d(46): Error: no property `join` for type `string[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp90ozul6z.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split(\" \");\n\
    \    int[] nums_int = new int[nums.length];\n    foreach(i, num; nums)\n    {\n\
    \        switch(num)\n        {\n            case \"zero\": nums_int[i] = 0; break;\n\
    \            case \"one\": nums_int[i] = 1; break;\n            case \"two\":\
    \ nums_int[i] = 2; break;\n            case \"three\": nums_int[i] = 3; break;\n\
    \            case \"four\": nums_int[i] = 4; break;\n            case \"five\"\
    : nums_int[i] = 5; break;\n            case \"six\": nums_int[i] = 6; break;\n\
    \            case \"seven\": nums_int[i] = 7; break;\n            case \"eight\"\
    : nums_int[i] = 8; break;\n            case \"nine\": nums_int[i] = 9; break;\n\
    \        }\n    }\n    nums_int.sort;\n    foreach(i, num; nums_int)\n    {\n\
    \        switch(num)\n        {\n            case 0: nums[i] = \"zero\"; break;\n\
    \            case 1: nums[i] = \"one\"; break;\n            case 2: nums[i] =\
    \ \"two\"; break;\n            case 3: nums[i] = \"three\"; break;\n         \
    \   case 4: nums[i] = \"four\"; break;\n            case 5: nums[i] = \"five\"\
    ; break;\n            case 6: nums[i] = \"six\"; break;\n            case 7: nums[i]\
    \ = \"seven\"; break;\n            case 8: nums[i] = \"eight\"; break;\n     \
    \       case 9: nums[i] = \"nine\"; break;\n        }\n    }\n    return nums.join(\"\
    \ \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpntw7rt2m.d(11): Error: no property `split` for type `string`

    /tmp/tmpntw7rt2m.d(15): Error: `switch` statement without a `default`; use `final
    switch` or add `default: assert(0);` or add `default: break;`

    /tmp/tmpntw7rt2m.d(29): Error: no property `sort` for type `int[]`

    /tmp/tmpntw7rt2m.d(32): Error: `switch` statement without a `default`; use `final
    switch` or add `default: assert(0);` or add `default: break;`

    /tmp/tmpntw7rt2m.d(46): Error: no property `join` for type `string[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpntw7rt2m.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164104
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    int[] nums = new int[numbers.length];\n\
    \    string[] nums_str = numbers.split(\" \");\n    foreach(i, num; nums_str)\n\
    \    {\n        switch(num)\n        {\n            case \"zero\":\n         \
    \       nums[i] = 0;\n                break;\n            case \"one\":\n    \
    \            nums[i] = 1;\n                break;\n            case \"two\":\n\
    \                nums[i] = 2;\n                break;\n            case \"three\"\
    :\n                nums[i] = 3;\n                break;\n            case \"four\"\
    :\n                nums[i] = 4;\n                break;\n            case \"five\"\
    :\n                nums[i] = 5;\n                break;\n            case \"six\"\
    :\n                nums[i] = 6;\n                break;\n            case \"seven\"\
    :\n                nums[i] = 7;\n                break;\n            case \"eight\"\
    :\n                nums[i] = 8;\n                break;\n            case \"nine\"\
    :\n                nums[i] = 9;\n                break;\n        }\n    }\n  \
    \  sort(nums);\n    string result = \"\";\n    foreach(i, num; nums)\n    {\n\
    \        switch(num)\n        {\n            case 0:\n                result ~=\
    \ \"zero\";\n                break;\n            case 1:\n                result\
    \ ~= \"one\";\n                break;\n            case 2:\n                result\
    \ ~= \"two\";\n                break;\n            case 3:\n                result\
    \ ~= \"three\";\n                break;\n            case 4:\n               \
    \ result ~= \"four\";\n                break;\n            case 5:\n         \
    \       result ~= \"five\";\n                break;\n            case 6:\n   \
    \             result ~= \"six\";\n                break;\n            case 7:\n\
    \                result ~= \"seven\";\n                break;\n            case\
    \ 8:\n                result ~= \"eight\";\n                break;\n         \
    \   case 9:\n                result ~= \"nine\";\n                break;\n   \
    \     }\n        if(i != nums.length - 1)\n            result ~= \" \";\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n \
    \   assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"three\"\
    );\n    assert(candidate(\"three five nine\") == \"three five nine\");\n    assert(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\");\n\
    \    assert(candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpxonugrcw.d(12): Error: no property `split` for type `string`

    /tmp/tmpxonugrcw.d(15): Error: `switch` statement without a `default`; use `final
    switch` or add `default: assert(0);` or add `default: break;`

    /tmp/tmpxonugrcw.d(49): Error: undefined identifier `sort`, did you mean function
    `sqrt`?

    /tmp/tmpxonugrcw.d(53): Error: `switch` statement without a `default`; use `final
    switch` or add `default: assert(0);` or add `default: break;`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxonugrcw.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164104
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split(\" \");\n\
    \    int[] nums_int = new int[nums.length];\n    foreach(i, num; nums)\n    {\n\
    \        switch(num)\n        {\n            case \"zero\":\n                nums_int[i]\
    \ = 0;\n                break;\n            case \"one\":\n                nums_int[i]\
    \ = 1;\n                break;\n            case \"two\":\n                nums_int[i]\
    \ = 2;\n                break;\n            case \"three\":\n                nums_int[i]\
    \ = 3;\n                break;\n            case \"four\":\n                nums_int[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort;\n    string\
    \ result = \"\";\n    foreach(i, num; nums_int)\n    {\n        switch(num)\n\
    \        {\n            case 0:\n                result ~= \"zero\";\n       \
    \         break;\n            case 1:\n                result ~= \"one\";\n  \
    \              break;\n            case 2:\n                result ~= \"two\"\
    ;\n                break;\n            case 3:\n                result ~= \"three\"\
    ;\n                break;\n            case 4:\n                result ~= \"four\"\
    ;\n                break;\n            case 5:\n                result ~= \"five\"\
    ;\n                break;\n            case 6:\n                result ~= \"six\"\
    ;\n                break;\n            case 7:\n                result ~= \"seven\"\
    ;\n                break;\n            case 8:\n                result ~= \"eight\"\
    ;\n                break;\n            case 9:\n                result ~= \"nine\"\
    ;\n                break;\n        }\n        if(i < nums_int.length - 1)\nunittest\n\
    {\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"three\
    \ five nine\") == \"three five nine\");\n    assert(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpeqkefzhq.d(87): Error: found `unittest` instead of statement

    /tmp/tmpeqkefzhq.d(97): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpeqkefzhq.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164104
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split(\" \");\n\
    \    int[] nums_int = new int[nums.length];\n    foreach(i, num; nums)\n    {\n\
    \        switch(num)\n        {\n            case \"zero\": nums_int[i] = 0; break;\n\
    \            case \"one\": nums_int[i] = 1; break;\n            case \"two\":\
    \ nums_int[i] = 2; break;\n            case \"three\": nums_int[i] = 3; break;\n\
    \            case \"four\": nums_int[i] = 4; break;\n            case \"five\"\
    : nums_int[i] = 5; break;\n            case \"six\": nums_int[i] = 6; break;\n\
    \            case \"seven\": nums_int[i] = 7; break;\n            case \"eight\"\
    : nums_int[i] = 8; break;\n            case \"nine\": nums_int[i] = 9; break;\n\
    \        }\n    }\n    nums_int.sort;\n    string[] nums_str = new string[nums.length];\n\
    \    foreach(i, num; nums_int)\n    {\n        switch(num)\n        {\n      \
    \      case 0: nums_str[i] = \"zero\"; break;\n            case 1: nums_str[i]\
    \ = \"one\"; break;\n            case 2: nums_str[i] = \"two\"; break;\n     \
    \       case 3: nums_str[i] = \"three\"; break;\n            case 4: nums_str[i]\
    \ = \"four\"; break;\n            case 5: nums_str[i] = \"five\"; break;\n   \
    \         case 6: nums_str[i] = \"six\"; break;\n            case 7: nums_str[i]\
    \ = \"seven\"; break;\n            case 8: nums_str[i] = \"eight\"; break;\n \
    \           case 9: nums_str[i] = \"nine\"; break;\n        }\n    }\n    return\
    \ nums_str.join(\" \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"\
    three\");\n    assert(candidate(\"three five nine\") == \"three five nine\");\n\
    \    assert(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\");\n    assert(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmppvpoa7u0.d(11): Error: no property `split` for type `string`

    /tmp/tmppvpoa7u0.d(15): Error: `switch` statement without a `default`; use `final
    switch` or add `default: assert(0);` or add `default: break;`

    /tmp/tmppvpoa7u0.d(29): Error: no property `sort` for type `int[]`

    /tmp/tmppvpoa7u0.d(33): Error: `switch` statement without a `default`; use `final
    switch` or add `default: assert(0);` or add `default: break;`

    /tmp/tmppvpoa7u0.d(47): Error: no property `join` for type `string[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmppvpoa7u0.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split(\" \");\n\
    \    int[] nums_int = new int[nums.length];\n    foreach(i,n; nums)\n    {\n \
    \       switch(n)\n        {\n            case \"zero\": nums_int[i] = 0; break;\n\
    \            case \"one\": nums_int[i] = 1; break;\n            case \"two\":\
    \ nums_int[i] = 2; break;\n            case \"three\": nums_int[i] = 3; break;\n\
    \            case \"four\": nums_int[i] = 4; break;\n            case \"five\"\
    : nums_int[i] = 5; break;\n            case \"six\": nums_int[i] = 6; break;\n\
    \            case \"seven\": nums_int[i] = 7; break;\n            case \"eight\"\
    : nums_int[i] = 8; break;\n            case \"nine\": nums_int[i] = 9; break;\n\
    \        }\n    }\n    sort(nums_int);\n    string[] nums_str = new string[nums.length];\n\
    \    foreach(i,n; nums_int)\n    {\n        switch(n)\n        {\n           \
    \ case 0: nums_str[i] = \"zero\"; break;\n            case 1: nums_str[i] = \"\
    one\"; break;\n            case 2: nums_str[i] = \"two\"; break;\n           \
    \ case 3: nums_str[i] = \"three\"; break;\n            case 4: nums_str[i] = \"\
    four\"; break;\n            case 5: nums_str[i] = \"five\"; break;\n         \
    \   case 6: nums_str[i] = \"six\"; break;\n            case 7: nums_str[i] = \"\
    seven\"; break;\n            case 8: nums_str[i] = \"eight\"; break;\n       \
    \     case 9: nums_str[i] = \"nine\"; break;\n        }\n    }\n    return join(nums_str,\"\
    \ \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmptvpi2jo9.d(11): Error: no property `split` for type `string`

    /tmp/tmptvpi2jo9.d(15): Error: `switch` statement without a `default`; use `final
    switch` or add `default: assert(0);` or add `default: break;`

    /tmp/tmptvpi2jo9.d(29): Error: undefined identifier `sort`, did you mean function
    `sqrt`?

    /tmp/tmptvpi2jo9.d(33): Error: `switch` statement without a `default`; use `final
    switch` or add `default: assert(0);` or add `default: break;`

    /tmp/tmptvpi2jo9.d(47): Error: undefined identifier `join`, did you mean function
    `main`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptvpi2jo9.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164104
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    int[] nums = new int[numbers.length];\n\
    \    int i = 0;\n    foreach(n; numbers.split(\" \"))\n    {\n        switch(n)\n\
    \        {\n            case \"zero\":\n                nums[i] = 0;\n       \
    \         break;\n            case \"one\":\n                nums[i] = 1;\n  \
    \              break;\n            case \"two\":\n                nums[i] = 2;\n\
    \                break;\n            case \"three\":\n                nums[i]\
    \ = 3;\n                break;\n            case \"four\":\n                nums[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums[i]\
    \ = 9;\n                break;\n        }\n        i++;\n    }\n    nums.sort();\n\
    \    string result = \"\";\n    foreach(n; nums)\n    {\n        switch(n)\n \
    \       {\n            case 0:\n                result ~= \"zero \";\n       \
    \         break;\n            case 1:\n                result ~= \"one \";\n \
    \               break;\n            case 2:\n                result ~= \"two \"\
    ;\n                break;\n            case 3:\n                result ~= \"three\
    \ \";\n                break;\n            case 4:\n                result ~=\
    \ \"four \";\n                break;\n            case 5:\n                result\
    \ ~= \"five \";\n                break;\n            case 6:\n               \
    \ result ~= \"six \";\n                break;\n            case 7:\n         \
    \       result ~= \"seven \";\n                break;\n            case 8:\n \
    \               result ~= \"eight \";\n                break;\n            case\
    \ 9:\n                result ~= \"nine \";\n                break;\n        }\n\
    \    }\n    return result.stripRight;\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"\
    three\");\n    assert(candidate(\"three five nine\") == \"three five nine\");\n\
    \    assert(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\");\n    assert(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpnshgw3i7.d(13): Error: no property `split` for type `string`

    /tmp/tmpnshgw3i7.d(50): Error: no property `sort` for type `int[]`

    /tmp/tmpnshgw3i7.d(54): Error: `switch` statement without a `default`; use `final
    switch` or add `default: assert(0);` or add `default: break;`

    /tmp/tmpnshgw3i7.d(88): Error: no property `stripRight` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnshgw3i7.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164104
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split(\" \");\n\
    \    int[] nums_int = new int[nums.length];\n    foreach(i, num; nums)\n    {\n\
    \        switch(num)\n        {\n            case \"zero\":\n                nums_int[i]\
    \ = 0;\n                break;\n            case \"one\":\n                nums_int[i]\
    \ = 1;\n                break;\n            case \"two\":\n                nums_int[i]\
    \ = 2;\n                break;\n            case \"three\":\n                nums_int[i]\
    \ = 3;\n                break;\n            case \"four\":\n                nums_int[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort;\n    foreach(i,\
    \ num; nums_int)\n    {\n        switch(num)\n        {\n            case 0:\n\
    \                nums[i] = \"zero\";\n                break;\n            case\
    \ 1:\n                nums[i] = \"one\";\n                break;\n           \
    \ case 2:\n                nums[i] = \"two\";\n                break;\n      \
    \      case 3:\n                nums[i] = \"three\";\n                break;\n\
    \            case 4:\n                nums[i] = \"four\";\n                break;\n\
    \            case 5:\n                nums[i] = \"five\";\n                break;\n\
    \            case 6:\n                nums[i] = \"six\";\n                break;\n\
    \            case 7:\n                nums[i] = \"seven\";\n                break;\n\
    \            case 8:\n                nums[i] = \"eight\";\n                break;\n\
    \            case 9:\n                nums[i] = \"nine\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpsxj9dx32.d(87): Error: Implicit string concatenation is deprecated,
    use "nine\x0aunittest\x0a{\x0a    alias candidate = sort_numbers;\x0a\x0a    assert(candidate("
    ~ ") == " instead

    /tmp/tmpsxj9dx32.d(87): Error: Implicit string concatenation is deprecated, use
    ") == " ~ ");\x0a    assert(candidate(" instead

    /tmp/tmpsxj9dx32.d(88): Error: found `three` when expecting `;` following statement

    /tmp/tmpsxj9dx32.d(88): Error: found `three` when expecting `;` following statement

    /tmp/tmpsxj9dx32.d(89): Error: found `three` when expecting `;` following statement

    /tmp/tmpsxj9dx32.d(89): Error: found `nine` when expecting `;` following statement

    /tmp/tmpsxj9dx32.d(89): Error: found `three` when expecting `;` following statement

    /tmp/tmpsxj9dx32.d(89): Error: found `nine` when expecting `;` following statement

    /tmp/tmpsxj9dx32.d(90): Error: found `five` when expecting `;` following statement

    /tmp/tmpsxj9dx32.d(90): Error: found `four` when expecting `;` following statement

    /tmp/tmpsxj9dx32.d(90): Error: found `'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split(\" \");\n\
    \    int[] nums_int = new int[nums.length];\n    foreach(i, num; nums)\n    {\n\
    \        nums_int[i] = num_to_int(num);\n    }\n    sort(nums_int);\n    foreach(i,\
    \ num; nums_int)\n    {\n        nums[i] = int_to_num(num);\n    }\n    return\
    \ nums.join(\" \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n \
    \   assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"three\"\
    );\n    assert(candidate(\"three five nine\") == \"three five nine\");\n    assert(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\");\n\
    \    assert(candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpm3lw7ewu.d(11): Error: no property `split` for type `string`

    /tmp/tmpm3lw7ewu.d(15): Error: undefined identifier `num_to_int`

    /tmp/tmpm3lw7ewu.d(17): Error: undefined identifier `sort`, did you mean function
    `sqrt`?

    /tmp/tmpm3lw7ewu.d(20): Error: undefined identifier `int_to_num`

    /tmp/tmpm3lw7ewu.d(22): Error: no property `join` for type `string[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpm3lw7ewu.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164104
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split(\" \");\n\
    \    int[] nums_int = new int[nums.length];\n    foreach(i, num; nums)\n    {\n\
    \        switch(num)\n        {\n            case \"zero\":\n                nums_int[i]\
    \ = 0;\n                break;\n            case \"one\":\n                nums_int[i]\
    \ = 1;\n                break;\n            case \"two\":\n                nums_int[i]\
    \ = 2;\n                break;\n            case \"three\":\n                nums_int[i]\
    \ = 3;\n                break;\n            case \"four\":\n                nums_int[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort();\n    foreach(i,\
    \ num; nums_int)\n    {\n        switch(num)\n        {\n            case 0:\n\
    \                nums[i] = \"zero\";\n                break;\n            case\
    \ 1:\n                nums[i] = \"one\";\n                break;\n           \
    \ case 2:\n                nums[i] = \"two\";\n                break;\n      \
    \      case 3:\n                nums[i] = \"three\";\n                break;\n\
    \            case 4:\n                nums[i] = \"four\";\n                break;\n\
    \            case 5:\n                nums[i] = \"five\";\n                break;\n\
    \            case 6:\n                nums[i] = \"six\";\n                break;\n\
    \            case 7:\n                nums[i] = \"seven\";\n                break;\n\
    \            case 8:\n                nums[i] = \"eight\";\n                break;\n\
    \            case 9:\n                nums[i] = \"nine\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpzj6gcnh4.d(87): Error: Implicit string concatenation is deprecated,
    use "nine\x0aunittest\x0a{\x0a    alias candidate = sort_numbers;\x0a\x0a    assert(candidate("
    ~ ") == " instead

    /tmp/tmpzj6gcnh4.d(87): Error: Implicit string concatenation is deprecated, use
    ") == " ~ ");\x0a    assert(candidate(" instead

    /tmp/tmpzj6gcnh4.d(88): Error: found `three` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(88): Error: found `three` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(89): Error: found `three` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(89): Error: found `nine` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(89): Error: found `three` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(89): Error: found `nine` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(90): Error: found `five` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(90): Error: found `four` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(90): Error: found `'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    int[] nums = numbers.split(\" \").map!(a\
    \ => to!int(a)).array;\n    sort(nums);\n    return nums.map!(a => to!string(a)).join(\"\
    \ \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpeqtkoyj4.d(11): Error: no property `split` for type `string`

    /tmp/tmpeqtkoyj4.d(12): Error: undefined identifier `sort`, did you mean function
    `sqrt`?

    /tmp/tmpeqtkoyj4.d(13): Error: no property `map` for type `int[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpeqtkoyj4.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split();\n   \
    \ int[] nums_int = new int[nums.length];\n    foreach(i, num; nums)\n    {\n \
    \       switch(num)\n        {\n            case \"zero\": nums_int[i] = 0; break;\n\
    \            case \"one\": nums_int[i] = 1; break;\n            case \"two\":\
    \ nums_int[i] = 2; break;\n            case \"three\": nums_int[i] = 3; break;\n\
    \            case \"four\": nums_int[i] = 4; break;\n            case \"five\"\
    : nums_int[i] = 5; break;\n            case \"six\": nums_int[i] = 6; break;\n\
    \            case \"seven\": nums_int[i] = 7; break;\n            case \"eight\"\
    : nums_int[i] = 8; break;\n            case \"nine\": nums_int[i] = 9; break;\n\
    \        }\n    }\n    nums_int.sort();\n    string[] nums_str = new string[nums_int.length];\n\
    \    foreach(i, num; nums_int)\n    {\n        switch(num)\n        {\n      \
    \      case 0: nums_str[i] = \"zero\"; break;\n            case 1: nums_str[i]\
    \ = \"one\"; break;\n            case 2: nums_str[i] = \"two\"; break;\n     \
    \       case 3: nums_str[i] = \"three\"; break;\n            case 4: nums_str[i]\
    \ = \"four\"; break;\n            case 5: nums_str[i] = \"five\"; break;\n   \
    \         case 6: nums_str[i] = \"six\"; break;\n            case 7: nums_str[i]\
    \ = \"seven\"; break;\n            case 8: nums_str[i] = \"eight\"; break;\n \
    \           case 9: nums_str[i] = \"nine\"; break;\n        }\n    }\n    return\
    \ nums_str.join(\" \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"\
    three\");\n    assert(candidate(\"three five nine\") == \"three five nine\");\n\
    \    assert(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\");\n    assert(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpdb6yha51.d(11): Error: no property `split` for type `string`

    /tmp/tmpdb6yha51.d(15): Error: `switch` statement without a `default`; use `final
    switch` or add `default: assert(0);` or add `default: break;`

    /tmp/tmpdb6yha51.d(29): Error: no property `sort` for type `int[]`

    /tmp/tmpdb6yha51.d(33): Error: `switch` statement without a `default`; use `final
    switch` or add `default: assert(0);` or add `default: break;`

    /tmp/tmpdb6yha51.d(47): Error: no property `join` for type `string[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdb6yha51.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164104
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split(\" \");\n\
    \    int[] nums_int = new int[nums.length];\n    foreach(i, num; nums)\n    {\n\
    \        switch(num)\n        {\n            case \"zero\":\n                nums_int[i]\
    \ = 0;\n                break;\n            case \"one\":\n                nums_int[i]\
    \ = 1;\n                break;\n            case \"two\":\n                nums_int[i]\
    \ = 2;\n                break;\n            case \"three\":\n                nums_int[i]\
    \ = 3;\n                break;\n            case \"four\":\n                nums_int[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort();\n    foreach(i,\
    \ num; nums_int)\n    {\n        switch(num)\n        {\n            case 0:\n\
    \                nums[i] = \"zero\";\n                break;\n            case\
    \ 1:\n                nums[i] = \"one\";\n                break;\n           \
    \ case 2:\n                nums[i] = \"two\";\n                break;\n      \
    \      case 3:\n                nums[i] = \"three\";\n                break;\n\
    \            case 4:\n                nums[i] = \"four\";\n                break;\n\
    \            case 5:\n                nums[i] = \"five\";\n                break;\n\
    \            case 6:\n                nums[i] = \"six\";\n                break;\n\
    \            case 7:\n                nums[i] = \"seven\";\n                break;\n\
    \            case 8:\n                nums[i] = \"eight\";\n                break;\n\
    \            case 9:\n                nums[i] = \"nine\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpzj6gcnh4.d(87): Error: Implicit string concatenation is deprecated,
    use "nine\x0aunittest\x0a{\x0a    alias candidate = sort_numbers;\x0a\x0a    assert(candidate("
    ~ ") == " instead

    /tmp/tmpzj6gcnh4.d(87): Error: Implicit string concatenation is deprecated, use
    ") == " ~ ");\x0a    assert(candidate(" instead

    /tmp/tmpzj6gcnh4.d(88): Error: found `three` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(88): Error: found `three` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(89): Error: found `three` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(89): Error: found `nine` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(89): Error: found `three` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(89): Error: found `nine` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(90): Error: found `five` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(90): Error: found `four` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(90): Error: found `'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split(\" \");\n\
    \    int[] nums_int = new int[nums.length];\n    foreach(int i, string num; nums)\n\
    \    {\n        switch(num)\n        {\n            case \"zero\":\n         \
    \       nums_int[i] = 0;\n                break;\n            case \"one\":\n\
    \                nums_int[i] = 1;\n                break;\n            case \"\
    two\":\n                nums_int[i] = 2;\n                break;\n           \
    \ case \"three\":\n                nums_int[i] = 3;\n                break;\n\
    \            case \"four\":\n                nums_int[i] = 4;\n              \
    \  break;\n            case \"five\":\n                nums_int[i] = 5;\n    \
    \            break;\n            case \"six\":\n                nums_int[i] =\
    \ 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    sort(nums_int);\n    string[]\
    \ nums_str = new string[nums.length];\n    foreach(int i, int num; nums_int)\n\
    \    {\n        switch(num)\n        {\n            case 0:\n                nums_str[i]\
    \ = \"zero\";\n                break;\n            case 1:\n                nums_str[i]\
    \ = \"one\";\n                break;\n            case 2:\n                nums_str[i]\
    \ = \"two\";\n                break;\n            case 3:\n                nums_str[i]\
    \ = \"three\";\n                break;\n            case 4:\n                nums_str[i]\
    \ = \"four\";\n                break;\n            case 5:\n                nums_str[i]\
    \ = \"five\";\n                break;\n            case 6:\n                nums_str[i]\
    \ = \"six\";\n                break;\n            case 7:\n                nums_str[i]\
    \ = \"seven\";\n               \nunittest\n{\n    alias candidate = sort_numbers;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"\
    three\");\n    assert(candidate(\"three five nine\") == \"three five nine\");\n\
    \    assert(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\");\n    assert(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp3qeqfa9_.d(79): Error: found `unittest` instead of statement

    /tmp/tmp3qeqfa9_.d(89): Error: found `End of File` when expecting `}` following
    compound statement

    /tmp/tmp3qeqfa9_.d(89): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3qeqfa9_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164104
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split(\" \");\n\
    \    int[] nums_int = new int[nums.length];\n    foreach(i, num; nums)\n    {\n\
    \        switch(num)\n        {\n            case \"zero\": nums_int[i] = 0; break;\n\
    \            case \"one\": nums_int[i] = 1; break;\n            case \"two\":\
    \ nums_int[i] = 2; break;\n            case \"three\": nums_int[i] = 3; break;\n\
    \            case \"four\": nums_int[i] = 4; break;\n            case \"five\"\
    : nums_int[i] = 5; break;\n            case \"six\": nums_int[i] = 6; break;\n\
    \            case \"seven\": nums_int[i] = 7; break;\n            case \"eight\"\
    : nums_int[i] = 8; break;\n            case \"nine\": nums_int[i] = 9; break;\n\
    \        }\n    }\n    nums_int.sort!((a, b) => a < b);\n    foreach(i, num; nums_int)\n\
    \    {\n        switch(num)\n        {\n            case 0: nums[i] = \"zero\"\
    ; break;\n            case 1: nums[i] = \"one\"; break;\n            case 2: nums[i]\
    \ = \"two\"; break;\n            case 3: nums[i] = \"three\"; break;\n       \
    \     case 4: nums[i] = \"four\"; break;\n            case 5: nums[i] = \"five\"\
    ; break;\n            case 6: nums[i] = \"six\"; break;\n            case 7: nums[i]\
    \ = \"seven\"; break;\n            case 8: nums[i] = \"eight\"; break;\n     \
    \       case 9: nums[i] = \"nine\"; break;\n        }\n    }\n    return nums.join(\"\
    \ \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpx2culqjq.d(11): Error: no property `split` for type `string`

    /tmp/tmpx2culqjq.d(15): Error: `switch` statement without a `default`; use `final
    switch` or add `default: assert(0);` or add `default: break;`

    /tmp/tmpx2culqjq.d(29): Error: no property `sort` for type `int[]`

    /tmp/tmpx2culqjq.d(32): Error: `switch` statement without a `default`; use `final
    switch` or add `default: assert(0);` or add `default: break;`

    /tmp/tmpx2culqjq.d(46): Error: no property `join` for type `string[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpx2culqjq.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164104
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split(\" \");\n\
    \    int[] nums_int = new int[nums.length];\n    foreach(i, num; nums)\n    {\n\
    \        nums_int[i] = num.to!int;\n    }\n    nums_int.sort;\n    foreach(i,\
    \ num; nums_int)\n    {\n        nums[i] = num.to!string;\n    }\n    return nums.join(\"\
    \ \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpllgpq3tv.d(11): Error: no property `split` for type `string`

    /tmp/tmpllgpq3tv.d(15): Error: no property `to` for type `string`

    /tmp/tmpllgpq3tv.d(17): Error: no property `sort` for type `int[]`

    /tmp/tmpllgpq3tv.d(20): Error: no property `to` for type `int`

    /tmp/tmpllgpq3tv.d(22): Error: no property `join` for type `string[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpllgpq3tv.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164104
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split(\" \");\n\
    \    string[] nums_sorted = nums.dup;\n    nums_sorted.sort!((a, b) => a.compare(b));\n\
    \    return nums_sorted.join(\" \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"\
    three\");\n    assert(candidate(\"three five nine\") == \"three five nine\");\n\
    \    assert(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\");\n    assert(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4sql963s.d(11): Error: no property `split` for type `string`

    /tmp/tmp4sql963s.d(13): Error: no property `sort` for type `string[]`

    /tmp/tmp4sql963s.d(14): Error: no property `join` for type `string[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4sql963s.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split(\" \");\n\
    \    int[] nums_int = new int[nums.length];\n    foreach(int i, string num; nums)\n\
    \    {\n        nums_int[i] = to!int(num);\n    }\n    sort(nums_int);\n    string\
    \ result = \"\";\n    foreach(int num; nums_int)\n    {\n        result ~= to!string(num)\
    \ ~ \" \";\n    }\n    return result.trim();\n}\nunittest\n{\n    alias candidate\
    \ = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4180vw2_.d(11): Error: no property `split` for type `string`

    /tmp/tmp4180vw2_.d(15): Error: template instance `to!int` template `to` is not
    defined, did you mean No?

    /tmp/tmp4180vw2_.d(17): Error: undefined identifier `sort`, did you mean function
    `sqrt`?

    /tmp/tmp4180vw2_.d(21): Error: template instance `to!string` template `to` is
    not defined, did you mean No?

    /tmp/tmp4180vw2_.d(23): Error: no property `trim` for type `string`

    '
  stdout: ''
  timestamp: 1660164104
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    immutable int[] nums = numbers.split(\"\
    \ \").map!(a => to!int(a)).sort;\n    return nums.map!(a => to!string(a)).join(\"\
    \ \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpxyu7mm2a.d(11): Error: no property `split` for type `string`

    /tmp/tmpxyu7mm2a.d(12): Error: no property `map` for type `immutable(int[])`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxyu7mm2a.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164104
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split(\" \");\n\
    \    int[] nums_int = new int[nums.length];\n    foreach(i, num; nums)\n    {\n\
    \        nums_int[i] = num_to_int(num);\n    }\n    nums_int.sort();\n    foreach(i,\
    \ num; nums_int)\n    {\n        nums[i] = int_to_num(num);\n    }\n    return\
    \ nums.join(\" \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n \
    \   assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"three\"\
    );\n    assert(candidate(\"three five nine\") == \"three five nine\");\n    assert(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\");\n\
    \    assert(candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp9g88fgjm.d(11): Error: no property `split` for type `string`

    /tmp/tmp9g88fgjm.d(15): Error: undefined identifier `num_to_int`

    /tmp/tmp9g88fgjm.d(17): Error: no property `sort` for type `int[]`

    /tmp/tmp9g88fgjm.d(20): Error: undefined identifier `int_to_num`

    /tmp/tmp9g88fgjm.d(22): Error: no property `join` for type `string[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9g88fgjm.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    import std.algorithm : sort;\n    import\
    \ std.array : array;\n    import std.conv : to;\n    import std.range : iota;\n\
    \    import std.string : split;\n    import std.typecons : tuple;\n    import\
    \ std.traits : isIntegral;\n    import std.math : isNaN;\n    import std.stdio\
    \ : writeln;\n    import std.typecons : tuple;\n    import std.traits : isIntegral;\n\
    \    import std.math : isNaN;\n    import std.stdio : writeln;\n    import std.typecons\
    \ : tuple;\n    import std.traits : isIntegral;\n    import std.math : isNaN;\n\
    \    import std.stdio : writeln;\n    import std.typecons : tuple;\n    import\
    \ std.traits : isIntegral;\n    import std.math : isNaN;\n    import std.stdio\
    \ : writeln;\n    import std.typecons : tuple;\n    import std.traits : isIntegral;\n\
    \    import std.math : isNaN;\n    import std.stdio : writeln;\n    import std.typecons\
    \ : tuple;\n    import std.traits : isIntegral;\n    import std.math : isNaN;\n\
    \    import std.stdio : writeln;\n    import std.typecons : tuple;\n    import\
    \ std.traits : isIntegral;\n    import std.math : isNaN;\n    import std.stdio\
    \ : writeln;\n    import std.typecons : tuple;\n    import std.traits : isIntegral;\n\
    \    import std.math : isNaN;\n    import std.stdio : writeln;\n    import std.typecons\
    \ : tuple;\n    import std.traits : isIntegral;\n    import std.math : isNaN;\n\
    \    import std.stdio : writeln;\n    import std.typecons : tuple;\n    import\
    \ std.traits : isIntegral;\n    import std.math : isNaN;\n    import std.stdio\
    \ : writeln;\n    import std.typecons : tuple;\n    import std.traits : isIntegral;\n\
    \nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpht2jnucf.d(59): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpht2jnucf.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164104
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split(\" \");\n\
    \    int[] nums_int = new int[nums.length];\n    foreach(i, num; nums)\n    {\n\
    \        switch(num)\n        {\n            case \"zero\":\n                nums_int[i]\
    \ = 0;\n                break;\n            case \"one\":\n                nums_int[i]\
    \ = 1;\n                break;\n            case \"two\":\n                nums_int[i]\
    \ = 2;\n                break;\n            case \"three\":\n                nums_int[i]\
    \ = 3;\n                break;\n            case \"four\":\n                nums_int[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort();\n    foreach(i,\
    \ num; nums_int)\n    {\n        switch(num)\n        {\n            case 0:\n\
    \                nums[i] = \"zero\";\n                break;\n            case\
    \ 1:\n                nums[i] = \"one\";\n                break;\n           \
    \ case 2:\n                nums[i] = \"two\";\n                break;\n      \
    \      case 3:\n                nums[i] = \"three\";\n                break;\n\
    \            case 4:\n                nums[i] = \"four\";\n                break;\n\
    \            case 5:\n                nums[i] = \"five\";\n                break;\n\
    \            case 6:\n                nums[i] = \"six\";\n                break;\n\
    \            case 7:\n                nums[i] = \"seven\";\n                break;\n\
    \            case 8:\n                nums[i] = \"eight\";\n                break;\n\
    \            case 9:\n                nums[i] = \"nine\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpzj6gcnh4.d(87): Error: Implicit string concatenation is deprecated,
    use "nine\x0aunittest\x0a{\x0a    alias candidate = sort_numbers;\x0a\x0a    assert(candidate("
    ~ ") == " instead

    /tmp/tmpzj6gcnh4.d(87): Error: Implicit string concatenation is deprecated, use
    ") == " ~ ");\x0a    assert(candidate(" instead

    /tmp/tmpzj6gcnh4.d(88): Error: found `three` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(88): Error: found `three` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(89): Error: found `three` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(89): Error: found `nine` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(89): Error: found `three` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(89): Error: found `nine` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(90): Error: found `five` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(90): Error: found `four` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(90): Error: found `'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split(\" \");\n\
    \    int[] nums_int = new int[nums.length];\n    foreach(int i, string num; nums)\n\
    \    {\n        switch(num)\n        {\n            case \"zero\": nums_int[i]\
    \ = 0; break;\n            case \"one\": nums_int[i] = 1; break;\n           \
    \ case \"two\": nums_int[i] = 2; break;\n            case \"three\": nums_int[i]\
    \ = 3; break;\n            case \"four\": nums_int[i] = 4; break;\n          \
    \  case \"five\": nums_int[i] = 5; break;\n            case \"six\": nums_int[i]\
    \ = 6; break;\n            case \"seven\": nums_int[i] = 7; break;\n         \
    \   case \"eight\": nums_int[i] = 8; break;\n            case \"nine\": nums_int[i]\
    \ = 9; break;\n        }\n    }\n    nums_int.sort();\n    foreach(int i, int\
    \ num; nums_int)\n    {\n        switch(num)\n        {\n            case 0: nums[i]\
    \ = \"zero\"; break;\n            case 1: nums[i] = \"one\"; break;\n        \
    \    case 2: nums[i] = \"two\"; break;\n            case 3: nums[i] = \"three\"\
    ; break;\n            case 4: nums[i] = \"four\"; break;\n            case 5:\
    \ nums[i] = \"five\"; break;\n            case 6: nums[i] = \"six\"; break;\n\
    \            case 7: nums[i] = \"seven\"; break;\n            case 8: nums[i]\
    \ = \"eight\"; break;\n            case 9: nums[i] = \"nine\"; break;\n      \
    \  }\n    }\n    return nums.join(\" \");\n}\nunittest\n{\n    alias candidate\
    \ = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp6_0lnp6g.d(11): Error: no property `split` for type `string`

    /tmp/tmp6_0lnp6g.d(15): Error: `switch` statement without a `default`; use `final
    switch` or add `default: assert(0);` or add `default: break;`

    /tmp/tmp6_0lnp6g.d(29): Error: no property `sort` for type `int[]`

    /tmp/tmp6_0lnp6g.d(32): Error: `switch` statement without a `default`; use `final
    switch` or add `default: assert(0);` or add `default: break;`

    /tmp/tmp6_0lnp6g.d(46): Error: no property `join` for type `string[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6_0lnp6g.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164104
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split(\" \");\n\
    \    int[] nums_int = new int[nums.length];\n    foreach(i, num; nums)\n    {\n\
    \        switch(num)\n        {\n            case \"zero\":\n                nums_int[i]\
    \ = 0;\n                break;\n            case \"one\":\n                nums_int[i]\
    \ = 1;\n                break;\n            case \"two\":\n                nums_int[i]\
    \ = 2;\n                break;\n            case \"three\":\n                nums_int[i]\
    \ = 3;\n                break;\n            case \"four\":\n                nums_int[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort!(a, b => a\
    \ < b);\n    foreach(i, num; nums_int)\n    {\n        switch(num)\n        {\n\
    \            case 0:\n                nums[i] = \"zero\";\n                break;\n\
    \            case 1:\n                nums[i] = \"one\";\n                break;\n\
    \            case 2:\n                nums[i] = \"two\";\n                break;\n\
    \            case 3:\n                nums[i] = \"three\";\n                break;\n\
    \            case 4:\n                nums[i] = \"four\";\n                break;\n\
    \            case 5:\n                nums[i] = \"five\";\n                break;\n\
    \            case 6:\n                nums[i] = \"six\";\n                break;\n\
    \            case 7:\n                nums[i] = \"seven\";\n                break;\n\
    \            case 8:\n                nums[i] = \"eight\";\n                break;\n\
    \            case 9:\n\nunittest\n{\n    alias candidate = sort_numbers;\n\n \
    \   assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"three\"\
    );\n    assert(candidate(\"three five nine\") == \"three five nine\");\n    assert(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\");\n\
    \    assert(candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp6i6w2axb.d(83): Error: found `unittest` instead of statement

    /tmp/tmp6i6w2axb.d(93): Error: found `End of File` when expecting `}` following
    compound statement

    /tmp/tmp6i6w2axb.d(93): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6i6w2axb.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164104
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split(\" \");\n\
    \    int[] nums_int = new int[nums.length];\n    foreach(i, num; nums)\n    {\n\
    \        switch(num)\n        {\n            case \"zero\":\n                nums_int[i]\
    \ = 0;\n                break;\n            case \"one\":\n                nums_int[i]\
    \ = 1;\n                break;\n            case \"two\":\n                nums_int[i]\
    \ = 2;\n                break;\n            case \"three\":\n                nums_int[i]\
    \ = 3;\n                break;\n            case \"four\":\n                nums_int[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort;\n    foreach(i,\
    \ num; nums_int)\n    {\n        switch(num)\n        {\n            case 0:\n\
    \                nums[i] = \"zero\";\n                break;\n            case\
    \ 1:\n                nums[i] = \"one\";\n                break;\n           \
    \ case 2:\n                nums[i] = \"two\";\n                break;\n      \
    \      case 3:\n                nums[i] = \"three\";\n                break;\n\
    \            case 4:\n                nums[i] = \"four\";\n                break;\n\
    \            case 5:\n                nums[i] = \"five\";\n                break;\n\
    \            case 6:\n                nums[i] = \"six\";\n                break;\n\
    \            case 7:\n                nums[i] = \"seven\";\n                break;\n\
    \            case 8:\n                nums[i] = \"eight\";\n                break;\n\
    \            case 9:\n                nums[i] = \"nine\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpsxj9dx32.d(87): Error: Implicit string concatenation is deprecated,
    use "nine\x0aunittest\x0a{\x0a    alias candidate = sort_numbers;\x0a\x0a    assert(candidate("
    ~ ") == " instead

    /tmp/tmpsxj9dx32.d(87): Error: Implicit string concatenation is deprecated, use
    ") == " ~ ");\x0a    assert(candidate(" instead

    /tmp/tmpsxj9dx32.d(88): Error: found `three` when expecting `;` following statement

    /tmp/tmpsxj9dx32.d(88): Error: found `three` when expecting `;` following statement

    /tmp/tmpsxj9dx32.d(89): Error: found `three` when expecting `;` following statement

    /tmp/tmpsxj9dx32.d(89): Error: found `nine` when expecting `;` following statement

    /tmp/tmpsxj9dx32.d(89): Error: found `three` when expecting `;` following statement

    /tmp/tmpsxj9dx32.d(89): Error: found `nine` when expecting `;` following statement

    /tmp/tmpsxj9dx32.d(90): Error: found `five` when expecting `;` following statement

    /tmp/tmpsxj9dx32.d(90): Error: found `four` when expecting `;` following statement

    /tmp/tmpsxj9dx32.d(90): Error: found `'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split(\" \");\n\
    \    string[] nums_sorted = nums.dup;\n    nums_sorted.sort!((a, b) => a.compare(b));\n\
    \    return nums_sorted.join(\" \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"\
    three\");\n    assert(candidate(\"three five nine\") == \"three five nine\");\n\
    \    assert(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\");\n    assert(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4sql963s.d(11): Error: no property `split` for type `string`

    /tmp/tmp4sql963s.d(13): Error: no property `sort` for type `string[]`

    /tmp/tmp4sql963s.d(14): Error: no property `join` for type `string[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4sql963s.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split(\" \");\n\
    \    int[] nums_int = new int[nums.length];\n    foreach(i, num; nums)\n    {\n\
    \        switch(num)\n        {\n            case \"zero\":\n                nums_int[i]\
    \ = 0;\n                break;\n            case \"one\":\n                nums_int[i]\
    \ = 1;\n                break;\n            case \"two\":\n                nums_int[i]\
    \ = 2;\n                break;\n            case \"three\":\n                nums_int[i]\
    \ = 3;\n                break;\n            case \"four\":\n                nums_int[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort;\n    foreach(i,\
    \ num; nums_int)\n    {\n        switch(num)\n        {\n            case 0:\n\
    \                nums[i] = \"zero\";\n                break;\n            case\
    \ 1:\n                nums[i] = \"one\";\n                break;\n           \
    \ case 2:\n                nums[i] = \"two\";\n                break;\n      \
    \      case 3:\n                nums[i] = \"three\";\n                break;\n\
    \            case 4:\n                nums[i] = \"four\";\n                break;\n\
    \            case 5:\n                nums[i] = \"five\";\n                break;\n\
    \            case 6:\n                nums[i] = \"six\";\n                break;\n\
    \            case 7:\n                nums[i] = \"seven\";\n                break;\n\
    \            case 8:\n                nums[i] = \"eight\";\n                break;\n\
    \            case 9:\n                nums[i] = \"nine\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpsxj9dx32.d(87): Error: Implicit string concatenation is deprecated,
    use "nine\x0aunittest\x0a{\x0a    alias candidate = sort_numbers;\x0a\x0a    assert(candidate("
    ~ ") == " instead

    /tmp/tmpsxj9dx32.d(87): Error: Implicit string concatenation is deprecated, use
    ") == " ~ ");\x0a    assert(candidate(" instead

    /tmp/tmpsxj9dx32.d(88): Error: found `three` when expecting `;` following statement

    /tmp/tmpsxj9dx32.d(88): Error: found `three` when expecting `;` following statement

    /tmp/tmpsxj9dx32.d(89): Error: found `three` when expecting `;` following statement

    /tmp/tmpsxj9dx32.d(89): Error: found `nine` when expecting `;` following statement

    /tmp/tmpsxj9dx32.d(89): Error: found `three` when expecting `;` following statement

    /tmp/tmpsxj9dx32.d(89): Error: found `nine` when expecting `;` following statement

    /tmp/tmpsxj9dx32.d(90): Error: found `five` when expecting `;` following statement

    /tmp/tmpsxj9dx32.d(90): Error: found `four` when expecting `;` following statement

    /tmp/tmpsxj9dx32.d(90): Error: found `'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split(\" \");\n\
    \    int[] nums_int = new int[nums.length];\n    foreach(i, num; nums)\n    {\n\
    \        switch(num)\n        {\n            case \"zero\":\n                nums_int[i]\
    \ = 0;\n                break;\n            case \"one\":\n                nums_int[i]\
    \ = 1;\n                break;\n            case \"two\":\n                nums_int[i]\
    \ = 2;\n                break;\n            case \"three\":\n                nums_int[i]\
    \ = 3;\n                break;\n            case \"four\":\n                nums_int[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort();\n    foreach(i,\
    \ num; nums_int)\n    {\n        switch(num)\n        {\n            case 0:\n\
    \                nums[i] = \"zero\";\n                break;\n            case\
    \ 1:\n                nums[i] = \"one\";\n                break;\n           \
    \ case 2:\n                nums[i] = \"two\";\n                break;\n      \
    \      case 3:\n                nums[i] = \"three\";\n                break;\n\
    \            case 4:\n                nums[i] = \"four\";\n                break;\n\
    \            case 5:\n                nums[i] = \"five\";\n                break;\n\
    \            case 6:\n                nums[i] = \"six\";\n                break;\n\
    \            case 7:\n                nums[i] = \"seven\";\n                break;\n\
    \            case 8:\n                nums[i] = \"eight\";\n                break;\n\
    \            case 9:\n                nums[i] = \"nine\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpzj6gcnh4.d(87): Error: Implicit string concatenation is deprecated,
    use "nine\x0aunittest\x0a{\x0a    alias candidate = sort_numbers;\x0a\x0a    assert(candidate("
    ~ ") == " instead

    /tmp/tmpzj6gcnh4.d(87): Error: Implicit string concatenation is deprecated, use
    ") == " ~ ");\x0a    assert(candidate(" instead

    /tmp/tmpzj6gcnh4.d(88): Error: found `three` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(88): Error: found `three` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(89): Error: found `three` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(89): Error: found `nine` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(89): Error: found `three` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(89): Error: found `nine` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(90): Error: found `five` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(90): Error: found `four` when expecting `;` following statement

    /tmp/tmpzj6gcnh4.d(90): Error: found `'
  stdout: ''
  timestamp: 1660164103
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n        \n*/\nstring\
    \ sort_numbers(string numbers) \n{\n    string[] nums = numbers.split(\" \");\n\
    \    int[] num_ints = new int[nums.length];\n    foreach(i, num; nums)\n    {\n\
    \        num_ints[i] = numeral_to_int(num);\n    }\n    sort(num_ints);\n    foreach(i,\
    \ num; num_ints)\n    {\n        nums[i] = int_to_numeral(num);\n    }\n    return\
    \ nums.join(\" \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n \
    \   assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"three\"\
    );\n    assert(candidate(\"three five nine\") == \"three five nine\");\n    assert(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\");\n\
    \    assert(candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmph62948du.d(11): Error: no property `split` for type `string`

    /tmp/tmph62948du.d(15): Error: undefined identifier `numeral_to_int`

    /tmp/tmph62948du.d(17): Error: undefined identifier `sort`, did you mean function
    `sqrt`?

    /tmp/tmph62948du.d(20): Error: undefined identifier `int_to_numeral`

    /tmp/tmph62948du.d(22): Error: no property `join` for type `string[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmph62948du.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164104

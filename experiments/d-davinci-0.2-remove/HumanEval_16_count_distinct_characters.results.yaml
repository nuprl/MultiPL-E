language: d
name: HumanEval_16_count_distinct_characters
results:
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    auto distinct_chars\
    \ = new int[256];\n    foreach(c; string)\n    {\n        distinct_chars[to!int(c)]++;\n\
    \    }\n    return count(distinct_chars, distinct_chars + 256, 1);\n}\nunittest\n\
    {\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpow7os5tz.d(12): Error: template instance `to!int` template `to`
    is not defined, did you mean No?

    /tmp/tmpow7os5tz.d(14): Error: undefined identifier `count`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpow7os5tz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164565
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    auto counter\
    \ = Counter!char();\n    foreach(c; string) \n    {\n        counter[c]++;\n \
    \   }\n    return counter.length;\n}\nunittest\n{\n    alias candidate = count_distinct_characters;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n\
    \    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\"\
    ) == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpizm71t1o.d(9): Error: template instance `Counter!char` template
    `Counter` is not defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpizm71t1o.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164565
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    auto distinct_characters\
    \ = new HashSet!(char)();\n    foreach(character; string)\n    {\n        distinct_characters.insert(character);\n\
    \    }\n    return distinct_characters.length;\n}\nunittest\n{\n    alias candidate\
    \ = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpgic61tc3.d(9): Error: template instance `HashSet!char` template
    `HashSet` is not defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgic61tc3.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164565
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            count++;\n        }\n        else if(c >= 'A' && c <=\
    \ 'Z')\n        {\n            count++;\n        }\n    }\n    return count;\n\
    }\nunittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp8jtpqzgw.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e0d]

    ??:? void tmp8jtpqzgw.__unittest_L23_C1() [0x427b20]

    ??:? void tmp8jtpqzgw.__modtest() [0x427b8c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb33]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9c6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb59]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430008]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fae5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a99d]

    ??:? runModuleUnitTests [0x42b909]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42825c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164565
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    auto result\
    \ = new ubyte[256];\n    foreach(c; string) \n    {\n        result[cast(ubyte)c]\
    \ = 1;\n    }\n    return result.count;\n}\nunittest\n{\n    alias candidate =\
    \ count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbx6j24vr.d(14): Error: no property `count` for type `ubyte[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbx6j24vr.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164565
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    auto distinct_characters\
    \ = new HashSet!(char)();\n    foreach(character; string)\n    {\n        distinct_characters.insert(character);\n\
    \    }\n    return distinct_characters.length;\n}\nunittest\n{\n    alias candidate\
    \ = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpgic61tc3.d(9): Error: template instance `HashSet!char` template
    `HashSet` is not defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgic61tc3.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164565
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    auto distinct_characters\
    \ = new set!char;\n    foreach(character; string) \n    {\n        distinct_characters.insert(character);\n\
    \    }\n    return distinct_characters.length;\n}\nunittest\n{\n    alias candidate\
    \ = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbf0aoj42.d(9): Error: template instance `set!char` template `set`
    is not defined, did you mean get(K, V)(inout(V[K]) aa, K key, lazy inout(V) defaultValue)?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbf0aoj42.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164565
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    auto result\
    \ = new int[256];\n    foreach(c; string) \n    {\n        result[cast(int)c]++;\n\
    \    }\n    return count(result, result[$-1]);\n}\nunittest\n{\n    alias candidate\
    \ = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp3j97hmln.d(14): Error: undefined identifier `count`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3j97hmln.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164565
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    long[] char_count = new long[256];\n    foreach(char c; string)\n\
    \    {\n        if(char_count[c] == 0)\n        {\n            count++;\n    \
    \    }\n        char_count[c]++;\n    }\n    return count;\n}\nunittest\n{\n \
    \   alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\"\
    ) == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\"\
    ) == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"\
    Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpqp5cjjyo.d(27): unittest failure

    ----------------

    ??:? _d_unittestp [0x42810d]

    ??:? void tmpqp5cjjyo.__unittest_L21_C1() [0x427e20]

    ??:? void tmpqp5cjjyo.__modtest() [0x427e8c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c10b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42af9e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430229]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x4306d8]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4301b5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af75]

    ??:? runModuleUnitTests [0x42bee1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4285d0]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164565
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long[] char_counts\
    \ = new long[256];\n    foreach(c; string)\n    {\n        char_counts[to!int(c)]++;\n\
    \    }\n    return count(char_counts, (x) => x > 0);\n}\nunittest\n{\n    alias\
    \ candidate = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n\
    \    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\"\
    ) == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"\
    Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpd8kpc8p3.d(12): Error: template instance `to!int` template `to`
    is not defined, did you mean No?

    /tmp/tmpd8kpc8p3.d(14): Error: undefined identifier `count`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpd8kpc8p3.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164565
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string) \n    {\n        if (c >= 'a' && c <= 'z')\
    \ \n        {\n            count++;\n        }\n        else if (c >= 'A' && c\
    \ <= 'Z') \n        {\n            count++;\n        }\n    }\n    return count;\n\
    }\nunittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp7x4ud898.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e0d]

    ??:? void tmp7x4ud898.__unittest_L23_C1() [0x427b20]

    ??:? void tmp7x4ud898.__modtest() [0x427b8c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb33]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9c6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb59]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430008]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fae5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a99d]

    ??:? runModuleUnitTests [0x42b909]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42825c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164565
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    long[] char_set = new long[256];\n    foreach(c; string) \n    {\n\
    \        if (char_set[c] == 0) \n        {\n            count++;\n           \
    \ char_set[c] = 1;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias\
    \ candidate = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n\
    \    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\"\
    ) == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"\
    Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpi85_7j7_.d(27): unittest failure

    ----------------

    ??:? _d_unittestp [0x428115]

    ??:? void tmpi85_7j7_.__unittest_L21_C1() [0x427e28]

    ??:? void tmpi85_7j7_.__modtest() [0x427e94]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c113]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42afa6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430231]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x4306e0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4301bd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af7d]

    ??:? runModuleUnitTests [0x42bee9]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4285d8]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164565
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    return set(string.toLowerCase()).length;\n\
    }\nunittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpondiyffa.d(9): Error: undefined identifier `set`, did you mean
    template `get(K, V)(inout(V[K]) aa, K key, lazy inout(V) defaultValue)`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpondiyffa.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164565
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    auto distinct_characters\
    \ = new HashSet!char();\n    foreach(character; string)\n    {\n        distinct_characters.insert(character);\n\
    \    }\n    return distinct_characters.length;\n}\nunittest\n{\n    alias candidate\
    \ = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1r4_amti.d(9): Error: template instance `HashSet!char` template
    `HashSet` is not defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1r4_amti.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164565
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    return set(string.toLowerCase()).length;\n\
    }\nunittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpondiyffa.d(9): Error: undefined identifier `set`, did you mean
    template `get(K, V)(inout(V[K]) aa, K key, lazy inout(V) defaultValue)`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpondiyffa.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164565
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string)\n    {\n        if(c == ' ')\n           \
    \ continue;\n        if(c >= 'A' && c <= 'Z')\n            c = tolower(c);\n \
    \       if(!count)\n            count = 1;\n        else\n        {\n        \
    \    bool found = false;\n            foreach(char d; string)\n            {\n\
    \                if(d == ' ')\n                    continue;\n               \
    \ if(d >= 'A' && d <= 'Z')\n                    d = tolower(d);\n            \
    \    if(c == d)\n                {\n                    found = true;\n      \
    \              break;\n                }\n            }\n            if(!found)\n\
    \                count++;\n        }\n    }\n    return count;\n}\nunittest\n\
    {\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp66_36b3s.d(15): Error: undefined identifier `tolower`

    /tmp/tmp66_36b3s.d(26): Error: undefined identifier `tolower`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp66_36b3s.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164565
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string)\n    {\n        if(c.isAlpha)\n        {\n\
    \            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n \
    \   alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\"\
    ) == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\"\
    ) == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"\
    Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp3nzd36i6.d(12): Error: no property `isAlpha` for type `char`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3nzd36i6.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164565
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long[] char_counts\
    \ = new long[256];\n    foreach(char c; string)\n    {\n        char_counts[cast(ubyte)c]++;\n\
    \    }\n    return count(filter!(a => a > 0)(char_counts));\n}\nunittest\n{\n\
    \    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\"\
    ) == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\"\
    ) == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"\
    Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpj3czv3p7.d(14): Error: undefined identifier `count`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpj3czv3p7.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164565
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    auto char_set\
    \ = set!char();\n    foreach(char c; string)\n    {\n        char_set.insert(c);\n\
    \    }\n    return char_set.length;\n}\nunittest\n{\n    alias candidate = count_distinct_characters;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n\
    \    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\"\
    ) == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpqnxco1o_.d(9): Error: template instance `set!char` template `set`
    is not defined, did you mean get(K, V)(inout(V[K]) aa, K key, lazy inout(V) defaultValue)?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqnxco1o_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164565
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    return set(string.toLowerCase).length;\n\
    }\nunittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpb3d8tivd.d(9): Error: undefined identifier `set`, did you mean
    template `get(K, V)(inout(V[K]) aa, K key, lazy inout(V) defaultValue)`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpb3d8tivd.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164565
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string) \n    {\n        if(c >= 'a' && c <= 'z')\
    \ \n        {\n            count++;\n        }\n        else if(c >= 'A' && c\
    \ <= 'Z') \n        {\n            count++;\n        }\n    }\n    return count;\n\
    }\n/*\n Given a string, find out how many distinct characters (regardless of case)\
    \ does it consist of\n            \n*/\nlong count_distinct_characters_2(string\
    \ string) \n{\n    long count = 0;\n    foreach(char c; string) \n    {\n    \
    \    if(c >= 'a' && c <= 'z') \n        {\n            count++;\n        }\n \
    \       else if(c >= 'A' && c <= 'Z') \n        {\n            count++;\n    \
    \    }\n    }\n    return count;\n}\n/*\n Given a string, find out how many distinct\
    \ characters (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters_3(string\
    \ string) \n{\n    long count = 0;\n    foreach(char c; string) \n    {\n    \
    \    if(c >= 'a' && c <= 'z') \n        {\n            count++;\n        }\n \
    \       else if(c >= 'A' && c <= 'Z') \n        {\n            count++;\n    \
    \    }\n    }\n    return count;\n}\n/*\n Given a string, find out how many distinct\
    \ characters (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters_4(string\
    \ string) \n{\n    long count = 0;\n    foreach(char c; string) \n    {\n    \
    \    if(c >= 'a' && c <= 'z') \n        {\n            count++;\n        }\n \
    \       else if(c >= 'A' && c <= 'Z') \n        {\n            count++;\n    \
    \    }\n    }\n    return count;\n}\n/*\n Given a string, find out how many distinct\
    \ characters (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters_5(\n\
    unittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpyw7216r7.d(88): Error: basic type expected, not `unittest`

    /tmp/tmpyw7216r7.d(88): Error: found `unittest` when expecting `)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyw7216r7.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164565
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    auto distinct_chars\
    \ = new HashSet!char;\n    foreach(char c; string)\n    {\n        distinct_chars.insert(c);\n\
    \    }\n    return distinct_chars.length;\n}\nunittest\n{\n    alias candidate\
    \ = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp2y0u44nf.d(9): Error: template instance `HashSet!char` template
    `HashSet` is not defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2y0u44nf.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164565
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    auto result\
    \ = new int[256];\n    foreach(c; string)\n    {\n        result[to!int(c)]++;\n\
    \    }\n    return count(result, (x) => x > 0);\n}\nunittest\n{\n    alias candidate\
    \ = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp6mz44quy.d(12): Error: template instance `to!int` template `to`
    is not defined, did you mean No?

    /tmp/tmp6mz44quy.d(14): Error: undefined identifier `count`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6mz44quy.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164565
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string) \n    {\n        if(c.isLetter)\n        \
    \    count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate =\
    \ count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp53atnd9d.d(12): Error: no property `isLetter` for type `char`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp53atnd9d.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164565
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string)\n    {\n        if(!c.isAlpha)\n         \
    \   continue;\n        if(c.isLower)\n            c = c.toUpper;\n        if(!string.count(c))\n\
    \            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate\
    \ = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpg89waptx.d(12): Error: no property `isAlpha` for type `char`

    /tmp/tmpg89waptx.d(14): Error: no property `isLower` for type `char`

    /tmp/tmpg89waptx.d(15): Error: no property `toUpper` for type `char`

    /tmp/tmpg89waptx.d(16): Error: no property `count` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg89waptx.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164565
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    auto set\
    \ = new Set!(char)();\n    foreach(ch; string) \n    {\n        set.insert(ch);\n\
    \    }\n    return set.length;\n}\nunittest\n{\n    alias candidate = count_distinct_characters;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n\
    \    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\"\
    ) == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp3yrysirj.d(9): Error: template instance `Set!char` template `Set`
    is not defined, did you mean get(K, V)(inout(V[K]) aa, K key, lazy inout(V) defaultValue)?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3yrysirj.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164565
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string)\n    {\n        if(c.isLetter)\n        {\n\
    \            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n \
    \   alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\"\
    ) == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\"\
    ) == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"\
    Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp_9no5t4d.d(12): Error: no property `isLetter` for type `char`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_9no5t4d.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164565
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            count++;\n        }\n        else if(c >= 'A' && c <=\
    \ 'Z')\n        {\n            count++;\n        }\n    }\n    return count;\n\
    }\nunittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp8jtpqzgw.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e0d]

    ??:? void tmp8jtpqzgw.__unittest_L23_C1() [0x427b20]

    ??:? void tmp8jtpqzgw.__modtest() [0x427b8c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb33]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9c6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb59]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430008]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fae5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a99d]

    ??:? runModuleUnitTests [0x42b909]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42825c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164565
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string) \n    {\n        if(c >= 'a' && c <= 'z')\
    \ \n        {\n            count++;\n        }\n        else if(c >= 'A' && c\
    \ <= 'Z') \n        {\n            count++;\n        }\n    }\n    return count;\n\
    }\nunittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpuk131ed0.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e0d]

    ??:? void tmpuk131ed0.__unittest_L23_C1() [0x427b20]

    ??:? void tmpuk131ed0.__modtest() [0x427b8c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb33]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9c6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb59]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430008]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fae5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a99d]

    ??:? runModuleUnitTests [0x42b909]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42825c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164566
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string)\n    {\n        if(c.isLetter)\n        {\n\
    \            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n \
    \   alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\"\
    ) == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\"\
    ) == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"\
    Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp_9no5t4d.d(12): Error: no property `isLetter` for type `char`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_9no5t4d.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164565
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long[] char_counts\
    \ = new long[256];\n    foreach(c; string) \n    {\n        char_counts[cast(ubyte)c]++;\n\
    \    }\n    return count(char_counts, (x) => x > 0);\n}\nunittest\n{\n    alias\
    \ candidate = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n\
    \    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\"\
    ) == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"\
    Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpu0oph6xw.d(14): Error: undefined identifier `count`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpu0oph6xw.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164565
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    return set(string.toLowerCase).length;\n\
    }\nunittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpb3d8tivd.d(9): Error: undefined identifier `set`, did you mean
    template `get(K, V)(inout(V[K]) aa, K key, lazy inout(V) defaultValue)`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpb3d8tivd.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164565
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    auto distinct_characters\
    \ = new HashSet!char();\n    foreach(character; string)\n    {\n        distinct_characters.insert(character);\n\
    \    }\n    return distinct_characters.length;\n}\nunittest\n{\n    alias candidate\
    \ = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1r4_amti.d(9): Error: template instance `HashSet!char` template
    `HashSet` is not defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1r4_amti.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164565
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string)\n    {\n        if(c.isAlpha)\n        {\n\
    \            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n \
    \   alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\"\
    ) == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\"\
    ) == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"\
    Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp3nzd36i6.d(12): Error: no property `isAlpha` for type `char`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3nzd36i6.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164565
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            count++;\n        }\n        else if(c >= 'A' && c <=\
    \ 'Z')\n        {\n            count++;\n        }\n    }\n    return count;\n\
    }\nunittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp8jtpqzgw.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e0d]

    ??:? void tmp8jtpqzgw.__unittest_L23_C1() [0x427b20]

    ??:? void tmp8jtpqzgw.__modtest() [0x427b8c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb33]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9c6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb59]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430008]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fae5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a99d]

    ??:? runModuleUnitTests [0x42b909]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42825c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164565
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    return set(string.toLowerCase).length;\n\
    }\nunittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpb3d8tivd.d(9): Error: undefined identifier `set`, did you mean
    template `get(K, V)(inout(V[K]) aa, K key, lazy inout(V) defaultValue)`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpb3d8tivd.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164565
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    auto distinct_chars\
    \ = new int[256];\n    foreach(char c; string) \n    {\n        distinct_chars[toUpper(c)]++;\n\
    \    }\n    return count(distinct_chars, distinct_chars[$-1] != 0);\n}\nunittest\n\
    {\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpvtz12une.d(12): Error: undefined identifier `toUpper`

    /tmp/tmpvtz12une.d(14): Error: undefined identifier `count`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvtz12une.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164565
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string)\n    {\n        count += !(c in string[0..$-1]);\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_distinct_characters;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n\
    \    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\"\
    ) == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmplbbrdef6.d(12): Error: incompatible types for `(c) in (string[0..__dollar
    - 1LU])`: `char` and `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplbbrdef6.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164565
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string)\n    {\n        if(c.tolower() !in string.tolower())\n\
    \        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n\
    {\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpxu54dqir.d(12): Error: no property `tolower` for type `char`

    /tmp/tmpxu54dqir.d(12): Error: no property `tolower` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxu54dqir.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164565
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            count++;\n        }\n        else if(c >= 'A' && c <=\
    \ 'Z')\n        {\n            count++;\n        }\n    }\n    return count;\n\
    }\nunittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp8jtpqzgw.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e0d]

    ??:? void tmp8jtpqzgw.__unittest_L23_C1() [0x427b20]

    ??:? void tmp8jtpqzgw.__modtest() [0x427b8c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb33]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9c6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb59]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430008]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fae5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a99d]

    ??:? runModuleUnitTests [0x42b909]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42825c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164565
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string)\n    {\n        if(c.isLetter)\n        {\n\
    \            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n \
    \   alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\"\
    ) == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\"\
    ) == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"\
    Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp_9no5t4d.d(12): Error: no property `isLetter` for type `char`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_9no5t4d.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164565
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    auto result\
    \ = new HashSet!(char)();\n    foreach(char c; string) \n    {\n        result.insert(c);\n\
    \    }\n    return result.length;\n}\nunittest\n{\n    alias candidate = count_distinct_characters;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n\
    \    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\"\
    ) == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp0s2hl6gl.d(9): Error: template instance `HashSet!char` template
    `HashSet` is not defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0s2hl6gl.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164565
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    auto distinct_characters\
    \ = new HashSet!(char)();\n    foreach(character; string)\n    {\n        distinct_characters.insert(character);\n\
    \    }\n    return distinct_characters.length;\n}\nunittest\n{\n    alias candidate\
    \ = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpgic61tc3.d(9): Error: template instance `HashSet!char` template
    `HashSet` is not defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgic61tc3.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164565
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    long[] char_count = new long[256];\n    foreach(c; string)\n    {\n\
    \        if(char_count[c] == 0)\n        {\n            count++;\n        }\n\
    \        char_count[c]++;\n    }\n    return count;\n}\nunittest\n{\n    alias\
    \ candidate = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n\
    \    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\"\
    ) == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"\
    Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp2agc6zd1.d(27): unittest failure

    ----------------

    ??:? _d_unittestp [0x42810d]

    ??:? void tmp2agc6zd1.__unittest_L21_C1() [0x427e20]

    ??:? void tmp2agc6zd1.__modtest() [0x427e8c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c10b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42af9e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430229]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x4306d8]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4301b5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af75]

    ??:? runModuleUnitTests [0x42bee1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4285d0]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x428557]

    ??:? _d_run_main [0x4284c2]

    ??:? main [0x427e9f]

    ??:? __libc_start_main [0x2c577554]

    1/1 unittests FAILED

    '
  stdout: ''
  timestamp: 1660164566
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    auto chars\
    \ = string.toUpper().array();\n    auto distinct_chars = new int[chars.length];\n\
    \    auto distinct_chars_count = 0;\n    foreach(char; chars) \n    {\n      \
    \  if(distinct_chars.countUntil(char) == -1) \n        {\n            distinct_chars[distinct_chars_count]\
    \ = char;\n            distinct_chars_count++;\n        }\n    }\n    return distinct_chars_count;\n\
    }\nunittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4mfe_bke.d(12): Error: no identifier for declarator `char`

    /tmp/tmp4mfe_bke.d(14): Error: found `)` when expecting `.` following char

    /tmp/tmp4mfe_bke.d(14): Error: found `==` when expecting identifier following
    `char`.

    /tmp/tmp4mfe_bke.d(15): Error: found `{` when expecting `)`

    /tmp/tmp4mfe_bke.d(16): Error: found `;` when expecting `.` following char

    /tmp/tmp4mfe_bke.d(20): Error: declaration expected, not `return`

    /tmp/tmp4mfe_bke.d(21): Error: unrecognized declaration

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4mfe_bke.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164565
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    auto result\
    \ = new int[256];\n    foreach(char c; string)\n    {\n        result[cast(int)c]++;\n\
    \    }\n    return count(result, result[$-1]);\n}\nunittest\n{\n    alias candidate\
    \ = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpphihj9vr.d(14): Error: undefined identifier `count`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpphihj9vr.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164565
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    return set(string.toLowerCase()).size;\n\
    }\nunittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpvgtg03of.d(9): Error: undefined identifier `set`, did you mean
    template `get(K, V)(inout(V[K]) aa, K key, lazy inout(V) defaultValue)`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvgtg03of.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164565
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            count++;\n        }\n        else if(c >= 'A' && c <=\
    \ 'Z')\n        {\n            count++;\n        }\n    }\n    return count;\n\
    }\nunittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp8jtpqzgw.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e0d]

    ??:? void tmp8jtpqzgw.__unittest_L23_C1() [0x427b20]

    ??:? void tmp8jtpqzgw.__modtest() [0x427b8c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb33]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9c6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb59]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430008]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fae5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a99d]

    ??:? runModuleUnitTests [0x42b909]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42825c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164565
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long result\
    \ = 0;\n    foreach(char c; string)\n    {\n        if (c.isAlpha)\n        {\n\
    \            result += 1;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmppgbewxok.d(12): Error: no property `isAlpha` for type `char`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmppgbewxok.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164565
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    return set(string.toLowerCase()).length;\n\
    }\nunittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpondiyffa.d(9): Error: undefined identifier `set`, did you mean
    template `get(K, V)(inout(V[K]) aa, K key, lazy inout(V) defaultValue)`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpondiyffa.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164565
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string)\n    {\n        if(c.isLetter)\n        {\n\
    \            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n \
    \   alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\"\
    ) == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\"\
    ) == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"\
    Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp_9no5t4d.d(12): Error: no property `isLetter` for type `char`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_9no5t4d.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164565
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    auto distinct_chars = new bool[256];\n    foreach(char c; string)\n\
    \    {\n        if(!distinct_chars[cast(int)c])\n        {\n            distinct_chars[cast(int)c]\
    \ = true;\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n\
    {\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpmurfts_y.d(27): unittest failure

    ----------------

    ??:? _d_unittestp [0x427fad]

    ??:? void tmpmurfts_y.__unittest_L21_C1() [0x427cc0]

    ??:? void tmpmurfts_y.__modtest() [0x427d2c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bde3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42ac76]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42ff01]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x4303b0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fe8d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ac4d]

    ??:? runModuleUnitTests [0x42bbb9]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428470]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164566
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            count++;\n        }\n        else if(c >= 'A' && c <=\
    \ 'Z')\n        {\n            count++;\n        }\n    }\n    return count;\n\
    }\nunittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp8jtpqzgw.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e0d]

    ??:? void tmp8jtpqzgw.__unittest_L23_C1() [0x427b20]

    ??:? void tmp8jtpqzgw.__modtest() [0x427b8c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb33]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9c6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb59]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430008]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fae5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a99d]

    ??:? runModuleUnitTests [0x42b909]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42825c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164565
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string)\n    {\n        if (c >= 'a' && c <= 'z')\n\
    \            count++;\n        else if (c >= 'A' && c <= 'Z')\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_distinct_characters;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n\
    \    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\"\
    ) == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpzk0jec68.d(25): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e0d]

    ??:? void tmpzk0jec68.__unittest_L19_C1() [0x427b20]

    ??:? void tmpzk0jec68.__modtest() [0x427b8c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb33]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9c6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb59]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430008]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fae5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a99d]

    ??:? runModuleUnitTests [0x42b909]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42825c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164566
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string)\n    {\n        if (c >= 'a' && c <= 'z')\n\
    \            count++;\n        else if (c >= 'A' && c <= 'Z')\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_distinct_characters;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n\
    \    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\"\
    ) == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpzk0jec68.d(25): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e0d]

    ??:? void tmpzk0jec68.__unittest_L19_C1() [0x427b20]

    ??:? void tmpzk0jec68.__modtest() [0x427b8c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb33]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9c6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb59]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430008]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fae5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a99d]

    ??:? runModuleUnitTests [0x42b909]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42825c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164566
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    auto distinct_chars\
    \ = new int[256];\n    foreach(char c; string)\n    {\n        distinct_chars[c]\
    \ = 1;\n    }\n    return std.algorithm.count(distinct_chars, distinct_chars +\
    \ 256, 1);\n}\nunittest\n{\n    alias candidate = count_distinct_characters;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n\
    \    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\"\
    ) == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpdizo3h46.d(14): Error: undefined identifier `algorithm` in package
    `std`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdizo3h46.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164565
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    return string.toLower().toHashSet().length;\n\
    }\nunittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmphfemafqj.d(9): Error: no property `toLower` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphfemafqj.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164565
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long[] char_count\
    \ = new long[256];\n    foreach(c; string) \n    {\n        char_count[cast(int)c]++;\n\
    \    }\n    return count(char_count, (x) => x > 0);\n}\nunittest\n{\n    alias\
    \ candidate = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n\
    \    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\"\
    ) == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"\
    Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp2494cdcm.d(14): Error: undefined identifier `count`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2494cdcm.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164565
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    // Create\
    \ a set of characters\n    auto characters = set!char();\n    foreach (character;\
    \ string) \n    {\n        // Add each character to the set\n        characters.insert(character);\n\
    \    }\n    return characters.length;\n}\nunittest\n{\n    alias candidate = count_distinct_characters;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n\
    \    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\"\
    ) == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpb_q9c7_y.d(10): Error: template instance `set!char` template `set`
    is not defined, did you mean get(K, V)(inout(V[K]) aa, K key, lazy inout(V) defaultValue)?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpb_q9c7_y.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164565
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    auto result\
    \ = new int[256];\n    foreach(c; string)\n    {\n        result[c]++;\n    }\n\
    \    return count(result, result.length, (x) => x != 0);\n}\nunittest\n{\n   \
    \ alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\"\
    ) == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"\
    Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpyyet7bip.d(14): Error: undefined identifier `count`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyyet7bip.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164565
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    auto distinct_chars\
    \ = new HashSet!(char)();\n    foreach(char c; string)\n    {\n        distinct_chars.insert(c);\n\
    \    }\n    return distinct_chars.length;\n}\nunittest\n{\n    alias candidate\
    \ = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpyuoxq9lz.d(9): Error: template instance `HashSet!char` template
    `HashSet` is not defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyuoxq9lz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164565
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    auto distinct_characters\
    \ = new HashSet!(char)();\n    foreach(character; string)\n    {\n        distinct_characters.insert(character);\n\
    \    }\n    return distinct_characters.length;\n}\nunittest\n{\n    alias candidate\
    \ = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpgic61tc3.d(9): Error: template instance `HashSet!char` template
    `HashSet` is not defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgic61tc3.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164565
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string)\n    {\n        if(c.isLetter)\n        {\n\
    \            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n \
    \   alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\"\
    ) == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\"\
    ) == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"\
    Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp_9no5t4d.d(12): Error: no property `isLetter` for type `char`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_9no5t4d.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164565
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string)\n    {\n        if(!c.isAlpha)\n         \
    \   continue;\n        if(!c.isLower)\n            c = c.toLower;\n        if(!string.count(c))\n\
    \            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate\
    \ = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpcid94yd5.d(12): Error: no property `isAlpha` for type `char`

    /tmp/tmpcid94yd5.d(14): Error: no property `isLower` for type `char`

    /tmp/tmpcid94yd5.d(15): Error: no property `toLower` for type `char`

    /tmp/tmpcid94yd5.d(16): Error: no property `count` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcid94yd5.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164565
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(c; string)\n    {\n        if(c >= 'a' && c <= 'z')\n    \
    \    {\n            count++;\n        }\n        else if(c >= 'A' && c <= 'Z')\n\
    \        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n\
    {\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpwhjx1ttx.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e0d]

    ??:? void tmpwhjx1ttx.__unittest_L23_C1() [0x427b20]

    ??:? void tmpwhjx1ttx.__modtest() [0x427b8c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb33]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9c6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb59]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430008]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fae5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a99d]

    ??:? runModuleUnitTests [0x42b909]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42825c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164566
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    return set(string.toLowerCase).length;\n\
    }\nunittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpb3d8tivd.d(9): Error: undefined identifier `set`, did you mean
    template `get(K, V)(inout(V[K]) aa, K key, lazy inout(V) defaultValue)`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpb3d8tivd.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164565
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string) \n    {\n        if(c.isLetter) \n       \
    \ {\n            count++;\n        }\n    }\n    return count;\n}\n/*\n Given\
    \ a string, find out how many distinct characters (regardless of case) does it\
    \ consist of\n            \n*/\nlong count_distinct_characters_2(string string)\
    \ \n{\n    long count = 0;\n    foreach(char c; string) \n    {\n        if(c.isLetter)\
    \ \n        {\n            count++;\n        }\n    }\n    return count;\n}\n\
    /*\n Given a string, find out how many distinct characters (regardless of case)\
    \ does it consist of\n            \n*/\nlong count_distinct_characters_3(string\
    \ string) \n{\n    long count = 0;\n    foreach(char c; string) \n    {\n    \
    \    if(c.isLetter) \n        {\n            count++;\n        }\n    }\n    return\
    \ count;\n}\n/*\n Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n            \n*/\nlong count_distinct_characters_4(string\
    \ string) \n{\n    long count = 0;\n    foreach(char c; string) \n    {\n    \
    \    if(c.isLetter) \n        {\n            count++;\n        }\n    }\n    return\
    \ count;\n}\n/*\n Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n            \n*/\nlong count_distinct_characters_5(string\
    \ string) \n{\n    long count = 0;\n    foreach(char c; string) \n    {\n    \
    \    if(c.isLetter) \n        {\n            count++;\n        }\n    }\n    return\
    \ count;\n}\n/*\n Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n            \n*/\nlong count_distinct_characters_6(string\
    \ string) \n{\n    long count = 0;\n    foreach(char c; string) \n    {\n    \
    \    if(c.isLetter)\nunittest\n{\n    alias candidate = count_distinct_characters;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n\
    \    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\"\
    ) == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpz9qbj13d.d(93): Error: found `unittest` instead of statement

    /tmp/tmpz9qbj13d.d(103): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpz9qbj13d.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164565
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string)\n    {\n        if(c.isLetter)\n        {\n\
    \            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n \
    \   alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\"\
    ) == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\"\
    ) == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"\
    Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp_9no5t4d.d(12): Error: no property `isLetter` for type `char`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_9no5t4d.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164565
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            count++;\n        }\n        else if(c >= 'A' && c <=\
    \ 'Z')\n        {\n            count++;\n        }\n    }\n    return count;\n\
    }\nunittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp8jtpqzgw.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e0d]

    ??:? void tmp8jtpqzgw.__unittest_L23_C1() [0x427b20]

    ??:? void tmp8jtpqzgw.__modtest() [0x427b8c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb33]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9c6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb59]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430008]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fae5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a99d]

    ??:? runModuleUnitTests [0x42b909]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42825c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164565
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    auto distinct_characters\
    \ = new HashSet!char();\n    foreach(character; string)\n    {\n        distinct_characters.insert(character);\n\
    \    }\n    return distinct_characters.length;\n}\nunittest\n{\n    alias candidate\
    \ = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1r4_amti.d(9): Error: template instance `HashSet!char` template
    `HashSet` is not defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1r4_amti.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164565
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long result\
    \ = 0;\n    foreach(char c; string) \n    {\n        if(c.tolower() in result)\
    \ \n        {\n            continue;\n        }\n        result ~= c.tolower();\n\
    \    }\n    return result.length;\n}\nunittest\n{\n    alias candidate = count_distinct_characters;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n\
    \    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\"\
    ) == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmptyudxo62.d(12): Error: no property `tolower` for type `char`

    /tmp/tmptyudxo62.d(16): Error: no property `tolower` for type `char`

    /tmp/tmptyudxo62.d(18): Error: no property `length` for type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptyudxo62.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164565
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string)\n    {\n        if(c.tolower() in count)\n\
    \            continue;\n        count[c.tolower()] = 1;\n        count++;\n  \
    \  }\n    return count;\n}\nunittest\n{\n    alias candidate = count_distinct_characters;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n\
    \    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\"\
    ) == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpuf96ly9a.d(12): Error: no property `tolower` for type `char`

    /tmp/tmpuf96ly9a.d(14): Error: only one index allowed to index `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpuf96ly9a.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164565
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            count++;\n        }\n        else if(c >= 'A' && c <=\
    \ 'Z')\n        {\n            count++;\n        }\n    }\n    return count;\n\
    }\nunittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp8jtpqzgw.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e0d]

    ??:? void tmp8jtpqzgw.__unittest_L23_C1() [0x427b20]

    ??:? void tmp8jtpqzgw.__modtest() [0x427b8c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb33]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9c6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb59]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430008]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fae5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a99d]

    ??:? runModuleUnitTests [0x42b909]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42825c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164565
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string)\n    {\n        if (c >= 'a' && c <= 'z')\n\
    \            count++;\n        else if (c >= 'A' && c <= 'Z')\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_distinct_characters;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n\
    \    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\"\
    ) == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpzk0jec68.d(25): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e0d]

    ??:? void tmpzk0jec68.__unittest_L19_C1() [0x427b20]

    ??:? void tmpzk0jec68.__modtest() [0x427b8c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb33]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9c6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb59]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430008]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fae5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a99d]

    ??:? runModuleUnitTests [0x42b909]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42825c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164566
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    auto char_set\
    \ = new HashSet!(char)();\n    foreach(char c; string) \n    {\n        char_set.insert(c);\n\
    \    }\n    return char_set.length;\n}\nunittest\n{\n    alias candidate = count_distinct_characters;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n\
    \    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\"\
    ) == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp2um19s6r.d(9): Error: template instance `HashSet!char` template
    `HashSet` is not defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2um19s6r.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164565
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    auto char_set\
    \ = new int[256];\n    foreach(c; string) \n    {\n        char_set[cast(int)tolower(c)]++;\n\
    \    }\n    return count(char_set, char_set + 256, 1);\n}\nunittest\n{\n    alias\
    \ candidate = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n\
    \    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\"\
    ) == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"\
    Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpgjtmweiz.d(12): Error: undefined identifier `tolower`

    /tmp/tmpgjtmweiz.d(14): Error: undefined identifier `count`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgjtmweiz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164566
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    return set(string.toLowerCase()).length;\n\
    }\nunittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpondiyffa.d(9): Error: undefined identifier `set`, did you mean
    template `get(K, V)(inout(V[K]) aa, K key, lazy inout(V) defaultValue)`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpondiyffa.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164565
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string)\n    {\n        if(c.isLetter)\n        {\n\
    \            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n \
    \   alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\"\
    ) == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\"\
    ) == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"\
    Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp_9no5t4d.d(12): Error: no property `isLetter` for type `char`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_9no5t4d.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164565
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    auto char_set\
    \ = set!char();\n    foreach(char c; string)\n    {\n        char_set.insert(c);\n\
    \    }\n    return char_set.length;\n}\nunittest\n{\n    alias candidate = count_distinct_characters;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n\
    \    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\"\
    ) == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpqnxco1o_.d(9): Error: template instance `set!char` template `set`
    is not defined, did you mean get(K, V)(inout(V[K]) aa, K key, lazy inout(V) defaultValue)?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqnxco1o_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164565
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string) \n    {\n        if(c >= 'a' && c <= 'z')\
    \ \n        {\n            count++;\n        }\n        else if(c >= 'A' && c\
    \ <= 'Z') \n        {\n            count++;\n        }\n    }\n    return count;\n\
    }\nunittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpuk131ed0.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e0d]

    ??:? void tmpuk131ed0.__unittest_L23_C1() [0x427b20]

    ??:? void tmpuk131ed0.__modtest() [0x427b8c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb33]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9c6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb59]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430008]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fae5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a99d]

    ??:? runModuleUnitTests [0x42b909]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42825c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164566
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long result\
    \ = 0;\n    foreach(char c; string)\n    {\n        if(!result)\n        {\n \
    \           result = 1;\n            continue;\n        }\n        bool found\
    \ = false;\n        foreach(char c2; string[0..result])\n        {\n         \
    \   if(c == c2)\n            {\n                found = true;\n              \
    \  break;\n            }\n        }\n        if(!found)\n            result++;\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = count_distinct_characters;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n\
    \    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\"\
    ) == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp8l4sm7s9.d(37): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e6d]

    ??:? void tmp8l4sm7s9.__unittest_L31_C1() [0x427b84]

    ??:? void tmp8l4sm7s9.__modtest() [0x427bf0]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc07]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aa9a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc2d]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x4300dc]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fbb9]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa71]

    ??:? runModuleUnitTests [0x42b9dd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428330]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164566
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    auto result\
    \ = new int[256];\n    foreach(c; string) \n    {\n        result[c]++;\n    }\n\
    \    return result.count!(a => a > 0);\n}\nunittest\n{\n    alias candidate =\
    \ count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpp99xny9m.d(14): Error: no property `count` for type `int[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpp99xny9m.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164566
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string)\n    {\n        if(c.isLetter)\n        {\n\
    \            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n \
    \   alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\"\
    ) == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\"\
    ) == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"\
    Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp_9no5t4d.d(12): Error: no property `isLetter` for type `char`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_9no5t4d.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164565
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    auto char_set\
    \ = new set!(char)();\n    foreach(char c; string)\n    {\n        char_set.insert(c);\n\
    \    }\n    return char_set.length;\n}\nunittest\n{\n    alias candidate = count_distinct_characters;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n\
    \    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\"\
    ) == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp850y_q06.d(9): Error: template instance `set!char` template `set`
    is not defined, did you mean get(K, V)(inout(V[K]) aa, K key, lazy inout(V) defaultValue)?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp850y_q06.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164566
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            count++;\n        }\n        else if(c >= 'A' && c <=\
    \ 'Z')\n        {\n            count++;\n        }\n    }\n    return count;\n\
    }\nunittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp8jtpqzgw.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e0d]

    ??:? void tmp8jtpqzgw.__unittest_L23_C1() [0x427b20]

    ??:? void tmp8jtpqzgw.__modtest() [0x427b8c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb33]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9c6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb59]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430008]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fae5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a99d]

    ??:? runModuleUnitTests [0x42b909]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42825c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164565
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            count++;\n        }\n        else if(c >= 'A' && c <=\
    \ 'Z')\n        {\n            count++;\n        }\n    }\n    return count;\n\
    }\nunittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp8jtpqzgw.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e0d]

    ??:? void tmp8jtpqzgw.__unittest_L23_C1() [0x427b20]

    ??:? void tmp8jtpqzgw.__modtest() [0x427b8c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb33]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9c6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb59]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430008]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fae5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a99d]

    ??:? runModuleUnitTests [0x42b909]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42825c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164565
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            count++;\n        }\n        else if(c >= 'A' && c <=\
    \ 'Z')\n        {\n            count++;\n        }\n    }\n    return count;\n\
    }\nunittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp8jtpqzgw.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e0d]

    ??:? void tmp8jtpqzgw.__unittest_L23_C1() [0x427b20]

    ??:? void tmp8jtpqzgw.__modtest() [0x427b8c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb33]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9c6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb59]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430008]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fae5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a99d]

    ??:? runModuleUnitTests [0x42b909]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42825c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164565
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            if(!count)\n                count++;\n            else\n\
    \            {\n                bool found = false;\n                foreach(char\
    \ c2; string)\n                {\n                    if(c == c2)\n          \
    \          {\n                        found = true;\n                        break;\n\
    \                    }\n                }\n                if(!found)\n      \
    \              count++;\n            }\n        }\n        else if(c >= 'A' &&\
    \ c <= 'Z')\n        {\n            if(!count)\n                count++;\n   \
    \         else\n            {\n                bool found = false;\n         \
    \       foreach(char c2; string)\n                {\n                    if(c\
    \ == c2)\n                    {\n                        found = true;\n     \
    \                   break;\n                    }\n                }\n       \
    \         if(!found)\n                    count++;\n            }\n        }\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_distinct_characters;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n\
    \    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\"\
    ) == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp9st0bi92.d(58): unittest failure

    ----------------

    ??:? _d_unittestp [0x427eed]

    ??:? void tmp9st0bi92.__unittest_L53_C1() [0x427bd5]

    ??:? void tmp9st0bi92.__modtest() [0x427c6c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc13]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aaa6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc39]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x4300e8]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fbc5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa7d]

    ??:? runModuleUnitTests [0x42b9e9]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42833c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164566
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    auto distinct_characters\
    \ = new HashSet!(char)();\n    foreach(character; string)\n    {\n        distinct_characters.insert(character);\n\
    \    }\n    return distinct_characters.length;\n}\nunittest\n{\n    alias candidate\
    \ = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpgic61tc3.d(9): Error: template instance `HashSet!char` template
    `HashSet` is not defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgic61tc3.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164565
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    auto distinct_characters\
    \ = new HashSet!(char)();\n    foreach(character; string)\n    {\n        distinct_characters.insert(character);\n\
    \    }\n    return distinct_characters.length;\n}\nunittest\n{\n    alias candidate\
    \ = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpgic61tc3.d(9): Error: template instance `HashSet!char` template
    `HashSet` is not defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgic61tc3.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164565
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(c; string)\n    {\n        if(!c.isLetter)\n            continue;\n\
    \        if(c.isUpper)\n            c = c.toLower;\n        if(!c.isLetter)\n\
    \            continue;\n        count++;\n    }\n    return count;\n}\nunittest\n\
    {\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpmvuuqu2y.d(12): Error: no property `isLetter` for type `immutable(char)`

    /tmp/tmpmvuuqu2y.d(14): Error: no property `isUpper` for type `immutable(char)`

    /tmp/tmpmvuuqu2y.d(15): Error: no property `toLower` for type `immutable(char)`

    /tmp/tmpmvuuqu2y.d(16): Error: no property `isLetter` for type `immutable(char)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmvuuqu2y.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164566
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long distinct_characters\
    \ = 0;\n    foreach(char c; string)\n    {\n        if(c.isLetter)\n        {\n\
    \            distinct_characters++;\n        }\n    }\n    return distinct_characters;\n\
    }\nunittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpp_3_xh38.d(12): Error: no property `isLetter` for type `char`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpp_3_xh38.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164566
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            count++;\n        }\n        else if(c >= 'A' && c <=\
    \ 'Z')\n        {\n            count++;\n        }\n    }\n    return count;\n\
    }\nunittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp8jtpqzgw.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e0d]

    ??:? void tmp8jtpqzgw.__unittest_L23_C1() [0x427b20]

    ??:? void tmp8jtpqzgw.__modtest() [0x427b8c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb33]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9c6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb59]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430008]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fae5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a99d]

    ??:? runModuleUnitTests [0x42b909]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42825c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164565
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string)\n    {\n        if(c.isAlpha)\n        {\n\
    \            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n \
    \   alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\"\
    ) == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\"\
    ) == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"\
    Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp3nzd36i6.d(12): Error: no property `isAlpha` for type `char`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3nzd36i6.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164565
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            count++;\n        }\n        else if(c >= 'A' && c <=\
    \ 'Z')\n        {\n            count++;\n        }\n    }\n    return count;\n\
    }\nunittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp8jtpqzgw.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e0d]

    ??:? void tmp8jtpqzgw.__unittest_L23_C1() [0x427b20]

    ??:? void tmp8jtpqzgw.__modtest() [0x427b8c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb33]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9c6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb59]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430008]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fae5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a99d]

    ??:? runModuleUnitTests [0x42b909]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42825c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164565
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string) \n    {\n        if (c >= 'a' && c <= 'z')\
    \ \n        {\n            count++;\n        }\n        else if (c >= 'A' && c\
    \ <= 'Z') \n        {\n            count++;\n        }\n    }\n    return count;\n\
    }\nunittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp7x4ud898.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e0d]

    ??:? void tmp7x4ud898.__unittest_L23_C1() [0x427b20]

    ??:? void tmp7x4ud898.__modtest() [0x427b8c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb33]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9c6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb59]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430008]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fae5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a99d]

    ??:? runModuleUnitTests [0x42b909]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42825c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164565
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    return set(string.toLowerCase).length;\n\
    }\nunittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpb3d8tivd.d(9): Error: undefined identifier `set`, did you mean
    template `get(K, V)(inout(V[K]) aa, K key, lazy inout(V) defaultValue)`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpb3d8tivd.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164565
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    long[] char_count = new long[256];\n    foreach(char c; string)\n\
    \    {\n        char_count[cast(int)c]++;\n    }\n    foreach(long i; char_count)\n\
    \    {\n        if(i != 0)\n        {\n            count++;\n        }\n    }\n\
    \    return count;\n}\nunittest\n{\n    alias candidate = count_distinct_characters;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n\
    \    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\"\
    ) == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpcenn65pu.d(30): unittest failure

    ----------------

    ??:? _d_unittestp [0x428115]

    ??:? void tmpcenn65pu.__unittest_L24_C1() [0x427e28]

    ??:? void tmpcenn65pu.__modtest() [0x427e94]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c113]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42afa6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430231]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x4306e0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4301bd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af7d]

    ??:? runModuleUnitTests [0x42bee9]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4285d8]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164566
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    string lower_case_string\
    \ = toLower(string);\n    return set(lower_case_string).length;\n}\nunittest\n\
    {\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpv6fcunqs.d(9): Error: `string` is used as a type

    /tmp/tmpv6fcunqs.d(9): Error: undefined identifier `toLower`

    /tmp/tmpv6fcunqs.d(10): Error: undefined identifier `set`, did you mean template
    `get(K, V)(inout(V[K]) aa, K key, lazy inout(V) defaultValue)`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpv6fcunqs.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164566
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long result\
    \ = 0;\n    foreach(char c; string) \n    {\n        if (c >= 'a' && c <= 'z')\
    \ \n        {\n            result |= 1 << (c - 'a');\n        } \n        else\
    \ if (c >= 'A' && c <= 'Z') \n        {\n            result |= 1 << (c - 'A');\n\
    \        }\n    }\n    return result.popCount;\n}\nunittest\n{\n    alias candidate\
    \ = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmppmtqjaio.d(21): Error: no property `popCount` for type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmppmtqjaio.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164566
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    auto distinct_characters\
    \ = new HashSet!(char)();\n    foreach(character; string)\n    {\n        distinct_characters.insert(character);\n\
    \    }\n    return distinct_characters.length;\n}\nunittest\n{\n    alias candidate\
    \ = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpgic61tc3.d(9): Error: template instance `HashSet!char` template
    `HashSet` is not defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgic61tc3.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164565
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long[] char_count\
    \ = new long[256];\n    foreach(c; string)\n    {\n        char_count[cast(int)c]++;\n\
    \    }\n    return count(char_count, (x) => x > 0);\n}\nunittest\n{\n    alias\
    \ candidate = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n\
    \    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\"\
    ) == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"\
    Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpibdvsix2.d(14): Error: undefined identifier `count`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpibdvsix2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164566
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    auto result\
    \ = new int[256];\n    foreach(char c; string)\n    {\n        result[cast(int)c]++;\n\
    \    }\n    return count(result, result[$-1] != 0);\n}\nunittest\n{\n    alias\
    \ candidate = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n\
    \    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\"\
    ) == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"\
    Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmptfui2vzz.d(14): Error: undefined identifier `count`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptfui2vzz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164566
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    auto result\
    \ = new int[256];\n    foreach(c; string) \n    {\n        result[cast(int)c]++;\n\
    \    }\n    return count(result, (x) => x != 0);\n}\nunittest\n{\n    alias candidate\
    \ = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpfwzdabkl.d(14): Error: undefined identifier `count`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfwzdabkl.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164566
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long result\
    \ = 0;\n    foreach(char c; string)\n    {\n        if (c.tolower() in result)\n\
    \            continue;\n        result ~= c.tolower();\n    }\n    return result.length;\n\
    }\nunittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp2apu8t33.d(12): Error: no property `tolower` for type `char`

    /tmp/tmp2apu8t33.d(14): Error: no property `tolower` for type `char`

    /tmp/tmp2apu8t33.d(16): Error: no property `length` for type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2apu8t33.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164566
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string)\n    {\n        if(c.isLetter)\n        {\n\
    \            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n \
    \   alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\"\
    ) == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\"\
    ) == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"\
    Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp_9no5t4d.d(12): Error: no property `isLetter` for type `char`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_9no5t4d.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164565
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    return set(string.toLowerCase).length;\n\
    }\nunittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpb3d8tivd.d(9): Error: undefined identifier `set`, did you mean
    template `get(K, V)(inout(V[K]) aa, K key, lazy inout(V) defaultValue)`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpb3d8tivd.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164565
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            count++;\n        }\n        else if(c >= 'A' && c <=\
    \ 'Z')\n        {\n            count++;\n        }\n    }\n    return count;\n\
    }\nunittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp8jtpqzgw.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e0d]

    ??:? void tmp8jtpqzgw.__unittest_L23_C1() [0x427b20]

    ??:? void tmp8jtpqzgw.__modtest() [0x427b8c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb33]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9c6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb59]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430008]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fae5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a99d]

    ??:? runModuleUnitTests [0x42b909]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42825c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164565
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    auto result\
    \ = new int[256];\n    foreach(c; string)\n    {\n        result[to!int(c)]++;\n\
    \    }\n    return count(result, (x) => x != 0);\n}\nunittest\n{\n    alias candidate\
    \ = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmphajyju_w.d(12): Error: template instance `to!int` template `to`
    is not defined, did you mean No?

    /tmp/tmphajyju_w.d(14): Error: undefined identifier `count`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphajyju_w.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164566
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string)\n    {\n        count += 1;\n    }\n    return\
    \ count;\n}\nunittest\n{\n    alias candidate = count_distinct_characters;\n\n\
    \    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n\
    \    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\"\
    ) == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpvvyxpw6o.d(22): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmpvvyxpw6o.__unittest_L16_C1() [0x427af8]

    ??:? void tmpvvyxpw6o.__modtest() [0x427b64]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164566
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string) \n    {\n        if(c >= 'a' && c <= 'z')\
    \ \n        {\n            count++;\n        }\n        else if(c >= 'A' && c\
    \ <= 'Z') \n        {\n            count++;\n        }\n    }\n    return count;\n\
    }\nunittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpuk131ed0.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e0d]

    ??:? void tmpuk131ed0.__unittest_L23_C1() [0x427b20]

    ??:? void tmpuk131ed0.__modtest() [0x427b8c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb33]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9c6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb59]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430008]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fae5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a99d]

    ??:? runModuleUnitTests [0x42b909]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42825c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164566
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    auto distinct_chars\
    \ = new string[];\n    foreach(char c; string)\n    {\n        if(!distinct_chars.canFind(c))\n\
    \            distinct_chars ~= c;\n    }\n    return distinct_chars.length;\n\
    }\nunittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpjrj1or0c.d(9): Error: `string` is used as a type

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjrj1or0c.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164566
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            count++;\n        }\n        else if(c >= 'A' && c <=\
    \ 'Z')\n        {\n            count++;\n        }\n    }\n    return count;\n\
    }\nunittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp8jtpqzgw.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e0d]

    ??:? void tmp8jtpqzgw.__unittest_L23_C1() [0x427b20]

    ??:? void tmp8jtpqzgw.__modtest() [0x427b8c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb33]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9c6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb59]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430008]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fae5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a99d]

    ??:? runModuleUnitTests [0x42b909]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42825c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164565
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    auto char_set\
    \ = new set!char;\n    foreach(c; string)\n    {\n        char_set.insert(c);\n\
    \    }\n    return char_set.length;\n}\nunittest\n{\n    alias candidate = count_distinct_characters;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n\
    \    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\"\
    ) == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpay9yuuyj.d(9): Error: template instance `set!char` template `set`
    is not defined, did you mean get(K, V)(inout(V[K]) aa, K key, lazy inout(V) defaultValue)?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpay9yuuyj.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164566
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    // count\
    \ the number of distinct characters in a string\n    // regardless of case\n \
    \   long count = 0;\n    foreach(char c; string)\n    {\n        if(c.isAlpha)\n\
    \        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n\
    {\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpb24mt_15.d(14): Error: no property `isAlpha` for type `char`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpb24mt_15.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164566
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    auto char_set\
    \ = new HashSet!(char)();\n    foreach(c; string)\n    {\n        char_set.insert(c);\n\
    \    }\n    return char_set.length;\n}\nunittest\n{\n    alias candidate = count_distinct_characters;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n\
    \    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\"\
    ) == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpq7oemugj.d(9): Error: template instance `HashSet!char` template
    `HashSet` is not defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpq7oemugj.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164566
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    auto distinct_characters\
    \ = new HashSet!char();\n    foreach(character; string)\n    {\n        distinct_characters.insert(character);\n\
    \    }\n    return distinct_characters.length;\n}\nunittest\n{\n    alias candidate\
    \ = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1r4_amti.d(9): Error: template instance `HashSet!char` template
    `HashSet` is not defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1r4_amti.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164565
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string) \n    {\n        if(c >= 'a' && c <= 'z')\
    \ \n        {\n            count++;\n        }\n        else if(c >= 'A' && c\
    \ <= 'Z') \n        {\n            count++;\n        }\n    }\n    return count;\n\
    }\nunittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpuk131ed0.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e0d]

    ??:? void tmpuk131ed0.__unittest_L23_C1() [0x427b20]

    ??:? void tmpuk131ed0.__modtest() [0x427b8c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb33]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9c6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb59]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430008]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fae5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a99d]

    ??:? runModuleUnitTests [0x42b909]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42825c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164566
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string)\n    {\n        if(c.isLetter)\n        {\n\
    \            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n \
    \   alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\"\
    ) == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\"\
    ) == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"\
    Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp_9no5t4d.d(12): Error: no property `isLetter` for type `char`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_9no5t4d.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164565
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    auto result\
    \ = new int[256];\n    foreach(c; string)\n    {\n        result[c] = 1;\n   \
    \ }\n    return sum(result);\n}\nunittest\n{\n    alias candidate = count_distinct_characters;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n\
    \    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\"\
    ) == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp2241d0fp.d(14): Error: undefined identifier `sum`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2241d0fp.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164566
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string)\n    {\n        if (c >= 'a' && c <= 'z')\n\
    \            count++;\n        else if (c >= 'A' && c <= 'Z')\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_distinct_characters;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n\
    \    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\"\
    ) == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpzk0jec68.d(25): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e0d]

    ??:? void tmpzk0jec68.__unittest_L19_C1() [0x427b20]

    ??:? void tmpzk0jec68.__modtest() [0x427b8c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb33]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9c6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb59]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430008]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fae5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a99d]

    ??:? runModuleUnitTests [0x42b909]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42825c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164566
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    auto distinct_characters\
    \ = new HashSet!(char)();\n    foreach(character; string) \n    {\n        distinct_characters.insert(character);\n\
    \    }\n    return distinct_characters.length;\n}\nunittest\n{\n    alias candidate\
    \ = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpcllv7g3j.d(9): Error: template instance `HashSet!char` template
    `HashSet` is not defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcllv7g3j.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164566
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            count++;\n        }\n        else if(c >= 'A' && c <=\
    \ 'Z')\n        {\n            count++;\n        }\n    }\n    return count;\n\
    }\nunittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp8jtpqzgw.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e0d]

    ??:? void tmp8jtpqzgw.__unittest_L23_C1() [0x427b20]

    ??:? void tmp8jtpqzgw.__modtest() [0x427b8c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb33]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9c6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb59]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430008]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fae5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a99d]

    ??:? runModuleUnitTests [0x42b909]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42825c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164565
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            count++;\n        }\n        else if(c >= 'A' && c <=\
    \ 'Z')\n        {\n            count++;\n        }\n    }\n    return count;\n\
    }\nunittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp8jtpqzgw.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e0d]

    ??:? void tmp8jtpqzgw.__unittest_L23_C1() [0x427b20]

    ??:? void tmp8jtpqzgw.__modtest() [0x427b8c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb33]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9c6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb59]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430008]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fae5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a99d]

    ??:? runModuleUnitTests [0x42b909]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42825c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164565
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            count++;\n        }\n        else if(c >= 'A' && c <=\
    \ 'Z')\n        {\n            count++;\n        }\n    }\n    return count;\n\
    }\nunittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp8jtpqzgw.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e0d]

    ??:? void tmp8jtpqzgw.__unittest_L23_C1() [0x427b20]

    ??:? void tmp8jtpqzgw.__modtest() [0x427b8c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb33]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9c6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb59]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430008]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fae5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a99d]

    ??:? runModuleUnitTests [0x42b909]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42825c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164565
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string)\n    {\n        if (c >= 'a' && c <= 'z')\n\
    \            count++;\n        else if (c >= 'A' && c <= 'Z')\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_distinct_characters;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n\
    \    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\"\
    ) == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpzk0jec68.d(25): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e0d]

    ??:? void tmpzk0jec68.__unittest_L19_C1() [0x427b20]

    ??:? void tmpzk0jec68.__modtest() [0x427b8c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb33]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9c6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb59]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430008]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fae5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a99d]

    ??:? runModuleUnitTests [0x42b909]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42825c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164566
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    long[] char_count = new long[256];\n    foreach(c; string)\n    {\n\
    \        if (char_count[cast(int)c] == 0)\n        {\n            count++;\n \
    \       }\n        char_count[cast(int)c]++;\n    }\n    return count;\n}\nunittest\n\
    {\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp__a9r3j5.d(27): unittest failure

    ----------------

    ??:? _d_unittestp [0x42810d]

    ??:? void tmp__a9r3j5.__unittest_L21_C1() [0x427e20]

    ??:? void tmp__a9r3j5.__modtest() [0x427e8c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c10b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42af9e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430229]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x4306d8]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4301b5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af75]

    ??:? runModuleUnitTests [0x42bee1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4285d0]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164566
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string)\n    {\n        if(c.isLetter)\n        {\n\
    \            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n \
    \   alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\"\
    ) == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\"\
    ) == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"\
    Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp_9no5t4d.d(12): Error: no property `isLetter` for type `char`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_9no5t4d.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164565
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    auto distinct_characters\
    \ = new HashSet!(char)();\n    foreach(character; string)\n    {\n        distinct_characters.insert(character);\n\
    \    }\n    return distinct_characters.length;\n}\nunittest\n{\n    alias candidate\
    \ = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpgic61tc3.d(9): Error: template instance `HashSet!char` template
    `HashSet` is not defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgic61tc3.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164565
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    auto distinct_chars\
    \ = new int[256];\n    foreach(char c; string)\n    {\n        distinct_chars[cast(int)c]\
    \ = 1;\n    }\n    return std.algorithm.count(distinct_chars, distinct_chars +\
    \ 256, 1);\n}\nunittest\n{\n    alias candidate = count_distinct_characters;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n\
    \    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\"\
    ) == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmphieu7lxr.d(14): Error: undefined identifier `algorithm` in package
    `std`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphieu7lxr.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164566
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    // Create\
    \ a set of characters\n    auto characters = set!char();\n    // Add each character\
    \ to the set\n    foreach (character; string)\n    {\n        characters.insert(character);\n\
    \    }\n    // Return the size of the set\n    return characters.size;\n}\nunittest\n\
    {\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpeplv9crv.d(10): Error: template instance `set!char` template `set`
    is not defined, did you mean get(K, V)(inout(V[K]) aa, K key, lazy inout(V) defaultValue)?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpeplv9crv.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164566
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string) \n    {\n        if(c >= 'a' && c <= 'z')\
    \ \n        {\n            count++;\n        }\n        else if(c >= 'A' && c\
    \ <= 'Z') \n        {\n            count++;\n        }\n    }\n    return count;\n\
    }\nunittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpuk131ed0.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e0d]

    ??:? void tmpuk131ed0.__unittest_L23_C1() [0x427b20]

    ??:? void tmpuk131ed0.__modtest() [0x427b8c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb33]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9c6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb59]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430008]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fae5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a99d]

    ??:? runModuleUnitTests [0x42b909]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42825c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164566
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    auto distinct_chars\
    \ = new HashSet!(char)();\n    foreach(char c; string) \n    {\n        distinct_chars.insert(c);\n\
    \    }\n    return distinct_chars.length;\n}\nunittest\n{\n    alias candidate\
    \ = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpab48kb2b.d(9): Error: template instance `HashSet!char` template
    `HashSet` is not defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpab48kb2b.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164566
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            count++;\n        }\n        else if(c >= 'A' && c <=\
    \ 'Z')\n        {\n            count++;\n        }\n    }\n    return count;\n\
    }\nunittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp8jtpqzgw.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e0d]

    ??:? void tmp8jtpqzgw.__unittest_L23_C1() [0x427b20]

    ??:? void tmp8jtpqzgw.__modtest() [0x427b8c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb33]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9c6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb59]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430008]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fae5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a99d]

    ??:? runModuleUnitTests [0x42b909]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42825c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164565
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    auto set\
    \ = new Set!(char)();\n    foreach(char c; string)\n    {\n        set.insert(c);\n\
    \    }\n    return set.length;\n}\nunittest\n{\n    alias candidate = count_distinct_characters;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n\
    \    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\"\
    ) == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpmaj5velw.d(9): Error: template instance `Set!char` template `Set`
    is not defined, did you mean get(K, V)(inout(V[K]) aa, K key, lazy inout(V) defaultValue)?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmaj5velw.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164566
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    long[] char_count = new long[256];\n    foreach(char c; string) \n\
    \    {\n        if(char_count[cast(int)c] == 0) \n        {\n            count++;\n\
    \        }\n        char_count[cast(int)c]++;\n    }\n    return count;\n}\nunittest\n\
    {\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp_li8loa5.d(27): unittest failure

    ----------------

    ??:? _d_unittestp [0x42810d]

    ??:? void tmp_li8loa5.__unittest_L21_C1() [0x427e20]

    ??:? void tmp_li8loa5.__modtest() [0x427e8c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c10b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42af9e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430229]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x4306d8]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4301b5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af75]

    ??:? runModuleUnitTests [0x42bee1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4285d0]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164566
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    auto distinct_characters\
    \ = new HashSet!(char)();\n    foreach(character; string) \n    {\n        distinct_characters.insert(character);\n\
    \    }\n    return distinct_characters.length;\n}\nunittest\n{\n    alias candidate\
    \ = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpcllv7g3j.d(9): Error: template instance `HashSet!char` template
    `HashSet` is not defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcllv7g3j.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164566
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long result\
    \ = 0;\n    foreach(char c; string)\n    {\n        if(c.tolower() in result)\n\
    \            continue;\n        result ~= c.tolower();\n    }\n    return result.length;\n\
    }\nunittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpmzyews5d.d(12): Error: no property `tolower` for type `char`

    /tmp/tmpmzyews5d.d(14): Error: no property `tolower` for type `char`

    /tmp/tmpmzyews5d.d(16): Error: no property `length` for type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmzyews5d.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164566
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            count++;\n        }\n        else if(c >= 'A' && c <=\
    \ 'Z')\n        {\n            count++;\n        }\n    }\n    return count;\n\
    }\nunittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp8jtpqzgw.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e0d]

    ??:? void tmp8jtpqzgw.__unittest_L23_C1() [0x427b20]

    ??:? void tmp8jtpqzgw.__modtest() [0x427b8c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb33]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9c6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb59]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430008]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fae5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a99d]

    ??:? runModuleUnitTests [0x42b909]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42825c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164565
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string) \n    {\n        if(c.isLetter)\n        \
    \    count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate =\
    \ count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp53atnd9d.d(12): Error: no property `isLetter` for type `char`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp53atnd9d.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164565
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    long[] char_counts = new long[256];\n    foreach(c; string) \n   \
    \ {\n        if (char_counts[c] == 0) \n        {\n            count++;\n    \
    \    }\n        char_counts[c]++;\n    }\n    return count;\n}\nunittest\n{\n\
    \    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\"\
    ) == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\"\
    ) == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"\
    Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpnzgdouze.d(27): unittest failure

    ----------------

    ??:? _d_unittestp [0x42810d]

    ??:? void tmpnzgdouze.__unittest_L21_C1() [0x427e20]

    ??:? void tmpnzgdouze.__modtest() [0x427e8c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c10b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42af9e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430229]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x4306d8]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4301b5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af75]

    ??:? runModuleUnitTests [0x42bee1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4285d0]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164566
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            count++;\n        }\n        else if(c >= 'A' && c <=\
    \ 'Z')\n        {\n            count++;\n        }\n    }\n    return count;\n\
    }\nunittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp8jtpqzgw.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e0d]

    ??:? void tmp8jtpqzgw.__unittest_L23_C1() [0x427b20]

    ??:? void tmp8jtpqzgw.__modtest() [0x427b8c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb33]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9c6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb59]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430008]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fae5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a99d]

    ??:? runModuleUnitTests [0x42b909]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42825c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164565
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    auto char_set\
    \ = new HashSet!(char)();\n    foreach(char c; string)\n    {\n        char_set.insert(c);\n\
    \    }\n    return char_set.length;\n}\nunittest\n{\n    alias candidate = count_distinct_characters;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n\
    \    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\"\
    ) == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpk90c2k_6.d(9): Error: template instance `HashSet!char` template
    `HashSet` is not defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk90c2k_6.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164566
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string)\n    {\n        if(c.isAlpha)\n        {\n\
    \            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n \
    \   alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\"\
    ) == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\"\
    ) == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"\
    Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp3nzd36i6.d(12): Error: no property `isAlpha` for type `char`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3nzd36i6.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164565
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    auto distinct_characters\
    \ = new HashSet!char();\n    foreach(character; string)\n    {\n        distinct_characters.insert(character);\n\
    \    }\n    return distinct_characters.length;\n}\nunittest\n{\n    alias candidate\
    \ = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1r4_amti.d(9): Error: template instance `HashSet!char` template
    `HashSet` is not defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1r4_amti.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164565
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    long[] char_count = new long[256];\n    foreach(char c; string)\n\
    \    {\n        if(char_count[c] == 0)\n        {\n            count++;\n    \
    \    }\n        char_count[c]++;\n    }\n    return count;\n}\nunittest\n{\n \
    \   alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\"\
    ) == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\"\
    ) == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"\
    Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpqp5cjjyo.d(27): unittest failure

    ----------------

    ??:? _d_unittestp [0x42810d]

    ??:? void tmpqp5cjjyo.__unittest_L21_C1() [0x427e20]

    ??:? void tmpqp5cjjyo.__modtest() [0x427e8c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c10b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42af9e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430229]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x4306d8]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4301b5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af75]

    ??:? runModuleUnitTests [0x42bee1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4285d0]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164565
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string)\n    {\n        if(c.isLetter)\n        {\n\
    \            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n \
    \   alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\"\
    ) == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\"\
    ) == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"\
    Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp_9no5t4d.d(12): Error: no property `isLetter` for type `char`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_9no5t4d.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164565
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string) \n    {\n        if (c >= 'a' && c <= 'z')\
    \ \n        {\n            count++;\n        }\n        else if (c >= 'A' && c\
    \ <= 'Z') \n        {\n            count++;\n        }\n    }\n    return count;\n\
    }\nunittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp7x4ud898.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e0d]

    ??:? void tmp7x4ud898.__unittest_L23_C1() [0x427b20]

    ??:? void tmp7x4ud898.__modtest() [0x427b8c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb33]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9c6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb59]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430008]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fae5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a99d]

    ??:? runModuleUnitTests [0x42b909]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42825c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164565
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    auto result\
    \ = new int[256];\n    foreach(c; string)\n        result[tolower(c)] = 1;\n \
    \   return result.count!(x => x == 1);\n}\nunittest\n{\n    alias candidate =\
    \ count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpacqd7l3l.d(11): Error: undefined identifier `tolower`

    /tmp/tmpacqd7l3l.d(12): Error: no property `count` for type `int[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpacqd7l3l.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164566
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    auto distinct_characters\
    \ = new std.set.HashSet!(char)();\n    foreach(character; string)\n    {\n   \
    \     distinct_characters.insert(character);\n    }\n    return distinct_characters.length;\n\
    }\nunittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1g9ccx82.d(9): Error: undefined identifier `set` in package `std`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1g9ccx82.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164566
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            count++;\n        }\n        else if(c >= 'A' && c <=\
    \ 'Z')\n        {\n            count++;\n        }\n    }\n    return count;\n\
    }\nunittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp8jtpqzgw.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e0d]

    ??:? void tmp8jtpqzgw.__unittest_L23_C1() [0x427b20]

    ??:? void tmp8jtpqzgw.__modtest() [0x427b8c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb33]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9c6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb59]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430008]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fae5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a99d]

    ??:? runModuleUnitTests [0x42b909]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42825c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164565
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char ch; string) \n    {\n        if (ch.isAlpha) \n     \
    \   {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n\
    {\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpwhl2m0_s.d(12): Error: no property `isAlpha` for type `char`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwhl2m0_s.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164566
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    auto result\
    \ = new int[256];\n    foreach(c; string) \n    {\n        result[to!int(c)]++;\n\
    \    }\n    return count(result, result.length, (a) => a != 0);\n}\nunittest\n\
    {\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpx1m97klt.d(12): Error: template instance `to!int` template `to`
    is not defined, did you mean No?

    /tmp/tmpx1m97klt.d(14): Error: undefined identifier `count`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpx1m97klt.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164566
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string)\n    {\n        if(c.tolower() in string.tolower())\n\
    \        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n\
    {\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp9vjl29zr.d(12): Error: no property `tolower` for type `char`

    /tmp/tmp9vjl29zr.d(12): Error: no property `tolower` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9vjl29zr.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164566
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    // Create\
    \ a set of characters\n    auto set = new Set!(char)();\n    foreach(c; string)\n\
    \    {\n        set.insert(c);\n    }\n    return set.length;\n}\nunittest\n{\n\
    \    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\"\
    ) == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\"\
    ) == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"\
    Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp3lt3fy_s.d(10): Error: template instance `Set!char` template `Set`
    is not defined, did you mean get(K, V)(inout(V[K]) aa, K key, lazy inout(V) defaultValue)?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3lt3fy_s.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164566
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string)\n    {\n        if(c.isAlpha)\n        {\n\
    \            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n \
    \   alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\"\
    ) == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\"\
    ) == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"\
    Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp3nzd36i6.d(12): Error: no property `isAlpha` for type `char`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3nzd36i6.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164565
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string) \n    {\n        if(!count) \n        {\n\
    \            count++;\n        }\n        else \n        {\n            bool found\
    \ = false;\n            foreach(char d; string[0..$-1]) \n            {\n    \
    \            if(d == c) \n                {\n                    found = true;\n\
    \                    break;\n                }\n            }\n            if(!found)\
    \ \n            {\n                count++;\n            }\n        }\n    }\n\
    \    return count;\n}\nunittest\n{\n    alias candidate = count_distinct_characters;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n\
    \    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\"\
    ) == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpqh8vxcew.d(40): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e75]

    ??:? void tmpqh8vxcew.__unittest_L35_C1() [0x427b5d]

    ??:? void tmpqh8vxcew.__modtest() [0x427bf4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc0f]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aaa2]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc35]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x4300e4]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fbc1]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa79]

    ??:? runModuleUnitTests [0x42b9e5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428338]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164566
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    string lower_string\
    \ = toLower(string);\n    auto set = new Set!(char)();\n    foreach(char c; lower_string)\n\
    \    {\n        set.insert(c);\n    }\n    return set.length;\n}\nunittest\n{\n\
    \    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\"\
    ) == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\"\
    ) == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"\
    Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmprgchm0tj.d(9): Error: `string` is used as a type

    /tmp/tmprgchm0tj.d(9): Error: undefined identifier `toLower`

    /tmp/tmprgchm0tj.d(10): Error: template instance `Set!char` template `Set` is
    not defined, did you mean get(K, V)(inout(V[K]) aa, K key, lazy inout(V) defaultValue)?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprgchm0tj.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164566
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            count++;\n        }\n        else if(c >= 'A' && c <=\
    \ 'Z')\n        {\n            count++;\n        }\n    }\n    return count;\n\
    }\nunittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp8jtpqzgw.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e0d]

    ??:? void tmp8jtpqzgw.__unittest_L23_C1() [0x427b20]

    ??:? void tmp8jtpqzgw.__modtest() [0x427b8c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb33]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9c6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb59]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430008]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fae5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a99d]

    ??:? runModuleUnitTests [0x42b909]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42825c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164565
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            count++;\n        }\n        else if(c >= 'A' && c <=\
    \ 'Z')\n        {\n            count++;\n        }\n    }\n    return count;\n\
    }\nunittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp8jtpqzgw.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e0d]

    ??:? void tmp8jtpqzgw.__unittest_L23_C1() [0x427b20]

    ??:? void tmp8jtpqzgw.__modtest() [0x427b8c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb33]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9c6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb59]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430008]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fae5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a99d]

    ??:? runModuleUnitTests [0x42b909]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42825c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164565
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    return set(string.toLowerCase).length;\n\
    }\nunittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpb3d8tivd.d(9): Error: undefined identifier `set`, did you mean
    template `get(K, V)(inout(V[K]) aa, K key, lazy inout(V) defaultValue)`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpb3d8tivd.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164565
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string) \n    {\n        if(c >= 'a' && c <= 'z')\
    \ \n        {\n            count++;\n        }\n        else if(c >= 'A' && c\
    \ <= 'Z') \n        {\n            count++;\n        }\n    }\n    return count;\n\
    }\nunittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpuk131ed0.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e0d]

    ??:? void tmpuk131ed0.__unittest_L23_C1() [0x427b20]

    ??:? void tmpuk131ed0.__modtest() [0x427b8c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb33]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9c6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb59]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430008]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fae5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a99d]

    ??:? runModuleUnitTests [0x42b909]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42825c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164566
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    auto distinct_characters\
    \ = new int[256];\n    foreach(character; string) \n    {\n        distinct_characters[character]\
    \ = 1;\n    }\n    return std.algorithm.count!(a => a)(distinct_characters);\n\
    }\nunittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp3ub7bdkh.d(14): Error: undefined identifier `algorithm` in package
    `std`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3ub7bdkh.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164566
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    return set(string.toLowerCase()).length;\n\
    }\nunittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpondiyffa.d(9): Error: undefined identifier `set`, did you mean
    template `get(K, V)(inout(V[K]) aa, K key, lazy inout(V) defaultValue)`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpondiyffa.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164565
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            count++;\n        }\n        else if(c >= 'A' && c <=\
    \ 'Z')\n        {\n            count++;\n        }\n    }\n    return count;\n\
    }\nunittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp8jtpqzgw.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e0d]

    ??:? void tmp8jtpqzgw.__unittest_L23_C1() [0x427b20]

    ??:? void tmp8jtpqzgw.__modtest() [0x427b8c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb33]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9c6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb59]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430008]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fae5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a99d]

    ??:? runModuleUnitTests [0x42b909]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42825c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164565
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            count++;\n        }\n        else if(c >= 'A' && c <=\
    \ 'Z')\n        {\n            count++;\n        }\n    }\n    return count;\n\
    }\nunittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp8jtpqzgw.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e0d]

    ??:? void tmp8jtpqzgw.__unittest_L23_C1() [0x427b20]

    ??:? void tmp8jtpqzgw.__modtest() [0x427b8c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb33]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9c6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb59]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430008]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fae5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a99d]

    ??:? runModuleUnitTests [0x42b909]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42825c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164565
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string)\n    {\n        if (c >= 'a' && c <= 'z')\n\
    \            count++;\n        else if (c >= 'A' && c <= 'Z')\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_distinct_characters;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n\
    \    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\"\
    ) == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpzk0jec68.d(25): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e0d]

    ??:? void tmpzk0jec68.__unittest_L19_C1() [0x427b20]

    ??:? void tmpzk0jec68.__modtest() [0x427b8c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb33]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9c6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb59]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430008]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fae5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a99d]

    ??:? runModuleUnitTests [0x42b909]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42825c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164566
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    auto distinct_chars\
    \ = new int[256];\n    foreach(c; string)\n    {\n        distinct_chars[to!int(c)]\
    \ = 1;\n    }\n    return count(distinct_chars);\n}\nunittest\n{\n    alias candidate\
    \ = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpzchm0wt8.d(12): Error: template instance `to!int` template `to`
    is not defined, did you mean No?

    /tmp/tmpzchm0wt8.d(14): Error: undefined identifier `count`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpzchm0wt8.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164566
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            count++;\n        }\n        else if(c >= 'A' && c <=\
    \ 'Z')\n        {\n            count++;\n        }\n    }\n    return count;\n\
    }\nunittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp8jtpqzgw.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e0d]

    ??:? void tmp8jtpqzgw.__unittest_L23_C1() [0x427b20]

    ??:? void tmp8jtpqzgw.__modtest() [0x427b8c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb33]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9c6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb59]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430008]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fae5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a99d]

    ??:? runModuleUnitTests [0x42b909]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42825c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164565
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            count++;\n        }\n        else if(c >= 'A' && c <=\
    \ 'Z')\n        {\n            count++;\n        }\n    }\n    return count;\n\
    }\nunittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp8jtpqzgw.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e0d]

    ??:? void tmp8jtpqzgw.__unittest_L23_C1() [0x427b20]

    ??:? void tmp8jtpqzgw.__modtest() [0x427b8c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb33]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9c6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb59]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430008]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fae5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a99d]

    ??:? runModuleUnitTests [0x42b909]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42825c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164565
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    auto distinct_chars\
    \ = new int[256];\n    foreach(char c; string)\n    {\n        distinct_chars[cast(int)c]++;\n\
    \    }\n    return count(distinct_chars, distinct_chars + 256, 1);\n}\nunittest\n\
    {\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpht_3hhiv.d(14): Error: undefined identifier `count`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpht_3hhiv.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164566
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    auto distinct_chars\
    \ = new set!char;\n    foreach(char c; string)\n    {\n        distinct_chars.insert(toLower(c));\n\
    \    }\n    return distinct_chars.length;\n}\nunittest\n{\n    alias candidate\
    \ = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpv_7b07bw.d(9): Error: template instance `set!char` template `set`
    is not defined, did you mean get(K, V)(inout(V[K]) aa, K key, lazy inout(V) defaultValue)?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpv_7b07bw.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164566
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            count++;\n        }\n        else if(c >= 'A' && c <=\
    \ 'Z')\n        {\n            count++;\n        }\n    }\n    return count;\n\
    }\nunittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp8jtpqzgw.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e0d]

    ??:? void tmp8jtpqzgw.__unittest_L23_C1() [0x427b20]

    ??:? void tmp8jtpqzgw.__modtest() [0x427b8c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb33]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9c6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb59]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430008]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fae5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a99d]

    ??:? runModuleUnitTests [0x42b909]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42825c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164565
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    long[] char_count = new long[256];\n    foreach(c; string)\n    {\n\
    \        if(char_count[cast(int)c] == 0)\n        {\n            count++;\n  \
    \      }\n        char_count[cast(int)c]++;\n    }\n    return count;\n}\nunittest\n\
    {\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp8up93cpz.d(27): unittest failure

    ----------------

    ??:? _d_unittestp [0x42810d]

    ??:? void tmp8up93cpz.__unittest_L21_C1() [0x427e20]

    ??:? void tmp8up93cpz.__modtest() [0x427e8c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c10b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42af9e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430229]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x4306d8]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4301b5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af75]

    ??:? runModuleUnitTests [0x42bee1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4285d0]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164566
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    // Create\
    \ a set to store the distinct characters\n    auto distinct_chars = set!char();\n\
    \    // Iterate over the characters in the string\n    foreach (char c; string)\n\
    \    {\n        // Add the character to the set\n        distinct_chars.insert(c);\n\
    \    }\n    // Return the number of distinct characters\n    return distinct_chars.length;\n\
    }\nunittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp5wr0x_4m.d(10): Error: template instance `set!char` template `set`
    is not defined, did you mean get(K, V)(inout(V[K]) aa, K key, lazy inout(V) defaultValue)?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5wr0x_4m.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164566
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    return set(string.tolower).length;\n\
    }\nunittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpit5902nt.d(9): Error: undefined identifier `set`, did you mean
    template `get(K, V)(inout(V[K]) aa, K key, lazy inout(V) defaultValue)`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpit5902nt.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164566
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    auto result\
    \ = new int[256];\n    foreach(c; string)\n    {\n        result[to!int(c)]++;\n\
    \    }\n    return count(result, result[$-1]);\n}\nunittest\n{\n    alias candidate\
    \ = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmprjn9d6q9.d(12): Error: template instance `to!int` template `to`
    is not defined, did you mean No?

    /tmp/tmprjn9d6q9.d(14): Error: undefined identifier `count`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprjn9d6q9.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164566
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            count++;\n        }\n        else if(c >= 'A' && c <=\
    \ 'Z')\n        {\n            count++;\n        }\n    }\n    return count;\n\
    }\nunittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp8jtpqzgw.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e0d]

    ??:? void tmp8jtpqzgw.__unittest_L23_C1() [0x427b20]

    ??:? void tmp8jtpqzgw.__modtest() [0x427b8c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb33]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9c6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb59]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430008]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fae5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a99d]

    ??:? runModuleUnitTests [0x42b909]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42825c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164565
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string) \n    {\n        if(c.isLetter) \n       \
    \ {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n\
    {\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpmt5ken_1.d(12): Error: no property `isLetter` for type `char`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmt5ken_1.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164566
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    auto distinct_chars\
    \ = new HashSet!(char)();\n    foreach(char c; string)\n    {\n        distinct_chars.insert(c);\n\
    \    }\n    return distinct_chars.length;\n}\nunittest\n{\n    alias candidate\
    \ = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpyuoxq9lz.d(9): Error: template instance `HashSet!char` template
    `HashSet` is not defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyuoxq9lz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164565
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            count++;\n        }\n        else if(c >= 'A' && c <=\
    \ 'Z')\n        {\n            count++;\n        }\n    }\n    return count;\n\
    }\nunittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp8jtpqzgw.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e0d]

    ??:? void tmp8jtpqzgw.__unittest_L23_C1() [0x427b20]

    ??:? void tmp8jtpqzgw.__modtest() [0x427b8c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb33]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9c6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb59]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430008]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fae5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a99d]

    ??:? runModuleUnitTests [0x42b909]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42825c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164565
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string) \n    {\n        if(!c.isAlpha) \n       \
    \ {\n            continue;\n        }\n        if(c.isUpper) \n        {\n   \
    \         c = c.toLower;\n        }\n        if(!string.count(c)) \n        {\n\
    \            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n \
    \   alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\"\
    ) == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\"\
    ) == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"\
    Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp2s0vcsr6.d(12): Error: no property `isAlpha` for type `char`

    /tmp/tmp2s0vcsr6.d(16): Error: no property `isUpper` for type `char`

    /tmp/tmp2s0vcsr6.d(18): Error: no property `toLower` for type `char`

    /tmp/tmp2s0vcsr6.d(20): Error: no property `count` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2s0vcsr6.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164566
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    auto distinct_chars\
    \ = new int[256];\n    foreach(char c; string)\n    {\n        distinct_chars[tolower(c)]++;\n\
    \    }\n    long count = 0;\n    foreach(char c; string)\n    {\n        if(distinct_chars[tolower(c)]\
    \ > 0)\n        {\n            count++;\n            distinct_chars[tolower(c)]\
    \ = 0;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate\
    \ = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpgndnu3bs.d(12): Error: undefined identifier `tolower`

    /tmp/tmpgndnu3bs.d(17): Error: undefined identifier `tolower`

    /tmp/tmpgndnu3bs.d(20): Error: undefined identifier `tolower`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgndnu3bs.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164566
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string) \n    {\n        if(!c.isAlpha) continue;\n\
    \        if(c.isUpper) c = c.toLower;\n        if(!string.count(c)) count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_distinct_characters;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n\
    \    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\"\
    ) == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpewug7pgb.d(12): Error: no property `isAlpha` for type `char`

    /tmp/tmpewug7pgb.d(13): Error: no property `isUpper` for type `char`

    /tmp/tmpewug7pgb.d(13): Error: no property `toLower` for type `char`

    /tmp/tmpewug7pgb.d(14): Error: no property `count` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpewug7pgb.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164566
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            count++;\n        }\n        else if(c >= 'A' && c <=\
    \ 'Z')\n        {\n            count++;\n        }\n    }\n    return count;\n\
    }\nunittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp8jtpqzgw.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e0d]

    ??:? void tmp8jtpqzgw.__unittest_L23_C1() [0x427b20]

    ??:? void tmp8jtpqzgw.__modtest() [0x427b8c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb33]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9c6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb59]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430008]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fae5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a99d]

    ??:? runModuleUnitTests [0x42b909]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42825c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164565
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            count++;\n        }\n        else if(c >= 'A' && c <=\
    \ 'Z')\n        {\n            count++;\n        }\n    }\n    return count;\n\
    }\nunittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp8jtpqzgw.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e0d]

    ??:? void tmp8jtpqzgw.__unittest_L23_C1() [0x427b20]

    ??:? void tmp8jtpqzgw.__modtest() [0x427b8c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb33]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9c6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb59]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430008]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fae5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a99d]

    ??:? runModuleUnitTests [0x42b909]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42825c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164565
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            count++;\n        }\n        else if(c >= 'A' && c <=\
    \ 'Z')\n        {\n            count++;\n        }\n    }\n    return count;\n\
    }\nunittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp8jtpqzgw.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e0d]

    ??:? void tmp8jtpqzgw.__unittest_L23_C1() [0x427b20]

    ??:? void tmp8jtpqzgw.__modtest() [0x427b8c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb33]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9c6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb59]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430008]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fae5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a99d]

    ??:? runModuleUnitTests [0x42b909]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42825c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164565
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    auto char_set\
    \ = new HashSet!char();\n    foreach(ch; string)\n    {\n        char_set.insert(ch);\n\
    \    }\n    return char_set.length;\n}\nunittest\n{\n    alias candidate = count_distinct_characters;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n\
    \    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\"\
    ) == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpgush3bei.d(9): Error: template instance `HashSet!char` template
    `HashSet` is not defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgush3bei.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164566
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    auto distinct_chars\
    \ = new HashSet!(char)();\n    foreach(char c; string)\n    {\n        distinct_chars.insert(c);\n\
    \    }\n    return distinct_chars.length;\n}\nunittest\n{\n    alias candidate\
    \ = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpyuoxq9lz.d(9): Error: template instance `HashSet!char` template
    `HashSet` is not defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyuoxq9lz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164565
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            count++;\n        }\n        else if(c >= 'A' && c <=\
    \ 'Z')\n        {\n            count++;\n        }\n    }\n    return count;\n\
    }\nunittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp8jtpqzgw.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e0d]

    ??:? void tmp8jtpqzgw.__unittest_L23_C1() [0x427b20]

    ??:? void tmp8jtpqzgw.__modtest() [0x427b8c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb33]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9c6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb59]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430008]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fae5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a99d]

    ??:? runModuleUnitTests [0x42b909]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42825c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164565
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string) \n    {\n        if(c >= 'a' && c <= 'z')\
    \ \n        {\n            count++;\n        }\n        else if(c >= 'A' && c\
    \ <= 'Z') \n        {\n            count++;\n        }\n    }\n    return count;\n\
    }\nunittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpuk131ed0.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e0d]

    ??:? void tmpuk131ed0.__unittest_L23_C1() [0x427b20]

    ??:? void tmpuk131ed0.__modtest() [0x427b8c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb33]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9c6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb59]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430008]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fae5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a99d]

    ??:? runModuleUnitTests [0x42b909]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42825c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164566
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    // use a\
    \ hash table to count the number of distinct characters\n    auto hash_table =\
    \ new HashTable!(char, int);\n    foreach(char c; string)\n    {\n        hash_table[c]++;\n\
    \    }\n    return hash_table.length;\n}\nunittest\n{\n    alias candidate = count_distinct_characters;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n\
    \    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\"\
    ) == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp9r5jrzhh.d(10): Error: template instance `HashTable!(char, int)`
    template `HashTable` is not defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9r5jrzhh.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164566
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string) \n    {\n        if(c.isLetter) \n       \
    \ {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n\
    {\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpmt5ken_1.d(12): Error: no property `isLetter` for type `char`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmt5ken_1.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164566
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    auto distinct_characters\
    \ = new HashSet!(char)();\n    foreach(character; string)\n    {\n        distinct_characters.insert(character);\n\
    \    }\n    return distinct_characters.length;\n}\nunittest\n{\n    alias candidate\
    \ = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpgic61tc3.d(9): Error: template instance `HashSet!char` template
    `HashSet` is not defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgic61tc3.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164565
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long[] char_counts\
    \ = new long[256];\n    foreach(char c; string) \n    {\n        char_counts[cast(ubyte)c]++;\n\
    \    }\n    return count(char_counts, (long c) { return c > 0; });\n}\nunittest\n\
    {\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4tkwok94.d(14): Error: undefined identifier `count`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4tkwok94.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164566
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    return set(string.toLowerCase).length;\n\
    }\nunittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpb3d8tivd.d(9): Error: undefined identifier `set`, did you mean
    template `get(K, V)(inout(V[K]) aa, K key, lazy inout(V) defaultValue)`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpb3d8tivd.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164565
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    auto char_set\
    \ = new Set!char();\n    foreach(char c; string)\n    {\n        char_set.insert(c);\n\
    \    }\n    return char_set.length;\n}\nunittest\n{\n    alias candidate = count_distinct_characters;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n\
    \    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\"\
    ) == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpyf8s0p05.d(9): Error: template instance `Set!char` template `Set`
    is not defined, did you mean get(K, V)(inout(V[K]) aa, K key, lazy inout(V) defaultValue)?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyf8s0p05.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164566
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    auto chars\
    \ = string.toUpper().toHashSet();\n    return chars.length;\n}\nunittest\n{\n\
    \    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\"\
    ) == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\"\
    ) == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"\
    Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp3a5br7e8.d(9): Error: no property `toUpper` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3a5br7e8.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164566
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string)\n    {\n        if (c.isLetter)\n        {\n\
    \            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n \
    \   alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\"\
    ) == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\"\
    ) == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"\
    Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpt09qzcb7.d(12): Error: no property `isLetter` for type `char`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpt09qzcb7.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164566
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string)\n    {\n        if(c.isLetter)\n        {\n\
    \            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n \
    \   alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\"\
    ) == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\"\
    ) == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"\
    Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp_9no5t4d.d(12): Error: no property `isLetter` for type `char`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_9no5t4d.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164565

language: d
name: HumanEval_16_count_distinct_characters
results:
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    auto distinct_chars\
    \ = new int[256];\n    foreach(c; string)\n    {\n        distinct_chars[to!int(c)]++;\n\
    \    }\n    return count(distinct_chars, distinct_chars + 256, 1);\n}\nunittest\n\
    {\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphn6mgaqp.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    auto counter\
    \ = Counter!char();\n    foreach(c; string) \n    {\n        counter[c]++;\n \
    \   }\n    return counter.length;\n}\nunittest\n{\n    alias candidate = count_distinct_characters;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n\
    \    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\"\
    ) == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfmu3nums.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    auto distinct_characters\
    \ = new HashSet!(char)();\n    foreach(character; string)\n    {\n        distinct_characters.insert(character);\n\
    \    }\n    return distinct_characters.length;\n}\nunittest\n{\n    alias candidate\
    \ = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpr226qn9n.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            count++;\n        }\n        else if(c >= 'A' && c <=\
    \ 'Z')\n        {\n            count++;\n        }\n    }\n    return count;\n\
    }\nunittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkswqicur.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    auto result\
    \ = new ubyte[256];\n    foreach(c; string) \n    {\n        result[cast(ubyte)c]\
    \ = 1;\n    }\n    return result.count;\n}\nunittest\n{\n    alias candidate =\
    \ count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8e88mkt6.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    auto distinct_characters\
    \ = new HashSet!(char)();\n    foreach(character; string)\n    {\n        distinct_characters.insert(character);\n\
    \    }\n    return distinct_characters.length;\n}\nunittest\n{\n    alias candidate\
    \ = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpr226qn9n.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    auto distinct_characters\
    \ = new set!char;\n    foreach(character; string) \n    {\n        distinct_characters.insert(character);\n\
    \    }\n    return distinct_characters.length;\n}\nunittest\n{\n    alias candidate\
    \ = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbac8ppd4.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    auto result\
    \ = new int[256];\n    foreach(c; string) \n    {\n        result[cast(int)c]++;\n\
    \    }\n    return count(result, result[$-1]);\n}\nunittest\n{\n    alias candidate\
    \ = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpo_icvyjz.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    long[] char_count = new long[256];\n    foreach(char c; string)\n\
    \    {\n        if(char_count[c] == 0)\n        {\n            count++;\n    \
    \    }\n        char_count[c]++;\n    }\n    return count;\n}\nunittest\n{\n \
    \   alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\"\
    ) == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\"\
    ) == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"\
    Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8_mgcmco.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long[] char_counts\
    \ = new long[256];\n    foreach(c; string)\n    {\n        char_counts[to!int(c)]++;\n\
    \    }\n    return count(char_counts, (x) => x > 0);\n}\nunittest\n{\n    alias\
    \ candidate = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n\
    \    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\"\
    ) == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"\
    Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnl1jhfgc.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string) \n    {\n        if (c >= 'a' && c <= 'z')\
    \ \n        {\n            count++;\n        }\n        else if (c >= 'A' && c\
    \ <= 'Z') \n        {\n            count++;\n        }\n    }\n    return count;\n\
    }\nunittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5xdnnntv.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    long[] char_set = new long[256];\n    foreach(c; string) \n    {\n\
    \        if (char_set[c] == 0) \n        {\n            count++;\n           \
    \ char_set[c] = 1;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias\
    \ candidate = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n\
    \    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\"\
    ) == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"\
    Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_siz2o1j.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    return set(string.toLowerCase()).length;\n\
    }\nunittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwxn4biql.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    auto distinct_characters\
    \ = new HashSet!char();\n    foreach(character; string)\n    {\n        distinct_characters.insert(character);\n\
    \    }\n    return distinct_characters.length;\n}\nunittest\n{\n    alias candidate\
    \ = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyo718bgl.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    return set(string.toLowerCase()).length;\n\
    }\nunittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwxn4biql.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string)\n    {\n        if(c == ' ')\n           \
    \ continue;\n        if(c >= 'A' && c <= 'Z')\n            c = tolower(c);\n \
    \       if(!count)\n            count = 1;\n        else\n        {\n        \
    \    bool found = false;\n            foreach(char d; string)\n            {\n\
    \                if(d == ' ')\n                    continue;\n               \
    \ if(d >= 'A' && d <= 'Z')\n                    d = tolower(d);\n            \
    \    if(c == d)\n                {\n                    found = true;\n      \
    \              break;\n                }\n            }\n            if(!found)\n\
    \                count++;\n        }\n    }\n    return count;\n}\nunittest\n\
    {\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpllneanmu.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string)\n    {\n        if(c.isAlpha)\n        {\n\
    \            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n \
    \   alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\"\
    ) == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\"\
    ) == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"\
    Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8addtzup.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long[] char_counts\
    \ = new long[256];\n    foreach(char c; string)\n    {\n        char_counts[cast(ubyte)c]++;\n\
    \    }\n    return count(filter!(a => a > 0)(char_counts));\n}\nunittest\n{\n\
    \    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\"\
    ) == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\"\
    ) == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"\
    Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmppukka757.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    auto char_set\
    \ = set!char();\n    foreach(char c; string)\n    {\n        char_set.insert(c);\n\
    \    }\n    return char_set.length;\n}\nunittest\n{\n    alias candidate = count_distinct_characters;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n\
    \    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\"\
    ) == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpm0_x7ynb.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    return set(string.toLowerCase).length;\n\
    }\nunittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqz24zovr.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string) \n    {\n        if(c >= 'a' && c <= 'z')\
    \ \n        {\n            count++;\n        }\n        else if(c >= 'A' && c\
    \ <= 'Z') \n        {\n            count++;\n        }\n    }\n    return count;\n\
    }\n/*\n Given a string, find out how many distinct characters (regardless of case)\
    \ does it consist of\n            \n*/\nlong count_distinct_characters_2(string\
    \ string) \n{\n    long count = 0;\n    foreach(char c; string) \n    {\n    \
    \    if(c >= 'a' && c <= 'z') \n        {\n            count++;\n        }\n \
    \       else if(c >= 'A' && c <= 'Z') \n        {\n            count++;\n    \
    \    }\n    }\n    return count;\n}\n/*\n Given a string, find out how many distinct\
    \ characters (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters_3(string\
    \ string) \n{\n    long count = 0;\n    foreach(char c; string) \n    {\n    \
    \    if(c >= 'a' && c <= 'z') \n        {\n            count++;\n        }\n \
    \       else if(c >= 'A' && c <= 'Z') \n        {\n            count++;\n    \
    \    }\n    }\n    return count;\n}\n/*\n Given a string, find out how many distinct\
    \ characters (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters_4(string\
    \ string) \n{\n    long count = 0;\n    foreach(char c; string) \n    {\n    \
    \    if(c >= 'a' && c <= 'z') \n        {\n            count++;\n        }\n \
    \       else if(c >= 'A' && c <= 'Z') \n        {\n            count++;\n    \
    \    }\n    }\n    return count;\n}\n/*\n Given a string, find out how many distinct\
    \ characters (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters_5(\n\
    unittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpuzxe03gb.d(88): Error: basic type expected, not unittest\n/tmp/tmpuzxe03gb.d(88):
    Error: found \''unittest\'' when expecting \'')\''\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmpuzxe03gb.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    auto distinct_chars\
    \ = new HashSet!char;\n    foreach(char c; string)\n    {\n        distinct_chars.insert(c);\n\
    \    }\n    return distinct_chars.length;\n}\nunittest\n{\n    alias candidate\
    \ = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6xycsxj1.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    auto result\
    \ = new int[256];\n    foreach(c; string)\n    {\n        result[to!int(c)]++;\n\
    \    }\n    return count(result, (x) => x > 0);\n}\nunittest\n{\n    alias candidate\
    \ = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3uw37ybd.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string) \n    {\n        if(c.isLetter)\n        \
    \    count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate =\
    \ count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2z_seyl5.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string)\n    {\n        if(!c.isAlpha)\n         \
    \   continue;\n        if(c.isLower)\n            c = c.toUpper;\n        if(!string.count(c))\n\
    \            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate\
    \ = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmps_zte3j6.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    auto set\
    \ = new Set!(char)();\n    foreach(ch; string) \n    {\n        set.insert(ch);\n\
    \    }\n    return set.length;\n}\nunittest\n{\n    alias candidate = count_distinct_characters;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n\
    \    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\"\
    ) == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpi6idr9ho.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string)\n    {\n        if(c.isLetter)\n        {\n\
    \            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n \
    \   alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\"\
    ) == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\"\
    ) == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"\
    Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8d26w5yw.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            count++;\n        }\n        else if(c >= 'A' && c <=\
    \ 'Z')\n        {\n            count++;\n        }\n    }\n    return count;\n\
    }\nunittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkswqicur.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string) \n    {\n        if(c >= 'a' && c <= 'z')\
    \ \n        {\n            count++;\n        }\n        else if(c >= 'A' && c\
    \ <= 'Z') \n        {\n            count++;\n        }\n    }\n    return count;\n\
    }\nunittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplham77bq.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string)\n    {\n        if(c.isLetter)\n        {\n\
    \            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n \
    \   alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\"\
    ) == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\"\
    ) == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"\
    Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8d26w5yw.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long[] char_counts\
    \ = new long[256];\n    foreach(c; string) \n    {\n        char_counts[cast(ubyte)c]++;\n\
    \    }\n    return count(char_counts, (x) => x > 0);\n}\nunittest\n{\n    alias\
    \ candidate = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n\
    \    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\"\
    ) == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"\
    Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpl93k5tdv.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    return set(string.toLowerCase).length;\n\
    }\nunittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqz24zovr.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    auto distinct_characters\
    \ = new HashSet!char();\n    foreach(character; string)\n    {\n        distinct_characters.insert(character);\n\
    \    }\n    return distinct_characters.length;\n}\nunittest\n{\n    alias candidate\
    \ = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyo718bgl.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string)\n    {\n        if(c.isAlpha)\n        {\n\
    \            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n \
    \   alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\"\
    ) == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\"\
    ) == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"\
    Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8addtzup.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            count++;\n        }\n        else if(c >= 'A' && c <=\
    \ 'Z')\n        {\n            count++;\n        }\n    }\n    return count;\n\
    }\nunittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkswqicur.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    return set(string.toLowerCase).length;\n\
    }\nunittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqz24zovr.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    auto distinct_chars\
    \ = new int[256];\n    foreach(char c; string) \n    {\n        distinct_chars[toUpper(c)]++;\n\
    \    }\n    return count(distinct_chars, distinct_chars[$-1] != 0);\n}\nunittest\n\
    {\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp92u0ameq.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string)\n    {\n        count += !(c in string[0..$-1]);\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_distinct_characters;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n\
    \    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\"\
    ) == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpzf57pf3k.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string)\n    {\n        if(c.tolower() !in string.tolower())\n\
    \        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n\
    {\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmped87f8gj.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            count++;\n        }\n        else if(c >= 'A' && c <=\
    \ 'Z')\n        {\n            count++;\n        }\n    }\n    return count;\n\
    }\nunittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkswqicur.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string)\n    {\n        if(c.isLetter)\n        {\n\
    \            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n \
    \   alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\"\
    ) == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\"\
    ) == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"\
    Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8d26w5yw.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    auto result\
    \ = new HashSet!(char)();\n    foreach(char c; string) \n    {\n        result.insert(c);\n\
    \    }\n    return result.length;\n}\nunittest\n{\n    alias candidate = count_distinct_characters;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n\
    \    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\"\
    ) == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp08pyzktw.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    auto distinct_characters\
    \ = new HashSet!(char)();\n    foreach(character; string)\n    {\n        distinct_characters.insert(character);\n\
    \    }\n    return distinct_characters.length;\n}\nunittest\n{\n    alias candidate\
    \ = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpr226qn9n.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    long[] char_count = new long[256];\n    foreach(c; string)\n    {\n\
    \        if(char_count[c] == 0)\n        {\n            count++;\n        }\n\
    \        char_count[c]++;\n    }\n    return count;\n}\nunittest\n{\n    alias\
    \ candidate = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n\
    \    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\"\
    ) == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"\
    Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6nebz6e4.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    auto chars\
    \ = string.toUpper().array();\n    auto distinct_chars = new int[chars.length];\n\
    \    auto distinct_chars_count = 0;\n    foreach(char; chars) \n    {\n      \
    \  if(distinct_chars.countUntil(char) == -1) \n        {\n            distinct_chars[distinct_chars_count]\
    \ = char;\n            distinct_chars_count++;\n        }\n    }\n    return distinct_chars_count;\n\
    }\nunittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpzkwxm517.d(12): Error: no identifier for declarator char\n/tmp/tmpzkwxm517.d(14):
    Error: found \'')\'' when expecting \''.\'' following char\n/tmp/tmpzkwxm517.d(14):
    Error: found \''==\'' when expecting identifier following \''char.\''\n/tmp/tmpzkwxm517.d(15):
    Error: found \''{\'' when expecting \'')\''\n/tmp/tmpzkwxm517.d(16): Error: found
    \'';\'' when expecting \''.\'' following char\n/tmp/tmpzkwxm517.d(20): Error:
    Declaration expected, not \''return\''\n/tmp/tmpzkwxm517.d(21): Error: unrecognized
    declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpzkwxm517.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    auto result\
    \ = new int[256];\n    foreach(char c; string)\n    {\n        result[cast(int)c]++;\n\
    \    }\n    return count(result, result[$-1]);\n}\nunittest\n{\n    alias candidate\
    \ = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmppkq59wz8.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    return set(string.toLowerCase()).size;\n\
    }\nunittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptp8l2wai.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            count++;\n        }\n        else if(c >= 'A' && c <=\
    \ 'Z')\n        {\n            count++;\n        }\n    }\n    return count;\n\
    }\nunittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkswqicur.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long result\
    \ = 0;\n    foreach(char c; string)\n    {\n        if (c.isAlpha)\n        {\n\
    \            result += 1;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdgfvrt9k.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    return set(string.toLowerCase()).length;\n\
    }\nunittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwxn4biql.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string)\n    {\n        if(c.isLetter)\n        {\n\
    \            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n \
    \   alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\"\
    ) == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\"\
    ) == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"\
    Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8d26w5yw.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    auto distinct_chars = new bool[256];\n    foreach(char c; string)\n\
    \    {\n        if(!distinct_chars[cast(int)c])\n        {\n            distinct_chars[cast(int)c]\
    \ = true;\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n\
    {\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2azc766w.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            count++;\n        }\n        else if(c >= 'A' && c <=\
    \ 'Z')\n        {\n            count++;\n        }\n    }\n    return count;\n\
    }\nunittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkswqicur.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string)\n    {\n        if (c >= 'a' && c <= 'z')\n\
    \            count++;\n        else if (c >= 'A' && c <= 'Z')\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_distinct_characters;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n\
    \    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\"\
    ) == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp281eemgd.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string)\n    {\n        if (c >= 'a' && c <= 'z')\n\
    \            count++;\n        else if (c >= 'A' && c <= 'Z')\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_distinct_characters;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n\
    \    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\"\
    ) == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp281eemgd.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    auto distinct_chars\
    \ = new int[256];\n    foreach(char c; string)\n    {\n        distinct_chars[c]\
    \ = 1;\n    }\n    return std.algorithm.count(distinct_chars, distinct_chars +\
    \ 256, 1);\n}\nunittest\n{\n    alias candidate = count_distinct_characters;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n\
    \    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\"\
    ) == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpps4tnp3v.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    return string.toLower().toHashSet().length;\n\
    }\nunittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwr66i_zd.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long[] char_count\
    \ = new long[256];\n    foreach(c; string) \n    {\n        char_count[cast(int)c]++;\n\
    \    }\n    return count(char_count, (x) => x > 0);\n}\nunittest\n{\n    alias\
    \ candidate = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n\
    \    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\"\
    ) == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"\
    Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmps0zbhp0n.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    // Create\
    \ a set of characters\n    auto characters = set!char();\n    foreach (character;\
    \ string) \n    {\n        // Add each character to the set\n        characters.insert(character);\n\
    \    }\n    return characters.length;\n}\nunittest\n{\n    alias candidate = count_distinct_characters;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n\
    \    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\"\
    ) == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0o36o2g9.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    auto result\
    \ = new int[256];\n    foreach(c; string)\n    {\n        result[c]++;\n    }\n\
    \    return count(result, result.length, (x) => x != 0);\n}\nunittest\n{\n   \
    \ alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\"\
    ) == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"\
    Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp65ru70n_.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    auto distinct_chars\
    \ = new HashSet!(char)();\n    foreach(char c; string)\n    {\n        distinct_chars.insert(c);\n\
    \    }\n    return distinct_chars.length;\n}\nunittest\n{\n    alias candidate\
    \ = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnei3r8xq.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    auto distinct_characters\
    \ = new HashSet!(char)();\n    foreach(character; string)\n    {\n        distinct_characters.insert(character);\n\
    \    }\n    return distinct_characters.length;\n}\nunittest\n{\n    alias candidate\
    \ = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpr226qn9n.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string)\n    {\n        if(c.isLetter)\n        {\n\
    \            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n \
    \   alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\"\
    ) == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\"\
    ) == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"\
    Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8d26w5yw.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string)\n    {\n        if(!c.isAlpha)\n         \
    \   continue;\n        if(!c.isLower)\n            c = c.toLower;\n        if(!string.count(c))\n\
    \            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate\
    \ = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpexeiop37.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(c; string)\n    {\n        if(c >= 'a' && c <= 'z')\n    \
    \    {\n            count++;\n        }\n        else if(c >= 'A' && c <= 'Z')\n\
    \        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n\
    {\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7jy7etb9.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    return set(string.toLowerCase).length;\n\
    }\nunittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqz24zovr.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string) \n    {\n        if(c.isLetter) \n       \
    \ {\n            count++;\n        }\n    }\n    return count;\n}\n/*\n Given\
    \ a string, find out how many distinct characters (regardless of case) does it\
    \ consist of\n            \n*/\nlong count_distinct_characters_2(string string)\
    \ \n{\n    long count = 0;\n    foreach(char c; string) \n    {\n        if(c.isLetter)\
    \ \n        {\n            count++;\n        }\n    }\n    return count;\n}\n\
    /*\n Given a string, find out how many distinct characters (regardless of case)\
    \ does it consist of\n            \n*/\nlong count_distinct_characters_3(string\
    \ string) \n{\n    long count = 0;\n    foreach(char c; string) \n    {\n    \
    \    if(c.isLetter) \n        {\n            count++;\n        }\n    }\n    return\
    \ count;\n}\n/*\n Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n            \n*/\nlong count_distinct_characters_4(string\
    \ string) \n{\n    long count = 0;\n    foreach(char c; string) \n    {\n    \
    \    if(c.isLetter) \n        {\n            count++;\n        }\n    }\n    return\
    \ count;\n}\n/*\n Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n            \n*/\nlong count_distinct_characters_5(string\
    \ string) \n{\n    long count = 0;\n    foreach(char c; string) \n    {\n    \
    \    if(c.isLetter) \n        {\n            count++;\n        }\n    }\n    return\
    \ count;\n}\n/*\n Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n            \n*/\nlong count_distinct_characters_6(string\
    \ string) \n{\n    long count = 0;\n    foreach(char c; string) \n    {\n    \
    \    if(c.isLetter)\nunittest\n{\n    alias candidate = count_distinct_characters;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n\
    \    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\"\
    ) == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpuc5s97p5.d(93): Error: found \''unittest\'' instead of statement\n/tmp/tmpuc5s97p5.d(103):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpuc5s97p5.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string)\n    {\n        if(c.isLetter)\n        {\n\
    \            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n \
    \   alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\"\
    ) == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\"\
    ) == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"\
    Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8d26w5yw.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            count++;\n        }\n        else if(c >= 'A' && c <=\
    \ 'Z')\n        {\n            count++;\n        }\n    }\n    return count;\n\
    }\nunittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkswqicur.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    auto distinct_characters\
    \ = new HashSet!char();\n    foreach(character; string)\n    {\n        distinct_characters.insert(character);\n\
    \    }\n    return distinct_characters.length;\n}\nunittest\n{\n    alias candidate\
    \ = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyo718bgl.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long result\
    \ = 0;\n    foreach(char c; string) \n    {\n        if(c.tolower() in result)\
    \ \n        {\n            continue;\n        }\n        result ~= c.tolower();\n\
    \    }\n    return result.length;\n}\nunittest\n{\n    alias candidate = count_distinct_characters;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n\
    \    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\"\
    ) == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0u_c7i3y.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string)\n    {\n        if(c.tolower() in count)\n\
    \            continue;\n        count[c.tolower()] = 1;\n        count++;\n  \
    \  }\n    return count;\n}\nunittest\n{\n    alias candidate = count_distinct_characters;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n\
    \    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\"\
    ) == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpc_5lz85x.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            count++;\n        }\n        else if(c >= 'A' && c <=\
    \ 'Z')\n        {\n            count++;\n        }\n    }\n    return count;\n\
    }\nunittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkswqicur.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string)\n    {\n        if (c >= 'a' && c <= 'z')\n\
    \            count++;\n        else if (c >= 'A' && c <= 'Z')\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_distinct_characters;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n\
    \    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\"\
    ) == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp281eemgd.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    auto char_set\
    \ = new HashSet!(char)();\n    foreach(char c; string) \n    {\n        char_set.insert(c);\n\
    \    }\n    return char_set.length;\n}\nunittest\n{\n    alias candidate = count_distinct_characters;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n\
    \    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\"\
    ) == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpo9mrno6a.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    auto char_set\
    \ = new int[256];\n    foreach(c; string) \n    {\n        char_set[cast(int)tolower(c)]++;\n\
    \    }\n    return count(char_set, char_set + 256, 1);\n}\nunittest\n{\n    alias\
    \ candidate = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n\
    \    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\"\
    ) == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"\
    Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpe8hy2_vz.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    return set(string.toLowerCase()).length;\n\
    }\nunittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwxn4biql.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string)\n    {\n        if(c.isLetter)\n        {\n\
    \            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n \
    \   alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\"\
    ) == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\"\
    ) == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"\
    Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8d26w5yw.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    auto char_set\
    \ = set!char();\n    foreach(char c; string)\n    {\n        char_set.insert(c);\n\
    \    }\n    return char_set.length;\n}\nunittest\n{\n    alias candidate = count_distinct_characters;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n\
    \    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\"\
    ) == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpm0_x7ynb.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string) \n    {\n        if(c >= 'a' && c <= 'z')\
    \ \n        {\n            count++;\n        }\n        else if(c >= 'A' && c\
    \ <= 'Z') \n        {\n            count++;\n        }\n    }\n    return count;\n\
    }\nunittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplham77bq.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long result\
    \ = 0;\n    foreach(char c; string)\n    {\n        if(!result)\n        {\n \
    \           result = 1;\n            continue;\n        }\n        bool found\
    \ = false;\n        foreach(char c2; string[0..result])\n        {\n         \
    \   if(c == c2)\n            {\n                found = true;\n              \
    \  break;\n            }\n        }\n        if(!found)\n            result++;\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = count_distinct_characters;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n\
    \    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\"\
    ) == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6_nw7asv.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    auto result\
    \ = new int[256];\n    foreach(c; string) \n    {\n        result[c]++;\n    }\n\
    \    return result.count!(a => a > 0);\n}\nunittest\n{\n    alias candidate =\
    \ count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5qvxeog9.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string)\n    {\n        if(c.isLetter)\n        {\n\
    \            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n \
    \   alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\"\
    ) == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\"\
    ) == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"\
    Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8d26w5yw.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    auto char_set\
    \ = new set!(char)();\n    foreach(char c; string)\n    {\n        char_set.insert(c);\n\
    \    }\n    return char_set.length;\n}\nunittest\n{\n    alias candidate = count_distinct_characters;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n\
    \    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\"\
    ) == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpml6ilo6k.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            count++;\n        }\n        else if(c >= 'A' && c <=\
    \ 'Z')\n        {\n            count++;\n        }\n    }\n    return count;\n\
    }\nunittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkswqicur.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            count++;\n        }\n        else if(c >= 'A' && c <=\
    \ 'Z')\n        {\n            count++;\n        }\n    }\n    return count;\n\
    }\nunittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkswqicur.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            count++;\n        }\n        else if(c >= 'A' && c <=\
    \ 'Z')\n        {\n            count++;\n        }\n    }\n    return count;\n\
    }\nunittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkswqicur.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            if(!count)\n                count++;\n            else\n\
    \            {\n                bool found = false;\n                foreach(char\
    \ c2; string)\n                {\n                    if(c == c2)\n          \
    \          {\n                        found = true;\n                        break;\n\
    \                    }\n                }\n                if(!found)\n      \
    \              count++;\n            }\n        }\n        else if(c >= 'A' &&\
    \ c <= 'Z')\n        {\n            if(!count)\n                count++;\n   \
    \         else\n            {\n                bool found = false;\n         \
    \       foreach(char c2; string)\n                {\n                    if(c\
    \ == c2)\n                    {\n                        found = true;\n     \
    \                   break;\n                    }\n                }\n       \
    \         if(!found)\n                    count++;\n            }\n        }\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_distinct_characters;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n\
    \    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\"\
    ) == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp60wxqgf1.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    auto distinct_characters\
    \ = new HashSet!(char)();\n    foreach(character; string)\n    {\n        distinct_characters.insert(character);\n\
    \    }\n    return distinct_characters.length;\n}\nunittest\n{\n    alias candidate\
    \ = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpr226qn9n.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    auto distinct_characters\
    \ = new HashSet!(char)();\n    foreach(character; string)\n    {\n        distinct_characters.insert(character);\n\
    \    }\n    return distinct_characters.length;\n}\nunittest\n{\n    alias candidate\
    \ = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpr226qn9n.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(c; string)\n    {\n        if(!c.isLetter)\n            continue;\n\
    \        if(c.isUpper)\n            c = c.toLower;\n        if(!c.isLetter)\n\
    \            continue;\n        count++;\n    }\n    return count;\n}\nunittest\n\
    {\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpljflxfw6.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long distinct_characters\
    \ = 0;\n    foreach(char c; string)\n    {\n        if(c.isLetter)\n        {\n\
    \            distinct_characters++;\n        }\n    }\n    return distinct_characters;\n\
    }\nunittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwtlpbz5g.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            count++;\n        }\n        else if(c >= 'A' && c <=\
    \ 'Z')\n        {\n            count++;\n        }\n    }\n    return count;\n\
    }\nunittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkswqicur.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string)\n    {\n        if(c.isAlpha)\n        {\n\
    \            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n \
    \   alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\"\
    ) == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\"\
    ) == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"\
    Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8addtzup.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            count++;\n        }\n        else if(c >= 'A' && c <=\
    \ 'Z')\n        {\n            count++;\n        }\n    }\n    return count;\n\
    }\nunittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkswqicur.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string) \n    {\n        if (c >= 'a' && c <= 'z')\
    \ \n        {\n            count++;\n        }\n        else if (c >= 'A' && c\
    \ <= 'Z') \n        {\n            count++;\n        }\n    }\n    return count;\n\
    }\nunittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5xdnnntv.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    return set(string.toLowerCase).length;\n\
    }\nunittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqz24zovr.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    long[] char_count = new long[256];\n    foreach(char c; string)\n\
    \    {\n        char_count[cast(int)c]++;\n    }\n    foreach(long i; char_count)\n\
    \    {\n        if(i != 0)\n        {\n            count++;\n        }\n    }\n\
    \    return count;\n}\nunittest\n{\n    alias candidate = count_distinct_characters;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n\
    \    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\"\
    ) == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp47s27bd5.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    string lower_case_string\
    \ = toLower(string);\n    return set(lower_case_string).length;\n}\nunittest\n\
    {\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2cpha84k.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long result\
    \ = 0;\n    foreach(char c; string) \n    {\n        if (c >= 'a' && c <= 'z')\
    \ \n        {\n            result |= 1 << (c - 'a');\n        } \n        else\
    \ if (c >= 'A' && c <= 'Z') \n        {\n            result |= 1 << (c - 'A');\n\
    \        }\n    }\n    return result.popCount;\n}\nunittest\n{\n    alias candidate\
    \ = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprevu9asl.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    auto distinct_characters\
    \ = new HashSet!(char)();\n    foreach(character; string)\n    {\n        distinct_characters.insert(character);\n\
    \    }\n    return distinct_characters.length;\n}\nunittest\n{\n    alias candidate\
    \ = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpr226qn9n.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long[] char_count\
    \ = new long[256];\n    foreach(c; string)\n    {\n        char_count[cast(int)c]++;\n\
    \    }\n    return count(char_count, (x) => x > 0);\n}\nunittest\n{\n    alias\
    \ candidate = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n\
    \    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\"\
    ) == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"\
    Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpl1thbvjq.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    auto result\
    \ = new int[256];\n    foreach(char c; string)\n    {\n        result[cast(int)c]++;\n\
    \    }\n    return count(result, result[$-1] != 0);\n}\nunittest\n{\n    alias\
    \ candidate = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n\
    \    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\"\
    ) == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"\
    Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp598zfujl.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    auto result\
    \ = new int[256];\n    foreach(c; string) \n    {\n        result[cast(int)c]++;\n\
    \    }\n    return count(result, (x) => x != 0);\n}\nunittest\n{\n    alias candidate\
    \ = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpng48xljk.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long result\
    \ = 0;\n    foreach(char c; string)\n    {\n        if (c.tolower() in result)\n\
    \            continue;\n        result ~= c.tolower();\n    }\n    return result.length;\n\
    }\nunittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbhv5cq25.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string)\n    {\n        if(c.isLetter)\n        {\n\
    \            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n \
    \   alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\"\
    ) == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\"\
    ) == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"\
    Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8d26w5yw.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    return set(string.toLowerCase).length;\n\
    }\nunittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqz24zovr.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            count++;\n        }\n        else if(c >= 'A' && c <=\
    \ 'Z')\n        {\n            count++;\n        }\n    }\n    return count;\n\
    }\nunittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkswqicur.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    auto result\
    \ = new int[256];\n    foreach(c; string)\n    {\n        result[to!int(c)]++;\n\
    \    }\n    return count(result, (x) => x != 0);\n}\nunittest\n{\n    alias candidate\
    \ = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpof3pb0mx.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string)\n    {\n        count += 1;\n    }\n    return\
    \ count;\n}\nunittest\n{\n    alias candidate = count_distinct_characters;\n\n\
    \    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n\
    \    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\"\
    ) == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpehghknld.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string) \n    {\n        if(c >= 'a' && c <= 'z')\
    \ \n        {\n            count++;\n        }\n        else if(c >= 'A' && c\
    \ <= 'Z') \n        {\n            count++;\n        }\n    }\n    return count;\n\
    }\nunittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplham77bq.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    auto distinct_chars\
    \ = new string[];\n    foreach(char c; string)\n    {\n        if(!distinct_chars.canFind(c))\n\
    \            distinct_chars ~= c;\n    }\n    return distinct_chars.length;\n\
    }\nunittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp19509opv.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            count++;\n        }\n        else if(c >= 'A' && c <=\
    \ 'Z')\n        {\n            count++;\n        }\n    }\n    return count;\n\
    }\nunittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkswqicur.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    auto char_set\
    \ = new set!char;\n    foreach(c; string)\n    {\n        char_set.insert(c);\n\
    \    }\n    return char_set.length;\n}\nunittest\n{\n    alias candidate = count_distinct_characters;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n\
    \    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\"\
    ) == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpp0w6i67r.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    // count\
    \ the number of distinct characters in a string\n    // regardless of case\n \
    \   long count = 0;\n    foreach(char c; string)\n    {\n        if(c.isAlpha)\n\
    \        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n\
    {\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2gazvf9b.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    auto char_set\
    \ = new HashSet!(char)();\n    foreach(c; string)\n    {\n        char_set.insert(c);\n\
    \    }\n    return char_set.length;\n}\nunittest\n{\n    alias candidate = count_distinct_characters;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n\
    \    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\"\
    ) == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_8e2ij8k.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    auto distinct_characters\
    \ = new HashSet!char();\n    foreach(character; string)\n    {\n        distinct_characters.insert(character);\n\
    \    }\n    return distinct_characters.length;\n}\nunittest\n{\n    alias candidate\
    \ = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyo718bgl.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string) \n    {\n        if(c >= 'a' && c <= 'z')\
    \ \n        {\n            count++;\n        }\n        else if(c >= 'A' && c\
    \ <= 'Z') \n        {\n            count++;\n        }\n    }\n    return count;\n\
    }\nunittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplham77bq.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string)\n    {\n        if(c.isLetter)\n        {\n\
    \            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n \
    \   alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\"\
    ) == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\"\
    ) == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"\
    Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8d26w5yw.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    auto result\
    \ = new int[256];\n    foreach(c; string)\n    {\n        result[c] = 1;\n   \
    \ }\n    return sum(result);\n}\nunittest\n{\n    alias candidate = count_distinct_characters;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n\
    \    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\"\
    ) == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpuvpvt6kv.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string)\n    {\n        if (c >= 'a' && c <= 'z')\n\
    \            count++;\n        else if (c >= 'A' && c <= 'Z')\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_distinct_characters;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n\
    \    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\"\
    ) == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp281eemgd.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    auto distinct_characters\
    \ = new HashSet!(char)();\n    foreach(character; string) \n    {\n        distinct_characters.insert(character);\n\
    \    }\n    return distinct_characters.length;\n}\nunittest\n{\n    alias candidate\
    \ = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplaaa6j27.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            count++;\n        }\n        else if(c >= 'A' && c <=\
    \ 'Z')\n        {\n            count++;\n        }\n    }\n    return count;\n\
    }\nunittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkswqicur.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            count++;\n        }\n        else if(c >= 'A' && c <=\
    \ 'Z')\n        {\n            count++;\n        }\n    }\n    return count;\n\
    }\nunittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkswqicur.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            count++;\n        }\n        else if(c >= 'A' && c <=\
    \ 'Z')\n        {\n            count++;\n        }\n    }\n    return count;\n\
    }\nunittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkswqicur.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string)\n    {\n        if (c >= 'a' && c <= 'z')\n\
    \            count++;\n        else if (c >= 'A' && c <= 'Z')\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_distinct_characters;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n\
    \    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\"\
    ) == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp281eemgd.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    long[] char_count = new long[256];\n    foreach(c; string)\n    {\n\
    \        if (char_count[cast(int)c] == 0)\n        {\n            count++;\n \
    \       }\n        char_count[cast(int)c]++;\n    }\n    return count;\n}\nunittest\n\
    {\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpl53qkb5w.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string)\n    {\n        if(c.isLetter)\n        {\n\
    \            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n \
    \   alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\"\
    ) == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\"\
    ) == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"\
    Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8d26w5yw.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    auto distinct_characters\
    \ = new HashSet!(char)();\n    foreach(character; string)\n    {\n        distinct_characters.insert(character);\n\
    \    }\n    return distinct_characters.length;\n}\nunittest\n{\n    alias candidate\
    \ = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpr226qn9n.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    auto distinct_chars\
    \ = new int[256];\n    foreach(char c; string)\n    {\n        distinct_chars[cast(int)c]\
    \ = 1;\n    }\n    return std.algorithm.count(distinct_chars, distinct_chars +\
    \ 256, 1);\n}\nunittest\n{\n    alias candidate = count_distinct_characters;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n\
    \    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\"\
    ) == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpab2b8vaa.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    // Create\
    \ a set of characters\n    auto characters = set!char();\n    // Add each character\
    \ to the set\n    foreach (character; string)\n    {\n        characters.insert(character);\n\
    \    }\n    // Return the size of the set\n    return characters.size;\n}\nunittest\n\
    {\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8anokqwf.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string) \n    {\n        if(c >= 'a' && c <= 'z')\
    \ \n        {\n            count++;\n        }\n        else if(c >= 'A' && c\
    \ <= 'Z') \n        {\n            count++;\n        }\n    }\n    return count;\n\
    }\nunittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplham77bq.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    auto distinct_chars\
    \ = new HashSet!(char)();\n    foreach(char c; string) \n    {\n        distinct_chars.insert(c);\n\
    \    }\n    return distinct_chars.length;\n}\nunittest\n{\n    alias candidate\
    \ = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpggaj6kju.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            count++;\n        }\n        else if(c >= 'A' && c <=\
    \ 'Z')\n        {\n            count++;\n        }\n    }\n    return count;\n\
    }\nunittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkswqicur.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    auto set\
    \ = new Set!(char)();\n    foreach(char c; string)\n    {\n        set.insert(c);\n\
    \    }\n    return set.length;\n}\nunittest\n{\n    alias candidate = count_distinct_characters;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n\
    \    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\"\
    ) == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5ed1z_15.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    long[] char_count = new long[256];\n    foreach(char c; string) \n\
    \    {\n        if(char_count[cast(int)c] == 0) \n        {\n            count++;\n\
    \        }\n        char_count[cast(int)c]++;\n    }\n    return count;\n}\nunittest\n\
    {\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpph_t1qbc.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    auto distinct_characters\
    \ = new HashSet!(char)();\n    foreach(character; string) \n    {\n        distinct_characters.insert(character);\n\
    \    }\n    return distinct_characters.length;\n}\nunittest\n{\n    alias candidate\
    \ = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplaaa6j27.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long result\
    \ = 0;\n    foreach(char c; string)\n    {\n        if(c.tolower() in result)\n\
    \            continue;\n        result ~= c.tolower();\n    }\n    return result.length;\n\
    }\nunittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp46re8h_a.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            count++;\n        }\n        else if(c >= 'A' && c <=\
    \ 'Z')\n        {\n            count++;\n        }\n    }\n    return count;\n\
    }\nunittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkswqicur.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string) \n    {\n        if(c.isLetter)\n        \
    \    count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate =\
    \ count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2z_seyl5.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    long[] char_counts = new long[256];\n    foreach(c; string) \n   \
    \ {\n        if (char_counts[c] == 0) \n        {\n            count++;\n    \
    \    }\n        char_counts[c]++;\n    }\n    return count;\n}\nunittest\n{\n\
    \    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\"\
    ) == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\"\
    ) == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"\
    Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2hur9mua.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            count++;\n        }\n        else if(c >= 'A' && c <=\
    \ 'Z')\n        {\n            count++;\n        }\n    }\n    return count;\n\
    }\nunittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkswqicur.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    auto char_set\
    \ = new HashSet!(char)();\n    foreach(char c; string)\n    {\n        char_set.insert(c);\n\
    \    }\n    return char_set.length;\n}\nunittest\n{\n    alias candidate = count_distinct_characters;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n\
    \    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\"\
    ) == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpp655dsh_.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string)\n    {\n        if(c.isAlpha)\n        {\n\
    \            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n \
    \   alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\"\
    ) == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\"\
    ) == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"\
    Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8addtzup.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    auto distinct_characters\
    \ = new HashSet!char();\n    foreach(character; string)\n    {\n        distinct_characters.insert(character);\n\
    \    }\n    return distinct_characters.length;\n}\nunittest\n{\n    alias candidate\
    \ = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyo718bgl.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    long[] char_count = new long[256];\n    foreach(char c; string)\n\
    \    {\n        if(char_count[c] == 0)\n        {\n            count++;\n    \
    \    }\n        char_count[c]++;\n    }\n    return count;\n}\nunittest\n{\n \
    \   alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\"\
    ) == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\"\
    ) == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"\
    Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8_mgcmco.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string)\n    {\n        if(c.isLetter)\n        {\n\
    \            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n \
    \   alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\"\
    ) == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\"\
    ) == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"\
    Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8d26w5yw.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string) \n    {\n        if (c >= 'a' && c <= 'z')\
    \ \n        {\n            count++;\n        }\n        else if (c >= 'A' && c\
    \ <= 'Z') \n        {\n            count++;\n        }\n    }\n    return count;\n\
    }\nunittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5xdnnntv.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    auto result\
    \ = new int[256];\n    foreach(c; string)\n        result[tolower(c)] = 1;\n \
    \   return result.count!(x => x == 1);\n}\nunittest\n{\n    alias candidate =\
    \ count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpy45a1f8k.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    auto distinct_characters\
    \ = new std.set.HashSet!(char)();\n    foreach(character; string)\n    {\n   \
    \     distinct_characters.insert(character);\n    }\n    return distinct_characters.length;\n\
    }\nunittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk7t5p7ck.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            count++;\n        }\n        else if(c >= 'A' && c <=\
    \ 'Z')\n        {\n            count++;\n        }\n    }\n    return count;\n\
    }\nunittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkswqicur.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char ch; string) \n    {\n        if (ch.isAlpha) \n     \
    \   {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n\
    {\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6e4_jj7z.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    auto result\
    \ = new int[256];\n    foreach(c; string) \n    {\n        result[to!int(c)]++;\n\
    \    }\n    return count(result, result.length, (a) => a != 0);\n}\nunittest\n\
    {\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4usg7tes.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string)\n    {\n        if(c.tolower() in string.tolower())\n\
    \        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n\
    {\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2nn47dv7.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    // Create\
    \ a set of characters\n    auto set = new Set!(char)();\n    foreach(c; string)\n\
    \    {\n        set.insert(c);\n    }\n    return set.length;\n}\nunittest\n{\n\
    \    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\"\
    ) == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\"\
    ) == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"\
    Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2h6v7lj4.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string)\n    {\n        if(c.isAlpha)\n        {\n\
    \            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n \
    \   alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\"\
    ) == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\"\
    ) == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"\
    Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8addtzup.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string) \n    {\n        if(!count) \n        {\n\
    \            count++;\n        }\n        else \n        {\n            bool found\
    \ = false;\n            foreach(char d; string[0..$-1]) \n            {\n    \
    \            if(d == c) \n                {\n                    found = true;\n\
    \                    break;\n                }\n            }\n            if(!found)\
    \ \n            {\n                count++;\n            }\n        }\n    }\n\
    \    return count;\n}\nunittest\n{\n    alias candidate = count_distinct_characters;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n\
    \    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\"\
    ) == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpz83tphll.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    string lower_string\
    \ = toLower(string);\n    auto set = new Set!(char)();\n    foreach(char c; lower_string)\n\
    \    {\n        set.insert(c);\n    }\n    return set.length;\n}\nunittest\n{\n\
    \    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\"\
    ) == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\"\
    ) == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"\
    Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprogqdgvu.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            count++;\n        }\n        else if(c >= 'A' && c <=\
    \ 'Z')\n        {\n            count++;\n        }\n    }\n    return count;\n\
    }\nunittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkswqicur.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            count++;\n        }\n        else if(c >= 'A' && c <=\
    \ 'Z')\n        {\n            count++;\n        }\n    }\n    return count;\n\
    }\nunittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkswqicur.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    return set(string.toLowerCase).length;\n\
    }\nunittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqz24zovr.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string) \n    {\n        if(c >= 'a' && c <= 'z')\
    \ \n        {\n            count++;\n        }\n        else if(c >= 'A' && c\
    \ <= 'Z') \n        {\n            count++;\n        }\n    }\n    return count;\n\
    }\nunittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplham77bq.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    auto distinct_characters\
    \ = new int[256];\n    foreach(character; string) \n    {\n        distinct_characters[character]\
    \ = 1;\n    }\n    return std.algorithm.count!(a => a)(distinct_characters);\n\
    }\nunittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8plgfkpg.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    return set(string.toLowerCase()).length;\n\
    }\nunittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwxn4biql.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            count++;\n        }\n        else if(c >= 'A' && c <=\
    \ 'Z')\n        {\n            count++;\n        }\n    }\n    return count;\n\
    }\nunittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkswqicur.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            count++;\n        }\n        else if(c >= 'A' && c <=\
    \ 'Z')\n        {\n            count++;\n        }\n    }\n    return count;\n\
    }\nunittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkswqicur.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string)\n    {\n        if (c >= 'a' && c <= 'z')\n\
    \            count++;\n        else if (c >= 'A' && c <= 'Z')\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_distinct_characters;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n\
    \    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\"\
    ) == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp281eemgd.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    auto distinct_chars\
    \ = new int[256];\n    foreach(c; string)\n    {\n        distinct_chars[to!int(c)]\
    \ = 1;\n    }\n    return count(distinct_chars);\n}\nunittest\n{\n    alias candidate\
    \ = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsjikjqfk.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            count++;\n        }\n        else if(c >= 'A' && c <=\
    \ 'Z')\n        {\n            count++;\n        }\n    }\n    return count;\n\
    }\nunittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkswqicur.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            count++;\n        }\n        else if(c >= 'A' && c <=\
    \ 'Z')\n        {\n            count++;\n        }\n    }\n    return count;\n\
    }\nunittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkswqicur.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    auto distinct_chars\
    \ = new int[256];\n    foreach(char c; string)\n    {\n        distinct_chars[cast(int)c]++;\n\
    \    }\n    return count(distinct_chars, distinct_chars + 256, 1);\n}\nunittest\n\
    {\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2jmeg6jo.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    auto distinct_chars\
    \ = new set!char;\n    foreach(char c; string)\n    {\n        distinct_chars.insert(toLower(c));\n\
    \    }\n    return distinct_chars.length;\n}\nunittest\n{\n    alias candidate\
    \ = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk98av3hp.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            count++;\n        }\n        else if(c >= 'A' && c <=\
    \ 'Z')\n        {\n            count++;\n        }\n    }\n    return count;\n\
    }\nunittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkswqicur.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    long[] char_count = new long[256];\n    foreach(c; string)\n    {\n\
    \        if(char_count[cast(int)c] == 0)\n        {\n            count++;\n  \
    \      }\n        char_count[cast(int)c]++;\n    }\n    return count;\n}\nunittest\n\
    {\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1lr2rrlo.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    // Create\
    \ a set to store the distinct characters\n    auto distinct_chars = set!char();\n\
    \    // Iterate over the characters in the string\n    foreach (char c; string)\n\
    \    {\n        // Add the character to the set\n        distinct_chars.insert(c);\n\
    \    }\n    // Return the number of distinct characters\n    return distinct_chars.length;\n\
    }\nunittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpra55qx7z.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    return set(string.tolower).length;\n\
    }\nunittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpznmjn4ve.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    auto result\
    \ = new int[256];\n    foreach(c; string)\n    {\n        result[to!int(c)]++;\n\
    \    }\n    return count(result, result[$-1]);\n}\nunittest\n{\n    alias candidate\
    \ = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4drlnbj8.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            count++;\n        }\n        else if(c >= 'A' && c <=\
    \ 'Z')\n        {\n            count++;\n        }\n    }\n    return count;\n\
    }\nunittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkswqicur.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string) \n    {\n        if(c.isLetter) \n       \
    \ {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n\
    {\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1hsqd7u2.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    auto distinct_chars\
    \ = new HashSet!(char)();\n    foreach(char c; string)\n    {\n        distinct_chars.insert(c);\n\
    \    }\n    return distinct_chars.length;\n}\nunittest\n{\n    alias candidate\
    \ = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnei3r8xq.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            count++;\n        }\n        else if(c >= 'A' && c <=\
    \ 'Z')\n        {\n            count++;\n        }\n    }\n    return count;\n\
    }\nunittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkswqicur.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string) \n    {\n        if(!c.isAlpha) \n       \
    \ {\n            continue;\n        }\n        if(c.isUpper) \n        {\n   \
    \         c = c.toLower;\n        }\n        if(!string.count(c)) \n        {\n\
    \            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n \
    \   alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\"\
    ) == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\"\
    ) == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"\
    Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpteq55eir.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    auto distinct_chars\
    \ = new int[256];\n    foreach(char c; string)\n    {\n        distinct_chars[tolower(c)]++;\n\
    \    }\n    long count = 0;\n    foreach(char c; string)\n    {\n        if(distinct_chars[tolower(c)]\
    \ > 0)\n        {\n            count++;\n            distinct_chars[tolower(c)]\
    \ = 0;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate\
    \ = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplaxq_ngr.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string) \n    {\n        if(!c.isAlpha) continue;\n\
    \        if(c.isUpper) c = c.toLower;\n        if(!string.count(c)) count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_distinct_characters;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n\
    \    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\"\
    ) == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpysy0yegi.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            count++;\n        }\n        else if(c >= 'A' && c <=\
    \ 'Z')\n        {\n            count++;\n        }\n    }\n    return count;\n\
    }\nunittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkswqicur.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            count++;\n        }\n        else if(c >= 'A' && c <=\
    \ 'Z')\n        {\n            count++;\n        }\n    }\n    return count;\n\
    }\nunittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkswqicur.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            count++;\n        }\n        else if(c >= 'A' && c <=\
    \ 'Z')\n        {\n            count++;\n        }\n    }\n    return count;\n\
    }\nunittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkswqicur.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    auto char_set\
    \ = new HashSet!char();\n    foreach(ch; string)\n    {\n        char_set.insert(ch);\n\
    \    }\n    return char_set.length;\n}\nunittest\n{\n    alias candidate = count_distinct_characters;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n\
    \    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\"\
    ) == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxhk69iia.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    auto distinct_chars\
    \ = new HashSet!(char)();\n    foreach(char c; string)\n    {\n        distinct_chars.insert(c);\n\
    \    }\n    return distinct_chars.length;\n}\nunittest\n{\n    alias candidate\
    \ = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnei3r8xq.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            count++;\n        }\n        else if(c >= 'A' && c <=\
    \ 'Z')\n        {\n            count++;\n        }\n    }\n    return count;\n\
    }\nunittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkswqicur.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string) \n    {\n        if(c >= 'a' && c <= 'z')\
    \ \n        {\n            count++;\n        }\n        else if(c >= 'A' && c\
    \ <= 'Z') \n        {\n            count++;\n        }\n    }\n    return count;\n\
    }\nunittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplham77bq.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    // use a\
    \ hash table to count the number of distinct characters\n    auto hash_table =\
    \ new HashTable!(char, int);\n    foreach(char c; string)\n    {\n        hash_table[c]++;\n\
    \    }\n    return hash_table.length;\n}\nunittest\n{\n    alias candidate = count_distinct_characters;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n\
    \    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\"\
    ) == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpt19vcj9b.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string) \n    {\n        if(c.isLetter) \n       \
    \ {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n\
    {\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1hsqd7u2.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    auto distinct_characters\
    \ = new HashSet!(char)();\n    foreach(character; string)\n    {\n        distinct_characters.insert(character);\n\
    \    }\n    return distinct_characters.length;\n}\nunittest\n{\n    alias candidate\
    \ = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpr226qn9n.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long[] char_counts\
    \ = new long[256];\n    foreach(char c; string) \n    {\n        char_counts[cast(ubyte)c]++;\n\
    \    }\n    return count(char_counts, (long c) { return c > 0; });\n}\nunittest\n\
    {\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7cvzfyuf.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    return set(string.toLowerCase).length;\n\
    }\nunittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqz24zovr.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    auto char_set\
    \ = new Set!char();\n    foreach(char c; string)\n    {\n        char_set.insert(c);\n\
    \    }\n    return char_set.length;\n}\nunittest\n{\n    alias candidate = count_distinct_characters;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n\
    \    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\"\
    ) == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpphg7r4q9.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    auto chars\
    \ = string.toUpper().toHashSet();\n    return chars.length;\n}\nunittest\n{\n\
    \    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\"\
    ) == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\"\
    ) == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"\
    Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp93l1mevx.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string)\n    {\n        if (c.isLetter)\n        {\n\
    \            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n \
    \   alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\"\
    ) == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\"\
    ) == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"\
    Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpzze3otk6.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c; string)\n    {\n        if(c.isLetter)\n        {\n\
    \            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n \
    \   alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\"\
    ) == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\"\
    ) == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"\
    Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8d26w5yw.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660003992

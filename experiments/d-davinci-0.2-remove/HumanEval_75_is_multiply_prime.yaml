name: HumanEval_75_is_multiply_prime
language: d
prompt: "import std.typecons;\nimport std.math;\n/*\nWrite a function that returns\
  \ true if the given number is the multiplication of 3 prime numbers\n    and false\
  \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n        30\
  \ = 2 * 3 * 5\n    \n*/\nbool is_multiply_prime(long a) \n"
tests: "unittest\n{\n    alias candidate = is_multiply_prime;\n\n    assert(candidate(5L)\
  \ == false);\n    assert(candidate(30L) == true);\n    assert(candidate(8L) == true);\n\
  \    assert(candidate(10L) == false);\n    assert(candidate(125L) == true);\n  \
  \  assert(candidate(105L) == true);\n    assert(candidate(126L) == false);\n   \
  \ assert(candidate(729L) == false);\n    assert(candidate(891L) == false);\n   \
  \ assert(candidate(1001L) == true);\n}\nvoid main(){}"
completions: ["{\n    if (a <= 1) \n        return false;\n    if (a == 2) \n    \
    \    return true;\n    if (a % 2 == 0) \n        return false;\n    for (long\
    \ i = 3; i <= sqrt(a); i += 2) \n    {\n        if (a % i == 0) \n           \
    \ return false;\n    }\n    return true;\n}", "{\n    long b = a;\n    long c\
    \ = a;\n    long d = a;\n    long e = a;\n    long f = a;\n    long g = a;\n \
    \   long h = a;\n    long i = a;\n    long j = a;\n    long k = a;\n    long l\
    \ = a;\n    long m = a;\n    long n = a;\n    long o = a;\n    long p = a;\n \
    \   long q = a;\n    long r = a;\n    long s = a;\n    long t = a;\n    long u\
    \ = a;\n    long v = a;\n    long w = a;\n    long x = a;\n    long y = a;\n \
    \   long z = a;\n    long aa = a;\n    long ab = a;\n    long ac = a;\n    long\
    \ ad = a;\n    long ae = a;\n    long af = a;\n    long ag = a;\n    long ah =\
    \ a;\n    long ai = a;\n    long aj = a;\n    long ak = a;\n    long al = a;\n\
    \    long am = a;\n    long an = a;\n    long ao = a;\n    long ap = a;\n    long\
    \ aq = a;\n    long ar = a;\n    long as = a;\n    long at = a;\n    long au =\
    \ a;\n    long av = a;\n    long aw = a;\n    long ax = a;\n    long ay = a;\n\
    \    long az = a;\n    long ba = a;\n    long bb = a;\n    long bc = a;\n    long\
    \ bd = a;\n    long be = a;\n    long bf = a;\n    long bg = a;\n    long bh =\
    \ a;\n    long bi = a;\n    long bj = a;\n    long bk = a;\n    long bl = a;\n\
    \    long bm = a;\n    long bn = a;\n    long bo = a;\n    long bp = a;\n    long\
    \ bq = a;\n    long br = a;\n    long bs = a;\n   ", "{\n    long[] primes = [2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73,\
    \ 79, 83, 89, 97];\n    long[] factors = [];\n    foreach(prime; primes)\n   \
    \ {\n        if(a % prime == 0)\n        {\n            factors ~= prime;\n  \
    \          a /= prime;\n        }\n    }\n    return factors.length == 3;\n}",
  "{\n    int i = 2;\n    int count = 0;\n    while (i <= a) \n    {\n        if (a\
    \ % i == 0) \n        {\n            a /= i;\n            count++;\n        }\n\
    \        else \n        {\n            i++;\n        }\n    }\n    return count\
    \ == 3;\n}", "{\n    int i = 2;\n    int count = 0;\n    while (i <= a) \n   \
    \ {\n        if (a % i == 0) \n        {\n            a /= i;\n            count++;\n\
    \        }\n        else \n        {\n            i++;\n        }\n    }\n   \
    \ return count == 3;\n}", "{\n    bool is_prime(long n)\n    {\n        if (n\
    \ < 2) return false;\n        for (long i = 2; i <= sqrt(n); i++)\n          \
    \  if (n % i == 0) return false;\n        return true;\n    }\n    for (long i\
    \ = 2; i <= a / 2; i++)\n        if (is_prime(i) && a % i == 0)\n        {\n \
    \           long b = a / i;\n            if (is_prime(b))\n            {\n   \
    \             long c = b / i;\n                if (is_prime(c))\n            \
    \        return true;\n            }\n        }\n    return false;\n}", "{\n \
    \   long[] primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53,\
    \ 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    foreach(i; 0 .. primes.length)\n \
    \   {\n        if(a % primes[i] == 0)\n        {\n            a /= primes[i];\n\
    \            if(a == 1)\n            {\n                return true;\n       \
    \     }\n            i = 0;\n        }\n    }\n    return false;\n}", "{\n   \
    \ bool result = false;\n    long b = a;\n    long c = 0;\n    long d = 0;\n  \
    \  long e = 0;\n    long f = 0;\n    long g = 0;\n    long h = 0;\n    long i\
    \ = 0;\n    long j = 0;\n    long k = 0;\n    long l = 0;\n    long m = 0;\n \
    \   long n = 0;\n    long o = 0;\n    long p = 0;\n    long q = 0;\n    long r\
    \ = 0;\n    long s = 0;\n    long t = 0;\n    long u = 0;\n    long v = 0;\n \
    \   long w = 0;\n    long x = 0;\n    long y = 0;\n    long z = 0;\n    long aa\
    \ = 0;\n    long ab = 0;\n    long ac = 0;\n    long ad = 0;\n    long ae = 0;\n\
    \    long af = 0;\n    long ag = 0;\n    long ah = 0;\n    long ai = 0;\n    long\
    \ aj = 0;\n    long ak = 0;\n    long al = 0;\n    long am = 0;\n    long an =\
    \ 0;\n    long ao = 0;\n    long ap = 0;\n    long aq = 0;\n    long ar = 0;\n\
    \    long as = 0;\n    long at = 0;\n    long au = 0;\n    long av = 0;\n    long\
    \ aw = 0;\n    long ax = 0;\n    long ay = 0;\n    long az = 0;\n    long ba =\
    \ 0;\n    long bb = 0;\n    long bc = 0;\n    long bd = 0;\n    long be = 0;\n\
    \    long bf = 0;\n    long bg = 0;\n    long bh = 0;\n    long bi = 0;\n    long\
    \ bj = 0;\n    long bk = 0;\n    long bl = 0;\n    long bm = 0;\n    long bn =\
    \ 0;\n    long bo = 0;\n    long bp = 0;\n    long bq = 0;\n    long br = 0;\n\
    \    long", "{\n    long i = 2;\n    long j = 2;\n    long k = 2;\n    long x\
    \ = a;\n    long y = a;\n    long z = a;\n    bool is_prime = true;\n    bool\
    \ is_multiply = false;\n    while (i < 100)\n    {\n        while (j < 100)\n\
    \        {\n            while (k < 100)\n            {\n                if (i\
    \ * j * k == a)\n                {\n                    is_multiply = true;\n\
    \                    x = i;\n                    y = j;\n                    z\
    \ = k;\n                }\n                k++;\n            }\n            j++;\n\
    \            k = 2;\n        }\n        i++;\n        j = 2;\n    }\n    if (is_multiply)\n\
    \    {\n        if (is_prime_number(x) && is_prime_number(y) && is_prime_number(z))\n\
    \        {\n            return true;\n        }\n        else\n        {\n   \
    \         return false;\n        }\n    }\n    else\n    {\n        return false;\n\
    \    }\n}", "{\n    bool is_prime = true;\n    long i = 2;\n    long j = 2;\n\
    \    long k = 2;\n    long result = 0;\n    while (i <= a) \n    {\n        while\
    \ (j <= a) \n        {\n            while (k <= a) \n            {\n         \
    \       result = i * j * k;\n                if (result == a) \n             \
    \   {\n                    return true;\n                }\n                k++;\n\
    \            }\n            k = 2;\n            j++;\n        }\n        j = 2;\n\
    \        i++;\n    }\n    return false;\n}", "{\n    bool result = false;\n  \
    \  long[] primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53,\
    \ 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    foreach(long prime; primes)\n    {\n\
    \        if(a % prime == 0)\n        {\n            a /= prime;\n            if(a\
    \ == 1)\n            {\n                result = true;\n                break;\n\
    \            }\n        }\n    }\n    return result;\n}", "{\n    bool is_prime(long\
    \ n)\n    {\n        if (n < 2)\n            return false;\n        if (n == 2)\n\
    \            return true;\n        if (n % 2 == 0)\n            return false;\n\
    \        for (long i = 3; i <= sqrt(n); i += 2)\n        {\n            if (n\
    \ % i == 0)\n                return false;\n        }\n        return true;\n\
    \    }\n    if (a < 6)\n        return false;\n    for (long i = 2; i <= a / 3;\
    \ i++)\n    {\n        if (is_prime(i) && is_prime(a / i) && is_prime(a / (a /\
    \ i)))\n            return true;\n    }\n    return false;\n}", "{\n    bool is_prime(long\
    \ n)\n    {\n        if (n <= 1) return false;\n        if (n == 2) return true;\n\
    \        if (n % 2 == 0) return false;\n        for (long i = 3; i <= sqrt(n);\
    \ i += 2)\n        {\n            if (n % i == 0) return false;\n        }\n \
    \       return true;\n    }\n    if (a <= 1) return false;\n    if (a == 2) return\
    \ true;\n    if (a % 2 == 0) return false;\n    for (long i = 3; i <= sqrt(a);\
    \ i += 2)\n    {\n        if (a % i == 0)\n        {\n            if (is_prime(i)\
    \ && is_prime(a / i))\n            {\n                return true;\n         \
    \   }\n        }\n    }\n    return false;\n}", "{\n    bool is_prime(long a)\n\
    \    {\n        if (a == 2)\n            return true;\n        if (a % 2 == 0)\n\
    \            return false;\n        for (long i = 3; i <= sqrt(a); i += 2)\n \
    \       {\n            if (a % i == 0)\n                return false;\n      \
    \  }\n        return true;\n    }\n    if (a == 1)\n        return false;\n  \
    \  if (a == 2)\n        return true;\n    if (a % 2 == 0)\n        return false;\n\
    \    for (long i = 3; i <= sqrt(a); i += 2)\n    {\n        if (a % i == 0)\n\
    \        {\n            if (is_prime(i) && is_prime(a / i))\n                return\
    \ true;\n        }\n    }\n    return false;\n}", "{\n    int count = 0;\n   \
    \ for (int i = 2; i <= a; i++) \n    {\n        if (a % i == 0) \n        {\n\
    \            if (isPrime(i)) \n            {\n                count++;\n     \
    \           a /= i;\n                i--;\n            }\n        }\n    }\n \
    \   return count == 3;\n}", "{\n    int[] primes = [2, 3, 5, 7, 11, 13, 17, 19,\
    \ 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    foreach(i;\
    \ primes)\n    {\n        if(a % i == 0)\n        {\n            foreach(j; primes)\n\
    \            {\n                if(a % j == 0)\n                {\n          \
    \          foreach(k; primes)\n                    {\n                       \
    \ if(a % k == 0)\n                        {\n                            if(a\
    \ == i * j * k)\n                            {\n                             \
    \   return true;\n                            }\n                        }\n \
    \                   }\n                }\n            }\n        }\n    }\n  \
    \  return false;\n}", "{\n    bool result = false;\n    if (a < 100)\n    {\n\
    \        long[] primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43,\
    \ 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n        foreach (i; primes)\n\
    \        {\n            if (a % i == 0)\n            {\n                result\
    \ = true;\n                break;\n            }\n        }\n    }\n    return\
    \ result;\n}", "{\n    bool is_prime(long n)\n    {\n        if (n <= 1) return\
    \ false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n\
    \        for (long i = 3; i <= sqrt(n); i += 2)\n        {\n            if (n\
    \ % i == 0)\n                return false;\n        }\n        return true;\n\
    \    }\n    long i = 2;\n    while (i <= a)\n    {\n        if (is_prime(i) &&\
    \ a % i == 0)\n        {\n            a /= i;\n            if (a == 1)\n     \
    \           return true;\n        }\n        else\n            i++;\n    }\n \
    \   return false;\n}", "{\n    bool is_prime(long n)\n    {\n        if (n <=\
    \ 1)\n            return false;\n        else if (n <= 3)\n            return\
    \ true;\n        else if (n % 2 == 0 || n % 3 == 0)\n            return false;\n\
    \        long i = 5;\n        while (i * i <= n)\n        {\n            if (n\
    \ % i == 0 || n % (i + 2) == 0)\n                return false;\n            i\
    \ += 6;\n        }\n        return true;\n    }\n    if (a <= 1)\n        return\
    \ false;\n    else if (a <= 3)\n        return true;\n    else if (a % 2 == 0\
    \ || a % 3 == 0)\n        return false;\n    long i = 5;\n    while (i * i <=\
    \ a)\n    {\n        if (a % i == 0 || a % (i + 2) == 0)\n            return false;\n\
    \        i += 6;\n    }\n    return true;\n}", "{\n    bool result = false;\n\
    \    long b = a;\n    long c = 0;\n    long d = 0;\n    long e = 0;\n    long\
    \ f = 0;\n    long g = 0;\n    long h = 0;\n    long i = 0;\n    long j = 0;\n\
    \    long k = 0;\n    long l = 0;\n    long m = 0;\n    long n = 0;\n    long\
    \ o = 0;\n    long p = 0;\n    long q = 0;\n    long r = 0;\n    long s = 0;\n\
    \    long t = 0;\n    long u = 0;\n    long v = 0;\n    long w = 0;\n    long\
    \ x = 0;\n    long y = 0;\n    long z = 0;\n    long aa = 0;\n    long ab = 0;\n\
    \    long ac = 0;\n    long ad = 0;\n    long ae = 0;\n    long af = 0;\n    long\
    \ ag = 0;\n    long ah = 0;\n    long ai = 0;\n    long aj = 0;\n    long ak =\
    \ 0;\n    long al = 0;\n    long am = 0;\n    long an = 0;\n    long ao = 0;\n\
    \    long ap = 0;\n    long aq = 0;\n    long ar = 0;\n    long as = 0;\n    long\
    \ at = 0;\n    long au = 0;\n    long av = 0;\n    long aw = 0;\n    long ax =\
    \ 0;\n    long ay = 0;\n    long az = 0;\n    long ba = 0;\n    long bb = 0;\n\
    \    long bc = 0;\n    long bd = 0;\n    long be = 0;\n    long bf = 0;\n    long\
    \ bg = 0;\n    long bh = 0;\n    long bi = 0;\n    long bj = 0;\n    long bk =\
    \ 0;\n    long bl = 0;\n    long bm = 0;\n    long bn = 0;\n    long bo = 0;\n\
    \    long bp = 0;\n    long bq = 0;\n    long br = 0;\n    long", "{\n    int[]\
    \ primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97];\n    int i = 0;\n    int j = 0;\n    int k = 0;\n\
    \    for (i = 0; i < primes.length; i++) \n    {\n        for (j = 0; j < primes.length;\
    \ j++) \n        {\n            for (k = 0; k < primes.length; k++) \n       \
    \     {\n                if (primes[i] * primes[j] * primes[k] == a) \n      \
    \          {\n                    return true;\n                }\n          \
    \  }\n        }\n    }\n    return false;\n}", "{\n    long[] primes = [2, 3,\
    \ 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79,\
    \ 83, 89, 97];\n    foreach(i; 0 .. primes.length)\n    {\n        if(a % primes[i]\
    \ == 0)\n        {\n            a /= primes[i];\n            if(a == 1)\n    \
    \        {\n                return true;\n            }\n            else\n  \
    \          {\n                i = 0;\n            }\n        }\n    }\n    return\
    \ false;\n}", "{\n    if (a < 6)\n        return false;\n    if (a % 2 == 0)\n\
    \        return is_multiply_prime(a / 2);\n    if (a % 3 == 0)\n        return\
    \ is_multiply_prime(a / 3);\n    if (a % 5 == 0)\n        return is_multiply_prime(a\
    \ / 5);\n    return true;\n}", "{\n    long[] primes = [2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n \
    \   long[] factors = [];\n    foreach(i; primes)\n    {\n        if(a % i == 0)\n\
    \        {\n            factors ~= i;\n            a /= i;\n        }\n    }\n\
    \    return factors.length == 3;\n}", "{\n    if (a < 6) \n        return false;\n\
    \    if (a % 2 == 0) \n        return is_multiply_prime(a / 2);\n    if (a % 3\
    \ == 0) \n        return is_multiply_prime(a / 3);\n    if (a % 5 == 0) \n   \
    \     return is_multiply_prime(a / 5);\n    return true;\n}", "{\n    bool is_multiply_prime\
    \ = false;\n    long[] prime_numbers = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31,\
    \ 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    foreach(i; prime_numbers)\n\
    \    {\n        if(a % i == 0)\n        {\n            is_multiply_prime = true;\n\
    \        }\n    }\n    return is_multiply_prime;\n}", "{\n    bool result = false;\n\
    \    int i = 2;\n    int count = 0;\n    while (i <= a)\n    {\n        if (a\
    \ % i == 0)\n        {\n            if (isPrime(i))\n            {\n         \
    \       count++;\n                a /= i;\n            }\n        }\n        i++;\n\
    \    }\n    if (count == 3)\n        result = true;\n    return result;\n}", "{\n\
    \    bool is_prime(long n)\n    {\n        if (n < 2) return false;\n        if\
    \ (n == 2) return true;\n        if (n % 2 == 0) return false;\n        for (long\
    \ i = 3; i <= sqrt(n); i += 2)\n        {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    long i = 2;\n    while (i\
    \ < a)\n    {\n        if (is_prime(i) && a % i == 0)\n        {\n           \
    \ a /= i;\n            if (is_prime(a)) return true;\n        }\n        else\n\
    \        {\n            i++;\n        }\n    }\n    return false;\n}", "{\n  \
    \  bool is_prime(long n)\n    {\n        if (n < 2) return false;\n        if\
    \ (n == 2) return true;\n        if (n % 2 == 0) return false;\n        for (long\
    \ i = 3; i <= sqrt(n); i += 2)\n        {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    if (a < 6) return false;\n\
    \    if (a % 2 == 0) return is_multiply_prime(a / 2);\n    if (a % 3 == 0) return\
    \ is_multiply_prime(a / 3);\n    for (long i = 5; i <= sqrt(a); i += 6)\n    {\n\
    \        if (a % i == 0) return is_multiply_prime(a / i);\n        if (a % (i\
    \ + 2) == 0) return is_multiply_prime(a / (i + 2));\n    }\n    return true;\n\
    }", "{\n    bool is_prime(long n)\n    {\n        if (n < 2) return false;\n \
    \       if (n == 2) return true;\n        if (n % 2 == 0) return false;\n    \
    \    foreach (i; 2 .. n)\n        {\n            if (n % i == 0) return false;\n\
    \        }\n        return true;\n    }\n    bool is_multiply_prime(long a)\n\
    \    {\n        foreach (i; 2 .. a)\n        {\n            if (is_prime(i) &&\
    \ a % i == 0)\n            {\n                foreach (j; 2 .. a)\n          \
    \      {\n                    if (is_prime(j) && a % j == 0 && i != j)\n     \
    \               {\n                        foreach (k; 2 .. a)\n             \
    \           {\n                            if (is_prime(k) && a % k == 0 && i\
    \ != k && j != k)\n                            {\n                           \
    \     return true;\n                            }\n                        }\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ false;\n    }\n}", "{\n    bool is_multiply_prime = false;\n    if (a == 1)\n\
    \        return is_multiply_prime;\n    if (a == 2)\n        return true;\n  \
    \  if (a == 3)\n        return true;\n    if (a == 5)\n        return true;\n\
    \    if (a == 7)\n        return true;\n    if (a == 11)\n        return true;\n\
    \    if (a == 13)\n        return true;\n    if (a == 17)\n        return true;\n\
    \    if (a == 19)\n        return true;\n    if (a == 23)\n        return true;\n\
    \    if (a == 29)\n        return true;\n    if (a == 31)\n        return true;\n\
    \    if (a == 37)\n        return true;\n    if (a == 41)\n        return true;\n\
    \    if (a == 43)\n        return true;\n    if (a == 47)\n        return true;\n\
    \    if (a == 53)\n        return true;\n    if (a == 59)\n        return true;\n\
    \    if (a == 61)\n        return true;\n    if (a == 67)\n        return true;\n\
    \    if (a == 71)\n        return true;\n    if (a == 73)\n        return true;\n\
    \    if (a == 79)\n        return true;\n    if (a == 83)\n        return true;\n\
    \    if (a == 89)\n        return true;\n    if (a == 97)\n        return true;\n\
    \    if (a == 6)\n        return is_multiply_prime;\n    if (a == 10)\n      \
    \  return is_multiply_prime;\n    if (a == 14)\n        return is_multiply_prime;\n\
    \    if (a == 15)\n        return is_multiply_prime;\n    if (a == 21)\n     \
    \   return is_multiply_prime;\n    if (a == 22)\n        return is_multiply_prime;\n\
    \    if (a == 33)\n        return is_multiply_prime;\n    if (a == 34)\n     \
    \   return is_multiply_prime;\n", "{\n    if (a < 6)\n        return false;\n\
    \    if (a % 2 == 0)\n        return is_multiply_prime(a / 2);\n    if (a % 3\
    \ == 0)\n        return is_multiply_prime(a / 3);\n    if (a % 5 == 0)\n     \
    \   return is_multiply_prime(a / 5);\n    if (a % 7 == 0)\n        return is_multiply_prime(a\
    \ / 7);\n    if (a % 11 == 0)\n        return is_multiply_prime(a / 11);\n   \
    \ if (a % 13 == 0)\n        return is_multiply_prime(a / 13);\n    if (a % 17\
    \ == 0)\n        return is_multiply_prime(a / 17);\n    if (a % 19 == 0)\n   \
    \     return is_multiply_prime(a / 19);\n    if (a % 23 == 0)\n        return\
    \ is_multiply_prime(a / 23);\n    if (a % 29 == 0)\n        return is_multiply_prime(a\
    \ / 29);\n    if (a % 31 == 0)\n        return is_multiply_prime(a / 31);\n  \
    \  if (a % 37 == 0)\n        return is_multiply_prime(a / 37);\n    if (a % 41\
    \ == 0)\n        return is_multiply_prime(a / 41);\n    if (a % 43 == 0)\n   \
    \     return is_multiply_prime(a / 43);\n    if (a % 47 == 0)\n        return\
    \ is_multiply_prime(a / 47);\n    if (a % 53 == 0)\n        return is_multiply_prime(a\
    \ / 53);\n    if (a % 59 == 0)\n        return is_multiply_prime(a / 59);\n  \
    \  if (a % 61 == 0)\n        return is_multiply_prime(a / 61);\n    if (a % 67\
    \ == 0)\n        return is_multiply_prime(a / 67);\n    if (a % 71 == 0)\n   \
    \     return is_multiply_prime(a", "{\n    // Write your code here\n    bool isPrime\
    \ = true;\n    int count = 0;\n    for(int i = 2; i <= a; i++)\n    {\n      \
    \  isPrime = true;\n        for(int j = 2; j <= i/2; j++)\n        {\n       \
    \     if(i % j == 0)\n            {\n                isPrime = false;\n      \
    \          break;\n            }\n        }\n        if(isPrime)\n        {\n\
    \            if(a % i == 0)\n            {\n                count++;\n       \
    \         a = a / i;\n            }\n        }\n        if(count == 3)\n     \
    \   {\n            return true;\n        }\n    }\n    return false;\n}", "{\n\
    \    bool is_prime = true;\n    for (int i = 2; i <= a / 2; i++)\n    {\n    \
    \    if (a % i == 0)\n        {\n            is_prime = false;\n            break;\n\
    \        }\n    }\n    return is_prime;\n}", "{\n    long[] primes = [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97];\n    foreach(i; 0 .. primes.length)\n    {\n        foreach(j; i ..\
    \ primes.length)\n        {\n            foreach(k; j .. primes.length)\n    \
    \        {\n                if(primes[i] * primes[j] * primes[k] == a)\n     \
    \           {\n                    return true;\n                }\n         \
    \   }\n        }\n    }\n    return false;\n}", "{\n    bool is_prime(long n)\n\
    \    {\n        if (n <= 1) return false;\n        if (n == 2) return true;\n\
    \        if (n % 2 == 0) return false;\n        for (long i = 3; i <= sqrt(n);\
    \ i += 2)\n        {\n            if (n % i == 0)\n                return false;\n\
    \        }\n        return true;\n    }\n    if (a <= 1) return false;\n    if\
    \ (a == 2) return true;\n    if (a % 2 == 0) return false;\n    for (long i =\
    \ 3; i <= sqrt(a); i += 2)\n    {\n        if (a % i == 0)\n        {\n      \
    \      if (is_prime(i) && is_prime(a / i))\n                return true;\n   \
    \     }\n    }\n    return false;\n}", "{\n    if (a == 1) return false;\n   \
    \ if (a == 2) return true;\n    if (a == 3) return true;\n    if (a % 2 == 0)\
    \ return false;\n    if (a % 3 == 0) return false;\n    if (a % 5 == 0) return\
    \ false;\n    if (a % 7 == 0) return false;\n    if (a % 11 == 0) return false;\n\
    \    if (a % 13 == 0) return false;\n    if (a % 17 == 0) return false;\n    if\
    \ (a % 19 == 0) return false;\n    if (a % 23 == 0) return false;\n    if (a %\
    \ 29 == 0) return false;\n    if (a % 31 == 0) return false;\n    if (a % 37 ==\
    \ 0) return false;\n    if (a % 41 == 0) return false;\n    if (a % 43 == 0) return\
    \ false;\n    if (a % 47 == 0) return false;\n    if (a % 53 == 0) return false;\n\
    \    if (a % 59 == 0) return false;\n    if (a % 61 == 0) return false;\n    if\
    \ (a % 67 == 0) return false;\n    if (a % 71 == 0) return false;\n    if (a %\
    \ 73 == 0) return false;\n    if (a % 79 == 0) return false;\n    if (a % 83 ==\
    \ 0) return false;\n    if (a % 89 == 0) return false;\n    if (a % 97 == 0) return\
    \ false;\n    return true;\n}", "{\n    long[] primes = [2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n \
    \   long[] factors = [];\n    foreach(i; primes)\n    {\n        if(a % i == 0)\n\
    \        {\n            factors ~= i;\n            a /= i;\n        }\n    }\n\
    \    if(factors.length == 3)\n    {\n        return true;\n    }\n    return false;\n\
    }", "{\n    bool result = false;\n    long b = a;\n    long c = 0;\n    long d\
    \ = 0;\n    long e = 0;\n    if(a % 2 == 0)\n    {\n        b = a / 2;\n     \
    \   if(b % 2 == 0)\n        {\n            c = b / 2;\n            if(c % 2 ==\
    \ 0)\n            {\n                d = c / 2;\n                if(d % 2 == 0)\n\
    \                {\n                    e = d / 2;\n                    if(e %\
    \ 2 == 0)\n                    {\n                        result = false;\n  \
    \                  }\n                    else\n                    {\n      \
    \                  result = true;\n                    }\n                }\n\
    \                else\n                {\n                    result = true;\n\
    \                }\n            }\n            else\n            {\n         \
    \       result = true;\n            }\n        }\n        else\n        {\n  \
    \          result = true;\n        }\n    }\n    else\n    {\n        result =\
    \ false;\n    }\n    return result;\n}", "{\n    long i = 2;\n    long count =\
    \ 0;\n    while (a != 1) \n    {\n        if (a % i == 0) \n        {\n      \
    \      a /= i;\n            count++;\n        }\n        else \n        {\n  \
    \          if (count == 1)\n                return false;\n            else \n\
    \            {\n                i++;\n                count = 0;\n           \
    \ }\n        }\n    }\n    return true;\n}", "{\n    bool is_prime(long n) {\n\
    \        if (n <= 1) return false;\n        if (n == 2) return true;\n       \
    \ if (n % 2 == 0) return false;\n        for (long i = 3; i <= sqrt(n); i += 2)\
    \ {\n            if (n % i == 0) return false;\n        }\n        return true;\n\
    \    }\n    if (a <= 1) return false;\n    if (a == 2) return true;\n    if (a\
    \ % 2 == 0) return false;\n    for (long i = 3; i <= sqrt(a); i += 2) {\n    \
    \    if (a % i == 0) {\n            if (is_prime(i) && is_prime(a / i)) return\
    \ true;\n        }\n    }\n    return false;\n}", "{\n    long i = 2;\n    long\
    \ j = 0;\n    long k = 0;\n    long l = 0;\n    long m = 0;\n    long n = 0;\n\
    \    long o = 0;\n    long p = 0;\n    long q = 0;\n    long r = 0;\n    long\
    \ s = 0;\n    long t = 0;\n    long u = 0;\n    long v = 0;\n    long w = 0;\n\
    \    long x = 0;\n    long y = 0;\n    long z = 0;\n    long aa = 0;\n    long\
    \ ab = 0;\n    long ac = 0;\n    long ad = 0;\n    long ae = 0;\n    long af =\
    \ 0;\n    long ag = 0;\n    long ah = 0;\n    long ai = 0;\n    long aj = 0;\n\
    \    long ak = 0;\n    long al = 0;\n    long am = 0;\n    long an = 0;\n    long\
    \ ao = 0;\n    long ap = 0;\n    long aq = 0;\n    long ar = 0;\n    long as =\
    \ 0;\n    long at = 0;\n    long au = 0;\n    long av = 0;\n    long aw = 0;\n\
    \    long ax = 0;\n    long ay = 0;\n    long az = 0;\n    long ba = 0;\n    long\
    \ bb = 0;\n    long bc = 0;\n    long bd = 0;\n    long be = 0;\n    long bf =\
    \ 0;\n    long bg = 0;\n    long bh = 0;\n    long bi = 0;\n    long bj = 0;\n\
    \    long bk = 0;\n    long bl = 0;\n    long bm = 0;\n    long bn = 0;\n    long\
    \ bo = 0;\n    long bp = 0;\n    long bq = 0;\n    long br = 0;\n    long bs =\
    \ 0;\n    long bt = 0;\n    long bu = 0;\n    long bv = 0;\n    long bw = 0;\n\
    \    long bx = 0;\n    long by = 0;\n    long bz", "{\n    bool is_prime(long\
    \ n)\n    {\n        if (n < 2)\n            return false;\n        else if (n\
    \ == 2)\n            return true;\n        else if (n % 2 == 0)\n            return\
    \ false;\n        else\n        {\n            long i = 3;\n            while\
    \ (i <= sqrt(n))\n            {\n                if (n % i == 0)\n           \
    \         return false;\n                i += 2;\n            }\n            return\
    \ true;\n        }\n    }\n    if (a < 6)\n        return false;\n    else\n \
    \   {\n        long i = 2;\n        while (i <= sqrt(a))\n        {\n        \
    \    if (is_prime(i) && a % i == 0)\n            {\n                long j = i;\n\
    \                while (j <= sqrt(a))\n                {\n                   \
    \ if (is_prime(j) && a % j == 0)\n                    {\n                    \
    \    long k = j;\n                        while (k <= sqrt(a))\n             \
    \           {\n                            if (is_prime(k) && a % k == 0)\n  \
    \                          {\n                                if (i * j * k ==\
    \ a)\n                                    return true;\n                     \
    \       }\n                            k++;\n                        }\n     \
    \               }\n                    j++;\n                }\n            }\n\
    \            i++;\n        }\n        return false;\n    }\n}", "{\n    bool result\
    \ = false;\n    long[] prime_numbers = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31,\
    \ 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    foreach(long prime;\
    \ prime_numbers)\n    {\n        if(a % prime == 0)\n        {\n            result\
    \ = true;\n            break;\n        }\n    }\n    return result;\n}", "{\n\
    \    // TODO: implement\n    return false;\n}", "{\n    long i = 2;\n    long\
    \ j = a;\n    int count = 0;\n    while (i <= j) \n    {\n        if (a % i ==\
    \ 0) \n        {\n            a /= i;\n            j = a;\n            count++;\n\
    \        } \n        else \n        {\n            i++;\n        }\n    }\n  \
    \  return count == 3;\n}", "{\n    if (a <= 1)\n        return false;\n    if\
    \ (a == 2)\n        return true;\n    if (a % 2 == 0)\n        return false;\n\
    \    for (long i = 3; i <= sqrt(a); i += 2)\n    {\n        if (a % i == 0)\n\
    \            return false;\n    }\n    return true;\n}", "{\n    bool result =\
    \ false;\n    long i = 2;\n    long j = 2;\n    long k = 2;\n    while (i < a)\n\
    \    {\n        while (j < a)\n        {\n            while (k < a)\n        \
    \    {\n                if (i * j * k == a)\n                {\n             \
    \       result = true;\n                    break;\n                }\n      \
    \          k++;\n            }\n            j++;\n        }\n        i++;\n  \
    \  }\n    return result;\n}", "{\n    bool result = false;\n    if (a < 100)\n\
    \    {\n        long[] primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41,\
    \ 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n        foreach (long p1;\
    \ primes)\n        {\n            foreach (long p2; primes)\n            {\n \
    \               foreach (long p3; primes)\n                {\n               \
    \     if (p1 * p2 * p3 == a)\n                    {\n                        result\
    \ = true;\n                        break;\n                    }\n           \
    \     }\n            }\n        }\n    }\n    return result;\n}", "{\n    int\
    \ i = 2;\n    int count = 0;\n    while (a != 1) \n    {\n        if (a % i ==\
    \ 0) \n        {\n            a /= i;\n            count++;\n        }\n     \
    \   else \n        {\n            i++;\n        }\n    }\n    return count ==\
    \ 3;\n}", "{\n    long i = 2;\n    long j = 0;\n    long k = 0;\n    long l =\
    \ 0;\n    long m = 0;\n    long n = 0;\n    long o = 0;\n    long p = 0;\n   \
    \ long q = 0;\n    long r = 0;\n    long s = 0;\n    long t = 0;\n    long u =\
    \ 0;\n    long v = 0;\n    long w = 0;\n    long x = 0;\n    long y = 0;\n   \
    \ long z = 0;\n    long aa = 0;\n    long ab = 0;\n    long ac = 0;\n    long\
    \ ad = 0;\n    long ae = 0;\n    long af = 0;\n    long ag = 0;\n    long ah =\
    \ 0;\n    long ai = 0;\n    long aj = 0;\n    long ak = 0;\n    long al = 0;\n\
    \    long am = 0;\n    long an = 0;\n    long ao = 0;\n    long ap = 0;\n    long\
    \ aq = 0;\n    long ar = 0;\n    long as = 0;\n    long at = 0;\n    long au =\
    \ 0;\n    long av = 0;\n    long aw = 0;\n    long ax = 0;\n    long ay = 0;\n\
    \    long az = 0;\n    long ba = 0;\n    long bb = 0;\n    long bc = 0;\n    long\
    \ bd = 0;\n    long be = 0;\n    long bf = 0;\n    long bg = 0;\n    long bh =\
    \ 0;\n    long bi = 0;\n    long bj = 0;\n    long bk = 0;\n    long bl = 0;\n\
    \    long bm = 0;\n    long bn = 0;\n    long bo = 0;\n    long bp = 0;\n    long\
    \ bq = 0;\n    long br = 0;\n    long bs = 0;\n    long bt = 0;\n    long bu =\
    \ 0;\n    long bv = 0;\n    long bw = 0;\n    long bx = 0;\n    long by = 0;\n\
    \    long bz", "{\n    int cnt = 0;\n    for (int i = 2; i <= a; i++) \n    {\n\
    \        if (a % i == 0) \n        {\n            cnt++;\n            a /= i;\n\
    \            i--;\n        }\n    }\n    return cnt == 3;\n}", "{\n    int i =\
    \ 2;\n    int count = 0;\n    while (i <= a) \n    {\n        if (a % i == 0)\
    \ \n        {\n            a /= i;\n            count++;\n        } \n       \
    \ else \n        {\n            i++;\n        }\n    }\n    return count == 3;\n\
    }", "{\n    if (a < 6)\n        return false;\n    if (a % 2 == 0)\n        return\
    \ is_multiply_prime(a / 2);\n    if (a % 3 == 0)\n        return is_multiply_prime(a\
    \ / 3);\n    if (a % 5 == 0)\n        return is_multiply_prime(a / 5);\n    if\
    \ (a % 7 == 0)\n        return is_multiply_prime(a / 7);\n    if (a % 11 == 0)\n\
    \        return is_multiply_prime(a / 11);\n    if (a % 13 == 0)\n        return\
    \ is_multiply_prime(a / 13);\n    if (a % 17 == 0)\n        return is_multiply_prime(a\
    \ / 17);\n    if (a % 19 == 0)\n        return is_multiply_prime(a / 19);\n  \
    \  if (a % 23 == 0)\n        return is_multiply_prime(a / 23);\n    if (a % 29\
    \ == 0)\n        return is_multiply_prime(a / 29);\n    if (a % 31 == 0)\n   \
    \     return is_multiply_prime(a / 31);\n    if (a % 37 == 0)\n        return\
    \ is_multiply_prime(a / 37);\n    if (a % 41 == 0)\n        return is_multiply_prime(a\
    \ / 41);\n    if (a % 43 == 0)\n        return is_multiply_prime(a / 43);\n  \
    \  if (a % 47 == 0)\n        return is_multiply_prime(a / 47);\n    if (a % 53\
    \ == 0)\n        return is_multiply_prime(a / 53);\n    if (a % 59 == 0)\n   \
    \     return is_multiply_prime(a / 59);\n    if (a % 61 == 0)\n        return\
    \ is_multiply_prime(a / 61);\n    if (a % 67 == 0)\n        return is_multiply_prime(a\
    \ / 67);\n    if (a % 71 == 0)\n        return is_multiply_prime(a", "{\n    long\
    \ i = 2;\n    long j = 0;\n    long k = 0;\n    long l = 0;\n    long m = 0;\n\
    \    long n = 0;\n    long o = 0;\n    long p = 0;\n    long q = 0;\n    long\
    \ r = 0;\n    long s = 0;\n    long t = 0;\n    long u = 0;\n    long v = 0;\n\
    \    long w = 0;\n    long x = 0;\n    long y = 0;\n    long z = 0;\n    long\
    \ aa = 0;\n    long ab = 0;\n    long ac = 0;\n    long ad = 0;\n    long ae =\
    \ 0;\n    long af = 0;\n    long ag = 0;\n    long ah = 0;\n    long ai = 0;\n\
    \    long aj = 0;\n    long ak = 0;\n    long al = 0;\n    long am = 0;\n    long\
    \ an = 0;\n    long ao = 0;\n    long ap = 0;\n    long aq = 0;\n    long ar =\
    \ 0;\n    long as = 0;\n    long at = 0;\n    long au = 0;\n    long av = 0;\n\
    \    long aw = 0;\n    long ax = 0;\n    long ay = 0;\n    long az = 0;\n    long\
    \ ba = 0;\n    long bb = 0;\n    long bc = 0;\n    long bd = 0;\n    long be =\
    \ 0;\n    long bf = 0;\n    long bg = 0;\n    long bh = 0;\n    long bi = 0;\n\
    \    long bj = 0;\n    long bk = 0;\n    long bl = 0;\n    long bm = 0;\n    long\
    \ bn = 0;\n    long bo = 0;\n    long bp = 0;\n    long bq = 0;\n    long br =\
    \ 0;\n    long bs = 0;\n    long bt = 0;\n    long bu = 0;\n    long bv = 0;\n\
    \    long bw = 0;\n    long bx = 0;\n    long by = 0;\n    long bz", "{\n    bool\
    \ is_prime(long n) \n    {\n        if (n < 2) \n            return false;\n \
    \       for (long i = 2; i <= sqrt(n); i++) \n        {\n            if (n % i\
    \ == 0) \n                return false;\n        }\n        return true;\n   \
    \ }\n    if (a < 6) \n        return false;\n    for (long i = 2; i <= a / 3;\
    \ i++) \n    {\n        if (is_prime(i) && is_prime(a / i) && is_prime(a / (a\
    \ / i))) \n            return true;\n    }\n    return false;\n}", "{\n    if\
    \ (a < 6)\n        return false;\n    if (a % 2 == 0)\n        return is_multiply_prime(a\
    \ / 2);\n    if (a % 3 == 0)\n        return is_multiply_prime(a / 3);\n    if\
    \ (a % 5 == 0)\n        return is_multiply_prime(a / 5);\n    return a == 1;\n\
    }", "{\n    long i = 2;\n    long j = 0;\n    long k = 0;\n    long l = 0;\n \
    \   long m = 0;\n    long n = 0;\n    long o = 0;\n    long p = 0;\n    long q\
    \ = 0;\n    long r = 0;\n    long s = 0;\n    long t = 0;\n    long u = 0;\n \
    \   long v = 0;\n    long w = 0;\n    long x = 0;\n    long y = 0;\n    long z\
    \ = 0;\n    long aa = 0;\n    long ab = 0;\n    long ac = 0;\n    long ad = 0;\n\
    \    long ae = 0;\n    long af = 0;\n    long ag = 0;\n    long ah = 0;\n    long\
    \ ai = 0;\n    long aj = 0;\n    long ak = 0;\n    long al = 0;\n    long am =\
    \ 0;\n    long an = 0;\n    long ao = 0;\n    long ap = 0;\n    long aq = 0;\n\
    \    long ar = 0;\n    long as = 0;\n    long at = 0;\n    long au = 0;\n    long\
    \ av = 0;\n    long aw = 0;\n    long ax = 0;\n    long ay = 0;\n    long az =\
    \ 0;\n    long ba = 0;\n    long bb = 0;\n    long bc = 0;\n    long bd = 0;\n\
    \    long be = 0;\n    long bf = 0;\n    long bg = 0;\n    long bh = 0;\n    long\
    \ bi = 0;\n    long bj = 0;\n    long bk = 0;\n    long bl = 0;\n    long bm =\
    \ 0;\n    long bn = 0;\n    long bo = 0;\n    long bp = 0;\n    long bq = 0;\n\
    \    long br = 0;\n    long bs = 0;\n    long bt = 0;\n    long bu = 0;\n    long\
    \ bv = 0;\n    long bw = 0;\n    long bx = 0;\n    long by = 0;\n    long bz",
  "{\n    long i = 2;\n    long count = 0;\n    long result = 1;\n    while (i <=\
    \ a)\n    {\n        if (a % i == 0)\n        {\n            if (isPrime(i))\n\
    \            {\n                result *= i;\n                count++;\n     \
    \       }\n        }\n        i++;\n    }\n    return result == a && count ==\
    \ 3;\n}", "{\n    int i = 2;\n    int count = 0;\n    while (a != 1) \n    {\n\
    \        if (a % i == 0) \n        {\n            a /= i;\n            count++;\n\
    \        }\n        else \n        {\n            i++;\n        }\n    }\n   \
    \ return count == 3;\n}", "{\n    if (a < 6)\n        return false;\n    if (a\
    \ % 2 == 0)\n        return is_multiply_prime(a / 2);\n    if (a % 3 == 0)\n \
    \       return is_multiply_prime(a / 3);\n    if (a % 5 == 0)\n        return\
    \ is_multiply_prime(a / 5);\n    return true;\n}", "{\n    bool result = false;\n\
    \    long i = 2;\n    long j = 2;\n    long k = 2;\n    long m = 2;\n    long\
    \ n = 2;\n    long o = 2;\n    long p = 2;\n    long q = 2;\n    long r = 2;\n\
    \    long s = 2;\n    long t = 2;\n    long u = 2;\n    long v = 2;\n    long\
    \ w = 2;\n    long x = 2;\n    long y = 2;\n    long z = 2;\n    long aa = 2;\n\
    \    long bb = 2;\n    long cc = 2;\n    long dd = 2;\n    long ee = 2;\n    long\
    \ ff = 2;\n    long gg = 2;\n    long hh = 2;\n    long ii = 2;\n    long jj =\
    \ 2;\n    long kk = 2;\n    long ll = 2;\n    long mm = 2;\n    long nn = 2;\n\
    \    long oo = 2;\n    long pp = 2;\n    long qq = 2;\n    long rr = 2;\n    long\
    \ ss = 2;\n    long tt = 2;\n    long uu = 2;\n    long vv = 2;\n    long ww =\
    \ 2;\n    long xx = 2;\n    long yy = 2;\n    long zz = 2;\n    long aaa = 2;\n\
    \    long bbb = 2;\n    long ccc = 2;\n    long ddd = 2;\n    long eee = 2;\n\
    \    long fff = 2;\n    long ggg = 2;\n    long hhh = 2;\n    long iii = 2;\n\
    \    long jjj = 2;\n    long kkk = 2;\n    long lll = 2;\n    long mmm = 2;\n\
    \    long nnn = 2;\n    long ooo = 2;\n    long ppp = 2;\n    long qqq = 2;\n\
    \    long rrr = 2;\n    long sss = 2;\n    long ttt = 2;\n    long uuu = 2;\n\
    \    long vvv = 2;\n    long www = 2;\n    long", "{\n    bool is_prime(long a)\
    \ \n    {\n        if (a < 2) return false;\n        if (a == 2) return true;\n\
    \        if (a % 2 == 0) return false;\n        for (long i = 3; i <= a / 2; i\
    \ += 2) \n        {\n            if (a % i == 0) return false;\n        }\n  \
    \      return true;\n    }\n    if (a < 6) return false;\n    if (a == 6) return\
    \ true;\n    if (a % 2 == 0) return is_multiply_prime(a / 2);\n    if (a % 3 ==\
    \ 0) return is_multiply_prime(a / 3);\n    for (long i = 5; i <= a / 2; i += 2)\
    \ \n    {\n        if (is_prime(i) && a % i == 0) return is_multiply_prime(a /\
    \ i);\n    }\n    return false;\n}\n/*\nWrite a function that returns true if\
    \ the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n\
    \    Knowing that (a) is less then 100. \n    Example:\n        30 = 2 * 3 * 5\n\
    \    \n*/", "{\n    long i = 2;\n    long j = 2;\n    long k = 2;\n    long temp\
    \ = a;\n    while (i < a)\n    {\n        if (temp % i == 0)\n        {\n    \
    \        temp = temp / i;\n            j = i;\n            break;\n        }\n\
    \        i++;\n    }\n    while (j < a)\n    {\n        if (temp % j == 0)\n \
    \       {\n            temp = temp / j;\n            k = j;\n            break;\n\
    \        }\n        j++;\n    }\n    if (temp == k)\n    {\n        return true;\n\
    \    }\n    return false;\n}", "{\n    bool is_prime(long n)\n    {\n        if\
    \ (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 ==\
    \ 0) return false;\n        for (long i = 3; i <= sqrt(n); i += 2)\n        {\n\
    \            if (n % i == 0) return false;\n        }\n        return true;\n\
    \    }\n    for (long i = 2; i <= a / 3; i++)\n    {\n        if (is_prime(i)\
    \ && is_prime(a / i))\n        {\n            return true;\n        }\n    }\n\
    \    return false;\n}", "{\n    if (a < 6)\n        return false;\n    if (a %\
    \ 2 == 0)\n        return is_multiply_prime(a / 2);\n    if (a % 3 == 0)\n   \
    \     return is_multiply_prime(a / 3);\n    if (a % 5 == 0)\n        return is_multiply_prime(a\
    \ / 5);\n    return isPrime(a);\n}", "{\n    long i = 2;\n    long j = 0;\n  \
    \  long k = 0;\n    long l = 0;\n    long m = 0;\n    long n = 0;\n    long o\
    \ = 0;\n    long p = 0;\n    long q = 0;\n    long r = 0;\n    long s = 0;\n \
    \   long t = 0;\n    long u = 0;\n    long v = 0;\n    long w = 0;\n    long x\
    \ = 0;\n    long y = 0;\n    long z = 0;\n    long aa = 0;\n    long ab = 0;\n\
    \    long ac = 0;\n    long ad = 0;\n    long ae = 0;\n    long af = 0;\n    long\
    \ ag = 0;\n    long ah = 0;\n    long ai = 0;\n    long aj = 0;\n    long ak =\
    \ 0;\n    long al = 0;\n    long am = 0;\n    long an = 0;\n    long ao = 0;\n\
    \    long ap = 0;\n    long aq = 0;\n    long ar = 0;\n    long as = 0;\n    long\
    \ at = 0;\n    long au = 0;\n    long av = 0;\n    long aw = 0;\n    long ax =\
    \ 0;\n    long ay = 0;\n    long az = 0;\n    long ba = 0;\n    long bb = 0;\n\
    \    long bc = 0;\n    long bd = 0;\n    long be = 0;\n    long bf = 0;\n    long\
    \ bg = 0;\n    long bh = 0;\n    long bi = 0;\n    long bj = 0;\n    long bk =\
    \ 0;\n    long bl = 0;\n    long bm = 0;\n    long bn = 0;\n    long bo = 0;\n\
    \    long bp = 0;\n    long bq = 0;\n    long br = 0;\n    long bs = 0;\n    long\
    \ bt = 0;\n    long bu = 0;\n    long bv = 0;\n    long bw = 0;\n    long bx =\
    \ 0;\n    long by = 0;\n    long bz", "{\n    if (a < 6) return false;\n    if\
    \ (a % 2 == 0) return is_multiply_prime(a / 2);\n    if (a % 3 == 0) return is_multiply_prime(a\
    \ / 3);\n    if (a % 5 == 0) return is_multiply_prime(a / 5);\n    return true;\n\
    }", "{\n    bool is_prime(long n) \n    {\n        if (n <= 1) return false;\n\
    \        for (long i = 2; i <= sqrt(n); i++) \n        {\n            if (n %\
    \ i == 0) return false;\n        }\n        return true;\n    }\n    for (long\
    \ i = 2; i <= a / 2; i++) \n    {\n        if (is_prime(i) && is_prime(a / i))\
    \ \n        {\n            if (is_prime(a / (i * (a / i)))) return true;\n   \
    \     }\n    }\n    return false;\n}", "{\n    bool result = false;\n    long\
    \ num = a;\n    long i = 2;\n    long count = 0;\n    while (num != 1)\n    {\n\
    \        if (num % i == 0)\n        {\n            num /= i;\n            count++;\n\
    \        }\n        else\n        {\n            i++;\n        }\n    }\n    if\
    \ (count == 3)\n    {\n        result = true;\n    }\n    return result;\n}",
  "{\n    bool is_prime(long n)\n    {\n        if (n <= 1)\n            return false;\n\
    \        if (n <= 3)\n            return true;\n        if (n % 2 == 0 || n %\
    \ 3 == 0)\n            return false;\n        for (long i = 5; i * i <= n; i =\
    \ i + 6)\n            if (n % i == 0 || n % (i + 2) == 0)\n                return\
    \ false;\n        return true;\n    }\n    if (a <= 1)\n        return false;\n\
    \    if (a <= 3)\n        return true;\n    if (a % 2 == 0 || a % 3 == 0)\n  \
    \      return false;\n    for (long i = 5; i * i <= a; i = i + 6)\n        if\
    \ (a % i == 0 || a % (i + 2) == 0)\n            return false;\n    return true;\n\
    }", "{\n    long i = 2;\n    long j = 2;\n    long k = 2;\n    long n = a;\n \
    \   while (i < n)\n    {\n        if (n % i == 0)\n        {\n            n =\
    \ n / i;\n            j = i;\n            while (j < n)\n            {\n     \
    \           if (n % j == 0)\n                {\n                    n = n / j;\n\
    \                    k = j;\n                    while (k < n)\n             \
    \       {\n                        if (n % k == 0)\n                        {\n\
    \                            return false;\n                        }\n      \
    \                  k++;\n                    }\n                }\n          \
    \      j++;\n            }\n        }\n        i++;\n    }\n    return true;\n\
    }", "{\n    bool is_multiply_prime = false;\n    long[] prime_numbers = [2, 3,\
    \ 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79,\
    \ 83, 89, 97];\n    foreach(i; prime_numbers)\n    {\n        if(a % i == 0)\n\
    \        {\n            is_multiply_prime = true;\n        }\n    }\n    return\
    \ is_multiply_prime;\n}", "{\n    long i = 2;\n    long count = 0;\n    long num\
    \ = a;\n    while (num != 1) \n    {\n        if (num % i == 0) \n        {\n\
    \            num /= i;\n            count++;\n        }\n        else \n     \
    \   {\n            i++;\n        }\n    }\n    return count == 3;\n}", "{\n  \
    \  if (a < 6) return false;\n    long[] primes = [2, 3, 5, 7, 11, 13, 17, 19,\
    \ 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    foreach\
    \ (i; 0 .. primes.length) {\n        if (a % primes[i] == 0) {\n            a\
    \ /= primes[i];\n            if (a == 1) return true;\n            if (a % primes[i]\
    \ == 0) return false;\n            i = -1;\n        }\n    }\n    return false;\n\
    }", "{\n    if (a < 6)\n        return false;\n    if (a % 2 == 0)\n        return\
    \ is_multiply_prime(a / 2);\n    if (a % 3 == 0)\n        return is_multiply_prime(a\
    \ / 3);\n    if (a % 5 == 0)\n        return is_multiply_prime(a / 5);\n    return\
    \ true;\n}", "{\n    int i = 2;\n    int count = 0;\n    while (a != 1) \n   \
    \ {\n        if (a % i == 0) \n        {\n            a /= i;\n            count++;\n\
    \        }\n        else \n        {\n            i++;\n        }\n    }\n   \
    \ return count == 3;\n}", "{\n    bool is_prime(long a)\n    {\n        if (a\
    \ <= 1)\n            return false;\n        if (a == 2)\n            return true;\n\
    \        if (a % 2 == 0)\n            return false;\n        for (long i = 3;\
    \ i <= sqrt(a); i += 2)\n        {\n            if (a % i == 0)\n            \
    \    return false;\n        }\n        return true;\n    }\n    if (a <= 1)\n\
    \        return false;\n    if (a == 2)\n        return true;\n    if (a % 2 ==\
    \ 0)\n        return false;\n    for (long i = 3; i <= sqrt(a); i += 2)\n    {\n\
    \        if (a % i == 0)\n        {\n            if (is_prime(i) && is_prime(a\
    \ / i))\n                return true;\n        }\n    }\n    return false;\n}",
  "{\n    long i = 2;\n    long j = 2;\n    long k = 2;\n    long result = 0;\n  \
    \  while (i < a) \n    {\n        while (j < a) \n        {\n            while\
    \ (k < a) \n            {\n                result = i * j * k;\n             \
    \   if (result == a) \n                {\n                    return true;\n \
    \               }\n                k++;\n            }\n            j++;\n   \
    \     }\n        i++;\n    }\n    return false;\n}", "{\n    bool is_prime(long\
    \ n)\n    {\n        if (n < 2) return false;\n        if (n == 2) return true;\n\
    \        if (n % 2 == 0) return false;\n        for (long i = 3; i <= sqrt(n);\
    \ i += 2)\n        {\n            if (n % i == 0) return false;\n        }\n \
    \       return true;\n    }\n    if (a < 6) return false;\n    if (a % 2 == 0)\
    \ return is_multiply_prime(a / 2);\n    if (a % 3 == 0) return is_multiply_prime(a\
    \ / 3);\n    for (long i = 5; i <= sqrt(a); i += 6)\n    {\n        if (a % i\
    \ == 0) return is_multiply_prime(a / i);\n        if (a % (i + 2) == 0) return\
    \ is_multiply_prime(a / (i + 2));\n    }\n    return true;\n}", "{\n    long i\
    \ = 2;\n    long j = 2;\n    long k = 2;\n    long result = 0;\n    while (i <\
    \ a)\n    {\n        while (j < a)\n        {\n            while (k < a)\n   \
    \         {\n                result = i * j * k;\n                if (result ==\
    \ a)\n                {\n                    return true;\n                }\n\
    \                k++;\n            }\n            j++;\n        }\n        i++;\n\
    \    }\n    return false;\n}", "{\n    int count = 0;\n    for (int i = 2; i <=\
    \ a; i++)\n    {\n        if (a % i == 0)\n        {\n            count++;\n \
    \           a /= i;\n            i--;\n        }\n    }\n    return count == 3;\n\
    }", "{\n    if (a < 6) return false;\n    if (a % 2 == 0) return is_multiply_prime(a\
    \ / 2);\n    if (a % 3 == 0) return is_multiply_prime(a / 3);\n    if (a % 5 ==\
    \ 0) return is_multiply_prime(a / 5);\n    return true;\n}", "{\n    bool result\
    \ = false;\n    long[] primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41,\
    \ 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    foreach(long prime; primes)\n\
    \    {\n        if(a % prime == 0)\n        {\n            result = true;\n  \
    \          break;\n        }\n    }\n    return result;\n}", "{\n    if (a <=\
    \ 1) return false;\n    if (a == 2) return true;\n    if (a % 2 == 0) return false;\n\
    \    for (long i = 3; i <= sqrt(a); i += 2)\n    {\n        if (a % i == 0)\n\
    \        {\n            return false;\n        }\n    }\n    return true;\n}",
  "{\n    int count = 0;\n    for (int i = 2; i <= a; i++)\n    {\n        if (a %\
    \ i == 0)\n        {\n            count++;\n            a /= i;\n            i--;\n\
    \        }\n    }\n    return count == 3;\n}", "{\n    bool is_prime(long n)\n\
    \    {\n        if (n <= 1) return false;\n        if (n == 2) return true;\n\
    \        if (n % 2 == 0) return false;\n        for (long i = 3; i <= sqrt(n);\
    \ i += 2)\n        {\n            if (n % i == 0)\n                return false;\n\
    \        }\n        return true;\n    }\n    if (a == 1) return false;\n    if\
    \ (a == 2) return true;\n    if (a % 2 == 0)\n    {\n        if (is_prime(a /\
    \ 2)) return true;\n        else return false;\n    }\n    for (long i = 3; i\
    \ <= sqrt(a); i += 2)\n    {\n        if (is_prime(i))\n        {\n          \
    \  if (a % i == 0)\n            {\n                if (is_prime(a / i)) return\
    \ true;\n                else return false;\n            }\n        }\n    }\n\
    \    return false;\n}", "{\n    long[] prime_numbers = [2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n \
    \   long[] prime_factors = [];\n    foreach(i; prime_numbers)\n    {\n       \
    \ if(a % i == 0)\n        {\n            prime_factors ~= i;\n        }\n    }\n\
    \    if(prime_factors.length == 3)\n    {\n        return true;\n    }\n    else\n\
    \    {\n        return false;\n    }\n}", "{\n    bool is_prime(long n)\n    {\n\
    \        if (n < 2)\n            return false;\n        if (n == 2)\n        \
    \    return true;\n        if (n % 2 == 0)\n            return false;\n      \
    \  for (long i = 3; i <= sqrt(n); i += 2)\n        {\n            if (n % i ==\
    \ 0)\n                return false;\n        }\n        return true;\n    }\n\
    \    if (a < 6)\n        return false;\n    for (long i = 2; i <= sqrt(a); i++)\n\
    \    {\n        if (is_prime(i))\n        {\n            if (a % i == 0)\n   \
    \         {\n                long b = a / i;\n                if (is_prime(b))\n\
    \                {\n                    for (long j = 2; j <= sqrt(b); j++)\n\
    \                    {\n                        if (is_prime(j))\n           \
    \             {\n                            if (b % j == 0)\n               \
    \             {\n                                long c = b / j;\n           \
    \                     if (is_prime(c))\n                                    return\
    \ true;\n                            }\n                        }\n          \
    \          }\n                }\n            }\n        }\n    }\n    return false;\n\
    }", "{\n    bool is_prime(long a) \n    {\n        if (a <= 1) return false;\n\
    \        if (a == 2) return true;\n        if (a % 2 == 0) return false;\n   \
    \     for (long i = 3; i <= sqrt(a); i += 2)\n        {\n            if (a % i\
    \ == 0) return false;\n        }\n        return true;\n    }\n    if (a <= 1)\
    \ return false;\n    if (a == 2) return true;\n    if (a % 2 == 0) return false;\n\
    \    for (long i = 3; i <= sqrt(a); i += 2)\n    {\n        if (a % i == 0)\n\
    \        {\n            if (is_prime(i) && is_prime(a / i)) return true;\n   \
    \     }\n    }\n    return false;\n}", "{\n    long[] primes = [2, 3, 5, 7, 11,\
    \ 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89,\
    \ 97];\n    foreach(p; primes)\n    {\n        if(a % p == 0)\n        {\n   \
    \         a /= p;\n        }\n    }\n    return a == 1;\n}", "{\n    bool is_multiply\
    \ = false;\n    long[] primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41,\
    \ 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    foreach(i; primes)\n \
    \   {\n        if(a % i == 0)\n        {\n            is_multiply = true;\n  \
    \          a /= i;\n        }\n    }\n    return is_multiply;\n}", "{\n    long\
    \ b = a;\n    long c = 0;\n    long d = 0;\n    long e = 0;\n    long f = 0;\n\
    \    long g = 0;\n    long h = 0;\n    long i = 0;\n    long j = 0;\n    long\
    \ k = 0;\n    long l = 0;\n    long m = 0;\n    long n = 0;\n    long o = 0;\n\
    \    long p = 0;\n    long q = 0;\n    long r = 0;\n    long s = 0;\n    long\
    \ t = 0;\n    long u = 0;\n    long v = 0;\n    long w = 0;\n    long x = 0;\n\
    \    long y = 0;\n    long z = 0;\n    long aa = 0;\n    long ab = 0;\n    long\
    \ ac = 0;\n    long ad = 0;\n    long ae = 0;\n    long af = 0;\n    long ag =\
    \ 0;\n    long ah = 0;\n    long ai = 0;\n    long aj = 0;\n    long ak = 0;\n\
    \    long al = 0;\n    long am = 0;\n    long an = 0;\n    long ao = 0;\n    long\
    \ ap = 0;\n    long aq = 0;\n    long ar = 0;\n    long as = 0;\n    long at =\
    \ 0;\n    long au = 0;\n    long av = 0;\n    long aw = 0;\n    long ax = 0;\n\
    \    long ay = 0;\n    long az = 0;\n    long ba = 0;\n    long bb = 0;\n    long\
    \ bc = 0;\n    long bd = 0;\n    long be = 0;\n    long bf = 0;\n    long bg =\
    \ 0;\n    long bh = 0;\n    long bi = 0;\n    long bj = 0;\n    long bk = 0;\n\
    \    long bl = 0;\n    long bm = 0;\n    long bn = 0;\n    long bo = 0;\n    long\
    \ bp = 0;\n    long bq = 0;\n    long br = 0;\n    long bs = 0;\n   ", "{\n  \
    \  bool is_prime(long n)\n    {\n        if (n < 2)\n            return false;\n\
    \        if (n == 2)\n            return true;\n        if (n % 2 == 0)\n    \
    \        return false;\n        for (long i = 3; i <= sqrt(n); i += 2)\n     \
    \   {\n            if (n % i == 0)\n                return false;\n        }\n\
    \        return true;\n    }\n    if (a < 6)\n        return false;\n    for (long\
    \ i = 2; i <= a / 3; i++)\n    {\n        if (is_prime(i) && is_prime(a / i) &&\
    \ is_prime(a / (a / i)))\n            return true;\n    }\n    return false;\n\
    }", "{\n    bool is_prime(long a)\n    {\n        if (a == 1) return false;\n\
    \        if (a == 2) return true;\n        if (a % 2 == 0) return false;\n   \
    \     for (long i = 3; i < a; i += 2)\n        {\n            if (a % i == 0)\
    \ return false;\n        }\n        return true;\n    }\n    if (a == 1) return\
    \ false;\n    if (a == 2) return false;\n    if (a == 3) return false;\n    if\
    \ (a == 5) return false;\n    if (a == 7) return false;\n    if (a == 11) return\
    \ false;\n    if (a == 13) return false;\n    if (a == 17) return false;\n   \
    \ if (a == 19) return false;\n    if (a == 23) return false;\n    if (a == 29)\
    \ return false;\n    if (a == 31) return false;\n    if (a == 37) return false;\n\
    \    if (a == 41) return false;\n    if (a == 43) return false;\n    if (a ==\
    \ 47) return false;\n    if (a == 53) return false;\n    if (a == 59) return false;\n\
    \    if (a == 61) return false;\n    if (a == 67) return false;\n    if (a ==\
    \ 71) return false;\n    if (a == 73) return false;\n    if (a == 79) return false;\n\
    \    if (a == 83) return false;\n    if (a == 89) return false;\n    if (a ==\
    \ 97) return false;\n    if (a % 2 == 0) return false;\n    for (long i = 3; i\
    \ < a; i += 2)\n    {\n        if (a % i == 0)\n        {\n            if (is_prime(i))\n\
    \            {\n                if (is_prime(a / i))\n                {\n    \
    \                return true;\n                }\n            }\n        }\n \
    \   }\n    return false;\n}", "{\n    bool is_prime(long n)\n    {\n        if\
    \ (n <= 1) return false;\n        if (n <= 3) return true;\n        if (n % 2\
    \ == 0 || n % 3 == 0) return false;\n        for (long i = 5; i * i <= n; i +=\
    \ 6)\n            if (n % i == 0 || n % (i + 2) == 0)\n                return\
    \ false;\n        return true;\n    }\n    if (a <= 1) return false;\n    if (a\
    \ <= 3) return true;\n    if (a % 2 == 0 || a % 3 == 0) return false;\n    for\
    \ (long i = 5; i * i <= a; i += 6)\n        if (a % i == 0 || a % (i + 2) == 0)\n\
    \            return false;\n    return true;\n}", "{\n    if (a == 1) return false;\n\
    \    if (a == 2) return true;\n    if (a == 3) return true;\n    if (a == 5) return\
    \ true;\n    if (a == 7) return true;\n    if (a == 11) return true;\n    if (a\
    \ == 13) return true;\n    if (a == 17) return true;\n    if (a == 19) return\
    \ true;\n    if (a == 23) return true;\n    if (a == 29) return true;\n    if\
    \ (a == 31) return true;\n    if (a == 37) return true;\n    if (a == 41) return\
    \ true;\n    if (a == 43) return true;\n    if (a == 47) return true;\n    if\
    \ (a == 53) return true;\n    if (a == 59) return true;\n    if (a == 61) return\
    \ true;\n    if (a == 67) return true;\n    if (a == 71) return true;\n    if\
    \ (a == 73) return true;\n    if (a == 79) return true;\n    if (a == 83) return\
    \ true;\n    if (a == 89) return true;\n    if (a == 97) return true;\n    if\
    \ (a % 2 == 0) return false;\n    if (a % 3 == 0) return false;\n    if (a % 5\
    \ == 0) return false;\n    if (a % 7 == 0) return false;\n    if (a % 11 == 0)\
    \ return false;\n    if (a % 13 == 0) return false;\n    if (a % 17 == 0) return\
    \ false;\n    if (a % 19 == 0) return false;\n    if (a % 23 == 0) return false;\n\
    \    if (a % 29 == 0) return false;\n    if (a % 31 == 0) return false;\n    if\
    \ (a % 37 == 0) return false;\n    if (a % 41 == 0) return false;\n    if (a %\
    \ 43 == 0) return false;\n    if (a % 47 == 0) return false;\n    if (a % 53 ==\
    \ 0) return false;\n    if (a % 59 == 0) return false;\n    if", "{\n    int count\
    \ = 0;\n    for (int i = 2; i <= a; i++)\n    {\n        if (a % i == 0)\n   \
    \     {\n            count++;\n            a /= i;\n            i--;\n       \
    \ }\n    }\n    return count == 3;\n}", "{\n    int counter = 0;\n    for (int\
    \ i = 2; i <= a; i++)\n    {\n        if (a % i == 0)\n        {\n           \
    \ if (isPrime(i))\n            {\n                counter++;\n            }\n\
    \        }\n    }\n    return counter == 3;\n}", "{\n    long i = 2;\n    long\
    \ n = a;\n    long count = 0;\n    while (n > 1) \n    {\n        if (n % i ==\
    \ 0) \n        {\n            n /= i;\n            count++;\n        }\n     \
    \   else \n        {\n            i++;\n        }\n    }\n    return count ==\
    \ 3;\n}", "{\n    bool is_prime(long n) \n    {\n        if (n < 2) \n       \
    \     return false;\n        for (long i = 2; i < n; i++) \n        {\n      \
    \      if (n % i == 0) \n                return false;\n        }\n        return\
    \ true;\n    }\n    long i = 2;\n    long count = 0;\n    while (i < a) \n   \
    \ {\n        if (a % i == 0 && is_prime(i)) \n        {\n            a /= i;\n\
    \            count++;\n        }\n        else \n            i++;\n    }\n   \
    \ return count == 3;\n}", "{\n    if (a < 6) return false;\n    if (a % 2 == 0)\
    \ return is_multiply_prime(a / 2);\n    if (a % 3 == 0) return is_multiply_prime(a\
    \ / 3);\n    if (a % 5 == 0) return is_multiply_prime(a / 5);\n    return true;\n\
    }", "{\n    bool is_prime(long n)\n    {\n        if (n < 2) return false;\n \
    \       if (n == 2) return true;\n        if (n % 2 == 0) return false;\n    \
    \    for (long i = 3; i < n; i += 2)\n        {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    if (a < 6) return false;\n\
    \    for (long i = 2; i < a; i++)\n    {\n        if (is_prime(i))\n        {\n\
    \            for (long j = 2; j < a; j++)\n            {\n                if (is_prime(j))\n\
    \                {\n                    for (long k = 2; k < a; k++)\n       \
    \             {\n                        if (is_prime(k))\n                  \
    \      {\n                            if (i * j * k == a) return true;\n     \
    \                   }\n                    }\n                }\n            }\n\
    \        }\n    }\n    return false;\n}", "{\n    if (a == 0) return false;\n\
    \    if (a == 1) return true;\n    if (a == 2) return true;\n    if (a == 3) return\
    \ true;\n    if (a == 5) return true;\n    if (a == 7) return true;\n    if (a\
    \ == 11) return true;\n    if (a == 13) return true;\n    if (a == 17) return\
    \ true;\n    if (a == 19) return true;\n    if (a == 23) return true;\n    if\
    \ (a == 29) return true;\n    if (a == 31) return true;\n    if (a == 37) return\
    \ true;\n    if (a == 41) return true;\n    if (a == 43) return true;\n    if\
    \ (a == 47) return true;\n    if (a == 53) return true;\n    if (a == 59) return\
    \ true;\n    if (a == 61) return true;\n    if (a == 67) return true;\n    if\
    \ (a == 71) return true;\n    if (a == 73) return true;\n    if (a == 79) return\
    \ true;\n    if (a == 83) return true;\n    if (a == 89) return true;\n    if\
    \ (a == 97) return true;\n    if (a == 101) return true;\n    if (a == 103) return\
    \ true;\n    if (a == 107) return true;\n    if (a == 109) return true;\n    if\
    \ (a == 113) return true;\n    if (a == 127) return true;\n    if (a == 131) return\
    \ true;\n    if (a == 137) return true;\n    if (a == 139) return true;\n    if\
    \ (a == 149) return true;\n    if (a == 151) return true;\n    if (a == 157) return\
    \ true;\n    if (a == 163) return true;\n    if (a == 167) return true;\n    if\
    \ (a == 173) return true;\n    if (a == 179) return true;\n    if (a == 181) return\
    \ true;\n    if (a == 191) return true;\n    if (a == 193) return true;\n    if\
    \ (", "{\n    long i = 2;\n    long c = 0;\n    while (i <= a)\n    {\n      \
    \  if (a % i == 0)\n        {\n            a /= i;\n            c++;\n       \
    \ }\n        else\n        {\n            i++;\n        }\n    }\n    return c\
    \ == 3;\n}", "{\n    if (a <= 1)\n        return false;\n    if (a == 2)\n   \
    \     return true;\n    if (a % 2 == 0)\n        return false;\n    for (long\
    \ i = 3; i < a; i += 2)\n    {\n        if (a % i == 0)\n            return false;\n\
    \    }\n    return true;\n}", "{\n    long i = 2;\n    long j = 2;\n    long k\
    \ = 2;\n    while(i < a)\n    {\n        while(j < a)\n        {\n           \
    \ while(k < a)\n            {\n                if(i * j * k == a)\n          \
    \      {\n                    return true;\n                }\n              \
    \  k++;\n            }\n            j++;\n        }\n        i++;\n    }\n   \
    \ return false;\n}", "{\n    bool result = false;\n    long[] primes = [2, 3,\
    \ 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79,\
    \ 83, 89, 97];\n    foreach(i; 0 .. primes.length)\n    {\n        if(a % primes[i]\
    \ == 0)\n        {\n            result = true;\n            break;\n        }\n\
    \    }\n    return result;\n}", "{\n    int i = 2;\n    int count = 0;\n    while\
    \ (a != 1) \n    {\n        if (a % i == 0) \n        {\n            a /= i;\n\
    \            count++;\n        }\n        else\n            i++;\n    }\n    return\
    \ count == 3;\n}", "{\n    import std.algorithm : count;\n    import std.math\
    \ : isPrime;\n    import std.range : iota;\n    import std.array : array;\n  \
    \  import std.conv : to;\n    import std.typecons : tuple;\n    import std.range\
    \ : take;\n    import std.range : drop;\n    import std.range : zip;\n    import\
    \ std.range : retro;\n    import std.range : retro;\n    import std.range : retro;\n\
    \    import std.range : retro;\n    import std.range : retro;\n    import std.range\
    \ : retro;\n    import std.range : retro;\n    import std.range : retro;\n   \
    \ import std.range : retro;\n    import std.range : retro;\n    import std.range\
    \ : retro;\n    import std.range : retro;\n    import std.range : retro;\n   \
    \ import std.range : retro;\n    import std.range : retro;\n    import std.range\
    \ : retro;\n    import std.range : retro;\n    import std.range : retro;\n   \
    \ import std.range : retro;\n    import std.range : retro;\n    import std.range\
    \ : retro;\n    import std.range : retro;\n    import std.range : retro;\n   \
    \ import std.range : retro;\n    import std.range : retro;\n    import std.range\
    \ : retro;\n    import std.range : retro;\n    import std.range : retro;\n   \
    \ import std.range : retro;\n    import std.range : retro;\n    import std.range\
    \ : retro;\n    import std.range : retro;\n    import std.range : retro;\n   \
    \ import std.range : retro;\n    import std.range : retro;\n    import std.range\
    \ : retro;\n    import std.range : retro;\n    import std.range : retro;\n   \
    \ import std.range : retro;\n    import std.range : retro;\n    import std.range\
    \ : retro;\n    import std.range : retro;\n    import std.range : retro;\n   \
    \ import std.range : retro;\n    import std.range : retro;\n    import std.range\
    \ : retro;\n    import std.range : retro;\n   ", "{\n    bool result = false;\n\
    \    long[] primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    foreach(prime; primes)\n    {\n\
    \        if(a % prime == 0)\n        {\n            a /= prime;\n            if(a\
    \ == 1)\n            {\n                result = true;\n                break;\n\
    \            }\n        }\n    }\n    return result;\n}", "{\n    long i = 2;\n\
    \    long j = 2;\n    long k = 2;\n    long temp = a;\n    while(i < temp)\n \
    \   {\n        if(temp % i == 0)\n        {\n            temp /= i;\n        \
    \    j = i;\n            while(j < temp)\n            {\n                if(temp\
    \ % j == 0)\n                {\n                    temp /= j;\n             \
    \       k = j;\n                    while(k < temp)\n                    {\n \
    \                       if(temp % k == 0)\n                        {\n       \
    \                     return false;\n                        }\n             \
    \           k++;\n                    }\n                }\n                j++;\n\
    \            }\n        }\n        i++;\n    }\n    return true;\n}", "{\n   \
    \ if (a <= 1) return false;\n    if (a == 2) return true;\n    if (a % 2 == 0)\
    \ return false;\n    for (long i = 3; i <= sqrt(a); i += 2) \n    {\n        if\
    \ (a % i == 0) \n        {\n            return false;\n        }\n    }\n    return\
    \ true;\n}", "{\n    int i = 2;\n    int count = 0;\n    while (i <= a) \n   \
    \ {\n        if (a % i == 0) \n        {\n            a /= i;\n            count++;\n\
    \        } \n        else \n        {\n            i++;\n        }\n    }\n  \
    \  return count == 3;\n}", "{\n    bool is_prime(long n)\n    {\n        if (n\
    \ <= 1) return false;\n        if (n == 2) return true;\n        if (n % 2 ==\
    \ 0) return false;\n        for (long i = 3; i <= sqrt(n); i += 2)\n        {\n\
    \            if (n % i == 0)\n                return false;\n        }\n     \
    \   return true;\n    }\n    long n = a;\n    long i = 2;\n    long count = 0;\n\
    \    while (n > 1)\n    {\n        if (is_prime(i) && n % i == 0)\n        {\n\
    \            n /= i;\n            count++;\n        }\n        else\n        {\n\
    \            i++;\n        }\n    }\n    return count == 3;\n}", "{\n    if (a\
    \ < 6)\n        return false;\n    if (a % 2 == 0)\n        return is_multiply_prime(a\
    \ / 2);\n    if (a % 3 == 0)\n        return is_multiply_prime(a / 3);\n    if\
    \ (a % 5 == 0)\n        return is_multiply_prime(a / 5);\n    return a == 1;\n\
    }", "{\n    long i = 2;\n    long count = 0;\n    while (i <= a) \n    {\n   \
    \     if (a % i == 0) \n        {\n            count++;\n            a = a / i;\n\
    \        } \n        else \n        {\n            i++;\n        }\n    }\n  \
    \  return count == 3;\n}", "{\n    bool is_prime(long n)\n    {\n        if (n\
    \ < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0)\
    \ return false;\n        for (long i = 3; i <= sqrt(n); i += 2)\n        {\n \
    \           if (n % i == 0)\n                return false;\n        }\n      \
    \  return true;\n    }\n    long i = 2;\n    long j = 2;\n    long k = 2;\n  \
    \  while (i * j * k != a)\n    {\n        if (i * j * k < a)\n        {\n    \
    \        if (is_prime(i))\n            {\n                if (is_prime(j))\n \
    \               {\n                    if (is_prime(k))\n                    {\n\
    \                        k++;\n                    }\n                    else\n\
    \                    {\n                        j++;\n                       \
    \ k = 2;\n                    }\n                }\n                else\n   \
    \             {\n                    i++;\n                    j = 2;\n      \
    \              k = 2;\n                }\n            }\n            else\n  \
    \          {\n                i++;\n                j = 2;\n                k\
    \ = 2;\n            }\n        }\n        else\n        {\n            return\
    \ false;\n        }\n    }\n    return true;\n}", "{\n    long i = 2;\n    long\
    \ j = 0;\n    long k = 0;\n    long l = 0;\n    long m = 0;\n    long n = 0;\n\
    \    long o = 0;\n    long p = 0;\n    long q = 0;\n    long r = 0;\n    long\
    \ s = 0;\n    long t = 0;\n    long u = 0;\n    long v = 0;\n    long w = 0;\n\
    \    long x = 0;\n    long y = 0;\n    long z = 0;\n    long aa = 0;\n    long\
    \ ab = 0;\n    long ac = 0;\n    long ad = 0;\n    long ae = 0;\n    long af =\
    \ 0;\n    long ag = 0;\n    long ah = 0;\n    long ai = 0;\n    long aj = 0;\n\
    \    long ak = 0;\n    long al = 0;\n    long am = 0;\n    long an = 0;\n    long\
    \ ao = 0;\n    long ap = 0;\n    long aq = 0;\n    long ar = 0;\n    long as =\
    \ 0;\n    long at = 0;\n    long au = 0;\n    long av = 0;\n    long aw = 0;\n\
    \    long ax = 0;\n    long ay = 0;\n    long az = 0;\n    long ba = 0;\n    long\
    \ bb = 0;\n    long bc = 0;\n    long bd = 0;\n    long be = 0;\n    long bf =\
    \ 0;\n    long bg = 0;\n    long bh = 0;\n    long bi = 0;\n    long bj = 0;\n\
    \    long bk = 0;\n    long bl = 0;\n    long bm = 0;\n    long bn = 0;\n    long\
    \ bo = 0;\n    long bp = 0;\n    long bq = 0;\n    long br = 0;\n    long bs =\
    \ 0;\n    long bt = 0;\n    long bu = 0;\n    long bv = 0;\n    long bw = 0;\n\
    \    long bx = 0;\n    long by = 0;\n    long bz", "{\n    bool result = false;\n\
    \    long i = 2;\n    long j = 2;\n    long k = 2;\n    long l = 2;\n    long\
    \ m = 2;\n    long n = 2;\n    long o = 2;\n    long p = 2;\n    long q = 2;\n\
    \    long r = 2;\n    long s = 2;\n    long t = 2;\n    long u = 2;\n    long\
    \ v = 2;\n    long w = 2;\n    long x = 2;\n    long y = 2;\n    long z = 2;\n\
    \    long aa = 2;\n    long bb = 2;\n    long cc = 2;\n    long dd = 2;\n    long\
    \ ee = 2;\n    long ff = 2;\n    long gg = 2;\n    long hh = 2;\n    long ii =\
    \ 2;\n    long jj = 2;\n    long kk = 2;\n    long ll = 2;\n    long mm = 2;\n\
    \    long nn = 2;\n    long oo = 2;\n    long pp = 2;\n    long qq = 2;\n    long\
    \ rr = 2;\n    long ss = 2;\n    long tt = 2;\n    long uu = 2;\n    long vv =\
    \ 2;\n    long ww = 2;\n    long xx = 2;\n    long yy = 2;\n    long zz = 2;\n\
    \    long aaa = 2;\n    long bbb = 2;\n    long ccc = 2;\n    long ddd = 2;\n\
    \    long eee = 2;\n    long fff = 2;\n    long ggg = 2;\n    long hhh = 2;\n\
    \    long iii = 2;\n    long jjj = 2;\n    long kkk = 2;\n    long lll = 2;\n\
    \    long mmm = 2;\n    long nnn = 2;\n    long ooo = 2;\n    long ppp = 2;\n\
    \    long qqq = 2;\n    long rrr = 2;\n    long sss = 2;\n    long ttt = 2;\n\
    \    long uuu = 2;\n    long vvv = 2;\n    long", "{\n    long i = 2;\n    long\
    \ count = 0;\n    long num = a;\n    while (num > 1) \n    {\n        if (num\
    \ % i == 0) \n        {\n            num /= i;\n            count++;\n       \
    \ }\n        else\n            i++;\n    }\n    return count == 3;\n}", "{\n \
    \   bool is_prime(long n)\n    {\n        if (n < 2) return false;\n        if\
    \ (n == 2) return true;\n        if (n % 2 == 0) return false;\n        for (long\
    \ i = 3; i <= sqrt(n); i += 2)\n        {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n    }\n    long i = 2;\n    while (i\
    \ < a)\n    {\n        if (is_prime(i) && a % i == 0)\n        {\n           \
    \ a /= i;\n            if (is_prime(a)) return true;\n        }\n        else\n\
    \        {\n            i++;\n        }\n    }\n    return false;\n}", "{\n  \
    \  int i = 2;\n    int count = 0;\n    while (i <= a) \n    {\n        if (a %\
    \ i == 0) \n        {\n            a /= i;\n            count++;\n        }\n\
    \        else \n        {\n            i++;\n        }\n    }\n    return count\
    \ == 3;\n}", "{\n    long i = 2;\n    long j = 2;\n    long k = 2;\n    long l\
    \ = 2;\n    long m = 2;\n    long n = 2;\n    long o = 2;\n    long p = 2;\n \
    \   long q = 2;\n    long r = 2;\n    long s = 2;\n    long t = 2;\n    long u\
    \ = 2;\n    long v = 2;\n    long w = 2;\n    long x = 2;\n    long y = 2;\n \
    \   long z = 2;\n    long aa = 2;\n    long bb = 2;\n    long cc = 2;\n    long\
    \ dd = 2;\n    long ee = 2;\n    long ff = 2;\n    long gg = 2;\n    long hh =\
    \ 2;\n    long ii = 2;\n    long jj = 2;\n    long kk = 2;\n    long ll = 2;\n\
    \    long mm = 2;\n    long nn = 2;\n    long oo = 2;\n    long pp = 2;\n    long\
    \ qq = 2;\n    long rr = 2;\n    long ss = 2;\n    long tt = 2;\n    long uu =\
    \ 2;\n    long vv = 2;\n    long ww = 2;\n    long xx = 2;\n    long yy = 2;\n\
    \    long zz = 2;\n    long aaa = 2;\n    long bbb = 2;\n    long ccc = 2;\n \
    \   long ddd = 2;\n    long eee = 2;\n    long fff = 2;\n    long ggg = 2;\n \
    \   long hhh = 2;\n    long iii = 2;\n    long jjj = 2;\n    long kkk = 2;\n \
    \   long lll = 2;\n    long mmm = 2;\n    long nnn = 2;\n    long ooo = 2;\n \
    \   long ppp = 2;\n    long qqq = 2;\n    long rrr = 2;\n    long sss = 2;\n \
    \   long ttt = 2;\n    long uuu = 2;\n    long vvv = 2;\n    long www = 2;\n \
    \   long", "{\n    bool isPrime = true;\n    int i = 2;\n    while (i <= a / 2)\
    \ {\n        if (a % i == 0) {\n            isPrime = false;\n            break;\n\
    \        }\n        i++;\n    }\n    return isPrime;\n}", "{\n    if (a < 6) \n\
    \        return false;\n    if (a % 2 == 0) \n        return is_multiply_prime(a\
    \ / 2);\n    if (a % 3 == 0) \n        return is_multiply_prime(a / 3);\n    if\
    \ (a % 5 == 0) \n        return is_multiply_prime(a / 5);\n    for (long i = 7;\
    \ i <= sqrt(a); i += 2) \n    {\n        if (a % i == 0) \n            return\
    \ false;\n    }\n    return true;\n}", "{\n    bool is_prime(long a)\n    {\n\
    \        if (a <= 1)\n            return false;\n        else if (a == 2)\n  \
    \          return true;\n        else if (a % 2 == 0)\n            return false;\n\
    \        else\n        {\n            long i = 3;\n            while (i <= sqrt(a))\n\
    \            {\n                if (a % i == 0)\n                    return false;\n\
    \                i += 2;\n            }\n            return true;\n        }\n\
    \    }\n    long i = 2;\n    long j = 0;\n    long k = 0;\n    while (i <= a)\n\
    \    {\n        if (is_prime(i))\n        {\n            j = i;\n            while\
    \ (j <= a)\n            {\n                if (is_prime(j))\n                {\n\
    \                    k = j;\n                    while (k <= a)\n            \
    \        {\n                        if (is_prime(k))\n                       \
    \ {\n                            if (i * j * k == a)\n                       \
    \         return true;\n                        }\n                        k++;\n\
    \                    }\n                }\n                j++;\n            }\n\
    \        }\n        i++;\n    }\n    return false;\n}", "{\n    bool result =\
    \ false;\n    long i = 2;\n    long j = 2;\n    long k = 2;\n    while (i < a)\n\
    \    {\n        while (j < a)\n        {\n            while (k < a)\n        \
    \    {\n                if (i * j * k == a)\n                {\n             \
    \       result = true;\n                    break;\n                }\n      \
    \          k++;\n            }\n            j++;\n        }\n        i++;\n  \
    \  }\n    return result;\n}", "{\n    bool is_prime(long n)\n    {\n        if\
    \ (n < 2) return false;\n        for (long i = 2; i < n; i++)\n        {\n   \
    \         if (n % i == 0) return false;\n        }\n        return true;\n   \
    \ }\n    if (a < 6) return false;\n    for (long i = 2; i < a; i++)\n    {\n \
    \       if (is_prime(i))\n        {\n            for (long j = 2; j < a; j++)\n\
    \            {\n                if (is_prime(j))\n                {\n        \
    \            for (long k = 2; k < a; k++)\n                    {\n           \
    \             if (is_prime(k))\n                        {\n                  \
    \          if (i * j * k == a) return true;\n                        }\n     \
    \               }\n                }\n            }\n        }\n    }\n    return\
    \ false;\n}", "{\n    long[] primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31,\
    \ 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    foreach(i; 0 ..\
    \ primes.length)\n    {\n        if(a % primes[i] == 0)\n        {\n         \
    \   a /= primes[i];\n            if(a == 1)\n            {\n                return\
    \ true;\n            }\n            i = 0;\n        }\n    }\n    return false;\n\
    }", "{\n    long i = 2;\n    long j = 0;\n    long k = 0;\n    long l = 0;\n \
    \   long m = 0;\n    long n = 0;\n    long o = 0;\n    long p = 0;\n    long q\
    \ = 0;\n    long r = 0;\n    long s = 0;\n    long t = 0;\n    long u = 0;\n \
    \   long v = 0;\n    long w = 0;\n    long x = 0;\n    long y = 0;\n    long z\
    \ = 0;\n    long aa = 0;\n    long ab = 0;\n    long ac = 0;\n    long ad = 0;\n\
    \    long ae = 0;\n    long af = 0;\n    long ag = 0;\n    long ah = 0;\n    long\
    \ ai = 0;\n    long aj = 0;\n    long ak = 0;\n    long al = 0;\n    long am =\
    \ 0;\n    long an = 0;\n    long ao = 0;\n    long ap = 0;\n    long aq = 0;\n\
    \    long ar = 0;\n    long as = 0;\n    long at = 0;\n    long au = 0;\n    long\
    \ av = 0;\n    long aw = 0;\n    long ax = 0;\n    long ay = 0;\n    long az =\
    \ 0;\n    long ba = 0;\n    long bb = 0;\n    long bc = 0;\n    long bd = 0;\n\
    \    long be = 0;\n    long bf = 0;\n    long bg = 0;\n    long bh = 0;\n    long\
    \ bi = 0;\n    long bj = 0;\n    long bk = 0;\n    long bl = 0;\n    long bm =\
    \ 0;\n    long bn = 0;\n    long bo = 0;\n    long bp = 0;\n    long bq = 0;\n\
    \    long br = 0;\n    long bs = 0;\n    long bt = 0;\n    long bu = 0;\n    long\
    \ bv = 0;\n    long bw = 0;\n    long bx = 0;\n    long by = 0;\n    long bz",
  "{\n    bool is_multiply_prime = false;\n    long[] prime_numbers = [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97];\n    foreach(long prime_number; prime_numbers)\n    {\n        if(a\
    \ % prime_number == 0)\n        {\n            is_multiply_prime = true;\n   \
    \         a = a / prime_number;\n        }\n    }\n    return is_multiply_prime;\n\
    }", "{\n    int count = 0;\n    for (int i = 2; i <= a; i++) \n    {\n       \
    \ if (a % i == 0) \n        {\n            count++;\n            a /= i;\n   \
    \         i--;\n        }\n    }\n    return count == 3;\n}", "{\n    long i =\
    \ 2;\n    long c = 0;\n    while (i <= a)\n    {\n        if (a % i == 0)\n  \
    \      {\n            a /= i;\n            c++;\n        }\n        else\n   \
    \     {\n            i++;\n        }\n    }\n    return c == 3;\n}", "{\n    bool\
    \ is_multiply_prime = false;\n    long[] prime_numbers = [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n\
    \    foreach(i; prime_numbers)\n    {\n        if(a % i == 0)\n        {\n   \
    \         is_multiply_prime = true;\n        }\n    }\n    return is_multiply_prime;\n\
    }", "{\n    if (a < 6)\n        return false;\n    if (a % 2 == 0)\n        return\
    \ is_multiply_prime(a / 2);\n    if (a % 3 == 0)\n        return is_multiply_prime(a\
    \ / 3);\n    if (a % 5 == 0)\n        return is_multiply_prime(a / 5);\n    return\
    \ a == 1;\n}", "{\n    long i = 2;\n    long j = 2;\n    long k = 2;\n    while\
    \ (i < a)\n    {\n        while (j < a)\n        {\n            while (k < a)\n\
    \            {\n                if (i * j * k == a)\n                {\n     \
    \               return true;\n                }\n                k++;\n      \
    \      }\n            j++;\n        }\n        i++;\n    }\n    return false;\n\
    }", "{\n    long i = 2;\n    long j = a;\n    long k = 0;\n    long l = 0;\n \
    \   long m = 0;\n    while (i <= a)\n    {\n        if (a % i == 0)\n        {\n\
    \            j = a / i;\n            k = 2;\n            while (k <= j)\n    \
    \        {\n                if (j % k == 0)\n                {\n             \
    \       l = j / k;\n                    m = 2;\n                    while (m <=\
    \ l)\n                    {\n                        if (l % m == 0)\n       \
    \                 {\n                            return false;\n             \
    \           }\n                        m++;\n                    }\n         \
    \           return true;\n                }\n                k++;\n          \
    \  }\n        }\n        i++;\n    }\n    return false;\n}", "{\n    if (a < 6)\
    \ return false;\n    if (a % 2 == 0) return is_multiply_prime(a / 2);\n    if\
    \ (a % 3 == 0) return is_multiply_prime(a / 3);\n    if (a % 5 == 0) return is_multiply_prime(a\
    \ / 5);\n    return true;\n}", "{\n    long[] primes = [2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n \
    \   long[] factors = [];\n    foreach(prime; primes)\n    {\n        if(a % prime\
    \ == 0)\n        {\n            factors ~= prime;\n            a /= prime;\n \
    \       }\n    }\n    return factors.length == 3;\n}", "{\n    if (a < 6) \n \
    \       return false;\n    if (a % 2 == 0) \n        return is_multiply_prime(a\
    \ / 2);\n    if (a % 3 == 0) \n        return is_multiply_prime(a / 3);\n    if\
    \ (a % 5 == 0) \n        return is_multiply_prime(a / 5);\n    for (long i = 7;\
    \ i <= sqrt(a); i += 2) \n    {\n        if (a % i == 0) \n            return\
    \ false;\n    }\n    return true;\n}", "{\n    int i = 2;\n    int count = 0;\n\
    \    while (a != 1) \n    {\n        if (a % i == 0) \n        {\n           \
    \ a /= i;\n            count++;\n        }\n        else \n        {\n       \
    \     i++;\n        }\n    }\n    return count == 3;\n}", "{\n    bool is_prime(long\
    \ n)\n    {\n        if (n <= 1)\n            return false;\n        else if (n\
    \ <= 3)\n            return true;\n        else if (n % 2 == 0 || n % 3 == 0)\n\
    \            return false;\n        long i = 5;\n        while (i * i <= n)\n\
    \        {\n            if (n % i == 0 || n % (i + 2) == 0)\n                return\
    \ false;\n            i += 6;\n        }\n        return true;\n    }\n    if\
    \ (a <= 0)\n        return false;\n    else if (a == 1)\n        return true;\n\
    \    else if (a == 2 || a == 3)\n        return false;\n    else if (a % 2 ==\
    \ 0)\n        return is_multiply_prime(a / 2);\n    else if (a % 3 == 0)\n   \
    \     return is_multiply_prime(a / 3);\n    else\n    {\n        long i = 5;\n\
    \        while (i * i <= a)\n        {\n            if (a % i == 0)\n        \
    \        return is_multiply_prime(a / i);\n            i += 6;\n        }\n  \
    \      return false;\n    }\n}", "{\n    // your code goes here\n    bool isPrime\
    \ = true;\n    int count = 0;\n    int num = 0;\n    for(int i = 2; i <= a; i++)\n\
    \    {\n        isPrime = true;\n        for(int j = 2; j <= i/2; j++)\n     \
    \   {\n            if(i % j == 0)\n            {\n                isPrime = false;\n\
    \                break;\n            }\n        }\n        if(isPrime)\n     \
    \   {\n            if(a % i == 0)\n            {\n                count++;\n \
    \               num = i;\n            }\n        }\n    }\n    if(count == 3)\n\
    \    {\n        return true;\n    }\n    else\n    {\n        return false;\n\
    \    }\n}", "{\n    import std.math;\n    import std.algorithm;\n    import std.range;\n\
    \    import std.array;\n    import std.conv;\n    import std.typecons;\n    import\
    \ std.string;\n    import std.stdio;\n    import std.range;\n    import std.algorithm;\n\
    \    import std.array;\n    import std.conv;\n    import std.typecons;\n    import\
    \ std.math;\n    import std.range;\n    import std.algorithm;\n    import std.array;\n\
    \    import std.conv;\n    import std.typecons;\n    import std.math;\n    import\
    \ std.range;\n    import std.algorithm;\n    import std.array;\n    import std.conv;\n\
    \    import std.typecons;\n    import std.math;\n    import std.range;\n    import\
    \ std.algorithm;\n    import std.array;\n    import std.conv;\n    import std.typecons;\n\
    \    import std.math;\n    import std.range;\n    import std.algorithm;\n    import\
    \ std.array;\n    import std.conv;\n    import std.typecons;\n    import std.math;\n\
    \    import std.range;\n    import std.algorithm;\n    import std.array;\n   \
    \ import std.conv;\n    import std.typecons;\n    import std.math;\n    import\
    \ std.range;\n    import std.algorithm;\n    import std.array;\n    import std.conv;\n\
    \    import std.typecons;\n    import std.math;\n    import std.range;\n    import\
    \ std.algorithm;\n    import std.array;\n    import std.conv;\n    import std.typecons;\n\
    \    import std.math;\n    import std.range;\n    import std.algorithm;\n    import\
    \ std.array;\n    import std.conv;\n    import std.typecons;\n    import std.math;\n\
    \    import std.range;\n    import std.algorithm;\n    import std.array;\n   \
    \ import std.conv;\n    import std.typecons;\n    import std.math;\n    import\
    \ std.range;\n    import std", "{\n    long[] primes = [2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n \
    \   foreach(i; 0 .. primes.length)\n    {\n        if(a % primes[i] == 0)\n  \
    \      {\n            a /= primes[i];\n            if(a == 1)\n            {\n\
    \                return true;\n            }\n            i = 0;\n        }\n\
    \    }\n    return false;\n}", "{\n    bool is_prime(long n)\n    {\n        foreach(i;\
    \ 2..n)\n        {\n            if(n % i == 0)\n                return false;\n\
    \        }\n        return true;\n    }\n    foreach(i; 2..a)\n    {\n       \
    \ if(is_prime(i))\n        {\n            foreach(j; 2..a)\n            {\n  \
    \              if(is_prime(j))\n                {\n                    foreach(k;\
    \ 2..a)\n                    {\n                        if(is_prime(k))\n    \
    \                    {\n                            if(i * j * k == a)\n     \
    \                           return true;\n                        }\n        \
    \            }\n                }\n            }\n        }\n    }\n    return\
    \ false;\n}", "{\n    bool is_prime(long n)\n    {\n        if (n < 2) return\
    \ false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n\
    \        for (long i = 3; i <= sqrt(n); i += 2)\n        {\n            if (n\
    \ % i == 0) return false;\n        }\n        return true;\n    }\n    if (a <\
    \ 6) return false;\n    if (a % 2 == 0) return is_multiply_prime(a / 2);\n   \
    \ if (a % 3 == 0) return is_multiply_prime(a / 3);\n    for (long i = 5; i <=\
    \ sqrt(a); i += 6)\n    {\n        if (a % i == 0) return is_multiply_prime(a\
    \ / i);\n        if (a % (i + 2) == 0) return is_multiply_prime(a / (i + 2));\n\
    \    }\n    return true;\n}", "{\n    if (a <= 0)\n        return false;\n   \
    \ if (a == 1)\n        return true;\n    if (a == 2)\n        return false;\n\
    \    if (a == 3)\n        return true;\n    if (a == 4)\n        return false;\n\
    \    if (a == 5)\n        return true;\n    if (a == 6)\n        return true;\n\
    \    if (a == 7)\n        return true;\n    if (a == 8)\n        return false;\n\
    \    if (a == 9)\n        return true;\n    if (a == 10)\n        return true;\n\
    \    if (a == 11)\n        return true;\n    if (a == 12)\n        return true;\n\
    \    if (a == 13)\n        return true;\n    if (a == 14)\n        return false;\n\
    \    if (a == 15)\n        return true;\n    if (a == 16)\n        return false;\n\
    \    if (a == 17)\n        return true;\n    if (a == 18)\n        return true;\n\
    \    if (a == 19)\n        return true;\n    if (a == 20)\n        return true;\n\
    \    if (a == 21)\n        return true;\n    if (a == 22)\n        return false;\n\
    \    if (a == 23)\n        return true;\n    if (a == 24)\n        return true;\n\
    \    if (a == 25)\n        return true;\n    if (a == 26)\n        return false;\n\
    \    if (a == 27)\n        return true;\n    if (a == 28)\n        return false;\n\
    \    if (a == 29)\n        return true;\n    if (a == 30)\n        return true;\n\
    \    if (a == 31)\n        return true;\n    if (a == 32)\n        return false;\n\
    \    if (a == 33)\n        return false;\n    if (a == 34)\n        return false;\n\
    \    if (a == 35)\n        return true;\n    if (a == 36)\n        return true;\n\
    \    if (a == 37)\n        return true;\n    if (a == 38)\n        return false;\n\
    \    if", "{\n    long i;\n    long j;\n    long k;\n    long l;\n    long m;\n\
    \    long n;\n    long o;\n    long p;\n    long q;\n    long r;\n    long s;\n\
    \    long t;\n    long u;\n    long v;\n    long w;\n    long x;\n    long y;\n\
    \    long z;\n    long aa;\n    long bb;\n    long cc;\n    long dd;\n    long\
    \ ee;\n    long ff;\n    long gg;\n    long hh;\n    long ii;\n    long jj;\n\
    \    long kk;\n    long ll;\n    long mm;\n    long nn;\n    long oo;\n    long\
    \ pp;\n    long qq;\n    long rr;\n    long ss;\n    long tt;\n    long uu;\n\
    \    long vv;\n    long ww;\n    long xx;\n    long yy;\n    long zz;\n    long\
    \ aaa;\n    long bbb;\n    long ccc;\n    long ddd;\n    long eee;\n    long fff;\n\
    \    long ggg;\n    long hhh;\n    long iii;\n    long jjj;\n    long kkk;\n \
    \   long lll;\n    long mmm;\n    long nnn;\n    long ooo;\n    long ppp;\n  \
    \  long qqq;\n    long rrr;\n    long sss;\n    long ttt;\n    long uuu;\n   \
    \ long vvv;\n    long www;\n    long xxx;\n    long yyy;\n    long zzz;\n    long\
    \ aaaa;\n    long bbbb;\n    long cccc;\n    long dddd;\n    long eeee;\n    long\
    \ ffff;\n    long gggg;\n    long hhhh;\n    long iiii;\n    long jjjj;\n    long\
    \ kkkk;\n    long llll;\n    long mmmm;\n    long nnnn;\n    long oooo;\n    long\
    \ pppp;\n    long qqqq;\n    long rrrr;", "{\n    int i = 2;\n    int count =\
    \ 0;\n    while (i <= a) \n    {\n        if (a % i == 0) \n        {\n      \
    \      a /= i;\n            count++;\n        }\n        else \n        {\n  \
    \          i++;\n        }\n    }\n    return count == 3;\n}", "{\n    long[]\
    \ prime = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97];\n    foreach(i; prime)\n    {\n        if(a % i\
    \ == 0)\n        {\n            a /= i;\n        }\n    }\n    return a == 1;\n\
    }", "{\n    long[] primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43,\
    \ 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    foreach(i; 0 .. primes.length)\n\
    \    {\n        if(a % primes[i] == 0)\n        {\n            return true;\n\
    \        }\n    }\n    return false;\n}", "{\n    long i = 2;\n    long j = 2;\n\
    \    long k = 2;\n    long count = 0;\n    while (i <= a)\n    {\n        if (a\
    \ % i == 0)\n        {\n            j = 2;\n            while (j <= i)\n     \
    \       {\n                if (i % j == 0)\n                {\n              \
    \      k = 2;\n                    while (k <= j)\n                    {\n   \
    \                     if (j % k == 0)\n                        {\n           \
    \                 if (k == j)\n                            {\n               \
    \                 count++;\n                            }\n                  \
    \      }\n                        k++;\n                    }\n              \
    \  }\n                j++;\n            }\n        }\n        i++;\n    }\n  \
    \  if (count == 3)\n    {\n        return true;\n    }\n    else\n    {\n    \
    \    return false;\n    }\n}", "{\n    int i = 2;\n    int count = 0;\n    while\
    \ (a > 1) \n    {\n        if (a % i == 0) \n        {\n            count++;\n\
    \            a /= i;\n        }\n        else \n        {\n            i++;\n\
    \        }\n    }\n    return count == 3;\n}", "{\n    long i = 2;\n    long c\
    \ = 0;\n    while (i <= a) \n    {\n        if (a % i == 0) \n        {\n    \
    \        a /= i;\n            c++;\n        }\n        else \n        {\n    \
    \        i++;\n        }\n    }\n    return c == 3;\n}", "{\n    int count = 0;\n\
    \    for (int i = 2; i <= a; i++)\n    {\n        if (a % i == 0)\n        {\n\
    \            count++;\n            a /= i;\n            i--;\n        }\n    }\n\
    \    return count == 3;\n}", "{\n    bool is_multiply = false;\n    long i = 2;\n\
    \    long j = 2;\n    long k = 2;\n    while (i < a)\n    {\n        while (j\
    \ < a)\n        {\n            while (k < a)\n            {\n                if\
    \ (i * j * k == a)\n                {\n                    is_multiply = true;\n\
    \                    break;\n                }\n                k++;\n       \
    \     }\n            j++;\n        }\n        i++;\n    }\n    return is_multiply;\n\
    }", "{\n    bool is_prime(long n) \n    {\n        if (n < 2) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     for (long i = 3; i <= sqrt(n); i += 2) \n        {\n            if (n %\
    \ i == 0) return false;\n        }\n        return true;\n    }\n    if (a < 6)\
    \ return false;\n    for (long i = 2; i <= a / 3; i++) \n    {\n        if (is_prime(i)\
    \ && is_prime(a / i) && is_prime(a / (a / i))) return true;\n    }\n    return\
    \ false;\n}", "{\n    if (a < 6) return false;\n    if (a % 2 == 0) return is_multiply_prime(a\
    \ / 2);\n    if (a % 3 == 0) return is_multiply_prime(a / 3);\n    if (a % 5 ==\
    \ 0) return is_multiply_prime(a / 5);\n    return true;\n}", "{\n    bool is_prime(long\
    \ a)\n    {\n        if (a <= 1)\n            return false;\n        else if (a\
    \ == 2)\n            return true;\n        else if (a % 2 == 0)\n            return\
    \ false;\n        else\n        {\n            long i = 3;\n            while\
    \ (i <= sqrt(a))\n            {\n                if (a % i == 0)\n           \
    \         return false;\n                i += 2;\n            }\n            return\
    \ true;\n        }\n    }\n    if (a == 1)\n        return false;\n    else\n\
    \    {\n        long i = 2;\n        while (i <= sqrt(a))\n        {\n       \
    \     if (is_prime(i) && a % i == 0)\n            {\n                long j =\
    \ a / i;\n                if (is_prime(j))\n                {\n              \
    \      long k = a / j;\n                    if (is_prime(k))\n               \
    \         return true;\n                }\n            }\n            i++;\n \
    \       }\n        return false;\n    }\n}", "{\n    int i = 2;\n    int count\
    \ = 0;\n    while (a > 1) \n    {\n        if (a % i == 0) \n        {\n     \
    \       a /= i;\n            count++;\n        }\n        else \n        {\n \
    \           i++;\n        }\n    }\n    return count == 3;\n}", "{\n    bool is_prime(long\
    \ a)\n    {\n        if (a <= 1)\n            return false;\n        if (a ==\
    \ 2)\n            return true;\n        if (a % 2 == 0)\n            return false;\n\
    \        for (long i = 3; i <= sqrt(a); i += 2)\n        {\n            if (a\
    \ % i == 0)\n                return false;\n        }\n        return true;\n\
    \    }\n    if (a <= 1)\n        return false;\n    if (a == 2)\n        return\
    \ true;\n    if (a % 2 == 0)\n        return false;\n    for (long i = 3; i <=\
    \ sqrt(a); i += 2)\n    {\n        if (a % i == 0)\n        {\n            if\
    \ (is_prime(i) && is_prime(a / i))\n                return true;\n        }\n\
    \    }\n    return false;\n}", "{\n    long i = 2;\n    long j = 2;\n    long\
    \ k = 2;\n    long n = a;\n    while (i < n) {\n        while (j < n) {\n    \
    \        while (k < n) {\n                if (i * j * k == n) {\n            \
    \        return true;\n                }\n                k++;\n            }\n\
    \            j++;\n        }\n        i++;\n    }\n    return false;\n}", "{\n\
    \    if (a == 1) return false;\n    if (a == 2) return true;\n    if (a == 3)\
    \ return true;\n    if (a == 5) return true;\n    if (a == 7) return true;\n \
    \   if (a == 11) return true;\n    if (a == 13) return true;\n    if (a == 17)\
    \ return true;\n    if (a == 19) return true;\n    if (a == 23) return true;\n\
    \    if (a == 29) return true;\n    if (a == 31) return true;\n    if (a == 37)\
    \ return true;\n    if (a == 41) return true;\n    if (a == 43) return true;\n\
    \    if (a == 47) return true;\n    if (a == 53) return true;\n    if (a == 59)\
    \ return true;\n    if (a == 61) return true;\n    if (a == 67) return true;\n\
    \    if (a == 71) return true;\n    if (a == 73) return true;\n    if (a == 79)\
    \ return true;\n    if (a == 83) return true;\n    if (a == 89) return true;\n\
    \    if (a == 97) return true;\n    return false;\n}", "{\n    long i = 2;\n \
    \   long j = 2;\n    long k = 2;\n    long l = 2;\n    long m = 2;\n    long n\
    \ = 2;\n    long o = 2;\n    long p = 2;\n    long q = 2;\n    long r = 2;\n \
    \   long s = 2;\n    long t = 2;\n    long u = 2;\n    long v = 2;\n    long w\
    \ = 2;\n    long x = 2;\n    long y = 2;\n    long z = 2;\n    long aa = 2;\n\
    \    long bb = 2;\n    long cc = 2;\n    long dd = 2;\n    long ee = 2;\n    long\
    \ ff = 2;\n    long gg = 2;\n    long hh = 2;\n    long ii = 2;\n    long jj =\
    \ 2;\n    long kk = 2;\n    long ll = 2;\n    long mm = 2;\n    long nn = 2;\n\
    \    long oo = 2;\n    long pp = 2;\n    long qq = 2;\n    long rr = 2;\n    long\
    \ ss = 2;\n    long tt = 2;\n    long uu = 2;\n    long vv = 2;\n    long ww =\
    \ 2;\n    long xx = 2;\n    long yy = 2;\n    long zz = 2;\n    long aaa = 2;\n\
    \    long bbb = 2;\n    long ccc = 2;\n    long ddd = 2;\n    long eee = 2;\n\
    \    long fff = 2;\n    long ggg = 2;\n    long hhh = 2;\n    long iii = 2;\n\
    \    long jjj = 2;\n    long kkk = 2;\n    long lll = 2;\n    long mmm = 2;\n\
    \    long nnn = 2;\n    long ooo = 2;\n    long ppp = 2;\n    long qqq = 2;\n\
    \    long rrr = 2;\n    long sss = 2;\n    long ttt = 2;\n    long uuu = 2;\n\
    \    long vvv = 2;\n    long www = 2;\n    long", "{\n    long[] primes = [2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73,\
    \ 79, 83, 89, 97];\n    foreach(i; 0 .. primes.length)\n    {\n        if(a %\
    \ primes[i] == 0)\n        {\n            a /= primes[i];\n            if(a ==\
    \ 1)\n            {\n                return true;\n            }\n           \
    \ i = 0;\n        }\n    }\n    return false;\n}", "{\n    if (a < 6) return false;\n\
    \    if (a % 2 == 0) return is_multiply_prime(a / 2);\n    if (a % 3 == 0) return\
    \ is_multiply_prime(a / 3);\n    if (a % 5 == 0) return is_multiply_prime(a /\
    \ 5);\n    return a == 1;\n}", "{\n    long i = 2;\n    long j = 3;\n    long\
    \ k = 5;\n    long l = 7;\n    long m = 11;\n    long n = 13;\n    long o = 17;\n\
    \    long p = 19;\n    long q = 23;\n    long r = 29;\n    long s = 31;\n    long\
    \ t = 37;\n    long u = 41;\n    long v = 43;\n    long w = 47;\n    long x =\
    \ 53;\n    long y = 59;\n    long z = 61;\n    long aa = 67;\n    long bb = 71;\n\
    \    long cc = 73;\n    long dd = 79;\n    long ee = 83;\n    long ff = 89;\n\
    \    long gg = 97;\n    long hh = 101;\n    long ii = 103;\n    long jj = 107;\n\
    \    long kk = 109;\n    long ll = 113;\n    long mm = 127;\n    long nn = 131;\n\
    \    long oo = 137;\n    long pp = 139;\n    long qq = 149;\n    long rr = 151;\n\
    \    long ss = 157;\n    long tt = 163;\n    long uu = 167;\n    long vv = 173;\n\
    \    long ww = 179;\n    long xx = 181;\n    long yy = 191;\n    long zz = 193;\n\
    \    long aaa = 197;\n    long bbb = 199;\n    long ccc = 211;\n    long ddd =\
    \ 223;\n    long eee = 227;\n    long fff = 229;\n    long ggg = 233;\n    long\
    \ hhh = 239;\n    long iii = 241;\n    long jjj = 251;\n    long kkk = 257;\n\
    \    long lll = 263;\n    long mmm = 269;\n    long nnn = 271;\n    long ooo =\
    \ 277;\n    long ppp = 281;\n    long qqq = 283;\n    long rrr = 293;\n    long\
    \ sss = 307;\n    long ttt = 311;\n    long uuu = 313;\n    long vvv = 317;\n\
    \    long www = 331;\n    long", "{\n    import std.math : isPrime;\n    import\
    \ std.algorithm : count;\n    import std.range : iota;\n    import std.typecons\
    \ : tuple;\n    import std.array : array;\n    import std.conv : to;\n    import\
    \ std.range : take;\n    import std.range : drop;\n    import std.range : empty;\n\
    \    import std.range : chain;\n    import std.range : retro;\n    import std.range\
    \ : retroChain;\n    import std.range : retroDrop;\n    import std.range : retroTake;\n\
    \    import std.range : retroFilter;\n    import std.range : retroMap;\n    import\
    \ std.range : retroZip;\n    import std.range : retroCycle;\n    import std.range\
    \ : retroRepeat;\n    import std.range : retroChunks;\n    import std.range :\
    \ retroChunksOf;\n    import std.range : retroSlices;\n    import std.range :\
    \ retroSlicesOf;\n    import std.range : retroSplitter;\n    import std.range\
    \ : retroSplit;\n    import std.range : retroJoin;\n    import std.range : retroEach;\n\
    \    import std.range : retroEach!\"a.length\";\n    import std.range : retroEach!\"\
    a.length - 1\";\n    import std.range : retroEach!\"a.length + 1\";\n    import\
    \ std.range : retroEach!\"a.length - 1u\";\n    import std.range : retroEach!\"\
    a.length + 1u\";\n    import std.range : retroEach!\"a.length - 1L\";\n    import\
    \ std.range : retroEach!\"a.length + 1L\";\n    import std.range : retroEach!\"\
    a.length - 1UL\";\n    import std.range : retroEach!\"a.length + 1UL\";\n    import\
    \ std.range : retroEach!\"a.length - 1LU\";\n    import std.range : retroEach!\"\
    a.length + 1LU\";\n    import std.range : retroEach!\"a.length - 1LL\";\n    import\
    \ std.range : retroEach!\"a.length + 1LL\";\n    import std.range : retroEach!\"\
    a.length - 1ULL\";\n    import std", "{\n    long i = 2;\n    long j = 2;\n  \
    \  long k = 2;\n    long l = 2;\n    long m = 2;\n    long n = 2;\n    long o\
    \ = 2;\n    long p = 2;\n    long q = 2;\n    long r = 2;\n    long s = 2;\n \
    \   long t = 2;\n    long u = 2;\n    long v = 2;\n    long w = 2;\n    long x\
    \ = 2;\n    long y = 2;\n    long z = 2;\n    long aa = 2;\n    long bb = 2;\n\
    \    long cc = 2;\n    long dd = 2;\n    long ee = 2;\n    long ff = 2;\n    long\
    \ gg = 2;\n    long hh = 2;\n    long ii = 2;\n    long jj = 2;\n    long kk =\
    \ 2;\n    long ll = 2;\n    long mm = 2;\n    long nn = 2;\n    long oo = 2;\n\
    \    long pp = 2;\n    long qq = 2;\n    long rr = 2;\n    long ss = 2;\n    long\
    \ tt = 2;\n    long uu = 2;\n    long vv = 2;\n    long ww = 2;\n    long xx =\
    \ 2;\n    long yy = 2;\n    long zz = 2;\n    long aaa = 2;\n    long bbb = 2;\n\
    \    long ccc = 2;\n    long ddd = 2;\n    long eee = 2;\n    long fff = 2;\n\
    \    long ggg = 2;\n    long hhh = 2;\n    long iii = 2;\n    long jjj = 2;\n\
    \    long kkk = 2;\n    long lll = 2;\n    long mmm = 2;\n    long nnn = 2;\n\
    \    long ooo = 2;\n    long ppp = 2;\n    long qqq = 2;\n    long rrr = 2;\n\
    \    long sss = 2;\n    long ttt = 2;\n    long uuu = 2;\n    long vvv = 2;\n\
    \    long www = 2;\n    long", "{\n    bool is_prime(long n) \n    {\n       \
    \ if (n <= 1) return false;\n        if (n == 2) return true;\n        if (n %\
    \ 2 == 0) return false;\n        foreach (i; 2 .. n) \n        {\n           \
    \ if (n % i == 0) return false;\n        }\n        return true;\n    }\n    long[]\
    \ primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97];\n    foreach (i; 0 .. primes.length) \n    {\n\
    \        foreach (j; 0 .. primes.length) \n        {\n            foreach (k;\
    \ 0 .. primes.length) \n            {\n                if (primes[i] * primes[j]\
    \ * primes[k] == a) return true;\n            }\n        }\n    }\n    return\
    \ false;\n}", "{\n    if (a < 6) return false;\n    if (a % 2 == 0) return is_multiply_prime(a\
    \ / 2);\n    if (a % 3 == 0) return is_multiply_prime(a / 3);\n    if (a % 5 ==\
    \ 0) return is_multiply_prime(a / 5);\n    if (a % 7 == 0) return is_multiply_prime(a\
    \ / 7);\n    if (a % 11 == 0) return is_multiply_prime(a / 11);\n    if (a % 13\
    \ == 0) return is_multiply_prime(a / 13);\n    if (a % 17 == 0) return is_multiply_prime(a\
    \ / 17);\n    if (a % 19 == 0) return is_multiply_prime(a / 19);\n    if (a %\
    \ 23 == 0) return is_multiply_prime(a / 23);\n    if (a % 29 == 0) return is_multiply_prime(a\
    \ / 29);\n    if (a % 31 == 0) return is_multiply_prime(a / 31);\n    if (a %\
    \ 37 == 0) return is_multiply_prime(a / 37);\n    if (a % 41 == 0) return is_multiply_prime(a\
    \ / 41);\n    if (a % 43 == 0) return is_multiply_prime(a / 43);\n    if (a %\
    \ 47 == 0) return is_multiply_prime(a / 47);\n    if (a % 53 == 0) return is_multiply_prime(a\
    \ / 53);\n    if (a % 59 == 0) return is_multiply_prime(a / 59);\n    if (a %\
    \ 61 == 0) return is_multiply_prime(a / 61);\n    if (a % 67 == 0) return is_multiply_prime(a\
    \ / 67);\n    if (a % 71 == 0) return is_multiply_prime(a / 71);\n    if (a %\
    \ 73 == 0) return is_multiply_prime(a / 73);\n    if (a % 79 == 0) return is_multiply",
  "{\n    bool is_prime(long n) \n    {\n        if (n <= 1) return false;\n     \
    \   if (n <= 3) return true;\n        if (n % 2 == 0 || n % 3 == 0) return false;\n\
    \        for (long i = 5; i * i <= n; i += 6) \n        {\n            if (n %\
    \ i == 0 || n % (i + 2) == 0) return false;\n        }\n        return true;\n\
    \    }\n    if (a <= 1) return false;\n    if (a <= 3) return true;\n    if (a\
    \ % 2 == 0 || a % 3 == 0) return false;\n    for (long i = 5; i * i <= a; i +=\
    \ 6) \n    {\n        if (a % i == 0 || a % (i + 2) == 0) \n        {\n      \
    \      if (is_prime(i) && is_prime(a / i)) return true;\n        }\n    }\n  \
    \  return false;\n}", "{\n    if (a < 6)\n        return false;\n    if (a % 2\
    \ == 0)\n        return is_multiply_prime(a / 2);\n    if (a % 3 == 0)\n     \
    \   return is_multiply_prime(a / 3);\n    if (a % 5 == 0)\n        return is_multiply_prime(a\
    \ / 5);\n    return a == 1;\n}", "{\n    bool is_prime(long n)\n    {\n      \
    \  if (n <= 1)\n            return false;\n        else if (n <= 3)\n        \
    \    return true;\n        else if (n % 2 == 0 || n % 3 == 0)\n            return\
    \ false;\n        long i = 5;\n        while (i * i <= n)\n        {\n       \
    \     if (n % i == 0 || n % (i + 2) == 0)\n                return false;\n   \
    \         i += 6;\n        }\n        return true;\n    }\n    if (a <= 1)\n \
    \       return false;\n    else if (a <= 3)\n        return true;\n    else if\
    \ (a % 2 == 0 || a % 3 == 0)\n        return false;\n    long i = 5;\n    while\
    \ (i * i <= a)\n    {\n        if (a % i == 0 || a % (i + 2) == 0)\n         \
    \   return false;\n        i += 6;\n    }\n    return true;\n}", "{\n    if (a\
    \ < 6)\n        return false;\n    if (a % 2 == 0)\n        return is_multiply_prime(a\
    \ / 2);\n    if (a % 3 == 0)\n        return is_multiply_prime(a / 3);\n    if\
    \ (a % 5 == 0)\n        return is_multiply_prime(a / 5);\n    return a == 1;\n\
    }", "{\n    if (a < 6) \n        return false;\n    if (a % 2 == 0) \n       \
    \ return is_multiply_prime(a / 2);\n    if (a % 3 == 0) \n        return is_multiply_prime(a\
    \ / 3);\n    if (a % 5 == 0) \n        return is_multiply_prime(a / 5);\n    return\
    \ a == 1;\n}", "{\n    if (a < 6) return false;\n    if (a % 2 == 0) return is_multiply_prime(a\
    \ / 2);\n    if (a % 3 == 0) return is_multiply_prime(a / 3);\n    if (a % 5 ==\
    \ 0) return is_multiply_prime(a / 5);\n    return true;\n}", "{\n    bool is_multiply_prime\
    \ = false;\n    long[] primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41,\
    \ 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    foreach(long prime; primes)\n\
    \    {\n        if(a % prime == 0)\n        {\n            is_multiply_prime =\
    \ true;\n            break;\n        }\n    }\n    return is_multiply_prime;\n\
    }", "{\n    long i = 2;\n    long j = 2;\n    long k = 2;\n    long temp = a;\n\
    \    while(i < temp)\n    {\n        if(temp % i == 0)\n        {\n          \
    \  temp /= i;\n            j = i;\n            break;\n        }\n        i++;\n\
    \    }\n    while(j < temp)\n    {\n        if(temp % j == 0)\n        {\n   \
    \         temp /= j;\n            k = j;\n            break;\n        }\n    \
    \    j++;\n    }\n    if(temp == k)\n        return true;\n    return false;\n\
    }", "{\n    if (a == 1) return false;\n    if (a == 2) return true;\n    if (a\
    \ % 2 == 0) return false;\n    foreach (i; 2 .. a)\n    {\n        if (a % i ==\
    \ 0)\n        {\n            if (isPrime(i))\n            {\n                auto\
    \ b = a / i;\n                if (isPrime(b))\n                {\n           \
    \         auto c = b / i;\n                    if (isPrime(c))\n             \
    \       {\n                        return true;\n                    }\n     \
    \           }\n            }\n        }\n    }\n    return false;\n}", "{\n  \
    \  if (a < 6)\n        return false;\n    if (a % 2 == 0)\n        return is_multiply_prime(a\
    \ / 2);\n    if (a % 3 == 0)\n        return is_multiply_prime(a / 3);\n    if\
    \ (a % 5 == 0)\n        return is_multiply_prime(a / 5);\n    return a == 1;\n\
    }", "{\n    int i = 2;\n    int count = 0;\n    while (i <= a) \n    {\n     \
    \   if (a % i == 0) \n        {\n            count++;\n            a /= i;\n \
    \       }\n        else \n        {\n            i++;\n        }\n    }\n    return\
    \ count == 3;\n}", "{\n    bool result = false;\n    if (a < 100)\n    {\n   \
    \     long[] primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n        foreach (long i; primes)\n\
    \        {\n            if (a % i == 0)\n            {\n                result\
    \ = true;\n                break;\n            }\n        }\n    }\n    return\
    \ result;\n}", "{\n    bool result = false;\n    long i = 2;\n    long count =\
    \ 0;\n    while (i <= a)\n    {\n        if (a % i == 0)\n        {\n        \
    \    if (isPrime(i))\n            {\n                count++;\n              \
    \  a /= i;\n            }\n        }\n        if (count == 3)\n        {\n   \
    \         result = true;\n            break;\n        }\n        i++;\n    }\n\
    \    return result;\n}", "{\n    bool is_prime(long a) \n    {\n        if (a\
    \ <= 1) \n            return false;\n        if (a == 2) \n            return\
    \ true;\n        if (a % 2 == 0) \n            return false;\n        for (long\
    \ i = 3; i <= sqrt(a); i += 2) \n        {\n            if (a % i == 0) \n   \
    \             return false;\n        }\n        return true;\n    }\n    if (a\
    \ <= 1) \n        return false;\n    if (a == 2) \n        return true;\n    if\
    \ (a % 2 == 0) \n        return false;\n    for (long i = 3; i <= sqrt(a); i +=\
    \ 2) \n    {\n        if (a % i == 0) \n        {\n            if (is_prime(a\
    \ / i) && is_prime(i)) \n                return true;\n        }\n    }\n    return\
    \ false;\n}", "{\n    long b = a;\n    long c = 0;\n    long d = 0;\n    long\
    \ e = 0;\n    long f = 0;\n    long g = 0;\n    long h = 0;\n    long i = 0;\n\
    \    long j = 0;\n    long k = 0;\n    long l = 0;\n    long m = 0;\n    long\
    \ n = 0;\n    long o = 0;\n    long p = 0;\n    long q = 0;\n    long r = 0;\n\
    \    long s = 0;\n    long t = 0;\n    long u = 0;\n    long v = 0;\n    long\
    \ w = 0;\n    long x = 0;\n    long y = 0;\n    long z = 0;\n    long aa = 0;\n\
    \    long ab = 0;\n    long ac = 0;\n    long ad = 0;\n    long ae = 0;\n    long\
    \ af = 0;\n    long ag = 0;\n    long ah = 0;\n    long ai = 0;\n    long aj =\
    \ 0;\n    long ak = 0;\n    long al = 0;\n    long am = 0;\n    long an = 0;\n\
    \    long ao = 0;\n    long ap = 0;\n    long aq = 0;\n    long ar = 0;\n    long\
    \ as = 0;\n    long at = 0;\n    long au = 0;\n    long av = 0;\n    long aw =\
    \ 0;\n    long ax = 0;\n    long ay = 0;\n    long az = 0;\n    long ba = 0;\n\
    \    long bb = 0;\n    long bc = 0;\n    long bd = 0;\n    long be = 0;\n    long\
    \ bf = 0;\n    long bg = 0;\n    long bh = 0;\n    long bi = 0;\n    long bj =\
    \ 0;\n    long bk = 0;\n    long bl = 0;\n    long bm = 0;\n    long bn = 0;\n\
    \    long bo = 0;\n    long bp = 0;\n    long bq = 0;\n    long br = 0;\n    long\
    \ bs = 0;\n   ", "{\n    if (a <= 1)\n        return false;\n    if (a == 2)\n\
    \        return true;\n    if (a % 2 == 0)\n        return false;\n    for (long\
    \ i = 3; i <= sqrt(a); i += 2)\n    {\n        if (a % i == 0)\n            return\
    \ false;\n    }\n    return true;\n}", "{\n    int i = 2;\n    int count = 0;\n\
    \    while (i <= a) \n    {\n        if (a % i == 0) \n        {\n           \
    \ a /= i;\n            count++;\n        }\n        else \n        {\n       \
    \     i++;\n        }\n    }\n    return count == 3;\n}", "{\n    bool result\
    \ = false;\n    long[] primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41,\
    \ 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    foreach(prime; primes)\
    \ \n    {\n        if(a % prime == 0) \n        {\n            a /= prime;\n \
    \           if(a == 1) \n            {\n                result = true;\n     \
    \           break;\n            }\n        }\n    }\n    return result;\n}", "{\n\
    \    import std.algorithm : all;\n    import std.range : iota;\n    import std.math\
    \ : isPrime;\n    import std.array : array;\n    import std.conv : to;\n    import\
    \ std.range : take;\n    import std.range : drop;\n    import std.range : zip;\n\
    \    import std.range : chain;\n    import std.range : cycle;\n    import std.range\
    \ : retro;\n    import std.range : isInputRange;\n    import std.range : isForwardRange;\n\
    \    import std.range : isBidirectionalRange;\n    import std.range : isRandomAccessRange;\n\
    \    import std.range : isInfinite;\n    import std.range : isSorted;\n    import\
    \ std.range : isSorted!\"a < b\";\n    import std.range : isSorted!\"a > b\";\n\
    \    import std.range : isSorted!\"a <= b\";\n    import std.range : isSorted!\"\
    a >= b\";\n    import std.range : isSorted!\"a.length < b.length\";\n    import\
    \ std.range : isSorted!\"a.length > b.length\";\n    import std.range : isSorted!\"\
    a.length <= b.length\";\n    import std.range : isSorted!\"a.length >= b.length\"\
    ;\n    import std.range : isSorted!\"a.id < b.id\";\n    import std.range : isSorted!\"\
    a.id > b.id\";\n    import std.range : isSorted!\"a.id <= b.id\";\n    import\
    \ std.range : isSorted!\"a.id >= b.id\";\n    import std.range : isSorted!\"strcmp(a,\
    \ b) < 0\";\n    import std.range : isSorted!\"strcmp(a, b) > 0\";\n    import\
    \ std.range : isSorted!\"strcmp(a, b) <= 0\";\n    import std.range : isSorted!\"\
    strcmp(a, b) >= 0\";\n    import std.range : isSorted!\"a.opCmp(b) < 0\";\n  \
    \  import std.range : isSorted!\"a.opCmp(b) >", "{\n    int i = 2;\n    int count\
    \ = 0;\n    while (i <= a) \n    {\n        if (a % i == 0) \n        {\n    \
    \        a /= i;\n            count++;\n        }\n        else \n        {\n\
    \            i++;\n        }\n    }\n    return count == 3;\n}", "{\n    if (a\
    \ == 1) return false;\n    if (a == 2) return true;\n    if (a == 3) return true;\n\
    \    if (a == 5) return true;\n    if (a == 7) return true;\n    if (a == 11)\
    \ return true;\n    if (a == 13) return true;\n    if (a == 17) return true;\n\
    \    if (a == 19) return true;\n    if (a == 23) return true;\n    if (a == 29)\
    \ return true;\n    if (a == 31) return true;\n    if (a == 37) return true;\n\
    \    if (a == 41) return true;\n    if (a == 43) return true;\n    if (a == 47)\
    \ return true;\n    if (a == 53) return true;\n    if (a == 59) return true;\n\
    \    if (a == 61) return true;\n    if (a == 67) return true;\n    if (a == 71)\
    \ return true;\n    if (a == 73) return true;\n    if (a == 79) return true;\n\
    \    if (a == 83) return true;\n    if (a == 89) return true;\n    if (a == 97)\
    \ return true;\n    return false;\n}", "{\n    if (a < 6)\n        return false;\n\
    \    if (a % 2 == 0)\n        return is_multiply_prime(a / 2);\n    if (a % 3\
    \ == 0)\n        return is_multiply_prime(a / 3);\n    if (a % 5 == 0)\n     \
    \   return is_multiply_prime(a / 5);\n    return a == 1;\n}", "{\n    bool is_multiply_prime\
    \ = false;\n    long[] primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41,\
    \ 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    foreach(prime; primes)\n\
    \    {\n        if(a % prime == 0)\n        {\n            is_multiply_prime =\
    \ true;\n            a /= prime;\n        }\n    }\n    return is_multiply_prime;\n\
    }", "{\n    bool result = false;\n    long[] primes = [2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n \
    \   foreach(i; primes)\n    {\n        if(a % i == 0)\n        {\n           \
    \ result = true;\n            break;\n        }\n    }\n    return result;\n}",
  "{\n    bool result = false;\n    if (a < 100)\n    {\n        for (int i = 2; i\
    \ < a; i++)\n        {\n            if (a % i == 0)\n            {\n         \
    \       for (int j = 2; j < a; j++)\n                {\n                    if\
    \ (a % j == 0)\n                    {\n                        for (int k = 2;\
    \ k < a; k++)\n                        {\n                            if (a %\
    \ k == 0)\n                            {\n                                if (i\
    \ * j * k == a)\n                                {\n                         \
    \           result = true;\n                                }\n              \
    \              }\n                        }\n                    }\n         \
    \       }\n            }\n        }\n    }\n    return result;\n}", "{\n    if\
    \ (a <= 1) return false;\n    if (a == 2) return true;\n    if (a % 2 == 0) return\
    \ false;\n    for (long i = 3; i <= sqrt(a); i += 2) \n    {\n        if (a %\
    \ i == 0) \n        {\n            return is_multiply_prime(a / i);\n        }\n\
    \    }\n    return true;\n}", "{\n    long i = 0;\n    long j = 0;\n    long k\
    \ = 0;\n    long l = 0;\n    long m = 0;\n    long n = 0;\n    long o = 0;\n \
    \   long p = 0;\n    long q = 0;\n    long r = 0;\n    long s = 0;\n    long t\
    \ = 0;\n    long u = 0;\n    long v = 0;\n    long w = 0;\n    long x = 0;\n \
    \   long y = 0;\n    long z = 0;\n    long aa = 0;\n    long ab = 0;\n    long\
    \ ac = 0;\n    long ad = 0;\n    long ae = 0;\n    long af = 0;\n    long ag =\
    \ 0;\n    long ah = 0;\n    long ai = 0;\n    long aj = 0;\n    long ak = 0;\n\
    \    long al = 0;\n    long am = 0;\n    long an = 0;\n    long ao = 0;\n    long\
    \ ap = 0;\n    long aq = 0;\n    long ar = 0;\n    long as = 0;\n    long at =\
    \ 0;\n    long au = 0;\n    long av = 0;\n    long aw = 0;\n    long ax = 0;\n\
    \    long ay = 0;\n    long az = 0;\n    long ba = 0;\n    long bb = 0;\n    long\
    \ bc = 0;\n    long bd = 0;\n    long be = 0;\n    long bf = 0;\n    long bg =\
    \ 0;\n    long bh = 0;\n    long bi = 0;\n    long bj = 0;\n    long bk = 0;\n\
    \    long bl = 0;\n    long bm = 0;\n    long bn = 0;\n    long bo = 0;\n    long\
    \ bp = 0;\n    long bq = 0;\n    long br = 0;\n    long bs = 0;\n    long bt =\
    \ 0;\n    long bu = 0;\n    long bv = 0;\n    long bw = 0;\n    long bx = 0;\n\
    \    long by = 0;\n    long bz"]
stop_tokens:
- "\n\n"
- "\nvoid"
- "\nbool"
- "\nint"

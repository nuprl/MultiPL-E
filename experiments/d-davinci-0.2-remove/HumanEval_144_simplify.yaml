name: HumanEval_144_simplify
language: d
prompt: "import std.math;\n/*\nYour task is to implement a function that will simplify\
  \ the expression\n    x * n. The function returns True if x * n evaluates to a whole\
  \ number and False\n    otherwise. Both x and n, are string representation of a\
  \ fraction, and have the following format,\n    <numerator>/<denominator> where\
  \ both numerator and denominator are positive whole numbers.\n\n    You can assume\
  \ that x, and n are valid fractions, and do not have zero as denominator.\n\n  \
  \              \n*/\nbool simplify(string x, string n) \n"
tests: "unittest\n{\n    alias candidate = simplify;\n\n    assert(candidate(\"1/5\"\
  , \"5/1\") == true);\n    assert(candidate(\"1/6\", \"2/1\") == false);\n    assert(candidate(\"\
  5/1\", \"3/1\") == true);\n    assert(candidate(\"7/10\", \"10/2\") == false);\n\
  \    assert(candidate(\"2/10\", \"50/10\") == true);\n    assert(candidate(\"7/2\"\
  , \"4/2\") == true);\n    assert(candidate(\"11/6\", \"6/1\") == true);\n    assert(candidate(\"\
  2/3\", \"5/2\") == false);\n    assert(candidate(\"5/2\", \"3/5\") == false);\n\
  \    assert(candidate(\"2/4\", \"8/4\") == true);\n    assert(candidate(\"2/4\"\
  , \"4/2\") == true);\n    assert(candidate(\"1/5\", \"5/1\") == true);\n    assert(candidate(\"\
  1/5\", \"1/5\") == false);\n}\nvoid main(){}"
completions: ["{\n    int xn = to!int(split(x, \"/\")[0]);\n    int xd = to!int(split(x,\
    \ \"/\")[1]);\n    int nn = to!int(split(n, \"/\")[0]);\n    int nd = to!int(split(n,\
    \ \"/\")[1]);\n    return (xn * nn) % (xd * nd) == 0;\n}", "{\n    auto x_num\
    \ = to!int(split(x, \"/\")[0]);\n    auto x_den = to!int(split(x, \"/\")[1]);\n\
    \    auto n_num = to!int(split(n, \"/\")[0]);\n    auto n_den = to!int(split(n,\
    \ \"/\")[1]);\n    auto gcd = gcd(x_num * n_den, x_den * n_num);\n    return (x_num\
    \ * n_den / gcd) % (x_den * n_num / gcd) == 0;\n}", "{\n    int a = to!int(split(x,\
    \ \"/\")[0]);\n    int b = to!int(split(x, \"/\")[1]);\n    int c = to!int(split(n,\
    \ \"/\")[0]);\n    int d = to!int(split(n, \"/\")[1]);\n    return (a * c) % (b\
    \ * d) == 0;\n}", "{\n    auto x_num = to!int(split(x, \"/\")[0]);\n    auto x_den\
    \ = to!int(split(x, \"/\")[1]);\n    auto n_num = to!int(split(n, \"/\")[0]);\n\
    \    auto n_den = to!int(split(n, \"/\")[1]);\n    auto num = x_num * n_num;\n\
    \    auto den = x_den * n_den;\n    return num % den == 0;\n}", "{\n    int a\
    \ = to!int(split(x, \"/\")[0]);\n    int b = to!int(split(x, \"/\")[1]);\n   \
    \ int c = to!int(split(n, \"/\")[0]);\n    int d = to!int(split(n, \"/\")[1]);\n\
    \    return (a * c) % (b * d) == 0;\n}", "{\n    auto x_n = split(x, '/');\n \
    \   auto n_n = split(n, '/');\n    int x_num = to!int(x_n[0]);\n    int x_den\
    \ = to!int(x_n[1]);\n    int n_num = to!int(n_n[0]);\n    int n_den = to!int(n_n[1]);\n\
    \    int num = x_num * n_num;\n    int den = x_den * n_den;\n    return (num %\
    \ den) == 0;\n}", "{\n    auto a = split(x, \"/\");\n    auto b = split(n, \"\
    /\");\n    return (to!int(a[0]) * to!int(b[1])) % to!int(a[1]) == 0;\n}", "{\n\
    \    auto x_num = to!int(split(x, \"/\")[0]);\n    auto x_den = to!int(split(x,\
    \ \"/\")[1]);\n    auto n_num = to!int(split(n, \"/\")[0]);\n    auto n_den =\
    \ to!int(split(n, \"/\")[1]);\n    auto gcd = gcd(x_num * n_den, x_den * n_num);\n\
    \    return (x_num * n_den / gcd) % (x_den * n_num / gcd) == 0;\n}", "{\n    auto\
    \ x_n = split(x, '/');\n    auto n_n = split(n, '/');\n    auto x_n_n = to!int(x_n[0]);\n\
    \    auto x_d = to!int(x_n[1]);\n    auto n_n_n = to!int(n_n[0]);\n    auto n_d\
    \ = to!int(n_n[1]);\n    auto res = (x_n_n * n_n_n) / (x_d * n_d);\n    return\
    \ res % 1 == 0;\n}", "{\n    int x_numerator = to!int(split(x, \"/\")[0]);\n \
    \   int x_denominator = to!int(split(x, \"/\")[1]);\n    int n_numerator = to!int(split(n,\
    \ \"/\")[0]);\n    int n_denominator = to!int(split(n, \"/\")[1]);\n    return\
    \ (x_numerator * n_denominator * n_numerator * x_denominator) % (x_denominator\
    \ * n_denominator) == 0;\n}", "{\n    auto x_num = to!int(split(x, \"/\")[0]);\n\
    \    auto x_den = to!int(split(x, \"/\")[1]);\n    auto n_num = to!int(split(n,\
    \ \"/\")[0]);\n    auto n_den = to!int(split(n, \"/\")[1]);\n    auto num = x_num\
    \ * n_num;\n    auto den = x_den * n_den;\n    return num % den == 0;\n}", "{\n\
    \    auto x_numerator = to!int(split(x, \"/\")[0]);\n    auto x_denominator =\
    \ to!int(split(x, \"/\")[1]);\n    auto n_numerator = to!int(split(n, \"/\")[0]);\n\
    \    auto n_denominator = to!int(split(n, \"/\")[1]);\n    auto result = x_numerator\
    \ * n_numerator;\n    auto denominator = x_denominator * n_denominator;\n    return\
    \ result % denominator == 0;\n}", "{\n    auto x_num = to!int(split(x, \"/\")[0]);\n\
    \    auto x_den = to!int(split(x, \"/\")[1]);\n    auto n_num = to!int(split(n,\
    \ \"/\")[0]);\n    auto n_den = to!int(split(n, \"/\")[1]);\n    auto num = x_num\
    \ * n_num;\n    auto den = x_den * n_den;\n    return num % den == 0;\n}", "{\n\
    \    int x_num = to!int(split(x, \"/\")[0]);\n    int x_den = to!int(split(x,\
    \ \"/\")[1]);\n    int n_num = to!int(split(n, \"/\")[0]);\n    int n_den = to!int(split(n,\
    \ \"/\")[1]);\n    int num = x_num * n_num;\n    int den = x_den * n_den;\n  \
    \  return num % den == 0;\n}", "{\n    int a = to!int(split(x, \"/\")[0]);\n \
    \   int b = to!int(split(x, \"/\")[1]);\n    int c = to!int(split(n, \"/\")[0]);\n\
    \    int d = to!int(split(n, \"/\")[1]);\n    return (a * c) % (b * d) == 0;\n\
    }", "{\n    int num1 = to!int(split(x, \"/\")[0]);\n    int den1 = to!int(split(x,\
    \ \"/\")[1]);\n    int num2 = to!int(split(n, \"/\")[0]);\n    int den2 = to!int(split(n,\
    \ \"/\")[1]);\n    return (num1 * den2) % (den1 * num2) == 0;\n}", "{\n    auto\
    \ x_numerator = to!int(split(x, \"/\")[0]);\n    auto x_denominator = to!int(split(x,\
    \ \"/\")[1]);\n    auto n_numerator = to!int(split(n, \"/\")[0]);\n    auto n_denominator\
    \ = to!int(split(n, \"/\")[1]);\n    auto result = x_numerator * n_numerator;\n\
    \    auto denominator = x_denominator * n_denominator;\n    return denominator\
    \ % result == 0;\n}", "{\n    int x_numerator = to!int(x[0..x.find('/')]);\n \
    \   int x_denominator = to!int(x[x.find('/')+1..$]);\n    int n_numerator = to!int(n[0..n.find('/')]);\n\
    \    int n_denominator = to!int(n[n.find('/')+1..$]);\n    int result_numerator\
    \ = x_numerator * n_numerator;\n    int result_denominator = x_denominator * n_denominator;\n\
    \    int gcd = gcd(result_numerator, result_denominator);\n    result_numerator\
    \ /= gcd;\n    result_denominator /= gcd;\n    return result_denominator == 1;\n\
    }", "{\n    auto x_num = to!int(split(x, \"/\")[0]);\n    auto x_den = to!int(split(x,\
    \ \"/\")[1]);\n    auto n_num = to!int(split(n, \"/\")[0]);\n    auto n_den =\
    \ to!int(split(n, \"/\")[1]);\n    auto num = x_num * n_num;\n    auto den = x_den\
    \ * n_den;\n    auto gcd = gcd(num, den);\n    return den / gcd == num / gcd;\n\
    }", "{\n    auto x_ = split(x, \"/\");\n    auto n_ = split(n, \"/\");\n    auto\
    \ x_num = to!int(x_[0]);\n    auto x_den = to!int(x_[1]);\n    auto n_num = to!int(n_[0]);\n\
    \    auto n_den = to!int(n_[1]);\n    auto num = x_num * n_num;\n    auto den\
    \ = x_den * n_den;\n    return num % den == 0;\n}", "{\n    auto x_num = to!int(split(x,\
    \ \"/\")[0]);\n    auto x_den = to!int(split(x, \"/\")[1]);\n    auto n_num =\
    \ to!int(split(n, \"/\")[0]);\n    auto n_den = to!int(split(n, \"/\")[1]);\n\
    \    auto num = x_num * n_num;\n    auto den = x_den * n_den;\n    return num\
    \ % den == 0;\n}", "{\n    int a = to!int(split(x, \"/\")[0]);\n    int b = to!int(split(x,\
    \ \"/\")[1]);\n    int c = to!int(split(n, \"/\")[0]);\n    int d = to!int(split(n,\
    \ \"/\")[1]);\n    return (a * c) % (b * d) == 0;\n}", "{\n    int x_numerator\
    \ = to!int(split(x, \"/\")[0]);\n    int x_denominator = to!int(split(x, \"/\"\
    )[1]);\n    int n_numerator = to!int(split(n, \"/\")[0]);\n    int n_denominator\
    \ = to!int(split(n, \"/\")[1]);\n    return (x_numerator * n_denominator * n_numerator\
    \ * x_denominator) % (x_denominator * n_denominator) == 0;\n}", "{\n    auto x_numerator\
    \ = to!int(split(x, \"/\")[0]);\n    auto x_denominator = to!int(split(x, \"/\"\
    )[1]);\n    auto n_numerator = to!int(split(n, \"/\")[0]);\n    auto n_denominator\
    \ = to!int(split(n, \"/\")[1]);\n    auto result = x_numerator * n_numerator;\n\
    \    auto result_denominator = x_denominator * n_denominator;\n    return result\
    \ % result_denominator == 0;\n}", "{\n    int a = to!int(split(x, \"/\")[0]);\n\
    \    int b = to!int(split(x, \"/\")[1]);\n    int c = to!int(split(n, \"/\")[0]);\n\
    \    int d = to!int(split(n, \"/\")[1]);\n    return (a * c) % (b * d) == 0;\n\
    }", "{\n    int xn = to!int(split(x, \"/\")[0]);\n    int xd = to!int(split(x,\
    \ \"/\")[1]);\n    int nn = to!int(split(n, \"/\")[0]);\n    int nd = to!int(split(n,\
    \ \"/\")[1]);\n    return (xn * nn) % (xd * nd) == 0;\n}", "{\n    auto x_n =\
    \ split(x, '/');\n    auto n_n = split(n, '/');\n    auto x_n_num = to!int(x_n[0]);\n\
    \    auto x_n_den = to!int(x_n[1]);\n    auto n_n_num = to!int(n_n[0]);\n    auto\
    \ n_n_den = to!int(n_n[1]);\n    auto num = x_n_num * n_n_num;\n    auto den =\
    \ x_n_den * n_n_den;\n    return num % den == 0;\n}", "{\n    int x_numerator\
    \ = to!int(x[0..x.find('/')]);\n    int x_denominator = to!int(x[x.find('/')+1..$]);\n\
    \    int n_numerator = to!int(n[0..n.find('/')]);\n    int n_denominator = to!int(n[n.find('/')+1..$]);\n\
    \    int numerator = x_numerator * n_numerator;\n    int denominator = x_denominator\
    \ * n_denominator;\n    return numerator % denominator == 0;\n}", "{\n    int\
    \ x_numerator = to!int(split(x, \"/\")[0]);\n    int x_denominator = to!int(split(x,\
    \ \"/\")[1]);\n    int n_numerator = to!int(split(n, \"/\")[0]);\n    int n_denominator\
    \ = to!int(split(n, \"/\")[1]);\n    int numerator = x_numerator * n_numerator;\n\
    \    int denominator = x_denominator * n_denominator;\n    return (numerator %\
    \ denominator == 0);\n}", "{\n    auto x_num = to!int(split(x, \"/\")[0]);\n \
    \   auto x_den = to!int(split(x, \"/\")[1]);\n    auto n_num = to!int(split(n,\
    \ \"/\")[0]);\n    auto n_den = to!int(split(n, \"/\")[1]);\n    auto num = x_num\
    \ * n_num;\n    auto den = x_den * n_den;\n    return num % den == 0;\n}", "{\n\
    \    auto x_numerator = to!int(split(x, \"/\")[0]);\n    auto x_denominator =\
    \ to!int(split(x, \"/\")[1]);\n    auto n_numerator = to!int(split(n, \"/\")[0]);\n\
    \    auto n_denominator = to!int(split(n, \"/\")[1]);\n    auto result = x_numerator\
    \ * n_numerator;\n    auto result_denominator = x_denominator * n_denominator;\n\
    \    return result % result_denominator == 0;\n}", "{\n    int x_numerator = to!int(split(x,\
    \ \"/\")[0]);\n    int x_denominator = to!int(split(x, \"/\")[1]);\n    int n_numerator\
    \ = to!int(split(n, \"/\")[0]);\n    int n_denominator = to!int(split(n, \"/\"\
    )[1]);\n    int numerator = x_numerator * n_numerator;\n    int denominator =\
    \ x_denominator * n_denominator;\n    return denominator % numerator == 0;\n}",
  "{\n    int num = to!int(split(x, \"/\")[0]);\n    int den = to!int(split(x, \"\
    /\")[1]);\n    int num2 = to!int(split(n, \"/\")[0]);\n    int den2 = to!int(split(n,\
    \ \"/\")[1]);\n    int num3 = num * num2;\n    int den3 = den * den2;\n    int\
    \ gcd = gcd(num3, den3);\n    num3 /= gcd;\n    den3 /= gcd;\n    return num3\
    \ % den3 == 0;\n}", "{\n    // your code here\n    int x_numerator = to!int(x[0..x.find(\"\
    /\")]);\n    int x_denominator = to!int(x[x.find(\"/\")+1..$]);\n    int n_numerator\
    \ = to!int(n[0..n.find(\"/\")]);\n    int n_denominator = to!int(n[n.find(\"/\"\
    )+1..$]);\n    int numerator = x_numerator * n_numerator;\n    int denominator\
    \ = x_denominator * n_denominator;\n    int gcd = gcd(numerator, denominator);\n\
    \    return denominator / gcd == 1;\n}", "{\n    int num1 = to!int(split(x, \"\
    /\")[0]);\n    int den1 = to!int(split(x, \"/\")[1]);\n    int num2 = to!int(split(n,\
    \ \"/\")[0]);\n    int den2 = to!int(split(n, \"/\")[1]);\n    int num = num1\
    \ * num2;\n    int den = den1 * den2;\n    int gcd = gcd(num, den);\n    num /=\
    \ gcd;\n    den /= gcd;\n    return num % den == 0;\n}", "{\n    auto x_numerator\
    \ = to!int(split(x, \"/\")[0]);\n    auto x_denominator = to!int(split(x, \"/\"\
    )[1]);\n    auto n_numerator = to!int(split(n, \"/\")[0]);\n    auto n_denominator\
    \ = to!int(split(n, \"/\")[1]);\n    auto numerator = x_numerator * n_numerator;\n\
    \    auto denominator = x_denominator * n_denominator;\n    return numerator %\
    \ denominator == 0;\n}", "{\n    int x_numerator = to!int(split(x, \"/\")[0]);\n\
    \    int x_denominator = to!int(split(x, \"/\")[1]);\n    int n_numerator = to!int(split(n,\
    \ \"/\")[0]);\n    int n_denominator = to!int(split(n, \"/\")[1]);\n    int result_numerator\
    \ = x_numerator * n_numerator;\n    int result_denominator = x_denominator * n_denominator;\n\
    \    int gcd = gcd(result_numerator, result_denominator);\n    return result_numerator\
    \ % gcd == 0 && result_denominator % gcd == 0;\n}", "{\n    auto x_n = split(x,\
    \ '/');\n    auto n_n = split(n, '/');\n    auto x_n_n = to!int(x_n[0]);\n   \
    \ auto x_d = to!int(x_n[1]);\n    auto n_n_n = to!int(n_n[0]);\n    auto n_d =\
    \ to!int(n_n[1]);\n    auto numerator = x_n_n * n_n_n;\n    auto denominator =\
    \ x_d * n_d;\n    return numerator % denominator == 0;\n}", "{\n    int x_numerator\
    \ = to!int(split(x, \"/\")[0]);\n    int x_denominator = to!int(split(x, \"/\"\
    )[1]);\n    int n_numerator = to!int(split(n, \"/\")[0]);\n    int n_denominator\
    \ = to!int(split(n, \"/\")[1]);\n    return (x_numerator * n_denominator * n_numerator\
    \ * x_denominator) % (x_denominator * n_denominator) == 0;\n}", "{\n    int x_num\
    \ = to!int(split(x, \"/\")[0]);\n    int x_den = to!int(split(x, \"/\")[1]);\n\
    \    int n_num = to!int(split(n, \"/\")[0]);\n    int n_den = to!int(split(n,\
    \ \"/\")[1]);\n    int num = x_num * n_num;\n    int den = x_den * n_den;\n  \
    \  return num % den == 0;\n}", "{\n    int x_numerator = to!int(split(x, \"/\"\
    )[0]);\n    int x_denominator = to!int(split(x, \"/\")[1]);\n    int n_numerator\
    \ = to!int(split(n, \"/\")[0]);\n    int n_denominator = to!int(split(n, \"/\"\
    )[1]);\n    return (x_numerator * n_denominator * n_numerator * x_denominator)\
    \ % (x_denominator * n_denominator) == 0;\n}", "{\n    int x_num = to!int(split(x,\
    \ \"/\")[0]);\n    int x_den = to!int(split(x, \"/\")[1]);\n    int n_num = to!int(split(n,\
    \ \"/\")[0]);\n    int n_den = to!int(split(n, \"/\")[1]);\n    int num = x_num\
    \ * n_num;\n    int den = x_den * n_den;\n    return (num % den == 0);\n}", "{\n\
    \    int x_num = to!int(split(x, \"/\")[0]);\n    int x_den = to!int(split(x,\
    \ \"/\")[1]);\n    int n_num = to!int(split(n, \"/\")[0]);\n    int n_den = to!int(split(n,\
    \ \"/\")[1]);\n    return (x_num * n_num) % (x_den * n_den) == 0;\n}", "{\n  \
    \  auto x_numerator = to!int(split(x, \"/\")[0]);\n    auto x_denominator = to!int(split(x,\
    \ \"/\")[1]);\n    auto n_numerator = to!int(split(n, \"/\")[0]);\n    auto n_denominator\
    \ = to!int(split(n, \"/\")[1]);\n    auto result = x_numerator * n_numerator;\n\
    \    auto denominator = x_denominator * n_denominator;\n    return denominator\
    \ % result == 0;\n}", "{\n    int x_numerator = to!int(split(x, \"/\")[0]);\n\
    \    int x_denominator = to!int(split(x, \"/\")[1]);\n    int n_numerator = to!int(split(n,\
    \ \"/\")[0]);\n    int n_denominator = to!int(split(n, \"/\")[1]);\n    return\
    \ (x_numerator * n_denominator * n_numerator * x_denominator) % (x_denominator\
    \ * n_denominator) == 0;\n}", "{\n    int x_numerator = to!int(x[0..x.find('/')]);\n\
    \    int x_denominator = to!int(x[x.find('/')+1..$]);\n    int n_numerator = to!int(n[0..n.find('/')]);\n\
    \    int n_denominator = to!int(n[n.find('/')+1..$]);\n    int result_numerator\
    \ = x_numerator * n_numerator;\n    int result_denominator = x_denominator * n_denominator;\n\
    \    return result_numerator % result_denominator == 0;\n}", "{\n    auto x_num\
    \ = to!int(split(x, \"/\")[0]);\n    auto x_den = to!int(split(x, \"/\")[1]);\n\
    \    auto n_num = to!int(split(n, \"/\")[0]);\n    auto n_den = to!int(split(n,\
    \ \"/\")[1]);\n    auto num = x_num * n_num;\n    auto den = x_den * n_den;\n\
    \    return num % den == 0;\n}", "{\n    auto x_numerator = to!int(split(x, \"\
    /\")[0]);\n    auto x_denominator = to!int(split(x, \"/\")[1]);\n    auto n_numerator\
    \ = to!int(split(n, \"/\")[0]);\n    auto n_denominator = to!int(split(n, \"/\"\
    )[1]);\n    auto result = (x_numerator * n_numerator) / (x_denominator * n_denominator);\n\
    \    return result == floor(result);\n}", "{\n    int xn = to!int(split(x,\"/\"\
    )[0]);\n    int xd = to!int(split(x,\"/\")[1]);\n    int nn = to!int(split(n,\"\
    /\")[0]);\n    int nd = to!int(split(n,\"/\")[1]);\n    return (xn*nd)%(xd*nn)\
    \ == 0;\n}", "{\n    auto x_num = to!int(split(x, \"/\")[0]);\n    auto x_den\
    \ = to!int(split(x, \"/\")[1]);\n    auto n_num = to!int(split(n, \"/\")[0]);\n\
    \    auto n_den = to!int(split(n, \"/\")[1]);\n    return (x_num * n_num) % (x_den\
    \ * n_den) == 0;\n}", "{\n    int x_numerator = to!int(split(x, \"/\")[0]);\n\
    \    int x_denominator = to!int(split(x, \"/\")[1]);\n    int n_numerator = to!int(split(n,\
    \ \"/\")[0]);\n    int n_denominator = to!int(split(n, \"/\")[1]);\n    return\
    \ (x_numerator * n_denominator * n_numerator * x_denominator) % (x_denominator\
    \ * n_denominator) == 0;\n}", "{\n    int xn = to!int(x.split(\"/\")[0]);\n  \
    \  int xd = to!int(x.split(\"/\")[1]);\n    int nn = to!int(n.split(\"/\")[0]);\n\
    \    int nd = to!int(n.split(\"/\")[1]);\n    return (xn * nd) % (xd * nn) ==\
    \ 0;\n}", "{\n    int xn = to!int(split(x, \"/\")[0]);\n    int xd = to!int(split(x,\
    \ \"/\")[1]);\n    int nn = to!int(split(n, \"/\")[0]);\n    int nd = to!int(split(n,\
    \ \"/\")[1]);\n    return (xn * nn) % (xd * nd) == 0;\n}", "{\n    // your code\
    \ here\n    int x1 = to!int(split(x,\"/\")[0]);\n    int x2 = to!int(split(x,\"\
    /\")[1]);\n    int n1 = to!int(split(n,\"/\")[0]);\n    int n2 = to!int(split(n,\"\
    /\")[1]);\n    return (x1*n2)%(x2*n1) == 0;\n}", "{\n    int x_num, x_den, n_num,\
    \ n_den;\n    int i = 0;\n    string num, den;\n    while(x[i] != '/')\n    {\n\
    \        num += x[i];\n        i++;\n    }\n    i++;\n    while(i < x.length())\n\
    \    {\n        den += x[i];\n        i++;\n    }\n    x_num = to!int(num);\n\
    \    x_den = to!int(den);\n    i = 0;\n    num = \"\";\n    den = \"\";\n    while(n[i]\
    \ != '/')\n    {\n        num += n[i];\n        i++;\n    }\n    i++;\n    while(i\
    \ < n.length())\n    {\n        den += n[i];\n        i++;\n    }\n    n_num =\
    \ to!int(num);\n    n_den = to!int(den);\n    int x_num_new = x_num * n_num;\n\
    \    int x_den_new = x_den * n_den;\n    int gcd = gcd(x_num_new, x_den_new);\n\
    \    x_num_new /= gcd;\n    x_den_new /= gcd;\n    if(x_num_new % x_den_new ==\
    \ 0)\n        return true;\n    else\n        return false;\n}", "{\n    int x_num\
    \ = to!int(split(x, \"/\")[0]);\n    int x_den = to!int(split(x, \"/\")[1]);\n\
    \    int n_num = to!int(split(n, \"/\")[0]);\n    int n_den = to!int(split(n,\
    \ \"/\")[1]);\n    int num = x_num * n_num;\n    int den = x_den * n_den;\n  \
    \  return num % den == 0;\n}", "{\n    int xn = to!int(split(x, \"/\")[0]);\n\
    \    int xd = to!int(split(x, \"/\")[1]);\n    int nn = to!int(split(n, \"/\"\
    )[0]);\n    int nd = to!int(split(n, \"/\")[1]);\n    return (xn * nn) % (xd *\
    \ nd) == 0;\n}", "{\n    auto x_numerator = to!int(split(x, \"/\")[0]);\n    auto\
    \ x_denominator = to!int(split(x, \"/\")[1]);\n    auto n_numerator = to!int(split(n,\
    \ \"/\")[0]);\n    auto n_denominator = to!int(split(n, \"/\")[1]);\n    auto\
    \ result = x_numerator * n_numerator;\n    auto result_denominator = x_denominator\
    \ * n_denominator;\n    return result % result_denominator == 0;\n}", "{\n   \
    \ int x_numerator = stoi(x.substr(0, x.find(\"/\")));\n    int x_denominator =\
    \ stoi(x.substr(x.find(\"/\") + 1));\n    int n_numerator = stoi(n.substr(0, n.find(\"\
    /\")));\n    int n_denominator = stoi(n.substr(n.find(\"/\") + 1));\n    return\
    \ (x_numerator * n_denominator * n_numerator * x_denominator) % (x_denominator\
    \ * n_denominator) == 0;\n}", "{\n    int a = to!int(split(x, \"/\")[0]);\n  \
    \  int b = to!int(split(x, \"/\")[1]);\n    int c = to!int(split(n, \"/\")[0]);\n\
    \    int d = to!int(split(n, \"/\")[1]);\n    return (a * c) % (b * d) == 0;\n\
    }", "{\n    int x_num = to!int(split(x, \"/\")[0]);\n    int x_den = to!int(split(x,\
    \ \"/\")[1]);\n    int n_num = to!int(split(n, \"/\")[0]);\n    int n_den = to!int(split(n,\
    \ \"/\")[1]);\n    return (x_num * n_den) % (x_den * n_num) == 0;\n}", "{\n  \
    \  auto x_num = to!int(split(x, \"/\")[0]);\n    auto x_den = to!int(split(x,\
    \ \"/\")[1]);\n    auto n_num = to!int(split(n, \"/\")[0]);\n    auto n_den =\
    \ to!int(split(n, \"/\")[1]);\n    auto gcd = gcd(x_num * n_den, x_den * n_num);\n\
    \    return (x_num * n_den / gcd) % (x_den * n_num / gcd) == 0;\n}", "{\n    auto\
    \ x_n = split(x, '/');\n    auto n_n = split(n, '/');\n    auto x_n_n = to!int(x_n[0]);\n\
    \    auto x_d = to!int(x_n[1]);\n    auto n_n_n = to!int(n_n[0]);\n    auto n_d\
    \ = to!int(n_n[1]);\n    auto num = x_n_n * n_n_n;\n    auto den = x_d * n_d;\n\
    \    return num % den == 0;\n}", "{\n    int x_numerator = to!int(split(x, \"\
    /\")[0]);\n    int x_denominator = to!int(split(x, \"/\")[1]);\n    int n_numerator\
    \ = to!int(split(n, \"/\")[0]);\n    int n_denominator = to!int(split(n, \"/\"\
    )[1]);\n    return (x_numerator * n_denominator * n_numerator * x_denominator)\
    \ % (x_denominator * n_denominator) == 0;\n}", "{\n    auto x_numerator = to!int(split(x,\
    \ \"/\")[0]);\n    auto x_denominator = to!int(split(x, \"/\")[1]);\n    auto\
    \ n_numerator = to!int(split(n, \"/\")[0]);\n    auto n_denominator = to!int(split(n,\
    \ \"/\")[1]);\n    auto result = x_numerator * n_numerator;\n    auto denominator\
    \ = x_denominator * n_denominator;\n    return denominator % result == 0;\n}",
  "{\n    int xn = to!int(split(x,\"/\")[0]);\n    int xd = to!int(split(x,\"/\")[1]);\n\
    \    int nn = to!int(split(n,\"/\")[0]);\n    int nd = to!int(split(n,\"/\")[1]);\n\
    \    return (xn * nd) % (xd * nn) == 0;\n}", "{\n    auto x_numerator = to!int(split(x,\
    \ \"/\")[0]);\n    auto x_denominator = to!int(split(x, \"/\")[1]);\n    auto\
    \ n_numerator = to!int(split(n, \"/\")[0]);\n    auto n_denominator = to!int(split(n,\
    \ \"/\")[1]);\n    auto result = x_numerator * n_numerator;\n    auto divisor\
    \ = x_denominator * n_denominator;\n    return result % divisor == 0;\n}", "{\n\
    \    int x_num = to!int(split(x, \"/\")[0]);\n    int x_den = to!int(split(x,\
    \ \"/\")[1]);\n    int n_num = to!int(split(n, \"/\")[0]);\n    int n_den = to!int(split(n,\
    \ \"/\")[1]);\n    int num = x_num * n_num;\n    int den = x_den * n_den;\n  \
    \  return num % den == 0;\n}", "{\n    int xn = to!int(split(x, \"/\")[0]);\n\
    \    int xd = to!int(split(x, \"/\")[1]);\n    int nn = to!int(split(n, \"/\"\
    )[0]);\n    int nd = to!int(split(n, \"/\")[1]);\n    return (xn * nn) % (xd *\
    \ nd) == 0;\n}", "{\n    int x_num = to!int(split(x, \"/\")[0]);\n    int x_den\
    \ = to!int(split(x, \"/\")[1]);\n    int n_num = to!int(split(n, \"/\")[0]);\n\
    \    int n_den = to!int(split(n, \"/\")[1]);\n    return (x_num * n_den) % (x_den\
    \ * n_num) == 0;\n}", "{\n    // your code here\n    int num1, num2, den1, den2;\n\
    \    int i = x.find('/');\n    num1 = to!int(x[0..i]);\n    den1 = to!int(x[i+1..$]);\n\
    \    i = n.find('/');\n    num2 = to!int(n[0..i]);\n    den2 = to!int(n[i+1..$]);\n\
    \    int num = num1 * num2;\n    int den = den1 * den2;\n    return num % den\
    \ == 0;\n}", "{\n    int x_numerator = to!int(split(x, \"/\")[0]);\n    int x_denominator\
    \ = to!int(split(x, \"/\")[1]);\n    int n_numerator = to!int(split(n, \"/\")[0]);\n\
    \    int n_denominator = to!int(split(n, \"/\")[1]);\n    int result_numerator\
    \ = x_numerator * n_numerator;\n    int result_denominator = x_denominator * n_denominator;\n\
    \    int gcd = gcd(result_numerator, result_denominator);\n    return result_numerator\
    \ % result_denominator == 0;\n}", "{\n    auto x_numerator = x.split(\"/\")[0].to!int;\n\
    \    auto x_denominator = x.split(\"/\")[1].to!int;\n    auto n_numerator = n.split(\"\
    /\")[0].to!int;\n    auto n_denominator = n.split(\"/\")[1].to!int;\n    auto\
    \ result = x_numerator * n_numerator;\n    auto result_denominator = x_denominator\
    \ * n_denominator;\n    return result % result_denominator == 0;\n}", "{\n   \
    \ int x_numerator = to!int(split(x, \"/\")[0]);\n    int x_denominator = to!int(split(x,\
    \ \"/\")[1]);\n    int n_numerator = to!int(split(n, \"/\")[0]);\n    int n_denominator\
    \ = to!int(split(n, \"/\")[1]);\n    int numerator = x_numerator * n_numerator;\n\
    \    int denominator = x_denominator * n_denominator;\n    return denominator\
    \ % numerator == 0;\n}", "{\n    int x_numerator = to!int(split(x, \"/\")[0]);\n\
    \    int x_denominator = to!int(split(x, \"/\")[1]);\n    int n_numerator = to!int(split(n,\
    \ \"/\")[0]);\n    int n_denominator = to!int(split(n, \"/\")[1]);\n    return\
    \ (x_numerator * n_denominator) % (x_denominator * n_numerator) == 0;\n}", "{\n\
    \    auto x_n = split(x, '/');\n    auto x_n_n = split(n, '/');\n    auto x_n_n_n\
    \ = to!double(x_n[0]) * to!double(x_n_n[0]);\n    auto x_n_d = to!double(x_n[1])\
    \ * to!double(x_n_n[1]);\n    return x_n_n_n / x_n_d == floor(x_n_n_n / x_n_d);\n\
    }", "{\n    // your code here\n    int x_num = to!int(x.split(\"/\")[0]);\n  \
    \  int x_den = to!int(x.split(\"/\")[1]);\n    int n_num = to!int(n.split(\"/\"\
    )[0]);\n    int n_den = to!int(n.split(\"/\")[1]);\n    int num = x_num * n_num;\n\
    \    int den = x_den * n_den;\n    if(num % den == 0)\n        return true;\n\
    \    return false;\n}", "{\n    auto x_ = split(x, \"/\");\n    auto n_ = split(n,\
    \ \"/\");\n    auto x_n = to!int(x_[0]) * to!int(n_[1]);\n    auto n_x = to!int(n_[0])\
    \ * to!int(x_[1]);\n    return x_n % n_x == 0;\n}", "{\n    auto x_numerator =\
    \ to!int(split(x, \"/\")[0]);\n    auto x_denominator = to!int(split(x, \"/\"\
    )[1]);\n    auto n_numerator = to!int(split(n, \"/\")[0]);\n    auto n_denominator\
    \ = to!int(split(n, \"/\")[1]);\n    auto result = x_numerator * n_numerator;\n\
    \    auto denominator = x_denominator * n_denominator;\n    return denominator\
    \ % result == 0;\n}", "{\n    int a = to!int(split(x, \"/\")[0]);\n    int b =\
    \ to!int(split(x, \"/\")[1]);\n    int c = to!int(split(n, \"/\")[0]);\n    int\
    \ d = to!int(split(n, \"/\")[1]);\n    return (a * c) % (b * d) == 0;\n}", "{\n\
    \    int x_numerator = to!int(split(x, \"/\")[0]);\n    int x_denominator = to!int(split(x,\
    \ \"/\")[1]);\n    int n_numerator = to!int(split(n, \"/\")[0]);\n    int n_denominator\
    \ = to!int(split(n, \"/\")[1]);\n    int result_numerator = x_numerator * n_numerator;\n\
    \    int result_denominator = x_denominator * n_denominator;\n    return result_numerator\
    \ % result_denominator == 0;\n}", "{\n    int x1 = stoi(x.substr(0, x.find('/')));\n\
    \    int x2 = stoi(x.substr(x.find('/') + 1));\n    int n1 = stoi(n.substr(0,\
    \ n.find('/')));\n    int n2 = stoi(n.substr(n.find('/') + 1));\n    return (x1\
    \ * n2) % (x2 * n1) == 0;\n}", "{\n    int x_numerator = to!int(x[0..x.find('/')]);\n\
    \    int x_denominator = to!int(x[x.find('/')+1..$]);\n    int n_numerator = to!int(n[0..n.find('/')]);\n\
    \    int n_denominator = to!int(n[n.find('/')+1..$]);\n    int result_numerator\
    \ = x_numerator * n_numerator;\n    int result_denominator = x_denominator * n_denominator;\n\
    \    int gcd = gcd(result_numerator, result_denominator);\n    result_numerator\
    \ /= gcd;\n    result_denominator /= gcd;\n    return result_denominator == 1;\n\
    }", "{\n    int x_num = to!int(split(x, \"/\")[0]);\n    int x_den = to!int(split(x,\
    \ \"/\")[1]);\n    int n_num = to!int(split(n, \"/\")[0]);\n    int n_den = to!int(split(n,\
    \ \"/\")[1]);\n    int num = x_num * n_num;\n    int den = x_den * n_den;\n  \
    \  return num % den == 0;\n}", "{\n    auto x_n = split(x, '/');\n    auto n_n\
    \ = split(n, '/');\n    auto x_n_n = to!int(x_n[0]);\n    auto x_d = to!int(x_n[1]);\n\
    \    auto n_n_n = to!int(n_n[0]);\n    auto n_d = to!int(n_n[1]);\n    auto res\
    \ = x_n_n * n_n_n;\n    auto res_d = x_d * n_d;\n    return res % res_d == 0;\n\
    }", "{\n    // your code here\n    int x_numerator = to!int(x[0..x.find('/')]);\n\
    \    int x_denominator = to!int(x[x.find('/')+1..$]);\n    int n_numerator = to!int(n[0..n.find('/')]);\n\
    \    int n_denominator = to!int(n[n.find('/')+1..$]);\n    return (x_numerator\
    \ * n_denominator * n_numerator * x_denominator) % (x_denominator * n_denominator)\
    \ == 0;\n}", "{\n    int a = to!int(split(x, \"/\")[0]);\n    int b = to!int(split(x,\
    \ \"/\")[1]);\n    int c = to!int(split(n, \"/\")[0]);\n    int d = to!int(split(n,\
    \ \"/\")[1]);\n    return (a * c) % (b * d) == 0;\n}", "{\n    auto x_num = to!int(split(x,\
    \ \"/\")[0]);\n    auto x_den = to!int(split(x, \"/\")[1]);\n    auto n_num =\
    \ to!int(split(n, \"/\")[0]);\n    auto n_den = to!int(split(n, \"/\")[1]);\n\
    \    auto num = x_num * n_num;\n    auto den = x_den * n_den;\n    return num\
    \ % den == 0;\n}", "{\n    int x1, x2, n1, n2;\n    auto pos = x.find(\"/\");\n\
    \    x1 = stoi(x.substr(0, pos));\n    x2 = stoi(x.substr(pos + 1));\n    pos\
    \ = n.find(\"/\");\n    n1 = stoi(n.substr(0, pos));\n    n2 = stoi(n.substr(pos\
    \ + 1));\n    return (x1 * n2) % (x2 * n1) == 0;\n}", "{\n    int x1 = stoi(x.substr(0,\
    \ x.find(\"/\")));\n    int x2 = stoi(x.substr(x.find(\"/\") + 1));\n    int n1\
    \ = stoi(n.substr(0, n.find(\"/\")));\n    int n2 = stoi(n.substr(n.find(\"/\"\
    ) + 1));\n    return (x1 * n2) % (x2 * n1) == 0;\n}", "{\n    auto x_num = to!int(split(x,\
    \ \"/\")[0]);\n    auto x_den = to!int(split(x, \"/\")[1]);\n    auto n_num =\
    \ to!int(split(n, \"/\")[0]);\n    auto n_den = to!int(split(n, \"/\")[1]);\n\
    \    return (x_num * n_num) % (x_den * n_den) == 0;\n}", "{\n    int x_num = to!int(split(x,\
    \ \"/\")[0]);\n    int x_den = to!int(split(x, \"/\")[1]);\n    int n_num = to!int(split(n,\
    \ \"/\")[0]);\n    int n_den = to!int(split(n, \"/\")[1]);\n    int num = x_num\
    \ * n_num;\n    int den = x_den * n_den;\n    return num % den == 0;\n}", "{\n\
    \    auto x_n = split(x, '/');\n    auto n_n = split(n, '/');\n    return (to!int(x_n[0])\
    \ * to!int(n_n[1])) % to!int(n_n[0]) == 0;\n}", "{\n    auto a = split(x, \"/\"\
    );\n    auto b = split(n, \"/\");\n    return (to!int(a[0]) * to!int(b[1])) %\
    \ to!int(a[1]) == 0;\n}", "{\n    auto x_num = to!int(split(x, \"/\")[0]);\n \
    \   auto x_den = to!int(split(x, \"/\")[1]);\n    auto n_num = to!int(split(n,\
    \ \"/\")[0]);\n    auto n_den = to!int(split(n, \"/\")[1]);\n    auto num = x_num\
    \ * n_num;\n    auto den = x_den * n_den;\n    return num % den == 0;\n}", "{\n\
    \    // your code here\n    auto x_numerator = to!int(split(x, \"/\")[0]);\n \
    \   auto x_denominator = to!int(split(x, \"/\")[1]);\n    auto n_numerator = to!int(split(n,\
    \ \"/\")[0]);\n    auto n_denominator = to!int(split(n, \"/\")[1]);\n    auto\
    \ result = (x_numerator * n_numerator) / (x_denominator * n_denominator);\n  \
    \  return result.isInteger;\n}", "{\n    int x_num = to!int(split(x, \"/\")[0]);\n\
    \    int x_den = to!int(split(x, \"/\")[1]);\n    int n_num = to!int(split(n,\
    \ \"/\")[0]);\n    int n_den = to!int(split(n, \"/\")[1]);\n    int num = x_num\
    \ * n_num;\n    int den = x_den * n_den;\n    return num % den == 0;\n}", "{\n\
    \    auto x_numerator = to!int(x.split(\"/\")[0]);\n    auto x_denominator = to!int(x.split(\"\
    /\")[1]);\n    auto n_numerator = to!int(n.split(\"/\")[0]);\n    auto n_denominator\
    \ = to!int(n.split(\"/\")[1]);\n    auto result = x_numerator * n_numerator;\n\
    \    auto denominator = x_denominator * n_denominator;\n    return result % denominator\
    \ == 0;\n}", "{\n    int num1 = to!int(split(x, \"/\")[0]);\n    int den1 = to!int(split(x,\
    \ \"/\")[1]);\n    int num2 = to!int(split(n, \"/\")[0]);\n    int den2 = to!int(split(n,\
    \ \"/\")[1]);\n    int num = num1 * num2;\n    int den = den1 * den2;\n    return\
    \ num % den == 0;\n}", "{\n    auto x_numerator = to!int(split(x, \"/\")[0]);\n\
    \    auto x_denominator = to!int(split(x, \"/\")[1]);\n    auto n_numerator =\
    \ to!int(split(n, \"/\")[0]);\n    auto n_denominator = to!int(split(n, \"/\"\
    )[1]);\n    auto result = x_numerator * n_numerator;\n    auto result_denominator\
    \ = x_denominator * n_denominator;\n    return result % result_denominator ==\
    \ 0;\n}", "{\n    return (to!double(x) * to!double(n)) % 1 == 0;\n}", "{\n   \
    \ auto x_numerator = to!int(split(x, \"/\")[0]);\n    auto x_denominator = to!int(split(x,\
    \ \"/\")[1]);\n    auto n_numerator = to!int(split(n, \"/\")[0]);\n    auto n_denominator\
    \ = to!int(split(n, \"/\")[1]);\n    auto result = x_numerator * n_numerator;\n\
    \    auto denominator = x_denominator * n_denominator;\n    return denominator\
    \ % result == 0;\n}", "{\n    auto x_n = split(x, '/');\n    auto x_d = split(n,\
    \ '/');\n    auto x_n_n = to!int(x_n[0]);\n    auto x_n_d = to!int(x_n[1]);\n\
    \    auto x_d_n = to!int(x_d[0]);\n    auto x_d_d = to!int(x_d[1]);\n    auto\
    \ n_n = x_n_n * x_d_d;\n    auto n_d = x_n_d * x_d_n;\n    auto gcd = gcd(n_n,\
    \ n_d);\n    n_n /= gcd;\n    n_d /= gcd;\n    return n_d == 1;\n}", "{\n    auto\
    \ x_num = to!int(split(x, \"/\")[0]);\n    auto x_den = to!int(split(x, \"/\"\
    )[1]);\n    auto n_num = to!int(split(n, \"/\")[0]);\n    auto n_den = to!int(split(n,\
    \ \"/\")[1]);\n    return x_num * n_num % (x_den * n_den) == 0;\n}", "{\n    int\
    \ x_numerator = to!int(split(x, \"/\")[0]);\n    int x_denominator = to!int(split(x,\
    \ \"/\")[1]);\n    int n_numerator = to!int(split(n, \"/\")[0]);\n    int n_denominator\
    \ = to!int(split(n, \"/\")[1]);\n    return (x_numerator * n_denominator * n_numerator\
    \ * x_denominator) % (x_denominator * n_denominator) == 0;\n}", "{\n    int x_numerator\
    \ = to!int(split(x, \"/\")[0]);\n    int x_denominator = to!int(split(x, \"/\"\
    )[1]);\n    int n_numerator = to!int(split(n, \"/\")[0]);\n    int n_denominator\
    \ = to!int(split(n, \"/\")[1]);\n    return (x_numerator * n_denominator * n_numerator\
    \ * x_denominator) % (x_denominator * n_denominator) == 0;\n}", "{\n    auto x_num\
    \ = to!int(split(x, \"/\")[0]);\n    auto x_den = to!int(split(x, \"/\")[1]);\n\
    \    auto n_num = to!int(split(n, \"/\")[0]);\n    auto n_den = to!int(split(n,\
    \ \"/\")[1]);\n    auto num = x_num * n_num;\n    auto den = x_den * n_den;\n\
    \    auto gcd = gcd(num, den);\n    return num / gcd == den / gcd;\n}", "{\n \
    \   return (to!double(x) * to!double(n)) % 1 == 0;\n}", "{\n    auto x_n = split(x,\
    \ '/');\n    auto n_n = split(n, '/');\n    auto x_num = to!int(x_n[0]);\n   \
    \ auto x_den = to!int(x_n[1]);\n    auto n_num = to!int(n_n[0]);\n    auto n_den\
    \ = to!int(n_n[1]);\n    auto num = x_num * n_num;\n    auto den = x_den * n_den;\n\
    \    return num % den == 0;\n}", "{\n    int xn = to!int(split(x, \"/\")[0]);\n\
    \    int xd = to!int(split(x, \"/\")[1]);\n    int nn = to!int(split(n, \"/\"\
    )[0]);\n    int nd = to!int(split(n, \"/\")[1]);\n    return (xn * nn) % (xd *\
    \ nd) == 0;\n}", "{\n    int x_numerator = to!int(split(x, \"/\")[0]);\n    int\
    \ x_denominator = to!int(split(x, \"/\")[1]);\n    int n_numerator = to!int(split(n,\
    \ \"/\")[0]);\n    int n_denominator = to!int(split(n, \"/\")[1]);\n    double\
    \ x_double = x_numerator / cast(double)x_denominator;\n    double n_double = n_numerator\
    \ / cast(double)n_denominator;\n    double result = x_double * n_double;\n   \
    \ return result == cast(int)result;\n}", "{\n    auto x_numerator = to!int(split(x,\
    \ \"/\")[0]);\n    auto x_denominator = to!int(split(x, \"/\")[1]);\n    auto\
    \ n_numerator = to!int(split(n, \"/\")[0]);\n    auto n_denominator = to!int(split(n,\
    \ \"/\")[1]);\n    auto result = x_numerator * n_numerator;\n    auto result_denominator\
    \ = x_denominator * n_denominator;\n    return result % result_denominator ==\
    \ 0;\n}", "{\n    int num1 = to!int(split(x, \"/\")[0]);\n    int den1 = to!int(split(x,\
    \ \"/\")[1]);\n    int num2 = to!int(split(n, \"/\")[0]);\n    int den2 = to!int(split(n,\
    \ \"/\")[1]);\n    int num = num1 * num2;\n    int den = den1 * den2;\n    return\
    \ den % num == 0;\n}", "{\n    auto x_num = to!int(split(x, \"/\")[0]);\n    auto\
    \ x_den = to!int(split(x, \"/\")[1]);\n    auto n_num = to!int(split(n, \"/\"\
    )[0]);\n    auto n_den = to!int(split(n, \"/\")[1]);\n    return (x_num * n_num)\
    \ % (x_den * n_den) == 0;\n}", "{\n    auto x_numerator = to!int(x.split(\"/\"\
    )[0]);\n    auto x_denominator = to!int(x.split(\"/\")[1]);\n    auto n_numerator\
    \ = to!int(n.split(\"/\")[0]);\n    auto n_denominator = to!int(n.split(\"/\"\
    )[1]);\n    auto result = x_numerator * n_numerator;\n    auto result_denominator\
    \ = x_denominator * n_denominator;\n    return result % result_denominator ==\
    \ 0;\n}", "{\n    int xn = to!int(x.split(\"/\")[0]);\n    int xd = to!int(x.split(\"\
    /\")[1]);\n    int nn = to!int(n.split(\"/\")[0]);\n    int nd = to!int(n.split(\"\
    /\")[1]);\n    int gcd = gcd(xd, nd);\n    int lcm = (xd * nd) / gcd;\n    int\
    \ num = (xn * lcm) / xd;\n    int den = (nn * lcm) / nd;\n    return num % den\
    \ == 0;\n}", "{\n    auto x_numerator = to!int(split(x, \"/\")[0]);\n    auto\
    \ x_denominator = to!int(split(x, \"/\")[1]);\n    auto n_numerator = to!int(split(n,\
    \ \"/\")[0]);\n    auto n_denominator = to!int(split(n, \"/\")[1]);\n    auto\
    \ result = x_numerator * n_numerator / (x_denominator * n_denominator);\n    return\
    \ result % 1 == 0;\n}", "{\n    int x_numerator = to!int(split(x, \"/\")[0]);\n\
    \    int x_denominator = to!int(split(x, \"/\")[1]);\n    int n_numerator = to!int(split(n,\
    \ \"/\")[0]);\n    int n_denominator = to!int(split(n, \"/\")[1]);\n    return\
    \ (x_numerator * n_denominator) % (x_denominator * n_numerator) == 0;\n}", "{\n\
    \    int x_numerator = to!int(split(x, \"/\")[0]);\n    int x_denominator = to!int(split(x,\
    \ \"/\")[1]);\n    int n_numerator = to!int(split(n, \"/\")[0]);\n    int n_denominator\
    \ = to!int(split(n, \"/\")[1]);\n    return (x_numerator * n_denominator * n_numerator\
    \ * x_denominator) % (x_denominator * n_denominator) == 0;\n}", "{\n    int x_num\
    \ = to!int(split(x, \"/\")[0]);\n    int x_den = to!int(split(x, \"/\")[1]);\n\
    \    int n_num = to!int(split(n, \"/\")[0]);\n    int n_den = to!int(split(n,\
    \ \"/\")[1]);\n    return (x_num * n_den) % (x_den * n_num) == 0;\n}", "{\n  \
    \  int x_num = to!int(split(x, \"/\")[0]);\n    int x_den = to!int(split(x, \"\
    /\")[1]);\n    int n_num = to!int(split(n, \"/\")[0]);\n    int n_den = to!int(split(n,\
    \ \"/\")[1]);\n    return (x_num * n_den) % (x_den * n_num) == 0;\n}", "{\n  \
    \  auto x_numerator = to!int(split(x, \"/\")[0]);\n    auto x_denominator = to!int(split(x,\
    \ \"/\")[1]);\n    auto n_numerator = to!int(split(n, \"/\")[0]);\n    auto n_denominator\
    \ = to!int(split(n, \"/\")[1]);\n    auto result = x_numerator * n_numerator;\n\
    \    auto result_denominator = x_denominator * n_denominator;\n    return result\
    \ % result_denominator == 0;\n}", "{\n    int x_num = to!int(split(x, \"/\")[0]);\n\
    \    int x_den = to!int(split(x, \"/\")[1]);\n    int n_num = to!int(split(n,\
    \ \"/\")[0]);\n    int n_den = to!int(split(n, \"/\")[1]);\n    return (x_num\
    \ * n_den) % (x_den * n_num) == 0;\n}", "{\n    int x1 = to!int(split(x,\"/\"\
    )[0]);\n    int x2 = to!int(split(x,\"/\")[1]);\n    int n1 = to!int(split(n,\"\
    /\")[0]);\n    int n2 = to!int(split(n,\"/\")[1]);\n    return (x1*n2)%(x2*n1)\
    \ == 0;\n}", "{\n    // your code here\n    int x_numerator = to!int(split(x,\
    \ \"/\")[0]);\n    int x_denominator = to!int(split(x, \"/\")[1]);\n    int n_numerator\
    \ = to!int(split(n, \"/\")[0]);\n    int n_denominator = to!int(split(n, \"/\"\
    )[1]);\n    int numerator = x_numerator * n_numerator;\n    int denominator =\
    \ x_denominator * n_denominator;\n    int gcd = gcd(numerator, denominator);\n\
    \    numerator /= gcd;\n    denominator /= gcd;\n    return denominator == 1;\n\
    }", "{\n    auto x_numerator = to!int(split(x, \"/\")[0]);\n    auto x_denominator\
    \ = to!int(split(x, \"/\")[1]);\n    auto n_numerator = to!int(split(n, \"/\"\
    )[0]);\n    auto n_denominator = to!int(split(n, \"/\")[1]);\n    auto result\
    \ = x_numerator * n_numerator;\n    auto result_denominator = x_denominator *\
    \ n_denominator;\n    return result % result_denominator == 0;\n}", "{\n    int\
    \ x_numerator = to!int(split(x, \"/\")[0]);\n    int x_denominator = to!int(split(x,\
    \ \"/\")[1]);\n    int n_numerator = to!int(split(n, \"/\")[0]);\n    int n_denominator\
    \ = to!int(split(n, \"/\")[1]);\n    return (x_numerator * n_denominator * n_numerator\
    \ * x_denominator) % (x_denominator * n_denominator) == 0;\n}", "{\n    auto x_n\
    \ = split(x, '/');\n    auto n_n = split(n, '/');\n    auto x_n_n = to!int(x_n[0]);\n\
    \    auto x_d = to!int(x_n[1]);\n    auto n_n_n = to!int(n_n[0]);\n    auto n_d\
    \ = to!int(n_n[1]);\n    auto x_n_n_n = x_n_n * n_n_n;\n    auto x_d_d = x_d *\
    \ n_d;\n    return x_n_n_n % x_d_d == 0;\n}", "{\n    auto x_num = to!int(split(x,\
    \ \"/\")[0]);\n    auto x_den = to!int(split(x, \"/\")[1]);\n    auto n_num =\
    \ to!int(split(n, \"/\")[0]);\n    auto n_den = to!int(split(n, \"/\")[1]);\n\
    \    auto num = x_num * n_num;\n    auto den = x_den * n_den;\n    return num\
    \ % den == 0;\n}", "{\n    int a = to!int(split(x, \"/\")[0]);\n    int b = to!int(split(x,\
    \ \"/\")[1]);\n    int c = to!int(split(n, \"/\")[0]);\n    int d = to!int(split(n,\
    \ \"/\")[1]);\n    return (a * c) % (b * d) == 0;\n}", "{\n    auto x_num = to!int(split(x,\
    \ \"/\")[0]);\n    auto x_den = to!int(split(x, \"/\")[1]);\n    auto n_num =\
    \ to!int(split(n, \"/\")[0]);\n    auto n_den = to!int(split(n, \"/\")[1]);\n\
    \    auto num = x_num * n_num;\n    auto den = x_den * n_den;\n    return num\
    \ % den == 0;\n}", "{\n    int x_numerator = to!int(split(x, \"/\")[0]);\n   \
    \ int x_denominator = to!int(split(x, \"/\")[1]);\n    int n_numerator = to!int(split(n,\
    \ \"/\")[0]);\n    int n_denominator = to!int(split(n, \"/\")[1]);\n    double\
    \ result = (x_numerator * n_numerator) / (x_denominator * n_denominator);\n  \
    \  return result == floor(result);\n}", "{\n    int xn = to!int(split(x, \"/\"\
    )[0]);\n    int xd = to!int(split(x, \"/\")[1]);\n    int nn = to!int(split(n,\
    \ \"/\")[0]);\n    int nd = to!int(split(n, \"/\")[1]);\n    return (xn * nn)\
    \ % (xd * nd) == 0;\n}", "{\n    int x_num = to!int(split(x, \"/\")[0]);\n   \
    \ int x_den = to!int(split(x, \"/\")[1]);\n    int n_num = to!int(split(n, \"\
    /\")[0]);\n    int n_den = to!int(split(n, \"/\")[1]);\n    return (x_num * n_den)\
    \ % (x_den * n_num) == 0;\n}", "{\n    auto x_num = to!int(split(x, \"/\")[0]);\n\
    \    auto x_den = to!int(split(x, \"/\")[1]);\n    auto n_num = to!int(split(n,\
    \ \"/\")[0]);\n    auto n_den = to!int(split(n, \"/\")[1]);\n    auto num = x_num\
    \ * n_num;\n    auto den = x_den * n_den;\n    return num % den == 0;\n}", "{\n\
    \    auto x_numerator = to!int(split(x, \"/\")[0]);\n    auto x_denominator =\
    \ to!int(split(x, \"/\")[1]);\n    auto n_numerator = to!int(split(n, \"/\")[0]);\n\
    \    auto n_denominator = to!int(split(n, \"/\")[1]);\n    return (x_numerator\
    \ * n_numerator) % (x_denominator * n_denominator) == 0;\n}", "{\n    auto x_num\
    \ = to!int(split(x, \"/\")[0]);\n    auto x_den = to!int(split(x, \"/\")[1]);\n\
    \    auto n_num = to!int(split(n, \"/\")[0]);\n    auto n_den = to!int(split(n,\
    \ \"/\")[1]);\n    return (x_num * n_num) % (x_den * n_den) == 0;\n}", "{\n  \
    \  int x_numerator = to!int(split(x, \"/\")[0]);\n    int x_denominator = to!int(split(x,\
    \ \"/\")[1]);\n    int n_numerator = to!int(split(n, \"/\")[0]);\n    int n_denominator\
    \ = to!int(split(n, \"/\")[1]);\n    return (x_numerator * n_denominator) % (x_denominator\
    \ * n_numerator) == 0;\n}", "{\n    auto [x_num, x_den] = split(x, '/');\n   \
    \ auto [n_num, n_den] = split(n, '/');\n    return (to!int(x_num) * to!int(n_den))\
    \ % to!int(n_num) == 0;\n}", "{\n    int x_numerator = to!int(split(x, \"/\")[0]);\n\
    \    int x_denominator = to!int(split(x, \"/\")[1]);\n    int n_numerator = to!int(split(n,\
    \ \"/\")[0]);\n    int n_denominator = to!int(split(n, \"/\")[1]);\n    return\
    \ x_numerator * n_denominator * n_numerator * x_denominator % (x_denominator *\
    \ n_denominator) == 0;\n}", "{\n    auto x_num = to!int(split(x, \"/\")[0]);\n\
    \    auto x_den = to!int(split(x, \"/\")[1]);\n    auto n_num = to!int(split(n,\
    \ \"/\")[0]);\n    auto n_den = to!int(split(n, \"/\")[1]);\n    auto num = x_num\
    \ * n_num;\n    auto den = x_den * n_den;\n    return num % den == 0;\n}", "{\n\
    \    auto x_ = split(x, \"/\");\n    auto n_ = split(n, \"/\");\n    auto x_num\
    \ = to!int(x_[0]);\n    auto x_den = to!int(x_[1]);\n    auto n_num = to!int(n_[0]);\n\
    \    auto n_den = to!int(n_[1]);\n    auto num = x_num * n_num;\n    auto den\
    \ = x_den * n_den;\n    return num % den == 0;\n}", "{\n    int x_num = to!int(split(x,\
    \ \"/\")[0]);\n    int x_den = to!int(split(x, \"/\")[1]);\n    int n_num = to!int(split(n,\
    \ \"/\")[0]);\n    int n_den = to!int(split(n, \"/\")[1]);\n    int num = x_num\
    \ * n_num;\n    int den = x_den * n_den;\n    return num % den == 0;\n}", "{\n\
    \    auto x_numerator = to!int(split(x, \"/\")[0]);\n    auto x_denominator =\
    \ to!int(split(x, \"/\")[1]);\n    auto n_numerator = to!int(split(n, \"/\")[0]);\n\
    \    auto n_denominator = to!int(split(n, \"/\")[1]);\n    auto result = (x_numerator\
    \ * n_numerator) / (x_denominator * n_denominator);\n    return result == floor(result);\n\
    }", "{\n    int x_numerator = to!int(split(x, \"/\")[0]);\n    int x_denominator\
    \ = to!int(split(x, \"/\")[1]);\n    int n_numerator = to!int(split(n, \"/\")[0]);\n\
    \    int n_denominator = to!int(split(n, \"/\")[1]);\n    int numerator = x_numerator\
    \ * n_numerator;\n    int denominator = x_denominator * n_denominator;\n    return\
    \ denominator % numerator == 0;\n}", "{\n    auto x_numerator = to!int(split(x,\
    \ \"/\")[0]);\n    auto x_denominator = to!int(split(x, \"/\")[1]);\n    auto\
    \ n_numerator = to!int(split(n, \"/\")[0]);\n    auto n_denominator = to!int(split(n,\
    \ \"/\")[1]);\n    auto result = x_numerator * n_numerator;\n    auto denominator\
    \ = x_denominator * n_denominator;\n    return denominator % result == 0;\n}",
  "{\n    auto x_numerator = to!int(split(x, \"/\")[0]);\n    auto x_denominator =\
    \ to!int(split(x, \"/\")[1]);\n    auto n_numerator = to!int(split(n, \"/\")[0]);\n\
    \    auto n_denominator = to!int(split(n, \"/\")[1]);\n    auto result = x_numerator\
    \ * n_numerator / (x_denominator * n_denominator);\n    return result % 1 == 0;\n\
    }", "{\n    int x_numerator = to!int(split(x, \"/\")[0]);\n    int x_denominator\
    \ = to!int(split(x, \"/\")[1]);\n    int n_numerator = to!int(split(n, \"/\")[0]);\n\
    \    int n_denominator = to!int(split(n, \"/\")[1]);\n    int result_numerator\
    \ = x_numerator * n_numerator;\n    int result_denominator = x_denominator * n_denominator;\n\
    \    return (result_numerator % result_denominator == 0);\n}", "{\n    int x_num\
    \ = to!int(split(x, \"/\")[0]);\n    int x_den = to!int(split(x, \"/\")[1]);\n\
    \    int n_num = to!int(split(n, \"/\")[0]);\n    int n_den = to!int(split(n,\
    \ \"/\")[1]);\n    int num = x_num * n_num;\n    int den = x_den * n_den;\n  \
    \  return num % den == 0;\n}", "{\n    auto x_n = split(x, '/');\n    auto n_n\
    \ = split(n, '/');\n    return (to!int(x_n[0]) * to!int(n_n[1])) % to!int(n_n[0])\
    \ == 0;\n}", "{\n    auto x_n = split(x, '/');\n    auto n_n = split(n, '/');\n\
    \    auto x_numerator = to!int(x_n[0]);\n    auto x_denominator = to!int(x_n[1]);\n\
    \    auto n_numerator = to!int(n_n[0]);\n    auto n_denominator = to!int(n_n[1]);\n\
    \    auto numerator = x_numerator * n_numerator;\n    auto denominator = x_denominator\
    \ * n_denominator;\n    auto gcd = gcd(numerator, denominator);\n    return denominator\
    \ / gcd == 1;\n}", "{\n    int xNum = to!int(split(x, \"/\")[0]);\n    int xDen\
    \ = to!int(split(x, \"/\")[1]);\n    int nNum = to!int(split(n, \"/\")[0]);\n\
    \    int nDen = to!int(split(n, \"/\")[1]);\n    int gcd = gcd(xNum, xDen);\n\
    \    xNum /= gcd;\n    xDen /= gcd;\n    gcd = gcd(nNum, nDen);\n    nNum /= gcd;\n\
    \    nDen /= gcd;\n    int num = xNum * nNum;\n    int den = xDen * nDen;\n  \
    \  gcd = gcd(num, den);\n    num /= gcd;\n    den /= gcd;\n    return num % den\
    \ == 0;\n}", "{\n    int x_num = to!int(split(x, \"/\")[0]);\n    int x_den =\
    \ to!int(split(x, \"/\")[1]);\n    int n_num = to!int(split(n, \"/\")[0]);\n \
    \   int n_den = to!int(split(n, \"/\")[1]);\n    int num = x_num * n_num;\n  \
    \  int den = x_den * n_den;\n    return num % den == 0;\n}", "{\n    int a = to!int(split(x,\
    \ \"/\")[0]);\n    int b = to!int(split(x, \"/\")[1]);\n    int c = to!int(split(n,\
    \ \"/\")[0]);\n    int d = to!int(split(n, \"/\")[1]);\n    return (a * c) % (b\
    \ * d) == 0;\n}", "{\n    auto x_numerator = to!int(split(x, \"/\")[0]);\n   \
    \ auto x_denominator = to!int(split(x, \"/\")[1]);\n    auto n_numerator = to!int(split(n,\
    \ \"/\")[0]);\n    auto n_denominator = to!int(split(n, \"/\")[1]);\n    auto\
    \ numerator = x_numerator * n_numerator;\n    auto denominator = x_denominator\
    \ * n_denominator;\n    return numerator % denominator == 0;\n}", "{\n    int\
    \ x1 = to!int(split(x, \"/\")[0]);\n    int x2 = to!int(split(x, \"/\")[1]);\n\
    \    int n1 = to!int(split(n, \"/\")[0]);\n    int n2 = to!int(split(n, \"/\"\
    )[1]);\n    return (x1 * n2) % (x2 * n1) == 0;\n}", "{\n    int x_num = to!int(split(x,\
    \ \"/\")[0]);\n    int x_den = to!int(split(x, \"/\")[1]);\n    int n_num = to!int(split(n,\
    \ \"/\")[0]);\n    int n_den = to!int(split(n, \"/\")[1]);\n    int num = x_num\
    \ * n_num;\n    int den = x_den * n_den;\n    return num % den == 0;\n}", "{\n\
    \    auto x_numerator = to!int(split(x, \"/\")[0]);\n    auto x_denominator =\
    \ to!int(split(x, \"/\")[1]);\n    auto n_numerator = to!int(split(n, \"/\")[0]);\n\
    \    auto n_denominator = to!int(split(n, \"/\")[1]);\n    auto result = x_numerator\
    \ * n_numerator;\n    auto result_denominator = x_denominator * n_denominator;\n\
    \    return result % result_denominator == 0;\n}", "{\n    int a = to!int(split(x,\
    \ \"/\")[0]);\n    int b = to!int(split(x, \"/\")[1]);\n    int c = to!int(split(n,\
    \ \"/\")[0]);\n    int d = to!int(split(n, \"/\")[1]);\n    return (a * c) % (b\
    \ * d) == 0;\n}", "{\n    int x_numerator = to!int(split(x, \"/\")[0]);\n    int\
    \ x_denominator = to!int(split(x, \"/\")[1]);\n    int n_numerator = to!int(split(n,\
    \ \"/\")[0]);\n    int n_denominator = to!int(split(n, \"/\")[1]);\n    int result_numerator\
    \ = x_numerator * n_numerator;\n    int result_denominator = x_denominator * n_denominator;\n\
    \    int gcd = gcd(result_numerator, result_denominator);\n    return result_numerator\
    \ % gcd == 0 && result_denominator % gcd == 0;\n}", "{\n    auto x_numerator =\
    \ to!int(split(x, \"/\")[0]);\n    auto x_denominator = to!int(split(x, \"/\"\
    )[1]);\n    auto n_numerator = to!int(split(n, \"/\")[0]);\n    auto n_denominator\
    \ = to!int(split(n, \"/\")[1]);\n    auto result = x_numerator * n_numerator;\n\
    \    auto result_denominator = x_denominator * n_denominator;\n    return result\
    \ % result_denominator == 0;\n}", "{\n    auto [num, den] = split(x, '/');\n \
    \   auto [num2, den2] = split(n, '/');\n    auto [gcd, _] = gcd_extended(to!int(den),\
    \ to!int(den2));\n    return (to!int(num) * to!int(num2)) % (to!int(den) / gcd\
    \ * to!int(den2) / gcd) == 0;\n}", "{\n    int x_numerator = to!int(split(x, \"\
    /\")[0]);\n    int x_denominator = to!int(split(x, \"/\")[1]);\n    int n_numerator\
    \ = to!int(split(n, \"/\")[0]);\n    int n_denominator = to!int(split(n, \"/\"\
    )[1]);\n    return (x_numerator * n_denominator * n_numerator * x_denominator)\
    \ % (x_denominator * n_denominator) == 0;\n}", "{\n    auto x_numerator = to!int(split(x,\
    \ \"/\")[0]);\n    auto x_denominator = to!int(split(x, \"/\")[1]);\n    auto\
    \ n_numerator = to!int(split(n, \"/\")[0]);\n    auto n_denominator = to!int(split(n,\
    \ \"/\")[1]);\n    auto result = (x_numerator * n_numerator) / (x_denominator\
    \ * n_denominator);\n    return result % 1 == 0;\n}", "{\n    int x1 = to!int(split(x,\
    \ \"/\")[0]);\n    int x2 = to!int(split(x, \"/\")[1]);\n    int n1 = to!int(split(n,\
    \ \"/\")[0]);\n    int n2 = to!int(split(n, \"/\")[1]);\n    return (x1 * n2)\
    \ % (x2 * n1) == 0;\n}", "{\n    // your code here\n    int x_num = to!int(x.split(\"\
    /\")[0]);\n    int x_den = to!int(x.split(\"/\")[1]);\n    int n_num = to!int(n.split(\"\
    /\")[0]);\n    int n_den = to!int(n.split(\"/\")[1]);\n    int num = x_num * n_num;\n\
    \    int den = x_den * n_den;\n    return (num % den == 0);\n}", "{\n    int x_numerator\
    \ = to!int(split(x, \"/\")[0]);\n    int x_denominator = to!int(split(x, \"/\"\
    )[1]);\n    int n_numerator = to!int(split(n, \"/\")[0]);\n    int n_denominator\
    \ = to!int(split(n, \"/\")[1]);\n    return (x_numerator * n_denominator * n_numerator\
    \ * x_denominator) % (x_denominator * n_denominator) == 0;\n}", "{\n    auto x_split\
    \ = split(x, \"/\");\n    auto n_split = split(n, \"/\");\n    auto x_num = to!int(x_split[0]);\n\
    \    auto x_den = to!int(x_split[1]);\n    auto n_num = to!int(n_split[0]);\n\
    \    auto n_den = to!int(n_split[1]);\n    auto num = x_num * n_num;\n    auto\
    \ den = x_den * n_den;\n    return num % den == 0;\n}", "{\n    int x_num = to!int(split(x,\
    \ \"/\")[0]);\n    int x_den = to!int(split(x, \"/\")[1]);\n    int n_num = to!int(split(n,\
    \ \"/\")[0]);\n    int n_den = to!int(split(n, \"/\")[1]);\n    return (x_num\
    \ * n_den) % (x_den * n_num) == 0;\n}", "{\n    auto x_n = split(x, '/');\n  \
    \  auto x_d = split(n, '/');\n    auto x_numerator = to!int(x_n[0]);\n    auto\
    \ x_denominator = to!int(x_n[1]);\n    auto n_numerator = to!int(x_d[0]);\n  \
    \  auto n_denominator = to!int(x_d[1]);\n    auto result = x_numerator * n_numerator;\n\
    \    auto result_denominator = x_denominator * n_denominator;\n    auto gcd =\
    \ gcd(result, result_denominator);\n    result /= gcd;\n    result_denominator\
    \ /= gcd;\n    return result % result_denominator == 0;\n}", "{\n    auto x_numerator\
    \ = to!int(split(x, \"/\")[0]);\n    auto x_denominator = to!int(split(x, \"/\"\
    )[1]);\n    auto n_numerator = to!int(split(n, \"/\")[0]);\n    auto n_denominator\
    \ = to!int(split(n, \"/\")[1]);\n    auto result = x_numerator * n_numerator;\n\
    \    auto result_denominator = x_denominator * n_denominator;\n    return result\
    \ % result_denominator == 0;\n}", "{\n    int x_numerator = to!int(split(x, \"\
    /\")[0]);\n    int x_denominator = to!int(split(x, \"/\")[1]);\n    int n_numerator\
    \ = to!int(split(n, \"/\")[0]);\n    int n_denominator = to!int(split(n, \"/\"\
    )[1]);\n    int numerator = x_numerator * n_numerator;\n    int denominator =\
    \ x_denominator * n_denominator;\n    return numerator % denominator == 0;\n}",
  "{\n    int x1 = to!int(split(x, \"/\")[0]);\n    int x2 = to!int(split(x, \"/\"\
    )[1]);\n    int n1 = to!int(split(n, \"/\")[0]);\n    int n2 = to!int(split(n,\
    \ \"/\")[1]);\n    return (x1 * n2) % (x2 * n1) == 0;\n}", "{\n    auto x_ = x.split(\"\
    /\");\n    auto n_ = n.split(\"/\");\n    auto num = to!int(x_[0]) * to!int(n_[0]);\n\
    \    auto den = to!int(x_[1]) * to!int(n_[1]);\n    return num % den == 0;\n}",
  "{\n    int x_numerator = to!int(split(x, \"/\")[0]);\n    int x_denominator = to!int(split(x,\
    \ \"/\")[1]);\n    int n_numerator = to!int(split(n, \"/\")[0]);\n    int n_denominator\
    \ = to!int(split(n, \"/\")[1]);\n    int numerator = x_numerator * n_numerator;\n\
    \    int denominator = x_denominator * n_denominator;\n    return denominator\
    \ % numerator == 0;\n}", "{\n    int n1 = to!int(split(x, \"/\")[0]);\n    int\
    \ d1 = to!int(split(x, \"/\")[1]);\n    int n2 = to!int(split(n, \"/\")[0]);\n\
    \    int d2 = to!int(split(n, \"/\")[1]);\n    return (n1 * d2) % (d1 * n2) ==\
    \ 0;\n}", "{\n    int a = to!int(split(x, \"/\")[0]);\n    int b = to!int(split(x,\
    \ \"/\")[1]);\n    int c = to!int(split(n, \"/\")[0]);\n    int d = to!int(split(n,\
    \ \"/\")[1]);\n    return (a * c) % (b * d) == 0;\n}", "{\n    int x1 = to!int(split(x,\
    \ \"/\")[0]);\n    int x2 = to!int(split(x, \"/\")[1]);\n    int n1 = to!int(split(n,\
    \ \"/\")[0]);\n    int n2 = to!int(split(n, \"/\")[1]);\n    return (x1 * n2)\
    \ % (x2 * n1) == 0;\n}", "{\n    auto x_num = to!int(split(x, \"/\")[0]);\n  \
    \  auto x_den = to!int(split(x, \"/\")[1]);\n    auto n_num = to!int(split(n,\
    \ \"/\")[0]);\n    auto n_den = to!int(split(n, \"/\")[1]);\n    auto num = x_num\
    \ * n_num;\n    auto den = x_den * n_den;\n    return num % den == 0;\n}", "{\n\
    \    int xn = to!int(split(x, \"/\")[0]);\n    int xd = to!int(split(x, \"/\"\
    )[1]);\n    int nn = to!int(split(n, \"/\")[0]);\n    int nd = to!int(split(n,\
    \ \"/\")[1]);\n    return (xn * nn) % (xd * nd) == 0;\n}", "{\n    int x_numerator\
    \ = to!int(split(x, \"/\")[0]);\n    int x_denominator = to!int(split(x, \"/\"\
    )[1]);\n    int n_numerator = to!int(split(n, \"/\")[0]);\n    int n_denominator\
    \ = to!int(split(n, \"/\")[1]);\n    return (x_numerator * n_denominator * n_numerator\
    \ * x_denominator) % (x_denominator * n_denominator) == 0;\n}", "{\n    int x_num\
    \ = to!int(split(x, \"/\")[0]);\n    int x_den = to!int(split(x, \"/\")[1]);\n\
    \    int n_num = to!int(split(n, \"/\")[0]);\n    int n_den = to!int(split(n,\
    \ \"/\")[1]);\n    int num = x_num * n_num;\n    int den = x_den * n_den;\n  \
    \  return num % den == 0;\n}", "{\n    auto x_num = to!int(split(x, \"/\")[0]);\n\
    \    auto x_den = to!int(split(x, \"/\")[1]);\n    auto n_num = to!int(split(n,\
    \ \"/\")[0]);\n    auto n_den = to!int(split(n, \"/\")[1]);\n    auto gcd = gcd(x_num\
    \ * n_den, x_den * n_num);\n    return (x_num * n_den / gcd) % (x_den * n_num\
    \ / gcd) == 0;\n}", "{\n    auto x_num = to!int(split(x, \"/\")[0]);\n    auto\
    \ x_den = to!int(split(x, \"/\")[1]);\n    auto n_num = to!int(split(n, \"/\"\
    )[0]);\n    auto n_den = to!int(split(n, \"/\")[1]);\n    auto num = x_num * n_num;\n\
    \    auto den = x_den * n_den;\n    auto gcd = gcd(num, den);\n    return den\
    \ / gcd == 1;\n}", "{\n    int xNum = to!int(split(x, \"/\")[0]);\n    int xDen\
    \ = to!int(split(x, \"/\")[1]);\n    int nNum = to!int(split(n, \"/\")[0]);\n\
    \    int nDen = to!int(split(n, \"/\")[1]);\n    return (xNum * nDen) % (xDen\
    \ * nNum) == 0;\n}", "{\n    int xn = to!int(split(x, \"/\")[0]);\n    int xd\
    \ = to!int(split(x, \"/\")[1]);\n    int nn = to!int(split(n, \"/\")[0]);\n  \
    \  int nd = to!int(split(n, \"/\")[1]);\n    return (xn * nn) % (xd * nd) == 0;\n\
    }", "{\n    int x_numerator = to!int(x[0..x.find('/')]);\n    int x_denominator\
    \ = to!int(x[x.find('/')+1..$]);\n    int n_numerator = to!int(n[0..n.find('/')]);\n\
    \    int n_denominator = to!int(n[n.find('/')+1..$]);\n    int result_numerator\
    \ = x_numerator * n_numerator;\n    int result_denominator = x_denominator * n_denominator;\n\
    \    int gcd = gcd(result_numerator, result_denominator);\n    result_numerator\
    \ /= gcd;\n    result_denominator /= gcd;\n    return result_denominator == 1;\n\
    }", "{\n    int x_numerator = to!int(x[0..x.find('/')]);\n    int x_denominator\
    \ = to!int(x[x.find('/')+1..$]);\n    int n_numerator = to!int(n[0..n.find('/')]);\n\
    \    int n_denominator = to!int(n[n.find('/')+1..$]);\n    int numerator = x_numerator\
    \ * n_numerator;\n    int denominator = x_denominator * n_denominator;\n    int\
    \ gcd = gcd(numerator, denominator);\n    return denominator / gcd == numerator\
    \ / gcd;\n}", "{\n    int x_numerator = to!int(split(x, \"/\")[0]);\n    int x_denominator\
    \ = to!int(split(x, \"/\")[1]);\n    int n_numerator = to!int(split(n, \"/\")[0]);\n\
    \    int n_denominator = to!int(split(n, \"/\")[1]);\n    int numerator = x_numerator\
    \ * n_numerator;\n    int denominator = x_denominator * n_denominator;\n    int\
    \ gcd = gcd(numerator, denominator);\n    return denominator / gcd == 1;\n}",
  "{\n    int x_numerator = to!int(split(x, \"/\")[0]);\n    int x_denominator = to!int(split(x,\
    \ \"/\")[1]);\n    int n_numerator = to!int(split(n, \"/\")[0]);\n    int n_denominator\
    \ = to!int(split(n, \"/\")[1]);\n    int numerator = x_numerator * n_numerator;\n\
    \    int denominator = x_denominator * n_denominator;\n    return denominator\
    \ % numerator == 0;\n}", "{\n    auto x_n = split(x, '/');\n    auto n_n = split(n,\
    \ '/');\n    auto x_num = to!int(x_n[0]);\n    auto x_den = to!int(x_n[1]);\n\
    \    auto n_num = to!int(n_n[0]);\n    auto n_den = to!int(n_n[1]);\n    auto\
    \ num = x_num * n_num;\n    auto den = x_den * n_den;\n    return num % den ==\
    \ 0;\n}", "{\n    int a = to!int(split(x, \"/\")[0]);\n    int b = to!int(split(x,\
    \ \"/\")[1]);\n    int c = to!int(split(n, \"/\")[0]);\n    int d = to!int(split(n,\
    \ \"/\")[1]);\n    return (a*d) % (b*c) == 0;\n}", "{\n    int x_num = to!int(split(x,\
    \ \"/\")[0]);\n    int x_den = to!int(split(x, \"/\")[1]);\n    int n_num = to!int(split(n,\
    \ \"/\")[0]);\n    int n_den = to!int(split(n, \"/\")[1]);\n    int num = x_num\
    \ * n_num;\n    int den = x_den * n_den;\n    int gcd = gcd(num, den);\n    return\
    \ den / gcd == num / gcd;\n}", "{\n    int x_numerator = to!int(split(x, \"/\"\
    )[0]);\n    int x_denominator = to!int(split(x, \"/\")[1]);\n    int n_numerator\
    \ = to!int(split(n, \"/\")[0]);\n    int n_denominator = to!int(split(n, \"/\"\
    )[1]);\n    return (x_numerator * n_denominator * n_numerator * x_denominator)\
    \ % (x_denominator * n_denominator) == 0;\n}", "{\n    auto a = split(x, \"/\"\
    );\n    auto b = split(n, \"/\");\n    auto c = to!int(a[0]) * to!int(b[0]);\n\
    \    auto d = to!int(a[1]) * to!int(b[1]);\n    return c % d == 0;\n}", "{\n \
    \   int a, b, c, d;\n    sscanf(x.c_str(), \"%d/%d\", &a, &b);\n    sscanf(n.c_str(),\
    \ \"%d/%d\", &c, &d);\n    return (a * d) % (b * c) == 0;\n}", "{\n    auto x_n\
    \ = split(x, '/');\n    auto n_n = split(n, '/');\n    auto x_num = to!int(x_n[0]);\n\
    \    auto x_den = to!int(x_n[1]);\n    auto n_num = to!int(n_n[0]);\n    auto\
    \ n_den = to!int(n_n[1]);\n    auto num = x_num * n_num;\n    auto den = x_den\
    \ * n_den;\n    return num % den == 0;\n}", "{\n    auto x_n = split(x, '/');\n\
    \    auto n_n = split(n, '/');\n    auto x_num = to!int(x_n[0]);\n    auto x_den\
    \ = to!int(x_n[1]);\n    auto n_num = to!int(n_n[0]);\n    auto n_den = to!int(n_n[1]);\n\
    \    auto num = x_num * n_num;\n    auto den = x_den * n_den;\n    return num\
    \ % den == 0;\n}", "{\n    int x_numerator = to!int(split(x, \"/\")[0]);\n   \
    \ int x_denominator = to!int(split(x, \"/\")[1]);\n    int n_numerator = to!int(split(n,\
    \ \"/\")[0]);\n    int n_denominator = to!int(split(n, \"/\")[1]);\n    return\
    \ (x_numerator * n_denominator * n_numerator * x_denominator) % (x_denominator\
    \ * n_denominator) == 0;\n}", "{\n    int x_num = to!int(split(x, \"/\")[0]);\n\
    \    int x_den = to!int(split(x, \"/\")[1]);\n    int n_num = to!int(split(n,\
    \ \"/\")[0]);\n    int n_den = to!int(split(n, \"/\")[1]);\n    int num = x_num\
    \ * n_num;\n    int den = x_den * n_den;\n    return num % den == 0;\n}"]
stop_tokens:
- "\n\n"
- "\nvoid"
- "\nbool"
- "\nint"

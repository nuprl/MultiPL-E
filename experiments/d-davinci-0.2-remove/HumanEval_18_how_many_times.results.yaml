language: d
name: HumanEval_18_how_many_times
results:
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long index = 0;\n    while (true) \n    {\n        index\
    \ = string.find(substring, index);\n        if (index == -1) \n        {\n   \
    \         break;\n        }\n        ++count;\n        ++index;\n    }\n    return\
    \ count;\n}\nunittest\n{\n    alias candidate = how_many_times;\n\n    assert(candidate(\"\
    \", \"x\") == 0L);\n    assert(candidate(\"xyxyxyx\", \"x\") == 4L);\n    assert(candidate(\"\
    cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"john doe\", \"john\") ==\
    \ 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpv2ercp_v.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long index = 0;\n    while ((index = string.find(substring,\
    \ index)) != string.npos) {\n        ++count;\n        ++index;\n    }\n    return\
    \ count;\n}\nunittest\n{\n    alias candidate = how_many_times;\n\n    assert(candidate(\"\
    \", \"x\") == 0L);\n    assert(candidate(\"xyxyxyx\", \"x\") == 4L);\n    assert(candidate(\"\
    cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"john doe\", \"john\") ==\
    \ 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3c87n73r.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long index = 0;\n    while (true) \n    {\n        index\
    \ = string.find(substring, index);\n        if (index == -1)\n            break;\n\
    \        count++;\n        index++;\n    }\n    return count;\n}\nunittest\n{\n\
    \    alias candidate = how_many_times;\n\n    assert(candidate(\"\", \"x\") ==\
    \ 0L);\n    assert(candidate(\"xyxyxyx\", \"x\") == 4L);\n    assert(candidate(\"\
    cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"john doe\", \"john\") ==\
    \ 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptl6uyl75.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long index = 0;\n    while ((index = string.find(substring,\
    \ index)) != -1) \n    {\n        ++count;\n        ++index;\n    }\n    return\
    \ count;\n}\nunittest\n{\n    alias candidate = how_many_times;\n\n    assert(candidate(\"\
    \", \"x\") == 0L);\n    assert(candidate(\"xyxyxyx\", \"x\") == 4L);\n    assert(candidate(\"\
    cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"john doe\", \"john\") ==\
    \ 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp86x3y223.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long index = 0;\n    while (true) \n    {\n        index\
    \ = string.find(substring, index);\n        if (index == -1) \n        {\n   \
    \         break;\n        }\n        count++;\n        index++;\n    }\n    return\
    \ count;\n}\nunittest\n{\n    alias candidate = how_many_times;\n\n    assert(candidate(\"\
    \", \"x\") == 0L);\n    assert(candidate(\"xyxyxyx\", \"x\") == 4L);\n    assert(candidate(\"\
    cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"john doe\", \"john\") ==\
    \ 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp90ban_x3.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long pos = 0;\n    while (true) \n    {\n        pos\
    \ = string.find(substring, pos);\n        if (pos == -1)\n            break;\n\
    \        count++;\n        pos++;\n    }\n    return count;\n}\nunittest\n{\n\
    \    alias candidate = how_many_times;\n\n    assert(candidate(\"\", \"x\") ==\
    \ 0L);\n    assert(candidate(\"xyxyxyx\", \"x\") == 4L);\n    assert(candidate(\"\
    cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"john doe\", \"john\") ==\
    \ 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg9op7arr.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long pos = 0;\n    while ((pos = string.find(substring,\
    \ pos)) != -1) \n    {\n        count++;\n        pos += substring.length;\n \
    \   }\n    return count;\n}\nunittest\n{\n    alias candidate = how_many_times;\n\
    \n    assert(candidate(\"\", \"x\") == 0L);\n    assert(candidate(\"xyxyxyx\"\
    , \"x\") == 4L);\n    assert(candidate(\"cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"\
    john doe\", \"john\") == 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0mezg9kv.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long index = 0;\n    while (true) \n    {\n        index\
    \ = string.find(substring, index);\n        if (index == -1)\n            break;\n\
    \        count++;\n        index++;\n    }\n    return count;\n}\nunittest\n{\n\
    \    alias candidate = how_many_times;\n\n    assert(candidate(\"\", \"x\") ==\
    \ 0L);\n    assert(candidate(\"xyxyxyx\", \"x\") == 4L);\n    assert(candidate(\"\
    cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"john doe\", \"john\") ==\
    \ 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptl6uyl75.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long index = 0;\n    while (true)\n    {\n        index\
    \ = string.find(substring, index);\n        if (index == -1)\n            break;\n\
    \        count++;\n        index++;\n    }\n    return count;\n}\nunittest\n{\n\
    \    alias candidate = how_many_times;\n\n    assert(candidate(\"\", \"x\") ==\
    \ 0L);\n    assert(candidate(\"xyxyxyx\", \"x\") == 4L);\n    assert(candidate(\"\
    cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"john doe\", \"john\") ==\
    \ 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbe54md23.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long pos = 0;\n    while(true)\n    {\n        pos =\
    \ string.find(substring, pos);\n        if(pos == -1)\n            break;\n  \
    \      count++;\n        pos++;\n    }\n    return count;\n}\nunittest\n{\n  \
    \  alias candidate = how_many_times;\n\n    assert(candidate(\"\", \"x\") == 0L);\n\
    \    assert(candidate(\"xyxyxyx\", \"x\") == 4L);\n    assert(candidate(\"cacacacac\"\
    , \"cac\") == 4L);\n    assert(candidate(\"john doe\", \"john\") == 1L);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpd5j40051.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long index = 0;\n    while ((index = string.find(substring,\
    \ index)) != -1) \n    {\n        ++count;\n        ++index;\n    }\n    return\
    \ count;\n}\nunittest\n{\n    alias candidate = how_many_times;\n\n    assert(candidate(\"\
    \", \"x\") == 0L);\n    assert(candidate(\"xyxyxyx\", \"x\") == 4L);\n    assert(candidate(\"\
    cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"john doe\", \"john\") ==\
    \ 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp86x3y223.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long pos = 0;\n    while (true) \n    {\n        pos\
    \ = string.find(substring, pos);\n        if (pos == -1)\n            break;\n\
    \        count++;\n        pos++;\n    }\n    return count;\n}\nunittest\n{\n\
    \    alias candidate = how_many_times;\n\n    assert(candidate(\"\", \"x\") ==\
    \ 0L);\n    assert(candidate(\"xyxyxyx\", \"x\") == 4L);\n    assert(candidate(\"\
    cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"john doe\", \"john\") ==\
    \ 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg9op7arr.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long index = 0;\n    while (true) \n    {\n        index\
    \ = string.find(substring, index);\n        if (index == -1)\n            break;\n\
    \        count++;\n        index++;\n    }\n    return count;\n}\nunittest\n{\n\
    \    alias candidate = how_many_times;\n\n    assert(candidate(\"\", \"x\") ==\
    \ 0L);\n    assert(candidate(\"xyxyxyx\", \"x\") == 4L);\n    assert(candidate(\"\
    cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"john doe\", \"john\") ==\
    \ 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptl6uyl75.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long pos = 0;\n    while ((pos = string.find(substring,\
    \ pos)) != -1) \n    {\n        count++;\n        pos += substring.length;\n \
    \   }\n    return count;\n}\nunittest\n{\n    alias candidate = how_many_times;\n\
    \n    assert(candidate(\"\", \"x\") == 0L);\n    assert(candidate(\"xyxyxyx\"\
    , \"x\") == 4L);\n    assert(candidate(\"cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"\
    john doe\", \"john\") == 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0mezg9kv.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long index = 0;\n    while(true)\n    {\n        index\
    \ = string.find(substring, index);\n        if(index == -1)\n            break;\n\
    \        count++;\n        index++;\n    }\n    return count;\n}\nunittest\n{\n\
    \    alias candidate = how_many_times;\n\n    assert(candidate(\"\", \"x\") ==\
    \ 0L);\n    assert(candidate(\"xyxyxyx\", \"x\") == 4L);\n    assert(candidate(\"\
    cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"john doe\", \"john\") ==\
    \ 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1g0mtvia.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long pos = 0;\n    while (true) {\n        pos = string.find(substring,\
    \ pos);\n        if (pos == -1) {\n            break;\n        }\n        count++;\n\
    \        pos++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate\
    \ = how_many_times;\n\n    assert(candidate(\"\", \"x\") == 0L);\n    assert(candidate(\"\
    xyxyxyx\", \"x\") == 4L);\n    assert(candidate(\"cacacacac\", \"cac\") == 4L);\n\
    \    assert(candidate(\"john doe\", \"john\") == 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpm1c3_mxs.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long pos = 0;\n    while (true) \n    {\n        pos\
    \ = string.find(substring, pos);\n        if (pos == -1) \n        {\n       \
    \     break;\n        }\n        count++;\n        pos++;\n    }\n    return count;\n\
    }\nunittest\n{\n    alias candidate = how_many_times;\n\n    assert(candidate(\"\
    \", \"x\") == 0L);\n    assert(candidate(\"xyxyxyx\", \"x\") == 4L);\n    assert(candidate(\"\
    cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"john doe\", \"john\") ==\
    \ 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgp5j6s5w.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long pos = 0;\n    while ((pos = string.find(substring,\
    \ pos)) != -1) {\n        count++;\n        pos += substring.length;\n    }\n\
    \    return count;\n}\nunittest\n{\n    alias candidate = how_many_times;\n\n\
    \    assert(candidate(\"\", \"x\") == 0L);\n    assert(candidate(\"xyxyxyx\",\
    \ \"x\") == 4L);\n    assert(candidate(\"cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"\
    john doe\", \"john\") == 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcdo3xjzl.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long index = 0;\n    while (true) \n    {\n        index\
    \ = string.find(substring, index);\n        if (index == -1)\n            break;\n\
    \        count++;\n        index++;\n    }\n    return count;\n}\nunittest\n{\n\
    \    alias candidate = how_many_times;\n\n    assert(candidate(\"\", \"x\") ==\
    \ 0L);\n    assert(candidate(\"xyxyxyx\", \"x\") == 4L);\n    assert(candidate(\"\
    cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"john doe\", \"john\") ==\
    \ 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptl6uyl75.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long index = 0;\n    while (true) \n    {\n        index\
    \ = string.find(substring, index);\n        if (index == -1) \n        {\n   \
    \         break;\n        }\n        ++count;\n        ++index;\n    }\n    return\
    \ count;\n}\nunittest\n{\n    alias candidate = how_many_times;\n\n    assert(candidate(\"\
    \", \"x\") == 0L);\n    assert(candidate(\"xyxyxyx\", \"x\") == 4L);\n    assert(candidate(\"\
    cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"john doe\", \"john\") ==\
    \ 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpv2ercp_v.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long index = 0;\n    while (true) \n    {\n        index\
    \ = string.find(substring, index);\n        if (index == -1) \n        {\n   \
    \         break;\n        }\n        count++;\n        index++;\n    }\n    return\
    \ count;\n}\nunittest\n{\n    alias candidate = how_many_times;\n\n    assert(candidate(\"\
    \", \"x\") == 0L);\n    assert(candidate(\"xyxyxyx\", \"x\") == 4L);\n    assert(candidate(\"\
    cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"john doe\", \"john\") ==\
    \ 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp90ban_x3.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long pos = 0;\n    while (true) \n    {\n        pos\
    \ = string.find(substring, pos);\n        if (pos == -1) \n        {\n       \
    \     break;\n        }\n        count++;\n        pos++;\n    }\n    return count;\n\
    }\nunittest\n{\n    alias candidate = how_many_times;\n\n    assert(candidate(\"\
    \", \"x\") == 0L);\n    assert(candidate(\"xyxyxyx\", \"x\") == 4L);\n    assert(candidate(\"\
    cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"john doe\", \"john\") ==\
    \ 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgp5j6s5w.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long index = 0;\n    while ((index = string.find(substring,\
    \ index)) != -1)\n    {\n        count++;\n        index += substring.length;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = how_many_times;\n\
    \n    assert(candidate(\"\", \"x\") == 0L);\n    assert(candidate(\"xyxyxyx\"\
    , \"x\") == 4L);\n    assert(candidate(\"cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"\
    john doe\", \"john\") == 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpf2iy10y7.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long index = 0;\n    while (true) \n    {\n        index\
    \ = string.find(substring, index);\n        if (index == -1) \n        {\n   \
    \         break;\n        }\n        ++count;\n        ++index;\n    }\n    return\
    \ count;\n}\nunittest\n{\n    alias candidate = how_many_times;\n\n    assert(candidate(\"\
    \", \"x\") == 0L);\n    assert(candidate(\"xyxyxyx\", \"x\") == 4L);\n    assert(candidate(\"\
    cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"john doe\", \"john\") ==\
    \ 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpv2ercp_v.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long len = string.length;\n    long sublen = substring.length;\n\
    \    long i = 0;\n    while (i < len) \n    {\n        if (string[i..i+sublen]\
    \ == substring) \n        {\n            count++;\n            i += sublen;\n\
    \        }\n        else\n            i++;\n    }\n    return count;\n}\nunittest\n\
    {\n    alias candidate = how_many_times;\n\n    assert(candidate(\"\", \"x\")\
    \ == 0L);\n    assert(candidate(\"xyxyxyx\", \"x\") == 4L);\n    assert(candidate(\"\
    cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"john doe\", \"john\") ==\
    \ 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpuntbp63g.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long index = 0;\n    while(true)\n    {\n        index\
    \ = string.find(substring, index);\n        if(index == -1)\n            break;\n\
    \        count++;\n        index++;\n    }\n    return count;\n}\nunittest\n{\n\
    \    alias candidate = how_many_times;\n\n    assert(candidate(\"\", \"x\") ==\
    \ 0L);\n    assert(candidate(\"xyxyxyx\", \"x\") == 4L);\n    assert(candidate(\"\
    cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"john doe\", \"john\") ==\
    \ 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1g0mtvia.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long index = 0;\n    while (true) \n    {\n        index\
    \ = string.find(substring, index);\n        if (index == -1) \n        {\n   \
    \         break;\n        }\n        ++count;\n        ++index;\n    }\n    return\
    \ count;\n}\nunittest\n{\n    alias candidate = how_many_times;\n\n    assert(candidate(\"\
    \", \"x\") == 0L);\n    assert(candidate(\"xyxyxyx\", \"x\") == 4L);\n    assert(candidate(\"\
    cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"john doe\", \"john\") ==\
    \ 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpv2ercp_v.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long string_length = string.length;\n    long substring_length\
    \ = substring.length;\n    long i = 0;\n    while (i < string_length) {\n    \
    \    if (string[i .. i + substring_length] == substring) {\n            count++;\n\
    \            i += substring_length;\n        } else {\n            i++;\n    \
    \    }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = how_many_times;\n\
    \n    assert(candidate(\"\", \"x\") == 0L);\n    assert(candidate(\"xyxyxyx\"\
    , \"x\") == 4L);\n    assert(candidate(\"cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"\
    john doe\", \"john\") == 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpq7k5j_jf.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long pos = 0;\n    while ((pos = string.find(substring,\
    \ pos)) != -1) \n    {\n        count++;\n        pos += substring.length;\n \
    \   }\n    return count;\n}\nunittest\n{\n    alias candidate = how_many_times;\n\
    \n    assert(candidate(\"\", \"x\") == 0L);\n    assert(candidate(\"xyxyxyx\"\
    , \"x\") == 4L);\n    assert(candidate(\"cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"\
    john doe\", \"john\") == 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0mezg9kv.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long pos = 0;\n    while (true) {\n        pos = string.find(substring,\
    \ pos);\n        if (pos == -1) {\n            break;\n        }\n        count++;\n\
    \        pos++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate\
    \ = how_many_times;\n\n    assert(candidate(\"\", \"x\") == 0L);\n    assert(candidate(\"\
    xyxyxyx\", \"x\") == 4L);\n    assert(candidate(\"cacacacac\", \"cac\") == 4L);\n\
    \    assert(candidate(\"john doe\", \"john\") == 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpm1c3_mxs.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long index = 0;\n    while (true) \n    {\n        index\
    \ = string.find(substring, index);\n        if (index == -1) \n        {\n   \
    \         break;\n        }\n        ++count;\n        ++index;\n    }\n    return\
    \ count;\n}\nunittest\n{\n    alias candidate = how_many_times;\n\n    assert(candidate(\"\
    \", \"x\") == 0L);\n    assert(candidate(\"xyxyxyx\", \"x\") == 4L);\n    assert(candidate(\"\
    cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"john doe\", \"john\") ==\
    \ 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpv2ercp_v.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long string_length = string.length;\n    long substring_length\
    \ = substring.length;\n    for (long i = 0; i < string_length; i++) \n    {\n\
    \        if (string[i .. i + substring_length] == substring) \n        {\n   \
    \         count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias\
    \ candidate = how_many_times;\n\n    assert(candidate(\"\", \"x\") == 0L);\n \
    \   assert(candidate(\"xyxyxyx\", \"x\") == 4L);\n    assert(candidate(\"cacacacac\"\
    , \"cac\") == 4L);\n    assert(candidate(\"john doe\", \"john\") == 1L);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp22kd9sc1.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long string_len = string.length;\n    long substring_len\
    \ = substring.length;\n    for (long i = 0; i < string_len; i++) \n    {\n   \
    \     if (string[i .. i + substring_len] == substring) \n        {\n         \
    \   count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate\
    \ = how_many_times;\n\n    assert(candidate(\"\", \"x\") == 0L);\n    assert(candidate(\"\
    xyxyxyx\", \"x\") == 4L);\n    assert(candidate(\"cacacacac\", \"cac\") == 4L);\n\
    \    assert(candidate(\"john doe\", \"john\") == 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpog3uz_eq.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long index = 0;\n    while (true) \n    {\n        index\
    \ = string.find(substring, index);\n        if (index == -1) \n        {\n   \
    \         break;\n        }\n        count++;\n        index++;\n    }\n    return\
    \ count;\n}\nunittest\n{\n    alias candidate = how_many_times;\n\n    assert(candidate(\"\
    \", \"x\") == 0L);\n    assert(candidate(\"xyxyxyx\", \"x\") == 4L);\n    assert(candidate(\"\
    cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"john doe\", \"john\") ==\
    \ 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp90ban_x3.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long pos = 0;\n    while ((pos = string.find(substring,\
    \ pos)) != -1) \n    {\n        count++;\n        pos += substring.length;\n \
    \   }\n    return count;\n}\nunittest\n{\n    alias candidate = how_many_times;\n\
    \n    assert(candidate(\"\", \"x\") == 0L);\n    assert(candidate(\"xyxyxyx\"\
    , \"x\") == 4L);\n    assert(candidate(\"cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"\
    john doe\", \"john\") == 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0mezg9kv.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long pos = 0;\n    while ((pos = string.find(substring,\
    \ pos)) != -1) \n    {\n        count++;\n        pos += substring.length;\n \
    \   }\n    return count;\n}\nunittest\n{\n    alias candidate = how_many_times;\n\
    \n    assert(candidate(\"\", \"x\") == 0L);\n    assert(candidate(\"xyxyxyx\"\
    , \"x\") == 4L);\n    assert(candidate(\"cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"\
    john doe\", \"john\") == 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0mezg9kv.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long index = 0;\n    while ((index = string.find(substring,\
    \ index)) != -1) \n    {\n        ++count;\n        ++index;\n    }\n    return\
    \ count;\n}\nunittest\n{\n    alias candidate = how_many_times;\n\n    assert(candidate(\"\
    \", \"x\") == 0L);\n    assert(candidate(\"xyxyxyx\", \"x\") == 4L);\n    assert(candidate(\"\
    cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"john doe\", \"john\") ==\
    \ 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp86x3y223.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long index = 0;\n    while(true)\n    {\n        index\
    \ = string.find(substring, index);\n        if(index == -1)\n            break;\n\
    \        count++;\n        index++;\n    }\n    return count;\n}\nunittest\n{\n\
    \    alias candidate = how_many_times;\n\n    assert(candidate(\"\", \"x\") ==\
    \ 0L);\n    assert(candidate(\"xyxyxyx\", \"x\") == 4L);\n    assert(candidate(\"\
    cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"john doe\", \"john\") ==\
    \ 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1g0mtvia.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long index = 0;\n    while(true)\n    {\n        index\
    \ = string.find(substring, index);\n        if(index == -1)\n            break;\n\
    \        count++;\n        index++;\n    }\n    return count;\n}\nunittest\n{\n\
    \    alias candidate = how_many_times;\n\n    assert(candidate(\"\", \"x\") ==\
    \ 0L);\n    assert(candidate(\"xyxyxyx\", \"x\") == 4L);\n    assert(candidate(\"\
    cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"john doe\", \"john\") ==\
    \ 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1g0mtvia.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long index = 0;\n    while (true) \n    {\n        index\
    \ = string.find(substring, index);\n        if (index == -1) \n        {\n   \
    \         break;\n        }\n        ++count;\n        ++index;\n    }\n    return\
    \ count;\n}\nunittest\n{\n    alias candidate = how_many_times;\n\n    assert(candidate(\"\
    \", \"x\") == 0L);\n    assert(candidate(\"xyxyxyx\", \"x\") == 4L);\n    assert(candidate(\"\
    cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"john doe\", \"john\") ==\
    \ 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpv2ercp_v.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long index = 0;\n    while(true)\n    {\n        index\
    \ = string.find(substring, index);\n        if(index == -1)\n            break;\n\
    \        count++;\n        index++;\n    }\n    return count;\n}\nunittest\n{\n\
    \    alias candidate = how_many_times;\n\n    assert(candidate(\"\", \"x\") ==\
    \ 0L);\n    assert(candidate(\"xyxyxyx\", \"x\") == 4L);\n    assert(candidate(\"\
    cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"john doe\", \"john\") ==\
    \ 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1g0mtvia.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long index = 0;\n    while (true) \n    {\n        index\
    \ = string.find(substring, index);\n        if (index == -1) \n        {\n   \
    \         break;\n        }\n        count++;\n        index++;\n    }\n    return\
    \ count;\n}\nunittest\n{\n    alias candidate = how_many_times;\n\n    assert(candidate(\"\
    \", \"x\") == 0L);\n    assert(candidate(\"xyxyxyx\", \"x\") == 4L);\n    assert(candidate(\"\
    cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"john doe\", \"john\") ==\
    \ 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp90ban_x3.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long pos = 0;\n    while ((pos = string.find(substring,\
    \ pos)) != -1) \n    {\n        ++count;\n        ++pos;\n    }\n    return count;\n\
    }\nunittest\n{\n    alias candidate = how_many_times;\n\n    assert(candidate(\"\
    \", \"x\") == 0L);\n    assert(candidate(\"xyxyxyx\", \"x\") == 4L);\n    assert(candidate(\"\
    cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"john doe\", \"john\") ==\
    \ 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgmax03sn.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long index = 0;\n    while (true) \n    {\n        index\
    \ = string.find(substring, index);\n        if (index == -1) \n        {\n   \
    \         break;\n        }\n        count++;\n        index++;\n    }\n    return\
    \ count;\n}\nunittest\n{\n    alias candidate = how_many_times;\n\n    assert(candidate(\"\
    \", \"x\") == 0L);\n    assert(candidate(\"xyxyxyx\", \"x\") == 4L);\n    assert(candidate(\"\
    cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"john doe\", \"john\") ==\
    \ 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp90ban_x3.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long pos = 0;\n    while (true) \n    {\n        pos\
    \ = string.find(substring, pos);\n        if (pos == -1)\n            break;\n\
    \        count++;\n        pos++;\n    }\n    return count;\n}\nunittest\n{\n\
    \    alias candidate = how_many_times;\n\n    assert(candidate(\"\", \"x\") ==\
    \ 0L);\n    assert(candidate(\"xyxyxyx\", \"x\") == 4L);\n    assert(candidate(\"\
    cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"john doe\", \"john\") ==\
    \ 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg9op7arr.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long index = 0;\n    while (true) \n    {\n        index\
    \ = string.find(substring, index);\n        if (index == -1) \n        {\n   \
    \         break;\n        }\n        count++;\n        index++;\n    }\n    return\
    \ count;\n}\nunittest\n{\n    alias candidate = how_many_times;\n\n    assert(candidate(\"\
    \", \"x\") == 0L);\n    assert(candidate(\"xyxyxyx\", \"x\") == 4L);\n    assert(candidate(\"\
    cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"john doe\", \"john\") ==\
    \ 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp90ban_x3.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long index = 0;\n    while ((index = string.find(substring,\
    \ index)) != -1) \n    {\n        ++count;\n        ++index;\n    }\n    return\
    \ count;\n}\nunittest\n{\n    alias candidate = how_many_times;\n\n    assert(candidate(\"\
    \", \"x\") == 0L);\n    assert(candidate(\"xyxyxyx\", \"x\") == 4L);\n    assert(candidate(\"\
    cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"john doe\", \"john\") ==\
    \ 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp86x3y223.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long pos = 0;\n    while (true) \n    {\n        pos\
    \ = string.find(substring, pos);\n        if (pos == -1) \n        {\n       \
    \     break;\n        }\n        count++;\n        pos++;\n    }\n    return count;\n\
    }\nunittest\n{\n    alias candidate = how_many_times;\n\n    assert(candidate(\"\
    \", \"x\") == 0L);\n    assert(candidate(\"xyxyxyx\", \"x\") == 4L);\n    assert(candidate(\"\
    cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"john doe\", \"john\") ==\
    \ 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgp5j6s5w.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long index = 0;\n    while (true) \n    {\n        index\
    \ = string.find(substring, index);\n        if (index == -1) \n        {\n   \
    \         break;\n        }\n        count++;\n        index++;\n    }\n    return\
    \ count;\n}\nunittest\n{\n    alias candidate = how_many_times;\n\n    assert(candidate(\"\
    \", \"x\") == 0L);\n    assert(candidate(\"xyxyxyx\", \"x\") == 4L);\n    assert(candidate(\"\
    cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"john doe\", \"john\") ==\
    \ 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp90ban_x3.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long pos = 0;\n    while ((pos = string.find(substring,\
    \ pos)) != -1) \n    {\n        count++;\n        pos += substring.length;\n \
    \   }\n    return count;\n}\nunittest\n{\n    alias candidate = how_many_times;\n\
    \n    assert(candidate(\"\", \"x\") == 0L);\n    assert(candidate(\"xyxyxyx\"\
    , \"x\") == 4L);\n    assert(candidate(\"cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"\
    john doe\", \"john\") == 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0mezg9kv.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long pos = 0;\n    while ((pos = string.find(substring,\
    \ pos)) != string.npos) \n    {\n        ++count;\n        ++pos;\n    }\n   \
    \ return count;\n}\nunittest\n{\n    alias candidate = how_many_times;\n\n   \
    \ assert(candidate(\"\", \"x\") == 0L);\n    assert(candidate(\"xyxyxyx\", \"\
    x\") == 4L);\n    assert(candidate(\"cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"\
    john doe\", \"john\") == 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpu3n7nn9g.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long index = 0;\n    while (true) \n    {\n        index\
    \ = string.find(substring, index);\n        if (index == -1) \n        {\n   \
    \         break;\n        }\n        count++;\n        index++;\n    }\n    return\
    \ count;\n}\nunittest\n{\n    alias candidate = how_many_times;\n\n    assert(candidate(\"\
    \", \"x\") == 0L);\n    assert(candidate(\"xyxyxyx\", \"x\") == 4L);\n    assert(candidate(\"\
    cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"john doe\", \"john\") ==\
    \ 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp90ban_x3.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long pos = 0;\n    while ((pos = string.find(substring,\
    \ pos)) != -1) \n    {\n        count++;\n        pos += substring.length;\n \
    \   }\n    return count;\n}\nunittest\n{\n    alias candidate = how_many_times;\n\
    \n    assert(candidate(\"\", \"x\") == 0L);\n    assert(candidate(\"xyxyxyx\"\
    , \"x\") == 4L);\n    assert(candidate(\"cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"\
    john doe\", \"john\") == 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0mezg9kv.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long pos = 0;\n    while (true) \n    {\n        pos\
    \ = string.find(substring, pos);\n        if (pos == -1) \n        {\n       \
    \     break;\n        }\n        count++;\n        pos++;\n    }\n    return count;\n\
    }\nunittest\n{\n    alias candidate = how_many_times;\n\n    assert(candidate(\"\
    \", \"x\") == 0L);\n    assert(candidate(\"xyxyxyx\", \"x\") == 4L);\n    assert(candidate(\"\
    cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"john doe\", \"john\") ==\
    \ 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgp5j6s5w.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long pos = 0;\n    while (true) {\n        pos = string.find(substring,\
    \ pos);\n        if (pos == -1) break;\n        ++count;\n        ++pos;\n   \
    \ }\n    return count;\n}\nunittest\n{\n    alias candidate = how_many_times;\n\
    \n    assert(candidate(\"\", \"x\") == 0L);\n    assert(candidate(\"xyxyxyx\"\
    , \"x\") == 4L);\n    assert(candidate(\"cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"\
    john doe\", \"john\") == 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp09c27h09.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long pos = 0;\n    while ((pos = string.find(substring,\
    \ pos)) != string.npos) \n    {\n        ++count;\n        ++pos;\n    }\n   \
    \ return count;\n}\nunittest\n{\n    alias candidate = how_many_times;\n\n   \
    \ assert(candidate(\"\", \"x\") == 0L);\n    assert(candidate(\"xyxyxyx\", \"\
    x\") == 4L);\n    assert(candidate(\"cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"\
    john doe\", \"john\") == 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpu3n7nn9g.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long pos = 0;\n    while ((pos = string.find(substring,\
    \ pos)) != -1) \n    {\n        count++;\n        pos += substring.length;\n \
    \   }\n    return count;\n}\nunittest\n{\n    alias candidate = how_many_times;\n\
    \n    assert(candidate(\"\", \"x\") == 0L);\n    assert(candidate(\"xyxyxyx\"\
    , \"x\") == 4L);\n    assert(candidate(\"cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"\
    john doe\", \"john\") == 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0mezg9kv.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long index = 0;\n    while (true) \n    {\n        index\
    \ = string.find(substring, index);\n        if (index == -1)\n            break;\n\
    \        ++count;\n        ++index;\n    }\n    return count;\n}\nunittest\n{\n\
    \    alias candidate = how_many_times;\n\n    assert(candidate(\"\", \"x\") ==\
    \ 0L);\n    assert(candidate(\"xyxyxyx\", \"x\") == 4L);\n    assert(candidate(\"\
    cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"john doe\", \"john\") ==\
    \ 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5yuk1ehw.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long pos = 0;\n    while ((pos = string.find(substring,\
    \ pos)) != string.npos) \n    {\n        ++count;\n        ++pos;\n    }\n   \
    \ return count;\n}\nunittest\n{\n    alias candidate = how_many_times;\n\n   \
    \ assert(candidate(\"\", \"x\") == 0L);\n    assert(candidate(\"xyxyxyx\", \"\
    x\") == 4L);\n    assert(candidate(\"cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"\
    john doe\", \"john\") == 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpu3n7nn9g.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long index = 0;\n    while (true) \n    {\n        index\
    \ = string.find(substring, index);\n        if (index == -1)\n            break;\n\
    \        count++;\n        index++;\n    }\n    return count;\n}\nunittest\n{\n\
    \    alias candidate = how_many_times;\n\n    assert(candidate(\"\", \"x\") ==\
    \ 0L);\n    assert(candidate(\"xyxyxyx\", \"x\") == 4L);\n    assert(candidate(\"\
    cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"john doe\", \"john\") ==\
    \ 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptl6uyl75.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long index = 0;\n    while(index != -1) \n    {\n  \
    \      index = string.find(substring, index);\n        if(index != -1) \n    \
    \    {\n            count++;\n            index++;\n        }\n    }\n    return\
    \ count;\n}\nunittest\n{\n    alias candidate = how_many_times;\n\n    assert(candidate(\"\
    \", \"x\") == 0L);\n    assert(candidate(\"xyxyxyx\", \"x\") == 4L);\n    assert(candidate(\"\
    cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"john doe\", \"john\") ==\
    \ 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqttxr44g.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long pos = 0;\n    while(true) \n    {\n        pos\
    \ = string.find(substring, pos);\n        if(pos == -1) \n        {\n        \
    \    break;\n        }\n        count++;\n        pos += substring.length;\n \
    \   }\n    return count;\n}\nunittest\n{\n    alias candidate = how_many_times;\n\
    \n    assert(candidate(\"\", \"x\") == 0L);\n    assert(candidate(\"xyxyxyx\"\
    , \"x\") == 4L);\n    assert(candidate(\"cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"\
    john doe\", \"john\") == 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8lqsehjn.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long pos = 0;\n    while (true) {\n        pos = string.find(substring,\
    \ pos);\n        if (pos == -1) {\n            break;\n        }\n        count++;\n\
    \        pos++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate\
    \ = how_many_times;\n\n    assert(candidate(\"\", \"x\") == 0L);\n    assert(candidate(\"\
    xyxyxyx\", \"x\") == 4L);\n    assert(candidate(\"cacacacac\", \"cac\") == 4L);\n\
    \    assert(candidate(\"john doe\", \"john\") == 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpm1c3_mxs.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long index = 0;\n    while (true) \n    {\n        index\
    \ = string.find(substring, index);\n        if (index == -1) \n        {\n   \
    \         break;\n        }\n        count++;\n        index++;\n    }\n    return\
    \ count;\n}\nunittest\n{\n    alias candidate = how_many_times;\n\n    assert(candidate(\"\
    \", \"x\") == 0L);\n    assert(candidate(\"xyxyxyx\", \"x\") == 4L);\n    assert(candidate(\"\
    cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"john doe\", \"john\") ==\
    \ 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp90ban_x3.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long index = 0;\n    while ((index = string.find(substring,\
    \ index)) != -1) \n    {\n        count++;\n        index += substring.length;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = how_many_times;\n\
    \n    assert(candidate(\"\", \"x\") == 0L);\n    assert(candidate(\"xyxyxyx\"\
    , \"x\") == 4L);\n    assert(candidate(\"cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"\
    john doe\", \"john\") == 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpc_17h4zv.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long pos = 0;\n    while ((pos = string.find(substring,\
    \ pos)) != string.npos) \n    {\n        count++;\n        pos += substring.length();\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = how_many_times;\n\
    \n    assert(candidate(\"\", \"x\") == 0L);\n    assert(candidate(\"xyxyxyx\"\
    , \"x\") == 4L);\n    assert(candidate(\"cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"\
    john doe\", \"john\") == 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsrflnsmg.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long pos = 0;\n    while ((pos = string.find(substring,\
    \ pos)) != -1) \n    {\n        count++;\n        pos += substring.length;\n \
    \   }\n    return count;\n}\nunittest\n{\n    alias candidate = how_many_times;\n\
    \n    assert(candidate(\"\", \"x\") == 0L);\n    assert(candidate(\"xyxyxyx\"\
    , \"x\") == 4L);\n    assert(candidate(\"cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"\
    john doe\", \"john\") == 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0mezg9kv.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long string_size = string.length;\n    long substring_size\
    \ = substring.length;\n    long i = 0;\n    while (i < string_size) \n    {\n\
    \        if (string[i .. i + substring_size] == substring) \n        {\n     \
    \       count++;\n            i += substring_size;\n        } \n        else \n\
    \        {\n            i++;\n        }\n    }\n    return count;\n}\nunittest\n\
    {\n    alias candidate = how_many_times;\n\n    assert(candidate(\"\", \"x\")\
    \ == 0L);\n    assert(candidate(\"xyxyxyx\", \"x\") == 4L);\n    assert(candidate(\"\
    cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"john doe\", \"john\") ==\
    \ 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5ox5d2po.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long pos = 0;\n    while ((pos = string.find(substring,\
    \ pos)) != -1) \n    {\n        count++;\n        pos += substring.length;\n \
    \   }\n    return count;\n}\nunittest\n{\n    alias candidate = how_many_times;\n\
    \n    assert(candidate(\"\", \"x\") == 0L);\n    assert(candidate(\"xyxyxyx\"\
    , \"x\") == 4L);\n    assert(candidate(\"cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"\
    john doe\", \"john\") == 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0mezg9kv.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long i = 0;\n    while (true) \n    {\n        i = string.find(substring,\
    \ i);\n        if (i == -1) break;\n        ++count;\n        ++i;\n    }\n  \
    \  return count;\n}\nunittest\n{\n    alias candidate = how_many_times;\n\n  \
    \  assert(candidate(\"\", \"x\") == 0L);\n    assert(candidate(\"xyxyxyx\", \"\
    x\") == 4L);\n    assert(candidate(\"cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"\
    john doe\", \"john\") == 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdckqhwvo.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long index = 0;\n    while ((index = string.find(substring,\
    \ index)) != -1) \n    {\n        count++;\n        index += substring.length;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = how_many_times;\n\
    \n    assert(candidate(\"\", \"x\") == 0L);\n    assert(candidate(\"xyxyxyx\"\
    , \"x\") == 4L);\n    assert(candidate(\"cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"\
    john doe\", \"john\") == 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpc_17h4zv.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long index = 0;\n    while ((index = string.find(substring,\
    \ index)) != -1) \n    {\n        count++;\n        index += substring.length;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = how_many_times;\n\
    \n    assert(candidate(\"\", \"x\") == 0L);\n    assert(candidate(\"xyxyxyx\"\
    , \"x\") == 4L);\n    assert(candidate(\"cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"\
    john doe\", \"john\") == 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpc_17h4zv.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long index = 0;\n    while ((index = string.find(substring,\
    \ index)) != -1) \n    {\n        ++count;\n        ++index;\n    }\n    return\
    \ count;\n}\nunittest\n{\n    alias candidate = how_many_times;\n\n    assert(candidate(\"\
    \", \"x\") == 0L);\n    assert(candidate(\"xyxyxyx\", \"x\") == 4L);\n    assert(candidate(\"\
    cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"john doe\", \"john\") ==\
    \ 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp86x3y223.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long index = 0;\n    while (true)\n    {\n        index\
    \ = string.find(substring, index);\n        if (index == -1)\n            break;\n\
    \        count++;\n        index++;\n    }\n    return count;\n}\nunittest\n{\n\
    \    alias candidate = how_many_times;\n\n    assert(candidate(\"\", \"x\") ==\
    \ 0L);\n    assert(candidate(\"xyxyxyx\", \"x\") == 4L);\n    assert(candidate(\"\
    cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"john doe\", \"john\") ==\
    \ 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbe54md23.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long index = 0;\n    while ((index = string.find(substring,\
    \ index)) != -1) \n    {\n        ++count;\n        ++index;\n    }\n    return\
    \ count;\n}\nunittest\n{\n    alias candidate = how_many_times;\n\n    assert(candidate(\"\
    \", \"x\") == 0L);\n    assert(candidate(\"xyxyxyx\", \"x\") == 4L);\n    assert(candidate(\"\
    cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"john doe\", \"john\") ==\
    \ 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp86x3y223.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long pos = 0;\n    while ((pos = string.find(substring,\
    \ pos)) != -1) \n    {\n        count++;\n        pos += substring.length;\n \
    \   }\n    return count;\n}\nunittest\n{\n    alias candidate = how_many_times;\n\
    \n    assert(candidate(\"\", \"x\") == 0L);\n    assert(candidate(\"xyxyxyx\"\
    , \"x\") == 4L);\n    assert(candidate(\"cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"\
    john doe\", \"john\") == 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0mezg9kv.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long index = 0;\n    while (true)\n    {\n        index\
    \ = string.find(substring, index);\n        if (index == -1)\n            break;\n\
    \        count++;\n        index++;\n    }\n    return count;\n}\nunittest\n{\n\
    \    alias candidate = how_many_times;\n\n    assert(candidate(\"\", \"x\") ==\
    \ 0L);\n    assert(candidate(\"xyxyxyx\", \"x\") == 4L);\n    assert(candidate(\"\
    cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"john doe\", \"john\") ==\
    \ 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbe54md23.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long pos = 0;\n    while ((pos = string.find(substring,\
    \ pos)) != string.npos) {\n        ++count;\n        ++pos;\n    }\n    return\
    \ count;\n}\nunittest\n{\n    alias candidate = how_many_times;\n\n    assert(candidate(\"\
    \", \"x\") == 0L);\n    assert(candidate(\"xyxyxyx\", \"x\") == 4L);\n    assert(candidate(\"\
    cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"john doe\", \"john\") ==\
    \ 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpzvovxrjx.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long pos = 0;\n    while ((pos = string.find(substring,\
    \ pos)) != -1) \n    {\n        count++;\n        pos += substring.length;\n \
    \   }\n    return count;\n}\nunittest\n{\n    alias candidate = how_many_times;\n\
    \n    assert(candidate(\"\", \"x\") == 0L);\n    assert(candidate(\"xyxyxyx\"\
    , \"x\") == 4L);\n    assert(candidate(\"cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"\
    john doe\", \"john\") == 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0mezg9kv.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long index = 0;\n    while (true) \n    {\n        index\
    \ = string.find(substring, index);\n        if (index == -1)\n            break;\n\
    \        count++;\n        index++;\n    }\n    return count;\n}\nunittest\n{\n\
    \    alias candidate = how_many_times;\n\n    assert(candidate(\"\", \"x\") ==\
    \ 0L);\n    assert(candidate(\"xyxyxyx\", \"x\") == 4L);\n    assert(candidate(\"\
    cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"john doe\", \"john\") ==\
    \ 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptl6uyl75.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long pos = 0;\n    while (true) \n    {\n        pos\
    \ = string.find(substring, pos);\n        if (pos == -1) \n        {\n       \
    \     break;\n        }\n        count++;\n        pos++;\n    }\n    return count;\n\
    }\nunittest\n{\n    alias candidate = how_many_times;\n\n    assert(candidate(\"\
    \", \"x\") == 0L);\n    assert(candidate(\"xyxyxyx\", \"x\") == 4L);\n    assert(candidate(\"\
    cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"john doe\", \"john\") ==\
    \ 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgp5j6s5w.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long index = 0;\n    while (true) \n    {\n        index\
    \ = string.find(substring, index);\n        if (index == -1)\n            break;\n\
    \        count++;\n        index++;\n    }\n    return count;\n}\nunittest\n{\n\
    \    alias candidate = how_many_times;\n\n    assert(candidate(\"\", \"x\") ==\
    \ 0L);\n    assert(candidate(\"xyxyxyx\", \"x\") == 4L);\n    assert(candidate(\"\
    cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"john doe\", \"john\") ==\
    \ 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptl6uyl75.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long index = 0;\n    while(true)\n    {\n        index\
    \ = string.find(substring, index);\n        if(index == -1)\n            break;\n\
    \        count++;\n        index++;\n    }\n    return count;\n}\nunittest\n{\n\
    \    alias candidate = how_many_times;\n\n    assert(candidate(\"\", \"x\") ==\
    \ 0L);\n    assert(candidate(\"xyxyxyx\", \"x\") == 4L);\n    assert(candidate(\"\
    cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"john doe\", \"john\") ==\
    \ 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1g0mtvia.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long index = 0;\n    while (true) \n    {\n        index\
    \ = string.find(substring, index);\n        if (index == -1) \n        {\n   \
    \         break;\n        }\n        count++;\n        index++;\n    }\n    return\
    \ count;\n}\nunittest\n{\n    alias candidate = how_many_times;\n\n    assert(candidate(\"\
    \", \"x\") == 0L);\n    assert(candidate(\"xyxyxyx\", \"x\") == 4L);\n    assert(candidate(\"\
    cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"john doe\", \"john\") ==\
    \ 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp90ban_x3.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long pos = 0;\n    while ((pos = string.find(substring,\
    \ pos)) != -1) {\n        count++;\n        pos += substring.length;\n    }\n\
    \    return count;\n}\nunittest\n{\n    alias candidate = how_many_times;\n\n\
    \    assert(candidate(\"\", \"x\") == 0L);\n    assert(candidate(\"xyxyxyx\",\
    \ \"x\") == 4L);\n    assert(candidate(\"cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"\
    john doe\", \"john\") == 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcdo3xjzl.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long pos = 0;\n    while (true) {\n        pos = string.find(substring,\
    \ pos);\n        if (pos == -1) {\n            break;\n        }\n        count++;\n\
    \        pos++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate\
    \ = how_many_times;\n\n    assert(candidate(\"\", \"x\") == 0L);\n    assert(candidate(\"\
    xyxyxyx\", \"x\") == 4L);\n    assert(candidate(\"cacacacac\", \"cac\") == 4L);\n\
    \    assert(candidate(\"john doe\", \"john\") == 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpm1c3_mxs.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long pos = 0;\n    while (true) {\n        pos = string.find(substring,\
    \ pos);\n        if (pos == -1) break;\n        ++count;\n        ++pos;\n   \
    \ }\n    return count;\n}\nunittest\n{\n    alias candidate = how_many_times;\n\
    \n    assert(candidate(\"\", \"x\") == 0L);\n    assert(candidate(\"xyxyxyx\"\
    , \"x\") == 4L);\n    assert(candidate(\"cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"\
    john doe\", \"john\") == 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp09c27h09.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long pos = 0;\n    while (true) \n    {\n        pos\
    \ = string.find(substring, pos);\n        if (pos == -1) \n        {\n       \
    \     break;\n        }\n        count++;\n        pos++;\n    }\n    return count;\n\
    }\nunittest\n{\n    alias candidate = how_many_times;\n\n    assert(candidate(\"\
    \", \"x\") == 0L);\n    assert(candidate(\"xyxyxyx\", \"x\") == 4L);\n    assert(candidate(\"\
    cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"john doe\", \"john\") ==\
    \ 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgp5j6s5w.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long index = 0;\n    while(true)\n    {\n        index\
    \ = string.find(substring, index);\n        if(index == -1)\n            break;\n\
    \        count++;\n        index++;\n    }\n    return count;\n}\nunittest\n{\n\
    \    alias candidate = how_many_times;\n\n    assert(candidate(\"\", \"x\") ==\
    \ 0L);\n    assert(candidate(\"xyxyxyx\", \"x\") == 4L);\n    assert(candidate(\"\
    cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"john doe\", \"john\") ==\
    \ 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1g0mtvia.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long start = 0;\n    while (true) \n    {\n        start\
    \ = string.find(substring, start);\n        if (start == -1)\n            break;\n\
    \        count++;\n        start += substring.length;\n    }\n    return count;\n\
    }\nunittest\n{\n    alias candidate = how_many_times;\n\n    assert(candidate(\"\
    \", \"x\") == 0L);\n    assert(candidate(\"xyxyxyx\", \"x\") == 4L);\n    assert(candidate(\"\
    cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"john doe\", \"john\") ==\
    \ 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpn9njbaqj.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long index = 0;\n    while (true) \n    {\n        index\
    \ = string.find(substring, index);\n        if (index == -1) \n        {\n   \
    \         break;\n        }\n        count++;\n        index++;\n    }\n    return\
    \ count;\n}\nunittest\n{\n    alias candidate = how_many_times;\n\n    assert(candidate(\"\
    \", \"x\") == 0L);\n    assert(candidate(\"xyxyxyx\", \"x\") == 4L);\n    assert(candidate(\"\
    cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"john doe\", \"john\") ==\
    \ 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp90ban_x3.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long index = 0;\n    while (true) \n    {\n        index\
    \ = string.find(substring, index);\n        if (index == -1) \n        {\n   \
    \         break;\n        }\n        count++;\n        index++;\n    }\n    return\
    \ count;\n}\nunittest\n{\n    alias candidate = how_many_times;\n\n    assert(candidate(\"\
    \", \"x\") == 0L);\n    assert(candidate(\"xyxyxyx\", \"x\") == 4L);\n    assert(candidate(\"\
    cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"john doe\", \"john\") ==\
    \ 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp90ban_x3.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long pos = 0;\n    while (true) {\n        pos = string.find(substring,\
    \ pos);\n        if (pos == -1) break;\n        count++;\n        pos++;\n   \
    \ }\n    return count;\n}\nunittest\n{\n    alias candidate = how_many_times;\n\
    \n    assert(candidate(\"\", \"x\") == 0L);\n    assert(candidate(\"xyxyxyx\"\
    , \"x\") == 4L);\n    assert(candidate(\"cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"\
    john doe\", \"john\") == 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp79376t7r.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long index = 0;\n    while (true) \n    {\n        index\
    \ = string.find(substring, index);\n        if (index == -1) \n        {\n   \
    \         break;\n        }\n        count++;\n        index++;\n    }\n    return\
    \ count;\n}\nunittest\n{\n    alias candidate = how_many_times;\n\n    assert(candidate(\"\
    \", \"x\") == 0L);\n    assert(candidate(\"xyxyxyx\", \"x\") == 4L);\n    assert(candidate(\"\
    cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"john doe\", \"john\") ==\
    \ 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp90ban_x3.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long pos = 0;\n    while ((pos = string.find(substring,\
    \ pos)) != -1) \n    {\n        count++;\n        pos += substring.length;\n \
    \   }\n    return count;\n}\nunittest\n{\n    alias candidate = how_many_times;\n\
    \n    assert(candidate(\"\", \"x\") == 0L);\n    assert(candidate(\"xyxyxyx\"\
    , \"x\") == 4L);\n    assert(candidate(\"cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"\
    john doe\", \"john\") == 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0mezg9kv.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long pos = 0;\n    while (true) {\n        pos = string.find(substring,\
    \ pos);\n        if (pos == -1) break;\n        count++;\n        pos++;\n   \
    \ }\n    return count;\n}\nunittest\n{\n    alias candidate = how_many_times;\n\
    \n    assert(candidate(\"\", \"x\") == 0L);\n    assert(candidate(\"xyxyxyx\"\
    , \"x\") == 4L);\n    assert(candidate(\"cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"\
    john doe\", \"john\") == 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp79376t7r.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long index = 0;\n    while (true) \n    {\n        index\
    \ = string.find(substring, index);\n        if (index == -1) \n        {\n   \
    \         break;\n        }\n        count++;\n        index++;\n    }\n    return\
    \ count;\n}\nunittest\n{\n    alias candidate = how_many_times;\n\n    assert(candidate(\"\
    \", \"x\") == 0L);\n    assert(candidate(\"xyxyxyx\", \"x\") == 4L);\n    assert(candidate(\"\
    cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"john doe\", \"john\") ==\
    \ 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp90ban_x3.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long pos = 0;\n    while ((pos = string.find(substring,\
    \ pos)) != -1) \n    {\n        count++;\n        pos += substring.length;\n \
    \   }\n    return count;\n}\nunittest\n{\n    alias candidate = how_many_times;\n\
    \n    assert(candidate(\"\", \"x\") == 0L);\n    assert(candidate(\"xyxyxyx\"\
    , \"x\") == 4L);\n    assert(candidate(\"cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"\
    john doe\", \"john\") == 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0mezg9kv.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long index = 0;\n    while (true) \n    {\n        index\
    \ = string.find(substring, index);\n        if (index == -1)\n            break;\n\
    \        count++;\n        index++;\n    }\n    return count;\n}\nunittest\n{\n\
    \    alias candidate = how_many_times;\n\n    assert(candidate(\"\", \"x\") ==\
    \ 0L);\n    assert(candidate(\"xyxyxyx\", \"x\") == 4L);\n    assert(candidate(\"\
    cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"john doe\", \"john\") ==\
    \ 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptl6uyl75.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long pos = 0;\n    while ((pos = string.find(substring,\
    \ pos)) != -1) \n    {\n        count++;\n        pos += substring.length;\n \
    \   }\n    return count;\n}\nunittest\n{\n    alias candidate = how_many_times;\n\
    \n    assert(candidate(\"\", \"x\") == 0L);\n    assert(candidate(\"xyxyxyx\"\
    , \"x\") == 4L);\n    assert(candidate(\"cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"\
    john doe\", \"john\") == 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0mezg9kv.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long pos = 0;\n    while (true) \n    {\n        pos\
    \ = string.find(substring, pos);\n        if (pos == -1) \n        {\n       \
    \     break;\n        }\n        count++;\n        pos++;\n    }\n    return count;\n\
    }\n/*\n Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\n                \n*/\nlong how_many_times(string string,\
    \ string substring) \n{\n    long count = 0;\n    long pos = 0;\n    while (true)\
    \ \n    {\n        pos = string.find(substring, pos);\n        if (pos == -1)\
    \ \n        {\n            break;\n        }\n        count++;\n        pos++;\n\
    \    }\n    return count;\n}\n/*\n Find how many times a given substring can be\
    \ found in the original string. Count overlaping cases.\n                \n*/\n\
    long how_many_times(string string, string substring) \n{\n    long count = 0;\n\
    \    long pos = 0;\n    while (true) \n    {\n        pos = string.find(substring,\
    \ pos);\n        if (pos == -1) \n        {\n            break;\n        }\n \
    \       count++;\n        pos++;\n    }\n    return count;\n}\n/*\n Find how many\
    \ times a given substring can be found in the original string. Count overlaping\
    \ cases.\n                \n*/\nlong how_many_times(string string, string substring)\
    \ \n{\n    long count = 0;\n    long pos = 0;\n    while (true) \n    {\n    \
    \    pos = string.find(substring, pos);\n        if (pos == -1) \n        {\n\
    \            break;\n        }\n        count++;\n        pos++;\n    }\n    return\
    \ count;\n}\n/*\n Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n                \n*/\nlong how_many_times(string\
    \ string, string substring) \n{\n    long count = 0;\n    long pos = 0;\n    while\
    \ (true) \n    {\n       \nunittest\n{\n    alias candidate = how_many_times;\n\
    \n    assert(candidate(\"\", \"x\") == 0L);\n    assert(candidate(\"xyxyxyx\"\
    , \"x\") == 4L);\n    assert(candidate(\"cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"\
    john doe\", \"john\") == 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpv0s64hbc.d(94): Error: found \''unittest\'' instead of statement\n/tmp/tmpv0s64hbc.d(103):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpv0s64hbc.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long index = 0;\n    while (true)\n    {\n        index\
    \ = string.find(substring, index);\n        if (index == -1)\n            break;\n\
    \        count++;\n        index++;\n    }\n    return count;\n}\nunittest\n{\n\
    \    alias candidate = how_many_times;\n\n    assert(candidate(\"\", \"x\") ==\
    \ 0L);\n    assert(candidate(\"xyxyxyx\", \"x\") == 4L);\n    assert(candidate(\"\
    cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"john doe\", \"john\") ==\
    \ 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbe54md23.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long index = 0;\n    while (true) \n    {\n        index\
    \ = string.find(substring, index);\n        if (index == -1) \n        {\n   \
    \         break;\n        }\n        count++;\n        index++;\n    }\n    return\
    \ count;\n}\nunittest\n{\n    alias candidate = how_many_times;\n\n    assert(candidate(\"\
    \", \"x\") == 0L);\n    assert(candidate(\"xyxyxyx\", \"x\") == 4L);\n    assert(candidate(\"\
    cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"john doe\", \"john\") ==\
    \ 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp90ban_x3.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long index = 0;\n    while (index != -1) \n    {\n \
    \       index = string.find(substring, index);\n        if (index != -1) \n  \
    \      {\n            ++count;\n            ++index;\n        }\n    }\n    return\
    \ count;\n}\nunittest\n{\n    alias candidate = how_many_times;\n\n    assert(candidate(\"\
    \", \"x\") == 0L);\n    assert(candidate(\"xyxyxyx\", \"x\") == 4L);\n    assert(candidate(\"\
    cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"john doe\", \"john\") ==\
    \ 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp58pdh8en.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long index = 0;\n    while (true) \n    {\n        index\
    \ = string.find(substring, index);\n        if (index == -1) \n        {\n   \
    \         break;\n        }\n        count++;\n        index++;\n    }\n    return\
    \ count;\n}\nunittest\n{\n    alias candidate = how_many_times;\n\n    assert(candidate(\"\
    \", \"x\") == 0L);\n    assert(candidate(\"xyxyxyx\", \"x\") == 4L);\n    assert(candidate(\"\
    cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"john doe\", \"john\") ==\
    \ 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp90ban_x3.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long index = 0;\n    while(true)\n    {\n        index\
    \ = string.find(substring, index);\n        if(index == -1)\n            break;\n\
    \        count++;\n        index++;\n    }\n    return count;\n}\nunittest\n{\n\
    \    alias candidate = how_many_times;\n\n    assert(candidate(\"\", \"x\") ==\
    \ 0L);\n    assert(candidate(\"xyxyxyx\", \"x\") == 4L);\n    assert(candidate(\"\
    cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"john doe\", \"john\") ==\
    \ 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1g0mtvia.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long pos = 0;\n    while(true)\n    {\n        pos =\
    \ string.find(substring, pos);\n        if(pos == -1)\n            break;\n  \
    \      count++;\n        pos++;\n    }\n    return count;\n}\nunittest\n{\n  \
    \  alias candidate = how_many_times;\n\n    assert(candidate(\"\", \"x\") == 0L);\n\
    \    assert(candidate(\"xyxyxyx\", \"x\") == 4L);\n    assert(candidate(\"cacacacac\"\
    , \"cac\") == 4L);\n    assert(candidate(\"john doe\", \"john\") == 1L);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpd5j40051.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long index = 0;\n    while (true) \n    {\n        index\
    \ = string.find(substring, index);\n        if (index == -1) \n        {\n   \
    \         break;\n        }\n        count++;\n        index++;\n    }\n    return\
    \ count;\n}\nunittest\n{\n    alias candidate = how_many_times;\n\n    assert(candidate(\"\
    \", \"x\") == 0L);\n    assert(candidate(\"xyxyxyx\", \"x\") == 4L);\n    assert(candidate(\"\
    cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"john doe\", \"john\") ==\
    \ 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp90ban_x3.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long pos = 0;\n    while ((pos = string.find(substring,\
    \ pos)) != -1) \n    {\n        count++;\n        pos += substring.length;\n \
    \   }\n    return count;\n}\nunittest\n{\n    alias candidate = how_many_times;\n\
    \n    assert(candidate(\"\", \"x\") == 0L);\n    assert(candidate(\"xyxyxyx\"\
    , \"x\") == 4L);\n    assert(candidate(\"cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"\
    john doe\", \"john\") == 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0mezg9kv.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long pos = 0;\n    while ((pos = string.find(substring,\
    \ pos)) != -1) \n    {\n        count++;\n        pos += substring.length;\n \
    \   }\n    return count;\n}\nunittest\n{\n    alias candidate = how_many_times;\n\
    \n    assert(candidate(\"\", \"x\") == 0L);\n    assert(candidate(\"xyxyxyx\"\
    , \"x\") == 4L);\n    assert(candidate(\"cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"\
    john doe\", \"john\") == 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0mezg9kv.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long index = 0;\n    while(true)\n    {\n        index\
    \ = string.find(substring, index);\n        if(index == -1)\n            break;\n\
    \        count++;\n        index++;\n    }\n    return count;\n}\nunittest\n{\n\
    \    alias candidate = how_many_times;\n\n    assert(candidate(\"\", \"x\") ==\
    \ 0L);\n    assert(candidate(\"xyxyxyx\", \"x\") == 4L);\n    assert(candidate(\"\
    cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"john doe\", \"john\") ==\
    \ 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1g0mtvia.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long index = 0;\n    while (true) \n    {\n        index\
    \ = string.find(substring, index);\n        if (index == -1) \n        {\n   \
    \         break;\n        }\n        count++;\n        index++;\n    }\n    return\
    \ count;\n}\nunittest\n{\n    alias candidate = how_many_times;\n\n    assert(candidate(\"\
    \", \"x\") == 0L);\n    assert(candidate(\"xyxyxyx\", \"x\") == 4L);\n    assert(candidate(\"\
    cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"john doe\", \"john\") ==\
    \ 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp90ban_x3.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long pos = 0;\n    while ((pos = string.find(substring,\
    \ pos)) != string.npos) {\n        count++;\n        pos += substring.length();\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = how_many_times;\n\
    \n    assert(candidate(\"\", \"x\") == 0L);\n    assert(candidate(\"xyxyxyx\"\
    , \"x\") == 4L);\n    assert(candidate(\"cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"\
    john doe\", \"john\") == 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpz91pgaqk.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long index = 0;\n    while (true) \n    {\n        index\
    \ = string.find(substring, index);\n        if (index == -1)\n            break;\n\
    \        index += 1;\n        count += 1;\n    }\n    return count;\n}\nunittest\n\
    {\n    alias candidate = how_many_times;\n\n    assert(candidate(\"\", \"x\")\
    \ == 0L);\n    assert(candidate(\"xyxyxyx\", \"x\") == 4L);\n    assert(candidate(\"\
    cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"john doe\", \"john\") ==\
    \ 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmppm2mejx5.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long pos = 0;\n    while ((pos = string.find(substring,\
    \ pos)) != -1) \n    {\n        count++;\n        pos += substring.length;\n \
    \   }\n    return count;\n}\nunittest\n{\n    alias candidate = how_many_times;\n\
    \n    assert(candidate(\"\", \"x\") == 0L);\n    assert(candidate(\"xyxyxyx\"\
    , \"x\") == 4L);\n    assert(candidate(\"cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"\
    john doe\", \"john\") == 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0mezg9kv.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long index = 0;\n    while (true) \n    {\n        index\
    \ = string.find(substring, index);\n        if (index == -1) \n        {\n   \
    \         break;\n        }\n        count += 1;\n        index += 1;\n    }\n\
    \    return count;\n}\nunittest\n{\n    alias candidate = how_many_times;\n\n\
    \    assert(candidate(\"\", \"x\") == 0L);\n    assert(candidate(\"xyxyxyx\",\
    \ \"x\") == 4L);\n    assert(candidate(\"cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"\
    john doe\", \"john\") == 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpf5_hgo48.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    for (long i = 0; i < string.length - substring.length\
    \ + 1; i++) \n    {\n        if (string[i .. i + substring.length - 1] == substring)\
    \ \n        {\n            count++;\n        }\n    }\n    return count;\n}\n\
    unittest\n{\n    alias candidate = how_many_times;\n\n    assert(candidate(\"\"\
    , \"x\") == 0L);\n    assert(candidate(\"xyxyxyx\", \"x\") == 4L);\n    assert(candidate(\"\
    cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"john doe\", \"john\") ==\
    \ 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcaafj4pg.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long index = 0;\n    while (true) \n    {\n        index\
    \ = string.find(substring, index);\n        if (index == -1)\n            break;\n\
    \        ++count;\n        ++index;\n    }\n    return count;\n}\nunittest\n{\n\
    \    alias candidate = how_many_times;\n\n    assert(candidate(\"\", \"x\") ==\
    \ 0L);\n    assert(candidate(\"xyxyxyx\", \"x\") == 4L);\n    assert(candidate(\"\
    cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"john doe\", \"john\") ==\
    \ 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5yuk1ehw.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long index = 0;\n    while (true) \n    {\n        index\
    \ = string.find(substring, index);\n        if (index == -1)\n            break;\n\
    \        count++;\n        index++;\n    }\n    return count;\n}\nunittest\n{\n\
    \    alias candidate = how_many_times;\n\n    assert(candidate(\"\", \"x\") ==\
    \ 0L);\n    assert(candidate(\"xyxyxyx\", \"x\") == 4L);\n    assert(candidate(\"\
    cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"john doe\", \"john\") ==\
    \ 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptl6uyl75.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long pos = 0;\n    while (true) {\n        pos = string.find(substring,\
    \ pos);\n        if (pos == -1) break;\n        count++;\n        pos++;\n   \
    \ }\n    return count;\n}\nunittest\n{\n    alias candidate = how_many_times;\n\
    \n    assert(candidate(\"\", \"x\") == 0L);\n    assert(candidate(\"xyxyxyx\"\
    , \"x\") == 4L);\n    assert(candidate(\"cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"\
    john doe\", \"john\") == 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp79376t7r.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long index = 0;\n    while (true) \n    {\n        index\
    \ = string.find(substring, index);\n        if (index == -1) \n        {\n   \
    \         break;\n        }\n        count++;\n        index++;\n    }\n    return\
    \ count;\n}\nunittest\n{\n    alias candidate = how_many_times;\n\n    assert(candidate(\"\
    \", \"x\") == 0L);\n    assert(candidate(\"xyxyxyx\", \"x\") == 4L);\n    assert(candidate(\"\
    cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"john doe\", \"john\") ==\
    \ 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp90ban_x3.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long index = 0;\n    while (true) \n    {\n        index\
    \ = string.find(substring, index);\n        if (index == -1) \n        {\n   \
    \         break;\n        }\n        ++count;\n        ++index;\n    }\n    return\
    \ count;\n}\nunittest\n{\n    alias candidate = how_many_times;\n\n    assert(candidate(\"\
    \", \"x\") == 0L);\n    assert(candidate(\"xyxyxyx\", \"x\") == 4L);\n    assert(candidate(\"\
    cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"john doe\", \"john\") ==\
    \ 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpv2ercp_v.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long substring_length = substring.length;\n    long\
    \ string_length = string.length;\n    long i = 0;\n    while (i < string_length)\
    \ \n    {\n        if (string[i..i+substring_length] == substring) \n        {\n\
    \            count++;\n            i += substring_length;\n        }\n       \
    \ else \n        {\n            i++;\n        }\n    }\n    return count;\n}\n\
    unittest\n{\n    alias candidate = how_many_times;\n\n    assert(candidate(\"\"\
    , \"x\") == 0L);\n    assert(candidate(\"xyxyxyx\", \"x\") == 4L);\n    assert(candidate(\"\
    cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"john doe\", \"john\") ==\
    \ 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdw4pa75u.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long index = 0;\n    while (true) \n    {\n        index\
    \ = string.find(substring, index);\n        if (index == -1)\n            break;\n\
    \        ++count;\n        ++index;\n    }\n    return count;\n}\nunittest\n{\n\
    \    alias candidate = how_many_times;\n\n    assert(candidate(\"\", \"x\") ==\
    \ 0L);\n    assert(candidate(\"xyxyxyx\", \"x\") == 4L);\n    assert(candidate(\"\
    cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"john doe\", \"john\") ==\
    \ 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5yuk1ehw.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long pos = 0;\n    while(true)\n    {\n        pos =\
    \ string.find(substring, pos);\n        if(pos == -1)\n            break;\n  \
    \      count++;\n        pos++;\n    }\n    return count;\n}\nunittest\n{\n  \
    \  alias candidate = how_many_times;\n\n    assert(candidate(\"\", \"x\") == 0L);\n\
    \    assert(candidate(\"xyxyxyx\", \"x\") == 4L);\n    assert(candidate(\"cacacacac\"\
    , \"cac\") == 4L);\n    assert(candidate(\"john doe\", \"john\") == 1L);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpd5j40051.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long index = 0;\n    while (true) \n    {\n        index\
    \ = string.find(substring, index);\n        if (index == -1) \n        {\n   \
    \         break;\n        }\n        index += 1;\n        count += 1;\n    }\n\
    \    return count;\n}\nunittest\n{\n    alias candidate = how_many_times;\n\n\
    \    assert(candidate(\"\", \"x\") == 0L);\n    assert(candidate(\"xyxyxyx\",\
    \ \"x\") == 4L);\n    assert(candidate(\"cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"\
    john doe\", \"john\") == 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpni7inypg.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long pos = 0;\n    while ((pos = string.find(substring,\
    \ pos)) != -1) \n    {\n        count++;\n        pos += substring.length;\n \
    \   }\n    return count;\n}\nunittest\n{\n    alias candidate = how_many_times;\n\
    \n    assert(candidate(\"\", \"x\") == 0L);\n    assert(candidate(\"xyxyxyx\"\
    , \"x\") == 4L);\n    assert(candidate(\"cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"\
    john doe\", \"john\") == 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0mezg9kv.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long index = 0;\n    while (true) \n    {\n        index\
    \ = string.find(substring, index);\n        if (index == -1)\n            break;\n\
    \        count++;\n        index++;\n    }\n    return count;\n}\nunittest\n{\n\
    \    alias candidate = how_many_times;\n\n    assert(candidate(\"\", \"x\") ==\
    \ 0L);\n    assert(candidate(\"xyxyxyx\", \"x\") == 4L);\n    assert(candidate(\"\
    cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"john doe\", \"john\") ==\
    \ 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptl6uyl75.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long index = 0;\n    while (true) \n    {\n        index\
    \ = string.find(substring, index);\n        if (index == -1) break;\n        count++;\n\
    \        index++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate\
    \ = how_many_times;\n\n    assert(candidate(\"\", \"x\") == 0L);\n    assert(candidate(\"\
    xyxyxyx\", \"x\") == 4L);\n    assert(candidate(\"cacacacac\", \"cac\") == 4L);\n\
    \    assert(candidate(\"john doe\", \"john\") == 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3vqmpdaa.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    size_t pos = 0;\n    while ((pos = string.find(substring,\
    \ pos)) != string.npos) \n    {\n        ++count;\n        pos += substring.length();\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = how_many_times;\n\
    \n    assert(candidate(\"\", \"x\") == 0L);\n    assert(candidate(\"xyxyxyx\"\
    , \"x\") == 4L);\n    assert(candidate(\"cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"\
    john doe\", \"john\") == 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgzksh38c.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long index = 0;\n    while ((index = string.find(substring,\
    \ index)) != -1) \n    {\n        count++;\n        index += substring.length;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = how_many_times;\n\
    \n    assert(candidate(\"\", \"x\") == 0L);\n    assert(candidate(\"xyxyxyx\"\
    , \"x\") == 4L);\n    assert(candidate(\"cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"\
    john doe\", \"john\") == 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpc_17h4zv.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long pos = 0;\n    while ((pos = string.find(substring,\
    \ pos)) != -1) \n    {\n        ++count;\n        ++pos;\n    }\n    return count;\n\
    }\nunittest\n{\n    alias candidate = how_many_times;\n\n    assert(candidate(\"\
    \", \"x\") == 0L);\n    assert(candidate(\"xyxyxyx\", \"x\") == 4L);\n    assert(candidate(\"\
    cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"john doe\", \"john\") ==\
    \ 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgmax03sn.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long pos = 0;\n    while(true)\n    {\n        pos =\
    \ string.find(substring, pos);\n        if(pos == -1)\n            break;\n  \
    \      count++;\n        pos++;\n    }\n    return count;\n}\nunittest\n{\n  \
    \  alias candidate = how_many_times;\n\n    assert(candidate(\"\", \"x\") == 0L);\n\
    \    assert(candidate(\"xyxyxyx\", \"x\") == 4L);\n    assert(candidate(\"cacacacac\"\
    , \"cac\") == 4L);\n    assert(candidate(\"john doe\", \"john\") == 1L);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpd5j40051.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long index = 0;\n    while (true) \n    {\n        index\
    \ = string.find(substring, index);\n        if (index == -1) \n        {\n   \
    \         break;\n        }\n        count++;\n        index++;\n    }\n    return\
    \ count;\n}\nunittest\n{\n    alias candidate = how_many_times;\n\n    assert(candidate(\"\
    \", \"x\") == 0L);\n    assert(candidate(\"xyxyxyx\", \"x\") == 4L);\n    assert(candidate(\"\
    cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"john doe\", \"john\") ==\
    \ 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp90ban_x3.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long pos = 0;\n    while (true) {\n        pos = string.find(substring,\
    \ pos);\n        if (pos == -1) break;\n        count++;\n        pos++;\n   \
    \ }\n    return count;\n}\nunittest\n{\n    alias candidate = how_many_times;\n\
    \n    assert(candidate(\"\", \"x\") == 0L);\n    assert(candidate(\"xyxyxyx\"\
    , \"x\") == 4L);\n    assert(candidate(\"cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"\
    john doe\", \"john\") == 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp79376t7r.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long len = string.length;\n    long sub_len = substring.length;\n\
    \    for (long i = 0; i < len; i++) \n    {\n        if (string[i..i+sub_len]\
    \ == substring) \n        {\n            count++;\n        }\n    }\n    return\
    \ count;\n}\nunittest\n{\n    alias candidate = how_many_times;\n\n    assert(candidate(\"\
    \", \"x\") == 0L);\n    assert(candidate(\"xyxyxyx\", \"x\") == 4L);\n    assert(candidate(\"\
    cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"john doe\", \"john\") ==\
    \ 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6b0k5fs2.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long pos = 0;\n    while ((pos = string.find(substring,\
    \ pos)) != string.npos) \n    {\n        ++count;\n        ++pos;\n    }\n   \
    \ return count;\n}\nunittest\n{\n    alias candidate = how_many_times;\n\n   \
    \ assert(candidate(\"\", \"x\") == 0L);\n    assert(candidate(\"xyxyxyx\", \"\
    x\") == 4L);\n    assert(candidate(\"cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"\
    john doe\", \"john\") == 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpu3n7nn9g.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long index = 0;\n    while (true) \n    {\n        index\
    \ = string.find(substring, index);\n        if (index == -1) \n        {\n   \
    \         break;\n        }\n        index += 1;\n        count += 1;\n    }\n\
    \    return count;\n}\nunittest\n{\n    alias candidate = how_many_times;\n\n\
    \    assert(candidate(\"\", \"x\") == 0L);\n    assert(candidate(\"xyxyxyx\",\
    \ \"x\") == 4L);\n    assert(candidate(\"cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"\
    john doe\", \"john\") == 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpni7inypg.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long index = 0;\n    while(true)\n    {\n        index\
    \ = string.find(substring, index);\n        if(index == -1)\n            break;\n\
    \        count++;\n        index++;\n    }\n    return count;\n}\nunittest\n{\n\
    \    alias candidate = how_many_times;\n\n    assert(candidate(\"\", \"x\") ==\
    \ 0L);\n    assert(candidate(\"xyxyxyx\", \"x\") == 4L);\n    assert(candidate(\"\
    cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"john doe\", \"john\") ==\
    \ 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1g0mtvia.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long pos = 0;\n    while (true) \n    {\n        pos\
    \ = string.find(substring, pos);\n        if (pos == -1) \n        {\n       \
    \     break;\n        }\n        count++;\n        pos++;\n    }\n    return count;\n\
    }\nunittest\n{\n    alias candidate = how_many_times;\n\n    assert(candidate(\"\
    \", \"x\") == 0L);\n    assert(candidate(\"xyxyxyx\", \"x\") == 4L);\n    assert(candidate(\"\
    cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"john doe\", \"john\") ==\
    \ 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgp5j6s5w.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long pos = 0;\n    while ((pos = string.find(substring,\
    \ pos)) != -1) {\n        count++;\n        pos += substring.length;\n    }\n\
    \    return count;\n}\nunittest\n{\n    alias candidate = how_many_times;\n\n\
    \    assert(candidate(\"\", \"x\") == 0L);\n    assert(candidate(\"xyxyxyx\",\
    \ \"x\") == 4L);\n    assert(candidate(\"cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"\
    john doe\", \"john\") == 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcdo3xjzl.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long pos = 0;\n    while (true) \n    {\n        pos\
    \ = string.find(substring, pos);\n        if (pos == -1)\n            break;\n\
    \        count++;\n        pos++;\n    }\n    return count;\n}\nunittest\n{\n\
    \    alias candidate = how_many_times;\n\n    assert(candidate(\"\", \"x\") ==\
    \ 0L);\n    assert(candidate(\"xyxyxyx\", \"x\") == 4L);\n    assert(candidate(\"\
    cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"john doe\", \"john\") ==\
    \ 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg9op7arr.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long index = 0;\n    while (true)\n    {\n        index\
    \ = string.find(substring, index);\n        if (index == -1)\n            break;\n\
    \        count++;\n        index++;\n    }\n    return count;\n}\nunittest\n{\n\
    \    alias candidate = how_many_times;\n\n    assert(candidate(\"\", \"x\") ==\
    \ 0L);\n    assert(candidate(\"xyxyxyx\", \"x\") == 4L);\n    assert(candidate(\"\
    cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"john doe\", \"john\") ==\
    \ 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbe54md23.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long index = 0;\n    while (true) \n    {\n        index\
    \ = string.find(substring, index);\n        if (index == -1)\n            break;\n\
    \        count++;\n        index++;\n    }\n    return count;\n}\nunittest\n{\n\
    \    alias candidate = how_many_times;\n\n    assert(candidate(\"\", \"x\") ==\
    \ 0L);\n    assert(candidate(\"xyxyxyx\", \"x\") == 4L);\n    assert(candidate(\"\
    cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"john doe\", \"john\") ==\
    \ 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptl6uyl75.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long index = 0;\n    while (true)\n    {\n        index\
    \ = string.find(substring, index);\n        if (index == -1)\n            break;\n\
    \        count++;\n        index++;\n    }\n    return count;\n}\nunittest\n{\n\
    \    alias candidate = how_many_times;\n\n    assert(candidate(\"\", \"x\") ==\
    \ 0L);\n    assert(candidate(\"xyxyxyx\", \"x\") == 4L);\n    assert(candidate(\"\
    cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"john doe\", \"john\") ==\
    \ 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbe54md23.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long index = 0;\n    while (true) \n    {\n        index\
    \ = string.find(substring, index);\n        if (index == -1)\n            break;\n\
    \        count++;\n        index++;\n    }\n    return count;\n}\nunittest\n{\n\
    \    alias candidate = how_many_times;\n\n    assert(candidate(\"\", \"x\") ==\
    \ 0L);\n    assert(candidate(\"xyxyxyx\", \"x\") == 4L);\n    assert(candidate(\"\
    cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"john doe\", \"john\") ==\
    \ 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptl6uyl75.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long pos = 0;\n    while ((pos = string.find(substring,\
    \ pos)) != -1) \n    {\n        count++;\n        pos += substring.length;\n \
    \   }\n    return count;\n}\nunittest\n{\n    alias candidate = how_many_times;\n\
    \n    assert(candidate(\"\", \"x\") == 0L);\n    assert(candidate(\"xyxyxyx\"\
    , \"x\") == 4L);\n    assert(candidate(\"cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"\
    john doe\", \"john\") == 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0mezg9kv.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long index = 0;\n    while(true)\n    {\n        index\
    \ = string.find(substring, index);\n        if(index == -1)\n            break;\n\
    \        count++;\n        index++;\n    }\n    return count;\n}\nunittest\n{\n\
    \    alias candidate = how_many_times;\n\n    assert(candidate(\"\", \"x\") ==\
    \ 0L);\n    assert(candidate(\"xyxyxyx\", \"x\") == 4L);\n    assert(candidate(\"\
    cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"john doe\", \"john\") ==\
    \ 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1g0mtvia.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long index = 0;\n    while (true)\n    {\n        index\
    \ = string.find(substring, index);\n        if (index == -1)\n            break;\n\
    \        count++;\n        index++;\n    }\n    return count;\n}\nunittest\n{\n\
    \    alias candidate = how_many_times;\n\n    assert(candidate(\"\", \"x\") ==\
    \ 0L);\n    assert(candidate(\"xyxyxyx\", \"x\") == 4L);\n    assert(candidate(\"\
    cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"john doe\", \"john\") ==\
    \ 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbe54md23.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long pos = 0;\n    while (true) {\n        pos = string.find(substring,\
    \ pos);\n        if (pos == -1) {\n            break;\n        }\n        count++;\n\
    \        pos++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate\
    \ = how_many_times;\n\n    assert(candidate(\"\", \"x\") == 0L);\n    assert(candidate(\"\
    xyxyxyx\", \"x\") == 4L);\n    assert(candidate(\"cacacacac\", \"cac\") == 4L);\n\
    \    assert(candidate(\"john doe\", \"john\") == 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpm1c3_mxs.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long index = 0;\n    while (true) \n    {\n        index\
    \ = string.find(substring, index);\n        if (index == -1) \n        {\n   \
    \         break;\n        }\n        ++count;\n        ++index;\n    }\n    return\
    \ count;\n}\nunittest\n{\n    alias candidate = how_many_times;\n\n    assert(candidate(\"\
    \", \"x\") == 0L);\n    assert(candidate(\"xyxyxyx\", \"x\") == 4L);\n    assert(candidate(\"\
    cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"john doe\", \"john\") ==\
    \ 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpv2ercp_v.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long index = 0;\n    while (true)\n    {\n        index\
    \ = string.find(substring, index);\n        if (index == -1)\n            break;\n\
    \        ++count;\n        ++index;\n    }\n    return count;\n}\nunittest\n{\n\
    \    alias candidate = how_many_times;\n\n    assert(candidate(\"\", \"x\") ==\
    \ 0L);\n    assert(candidate(\"xyxyxyx\", \"x\") == 4L);\n    assert(candidate(\"\
    cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"john doe\", \"john\") ==\
    \ 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpekrh1lzb.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    size_t pos = 0;\n    while ((pos = string.find(substring,\
    \ pos)) != string.npos) {\n        ++count;\n        ++pos;\n    }\n    return\
    \ count;\n}\nunittest\n{\n    alias candidate = how_many_times;\n\n    assert(candidate(\"\
    \", \"x\") == 0L);\n    assert(candidate(\"xyxyxyx\", \"x\") == 4L);\n    assert(candidate(\"\
    cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"john doe\", \"john\") ==\
    \ 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmppsn6obr_.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    for (long i = 0; i < string.length; i++) \n    {\n \
    \       if (string[i..$] == substring) \n        {\n            count++;\n   \
    \     }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = how_many_times;\n\
    \n    assert(candidate(\"\", \"x\") == 0L);\n    assert(candidate(\"xyxyxyx\"\
    , \"x\") == 4L);\n    assert(candidate(\"cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"\
    john doe\", \"john\") == 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnxv0jrib.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long index = 0;\n    while (true) \n    {\n        index\
    \ = string.find(substring, index);\n        if (index == -1) \n        {\n   \
    \         break;\n        }\n        count++;\n        index++;\n    }\n    return\
    \ count;\n}\nunittest\n{\n    alias candidate = how_many_times;\n\n    assert(candidate(\"\
    \", \"x\") == 0L);\n    assert(candidate(\"xyxyxyx\", \"x\") == 4L);\n    assert(candidate(\"\
    cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"john doe\", \"john\") ==\
    \ 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp90ban_x3.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long pos = 0;\n    while ((pos = string.find(substring,\
    \ pos)) != -1) \n    {\n        count++;\n        pos += substring.length;\n \
    \   }\n    return count;\n}\nunittest\n{\n    alias candidate = how_many_times;\n\
    \n    assert(candidate(\"\", \"x\") == 0L);\n    assert(candidate(\"xyxyxyx\"\
    , \"x\") == 4L);\n    assert(candidate(\"cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"\
    john doe\", \"john\") == 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0mezg9kv.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long index = 0;\n    while ((index = string.find(substring,\
    \ index)) != -1) \n    {\n        count++;\n        index += substring.length;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = how_many_times;\n\
    \n    assert(candidate(\"\", \"x\") == 0L);\n    assert(candidate(\"xyxyxyx\"\
    , \"x\") == 4L);\n    assert(candidate(\"cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"\
    john doe\", \"john\") == 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpc_17h4zv.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long index = 0;\n    while ((index = string.find(substring,\
    \ index)) != -1) \n    {\n        ++count;\n        ++index;\n    }\n    return\
    \ count;\n}\nunittest\n{\n    alias candidate = how_many_times;\n\n    assert(candidate(\"\
    \", \"x\") == 0L);\n    assert(candidate(\"xyxyxyx\", \"x\") == 4L);\n    assert(candidate(\"\
    cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"john doe\", \"john\") ==\
    \ 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp86x3y223.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long pos = 0;\n    while ((pos = string.find(substring,\
    \ pos)) != -1) \n    {\n        ++count;\n        ++pos;\n    }\n    return count;\n\
    }\nunittest\n{\n    alias candidate = how_many_times;\n\n    assert(candidate(\"\
    \", \"x\") == 0L);\n    assert(candidate(\"xyxyxyx\", \"x\") == 4L);\n    assert(candidate(\"\
    cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"john doe\", \"john\") ==\
    \ 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgmax03sn.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long pos = 0;\n    while ((pos = string.find(substring,\
    \ pos)) != -1) \n    {\n        count++;\n        pos += substring.length;\n \
    \   }\n    return count;\n}\nunittest\n{\n    alias candidate = how_many_times;\n\
    \n    assert(candidate(\"\", \"x\") == 0L);\n    assert(candidate(\"xyxyxyx\"\
    , \"x\") == 4L);\n    assert(candidate(\"cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"\
    john doe\", \"john\") == 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0mezg9kv.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long index = string.find(substring);\n    while (index\
    \ != -1) {\n        count++;\n        index = string.find(substring, index + 1);\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = how_many_times;\n\
    \n    assert(candidate(\"\", \"x\") == 0L);\n    assert(candidate(\"xyxyxyx\"\
    , \"x\") == 4L);\n    assert(candidate(\"cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"\
    john doe\", \"john\") == 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6wwqyzz8.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long index = 0;\n    while (true) \n    {\n        index\
    \ = string.find(substring, index);\n        if (index == -1)\n            break;\n\
    \        count++;\n        index++;\n    }\n    return count;\n}\nunittest\n{\n\
    \    alias candidate = how_many_times;\n\n    assert(candidate(\"\", \"x\") ==\
    \ 0L);\n    assert(candidate(\"xyxyxyx\", \"x\") == 4L);\n    assert(candidate(\"\
    cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"john doe\", \"john\") ==\
    \ 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptl6uyl75.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long pos = 0;\n    while (true) \n    {\n        pos\
    \ = string.find(substring, pos);\n        if (pos == -1) \n        {\n       \
    \     break;\n        }\n        count++;\n        pos++;\n    }\n    return count;\n\
    }\nunittest\n{\n    alias candidate = how_many_times;\n\n    assert(candidate(\"\
    \", \"x\") == 0L);\n    assert(candidate(\"xyxyxyx\", \"x\") == 4L);\n    assert(candidate(\"\
    cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"john doe\", \"john\") ==\
    \ 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgp5j6s5w.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long index = 0;\n    while (true) \n    {\n        index\
    \ = string.find(substring, index);\n        if (index == -1) break;\n        ++count;\n\
    \        ++index;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate\
    \ = how_many_times;\n\n    assert(candidate(\"\", \"x\") == 0L);\n    assert(candidate(\"\
    xyxyxyx\", \"x\") == 4L);\n    assert(candidate(\"cacacacac\", \"cac\") == 4L);\n\
    \    assert(candidate(\"john doe\", \"john\") == 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphyohw7x0.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long string_length = string.length;\n    long substring_length\
    \ = substring.length;\n    for (long i = 0; i < string_length; i++)\n    {\n \
    \       if (string[i..i+substring_length] == substring)\n        {\n         \
    \   count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate\
    \ = how_many_times;\n\n    assert(candidate(\"\", \"x\") == 0L);\n    assert(candidate(\"\
    xyxyxyx\", \"x\") == 4L);\n    assert(candidate(\"cacacacac\", \"cac\") == 4L);\n\
    \    assert(candidate(\"john doe\", \"john\") == 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpd736bpq8.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long index = 0;\n    while (true) \n    {\n        index\
    \ = string.find(substring, index);\n        if (index == -1)\n            break;\n\
    \        ++count;\n        ++index;\n    }\n    return count;\n}\nunittest\n{\n\
    \    alias candidate = how_many_times;\n\n    assert(candidate(\"\", \"x\") ==\
    \ 0L);\n    assert(candidate(\"xyxyxyx\", \"x\") == 4L);\n    assert(candidate(\"\
    cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"john doe\", \"john\") ==\
    \ 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5yuk1ehw.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long pos = 0;\n    while ((pos = string.find(substring,\
    \ pos)) != string.npos) \n    {\n        ++count;\n        ++pos;\n    }\n   \
    \ return count;\n}\nunittest\n{\n    alias candidate = how_many_times;\n\n   \
    \ assert(candidate(\"\", \"x\") == 0L);\n    assert(candidate(\"xyxyxyx\", \"\
    x\") == 4L);\n    assert(candidate(\"cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"\
    john doe\", \"john\") == 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpu3n7nn9g.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long string_length = string.length;\n    long substring_length\
    \ = substring.length;\n    long i = 0;\n    while (i < string_length) \n    {\n\
    \        if (string[i .. i + substring_length] == substring) \n        {\n   \
    \         count++;\n            i += substring_length;\n        } \n        else\
    \ \n        {\n            i++;\n        }\n    }\n    return count;\n}\nunittest\n\
    {\n    alias candidate = how_many_times;\n\n    assert(candidate(\"\", \"x\")\
    \ == 0L);\n    assert(candidate(\"xyxyxyx\", \"x\") == 4L);\n    assert(candidate(\"\
    cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"john doe\", \"john\") ==\
    \ 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpn2xlq9aq.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long pos = 0;\n    while ((pos = string.find(substring,\
    \ pos)) != -1) \n    {\n        count++;\n        pos += substring.length;\n \
    \   }\n    return count;\n}\nunittest\n{\n    alias candidate = how_many_times;\n\
    \n    assert(candidate(\"\", \"x\") == 0L);\n    assert(candidate(\"xyxyxyx\"\
    , \"x\") == 4L);\n    assert(candidate(\"cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"\
    john doe\", \"john\") == 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0mezg9kv.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long i = 0;\n    while (i < string.length) \n    {\n\
    \        auto pos = string.find(substring, i);\n        if (pos == string.npos)\
    \ \n        {\n            break;\n        }\n        count++;\n        i = pos\
    \ + 1;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = how_many_times;\n\
    \n    assert(candidate(\"\", \"x\") == 0L);\n    assert(candidate(\"xyxyxyx\"\
    , \"x\") == 4L);\n    assert(candidate(\"cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"\
    john doe\", \"john\") == 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmdpaidzl.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long index = 0;\n    while (true) \n    {\n        index\
    \ = string.find(substring, index);\n        if (index == -1) \n        {\n   \
    \         break;\n        }\n        count++;\n        index++;\n    }\n    return\
    \ count;\n}\nunittest\n{\n    alias candidate = how_many_times;\n\n    assert(candidate(\"\
    \", \"x\") == 0L);\n    assert(candidate(\"xyxyxyx\", \"x\") == 4L);\n    assert(candidate(\"\
    cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"john doe\", \"john\") ==\
    \ 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp90ban_x3.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long pos = 0;\n    while ((pos = string.find(substring,\
    \ pos)) != -1) \n    {\n        count++;\n        pos += substring.length;\n \
    \   }\n    return count;\n}\nunittest\n{\n    alias candidate = how_many_times;\n\
    \n    assert(candidate(\"\", \"x\") == 0L);\n    assert(candidate(\"xyxyxyx\"\
    , \"x\") == 4L);\n    assert(candidate(\"cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"\
    john doe\", \"john\") == 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0mezg9kv.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long index = 0;\n    while ((index = string.find(substring,\
    \ index)) != string.npos) \n    {\n        ++count;\n        ++index;\n    }\n\
    \    return count;\n}\nunittest\n{\n    alias candidate = how_many_times;\n\n\
    \    assert(candidate(\"\", \"x\") == 0L);\n    assert(candidate(\"xyxyxyx\",\
    \ \"x\") == 4L);\n    assert(candidate(\"cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"\
    john doe\", \"john\") == 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpahqnwqzu.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long index = 0;\n    while (true) \n    {\n        index\
    \ = string.find(substring, index);\n        if (index == -1) \n        {\n   \
    \         break;\n        }\n        count++;\n        index++;\n    }\n    return\
    \ count;\n}\nunittest\n{\n    alias candidate = how_many_times;\n\n    assert(candidate(\"\
    \", \"x\") == 0L);\n    assert(candidate(\"xyxyxyx\", \"x\") == 4L);\n    assert(candidate(\"\
    cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"john doe\", \"john\") ==\
    \ 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp90ban_x3.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long index = 0;\n    while (true) \n    {\n        index\
    \ = string.find(substring, index);\n        if (index == -1) \n        {\n   \
    \         break;\n        }\n        count++;\n        index++;\n    }\n    return\
    \ count;\n}\nunittest\n{\n    alias candidate = how_many_times;\n\n    assert(candidate(\"\
    \", \"x\") == 0L);\n    assert(candidate(\"xyxyxyx\", \"x\") == 4L);\n    assert(candidate(\"\
    cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"john doe\", \"john\") ==\
    \ 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp90ban_x3.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long string_length = string.length;\n    long substring_length\
    \ = substring.length;\n    long i = 0;\n    while (i < string_length - substring_length\
    \ + 1) {\n        if (string[i .. i + substring_length] == substring) {\n    \
    \        count++;\n            i += substring_length;\n        } else {\n    \
    \        i++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias\
    \ candidate = how_many_times;\n\n    assert(candidate(\"\", \"x\") == 0L);\n \
    \   assert(candidate(\"xyxyxyx\", \"x\") == 4L);\n    assert(candidate(\"cacacacac\"\
    , \"cac\") == 4L);\n    assert(candidate(\"john doe\", \"john\") == 1L);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmppo24b9jo.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long index = 0;\n    while (true) \n    {\n        index\
    \ = string.find(substring, index);\n        if (index == -1) \n        {\n   \
    \         break;\n        }\n        count++;\n        index++;\n    }\n    return\
    \ count;\n}\nunittest\n{\n    alias candidate = how_many_times;\n\n    assert(candidate(\"\
    \", \"x\") == 0L);\n    assert(candidate(\"xyxyxyx\", \"x\") == 4L);\n    assert(candidate(\"\
    cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"john doe\", \"john\") ==\
    \ 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp90ban_x3.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long pos = 0;\n    while ((pos = string.find(substring,\
    \ pos)) != -1) \n    {\n        count++;\n        pos += substring.length;\n \
    \   }\n    return count;\n}\nunittest\n{\n    alias candidate = how_many_times;\n\
    \n    assert(candidate(\"\", \"x\") == 0L);\n    assert(candidate(\"xyxyxyx\"\
    , \"x\") == 4L);\n    assert(candidate(\"cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"\
    john doe\", \"john\") == 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0mezg9kv.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long index = 0;\n    while (index != -1) \n    {\n \
    \       index = string.find(substring, index);\n        if (index != -1) \n  \
    \      {\n            count++;\n            index++;\n        }\n    }\n    return\
    \ count;\n}\nunittest\n{\n    alias candidate = how_many_times;\n\n    assert(candidate(\"\
    \", \"x\") == 0L);\n    assert(candidate(\"xyxyxyx\", \"x\") == 4L);\n    assert(candidate(\"\
    cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"john doe\", \"john\") ==\
    \ 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0mbgrwun.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long pos = 0;\n    while (true) \n    {\n        pos\
    \ = string.find(substring, pos);\n        if (pos == -1) \n        {\n       \
    \     break;\n        }\n        count++;\n        pos++;\n    }\n    return count;\n\
    }\nunittest\n{\n    alias candidate = how_many_times;\n\n    assert(candidate(\"\
    \", \"x\") == 0L);\n    assert(candidate(\"xyxyxyx\", \"x\") == 4L);\n    assert(candidate(\"\
    cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"john doe\", \"john\") ==\
    \ 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgp5j6s5w.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long pos = 0;\n    while (true) \n    {\n        pos\
    \ = string.find(substring, pos);\n        if (pos == -1) \n        {\n       \
    \     break;\n        }\n        ++count;\n        ++pos;\n    }\n    return count;\n\
    }\nunittest\n{\n    alias candidate = how_many_times;\n\n    assert(candidate(\"\
    \", \"x\") == 0L);\n    assert(candidate(\"xyxyxyx\", \"x\") == 4L);\n    assert(candidate(\"\
    cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"john doe\", \"john\") ==\
    \ 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmppcn39ic4.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long index = 0;\n    while ((index = string.find(substring,\
    \ index)) != -1) \n    {\n        ++count;\n        ++index;\n    }\n    return\
    \ count;\n}\nunittest\n{\n    alias candidate = how_many_times;\n\n    assert(candidate(\"\
    \", \"x\") == 0L);\n    assert(candidate(\"xyxyxyx\", \"x\") == 4L);\n    assert(candidate(\"\
    cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"john doe\", \"john\") ==\
    \ 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp86x3y223.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long index = 0;\n    while (true) \n    {\n        index\
    \ = string.find(substring, index);\n        if (index == -1)\n            break;\n\
    \        count++;\n        index++;\n    }\n    return count;\n}\nunittest\n{\n\
    \    alias candidate = how_many_times;\n\n    assert(candidate(\"\", \"x\") ==\
    \ 0L);\n    assert(candidate(\"xyxyxyx\", \"x\") == 4L);\n    assert(candidate(\"\
    cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"john doe\", \"john\") ==\
    \ 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptl6uyl75.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long pos = 0;\n    while (true) \n    {\n        pos\
    \ = string.find(substring, pos);\n        if (pos == -1) break;\n        ++count;\n\
    \        ++pos;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate\
    \ = how_many_times;\n\n    assert(candidate(\"\", \"x\") == 0L);\n    assert(candidate(\"\
    xyxyxyx\", \"x\") == 4L);\n    assert(candidate(\"cacacacac\", \"cac\") == 4L);\n\
    \    assert(candidate(\"john doe\", \"john\") == 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpba4ix3u6.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long pos = 0;\n    while ((pos = string.find(substring,\
    \ pos)) != -1) \n    {\n        count++;\n        pos += substring.length;\n \
    \   }\n    return count;\n}\nunittest\n{\n    alias candidate = how_many_times;\n\
    \n    assert(candidate(\"\", \"x\") == 0L);\n    assert(candidate(\"xyxyxyx\"\
    , \"x\") == 4L);\n    assert(candidate(\"cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"\
    john doe\", \"john\") == 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0mezg9kv.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long pos = 0;\n    while (true) \n    {\n        pos\
    \ = string.find(substring, pos);\n        if (pos == -1) break;\n        ++count;\n\
    \        ++pos;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate\
    \ = how_many_times;\n\n    assert(candidate(\"\", \"x\") == 0L);\n    assert(candidate(\"\
    xyxyxyx\", \"x\") == 4L);\n    assert(candidate(\"cacacacac\", \"cac\") == 4L);\n\
    \    assert(candidate(\"john doe\", \"john\") == 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpba4ix3u6.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long pos = 0;\n    while ((pos = string.find(substring,\
    \ pos)) != -1) \n    {\n        count++;\n        pos += substring.length;\n \
    \   }\n    return count;\n}\nunittest\n{\n    alias candidate = how_many_times;\n\
    \n    assert(candidate(\"\", \"x\") == 0L);\n    assert(candidate(\"xyxyxyx\"\
    , \"x\") == 4L);\n    assert(candidate(\"cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"\
    john doe\", \"john\") == 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0mezg9kv.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long index = 0;\n    while(true) \n    {\n        index\
    \ = string.find(substring, index);\n        if(index == -1) \n        {\n    \
    \        break;\n        }\n        count++;\n        index++;\n    }\n    return\
    \ count;\n}\nunittest\n{\n    alias candidate = how_many_times;\n\n    assert(candidate(\"\
    \", \"x\") == 0L);\n    assert(candidate(\"xyxyxyx\", \"x\") == 4L);\n    assert(candidate(\"\
    cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"john doe\", \"john\") ==\
    \ 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkmkn_yb9.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long pos = 0;\n    while (true) {\n        pos = string.find(substring,\
    \ pos);\n        if (pos == -1) {\n            break;\n        }\n        count++;\n\
    \        pos++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate\
    \ = how_many_times;\n\n    assert(candidate(\"\", \"x\") == 0L);\n    assert(candidate(\"\
    xyxyxyx\", \"x\") == 4L);\n    assert(candidate(\"cacacacac\", \"cac\") == 4L);\n\
    \    assert(candidate(\"john doe\", \"john\") == 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpm1c3_mxs.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long pos = 0;\n    while (true) {\n        pos = string.find(substring,\
    \ pos);\n        if (pos == -1) {\n            break;\n        }\n        count++;\n\
    \        pos++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate\
    \ = how_many_times;\n\n    assert(candidate(\"\", \"x\") == 0L);\n    assert(candidate(\"\
    xyxyxyx\", \"x\") == 4L);\n    assert(candidate(\"cacacacac\", \"cac\") == 4L);\n\
    \    assert(candidate(\"john doe\", \"john\") == 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpm1c3_mxs.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long pos = 0;\n    while (true) \n    {\n        pos\
    \ = string.find(substring, pos);\n        if (pos == -1) \n        {\n       \
    \     break;\n        }\n        count++;\n        pos++;\n    }\n    return count;\n\
    }\nunittest\n{\n    alias candidate = how_many_times;\n\n    assert(candidate(\"\
    \", \"x\") == 0L);\n    assert(candidate(\"xyxyxyx\", \"x\") == 4L);\n    assert(candidate(\"\
    cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"john doe\", \"john\") ==\
    \ 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgp5j6s5w.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long index = 0;\n    while (true) \n    {\n        index\
    \ = string.find(substring, index);\n        if (index == -1)\n            break;\n\
    \        count++;\n        index++;\n    }\n    return count;\n}\nunittest\n{\n\
    \    alias candidate = how_many_times;\n\n    assert(candidate(\"\", \"x\") ==\
    \ 0L);\n    assert(candidate(\"xyxyxyx\", \"x\") == 4L);\n    assert(candidate(\"\
    cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"john doe\", \"john\") ==\
    \ 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptl6uyl75.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long result = 0;\n    long substring_length = substring.length;\n    long\
    \ string_length = string.length;\n    long i = 0;\n    while (i < string_length)\
    \ \n    {\n        if (string[i .. i + substring_length] == substring) \n    \
    \    {\n            result += 1;\n            i += substring_length;\n       \
    \ }\n        else \n        {\n            i += 1;\n        }\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = how_many_times;\n\n    assert(candidate(\"\
    \", \"x\") == 0L);\n    assert(candidate(\"xyxyxyx\", \"x\") == 4L);\n    assert(candidate(\"\
    cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"john doe\", \"john\") ==\
    \ 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpb5rrjlvq.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long index = 0;\n    while ((index = string.find(substring,\
    \ index)) != -1) {\n        count++;\n        index += substring.length;\n   \
    \ }\n    return count;\n}\nunittest\n{\n    alias candidate = how_many_times;\n\
    \n    assert(candidate(\"\", \"x\") == 0L);\n    assert(candidate(\"xyxyxyx\"\
    , \"x\") == 4L);\n    assert(candidate(\"cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"\
    john doe\", \"john\") == 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpawgr0pys.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long index = 0;\n    while (true)\n    {\n        index\
    \ = string.find(substring, index);\n        if (index == -1)\n            break;\n\
    \        count++;\n        index++;\n    }\n    return count;\n}\nunittest\n{\n\
    \    alias candidate = how_many_times;\n\n    assert(candidate(\"\", \"x\") ==\
    \ 0L);\n    assert(candidate(\"xyxyxyx\", \"x\") == 4L);\n    assert(candidate(\"\
    cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"john doe\", \"john\") ==\
    \ 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbe54md23.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long index = 0;\n    while (true) \n    {\n        index\
    \ = string.find(substring, index);\n        if (index == -1)\n            break;\n\
    \        count++;\n        index++;\n    }\n    return count;\n}\nunittest\n{\n\
    \    alias candidate = how_many_times;\n\n    assert(candidate(\"\", \"x\") ==\
    \ 0L);\n    assert(candidate(\"xyxyxyx\", \"x\") == 4L);\n    assert(candidate(\"\
    cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"john doe\", \"john\") ==\
    \ 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptl6uyl75.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long pos = 0;\n    while ((pos = string.find(substring,\
    \ pos)) != string.npos) \n    {\n        count++;\n        pos += substring.length();\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = how_many_times;\n\
    \n    assert(candidate(\"\", \"x\") == 0L);\n    assert(candidate(\"xyxyxyx\"\
    , \"x\") == 4L);\n    assert(candidate(\"cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"\
    john doe\", \"john\") == 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsrflnsmg.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    for (long i = 0; i < string.length - substring.length\
    \ + 1; i++) \n    {\n        if (string[i .. i + substring.length - 1] == substring)\
    \ \n        {\n            count++;\n        }\n    }\n    return count;\n}\n\
    unittest\n{\n    alias candidate = how_many_times;\n\n    assert(candidate(\"\"\
    , \"x\") == 0L);\n    assert(candidate(\"xyxyxyx\", \"x\") == 4L);\n    assert(candidate(\"\
    cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"john doe\", \"john\") ==\
    \ 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcaafj4pg.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long pos = 0;\n    while(true)\n    {\n        pos =\
    \ string.find(substring, pos);\n        if(pos == -1)\n            break;\n  \
    \      count++;\n        pos++;\n    }\n    return count;\n}\nunittest\n{\n  \
    \  alias candidate = how_many_times;\n\n    assert(candidate(\"\", \"x\") == 0L);\n\
    \    assert(candidate(\"xyxyxyx\", \"x\") == 4L);\n    assert(candidate(\"cacacacac\"\
    , \"cac\") == 4L);\n    assert(candidate(\"john doe\", \"john\") == 1L);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpd5j40051.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Find how many times a given\
    \ substring can be found in the original string. Count overlaping cases.\n   \
    \             \n*/\nlong how_many_times(string string, string substring) \n{\n\
    \    long count = 0;\n    long index = 0;\n    while (true)\n    {\n        index\
    \ = string.find(substring, index);\n        if (index == -1)\n            break;\n\
    \        count++;\n        index++;\n    }\n    return count;\n}\nunittest\n{\n\
    \    alias candidate = how_many_times;\n\n    assert(candidate(\"\", \"x\") ==\
    \ 0L);\n    assert(candidate(\"xyxyxyx\", \"x\") == 4L);\n    assert(candidate(\"\
    cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"john doe\", \"john\") ==\
    \ 1L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbe54md23.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660013916

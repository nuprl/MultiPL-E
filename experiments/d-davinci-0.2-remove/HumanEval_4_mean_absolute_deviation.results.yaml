language: d
name: HumanEval_4_mean_absolute_deviation
results:
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = 0.0;\n    float sum = 0.0;\n    foreach(n; numbers) {\n        sum +=\
    \ n;\n    }\n    mean = sum / numbers.length;\n    float sum_of_deviations = 0.0;\n\
    \    foreach(n; numbers) {\n        sum_of_deviations += abs(n - mean);\n    }\n\
    \    return sum_of_deviations / numbers.length;\n}\nunittest\n{\n    alias candidate\
    \ = mean_absolute_deviation;\n\n    assert(candidate([1.0, 2.0]) == 0.5);\n  \
    \  assert(candidate([1.0, 2.0, 3.0, 4.0]) == 1.0);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpyfn4_ppi.d(31): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283f5]

    ??:? void tmpyfn4_ppi.__unittest_L25_C1() [0x428159]

    ??:? void tmpyfn4_ppi.__modtest() [0x428178]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c3cf]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b262]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4303f5]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x4308a4]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430381]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b239]

    ??:? runModuleUnitTests [0x42c1a5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428844]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = 0.0;\n    foreach(n; numbers)\n        mean += n;\n    mean /= numbers.length;\n\
    \    float sum = 0.0;\n    foreach(n; numbers)\n        sum += abs(n - mean);\n\
    \    return sum / numbers.length;\n}\nunittest\n{\n    alias candidate = mean_absolute_deviation;\n\
    \n    assert(candidate([1.0, 2.0]) == 0.5);\n    assert(candidate([1.0, 2.0, 3.0,\
    \ 4.0]) == 1.0);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\n\
    void main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpe6zws45l.d(28): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283e5]

    ??:? void tmpe6zws45l.__unittest_L22_C1() [0x428149]

    ??:? void tmpe6zws45l.__modtest() [0x428168]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c3bf]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b252]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4303e5]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430894]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430371]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b229]

    ??:? runModuleUnitTests [0x42c195]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428834]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = 0.0;\n    foreach(n; numbers)\n        mean += n;\n    mean /= numbers.length;\n\
    \    float MAD = 0.0;\n    foreach(n; numbers)\n        MAD += abs(n - mean);\n\
    \    MAD /= numbers.length;\n    return MAD;\n}\nunittest\n{\n    alias candidate\
    \ = mean_absolute_deviation;\n\n    assert(candidate([1.0, 2.0]) == 0.5);\n  \
    \  assert(candidate([1.0, 2.0, 3.0, 4.0]) == 1.0);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpkq7hebsk.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283f5]

    ??:? void tmpkq7hebsk.__unittest_L23_C1() [0x428155]

    ??:? void tmpkq7hebsk.__modtest() [0x428174]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c3cf]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b262]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4303f5]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x4308a4]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430381]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b239]

    ??:? runModuleUnitTests [0x42c1a5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428844]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = 0.0;\n    foreach(n; numbers)\n    {\n        mean += n;\n    }\n   \
    \ mean /= numbers.length;\n    float sum = 0.0;\n    foreach(n; numbers)\n   \
    \ {\n        sum += abs(n - mean);\n    }\n    return sum / numbers.length;\n\
    }\nunittest\n{\n    alias candidate = mean_absolute_deviation;\n\n    assert(candidate([1.0,\
    \ 2.0]) == 0.5);\n    assert(candidate([1.0, 2.0, 3.0, 4.0]) == 1.0);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpyz68u3kb.d(32): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283e5]

    ??:? void tmpyz68u3kb.__unittest_L26_C1() [0x428149]

    ??:? void tmpyz68u3kb.__modtest() [0x428168]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c3bf]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b252]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4303e5]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430894]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430371]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b229]

    ??:? runModuleUnitTests [0x42c195]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428834]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = 0.0;\n    foreach(n; numbers) {\n        mean += n;\n    }\n    mean\
    \ /= numbers.length;\n    float mad = 0.0;\n    foreach(n; numbers) {\n      \
    \  mad += abs(n - mean);\n    }\n    mad /= numbers.length;\n    return mad;\n\
    }\nunittest\n{\n    alias candidate = mean_absolute_deviation;\n\n    assert(candidate([1.0,\
    \ 2.0]) == 0.5);\n    assert(candidate([1.0, 2.0, 3.0, 4.0]) == 1.0);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp4qt2ypcz.d(31): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283f5]

    ??:? void tmp4qt2ypcz.__unittest_L25_C1() [0x428155]

    ??:? void tmp4qt2ypcz.__modtest() [0x428174]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c3cf]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b262]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4303f5]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x4308a4]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430381]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b239]

    ??:? runModuleUnitTests [0x42c1a5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428844]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = mean(numbers);\n    float[] abs_deviations = new float[numbers.length];\n\
    \    foreach(i, number; numbers)\n    {\n        abs_deviations[i] = abs(number\
    \ - mean);\n    }\n    return mean(abs_deviations);\n}\nunittest\n{\n    alias\
    \ candidate = mean_absolute_deviation;\n\n    assert(candidate([1.0, 2.0]) ==\
    \ 0.5);\n    assert(candidate([1.0, 2.0, 3.0, 4.0]) == 1.0);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpz0c6emud.d(13): Error: undefined identifier `mean`, did you mean
    function `main`?

    /tmp/tmpz0c6emud.d(19): Error: function expected before `()`, not `mean` of type
    `float`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpz0c6emud.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = mean(numbers);\n    float[] abs_diff = new float[numbers.length];\n \
    \   foreach(i, number; numbers) {\n        abs_diff[i] = abs(number - mean);\n\
    \    }\n    return mean(abs_diff);\n}\nunittest\n{\n    alias candidate = mean_absolute_deviation;\n\
    \n    assert(candidate([1.0, 2.0]) == 0.5);\n    assert(candidate([1.0, 2.0, 3.0,\
    \ 4.0]) == 1.0);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpo45s0kpc.d(13): Error: undefined identifier `mean`, did you mean
    function `main`?

    /tmp/tmpo45s0kpc.d(18): Error: function expected before `()`, not `mean` of type
    `float`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpo45s0kpc.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ sum = 0;\n    float mean = 0;\n    float abs_diff = 0;\n    float mean_abs_dev\
    \ = 0;\n    float[] abs_diff_list = new float[numbers.length];\n    foreach(i,\
    \ val; numbers)\n    {\n        sum += val;\n    }\n    mean = sum / numbers.length;\n\
    \    foreach(i, val; numbers)\n    {\n        abs_diff = abs(val - mean);\n  \
    \      abs_diff_list[i] = abs_diff;\n    }\n    mean_abs_dev = mean(abs_diff_list);\n\
    \    return mean_abs_dev;\n}\nunittest\n{\n    alias candidate = mean_absolute_deviation;\n\
    \n    assert(candidate([1.0, 2.0]) == 0.5);\n    assert(candidate([1.0, 2.0, 3.0,\
    \ 4.0]) == 1.0);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpahqirwuo.d(28): Error: function expected before `()`, not `mean`
    of type `float`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpahqirwuo.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = mean(numbers);\n    float[] diffs = new float[numbers.length];\n    foreach\
    \ (i, number; numbers)\n    {\n        diffs[i] = abs(number - mean);\n    }\n\
    \    return mean(diffs);\n}\nunittest\n{\n    alias candidate = mean_absolute_deviation;\n\
    \n    assert(candidate([1.0, 2.0]) == 0.5);\n    assert(candidate([1.0, 2.0, 3.0,\
    \ 4.0]) == 1.0);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbhekrisl.d(13): Error: undefined identifier `mean`, did you mean
    function `main`?

    /tmp/tmpbhekrisl.d(19): Error: function expected before `()`, not `mean` of type
    `float`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbhekrisl.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = 0.0;\n    float sum = 0.0;\n    foreach(float number; numbers)\n    {\n\
    \        sum += number;\n    }\n    mean = sum / numbers.length;\n    float sum_of_absolute_differences\
    \ = 0.0;\n    foreach(float number; numbers)\n    {\n        sum_of_absolute_differences\
    \ += abs(number - mean);\n    }\n    return sum_of_absolute_differences / numbers.length;\n\
    }\nunittest\n{\n    alias candidate = mean_absolute_deviation;\n\n    assert(candidate([1.0,\
    \ 2.0]) == 0.5);\n    assert(candidate([1.0, 2.0, 3.0, 4.0]) == 1.0);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpuf18n3ub.d(33): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283f5]

    ??:? void tmpuf18n3ub.__unittest_L27_C1() [0x428159]

    ??:? void tmpuf18n3ub.__modtest() [0x428178]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c3cf]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b262]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4303f5]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x4308a4]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430381]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b239]

    ??:? runModuleUnitTests [0x42c1a5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428844]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = mean(numbers);\n    float[] abs_differences = new float[numbers.length];\n\
    \    foreach(i, number; numbers)\n    {\n        abs_differences[i] = abs(number\
    \ - mean);\n    }\n    return mean(abs_differences);\n}\nunittest\n{\n    alias\
    \ candidate = mean_absolute_deviation;\n\n    assert(candidate([1.0, 2.0]) ==\
    \ 0.5);\n    assert(candidate([1.0, 2.0, 3.0, 4.0]) == 1.0);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp6ydxlnw4.d(13): Error: undefined identifier `mean`, did you mean
    function `main`?

    /tmp/tmp6ydxlnw4.d(19): Error: function expected before `()`, not `mean` of type
    `float`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6ydxlnw4.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = mean(numbers);\n    float[] diffs = new float[numbers.length];\n    foreach\
    \ (i, number; numbers)\n    {\n        diffs[i] = abs(number - mean);\n    }\n\
    \    return mean(diffs);\n}\nunittest\n{\n    alias candidate = mean_absolute_deviation;\n\
    \n    assert(candidate([1.0, 2.0]) == 0.5);\n    assert(candidate([1.0, 2.0, 3.0,\
    \ 4.0]) == 1.0);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbhekrisl.d(13): Error: undefined identifier `mean`, did you mean
    function `main`?

    /tmp/tmpbhekrisl.d(19): Error: function expected before `()`, not `mean` of type
    `float`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbhekrisl.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = mean(numbers);\n    float[] deviations = new float[numbers.length];\n\
    \    foreach(i, number; numbers)\n    {\n        deviations[i] = abs(number -\
    \ mean);\n    }\n    return mean(deviations);\n}\nunittest\n{\n    alias candidate\
    \ = mean_absolute_deviation;\n\n    assert(candidate([1.0, 2.0]) == 0.5);\n  \
    \  assert(candidate([1.0, 2.0, 3.0, 4.0]) == 1.0);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpxv93eflp.d(13): Error: undefined identifier `mean`, did you mean
    function `main`?

    /tmp/tmpxv93eflp.d(19): Error: function expected before `()`, not `mean` of type
    `float`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxv93eflp.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = mean(numbers);\n    float[] deviations = new float[numbers.length];\n\
    \    foreach(i, num; numbers)\n    {\n        deviations[i] = abs(num - mean);\n\
    \    }\n    return mean(deviations);\n}\nunittest\n{\n    alias candidate = mean_absolute_deviation;\n\
    \n    assert(candidate([1.0, 2.0]) == 0.5);\n    assert(candidate([1.0, 2.0, 3.0,\
    \ 4.0]) == 1.0);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpf_76snf3.d(13): Error: undefined identifier `mean`, did you mean
    function `main`?

    /tmp/tmpf_76snf3.d(19): Error: function expected before `()`, not `mean` of type
    `float`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpf_76snf3.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = mean(numbers);\n    float[] diffs = new float[numbers.length];\n    foreach(i,\
    \ x; numbers)\n    {\n        diffs[i] = abs(x - mean);\n    }\n    return mean(diffs);\n\
    }\nunittest\n{\n    alias candidate = mean_absolute_deviation;\n\n    assert(candidate([1.0,\
    \ 2.0]) == 0.5);\n    assert(candidate([1.0, 2.0, 3.0, 4.0]) == 1.0);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpdi6zflws.d(13): Error: undefined identifier `mean`, did you mean
    function `main`?

    /tmp/tmpdi6zflws.d(19): Error: function expected before `()`, not `mean` of type
    `float`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdi6zflws.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = mean(numbers);\n    float[] deviations = new float[numbers.length];\n\
    \    foreach(i, number; numbers) {\n        deviations[i] = abs(number - mean);\n\
    \    }\n    return mean(deviations);\n}\nunittest\n{\n    alias candidate = mean_absolute_deviation;\n\
    \n    assert(candidate([1.0, 2.0]) == 0.5);\n    assert(candidate([1.0, 2.0, 3.0,\
    \ 4.0]) == 1.0);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpgtyohsve.d(13): Error: undefined identifier `mean`, did you mean
    function `main`?

    /tmp/tmpgtyohsve.d(18): Error: function expected before `()`, not `mean` of type
    `float`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgtyohsve.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = mean(numbers);\n    float[] absolute_differences = new float[numbers.length];\n\
    \    foreach(i, number; numbers) {\n        absolute_differences[i] = abs(number\
    \ - mean);\n    }\n    return mean(absolute_differences);\n}\nunittest\n{\n  \
    \  alias candidate = mean_absolute_deviation;\n\n    assert(candidate([1.0, 2.0])\
    \ == 0.5);\n    assert(candidate([1.0, 2.0, 3.0, 4.0]) == 1.0);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpif7f9x6p.d(13): Error: undefined identifier `mean`, did you mean
    function `main`?

    /tmp/tmpif7f9x6p.d(18): Error: function expected before `()`, not `mean` of type
    `float`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpif7f9x6p.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = mean(numbers);\n    float[] abs_differences = new float[numbers.length];\n\
    \    foreach(i, number; numbers)\n    {\n        abs_differences[i] = abs(number\
    \ - mean);\n    }\n    return mean(abs_differences);\n}\nunittest\n{\n    alias\
    \ candidate = mean_absolute_deviation;\n\n    assert(candidate([1.0, 2.0]) ==\
    \ 0.5);\n    assert(candidate([1.0, 2.0, 3.0, 4.0]) == 1.0);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp6ydxlnw4.d(13): Error: undefined identifier `mean`, did you mean
    function `main`?

    /tmp/tmp6ydxlnw4.d(19): Error: function expected before `()`, not `mean` of type
    `float`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6ydxlnw4.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = 0.0;\n    foreach(n; numbers)\n        mean += n;\n    mean /= numbers.length;\n\
    \    float mad = 0.0;\n    foreach(n; numbers)\n        mad += abs(n - mean);\n\
    \    mad /= numbers.length;\n    return mad;\n}\nunittest\n{\n    alias candidate\
    \ = mean_absolute_deviation;\n\n    assert(candidate([1.0, 2.0]) == 0.5);\n  \
    \  assert(candidate([1.0, 2.0, 3.0, 4.0]) == 1.0);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpa6rwc9cw.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283f5]

    ??:? void tmpa6rwc9cw.__unittest_L23_C1() [0x428155]

    ??:? void tmpa6rwc9cw.__modtest() [0x428174]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c3cf]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b262]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4303f5]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x4308a4]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430381]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b239]

    ??:? runModuleUnitTests [0x42c1a5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428844]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = mean(numbers);\n    float[] diffs = new float[numbers.length];\n    foreach(i,\
    \ number; numbers) \n    {\n        diffs[i] = abs(number - mean);\n    }\n  \
    \  return mean(diffs);\n}\nunittest\n{\n    alias candidate = mean_absolute_deviation;\n\
    \n    assert(candidate([1.0, 2.0]) == 0.5);\n    assert(candidate([1.0, 2.0, 3.0,\
    \ 4.0]) == 1.0);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpj_f55o7o.d(13): Error: undefined identifier `mean`, did you mean
    function `main`?

    /tmp/tmpj_f55o7o.d(19): Error: function expected before `()`, not `mean` of type
    `float`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpj_f55o7o.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = 0.0;\n    float sum = 0.0;\n    foreach(n; numbers)\n    {\n        sum\
    \ += n;\n    }\n    mean = sum / numbers.length;\n    float sum_of_deviations\
    \ = 0.0;\n    foreach(n; numbers)\n    {\n        sum_of_deviations += abs(n -\
    \ mean);\n    }\n    return sum_of_deviations / numbers.length;\n}\nunittest\n\
    {\n    alias candidate = mean_absolute_deviation;\n\n    assert(candidate([1.0,\
    \ 2.0]) == 0.5);\n    assert(candidate([1.0, 2.0, 3.0, 4.0]) == 1.0);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpp9fme6e5.d(33): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283f5]

    ??:? void tmpp9fme6e5.__unittest_L27_C1() [0x428159]

    ??:? void tmpp9fme6e5.__modtest() [0x428178]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c3cf]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b262]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4303f5]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x4308a4]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430381]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b239]

    ??:? runModuleUnitTests [0x42c1a5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428844]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = mean(numbers);\n    float[] diffs = new float[numbers.length];\n    foreach(i,\
    \ n; numbers) {\n        diffs[i] = abs(n - mean);\n    }\n    return mean(diffs);\n\
    }\nunittest\n{\n    alias candidate = mean_absolute_deviation;\n\n    assert(candidate([1.0,\
    \ 2.0]) == 0.5);\n    assert(candidate([1.0, 2.0, 3.0, 4.0]) == 1.0);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp_8hwv6xn.d(13): Error: undefined identifier `mean`, did you mean
    function `main`?

    /tmp/tmp_8hwv6xn.d(18): Error: function expected before `()`, not `mean` of type
    `float`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_8hwv6xn.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = mean(numbers);\n    float sum = 0;\n    foreach(n; numbers) {\n     \
    \   sum += abs(n - mean);\n    }\n    return sum / numbers.length;\n}\nunittest\n\
    {\n    alias candidate = mean_absolute_deviation;\n\n    assert(candidate([1.0,\
    \ 2.0]) == 0.5);\n    assert(candidate([1.0, 2.0, 3.0, 4.0]) == 1.0);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4g1tqst7.d(13): Error: undefined identifier `mean`, did you mean
    function `main`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4g1tqst7.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = mean(numbers);\n    float[] deviations = new float[numbers.length];\n\
    \    foreach(i, number; numbers)\n    {\n        deviations[i] = abs(number -\
    \ mean);\n    }\n    return mean(deviations);\n}\n/*\n For a given list of input\
    \ numbers, calculate Median Absolute Deviation\n    around the median of this\
    \ dataset.\n    Median Absolute Deviation is the median of the absolute difference\
    \ between\n    each element and a centerpoint (median in this case):\n    MAD\
    \ = median | x - x_median |\n        \n*/\nfloat median_absolute_deviation(float[]\
    \ numbers) \n{\n    float median = median(numbers);\n    float[] deviations =\
    \ new float[numbers.length];\n    foreach(i, number; numbers)\n    {\n       \
    \ deviations[i] = abs(number - median);\n    }\n    return median(deviations);\n\
    }\n/*\n For a given list of input numbers, calculate Standard Deviation\n    around\
    \ the mean of this dataset.\n    Standard Deviation is the square root of the\
    \ average squared difference\n    between each element and a centerpoint (mean\
    \ in this case):\n    SD = sqrt(average (x - x_mean)^2)\n        \n*/\nfloat standard_deviation(float[]\
    \ numbers) \n{\n    float mean = mean(numbers);\n    float[] deviations = new\
    \ float[numbers.length];\n    foreach(i, number; numbers)\n    {\n        deviations[i]\
    \ = pow(number - mean, 2);\n    }\n    return sqrt(mean(deviations));\n}\n/*\n\
    \ For a given list of input numbers, calculate Variance\n    around the mean of\
    \ this dataset.\n    Variance is the average squared difference between each element\
    \ and a\n    centerpoint (mean in this case):\n    Var = average (x - x_mean)^2\n\
    \        \n*/\nfloat variance(float[] numbers) \n{\n    float mean = mean(numbers);\n\
    \    float[] deviations = new float[numbers.length];\n    foreach(i, number; numbers)\n\
    \    {\n        deviations[i] = pow(number - mean, 2);\n    }\n    return mean(\n\
    unittest\n{\n    alias candidate = mean_absolute_deviation;\n\n    assert(candidate([1.0,\
    \ 2.0]) == 0.5);\n    assert(candidate([1.0, 2.0, 3.0, 4.0]) == 1.0);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpl0shavxy.d(74): Error: expression expected, not `unittest`

    /tmp/tmpl0shavxy.d(75): Error: found `{` when expecting `,`

    /tmp/tmpl0shavxy.d(76): Error: expression expected, not `alias`

    /tmp/tmpl0shavxy.d(76): Error: found `candidate` when expecting `,`

    /tmp/tmpl0shavxy.d(76): Error: expression expected, not `=`

    /tmp/tmpl0shavxy.d(76): Error: found `mean_absolute_deviation` when expecting
    `,`

    /tmp/tmpl0shavxy.d(76): Error: expression expected, not `;`

    /tmp/tmpl0shavxy.d(78): Error: found `assert` when expecting `,`

    /tmp/tmpl0shavxy.d(78): Error: found `;` when expecting `,`

    /tmp/tmpl0shavxy.d(79): Error: found `;` when expecting `,`

    /tmp/tmpl0shavxy.d(80): Error: found `;` when expecting `,`

    /tmp/tmpl0shavxy.d(81): Error: expression expected, not `}`

    /tmp/tmpl0shavxy.d(82): Error: found `void` when expecting `,`

    /tmp/tmpl0shavxy.d(82): Error: found `{` when expecting `,`

    /tmp/tmpl0shavxy.d(82): Error: expression expected, not `}`

    /tmp/tmpl0shavxy.d(82): Error: found `End of File` when expecting `,`

    /tmp/'
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = mean(numbers);\n    float[] deviations = new float[numbers.length];\n\
    \    foreach(i, number; numbers) {\n        deviations[i] = abs(number - mean);\n\
    \    }\n    return mean(deviations);\n}\nunittest\n{\n    alias candidate = mean_absolute_deviation;\n\
    \n    assert(candidate([1.0, 2.0]) == 0.5);\n    assert(candidate([1.0, 2.0, 3.0,\
    \ 4.0]) == 1.0);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpgtyohsve.d(13): Error: undefined identifier `mean`, did you mean
    function `main`?

    /tmp/tmpgtyohsve.d(18): Error: function expected before `()`, not `mean` of type
    `float`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgtyohsve.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = mean(numbers);\n    float[] absolute_deviations = new float[numbers.length];\n\
    \    foreach(i, number; numbers)\n    {\n        absolute_deviations[i] = abs(number\
    \ - mean);\n    }\n    return mean(absolute_deviations);\n}\nunittest\n{\n   \
    \ alias candidate = mean_absolute_deviation;\n\n    assert(candidate([1.0, 2.0])\
    \ == 0.5);\n    assert(candidate([1.0, 2.0, 3.0, 4.0]) == 1.0);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpe1sd_hfn.d(13): Error: undefined identifier `mean`, did you mean
    function `main`?

    /tmp/tmpe1sd_hfn.d(19): Error: function expected before `()`, not `mean` of type
    `float`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpe1sd_hfn.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = 0.0;\n    foreach(num; numbers) {\n        mean += num;\n    }\n    mean\
    \ /= numbers.length;\n    float sum = 0.0;\n    foreach(num; numbers) {\n    \
    \    sum += abs(num - mean);\n    }\n    return sum / numbers.length;\n}\nunittest\n\
    {\n    alias candidate = mean_absolute_deviation;\n\n    assert(candidate([1.0,\
    \ 2.0]) == 0.5);\n    assert(candidate([1.0, 2.0, 3.0, 4.0]) == 1.0);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpxh089sn5.d(30): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283e5]

    ??:? void tmpxh089sn5.__unittest_L24_C1() [0x428149]

    ??:? void tmpxh089sn5.__modtest() [0x428168]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c3bf]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b252]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4303e5]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430894]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430371]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b229]

    ??:? runModuleUnitTests [0x42c195]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428834]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = mean(numbers);\n    float[] deviations = new float[numbers.length];\n\
    \    foreach(i, number; numbers)\n    {\n        deviations[i] = abs(number -\
    \ mean);\n    }\n    return mean(deviations);\n}\nunittest\n{\n    alias candidate\
    \ = mean_absolute_deviation;\n\n    assert(candidate([1.0, 2.0]) == 0.5);\n  \
    \  assert(candidate([1.0, 2.0, 3.0, 4.0]) == 1.0);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpxv93eflp.d(13): Error: undefined identifier `mean`, did you mean
    function `main`?

    /tmp/tmpxv93eflp.d(19): Error: function expected before `()`, not `mean` of type
    `float`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxv93eflp.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = mean(numbers);\n    float[] abs_differences = new float[numbers.length];\n\
    \    foreach(i, number; numbers)\n    {\n        abs_differences[i] = abs(number\
    \ - mean);\n    }\n    return mean(abs_differences);\n}\nunittest\n{\n    alias\
    \ candidate = mean_absolute_deviation;\n\n    assert(candidate([1.0, 2.0]) ==\
    \ 0.5);\n    assert(candidate([1.0, 2.0, 3.0, 4.0]) == 1.0);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp6ydxlnw4.d(13): Error: undefined identifier `mean`, did you mean
    function `main`?

    /tmp/tmp6ydxlnw4.d(19): Error: function expected before `()`, not `mean` of type
    `float`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6ydxlnw4.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = 0.0;\n    float sum = 0.0;\n    foreach(n; numbers)\n    {\n        sum\
    \ += n;\n    }\n    mean = sum / numbers.length;\n    float sum_of_deviations\
    \ = 0.0;\n    foreach(n; numbers)\n    {\n        sum_of_deviations += abs(n -\
    \ mean);\n    }\n    return sum_of_deviations / numbers.length;\n}\nunittest\n\
    {\n    alias candidate = mean_absolute_deviation;\n\n    assert(candidate([1.0,\
    \ 2.0]) == 0.5);\n    assert(candidate([1.0, 2.0, 3.0, 4.0]) == 1.0);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpp9fme6e5.d(33): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283f5]

    ??:? void tmpp9fme6e5.__unittest_L27_C1() [0x428159]

    ??:? void tmpp9fme6e5.__modtest() [0x428178]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c3cf]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b262]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4303f5]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x4308a4]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430381]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b239]

    ??:? runModuleUnitTests [0x42c1a5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428844]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = mean(numbers);\n    float[] abs_diff = new float[numbers.length];\n \
    \   foreach(i, number; numbers)\n    {\n        abs_diff[i] = abs(number - mean);\n\
    \    }\n    return mean(abs_diff);\n}\nunittest\n{\n    alias candidate = mean_absolute_deviation;\n\
    \n    assert(candidate([1.0, 2.0]) == 0.5);\n    assert(candidate([1.0, 2.0, 3.0,\
    \ 4.0]) == 1.0);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpws6une7h.d(13): Error: undefined identifier `mean`, did you mean
    function `main`?

    /tmp/tmpws6une7h.d(19): Error: function expected before `()`, not `mean` of type
    `float`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpws6une7h.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = mean(numbers);\n    float[] differences = new float[numbers.length];\n\
    \    foreach (i, number; numbers)\n    {\n        differences[i] = abs(number\
    \ - mean);\n    }\n    return mean(differences);\n}\nunittest\n{\n    alias candidate\
    \ = mean_absolute_deviation;\n\n    assert(candidate([1.0, 2.0]) == 0.5);\n  \
    \  assert(candidate([1.0, 2.0, 3.0, 4.0]) == 1.0);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpx_sqogpf.d(13): Error: undefined identifier `mean`, did you mean
    function `main`?

    /tmp/tmpx_sqogpf.d(19): Error: function expected before `()`, not `mean` of type
    `float`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpx_sqogpf.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = mean(numbers);\n    float[] diffs = new float[numbers.length];\n    foreach(i,\
    \ number; numbers)\n    {\n        diffs[i] = abs(number - mean);\n    }\n   \
    \ return mean(diffs);\n}\nunittest\n{\n    alias candidate = mean_absolute_deviation;\n\
    \n    assert(candidate([1.0, 2.0]) == 0.5);\n    assert(candidate([1.0, 2.0, 3.0,\
    \ 4.0]) == 1.0);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpma3shxh1.d(13): Error: undefined identifier `mean`, did you mean
    function `main`?

    /tmp/tmpma3shxh1.d(19): Error: function expected before `()`, not `mean` of type
    `float`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpma3shxh1.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = 0.0;\n    float sum = 0.0;\n    foreach(n; numbers) {\n        sum +=\
    \ n;\n    }\n    mean = sum / numbers.length;\n    float sum_of_deviations = 0.0;\n\
    \    foreach(n; numbers) {\n        sum_of_deviations += abs(n - mean);\n    }\n\
    \    return sum_of_deviations / numbers.length;\n}\nunittest\n{\n    alias candidate\
    \ = mean_absolute_deviation;\n\n    assert(candidate([1.0, 2.0]) == 0.5);\n  \
    \  assert(candidate([1.0, 2.0, 3.0, 4.0]) == 1.0);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpyfn4_ppi.d(31): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283f5]

    ??:? void tmpyfn4_ppi.__unittest_L25_C1() [0x428159]

    ??:? void tmpyfn4_ppi.__modtest() [0x428178]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c3cf]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b262]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4303f5]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x4308a4]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430381]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b239]

    ??:? runModuleUnitTests [0x42c1a5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428844]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = mean(numbers);\n    float[] diffs = new float[numbers.length];\n    foreach(i,\
    \ n; numbers)\n    {\n        diffs[i] = abs(n - mean);\n    }\n    return mean(diffs);\n\
    }\nunittest\n{\n    alias candidate = mean_absolute_deviation;\n\n    assert(candidate([1.0,\
    \ 2.0]) == 0.5);\n    assert(candidate([1.0, 2.0, 3.0, 4.0]) == 1.0);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpx6iysdjf.d(13): Error: undefined identifier `mean`, did you mean
    function `main`?

    /tmp/tmpx6iysdjf.d(19): Error: function expected before `()`, not `mean` of type
    `float`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpx6iysdjf.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = mean(numbers);\n    float[] abs_differences = new float[numbers.length];\n\
    \    foreach(i, number; numbers)\n    {\n        abs_differences[i] = abs(number\
    \ - mean);\n    }\n    return mean(abs_differences);\n}\nunittest\n{\n    alias\
    \ candidate = mean_absolute_deviation;\n\n    assert(candidate([1.0, 2.0]) ==\
    \ 0.5);\n    assert(candidate([1.0, 2.0, 3.0, 4.0]) == 1.0);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp6ydxlnw4.d(13): Error: undefined identifier `mean`, did you mean
    function `main`?

    /tmp/tmp6ydxlnw4.d(19): Error: function expected before `()`, not `mean` of type
    `float`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6ydxlnw4.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = 0.0;\n    foreach(n; numbers)\n        mean += n;\n    mean /= numbers.length;\n\
    \    float sum = 0.0;\n    foreach(n; numbers)\n        sum += abs(n - mean);\n\
    \    return sum / numbers.length;\n}\nunittest\n{\n    alias candidate = mean_absolute_deviation;\n\
    \n    assert(candidate([1.0, 2.0]) == 0.5);\n    assert(candidate([1.0, 2.0, 3.0,\
    \ 4.0]) == 1.0);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\n\
    void main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpe6zws45l.d(28): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283e5]

    ??:? void tmpe6zws45l.__unittest_L22_C1() [0x428149]

    ??:? void tmpe6zws45l.__modtest() [0x428168]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c3bf]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b252]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4303e5]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430894]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430371]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b229]

    ??:? runModuleUnitTests [0x42c195]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428834]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = mean(numbers);\n    float[] diffs = map!((x) => abs(x - mean))(numbers);\n\
    \    return mean(diffs);\n}\nunittest\n{\n    alias candidate = mean_absolute_deviation;\n\
    \n    assert(candidate([1.0, 2.0]) == 0.5);\n    assert(candidate([1.0, 2.0, 3.0,\
    \ 4.0]) == 1.0);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpxpbbpnzt.d(13): Error: undefined identifier `mean`, did you mean
    function `main`?

    /tmp/tmpxpbbpnzt.d(14): Error: template instance `map!((x) => abs(x - mean))`
    template `map` is not defined

    /tmp/tmpxpbbpnzt.d(15): Error: function expected before `()`, not `mean` of type
    `float`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxpbbpnzt.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = mean(numbers);\n    float[] deviations = new float[numbers.length];\n\
    \    foreach(i, n; numbers) {\n        deviations[i] = abs(n - mean);\n    }\n\
    \    return mean(deviations);\n}\nunittest\n{\n    alias candidate = mean_absolute_deviation;\n\
    \n    assert(candidate([1.0, 2.0]) == 0.5);\n    assert(candidate([1.0, 2.0, 3.0,\
    \ 4.0]) == 1.0);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpo0d5criu.d(13): Error: undefined identifier `mean`, did you mean
    function `main`?

    /tmp/tmpo0d5criu.d(18): Error: function expected before `()`, not `mean` of type
    `float`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpo0d5criu.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = 0.0;\n    foreach(n; numbers)\n        mean += n;\n    mean /= numbers.length;\n\
    \    float mad = 0.0;\n    foreach(n; numbers)\n        mad += abs(n - mean);\n\
    \    mad /= numbers.length;\n    return mad;\n}\nunittest\n{\n    alias candidate\
    \ = mean_absolute_deviation;\n\n    assert(candidate([1.0, 2.0]) == 0.5);\n  \
    \  assert(candidate([1.0, 2.0, 3.0, 4.0]) == 1.0);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpa6rwc9cw.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283f5]

    ??:? void tmpa6rwc9cw.__unittest_L23_C1() [0x428155]

    ??:? void tmpa6rwc9cw.__modtest() [0x428174]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c3cf]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b262]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4303f5]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x4308a4]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430381]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b239]

    ??:? runModuleUnitTests [0x42c1a5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428844]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = 0.0;\n    foreach(n; numbers)\n    {\n        mean += n;\n    }\n   \
    \ mean /= numbers.length;\n    float sum = 0.0;\n    foreach(n; numbers)\n   \
    \ {\n        sum += abs(n - mean);\n    }\n    return sum / numbers.length;\n\
    }\nunittest\n{\n    alias candidate = mean_absolute_deviation;\n\n    assert(candidate([1.0,\
    \ 2.0]) == 0.5);\n    assert(candidate([1.0, 2.0, 3.0, 4.0]) == 1.0);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpyz68u3kb.d(32): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283e5]

    ??:? void tmpyz68u3kb.__unittest_L26_C1() [0x428149]

    ??:? void tmpyz68u3kb.__modtest() [0x428168]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c3bf]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b252]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4303e5]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430894]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430371]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b229]

    ??:? runModuleUnitTests [0x42c195]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428834]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = mean(numbers);\n    float[] diffs = new float[numbers.length];\n    foreach(i,\
    \ number; numbers)\n    {\n        diffs[i] = abs(number - mean);\n    }\n   \
    \ return mean(diffs);\n}\nunittest\n{\n    alias candidate = mean_absolute_deviation;\n\
    \n    assert(candidate([1.0, 2.0]) == 0.5);\n    assert(candidate([1.0, 2.0, 3.0,\
    \ 4.0]) == 1.0);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpma3shxh1.d(13): Error: undefined identifier `mean`, did you mean
    function `main`?

    /tmp/tmpma3shxh1.d(19): Error: function expected before `()`, not `mean` of type
    `float`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpma3shxh1.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = 0.0;\n    float sum = 0.0;\n    foreach(n; numbers)\n    {\n        sum\
    \ += n;\n    }\n    mean = sum / numbers.length;\n    float sum_of_absolute_differences\
    \ = 0.0;\n    foreach(n; numbers)\n    {\n        sum_of_absolute_differences\
    \ += abs(n - mean);\n    }\n    return sum_of_absolute_differences / numbers.length;\n\
    }\nunittest\n{\n    alias candidate = mean_absolute_deviation;\n\n    assert(candidate([1.0,\
    \ 2.0]) == 0.5);\n    assert(candidate([1.0, 2.0, 3.0, 4.0]) == 1.0);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpoiy3r9hv.d(33): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283f5]

    ??:? void tmpoiy3r9hv.__unittest_L27_C1() [0x428159]

    ??:? void tmpoiy3r9hv.__modtest() [0x428178]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c3cf]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b262]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4303f5]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x4308a4]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430381]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b239]

    ??:? runModuleUnitTests [0x42c1a5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428844]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = 0.0;\n    foreach(n; numbers)\n        mean += n;\n    mean /= numbers.length;\n\
    \    float sum = 0.0;\n    foreach(n; numbers)\n        sum += abs(n - mean);\n\
    \    return sum / numbers.length;\n}\nunittest\n{\n    alias candidate = mean_absolute_deviation;\n\
    \n    assert(candidate([1.0, 2.0]) == 0.5);\n    assert(candidate([1.0, 2.0, 3.0,\
    \ 4.0]) == 1.0);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\n\
    void main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpe6zws45l.d(28): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283e5]

    ??:? void tmpe6zws45l.__unittest_L22_C1() [0x428149]

    ??:? void tmpe6zws45l.__modtest() [0x428168]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c3bf]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b252]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4303e5]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430894]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430371]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b229]

    ??:? runModuleUnitTests [0x42c195]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428834]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = mean(numbers);\n    float[] abs_diff = new float[numbers.length];\n \
    \   foreach(i, x; numbers)\n    {\n        abs_diff[i] = abs(x - mean);\n    }\n\
    \    return mean(abs_diff);\n}\nunittest\n{\n    alias candidate = mean_absolute_deviation;\n\
    \n    assert(candidate([1.0, 2.0]) == 0.5);\n    assert(candidate([1.0, 2.0, 3.0,\
    \ 4.0]) == 1.0);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp3gifibad.d(13): Error: undefined identifier `mean`, did you mean
    function `main`?

    /tmp/tmp3gifibad.d(19): Error: function expected before `()`, not `mean` of type
    `float`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3gifibad.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = 0.0;\n    foreach(n; numbers)\n        mean += n;\n    mean /= numbers.length;\n\
    \    float mad = 0.0;\n    foreach(n; numbers)\n        mad += abs(n - mean);\n\
    \    mad /= numbers.length;\n    return mad;\n}\nunittest\n{\n    alias candidate\
    \ = mean_absolute_deviation;\n\n    assert(candidate([1.0, 2.0]) == 0.5);\n  \
    \  assert(candidate([1.0, 2.0, 3.0, 4.0]) == 1.0);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpa6rwc9cw.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283f5]

    ??:? void tmpa6rwc9cw.__unittest_L23_C1() [0x428155]

    ??:? void tmpa6rwc9cw.__modtest() [0x428174]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c3cf]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b262]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4303f5]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x4308a4]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430381]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b239]

    ??:? runModuleUnitTests [0x42c1a5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428844]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = 0.0;\n    float sum = 0.0;\n    foreach(n; numbers)\n    {\n        sum\
    \ += n;\n    }\n    mean = sum / numbers.length;\n    float sum_of_deviations\
    \ = 0.0;\n    foreach(n; numbers)\n    {\n        sum_of_deviations += abs(n -\
    \ mean);\n    }\n    return sum_of_deviations / numbers.length;\n}\nunittest\n\
    {\n    alias candidate = mean_absolute_deviation;\n\n    assert(candidate([1.0,\
    \ 2.0]) == 0.5);\n    assert(candidate([1.0, 2.0, 3.0, 4.0]) == 1.0);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpp9fme6e5.d(33): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283f5]

    ??:? void tmpp9fme6e5.__unittest_L27_C1() [0x428159]

    ??:? void tmpp9fme6e5.__modtest() [0x428178]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c3cf]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b262]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4303f5]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x4308a4]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430381]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b239]

    ??:? runModuleUnitTests [0x42c1a5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428844]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = mean(numbers);\n    float[] absolute_differences = new float[numbers.length];\n\
    \    foreach(i, number; numbers)\n    {\n        absolute_differences[i] = abs(number\
    \ - mean);\n    }\n    return mean(absolute_differences);\n}\nunittest\n{\n  \
    \  alias candidate = mean_absolute_deviation;\n\n    assert(candidate([1.0, 2.0])\
    \ == 0.5);\n    assert(candidate([1.0, 2.0, 3.0, 4.0]) == 1.0);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpwg0skvrr.d(13): Error: undefined identifier `mean`, did you mean
    function `main`?

    /tmp/tmpwg0skvrr.d(19): Error: function expected before `()`, not `mean` of type
    `float`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwg0skvrr.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = mean(numbers);\n    float[] absolute_deviations = new float[numbers.length];\n\
    \    foreach(i, number; numbers) {\n        absolute_deviations[i] = abs(number\
    \ - mean);\n    }\n    return mean(absolute_deviations);\n}\nunittest\n{\n   \
    \ alias candidate = mean_absolute_deviation;\n\n    assert(candidate([1.0, 2.0])\
    \ == 0.5);\n    assert(candidate([1.0, 2.0, 3.0, 4.0]) == 1.0);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpl_bmtrnc.d(13): Error: undefined identifier `mean`, did you mean
    function `main`?

    /tmp/tmpl_bmtrnc.d(18): Error: function expected before `()`, not `mean` of type
    `float`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpl_bmtrnc.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ sum = 0.0;\n    float mean = 0.0;\n    float abs_deviation = 0.0;\n    float[]\
    \ abs_deviations = new float[numbers.length];\n    float[] abs_deviations_sorted\
    \ = new float[numbers.length];\n    float median_abs_deviation = 0.0;\n    float\
    \ mad = 0.0;\n    float[] mad_list = new float[numbers.length];\n    float[] mad_list_sorted\
    \ = new float[numbers.length];\n    float mad_median = 0.0;\n    float mad_mean\
    \ = 0.0;\n    float mad_mean_abs_deviation = 0.0;\n    float mad_mean_abs_deviation_sorted\
    \ = 0.0;\n    float mad_median_abs_deviation = 0.0;\n    float mad_median_abs_deviation_sorted\
    \ = 0.0;\n    float mad_median_abs_deviation_sorted_mean = 0.0;\n    float mad_median_abs_deviation_sorted_median\
    \ = 0.0;\n    float mad_median_abs_deviation_sorted_mean_abs_deviation = 0.0;\n\
    \    float mad_median_abs_deviation_sorted_median_abs_deviation = 0.0;\n    float\
    \ mad_median_abs_deviation_sorted_mean_abs_deviation_sorted = 0.0;\n    float\
    \ mad_median_abs_deviation_sorted_median_abs_deviation_sorted = 0.0;\n    float\
    \ mad_median_abs_deviation_sorted_mean_abs_deviation_sorted_mean = 0.0;\n    float\
    \ mad_median_abs_deviation_sorted_mean_abs_deviation_sorted_median = 0.0;\n  \
    \  float mad_median_abs_deviation_sorted_median_abs_deviation_sorted_mean = 0.0;\n\
    \    float mad_median_abs_deviation_sorted_median_abs_deviation_sorted_median\
    \ = 0\nunittest\n{\n    alias candidate = mean_absolute_deviation;\n\n    assert(candidate([1.0,\
    \ 2.0]) == 0.5);\n    assert(candidate([1.0, 2.0, 3.0, 4.0]) == 1.0);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpw1ep4xl6.d(38): Error: semicolon expected, not `unittest`

    /tmp/tmpw1ep4xl6.d(38): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpw1ep4xl6.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = 0.0;\n    foreach(n; numbers) \n    {\n        mean += n;\n    }\n  \
    \  mean /= numbers.length;\n    float mad = 0.0;\n    foreach(n; numbers) \n \
    \   {\n        mad += abs(n - mean);\n    }\n    return mad / numbers.length;\n\
    }\nunittest\n{\n    alias candidate = mean_absolute_deviation;\n\n    assert(candidate([1.0,\
    \ 2.0]) == 0.5);\n    assert(candidate([1.0, 2.0, 3.0, 4.0]) == 1.0);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp911rxwww.d(32): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283e5]

    ??:? void tmp911rxwww.__unittest_L26_C1() [0x428149]

    ??:? void tmp911rxwww.__modtest() [0x428168]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c3bf]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b252]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4303e5]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430894]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430371]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b229]

    ??:? runModuleUnitTests [0x42c195]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428834]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = mean(numbers);\n    float[] deviations = new float[numbers.length];\n\
    \    foreach(i,n; numbers)\n        deviations[i] = abs(n - mean);\n    return\
    \ mean(deviations);\n}\nunittest\n{\n    alias candidate = mean_absolute_deviation;\n\
    \n    assert(candidate([1.0, 2.0]) == 0.5);\n    assert(candidate([1.0, 2.0, 3.0,\
    \ 4.0]) == 1.0);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp76aymmem.d(13): Error: undefined identifier `mean`, did you mean
    function `main`?

    /tmp/tmp76aymmem.d(17): Error: function expected before `()`, not `mean` of type
    `float`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp76aymmem.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = mean(numbers);\n    float[] absolute_deviations = new float[numbers.length];\n\
    \    foreach(i, number; numbers)\n    {\n        absolute_deviations[i] = abs(number\
    \ - mean);\n    }\n    return mean(absolute_deviations);\n}\nunittest\n{\n   \
    \ alias candidate = mean_absolute_deviation;\n\n    assert(candidate([1.0, 2.0])\
    \ == 0.5);\n    assert(candidate([1.0, 2.0, 3.0, 4.0]) == 1.0);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpe1sd_hfn.d(13): Error: undefined identifier `mean`, did you mean
    function `main`?

    /tmp/tmpe1sd_hfn.d(19): Error: function expected before `()`, not `mean` of type
    `float`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpe1sd_hfn.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = mean(numbers);\n    float[] abs_differences = new float[numbers.length];\n\
    \    foreach(i, number; numbers)\n    {\n        abs_differences[i] = abs(number\
    \ - mean);\n    }\n    return mean(abs_differences);\n}\nunittest\n{\n    alias\
    \ candidate = mean_absolute_deviation;\n\n    assert(candidate([1.0, 2.0]) ==\
    \ 0.5);\n    assert(candidate([1.0, 2.0, 3.0, 4.0]) == 1.0);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp6ydxlnw4.d(13): Error: undefined identifier `mean`, did you mean
    function `main`?

    /tmp/tmp6ydxlnw4.d(19): Error: function expected before `()`, not `mean` of type
    `float`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6ydxlnw4.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = 0.0;\n    foreach(n; numbers)\n        mean += n;\n    mean /= numbers.length;\n\
    \    float mad = 0.0;\n    foreach(n; numbers)\n        mad += abs(n - mean);\n\
    \    mad /= numbers.length;\n    return mad;\n}\nunittest\n{\n    alias candidate\
    \ = mean_absolute_deviation;\n\n    assert(candidate([1.0, 2.0]) == 0.5);\n  \
    \  assert(candidate([1.0, 2.0, 3.0, 4.0]) == 1.0);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpa6rwc9cw.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283f5]

    ??:? void tmpa6rwc9cw.__unittest_L23_C1() [0x428155]

    ??:? void tmpa6rwc9cw.__modtest() [0x428174]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c3cf]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b262]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4303f5]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x4308a4]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430381]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b239]

    ??:? runModuleUnitTests [0x42c1a5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428844]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = mean(numbers);\n    float[] diffs = new float[numbers.length];\n    foreach(i,\
    \ number; numbers)\n    {\n        diffs[i] = abs(number - mean);\n    }\n   \
    \ return mean(diffs);\n}\nunittest\n{\n    alias candidate = mean_absolute_deviation;\n\
    \n    assert(candidate([1.0, 2.0]) == 0.5);\n    assert(candidate([1.0, 2.0, 3.0,\
    \ 4.0]) == 1.0);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpma3shxh1.d(13): Error: undefined identifier `mean`, did you mean
    function `main`?

    /tmp/tmpma3shxh1.d(19): Error: function expected before `()`, not `mean` of type
    `float`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpma3shxh1.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = 0.0;\n    foreach(n; numbers) {\n        mean += n;\n    }\n    mean\
    \ /= numbers.length;\n    float mad = 0.0;\n    foreach(n; numbers) {\n      \
    \  mad += abs(n - mean);\n    }\n    mad /= numbers.length;\n    return mad;\n\
    }\nunittest\n{\n    alias candidate = mean_absolute_deviation;\n\n    assert(candidate([1.0,\
    \ 2.0]) == 0.5);\n    assert(candidate([1.0, 2.0, 3.0, 4.0]) == 1.0);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp4qt2ypcz.d(31): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283f5]

    ??:? void tmp4qt2ypcz.__unittest_L25_C1() [0x428155]

    ??:? void tmp4qt2ypcz.__modtest() [0x428174]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c3cf]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b262]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4303f5]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x4308a4]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430381]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b239]

    ??:? runModuleUnitTests [0x42c1a5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428844]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = 0.0;\n    float sum = 0.0;\n    foreach(n; numbers)\n    {\n        sum\
    \ += n;\n    }\n    mean = sum / numbers.length;\n    float sum_of_differences\
    \ = 0.0;\n    foreach(n; numbers)\n    {\n        sum_of_differences += abs(n\
    \ - mean);\n    }\n    return sum_of_differences / numbers.length;\n}\nunittest\n\
    {\n    alias candidate = mean_absolute_deviation;\n\n    assert(candidate([1.0,\
    \ 2.0]) == 0.5);\n    assert(candidate([1.0, 2.0, 3.0, 4.0]) == 1.0);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpvrw4tnhm.d(33): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283f5]

    ??:? void tmpvrw4tnhm.__unittest_L27_C1() [0x428159]

    ??:? void tmpvrw4tnhm.__modtest() [0x428178]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c3cf]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b262]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4303f5]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x4308a4]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430381]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b239]

    ??:? runModuleUnitTests [0x42c1a5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428844]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = 0.0;\n    foreach(n; numbers)\n        mean += n;\n    mean /= numbers.length;\n\
    \    float mad = 0.0;\n    foreach(n; numbers)\n        mad += abs(n - mean);\n\
    \    mad /= numbers.length;\n    return mad;\n}\nunittest\n{\n    alias candidate\
    \ = mean_absolute_deviation;\n\n    assert(candidate([1.0, 2.0]) == 0.5);\n  \
    \  assert(candidate([1.0, 2.0, 3.0, 4.0]) == 1.0);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpa6rwc9cw.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283f5]

    ??:? void tmpa6rwc9cw.__unittest_L23_C1() [0x428155]

    ??:? void tmpa6rwc9cw.__modtest() [0x428174]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c3cf]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b262]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4303f5]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x4308a4]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430381]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b239]

    ??:? runModuleUnitTests [0x42c1a5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428844]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = 0.0;\n    foreach(n; numbers)\n        mean += n;\n    mean /= numbers.length;\n\
    \    \n    float sum_absolute_deviations = 0.0;\n    foreach(n; numbers)\n   \
    \     sum_absolute_deviations += abs(n - mean);\n    return sum_absolute_deviations\
    \ / numbers.length;\n}\nunittest\n{\n    alias candidate = mean_absolute_deviation;\n\
    \n    assert(candidate([1.0, 2.0]) == 0.5);\n    assert(candidate([1.0, 2.0, 3.0,\
    \ 4.0]) == 1.0);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\n\
    void main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpz74n_kms.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283e5]

    ??:? void tmpz74n_kms.__unittest_L23_C1() [0x428149]

    ??:? void tmpz74n_kms.__modtest() [0x428168]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c3bf]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b252]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4303e5]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430894]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430371]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b229]

    ??:? runModuleUnitTests [0x42c195]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428834]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163140
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = mean(numbers);\n    float[] diffs = new float[numbers.length];\n    foreach(i,\
    \ number; numbers)\n    {\n        diffs[i] = abs(number - mean);\n    }\n   \
    \ return mean(diffs);\n}\nunittest\n{\n    alias candidate = mean_absolute_deviation;\n\
    \n    assert(candidate([1.0, 2.0]) == 0.5);\n    assert(candidate([1.0, 2.0, 3.0,\
    \ 4.0]) == 1.0);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpma3shxh1.d(13): Error: undefined identifier `mean`, did you mean
    function `main`?

    /tmp/tmpma3shxh1.d(19): Error: function expected before `()`, not `mean` of type
    `float`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpma3shxh1.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = mean(numbers);\n    float[] diffs = new float[numbers.length];\n    foreach(i,\
    \ n; numbers)\n    {\n        diffs[i] = abs(n - mean);\n    }\n    return mean(diffs);\n\
    }\nunittest\n{\n    alias candidate = mean_absolute_deviation;\n\n    assert(candidate([1.0,\
    \ 2.0]) == 0.5);\n    assert(candidate([1.0, 2.0, 3.0, 4.0]) == 1.0);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpx6iysdjf.d(13): Error: undefined identifier `mean`, did you mean
    function `main`?

    /tmp/tmpx6iysdjf.d(19): Error: function expected before `()`, not `mean` of type
    `float`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpx6iysdjf.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = mean(numbers);\n    float[] deviations = new float[numbers.length];\n\
    \    foreach(i, n; numbers)\n    {\n        deviations[i] = abs(n - mean);\n \
    \   }\n    return mean(deviations);\n}\nunittest\n{\n    alias candidate = mean_absolute_deviation;\n\
    \n    assert(candidate([1.0, 2.0]) == 0.5);\n    assert(candidate([1.0, 2.0, 3.0,\
    \ 4.0]) == 1.0);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp2iy56arc.d(13): Error: undefined identifier `mean`, did you mean
    function `main`?

    /tmp/tmp2iy56arc.d(19): Error: function expected before `()`, not `mean` of type
    `float`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2iy56arc.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = mean(numbers);\n    float[] abs_diffs = map!(a => abs(a - mean))(numbers);\n\
    \    return mean(abs_diffs);\n}\nunittest\n{\n    alias candidate = mean_absolute_deviation;\n\
    \n    assert(candidate([1.0, 2.0]) == 0.5);\n    assert(candidate([1.0, 2.0, 3.0,\
    \ 4.0]) == 1.0);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpuiafxpw9.d(13): Error: undefined identifier `mean`, did you mean
    function `main`?

    /tmp/tmpuiafxpw9.d(14): Error: template instance `map!((a) => abs(a - mean))`
    template `map` is not defined

    /tmp/tmpuiafxpw9.d(15): Error: function expected before `()`, not `mean` of type
    `float`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpuiafxpw9.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = 0.0;\n    float sum = 0.0;\n    foreach(n; numbers)\n    {\n        sum\
    \ += n;\n    }\n    mean = sum / numbers.length;\n    float sum_of_absolute_deviations\
    \ = 0.0;\n    foreach(n; numbers)\n    {\n        sum_of_absolute_deviations +=\
    \ abs(n - mean);\n    }\n    return sum_of_absolute_deviations / numbers.length;\n\
    }\nunittest\n{\n    alias candidate = mean_absolute_deviation;\n\n    assert(candidate([1.0,\
    \ 2.0]) == 0.5);\n    assert(candidate([1.0, 2.0, 3.0, 4.0]) == 1.0);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpk_9ru5v1.d(33): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283f5]

    ??:? void tmpk_9ru5v1.__unittest_L27_C1() [0x428159]

    ??:? void tmpk_9ru5v1.__modtest() [0x428178]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c3cf]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b262]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4303f5]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x4308a4]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430381]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b239]

    ??:? runModuleUnitTests [0x42c1a5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428844]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = mean(numbers);\n    float[] abs_diff = new float[numbers.length];\n \
    \   foreach(i, number; numbers)\n    {\n        abs_diff[i] = abs(number - mean);\n\
    \    }\n    return mean(abs_diff);\n}\nunittest\n{\n    alias candidate = mean_absolute_deviation;\n\
    \n    assert(candidate([1.0, 2.0]) == 0.5);\n    assert(candidate([1.0, 2.0, 3.0,\
    \ 4.0]) == 1.0);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpws6une7h.d(13): Error: undefined identifier `mean`, did you mean
    function `main`?

    /tmp/tmpws6une7h.d(19): Error: function expected before `()`, not `mean` of type
    `float`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpws6une7h.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = 0.0;\n    foreach(n; numbers) {\n        mean += n;\n    }\n    mean\
    \ /= numbers.length;\n    float sum = 0.0;\n    foreach(n; numbers) {\n      \
    \  sum += abs(n - mean);\n    }\n    return sum / numbers.length;\n}\nunittest\n\
    {\n    alias candidate = mean_absolute_deviation;\n\n    assert(candidate([1.0,\
    \ 2.0]) == 0.5);\n    assert(candidate([1.0, 2.0, 3.0, 4.0]) == 1.0);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpv9m_v9de.d(30): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283e5]

    ??:? void tmpv9m_v9de.__unittest_L24_C1() [0x428149]

    ??:? void tmpv9m_v9de.__modtest() [0x428168]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c3bf]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b252]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4303e5]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430894]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430371]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b229]

    ??:? runModuleUnitTests [0x42c195]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428834]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163140
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = 0.0;\n    foreach(n; numbers)\n        mean += n;\n    mean /= numbers.length;\n\
    \    float abs_deviation = 0.0;\n    foreach(n; numbers)\n        abs_deviation\
    \ += abs(n - mean);\n    return abs_deviation / numbers.length;\n}\nunittest\n\
    {\n    alias candidate = mean_absolute_deviation;\n\n    assert(candidate([1.0,\
    \ 2.0]) == 0.5);\n    assert(candidate([1.0, 2.0, 3.0, 4.0]) == 1.0);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp_0qv1ppk.d(28): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283e5]

    ??:? void tmp_0qv1ppk.__unittest_L22_C1() [0x428149]

    ??:? void tmp_0qv1ppk.__modtest() [0x428168]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c3bf]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b252]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4303e5]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430894]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430371]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b229]

    ??:? runModuleUnitTests [0x42c195]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428834]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = 0.0;\n    float sum = 0.0;\n    float sum_abs = 0.0;\n    float abs_diff\
    \ = 0.0;\n    float mad = 0.0;\n    int i = 0;\n    int n = numbers.length;\n\
    \    // Calculate the mean of the dataset\n    foreach (x; numbers)\n    {\n \
    \       sum += x;\n    }\n    mean = sum / n;\n    // Calculate the sum of the\
    \ absolute differences\n    foreach (x; numbers)\n    {\n        abs_diff = abs(x\
    \ - mean);\n        sum_abs += abs_diff;\n    }\n    // Calculate the mean absolute\
    \ deviation\n    mad = sum_abs / n;\n    return mad;\n}\n/*\n For a given list\
    \ of input numbers, calculate the Median Absolute Deviation\n    around the median\
    \ of this dataset.\n    Median Absolute Deviation is the median of the absolute\
    \ differences between\n    each element and a centerpoint (median in this case):\n\
    \    MAD = median | x - x_median |\n        \n*/\nfloat median_absolute_deviation(float[]\
    \ numbers) \n{\n    float median = 0.0;\n    float abs_diff = 0.0;\n    float\
    \ mad = 0.0;\n    int i = 0;\n    int n = numbers.length;\n    float[] abs_diffs\
    \ = new float[n];\n    // Calculate the median of the dataset\n    median = median(numbers);\n\
    \    // Calculate the absolute differences\n    foreach (x; numbers)\n    {\n\
    \        abs_diff = abs(x - median);\n        abs_diffs[i] = abs_diff;\n     \
    \   i++;\n    }\n    // Calculate the median absolute deviation\n    mad = median(abs_diffs);\n\
    \    return mad;\n}\n/*\n For a given list of input numbers, calculate the Median\
    \ Absolute Deviation\n    around the median of this dataset.\n    Median Absolute\
    \ Deviation is the median of the absolute differences between\n    each element\
    \ and a centerpoint (median in this case):\n    MAD = median | x - x_median |\n\
    \        \n*/\nfloat median_absolute_deviation(float[] numbers, float\nunittest\n\
    {\n    alias candidate = mean_absolute_deviation;\n\n    assert(candidate([1.0,\
    \ 2.0]) == 0.5);\n    assert(candidate([1.0, 2.0, 3.0, 4.0]) == 1.0);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp9z_7d1b8.d(74): Error: found `unittest` when expecting `)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9z_7d1b8.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = 0.0;\n    float sum = 0.0;\n    foreach(n; numbers)\n    {\n        sum\
    \ += n;\n    }\n    mean = sum / numbers.length;\n    float sum_of_abs_differences\
    \ = 0.0;\n    foreach(n; numbers)\n    {\n        sum_of_abs_differences += abs(n\
    \ - mean);\n    }\n    return sum_of_abs_differences / numbers.length;\n}\n/*\n\
    \ For a given list of input numbers, calculate Median Absolute Deviation\n   \
    \ around the median of this dataset.\n    Median Absolute Deviation is the median\
    \ of the absolute differences between\n    each element and a centerpoint (median\
    \ in this case):\n    MAD = median | x - x_median |\n        \n*/\nfloat median_absolute_deviation(float[]\
    \ numbers) \n{\n    float median = 0.0;\n    float[] sorted_numbers = numbers.dup;\n\
    \    sort(sorted_numbers);\n    if(sorted_numbers.length % 2 == 0)\n    {\n  \
    \      median = (sorted_numbers[sorted_numbers.length / 2] + sorted_numbers[sorted_numbers.length\
    \ / 2 - 1]) / 2;\n    }\n    else\n    {\n        median = sorted_numbers[sorted_numbers.length\
    \ / 2];\n    }\n    float[] abs_differences = new float[sorted_numbers.length];\n\
    \    foreach(i, n; sorted_numbers)\n    {\n        abs_differences[i] = abs(n\
    \ - median);\n    }\n    sort(abs_differences);\n    if(abs_differences.length\
    \ % 2 == 0)\n    {\n        return (abs_differences[abs_differences.length / 2]\
    \ + abs_differences[abs_differences.length / 2 - 1]) / 2;\n    }\n    else\n \
    \   {\n        return abs_differences[abs_differences.length / 2];\n    }\n}\n\
    /*\n For a given list of input numbers, calculate the standard deviation\n   \
    \ around the mean of this dataset.\n    Standard Deviation is the\nunittest\n\
    {\n    alias candidate = mean_absolute_deviation;\n\n    assert(candidate([1.0,\
    \ 2.0]) == 0.5);\n    assert(candidate([1.0, 2.0, 3.0, 4.0]) == 1.0);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpv4zxeus7.d(63): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpv4zxeus7.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = 0.0;\n    foreach(n; numbers)\n    {\n        mean += n;\n    }\n   \
    \ mean /= numbers.length;\n    float sum = 0.0;\n    foreach(n; numbers)\n   \
    \ {\n        sum += abs(n - mean);\n    }\n    return sum / numbers.length;\n\
    }\nunittest\n{\n    alias candidate = mean_absolute_deviation;\n\n    assert(candidate([1.0,\
    \ 2.0]) == 0.5);\n    assert(candidate([1.0, 2.0, 3.0, 4.0]) == 1.0);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpyz68u3kb.d(32): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283e5]

    ??:? void tmpyz68u3kb.__unittest_L26_C1() [0x428149]

    ??:? void tmpyz68u3kb.__modtest() [0x428168]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c3bf]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b252]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4303e5]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430894]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430371]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b229]

    ??:? runModuleUnitTests [0x42c195]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428834]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = 0.0;\n    foreach(n; numbers) {\n        mean += n;\n    }\n    mean\
    \ /= numbers.length;\n    float mad = 0.0;\n    foreach(n; numbers) {\n      \
    \  mad += abs(n - mean);\n    }\n    mad /= numbers.length;\n    return mad;\n\
    }\nunittest\n{\n    alias candidate = mean_absolute_deviation;\n\n    assert(candidate([1.0,\
    \ 2.0]) == 0.5);\n    assert(candidate([1.0, 2.0, 3.0, 4.0]) == 1.0);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp4qt2ypcz.d(31): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283f5]

    ??:? void tmp4qt2ypcz.__unittest_L25_C1() [0x428155]

    ??:? void tmp4qt2ypcz.__modtest() [0x428174]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c3cf]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b262]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4303f5]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x4308a4]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430381]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b239]

    ??:? runModuleUnitTests [0x42c1a5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428844]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = mean(numbers);\n    float[] differences = new float[numbers.length];\n\
    \    foreach (i, number; numbers) {\n        differences[i] = abs(number - mean);\n\
    \    }\n    return mean(differences);\n}\nunittest\n{\n    alias candidate = mean_absolute_deviation;\n\
    \n    assert(candidate([1.0, 2.0]) == 0.5);\n    assert(candidate([1.0, 2.0, 3.0,\
    \ 4.0]) == 1.0);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpgwen_qe9.d(13): Error: undefined identifier `mean`, did you mean
    function `main`?

    /tmp/tmpgwen_qe9.d(18): Error: function expected before `()`, not `mean` of type
    `float`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgwen_qe9.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = 0.0;\n    foreach(n; numbers)\n        mean += n;\n    mean /= numbers.length;\n\
    \    float mad = 0.0;\n    foreach(n; numbers)\n        mad += abs(n - mean);\n\
    \    mad /= numbers.length;\n    return mad;\n}\n/*\n For a given list of input\
    \ numbers, calculate Median Absolute Deviation\n    around the median of this\
    \ dataset.\n    Median Absolute Deviation is the median of the absolute differences\
    \ between\n    each element and a centerpoint (median in this case):\n    MAD\
    \ = median | x - x_median |\n*/\nfloat median_absolute_deviation(float[] numbers)\
    \ \n{\n    float[] deviations = new float[numbers.length];\n    float median =\
    \ numbers[numbers.length / 2];\n    foreach(n; numbers)\n        deviations ~=\
    \ abs(n - median);\n    return deviations[deviations.length / 2];\n}\n/*\n For\
    \ a given list of input numbers, calculate Standard Deviation\n    around the\
    \ mean of this dataset.\n    Standard Deviation is the square root of the average\
    \ squared difference\n    between each element and a centerpoint (mean in this\
    \ case):\n    SD = sqrt(average (x - x_mean)^2)\n*/\nfloat standard_deviation(float[]\
    \ numbers) \n{\n    float mean = 0.0;\n    foreach(n; numbers)\n        mean +=\
    \ n;\n    mean /= numbers.length;\n    float sd = 0.0;\n    foreach(n; numbers)\n\
    \        sd += pow(n - mean, 2);\n    sd /= numbers.length;\n    return sqrt(sd);\n\
    }\n/*\n For a given list of input numbers, calculate Standard Error\n    around\
    \ the mean of this dataset.\n    Standard Error is the Standard Deviation divided\
    \ by the square root of the\n    number of elements in the dataset:\n    SE =\
    \ SD / sqrt(N)\n*/\nfloat standard_error(float[] numbers) \n{\n    float sd =\
    \ standard_deviation(numbers);\n    return sd / sqrt(numbers.length);\n}\n/*\n\
    \ For a given list of input numbers, calculate Interquartile\nunittest\n{\n  \
    \  alias candidate = mean_absolute_deviation;\n\n    assert(candidate([1.0, 2.0])\
    \ == 0.5);\n    assert(candidate([1.0, 2.0, 3.0, 4.0]) == 1.0);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpue7_bcv2.d(69): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpue7_bcv2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = mean(numbers);\n    float[] abs_diff = new float[numbers.length];\n \
    \   foreach(i, x; numbers)\n    {\n        abs_diff[i] = abs(x - mean);\n    }\n\
    \    return mean(abs_diff);\n}\nunittest\n{\n    alias candidate = mean_absolute_deviation;\n\
    \n    assert(candidate([1.0, 2.0]) == 0.5);\n    assert(candidate([1.0, 2.0, 3.0,\
    \ 4.0]) == 1.0);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp3gifibad.d(13): Error: undefined identifier `mean`, did you mean
    function `main`?

    /tmp/tmp3gifibad.d(19): Error: function expected before `()`, not `mean` of type
    `float`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3gifibad.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = 0.0;\n    float sum = 0.0;\n    foreach(n; numbers)\n    {\n        sum\
    \ += n;\n    }\n    mean = sum / numbers.length;\n    float sum_of_deviations\
    \ = 0.0;\n    foreach(n; numbers)\n    {\n        sum_of_deviations += abs(n -\
    \ mean);\n    }\n    return sum_of_deviations / numbers.length;\n}\nunittest\n\
    {\n    alias candidate = mean_absolute_deviation;\n\n    assert(candidate([1.0,\
    \ 2.0]) == 0.5);\n    assert(candidate([1.0, 2.0, 3.0, 4.0]) == 1.0);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpp9fme6e5.d(33): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283f5]

    ??:? void tmpp9fme6e5.__unittest_L27_C1() [0x428159]

    ??:? void tmpp9fme6e5.__modtest() [0x428178]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c3cf]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b262]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4303f5]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x4308a4]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430381]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b239]

    ??:? runModuleUnitTests [0x42c1a5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428844]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = 0.0;\n    foreach(n; numbers)\n        mean += n;\n    mean /= numbers.length;\n\
    \    float sum_of_absolute_differences = 0.0;\n    foreach(n; numbers)\n     \
    \   sum_of_absolute_differences += abs(n - mean);\n    return sum_of_absolute_differences\
    \ / numbers.length;\n}\nunittest\n{\n    alias candidate = mean_absolute_deviation;\n\
    \n    assert(candidate([1.0, 2.0]) == 0.5);\n    assert(candidate([1.0, 2.0, 3.0,\
    \ 4.0]) == 1.0);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\n\
    void main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp0mkm3ra8.d(28): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283e5]

    ??:? void tmp0mkm3ra8.__unittest_L22_C1() [0x428149]

    ??:? void tmp0mkm3ra8.__modtest() [0x428168]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c3bf]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b252]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4303e5]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430894]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430371]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b229]

    ??:? runModuleUnitTests [0x42c195]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428834]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163140
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = mean(numbers);\n    float[] abs_differences = new float[numbers.length];\n\
    \    foreach(i, number; numbers)\n    {\n        abs_differences[i] = abs(number\
    \ - mean);\n    }\n    return mean(abs_differences);\n}\nunittest\n{\n    alias\
    \ candidate = mean_absolute_deviation;\n\n    assert(candidate([1.0, 2.0]) ==\
    \ 0.5);\n    assert(candidate([1.0, 2.0, 3.0, 4.0]) == 1.0);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp6ydxlnw4.d(13): Error: undefined identifier `mean`, did you mean
    function `main`?

    /tmp/tmp6ydxlnw4.d(19): Error: function expected before `()`, not `mean` of type
    `float`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6ydxlnw4.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = mean(numbers);\n    float[] deviations = new float[numbers.length];\n\
    \    foreach(i, number; numbers)\n    {\n        deviations[i] = abs(number -\
    \ mean);\n    }\n    return mean(deviations);\n}\nunittest\n{\n    alias candidate\
    \ = mean_absolute_deviation;\n\n    assert(candidate([1.0, 2.0]) == 0.5);\n  \
    \  assert(candidate([1.0, 2.0, 3.0, 4.0]) == 1.0);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpxv93eflp.d(13): Error: undefined identifier `mean`, did you mean
    function `main`?

    /tmp/tmpxv93eflp.d(19): Error: function expected before `()`, not `mean` of type
    `float`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxv93eflp.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = mean(numbers);\n    float[] diffs = new float[numbers.length];\n    foreach(i,\
    \ ref n; numbers)\n    {\n        diffs[i] = abs(n - mean);\n    }\n    return\
    \ mean(diffs);\n}\nunittest\n{\n    alias candidate = mean_absolute_deviation;\n\
    \n    assert(candidate([1.0, 2.0]) == 0.5);\n    assert(candidate([1.0, 2.0, 3.0,\
    \ 4.0]) == 1.0);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp2xcabehk.d(13): Error: undefined identifier `mean`, did you mean
    function `main`?

    /tmp/tmp2xcabehk.d(19): Error: function expected before `()`, not `mean` of type
    `float`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2xcabehk.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = 0.0;\n    float sum = 0.0;\n    foreach(n; numbers) {\n        sum +=\
    \ n;\n    }\n    mean = sum / numbers.length;\n    float sum_of_abs_diffs = 0.0;\n\
    \    foreach(n; numbers) {\n        sum_of_abs_diffs += abs(n - mean);\n    }\n\
    \    return sum_of_abs_diffs / numbers.length;\n}\nunittest\n{\n    alias candidate\
    \ = mean_absolute_deviation;\n\n    assert(candidate([1.0, 2.0]) == 0.5);\n  \
    \  assert(candidate([1.0, 2.0, 3.0, 4.0]) == 1.0);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpoaa27jd4.d(31): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283f5]

    ??:? void tmpoaa27jd4.__unittest_L25_C1() [0x428159]

    ??:? void tmpoaa27jd4.__modtest() [0x428178]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c3cf]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b262]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4303f5]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x4308a4]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430381]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b239]

    ??:? runModuleUnitTests [0x42c1a5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428844]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163140
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = mean(numbers);\n    float[] absolute_deviations = new float[numbers.length];\n\
    \    foreach(i, number; numbers)\n    {\n        absolute_deviations[i] = abs(number\
    \ - mean);\n    }\n    return mean(absolute_deviations);\n}\nunittest\n{\n   \
    \ alias candidate = mean_absolute_deviation;\n\n    assert(candidate([1.0, 2.0])\
    \ == 0.5);\n    assert(candidate([1.0, 2.0, 3.0, 4.0]) == 1.0);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpe1sd_hfn.d(13): Error: undefined identifier `mean`, did you mean
    function `main`?

    /tmp/tmpe1sd_hfn.d(19): Error: function expected before `()`, not `mean` of type
    `float`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpe1sd_hfn.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = mean(numbers);\n    float[] absolute_deviations = new float[numbers.length];\n\
    \    foreach(i, number; numbers)\n    {\n        absolute_deviations[i] = abs(number\
    \ - mean);\n    }\n    return mean(absolute_deviations);\n}\nunittest\n{\n   \
    \ alias candidate = mean_absolute_deviation;\n\n    assert(candidate([1.0, 2.0])\
    \ == 0.5);\n    assert(candidate([1.0, 2.0, 3.0, 4.0]) == 1.0);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpe1sd_hfn.d(13): Error: undefined identifier `mean`, did you mean
    function `main`?

    /tmp/tmpe1sd_hfn.d(19): Error: function expected before `()`, not `mean` of type
    `float`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpe1sd_hfn.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = mean(numbers);\n    float[] absolute_deviations = new float[numbers.length];\n\
    \    foreach(i, number; numbers)\n    {\n        absolute_deviations[i] = abs(number\
    \ - mean);\n    }\n    return mean(absolute_deviations);\n}\nunittest\n{\n   \
    \ alias candidate = mean_absolute_deviation;\n\n    assert(candidate([1.0, 2.0])\
    \ == 0.5);\n    assert(candidate([1.0, 2.0, 3.0, 4.0]) == 1.0);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpe1sd_hfn.d(13): Error: undefined identifier `mean`, did you mean
    function `main`?

    /tmp/tmpe1sd_hfn.d(19): Error: function expected before `()`, not `mean` of type
    `float`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpe1sd_hfn.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = 0.0;\n    foreach(n; numbers) \n    {\n        mean += n;\n    }\n  \
    \  mean /= numbers.length;\n    float mad = 0.0;\n    foreach(n; numbers) \n \
    \   {\n        mad += abs(n - mean);\n    }\n    return mad / numbers.length;\n\
    }\nunittest\n{\n    alias candidate = mean_absolute_deviation;\n\n    assert(candidate([1.0,\
    \ 2.0]) == 0.5);\n    assert(candidate([1.0, 2.0, 3.0, 4.0]) == 1.0);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp911rxwww.d(32): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283e5]

    ??:? void tmp911rxwww.__unittest_L26_C1() [0x428149]

    ??:? void tmp911rxwww.__modtest() [0x428168]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c3bf]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b252]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4303e5]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430894]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430371]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b229]

    ??:? runModuleUnitTests [0x42c195]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428834]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = mean(numbers);\n    float[] diffs = new float[numbers.length];\n    foreach(i,\
    \ num; numbers)\n    {\n        diffs[i] = abs(num - mean);\n    }\n    return\
    \ mean(diffs);\n}\nunittest\n{\n    alias candidate = mean_absolute_deviation;\n\
    \n    assert(candidate([1.0, 2.0]) == 0.5);\n    assert(candidate([1.0, 2.0, 3.0,\
    \ 4.0]) == 1.0);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpozrt6s6o.d(13): Error: undefined identifier `mean`, did you mean
    function `main`?

    /tmp/tmpozrt6s6o.d(19): Error: function expected before `()`, not `mean` of type
    `float`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpozrt6s6o.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = 0.0;\n    foreach(n; numbers) {\n        mean += n;\n    }\n    mean\
    \ /= numbers.length;\n    float mad = 0.0;\n    foreach(n; numbers) {\n      \
    \  mad += abs(n - mean);\n    }\n    mad /= numbers.length;\n    return mad;\n\
    }\nunittest\n{\n    alias candidate = mean_absolute_deviation;\n\n    assert(candidate([1.0,\
    \ 2.0]) == 0.5);\n    assert(candidate([1.0, 2.0, 3.0, 4.0]) == 1.0);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp4qt2ypcz.d(31): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283f5]

    ??:? void tmp4qt2ypcz.__unittest_L25_C1() [0x428155]

    ??:? void tmp4qt2ypcz.__modtest() [0x428174]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c3cf]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b262]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4303f5]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x4308a4]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430381]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b239]

    ??:? runModuleUnitTests [0x42c1a5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428844]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = 0.0;\n    foreach(n; numbers)\n        mean += n;\n    mean /= numbers.length;\n\
    \    float mad = 0.0;\n    foreach(n; numbers)\n        mad += abs(n - mean);\n\
    \    mad /= numbers.length;\n    return mad;\n}\nunittest\n{\n    alias candidate\
    \ = mean_absolute_deviation;\n\n    assert(candidate([1.0, 2.0]) == 0.5);\n  \
    \  assert(candidate([1.0, 2.0, 3.0, 4.0]) == 1.0);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpa6rwc9cw.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283f5]

    ??:? void tmpa6rwc9cw.__unittest_L23_C1() [0x428155]

    ??:? void tmpa6rwc9cw.__modtest() [0x428174]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c3cf]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b262]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4303f5]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x4308a4]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430381]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b239]

    ??:? runModuleUnitTests [0x42c1a5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428844]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = mean(numbers);\n    float[] deviations = new float[numbers.length];\n\
    \    foreach(i, number; numbers)\n    {\n        deviations[i] = abs(number -\
    \ mean);\n    }\n    return mean(deviations);\n}\nunittest\n{\n    alias candidate\
    \ = mean_absolute_deviation;\n\n    assert(candidate([1.0, 2.0]) == 0.5);\n  \
    \  assert(candidate([1.0, 2.0, 3.0, 4.0]) == 1.0);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpxv93eflp.d(13): Error: undefined identifier `mean`, did you mean
    function `main`?

    /tmp/tmpxv93eflp.d(19): Error: function expected before `()`, not `mean` of type
    `float`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxv93eflp.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = mean(numbers);\n    float[] abs_diff = map!((x) => abs(x - mean))(numbers);\n\
    \    return mean(abs_diff);\n}\nunittest\n{\n    alias candidate = mean_absolute_deviation;\n\
    \n    assert(candidate([1.0, 2.0]) == 0.5);\n    assert(candidate([1.0, 2.0, 3.0,\
    \ 4.0]) == 1.0);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpc31spine.d(13): Error: undefined identifier `mean`, did you mean
    function `main`?

    /tmp/tmpc31spine.d(14): Error: template instance `map!((x) => abs(x - mean))`
    template `map` is not defined

    /tmp/tmpc31spine.d(15): Error: function expected before `()`, not `mean` of type
    `float`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpc31spine.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = mean(numbers);\n    float[] diffs = new float[numbers.length];\n    foreach(i,\
    \ number; numbers)\n    {\n        diffs[i] = abs(number - mean);\n    }\n   \
    \ return mean(diffs);\n}\nunittest\n{\n    alias candidate = mean_absolute_deviation;\n\
    \n    assert(candidate([1.0, 2.0]) == 0.5);\n    assert(candidate([1.0, 2.0, 3.0,\
    \ 4.0]) == 1.0);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpma3shxh1.d(13): Error: undefined identifier `mean`, did you mean
    function `main`?

    /tmp/tmpma3shxh1.d(19): Error: function expected before `()`, not `mean` of type
    `float`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpma3shxh1.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = mean(numbers);\n    float[] abs_diffs = new float[numbers.length];\n\
    \    foreach(i, x; numbers)\n    {\n        abs_diffs[i] = abs(x - mean);\n  \
    \  }\n    return mean(abs_diffs);\n}\nunittest\n{\n    alias candidate = mean_absolute_deviation;\n\
    \n    assert(candidate([1.0, 2.0]) == 0.5);\n    assert(candidate([1.0, 2.0, 3.0,\
    \ 4.0]) == 1.0);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp2d962p62.d(13): Error: undefined identifier `mean`, did you mean
    function `main`?

    /tmp/tmp2d962p62.d(19): Error: function expected before `()`, not `mean` of type
    `float`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2d962p62.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = mean(numbers);\n    float[] abs_diffs = new float[numbers.length];\n\
    \    foreach(i, number; numbers)\n    {\n        abs_diffs[i] = abs(number - mean);\n\
    \    }\n    return mean(abs_diffs);\n}\nunittest\n{\n    alias candidate = mean_absolute_deviation;\n\
    \n    assert(candidate([1.0, 2.0]) == 0.5);\n    assert(candidate([1.0, 2.0, 3.0,\
    \ 4.0]) == 1.0);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpdh4svn62.d(13): Error: undefined identifier `mean`, did you mean
    function `main`?

    /tmp/tmpdh4svn62.d(19): Error: function expected before `()`, not `mean` of type
    `float`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdh4svn62.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = mean(numbers);\n    float[] abs_diffs = new float[numbers.length];\n\
    \    foreach(i, number; numbers)\n    {\n        abs_diffs[i] = abs(number - mean);\n\
    \    }\n    return mean(abs_diffs);\n}\nunittest\n{\n    alias candidate = mean_absolute_deviation;\n\
    \n    assert(candidate([1.0, 2.0]) == 0.5);\n    assert(candidate([1.0, 2.0, 3.0,\
    \ 4.0]) == 1.0);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpdh4svn62.d(13): Error: undefined identifier `mean`, did you mean
    function `main`?

    /tmp/tmpdh4svn62.d(19): Error: function expected before `()`, not `mean` of type
    `float`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdh4svn62.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = mean(numbers);\n    float[] deviations = new float[numbers.length];\n\
    \    foreach(i, number; numbers)\n    {\n        deviations[i] = abs(number -\
    \ mean);\n    }\n    return mean(deviations);\n}\nunittest\n{\n    alias candidate\
    \ = mean_absolute_deviation;\n\n    assert(candidate([1.0, 2.0]) == 0.5);\n  \
    \  assert(candidate([1.0, 2.0, 3.0, 4.0]) == 1.0);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpxv93eflp.d(13): Error: undefined identifier `mean`, did you mean
    function `main`?

    /tmp/tmpxv93eflp.d(19): Error: function expected before `()`, not `mean` of type
    `float`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxv93eflp.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = 0.0;\n    foreach(n; numbers)\n        mean += n;\n    mean /= numbers.length;\n\
    \    float mad = 0.0;\n    foreach(n; numbers)\n        mad += abs(n - mean);\n\
    \    mad /= numbers.length;\n    return mad;\n}\nunittest\n{\n    alias candidate\
    \ = mean_absolute_deviation;\n\n    assert(candidate([1.0, 2.0]) == 0.5);\n  \
    \  assert(candidate([1.0, 2.0, 3.0, 4.0]) == 1.0);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpa6rwc9cw.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283f5]

    ??:? void tmpa6rwc9cw.__unittest_L23_C1() [0x428155]

    ??:? void tmpa6rwc9cw.__modtest() [0x428174]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c3cf]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b262]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4303f5]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x4308a4]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430381]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b239]

    ??:? runModuleUnitTests [0x42c1a5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428844]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = 0.0;\n    float sum = 0.0;\n    foreach(num; numbers) {\n        sum\
    \ += num;\n    }\n    mean = sum / numbers.length;\n    float sum_of_absolute_deviations\
    \ = 0.0;\n    foreach(num; numbers) {\n        sum_of_absolute_deviations += abs(num\
    \ - mean);\n    }\n    return sum_of_absolute_deviations / numbers.length;\n}\n\
    unittest\n{\n    alias candidate = mean_absolute_deviation;\n\n    assert(candidate([1.0,\
    \ 2.0]) == 0.5);\n    assert(candidate([1.0, 2.0, 3.0, 4.0]) == 1.0);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpcknfuid7.d(31): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283f5]

    ??:? void tmpcknfuid7.__unittest_L25_C1() [0x428159]

    ??:? void tmpcknfuid7.__modtest() [0x428178]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c3cf]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b262]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4303f5]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x4308a4]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430381]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b239]

    ??:? runModuleUnitTests [0x42c1a5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428844]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163140
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = 0.0;\n    float sum_of_abs_diff = 0.0;\n    foreach(n; numbers) {\n \
    \       mean += n;\n    }\n    mean /= numbers.length;\n    foreach(n; numbers)\
    \ {\n        sum_of_abs_diff += abs(n - mean);\n    }\n    return sum_of_abs_diff\
    \ / numbers.length;\n}\nunittest\n{\n    alias candidate = mean_absolute_deviation;\n\
    \n    assert(candidate([1.0, 2.0]) == 0.5);\n    assert(candidate([1.0, 2.0, 3.0,\
    \ 4.0]) == 1.0);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\n\
    void main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpa1tyfbfw.d(30): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283e5]

    ??:? void tmpa1tyfbfw.__unittest_L24_C1() [0x428149]

    ??:? void tmpa1tyfbfw.__modtest() [0x428168]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c3bf]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b252]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4303e5]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430894]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430371]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b229]

    ??:? runModuleUnitTests [0x42c195]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428834]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163140
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = mean(numbers);\n    float[] absolute_deviations = map!((x) => abs(x -\
    \ mean))(numbers);\n    return mean(absolute_deviations);\n}\nunittest\n{\n  \
    \  alias candidate = mean_absolute_deviation;\n\n    assert(candidate([1.0, 2.0])\
    \ == 0.5);\n    assert(candidate([1.0, 2.0, 3.0, 4.0]) == 1.0);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp_g24rig0.d(13): Error: undefined identifier `mean`, did you mean
    function `main`?

    /tmp/tmp_g24rig0.d(14): Error: template instance `map!((x) => abs(x - mean))`
    template `map` is not defined

    /tmp/tmp_g24rig0.d(15): Error: function expected before `()`, not `mean` of type
    `float`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_g24rig0.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = mean(numbers);\n    float[] abs_differences = new float[numbers.length];\n\
    \    foreach(i, number; numbers)\n    {\n        abs_differences[i] = abs(number\
    \ - mean);\n    }\n    return mean(abs_differences);\n}\nunittest\n{\n    alias\
    \ candidate = mean_absolute_deviation;\n\n    assert(candidate([1.0, 2.0]) ==\
    \ 0.5);\n    assert(candidate([1.0, 2.0, 3.0, 4.0]) == 1.0);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp6ydxlnw4.d(13): Error: undefined identifier `mean`, did you mean
    function `main`?

    /tmp/tmp6ydxlnw4.d(19): Error: function expected before `()`, not `mean` of type
    `float`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6ydxlnw4.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = mean(numbers);\n    float[] deviations = new float[numbers.length];\n\
    \    foreach(i, n; numbers)\n    {\n        deviations[i] = abs(n - mean);\n \
    \   }\n    return mean(deviations);\n}\nunittest\n{\n    alias candidate = mean_absolute_deviation;\n\
    \n    assert(candidate([1.0, 2.0]) == 0.5);\n    assert(candidate([1.0, 2.0, 3.0,\
    \ 4.0]) == 1.0);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp2iy56arc.d(13): Error: undefined identifier `mean`, did you mean
    function `main`?

    /tmp/tmp2iy56arc.d(19): Error: function expected before `()`, not `mean` of type
    `float`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2iy56arc.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = 0.0;\n    float sum = 0.0;\n    foreach(float number; numbers)\n    {\n\
    \        sum += number;\n    }\n    mean = sum / numbers.length;\n    float sum_of_absolute_differences\
    \ = 0.0;\n    foreach(float number; numbers)\n    {\n        sum_of_absolute_differences\
    \ += abs(number - mean);\n    }\n    return sum_of_absolute_differences / numbers.length;\n\
    }\nunittest\n{\n    alias candidate = mean_absolute_deviation;\n\n    assert(candidate([1.0,\
    \ 2.0]) == 0.5);\n    assert(candidate([1.0, 2.0, 3.0, 4.0]) == 1.0);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpuf18n3ub.d(33): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283f5]

    ??:? void tmpuf18n3ub.__unittest_L27_C1() [0x428159]

    ??:? void tmpuf18n3ub.__modtest() [0x428178]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c3cf]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b262]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4303f5]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x4308a4]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430381]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b239]

    ??:? runModuleUnitTests [0x42c1a5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428844]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = mean(numbers);\n    float[] abs_diff = map!((x) => abs(x - mean))(numbers);\n\
    \    return mean(abs_diff);\n}\nunittest\n{\n    alias candidate = mean_absolute_deviation;\n\
    \n    assert(candidate([1.0, 2.0]) == 0.5);\n    assert(candidate([1.0, 2.0, 3.0,\
    \ 4.0]) == 1.0);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpc31spine.d(13): Error: undefined identifier `mean`, did you mean
    function `main`?

    /tmp/tmpc31spine.d(14): Error: template instance `map!((x) => abs(x - mean))`
    template `map` is not defined

    /tmp/tmpc31spine.d(15): Error: function expected before `()`, not `mean` of type
    `float`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpc31spine.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = mean(numbers);\n    float[] diffs = new float[numbers.length];\n    foreach(i,\
    \ number; numbers)\n    {\n        diffs[i] = abs(number - mean);\n    }\n   \
    \ return mean(diffs);\n}\nunittest\n{\n    alias candidate = mean_absolute_deviation;\n\
    \n    assert(candidate([1.0, 2.0]) == 0.5);\n    assert(candidate([1.0, 2.0, 3.0,\
    \ 4.0]) == 1.0);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpma3shxh1.d(13): Error: undefined identifier `mean`, did you mean
    function `main`?

    /tmp/tmpma3shxh1.d(19): Error: function expected before `()`, not `mean` of type
    `float`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpma3shxh1.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = mean(numbers);\n    float[] absolute_differences = new float[numbers.length];\n\
    \    for (int i = 0; i < numbers.length; i++) {\n        absolute_differences[i]\
    \ = abs(numbers[i] - mean);\n    }\n    return mean(absolute_differences);\n}\n\
    unittest\n{\n    alias candidate = mean_absolute_deviation;\n\n    assert(candidate([1.0,\
    \ 2.0]) == 0.5);\n    assert(candidate([1.0, 2.0, 3.0, 4.0]) == 1.0);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp6k1e_odd.d(13): Error: undefined identifier `mean`, did you mean
    function `main`?

    /tmp/tmp6k1e_odd.d(18): Error: function expected before `()`, not `mean` of type
    `float`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6k1e_odd.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = mean(numbers);\n    float[] deviations = new float[numbers.length];\n\
    \    foreach(i, number; numbers)\n    {\n        deviations[i] = abs(number -\
    \ mean);\n    }\n    return mean(deviations);\n}\nunittest\n{\n    alias candidate\
    \ = mean_absolute_deviation;\n\n    assert(candidate([1.0, 2.0]) == 0.5);\n  \
    \  assert(candidate([1.0, 2.0, 3.0, 4.0]) == 1.0);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpxv93eflp.d(13): Error: undefined identifier `mean`, did you mean
    function `main`?

    /tmp/tmpxv93eflp.d(19): Error: function expected before `()`, not `mean` of type
    `float`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxv93eflp.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = mean(numbers);\n    float[] diffs = new float[numbers.length];\n    foreach(i,\
    \ n; numbers)\n    {\n        diffs[i] = abs(n - mean);\n    }\n    return mean(diffs);\n\
    }\nunittest\n{\n    alias candidate = mean_absolute_deviation;\n\n    assert(candidate([1.0,\
    \ 2.0]) == 0.5);\n    assert(candidate([1.0, 2.0, 3.0, 4.0]) == 1.0);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpx6iysdjf.d(13): Error: undefined identifier `mean`, did you mean
    function `main`?

    /tmp/tmpx6iysdjf.d(19): Error: function expected before `()`, not `mean` of type
    `float`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpx6iysdjf.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = mean(numbers);\n    float[] absolute_deviations = new float[numbers.length];\n\
    \    foreach(i, number; numbers)\n    {\n        absolute_deviations[i] = abs(number\
    \ - mean);\n    }\n    return mean(absolute_deviations);\n}\nunittest\n{\n   \
    \ alias candidate = mean_absolute_deviation;\n\n    assert(candidate([1.0, 2.0])\
    \ == 0.5);\n    assert(candidate([1.0, 2.0, 3.0, 4.0]) == 1.0);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpe1sd_hfn.d(13): Error: undefined identifier `mean`, did you mean
    function `main`?

    /tmp/tmpe1sd_hfn.d(19): Error: function expected before `()`, not `mean` of type
    `float`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpe1sd_hfn.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = mean(numbers);\n    float[] abs_diff = new float[numbers.length];\n \
    \   foreach(i, number; numbers)\n    {\n        abs_diff[i] = abs(number - mean);\n\
    \    }\n    return mean(abs_diff);\n}\nunittest\n{\n    alias candidate = mean_absolute_deviation;\n\
    \n    assert(candidate([1.0, 2.0]) == 0.5);\n    assert(candidate([1.0, 2.0, 3.0,\
    \ 4.0]) == 1.0);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpws6une7h.d(13): Error: undefined identifier `mean`, did you mean
    function `main`?

    /tmp/tmpws6une7h.d(19): Error: function expected before `()`, not `mean` of type
    `float`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpws6une7h.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = mean(numbers);\n    float[] deviations = new float[numbers.length];\n\
    \    foreach(i, number; numbers)\n    {\n        deviations[i] = abs(number -\
    \ mean);\n    }\n    return mean(deviations);\n}\nunittest\n{\n    alias candidate\
    \ = mean_absolute_deviation;\n\n    assert(candidate([1.0, 2.0]) == 0.5);\n  \
    \  assert(candidate([1.0, 2.0, 3.0, 4.0]) == 1.0);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpxv93eflp.d(13): Error: undefined identifier `mean`, did you mean
    function `main`?

    /tmp/tmpxv93eflp.d(19): Error: function expected before `()`, not `mean` of type
    `float`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxv93eflp.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = mean(numbers);\n    float[] diffs = new float[numbers.length];\n    foreach(i,\
    \ n; numbers)\n    {\n        diffs[i] = abs(n - mean);\n    }\n    return mean(diffs);\n\
    }\nunittest\n{\n    alias candidate = mean_absolute_deviation;\n\n    assert(candidate([1.0,\
    \ 2.0]) == 0.5);\n    assert(candidate([1.0, 2.0, 3.0, 4.0]) == 1.0);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpx6iysdjf.d(13): Error: undefined identifier `mean`, did you mean
    function `main`?

    /tmp/tmpx6iysdjf.d(19): Error: function expected before `()`, not `mean` of type
    `float`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpx6iysdjf.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = 0.0;\n    float sum = 0.0;\n    foreach(n; numbers)\n    {\n        sum\
    \ += n;\n    }\n    mean = sum / numbers.length;\n    sum = 0.0;\n    foreach(n;\
    \ numbers)\n    {\n        sum += abs(n - mean);\n    }\n    return sum / numbers.length;\n\
    }\n/*\n    For a given list of input numbers, calculate the median absolute deviation\n\
    \    around the median of this dataset.\n    Median Absolute Deviation is the\
    \ median of the absolute difference between\n    each element and a centerpoint\
    \ (median in this case):\n    MAD = median | x - x_median |\n*/\nfloat median_absolute_deviation(float[]\
    \ numbers) \n{\n    float median = 0.0;\n    float[] abs_diff = new float[numbers.length];\n\
    \    int i = 0;\n    foreach(n; numbers)\n    {\n        abs_diff[i] = abs(n -\
    \ median);\n        i++;\n    }\n    return median(abs_diff);\n}\n/*\n    For\
    \ a given list of input numbers, calculate the standard deviation\n    around\
    \ the mean of this dataset.\n    Standard Deviation is the square root of the\
    \ average of the squared\n    difference between each element and a centerpoint\
    \ (mean in this case):\n    SD = sqrt( average ( x - x_mean )^2 )\n*/\nfloat standard_deviation(float[]\
    \ numbers) \n{\n    float mean = 0.0;\n    float sum = 0.0;\n    foreach(n; numbers)\n\
    \    {\n        sum += n;\n    }\n    mean = sum / numbers.length;\n    sum =\
    \ 0.0;\n    foreach(n; numbers)\n    {\n        sum += (n - mean) * (n - mean);\n\
    \    }\n    return sqrt(sum / numbers.length);\n}\n/*\n    For a given list of\
    \ input numbers, calculate the variance\n    around the mean of this dataset.\n\
    \    Variance is the average of the squared difference between each element\n\
    \    and a centerpoint (mean in this case):\n    Var = average ( x - x_mean )^\n\
    unittest\n{\n    alias candidate = mean_absolute_deviation;\n\n    assert(candidate([1.0,\
    \ 2.0]) == 0.5);\n    assert(candidate([1.0, 2.0, 3.0, 4.0]) == 1.0);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpwthsobh8.d(69): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwthsobh8.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = mean(numbers);\n    float[] diffs = new float[numbers.length];\n    foreach(i,\
    \ n; numbers)\n    {\n        diffs[i] = abs(n - mean);\n    }\n    return mean(diffs);\n\
    }\nunittest\n{\n    alias candidate = mean_absolute_deviation;\n\n    assert(candidate([1.0,\
    \ 2.0]) == 0.5);\n    assert(candidate([1.0, 2.0, 3.0, 4.0]) == 1.0);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpx6iysdjf.d(13): Error: undefined identifier `mean`, did you mean
    function `main`?

    /tmp/tmpx6iysdjf.d(19): Error: function expected before `()`, not `mean` of type
    `float`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpx6iysdjf.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = 0.0;\n    foreach(n; numbers)\n        mean += n;\n    mean /= numbers.length;\n\
    \    float mad = 0.0;\n    foreach(n; numbers)\n        mad += abs(n - mean);\n\
    \    mad /= numbers.length;\n    return mad;\n}\n/*\n For a given list of input\
    \ numbers, calculate Median Absolute Deviation\n    around the median of this\
    \ dataset.\n    Median Absolute Deviation is the median of the absolute difference\
    \ between\n    each element and a centerpoint (median in this case):\n    MAD\
    \ = median | x - x_median |\n        \n*/\nfloat median_absolute_deviation(float[]\
    \ numbers) \n{\n    float[] diffs = new float[numbers.length];\n    float median\
    \ = numbers[numbers.length / 2];\n    foreach(i, n; numbers)\n        diffs[i]\
    \ = abs(n - median);\n    sort(diffs);\n    return diffs[diffs.length / 2];\n\
    }\n/*\n For a given list of input numbers, calculate Standard Deviation\n    around\
    \ the mean of this dataset.\n    Standard Deviation is the square root of the\
    \ average of the squared\n    differences between each element and the mean:\n\
    \    SD = sqrt( average ( x - x_mean ) ^ 2 )\n        \n*/\nfloat standard_deviation(float[]\
    \ numbers) \n{\n    float mean = 0.0;\n    foreach(n; numbers)\n        mean +=\
    \ n;\n    mean /= numbers.length;\n    float sd = 0.0;\n    foreach(n; numbers)\n\
    \        sd += (n - mean) * (n - mean);\n    sd /= numbers.length;\n    return\
    \ sqrt(sd);\n}\n/*\n For a given list of input numbers, calculate Variance\n \
    \   around the mean of this dataset.\n    Variance is the average of the squared\
    \ differences between each element\n    and the mean:\n    Var = average ( x -\
    \ x_mean ) ^ 2\n        \n*/\nfloat variance(float[] numbers) \n{\n    float mean\
    \ = 0.0;\n    foreach(n; numbers)\n        mean += n;\n    mean /\nunittest\n\
    {\n    alias candidate = mean_absolute_deviation;\n\n    assert(candidate([1.0,\
    \ 2.0]) == 0.5);\n    assert(candidate([1.0, 2.0, 3.0, 4.0]) == 1.0);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpl4de1baw.d(74): Error: expression expected, not `unittest`

    /tmp/tmpl4de1baw.d(75): Error: found `{` when expecting `;` following statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpl4de1baw.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = mean(numbers);\n    float[] diffs = new float[numbers.length];\n    foreach(i,\
    \ n; numbers)\n    {\n        diffs[i] = abs(n - mean);\n    }\n    return mean(diffs);\n\
    }\nunittest\n{\n    alias candidate = mean_absolute_deviation;\n\n    assert(candidate([1.0,\
    \ 2.0]) == 0.5);\n    assert(candidate([1.0, 2.0, 3.0, 4.0]) == 1.0);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpx6iysdjf.d(13): Error: undefined identifier `mean`, did you mean
    function `main`?

    /tmp/tmpx6iysdjf.d(19): Error: function expected before `()`, not `mean` of type
    `float`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpx6iysdjf.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = mean(numbers);\n    float[] diffs = new float[numbers.length];\n    foreach(i,\
    \ num; numbers)\n    {\n        diffs[i] = abs(num - mean);\n    }\n    return\
    \ mean(diffs);\n}\nunittest\n{\n    alias candidate = mean_absolute_deviation;\n\
    \n    assert(candidate([1.0, 2.0]) == 0.5);\n    assert(candidate([1.0, 2.0, 3.0,\
    \ 4.0]) == 1.0);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpozrt6s6o.d(13): Error: undefined identifier `mean`, did you mean
    function `main`?

    /tmp/tmpozrt6s6o.d(19): Error: function expected before `()`, not `mean` of type
    `float`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpozrt6s6o.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = 0.0;\n    foreach(n; numbers)\n    {\n        mean += n;\n    }\n   \
    \ mean /= numbers.length;\n    float sum = 0.0;\n    foreach(n; numbers)\n   \
    \ {\n        sum += abs(n - mean);\n    }\n    return sum / numbers.length;\n\
    }\nunittest\n{\n    alias candidate = mean_absolute_deviation;\n\n    assert(candidate([1.0,\
    \ 2.0]) == 0.5);\n    assert(candidate([1.0, 2.0, 3.0, 4.0]) == 1.0);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpyz68u3kb.d(32): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283e5]

    ??:? void tmpyz68u3kb.__unittest_L26_C1() [0x428149]

    ??:? void tmpyz68u3kb.__modtest() [0x428168]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c3bf]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b252]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4303e5]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430894]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430371]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b229]

    ??:? runModuleUnitTests [0x42c195]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428834]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = 0.0;\n    float sum = 0.0;\n    foreach(n; numbers)\n    {\n        sum\
    \ += n;\n    }\n    mean = sum / numbers.length;\n    float sum_of_abs_diffs =\
    \ 0.0;\n    foreach(n; numbers)\n    {\n        sum_of_abs_diffs += abs(n - mean);\n\
    \    }\n    return sum_of_abs_diffs / numbers.length;\n}\nunittest\n{\n    alias\
    \ candidate = mean_absolute_deviation;\n\n    assert(candidate([1.0, 2.0]) ==\
    \ 0.5);\n    assert(candidate([1.0, 2.0, 3.0, 4.0]) == 1.0);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpudwo924e.d(33): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283f5]

    ??:? void tmpudwo924e.__unittest_L27_C1() [0x428159]

    ??:? void tmpudwo924e.__modtest() [0x428178]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c3cf]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b262]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4303f5]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x4308a4]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430381]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b239]

    ??:? runModuleUnitTests [0x42c1a5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428844]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163140
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = mean(numbers);\n    float[] deviations = new float[numbers.length];\n\
    \    foreach(i, number; numbers)\n    {\n        deviations[i] = abs(number -\
    \ mean);\n    }\n    return mean(deviations);\n}\nunittest\n{\n    alias candidate\
    \ = mean_absolute_deviation;\n\n    assert(candidate([1.0, 2.0]) == 0.5);\n  \
    \  assert(candidate([1.0, 2.0, 3.0, 4.0]) == 1.0);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpxv93eflp.d(13): Error: undefined identifier `mean`, did you mean
    function `main`?

    /tmp/tmpxv93eflp.d(19): Error: function expected before `()`, not `mean` of type
    `float`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxv93eflp.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = 0.0;\n    foreach(number; numbers) \n    {\n        mean += number;\n\
    \    }\n    mean /= numbers.length;\n    float sum = 0.0;\n    foreach(number;\
    \ numbers) \n    {\n        sum += abs(number - mean);\n    }\n    return sum\
    \ / numbers.length;\n}\nunittest\n{\n    alias candidate = mean_absolute_deviation;\n\
    \n    assert(candidate([1.0, 2.0]) == 0.5);\n    assert(candidate([1.0, 2.0, 3.0,\
    \ 4.0]) == 1.0);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\n\
    void main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpcmh8wj_7.d(32): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283e5]

    ??:? void tmpcmh8wj_7.__unittest_L26_C1() [0x428149]

    ??:? void tmpcmh8wj_7.__modtest() [0x428168]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c3bf]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b252]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4303e5]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430894]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430371]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b229]

    ??:? runModuleUnitTests [0x42c195]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428834]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163140
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = mean(numbers);\n    float[] abs_diff = new float[numbers.length];\n \
    \   foreach(i, number; numbers) {\n        abs_diff[i] = abs(number - mean);\n\
    \    }\n    return mean(abs_diff);\n}\nunittest\n{\n    alias candidate = mean_absolute_deviation;\n\
    \n    assert(candidate([1.0, 2.0]) == 0.5);\n    assert(candidate([1.0, 2.0, 3.0,\
    \ 4.0]) == 1.0);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpo45s0kpc.d(13): Error: undefined identifier `mean`, did you mean
    function `main`?

    /tmp/tmpo45s0kpc.d(18): Error: function expected before `()`, not `mean` of type
    `float`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpo45s0kpc.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = mean(numbers);\n    float[] deviations = new float[numbers.length];\n\
    \    foreach(i, n; numbers)\n    {\n        deviations[i] = abs(n - mean);\n \
    \   }\n    return mean(deviations);\n}\nunittest\n{\n    alias candidate = mean_absolute_deviation;\n\
    \n    assert(candidate([1.0, 2.0]) == 0.5);\n    assert(candidate([1.0, 2.0, 3.0,\
    \ 4.0]) == 1.0);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp2iy56arc.d(13): Error: undefined identifier `mean`, did you mean
    function `main`?

    /tmp/tmp2iy56arc.d(19): Error: function expected before `()`, not `mean` of type
    `float`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2iy56arc.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = 0.0;\n    float sum = 0.0;\n    foreach(n; numbers) {\n        sum +=\
    \ n;\n    }\n    mean = sum / numbers.length;\n    float sum_of_deviations = 0.0;\n\
    \    foreach(n; numbers) {\n        sum_of_deviations += abs(n - mean);\n    }\n\
    \    return sum_of_deviations / numbers.length;\n}\nunittest\n{\n    alias candidate\
    \ = mean_absolute_deviation;\n\n    assert(candidate([1.0, 2.0]) == 0.5);\n  \
    \  assert(candidate([1.0, 2.0, 3.0, 4.0]) == 1.0);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpyfn4_ppi.d(31): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283f5]

    ??:? void tmpyfn4_ppi.__unittest_L25_C1() [0x428159]

    ??:? void tmpyfn4_ppi.__modtest() [0x428178]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c3cf]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b262]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4303f5]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x4308a4]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430381]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b239]

    ??:? runModuleUnitTests [0x42c1a5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428844]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = mean(numbers);\n    float[] diffs = new float[numbers.length];\n    foreach(i,\
    \ x; numbers)\n    {\n        diffs[i] = abs(x - mean);\n    }\n    return mean(diffs);\n\
    }\nunittest\n{\n    alias candidate = mean_absolute_deviation;\n\n    assert(candidate([1.0,\
    \ 2.0]) == 0.5);\n    assert(candidate([1.0, 2.0, 3.0, 4.0]) == 1.0);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpdi6zflws.d(13): Error: undefined identifier `mean`, did you mean
    function `main`?

    /tmp/tmpdi6zflws.d(19): Error: function expected before `()`, not `mean` of type
    `float`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdi6zflws.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = 0.0;\n    float sum = 0.0;\n    float sum_abs = 0.0;\n    foreach(n;\
    \ numbers) {\n        sum += n;\n    }\n    mean = sum / numbers.length;\n   \
    \ foreach(n; numbers) {\n        sum_abs += abs(n - mean);\n    }\n    return\
    \ sum_abs / numbers.length;\n}\nunittest\n{\n    alias candidate = mean_absolute_deviation;\n\
    \n    assert(candidate([1.0, 2.0]) == 0.5);\n    assert(candidate([1.0, 2.0, 3.0,\
    \ 4.0]) == 1.0);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\n\
    void main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp6qjuamz_.d(31): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283f5]

    ??:? void tmp6qjuamz_.__unittest_L25_C1() [0x428155]

    ??:? void tmp6qjuamz_.__modtest() [0x428174]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c3cf]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b262]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4303f5]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x4308a4]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430381]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b239]

    ??:? runModuleUnitTests [0x42c1a5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428844]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163140
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = mean(numbers);\n    float[] absolute_deviations = new float[numbers.length];\n\
    \    foreach(i, number; numbers)\n    {\n        absolute_deviations[i] = abs(number\
    \ - mean);\n    }\n    return mean(absolute_deviations);\n}\nunittest\n{\n   \
    \ alias candidate = mean_absolute_deviation;\n\n    assert(candidate([1.0, 2.0])\
    \ == 0.5);\n    assert(candidate([1.0, 2.0, 3.0, 4.0]) == 1.0);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpe1sd_hfn.d(13): Error: undefined identifier `mean`, did you mean
    function `main`?

    /tmp/tmpe1sd_hfn.d(19): Error: function expected before `()`, not `mean` of type
    `float`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpe1sd_hfn.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = mean(numbers);\n    float[] abs_diff = new float[numbers.length];\n \
    \   foreach(i,n; numbers)\n    {\n        abs_diff[i] = abs(n - mean);\n    }\n\
    \    return mean(abs_diff);\n}\n/*\n For a given list of input numbers, calculate\
    \ the Median Absolute Deviation\n    around the median of this dataset.\n    Median\
    \ Absolute Deviation is the median of the absolute difference between\n    each\
    \ element and a centerpoint (median in this case):\n    MAD = median | x - x_median\
    \ |\n        \n*/\nfloat median_absolute_deviation(float[] numbers) \n{\n    float\
    \ median = median(numbers);\n    float[] abs_diff = new float[numbers.length];\n\
    \    foreach(i,n; numbers)\n    {\n        abs_diff[i] = abs(n - median);\n  \
    \  }\n    return median(abs_diff);\n}\n/*\n For a given list of input numbers,\
    \ calculate the Mean Absolute Deviation\n    around the median of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (median in this case):\n    MAD = average | x -\
    \ x_median |\n        \n*/\nfloat mean_absolute_deviation_median(float[] numbers)\
    \ \n{\n    float median = median(numbers);\n    float[] abs_diff = new float[numbers.length];\n\
    \    foreach(i,n; numbers)\n    {\n        abs_diff[i] = abs(n - median);\n  \
    \  }\n    return mean(abs_diff);\n}\n/*\n For a given list of input numbers, calculate\
    \ the Median Absolute Deviation\n    around the mean of this dataset.\n    Median\
    \ Absolute Deviation is the median of the absolute difference between\n    each\
    \ element and a centerpoint (mean in this case):\n    MAD = median | x - x_mean\
    \ |\n        \n*/\nfloat median_absolute_deviation_mean(float[] numbers) \n{\n\
    \    float mean = mean(numbers);\n    float[] abs_diff = new float[numbers.length];\n\
    \    foreach(i,n; numbers)\n\nunittest\n{\n    alias candidate = mean_absolute_deviation;\n\
    \n    assert(candidate([1.0, 2.0]) == 0.5);\n    assert(candidate([1.0, 2.0, 3.0,\
    \ 4.0]) == 1.0);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpb4ntu70v.d(71): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpb4ntu70v.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = 0.0;\n    foreach(n; numbers)\n        mean += n;\n    mean /= numbers.length;\n\
    \    float sum = 0.0;\n    foreach(n; numbers)\n        sum += abs(n - mean);\n\
    \    return sum / numbers.length;\n}\nunittest\n{\n    alias candidate = mean_absolute_deviation;\n\
    \n    assert(candidate([1.0, 2.0]) == 0.5);\n    assert(candidate([1.0, 2.0, 3.0,\
    \ 4.0]) == 1.0);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\n\
    void main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpe6zws45l.d(28): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283e5]

    ??:? void tmpe6zws45l.__unittest_L22_C1() [0x428149]

    ??:? void tmpe6zws45l.__modtest() [0x428168]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c3bf]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b252]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4303e5]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430894]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430371]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b229]

    ??:? runModuleUnitTests [0x42c195]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428834]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = std.algorithm.reduce!\"a + b\"(numbers) / numbers.length;\n    float[]\
    \ deviations = numbers.map!(a => abs(a - mean));\n    return std.algorithm.reduce!\"\
    a + b\"(deviations) / deviations.length;\n}\nunittest\n{\n    alias candidate\
    \ = mean_absolute_deviation;\n\n    assert(candidate([1.0, 2.0]) == 0.5);\n  \
    \  assert(candidate([1.0, 2.0, 3.0, 4.0]) == 1.0);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpel9bnti3.d(13): Error: undefined identifier `algorithm` in package
    `std`

    /tmp/tmpel9bnti3.d(14): Error: no property `map` for type `float[]`

    /tmp/tmpel9bnti3.d(15): Error: undefined identifier `algorithm` in package `std`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpel9bnti3.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163140
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = mean(numbers);\n    float[] abs_diff = new float[numbers.length];\n \
    \   foreach(i, number; numbers) {\n        abs_diff[i] = abs(number - mean);\n\
    \    }\n    return mean(abs_diff);\n}\nunittest\n{\n    alias candidate = mean_absolute_deviation;\n\
    \n    assert(candidate([1.0, 2.0]) == 0.5);\n    assert(candidate([1.0, 2.0, 3.0,\
    \ 4.0]) == 1.0);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpo45s0kpc.d(13): Error: undefined identifier `mean`, did you mean
    function `main`?

    /tmp/tmpo45s0kpc.d(18): Error: function expected before `()`, not `mean` of type
    `float`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpo45s0kpc.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = 0.0;\n    foreach(n; numbers)\n        mean += n;\n    mean /= numbers.length;\n\
    \    float sum = 0.0;\n    foreach(n; numbers)\n        sum += abs(n - mean);\n\
    \    return sum / numbers.length;\n}\nunittest\n{\n    alias candidate = mean_absolute_deviation;\n\
    \n    assert(candidate([1.0, 2.0]) == 0.5);\n    assert(candidate([1.0, 2.0, 3.0,\
    \ 4.0]) == 1.0);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\n\
    void main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpe6zws45l.d(28): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283e5]

    ??:? void tmpe6zws45l.__unittest_L22_C1() [0x428149]

    ??:? void tmpe6zws45l.__modtest() [0x428168]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c3bf]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b252]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4303e5]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430894]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430371]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b229]

    ??:? runModuleUnitTests [0x42c195]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428834]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = mean(numbers);\n    float[] deviations = new float[numbers.length];\n\
    \    foreach(i, n; numbers)\n    {\n        deviations[i] = abs(n - mean);\n \
    \   }\n    return mean(deviations);\n}\nunittest\n{\n    alias candidate = mean_absolute_deviation;\n\
    \n    assert(candidate([1.0, 2.0]) == 0.5);\n    assert(candidate([1.0, 2.0, 3.0,\
    \ 4.0]) == 1.0);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp2iy56arc.d(13): Error: undefined identifier `mean`, did you mean
    function `main`?

    /tmp/tmp2iy56arc.d(19): Error: function expected before `()`, not `mean` of type
    `float`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2iy56arc.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = 0.0;\n    foreach(n; numbers)\n        mean += n;\n    mean /= numbers.length;\n\
    \    float mad = 0.0;\n    foreach(n; numbers)\n        mad += abs(n - mean);\n\
    \    mad /= numbers.length;\n    return mad;\n}\nunittest\n{\n    alias candidate\
    \ = mean_absolute_deviation;\n\n    assert(candidate([1.0, 2.0]) == 0.5);\n  \
    \  assert(candidate([1.0, 2.0, 3.0, 4.0]) == 1.0);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpa6rwc9cw.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283f5]

    ??:? void tmpa6rwc9cw.__unittest_L23_C1() [0x428155]

    ??:? void tmpa6rwc9cw.__modtest() [0x428174]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c3cf]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b262]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4303f5]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x4308a4]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430381]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b239]

    ??:? runModuleUnitTests [0x42c1a5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428844]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = 0.0;\n    float sum = 0.0;\n    float sum_of_abs_diff = 0.0;\n    foreach(n;\
    \ numbers)\n    {\n        sum += n;\n    }\n    mean = sum / numbers.length;\n\
    \    foreach(n; numbers)\n    {\n        sum_of_abs_diff += abs(n - mean);\n \
    \   }\n    return sum_of_abs_diff / numbers.length;\n}\nunittest\n{\n    alias\
    \ candidate = mean_absolute_deviation;\n\n    assert(candidate([1.0, 2.0]) ==\
    \ 0.5);\n    assert(candidate([1.0, 2.0, 3.0, 4.0]) == 1.0);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpn9bjsslk.d(33): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283f5]

    ??:? void tmpn9bjsslk.__unittest_L27_C1() [0x428155]

    ??:? void tmpn9bjsslk.__modtest() [0x428174]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c3cf]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b262]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4303f5]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x4308a4]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430381]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b239]

    ??:? runModuleUnitTests [0x42c1a5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428844]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163140
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = mean(numbers);\n    float[] abs_differences = new float[numbers.length];\n\
    \    foreach(i, number; numbers)\n    {\n        abs_differences[i] = abs(number\
    \ - mean);\n    }\n    return mean(abs_differences);\n}\nunittest\n{\n    alias\
    \ candidate = mean_absolute_deviation;\n\n    assert(candidate([1.0, 2.0]) ==\
    \ 0.5);\n    assert(candidate([1.0, 2.0, 3.0, 4.0]) == 1.0);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp6ydxlnw4.d(13): Error: undefined identifier `mean`, did you mean
    function `main`?

    /tmp/tmp6ydxlnw4.d(19): Error: function expected before `()`, not `mean` of type
    `float`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6ydxlnw4.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = 0.0;\n    foreach(i; numbers)\n        mean += i;\n    mean /= numbers.length;\n\
    \    float sum = 0.0;\n    foreach(i; numbers)\n        sum += abs(i - mean);\n\
    \    return sum / numbers.length;\n}\nunittest\n{\n    alias candidate = mean_absolute_deviation;\n\
    \n    assert(candidate([1.0, 2.0]) == 0.5);\n    assert(candidate([1.0, 2.0, 3.0,\
    \ 4.0]) == 1.0);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\n\
    void main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpnnj4_nil.d(28): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283e5]

    ??:? void tmpnnj4_nil.__unittest_L22_C1() [0x428149]

    ??:? void tmpnnj4_nil.__modtest() [0x428168]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c3bf]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b252]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4303e5]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430894]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430371]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b229]

    ??:? runModuleUnitTests [0x42c195]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428834]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163140
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = mean(numbers);\n    float[] diffs = new float[numbers.length];\n    foreach(i,\
    \ n; numbers)\n    {\n        diffs[i] = abs(n - mean);\n    }\n    return mean(diffs);\n\
    }\nunittest\n{\n    alias candidate = mean_absolute_deviation;\n\n    assert(candidate([1.0,\
    \ 2.0]) == 0.5);\n    assert(candidate([1.0, 2.0, 3.0, 4.0]) == 1.0);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpx6iysdjf.d(13): Error: undefined identifier `mean`, did you mean
    function `main`?

    /tmp/tmpx6iysdjf.d(19): Error: function expected before `()`, not `mean` of type
    `float`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpx6iysdjf.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = mean(numbers);\n    float[] diffs = new float[numbers.length];\n    foreach(i,\
    \ num; numbers)\n    {\n        diffs[i] = abs(num - mean);\n    }\n    return\
    \ mean(diffs);\n}\nunittest\n{\n    alias candidate = mean_absolute_deviation;\n\
    \n    assert(candidate([1.0, 2.0]) == 0.5);\n    assert(candidate([1.0, 2.0, 3.0,\
    \ 4.0]) == 1.0);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpozrt6s6o.d(13): Error: undefined identifier `mean`, did you mean
    function `main`?

    /tmp/tmpozrt6s6o.d(19): Error: function expected before `()`, not `mean` of type
    `float`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpozrt6s6o.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = mean(numbers);\n    float[] deviations = new float[numbers.length];\n\
    \    foreach(i, number; numbers)\n    {\n        deviations[i] = abs(number -\
    \ mean);\n    }\n    return mean(deviations);\n}\nunittest\n{\n    alias candidate\
    \ = mean_absolute_deviation;\n\n    assert(candidate([1.0, 2.0]) == 0.5);\n  \
    \  assert(candidate([1.0, 2.0, 3.0, 4.0]) == 1.0);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpxv93eflp.d(13): Error: undefined identifier `mean`, did you mean
    function `main`?

    /tmp/tmpxv93eflp.d(19): Error: function expected before `()`, not `mean` of type
    `float`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxv93eflp.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = mean(numbers);\n    float[] diffs = new float[numbers.length];\n    foreach(i,\
    \ number; numbers)\n    {\n        diffs[i] = abs(number - mean);\n    }\n   \
    \ return mean(diffs);\n}\nunittest\n{\n    alias candidate = mean_absolute_deviation;\n\
    \n    assert(candidate([1.0, 2.0]) == 0.5);\n    assert(candidate([1.0, 2.0, 3.0,\
    \ 4.0]) == 1.0);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpma3shxh1.d(13): Error: undefined identifier `mean`, did you mean
    function `main`?

    /tmp/tmpma3shxh1.d(19): Error: function expected before `()`, not `mean` of type
    `float`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpma3shxh1.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = 0.0;\n    float sum = 0.0;\n    float sum_of_squares = 0.0;\n    float\
    \ sum_of_abs = 0.0;\n    float mad = 0.0;\n    int n = numbers.length;\n    foreach(float\
    \ x; numbers)\n    {\n        sum += x;\n        sum_of_squares += x * x;\n  \
    \      sum_of_abs += abs(x);\n    }\n    mean = sum / n;\n    // calculate MAD\n\
    \    mad = sum_of_abs / n - mean;\n    return mad;\n}\nunittest\n{\n    alias\
    \ candidate = mean_absolute_deviation;\n\n    assert(candidate([1.0, 2.0]) ==\
    \ 0.5);\n    assert(candidate([1.0, 2.0, 3.0, 4.0]) == 1.0);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpx8yh256j.d(18): Error: cannot implicitly convert expression `numbers.length`
    of type `ulong` to `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpx8yh256j.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163140
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = 0.0;\n    foreach(n; numbers)\n        mean += n;\n    mean /= numbers.length;\n\
    \    float mad = 0.0;\n    foreach(n; numbers)\n        mad += abs(n - mean);\n\
    \    mad /= numbers.length;\n    return mad;\n}\nunittest\n{\n    alias candidate\
    \ = mean_absolute_deviation;\n\n    assert(candidate([1.0, 2.0]) == 0.5);\n  \
    \  assert(candidate([1.0, 2.0, 3.0, 4.0]) == 1.0);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpa6rwc9cw.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283f5]

    ??:? void tmpa6rwc9cw.__unittest_L23_C1() [0x428155]

    ??:? void tmpa6rwc9cw.__modtest() [0x428174]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c3cf]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b262]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4303f5]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x4308a4]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430381]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b239]

    ??:? runModuleUnitTests [0x42c1a5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428844]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = 0.0;\n    float sum = 0.0;\n    float sum_abs = 0.0;\n    float abs_diff\
    \ = 0.0;\n    float mad = 0.0;\n    int n = numbers.length;\n    foreach(i, x;\
    \ numbers)\n    {\n        sum += x;\n    }\n    mean = sum / n;\n    foreach(i,\
    \ x; numbers)\n    {\n        abs_diff = abs(x - mean);\n        sum_abs += abs_diff;\n\
    \    }\n    mad = sum_abs / n;\n    return mad;\n}\nunittest\n{\n    alias candidate\
    \ = mean_absolute_deviation;\n\n    assert(candidate([1.0, 2.0]) == 0.5);\n  \
    \  assert(candidate([1.0, 2.0, 3.0, 4.0]) == 1.0);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp7ks0g4s_.d(18): Error: cannot implicitly convert expression `numbers.length`
    of type `ulong` to `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7ks0g4s_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163140
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = mean(numbers);\n    float[] abs_diff = new float[numbers.length];\n \
    \   foreach(i, number; numbers)\n    {\n        abs_diff[i] = abs(number - mean);\n\
    \    }\n    return mean(abs_diff);\n}\nunittest\n{\n    alias candidate = mean_absolute_deviation;\n\
    \n    assert(candidate([1.0, 2.0]) == 0.5);\n    assert(candidate([1.0, 2.0, 3.0,\
    \ 4.0]) == 1.0);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpws6une7h.d(13): Error: undefined identifier `mean`, did you mean
    function `main`?

    /tmp/tmpws6une7h.d(19): Error: function expected before `()`, not `mean` of type
    `float`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpws6une7h.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = mean(numbers);\n    float[] abs_diff = new float[numbers.length];\n \
    \   foreach(i, number; numbers)\n    {\n        abs_diff[i] = abs(number - mean);\n\
    \    }\n    return mean(abs_diff);\n}\nunittest\n{\n    alias candidate = mean_absolute_deviation;\n\
    \n    assert(candidate([1.0, 2.0]) == 0.5);\n    assert(candidate([1.0, 2.0, 3.0,\
    \ 4.0]) == 1.0);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpws6une7h.d(13): Error: undefined identifier `mean`, did you mean
    function `main`?

    /tmp/tmpws6une7h.d(19): Error: function expected before `()`, not `mean` of type
    `float`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpws6une7h.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = mean(numbers);\n    float[] diffs = new float[numbers.length];\n    foreach(i,\
    \ number; numbers)\n    {\n        diffs[i] = abs(number - mean);\n    }\n   \
    \ return mean(diffs);\n}\nunittest\n{\n    alias candidate = mean_absolute_deviation;\n\
    \n    assert(candidate([1.0, 2.0]) == 0.5);\n    assert(candidate([1.0, 2.0, 3.0,\
    \ 4.0]) == 1.0);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpma3shxh1.d(13): Error: undefined identifier `mean`, did you mean
    function `main`?

    /tmp/tmpma3shxh1.d(19): Error: function expected before `()`, not `mean` of type
    `float`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpma3shxh1.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = mean(numbers);\n    float[] absolute_deviations = new float[numbers.length];\n\
    \    foreach(i, number; numbers) {\n        absolute_deviations[i] = abs(number\
    \ - mean);\n    }\n    return mean(absolute_deviations);\n}\nunittest\n{\n   \
    \ alias candidate = mean_absolute_deviation;\n\n    assert(candidate([1.0, 2.0])\
    \ == 0.5);\n    assert(candidate([1.0, 2.0, 3.0, 4.0]) == 1.0);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpl_bmtrnc.d(13): Error: undefined identifier `mean`, did you mean
    function `main`?

    /tmp/tmpl_bmtrnc.d(18): Error: function expected before `()`, not `mean` of type
    `float`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpl_bmtrnc.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = mean(numbers);\n    float[] deviations = new float[numbers.length];\n\
    \    foreach(i, n; numbers)\n    {\n        deviations[i] = abs(n - mean);\n \
    \   }\n    return mean(deviations);\n}\nunittest\n{\n    alias candidate = mean_absolute_deviation;\n\
    \n    assert(candidate([1.0, 2.0]) == 0.5);\n    assert(candidate([1.0, 2.0, 3.0,\
    \ 4.0]) == 1.0);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp2iy56arc.d(13): Error: undefined identifier `mean`, did you mean
    function `main`?

    /tmp/tmp2iy56arc.d(19): Error: function expected before `()`, not `mean` of type
    `float`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2iy56arc.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = mean(numbers);\n    float[] abs_differences = new float[numbers.length];\n\
    \    foreach(i, number; numbers)\n    {\n        abs_differences[i] = abs(number\
    \ - mean);\n    }\n    return mean(abs_differences);\n}\nunittest\n{\n    alias\
    \ candidate = mean_absolute_deviation;\n\n    assert(candidate([1.0, 2.0]) ==\
    \ 0.5);\n    assert(candidate([1.0, 2.0, 3.0, 4.0]) == 1.0);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp6ydxlnw4.d(13): Error: undefined identifier `mean`, did you mean
    function `main`?

    /tmp/tmp6ydxlnw4.d(19): Error: function expected before `()`, not `mean` of type
    `float`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6ydxlnw4.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = mean(numbers);\n    float[] absolute_differences = new float[numbers.length];\n\
    \    foreach(i, number; numbers)\n    {\n        absolute_differences[i] = abs(number\
    \ - mean);\n    }\n    return mean(absolute_differences);\n}\nunittest\n{\n  \
    \  alias candidate = mean_absolute_deviation;\n\n    assert(candidate([1.0, 2.0])\
    \ == 0.5);\n    assert(candidate([1.0, 2.0, 3.0, 4.0]) == 1.0);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpwg0skvrr.d(13): Error: undefined identifier `mean`, did you mean
    function `main`?

    /tmp/tmpwg0skvrr.d(19): Error: function expected before `()`, not `mean` of type
    `float`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwg0skvrr.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = 0.0;\n    foreach(n; numbers) {\n        mean += n;\n    }\n    mean\
    \ /= numbers.length;\n    float mad = 0.0;\n    foreach(n; numbers) {\n      \
    \  mad += abs(n - mean);\n    }\n    mad /= numbers.length;\n    return mad;\n\
    }\nunittest\n{\n    alias candidate = mean_absolute_deviation;\n\n    assert(candidate([1.0,\
    \ 2.0]) == 0.5);\n    assert(candidate([1.0, 2.0, 3.0, 4.0]) == 1.0);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp4qt2ypcz.d(31): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283f5]

    ??:? void tmp4qt2ypcz.__unittest_L25_C1() [0x428155]

    ??:? void tmp4qt2ypcz.__modtest() [0x428174]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c3cf]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b262]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4303f5]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x4308a4]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430381]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b239]

    ??:? runModuleUnitTests [0x42c1a5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428844]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = 0.0;\n    float sum = 0.0;\n    float sum_of_abs_diff = 0.0;\n    float\
    \ abs_diff = 0.0;\n    float mad = 0.0;\n    float[] abs_diff_list;\n    int i\
    \ = 0;\n    int n = numbers.length;\n    if (n == 0) {\n        return 0.0;\n\
    \    }\n    // Calculate mean\n    foreach (num; numbers) {\n        sum += num;\n\
    \    }\n    mean = sum / n;\n    // Calculate sum of absolute differences\n  \
    \  foreach (num; numbers) {\n        abs_diff = abs(num - mean);\n        sum_of_abs_diff\
    \ += abs_diff;\n    }\n    // Calculate MAD\n    mad = sum_of_abs_diff / n;\n\
    \    return mad;\n}\nunittest\n{\n    alias candidate = mean_absolute_deviation;\n\
    \n    assert(candidate([1.0, 2.0]) == 0.5);\n    assert(candidate([1.0, 2.0, 3.0,\
    \ 4.0]) == 1.0);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1stzgqq8.d(20): Error: cannot implicitly convert expression `numbers.length`
    of type `ulong` to `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1stzgqq8.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163140
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = 0.0;\n    foreach(n; numbers)\n        mean += n;\n    mean /= numbers.length;\n\
    \    float sum = 0.0;\n    foreach(n; numbers)\n        sum += abs(n - mean);\n\
    \    return sum / numbers.length;\n}\nunittest\n{\n    alias candidate = mean_absolute_deviation;\n\
    \n    assert(candidate([1.0, 2.0]) == 0.5);\n    assert(candidate([1.0, 2.0, 3.0,\
    \ 4.0]) == 1.0);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\n\
    void main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpe6zws45l.d(28): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283e5]

    ??:? void tmpe6zws45l.__unittest_L22_C1() [0x428149]

    ??:? void tmpe6zws45l.__modtest() [0x428168]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c3bf]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b252]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4303e5]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430894]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430371]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b229]

    ??:? runModuleUnitTests [0x42c195]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428834]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = mean(numbers);\n    float[] diffs = new float[numbers.length];\n    foreach(i,\
    \ x; numbers)\n    {\n        diffs[i] = abs(x - mean);\n    }\n    return mean(diffs);\n\
    }\nunittest\n{\n    alias candidate = mean_absolute_deviation;\n\n    assert(candidate([1.0,\
    \ 2.0]) == 0.5);\n    assert(candidate([1.0, 2.0, 3.0, 4.0]) == 1.0);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpdi6zflws.d(13): Error: undefined identifier `mean`, did you mean
    function `main`?

    /tmp/tmpdi6zflws.d(19): Error: function expected before `()`, not `mean` of type
    `float`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdi6zflws.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = 0.0;\n    foreach(n; numbers)\n        mean += n;\n    mean /= numbers.length;\n\
    \    float mad = 0.0;\n    foreach(n; numbers)\n        mad += abs(n - mean);\n\
    \    mad /= numbers.length;\n    return mad;\n}\nunittest\n{\n    alias candidate\
    \ = mean_absolute_deviation;\n\n    assert(candidate([1.0, 2.0]) == 0.5);\n  \
    \  assert(candidate([1.0, 2.0, 3.0, 4.0]) == 1.0);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpa6rwc9cw.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283f5]

    ??:? void tmpa6rwc9cw.__unittest_L23_C1() [0x428155]

    ??:? void tmpa6rwc9cw.__modtest() [0x428174]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c3cf]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b262]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4303f5]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x4308a4]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430381]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b239]

    ??:? runModuleUnitTests [0x42c1a5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428844]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = 0.0;\n    foreach(n; numbers)\n        mean += n;\n    mean /= numbers.length;\n\
    \    float sum = 0.0;\n    foreach(n; numbers)\n        sum += abs(n - mean);\n\
    \    return sum / numbers.length;\n}\nunittest\n{\n    alias candidate = mean_absolute_deviation;\n\
    \n    assert(candidate([1.0, 2.0]) == 0.5);\n    assert(candidate([1.0, 2.0, 3.0,\
    \ 4.0]) == 1.0);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\n\
    void main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpe6zws45l.d(28): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283e5]

    ??:? void tmpe6zws45l.__unittest_L22_C1() [0x428149]

    ??:? void tmpe6zws45l.__modtest() [0x428168]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c3bf]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b252]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4303e5]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430894]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430371]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b229]

    ??:? runModuleUnitTests [0x42c195]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428834]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = 0.0;\n    float sum = 0.0;\n    foreach(n; numbers)\n    {\n        sum\
    \ += n;\n    }\n    mean = sum / numbers.length;\n    sum = 0.0;\n    foreach(n;\
    \ numbers)\n    {\n        sum += abs(n - mean);\n    }\n    return sum / numbers.length;\n\
    }\nunittest\n{\n    alias candidate = mean_absolute_deviation;\n\n    assert(candidate([1.0,\
    \ 2.0]) == 0.5);\n    assert(candidate([1.0, 2.0, 3.0, 4.0]) == 1.0);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp495aivho.d(33): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283f5]

    ??:? void tmp495aivho.__unittest_L27_C1() [0x428159]

    ??:? void tmp495aivho.__modtest() [0x428178]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c3cf]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b262]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4303f5]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x4308a4]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430381]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b239]

    ??:? runModuleUnitTests [0x42c1a5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428844]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163140
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = 0.0;\n    foreach(n; numbers)\n        mean += n;\n    mean /= numbers.length;\n\
    \    float sum = 0.0;\n    foreach(n; numbers)\n        sum += abs(n - mean);\n\
    \    return sum / numbers.length;\n}\nunittest\n{\n    alias candidate = mean_absolute_deviation;\n\
    \n    assert(candidate([1.0, 2.0]) == 0.5);\n    assert(candidate([1.0, 2.0, 3.0,\
    \ 4.0]) == 1.0);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\n\
    void main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpe6zws45l.d(28): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283e5]

    ??:? void tmpe6zws45l.__unittest_L22_C1() [0x428149]

    ??:? void tmpe6zws45l.__modtest() [0x428168]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c3bf]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b252]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4303e5]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430894]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430371]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b229]

    ??:? runModuleUnitTests [0x42c195]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428834]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = 0.0;\n    float sum = 0.0;\n    foreach(n; numbers) {\n        sum +=\
    \ n;\n    }\n    mean = sum / numbers.length;\n    float sum_of_abs_diff = 0.0;\n\
    \    foreach(n; numbers) {\n        sum_of_abs_diff += abs(n - mean);\n    }\n\
    \    return sum_of_abs_diff / numbers.length;\n}\nunittest\n{\n    alias candidate\
    \ = mean_absolute_deviation;\n\n    assert(candidate([1.0, 2.0]) == 0.5);\n  \
    \  assert(candidate([1.0, 2.0, 3.0, 4.0]) == 1.0);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp61x6h5tj.d(31): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283f5]

    ??:? void tmp61x6h5tj.__unittest_L25_C1() [0x428159]

    ??:? void tmp61x6h5tj.__modtest() [0x428178]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c3cf]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b262]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4303f5]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x4308a4]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430381]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b239]

    ??:? runModuleUnitTests [0x42c1a5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428844]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163140
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = mean(numbers);\n    float[] deviations = new float[numbers.length];\n\
    \    foreach(i, number; numbers)\n    {\n        deviations[i] = abs(number -\
    \ mean);\n    }\n    return mean(deviations);\n}\nunittest\n{\n    alias candidate\
    \ = mean_absolute_deviation;\n\n    assert(candidate([1.0, 2.0]) == 0.5);\n  \
    \  assert(candidate([1.0, 2.0, 3.0, 4.0]) == 1.0);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpxv93eflp.d(13): Error: undefined identifier `mean`, did you mean
    function `main`?

    /tmp/tmpxv93eflp.d(19): Error: function expected before `()`, not `mean` of type
    `float`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxv93eflp.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = 0.0;\n    float sum = 0.0;\n    foreach(n; numbers)\n    {\n        sum\
    \ += n;\n    }\n    mean = sum / numbers.length;\n    float sum_of_deviations\
    \ = 0.0;\n    foreach(n; numbers)\n    {\n        sum_of_deviations += abs(n -\
    \ mean);\n    }\n    return sum_of_deviations / numbers.length;\n}\nunittest\n\
    {\n    alias candidate = mean_absolute_deviation;\n\n    assert(candidate([1.0,\
    \ 2.0]) == 0.5);\n    assert(candidate([1.0, 2.0, 3.0, 4.0]) == 1.0);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpp9fme6e5.d(33): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283f5]

    ??:? void tmpp9fme6e5.__unittest_L27_C1() [0x428159]

    ??:? void tmpp9fme6e5.__modtest() [0x428178]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c3cf]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b262]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4303f5]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x4308a4]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430381]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b239]

    ??:? runModuleUnitTests [0x42c1a5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428844]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = 0.0;\n    foreach(n; numbers)\n        mean += n;\n    mean /= numbers.length;\n\
    \    float mad = 0.0;\n    foreach(n; numbers)\n        mad += abs(n - mean);\n\
    \    mad /= numbers.length;\n    return mad;\n}\nunittest\n{\n    alias candidate\
    \ = mean_absolute_deviation;\n\n    assert(candidate([1.0, 2.0]) == 0.5);\n  \
    \  assert(candidate([1.0, 2.0, 3.0, 4.0]) == 1.0);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpa6rwc9cw.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283f5]

    ??:? void tmpa6rwc9cw.__unittest_L23_C1() [0x428155]

    ??:? void tmpa6rwc9cw.__modtest() [0x428174]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c3cf]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b262]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4303f5]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x4308a4]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430381]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b239]

    ??:? runModuleUnitTests [0x42c1a5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428844]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = mean(numbers);\n    float[] deviations = new float[numbers.length];\n\
    \    foreach(i, n; numbers)\n    {\n        deviations[i] = abs(n - mean);\n \
    \   }\n    return mean(deviations);\n}\nunittest\n{\n    alias candidate = mean_absolute_deviation;\n\
    \n    assert(candidate([1.0, 2.0]) == 0.5);\n    assert(candidate([1.0, 2.0, 3.0,\
    \ 4.0]) == 1.0);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp2iy56arc.d(13): Error: undefined identifier `mean`, did you mean
    function `main`?

    /tmp/tmp2iy56arc.d(19): Error: function expected before `()`, not `mean` of type
    `float`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2iy56arc.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = 0.0;\n    foreach(n; numbers)\n        mean += n;\n    mean /= numbers.length;\n\
    \    float mad = 0.0;\n    foreach(n; numbers)\n        mad += abs(n - mean);\n\
    \    mad /= numbers.length;\n    return mad;\n}\n/*\n For a given list of input\
    \ numbers, calculate Median Absolute Deviation\n    around the median of this\
    \ dataset.\n    Median Absolute Deviation is the median of the absolute difference\
    \ between\n    each element and a centerpoint (median in this case):\n    MAD\
    \ = median | x - x_median |\n*/\nfloat median_absolute_deviation(float[] numbers)\
    \ \n{\n    float[] deviations = new float[numbers.length];\n    float median =\
    \ numbers[numbers.length / 2];\n    foreach(i, n; numbers)\n        deviations[i]\
    \ = abs(n - median);\n    return deviations[deviations.length / 2];\n}\n/*\n For\
    \ a given list of input numbers, calculate Mean Absolute Deviation\n    around\
    \ the mean of this dataset.\n    Mean Absolute Deviation is the average absolute\
    \ difference between each\n    element and a centerpoint (mean in this case):\n\
    \    MAD = average | x - x_mean |\n        \n*/\nfloat mean_absolute_deviation(float[]\
    \ numbers) \n{\n    float mean = 0.0;\n    foreach(n; numbers)\n        mean +=\
    \ n;\n    mean /= numbers.length;\n    float mad = 0.0;\n    foreach(n; numbers)\n\
    \        mad += abs(n - mean);\n    mad /= numbers.length;\n    return mad;\n\
    }\n/*\n For a given list of input numbers, calculate Median Absolute Deviation\n\
    \    around the median of this dataset.\n    Median Absolute Deviation is the\
    \ median of the absolute difference between\n    each element and a centerpoint\
    \ (median in this case):\n    MAD = median | x - x_median |\n*/\nfloat median_absolute_deviation(float[]\
    \ numbers) \n{\n    float[] deviations = new float[numbers.length];\n    float\
    \ median = numbers[numbers.length / 2];\n    foreach(i, n;\nunittest\n{\n    alias\
    \ candidate = mean_absolute_deviation;\n\n    assert(candidate([1.0, 2.0]) ==\
    \ 0.5);\n    assert(candidate([1.0, 2.0, 3.0, 4.0]) == 1.0);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp48dw4bpx.d(70): Error: expression expected, not `unittest`

    /tmp/tmp48dw4bpx.d(71): Error: found `{` when expecting `)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp48dw4bpx.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163140
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = mean(numbers);\n    float[] diffs = new float[numbers.length];\n    foreach(i,\
    \ number; numbers)\n    {\n        diffs[i] = abs(number - mean);\n    }\n   \
    \ return mean(diffs);\n}\nunittest\n{\n    alias candidate = mean_absolute_deviation;\n\
    \n    assert(candidate([1.0, 2.0]) == 0.5);\n    assert(candidate([1.0, 2.0, 3.0,\
    \ 4.0]) == 1.0);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpma3shxh1.d(13): Error: undefined identifier `mean`, did you mean
    function `main`?

    /tmp/tmpma3shxh1.d(19): Error: function expected before `()`, not `mean` of type
    `float`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpma3shxh1.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = mean(numbers);\n    float[] differences = new float[numbers.length];\n\
    \    foreach (i, number; numbers) \n    {\n        differences[i] = abs(number\
    \ - mean);\n    }\n    return mean(differences);\n}\nunittest\n{\n    alias candidate\
    \ = mean_absolute_deviation;\n\n    assert(candidate([1.0, 2.0]) == 0.5);\n  \
    \  assert(candidate([1.0, 2.0, 3.0, 4.0]) == 1.0);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpjx4nb1fx.d(13): Error: undefined identifier `mean`, did you mean
    function `main`?

    /tmp/tmpjx4nb1fx.d(19): Error: function expected before `()`, not `mean` of type
    `float`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjx4nb1fx.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163140
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = mean(numbers);\n    float[] diffs = new float[numbers.length];\n    foreach(i,\
    \ n; numbers)\n    {\n        diffs[i] = abs(n - mean);\n    }\n    return mean(diffs);\n\
    }\nunittest\n{\n    alias candidate = mean_absolute_deviation;\n\n    assert(candidate([1.0,\
    \ 2.0]) == 0.5);\n    assert(candidate([1.0, 2.0, 3.0, 4.0]) == 1.0);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpx6iysdjf.d(13): Error: undefined identifier `mean`, did you mean
    function `main`?

    /tmp/tmpx6iysdjf.d(19): Error: function expected before `()`, not `mean` of type
    `float`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpx6iysdjf.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = mean(numbers);\n    float[] diffs = new float[numbers.length];\n    foreach(i,\
    \ x; numbers) {\n        diffs[i] = abs(x - mean);\n    }\n    return mean(diffs);\n\
    }\nunittest\n{\n    alias candidate = mean_absolute_deviation;\n\n    assert(candidate([1.0,\
    \ 2.0]) == 0.5);\n    assert(candidate([1.0, 2.0, 3.0, 4.0]) == 1.0);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpozmcv_2b.d(13): Error: undefined identifier `mean`, did you mean
    function `main`?

    /tmp/tmpozmcv_2b.d(18): Error: function expected before `()`, not `mean` of type
    `float`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpozmcv_2b.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163140
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = mean(numbers);\n    float[] abs_diff = new float[numbers.length];\n \
    \   foreach(i, v; numbers)\n    {\n        abs_diff[i] = abs(v - mean);\n    }\n\
    \    return mean(abs_diff);\n}\nunittest\n{\n    alias candidate = mean_absolute_deviation;\n\
    \n    assert(candidate([1.0, 2.0]) == 0.5);\n    assert(candidate([1.0, 2.0, 3.0,\
    \ 4.0]) == 1.0);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp6cp69b5p.d(13): Error: undefined identifier `mean`, did you mean
    function `main`?

    /tmp/tmp6cp69b5p.d(19): Error: function expected before `()`, not `mean` of type
    `float`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6cp69b5p.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163140
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = 0.0;\n    float sum = 0.0;\n    foreach(n; numbers)\n    {\n        sum\
    \ += n;\n    }\n    mean = sum / numbers.length;\n    float sum_of_abs_deviations\
    \ = 0.0;\n    foreach(n; numbers)\n    {\n        sum_of_abs_deviations += abs(n\
    \ - mean);\n    }\n    return sum_of_abs_deviations / numbers.length;\n}\n/*\n\
    \ For a given list of input numbers, calculate Median Absolute Deviation\n   \
    \ around the median of this dataset.\n    Median Absolute Deviation is the median\
    \ of the absolute difference between each\n    element and a centerpoint (median\
    \ in this case):\n    MAD = median | x - x_median |\n        \n*/\nfloat median_absolute_deviation(float[]\
    \ numbers) \n{\n    float[] abs_deviations = new float[numbers.length];\n    float\
    \ median = 0.0;\n    float sum = 0.0;\n    foreach(n; numbers)\n    {\n      \
    \  sum += n;\n    }\n    median = sum / numbers.length;\n    int i = 0;\n    foreach(n;\
    \ numbers)\n    {\n        abs_deviations[i] = abs(n - median);\n        i++;\n\
    \    }\n    return median(abs_deviations);\n}\n/*\n For a given list of input\
    \ numbers, calculate the mean of the absolute\n    difference between each element\
    \ and a centerpoint (median in this case):\n    MAD = average | x - x_median |\n\
    \        \n*/\nfloat mean_absolute_deviation_from_median(float[] numbers) \n{\n\
    \    float[] abs_deviations = new float[numbers.length];\n    float median = 0.0;\n\
    \    float sum = 0.0;\n    foreach(n; numbers)\n    {\n        sum += n;\n   \
    \ }\n    median = sum / numbers.length;\n    int i = 0;\n    foreach(n; numbers)\n\
    \    {\n        abs_deviations[i] = abs(n - median);\n        i++;\n    }\n  \
    \  float sum_of_abs\nunittest\n{\n    alias candidate = mean_absolute_deviation;\n\
    \n    assert(candidate([1.0, 2.0]) == 0.5);\n    assert(candidate([1.0, 2.0, 3.0,\
    \ 4.0]) == 1.0);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpmjhhbsxi.d(76): Error: semicolon expected, not `unittest`

    /tmp/tmpmjhhbsxi.d(76): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmjhhbsxi.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163140
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = 0.0;\n    float sum = 0.0;\n    foreach(n; numbers)\n    {\n        sum\
    \ += n;\n    }\n    mean = sum / numbers.length;\n    float sum_of_deviations\
    \ = 0.0;\n    foreach(n; numbers)\n    {\n        sum_of_deviations += abs(n -\
    \ mean);\n    }\n    return sum_of_deviations / numbers.length;\n}\nunittest\n\
    {\n    alias candidate = mean_absolute_deviation;\n\n    assert(candidate([1.0,\
    \ 2.0]) == 0.5);\n    assert(candidate([1.0, 2.0, 3.0, 4.0]) == 1.0);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpp9fme6e5.d(33): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283f5]

    ??:? void tmpp9fme6e5.__unittest_L27_C1() [0x428159]

    ??:? void tmpp9fme6e5.__modtest() [0x428178]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c3cf]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b262]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4303f5]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x4308a4]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430381]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b239]

    ??:? runModuleUnitTests [0x42c1a5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428844]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = 0.0;\n    float sum = 0.0;\n    float sum_abs = 0.0;\n    float abs_diff\
    \ = 0.0;\n    float mad = 0.0;\n    float[] abs_diff_list;\n    float[] abs_diff_list_sorted;\n\
    \    float[] abs_diff_list_sorted_truncated;\n    float[] abs_diff_list_sorted_truncated_sorted;\n\
    \    float[] abs_diff_list_sorted_truncated_sorted_truncated;\n    float[] abs_diff_list_sorted_truncated_sorted_truncated_sorted;\n\
    \    float[] abs_diff_list_sorted_truncated_sorted_truncated_sorted_truncated;\n\
    \    float[] abs_diff_list_sorted_truncated_sorted_truncated_sorted_truncated_sorted;\n\
    \    float[] abs_diff_list_sorted_truncated_sorted_truncated_sorted_truncated_sorted_truncated;\n\
    \    float[] abs_diff_list_sorted_truncated_sorted_truncated_sorted_truncated_sorted_truncated_sorted;\n\
    \    float[] abs_diff_list_sorted_truncated_sorted_truncated_sorted_truncated_sorted_truncated_sorted_truncated;\n\
    \    float[] abs_diff_list_sorted_truncated_sorted_truncated_sorted_truncated_sorted_truncated_sorted_truncated_sorted;\n\
    \    float[] abs_diff_list_sorted_truncated_sorted_truncated_sorted_truncated_sorted_truncated_sorted_truncated_sorted_truncated;\n\
    \    float[] abs_diff_list_sorted_truncated_sorted_truncated_sorted_truncated_sorted_truncated_sorted_truncated_sorted_truncated_sorted;\n\
    \    float[] abs_\nunittest\n{\n    alias candidate = mean_absolute_deviation;\n\
    \n    assert(candidate([1.0, 2.0]) == 0.5);\n    assert(candidate([1.0, 2.0, 3.0,\
    \ 4.0]) == 1.0);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp76rskmbv.d(33): Error: semicolon expected, not `unittest`

    /tmp/tmp76rskmbv.d(33): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp76rskmbv.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163140
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = mean(numbers);\n    float[] deviations = new float[numbers.length];\n\
    \    foreach(i, number; numbers)\n    {\n        deviations[i] = abs(number -\
    \ mean);\n    }\n    return mean(deviations);\n}\nunittest\n{\n    alias candidate\
    \ = mean_absolute_deviation;\n\n    assert(candidate([1.0, 2.0]) == 0.5);\n  \
    \  assert(candidate([1.0, 2.0, 3.0, 4.0]) == 1.0);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpxv93eflp.d(13): Error: undefined identifier `mean`, did you mean
    function `main`?

    /tmp/tmpxv93eflp.d(19): Error: function expected before `()`, not `mean` of type
    `float`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxv93eflp.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = mean(numbers);\n    float[] diffs = new float[numbers.length];\n    foreach(i,\
    \ number; numbers)\n    {\n        diffs[i] = abs(number - mean);\n    }\n   \
    \ return mean(diffs);\n}\nunittest\n{\n    alias candidate = mean_absolute_deviation;\n\
    \n    assert(candidate([1.0, 2.0]) == 0.5);\n    assert(candidate([1.0, 2.0, 3.0,\
    \ 4.0]) == 1.0);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpma3shxh1.d(13): Error: undefined identifier `mean`, did you mean
    function `main`?

    /tmp/tmpma3shxh1.d(19): Error: function expected before `()`, not `mean` of type
    `float`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpma3shxh1.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = mean(numbers);\n    float[] absolute_deviations = new float[numbers.length];\n\
    \    foreach(i, number; numbers)\n    {\n        absolute_deviations[i] = abs(number\
    \ - mean);\n    }\n    return mean(absolute_deviations);\n}\nunittest\n{\n   \
    \ alias candidate = mean_absolute_deviation;\n\n    assert(candidate([1.0, 2.0])\
    \ == 0.5);\n    assert(candidate([1.0, 2.0, 3.0, 4.0]) == 1.0);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpe1sd_hfn.d(13): Error: undefined identifier `mean`, did you mean
    function `main`?

    /tmp/tmpe1sd_hfn.d(19): Error: function expected before `()`, not `mean` of type
    `float`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpe1sd_hfn.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = mean(numbers);\n    float[] abs_diff = new float[numbers.length];\n \
    \   foreach(i, val; numbers)\n    {\n        abs_diff[i] = abs(val - mean);\n\
    \    }\n    return mean(abs_diff);\n}\nunittest\n{\n    alias candidate = mean_absolute_deviation;\n\
    \n    assert(candidate([1.0, 2.0]) == 0.5);\n    assert(candidate([1.0, 2.0, 3.0,\
    \ 4.0]) == 1.0);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpi4ppd9w1.d(13): Error: undefined identifier `mean`, did you mean
    function `main`?

    /tmp/tmpi4ppd9w1.d(19): Error: function expected before `()`, not `mean` of type
    `float`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpi4ppd9w1.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163140
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = 0.0;\n    float sum = 0.0;\n    foreach(n; numbers)\n    {\n        sum\
    \ += n;\n    }\n    mean = sum / numbers.length;\n    float sum_of_deviations\
    \ = 0.0;\n    foreach(n; numbers)\n    {\n        sum_of_deviations += abs(n -\
    \ mean);\n    }\n    return sum_of_deviations / numbers.length;\n}\nunittest\n\
    {\n    alias candidate = mean_absolute_deviation;\n\n    assert(candidate([1.0,\
    \ 2.0]) == 0.5);\n    assert(candidate([1.0, 2.0, 3.0, 4.0]) == 1.0);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpp9fme6e5.d(33): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283f5]

    ??:? void tmpp9fme6e5.__unittest_L27_C1() [0x428159]

    ??:? void tmpp9fme6e5.__modtest() [0x428178]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c3cf]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b262]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4303f5]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x4308a4]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430381]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b239]

    ??:? runModuleUnitTests [0x42c1a5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428844]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = mean(numbers);\n    float[] deviations = new float[numbers.length];\n\
    \    foreach(i, number; numbers)\n    {\n        deviations[i] = abs(number -\
    \ mean);\n    }\n    return mean(deviations);\n}\nunittest\n{\n    alias candidate\
    \ = mean_absolute_deviation;\n\n    assert(candidate([1.0, 2.0]) == 0.5);\n  \
    \  assert(candidate([1.0, 2.0, 3.0, 4.0]) == 1.0);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpxv93eflp.d(13): Error: undefined identifier `mean`, did you mean
    function `main`?

    /tmp/tmpxv93eflp.d(19): Error: function expected before `()`, not `mean` of type
    `float`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxv93eflp.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = 0.0;\n    float sum = 0.0;\n    foreach(n; numbers)\n    {\n        sum\
    \ += n;\n    }\n    mean = sum / numbers.length;\n    float sum_of_deviations\
    \ = 0.0;\n    foreach(n; numbers)\n    {\n        sum_of_deviations += abs(n -\
    \ mean);\n    }\n    return sum_of_deviations / numbers.length;\n}\nunittest\n\
    {\n    alias candidate = mean_absolute_deviation;\n\n    assert(candidate([1.0,\
    \ 2.0]) == 0.5);\n    assert(candidate([1.0, 2.0, 3.0, 4.0]) == 1.0);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpp9fme6e5.d(33): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283f5]

    ??:? void tmpp9fme6e5.__unittest_L27_C1() [0x428159]

    ??:? void tmpp9fme6e5.__modtest() [0x428178]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c3cf]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b262]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4303f5]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x4308a4]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430381]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b239]

    ??:? runModuleUnitTests [0x42c1a5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428844]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = mean(numbers);\n    float[] deviations = new float[numbers.length];\n\
    \    foreach(i, number; numbers)\n    {\n        deviations[i] = abs(number -\
    \ mean);\n    }\n    return mean(deviations);\n}\nunittest\n{\n    alias candidate\
    \ = mean_absolute_deviation;\n\n    assert(candidate([1.0, 2.0]) == 0.5);\n  \
    \  assert(candidate([1.0, 2.0, 3.0, 4.0]) == 1.0);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpxv93eflp.d(13): Error: undefined identifier `mean`, did you mean
    function `main`?

    /tmp/tmpxv93eflp.d(19): Error: function expected before `()`, not `mean` of type
    `float`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxv93eflp.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = mean(numbers);\n    float[] deviations = new float[numbers.length];\n\
    \    foreach(i, v; numbers)\n    {\n        deviations[i] = abs(v - mean);\n \
    \   }\n    return mean(deviations);\n}\nunittest\n{\n    alias candidate = mean_absolute_deviation;\n\
    \n    assert(candidate([1.0, 2.0]) == 0.5);\n    assert(candidate([1.0, 2.0, 3.0,\
    \ 4.0]) == 1.0);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpt0k9bhc2.d(13): Error: undefined identifier `mean`, did you mean
    function `main`?

    /tmp/tmpt0k9bhc2.d(19): Error: function expected before `()`, not `mean` of type
    `float`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpt0k9bhc2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163140
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = 0.0;\n    foreach(n; numbers)\n        mean += n;\n    mean /= numbers.length;\n\
    \    float mad = 0.0;\n    foreach(n; numbers)\n        mad += abs(n - mean);\n\
    \    mad /= numbers.length;\n    return mad;\n}\nunittest\n{\n    alias candidate\
    \ = mean_absolute_deviation;\n\n    assert(candidate([1.0, 2.0]) == 0.5);\n  \
    \  assert(candidate([1.0, 2.0, 3.0, 4.0]) == 1.0);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpa6rwc9cw.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283f5]

    ??:? void tmpa6rwc9cw.__unittest_L23_C1() [0x428155]

    ??:? void tmpa6rwc9cw.__modtest() [0x428174]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c3cf]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b262]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4303f5]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x4308a4]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430381]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b239]

    ??:? runModuleUnitTests [0x42c1a5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428844]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = 0.0;\n    foreach(n; numbers)\n        mean += n;\n    mean /= numbers.length;\n\
    \    float mad = 0.0;\n    foreach(n; numbers)\n        mad += abs(n - mean);\n\
    \    mad /= numbers.length;\n    return mad;\n}\nunittest\n{\n    alias candidate\
    \ = mean_absolute_deviation;\n\n    assert(candidate([1.0, 2.0]) == 0.5);\n  \
    \  assert(candidate([1.0, 2.0, 3.0, 4.0]) == 1.0);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpa6rwc9cw.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283f5]

    ??:? void tmpa6rwc9cw.__unittest_L23_C1() [0x428155]

    ??:? void tmpa6rwc9cw.__modtest() [0x428174]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c3cf]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b262]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4303f5]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x4308a4]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430381]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b239]

    ??:? runModuleUnitTests [0x42c1a5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428844]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = mean(numbers);\n    float[] deviations = new float[numbers.length];\n\
    \    foreach(i, x; numbers)\n    {\n        deviations[i] = abs(x - mean);\n \
    \   }\n    return mean(deviations);\n}\nunittest\n{\n    alias candidate = mean_absolute_deviation;\n\
    \n    assert(candidate([1.0, 2.0]) == 0.5);\n    assert(candidate([1.0, 2.0, 3.0,\
    \ 4.0]) == 1.0);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4swvzkn2.d(13): Error: undefined identifier `mean`, did you mean
    function `main`?

    /tmp/tmp4swvzkn2.d(19): Error: function expected before `()`, not `mean` of type
    `float`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4swvzkn2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163140
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = mean(numbers);\n    float[] abs_diff = new float[numbers.length];\n \
    \   foreach(i, number; numbers)\n    {\n        abs_diff[i] = abs(number - mean);\n\
    \    }\n    return mean(abs_diff);\n}\nunittest\n{\n    alias candidate = mean_absolute_deviation;\n\
    \n    assert(candidate([1.0, 2.0]) == 0.5);\n    assert(candidate([1.0, 2.0, 3.0,\
    \ 4.0]) == 1.0);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpws6une7h.d(13): Error: undefined identifier `mean`, did you mean
    function `main`?

    /tmp/tmpws6une7h.d(19): Error: function expected before `()`, not `mean` of type
    `float`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpws6une7h.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = mean(numbers);\n    float[] differences = numbers.map!(a => abs(a - mean))();\n\
    \    return mean(differences);\n}\nunittest\n{\n    alias candidate = mean_absolute_deviation;\n\
    \n    assert(candidate([1.0, 2.0]) == 0.5);\n    assert(candidate([1.0, 2.0, 3.0,\
    \ 4.0]) == 1.0);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpyrmtfqun.d(13): Error: undefined identifier `mean`, did you mean
    function `main`?

    /tmp/tmpyrmtfqun.d(14): Error: no property `map` for type `float[]`

    /tmp/tmpyrmtfqun.d(15): Error: function expected before `()`, not `mean` of type
    `float`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyrmtfqun.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163140
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = 0.0;\n    foreach(n; numbers)\n        mean += n;\n    mean /= numbers.length;\n\
    \    float mad = 0.0;\n    foreach(n; numbers)\n        mad += abs(n - mean);\n\
    \    mad /= numbers.length;\n    return mad;\n}\nunittest\n{\n    alias candidate\
    \ = mean_absolute_deviation;\n\n    assert(candidate([1.0, 2.0]) == 0.5);\n  \
    \  assert(candidate([1.0, 2.0, 3.0, 4.0]) == 1.0);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpa6rwc9cw.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283f5]

    ??:? void tmpa6rwc9cw.__unittest_L23_C1() [0x428155]

    ??:? void tmpa6rwc9cw.__modtest() [0x428174]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c3cf]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b262]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4303f5]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x4308a4]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430381]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b239]

    ??:? runModuleUnitTests [0x42c1a5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428844]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = mean(numbers);\n    float[] deviations = new float[numbers.length];\n\
    \    foreach(i, number; numbers) {\n        deviations[i] = abs(number - mean);\n\
    \    }\n    return mean(deviations);\n}\nunittest\n{\n    alias candidate = mean_absolute_deviation;\n\
    \n    assert(candidate([1.0, 2.0]) == 0.5);\n    assert(candidate([1.0, 2.0, 3.0,\
    \ 4.0]) == 1.0);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpgtyohsve.d(13): Error: undefined identifier `mean`, did you mean
    function `main`?

    /tmp/tmpgtyohsve.d(18): Error: function expected before `()`, not `mean` of type
    `float`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgtyohsve.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = mean(numbers);\n    float[] abs_diff = new float[numbers.length];\n \
    \   foreach(i, x; numbers)\n    {\n        abs_diff[i] = abs(x - mean);\n    }\n\
    \    return mean(abs_diff);\n}\nunittest\n{\n    alias candidate = mean_absolute_deviation;\n\
    \n    assert(candidate([1.0, 2.0]) == 0.5);\n    assert(candidate([1.0, 2.0, 3.0,\
    \ 4.0]) == 1.0);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp3gifibad.d(13): Error: undefined identifier `mean`, did you mean
    function `main`?

    /tmp/tmp3gifibad.d(19): Error: function expected before `()`, not `mean` of type
    `float`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3gifibad.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = 0.0;\n    foreach(n; numbers)\n        mean += n;\n    mean /= numbers.length;\n\
    \    float sum = 0.0;\n    foreach(n; numbers)\n        sum += abs(n - mean);\n\
    \    return sum / numbers.length;\n}\n/*\n For a given list of input numbers,\
    \ calculate Median Absolute Deviation\n    around the median of this dataset.\n\
    \    Median Absolute Deviation is the median of the absolute difference between\n\
    \    each element and a centerpoint (median in this case):\n    MAD = median |\
    \ x - x_median |\n        \n*/\nfloat median_absolute_deviation(float[] numbers)\
    \ \n{\n    float[] diffs = new float[numbers.length];\n    float median = median(numbers);\n\
    \    foreach(n; numbers)\n        diffs ~= abs(n - median);\n    return median(diffs);\n\
    }\n/*\n For a given list of input numbers, calculate the median.\n    If the list\
    \ is even-length, the average of the two middle elements is\n    returned.\n*/\n\
    float median(float[] numbers) \n{\n    float[] sorted = numbers[];\n    sort(sorted);\n\
    \    if(sorted.length % 2 == 0)\n        return (sorted[sorted.length / 2] + sorted[sorted.length\
    \ / 2 - 1]) / 2;\n    else\n        return sorted[sorted.length / 2];\n}\n/*\n\
    \ For a given list of input numbers, calculate the mean.\n*/\nfloat mean(float[]\
    \ numbers) \n{\n    float sum = 0.0;\n    foreach(n; numbers)\n        sum +=\
    \ n;\n    return sum / numbers.length;\n}\n/*\n For a given list of input numbers,\
    \ calculate the standard deviation.\n*/\nfloat standard_deviation(float[] numbers)\
    \ \n{\n    float mean = 0.0;\n    foreach(n; numbers)\n        mean += n;\n  \
    \  mean /= numbers.length;\n    float sum = 0.0;\n    foreach(n; numbers)\n  \
    \      sum += (n - mean) * (n - mean);\n    return sqrt(sum / numbers\nunittest\n\
    {\n    alias candidate = mean_absolute_deviation;\n\n    assert(candidate([1.0,\
    \ 2.0]) == 0.5);\n    assert(candidate([1.0, 2.0, 3.0, 4.0]) == 1.0);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp9a1y02ua.d(75): Error: found `unittest` when expecting `,`

    /tmp/tmp9a1y02ua.d(83): Error: found `void` when expecting `,`

    /tmp/tmp9a1y02ua.d(83): Error: found `{` when expecting `,`

    /tmp/tmp9a1y02ua.d(83): Error: expression expected, not `}`

    /tmp/tmp9a1y02ua.d(83): Error: found `End of File` when expecting `,`

    /tmp/tmp9a1y02ua.d(83): Error: found `End of File` when expecting `)`

    /tmp/tmp9a1y02ua.d(83): Error: found `End of File` when expecting `;` following
    `return` statement

    /tmp/tmp9a1y02ua.d(83): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9a1y02ua.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163140
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = mean(numbers);\n    float[] abs_diff = new float[numbers.length];\n \
    \   foreach(i, num; numbers)\n    {\n        abs_diff[i] = abs(num - mean);\n\
    \    }\n    return mean(abs_diff);\n}\nunittest\n{\n    alias candidate = mean_absolute_deviation;\n\
    \n    assert(candidate([1.0, 2.0]) == 0.5);\n    assert(candidate([1.0, 2.0, 3.0,\
    \ 4.0]) == 1.0);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp6rm1krqq.d(13): Error: undefined identifier `mean`, did you mean
    function `main`?

    /tmp/tmp6rm1krqq.d(19): Error: function expected before `()`, not `mean` of type
    `float`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6rm1krqq.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163140
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = 0.0;\n    float sum = 0.0;\n    foreach(n; numbers)\n    {\n        sum\
    \ += n;\n    }\n    mean = sum / numbers.length;\n    float sum_of_abs_diff =\
    \ 0.0;\n    foreach(n; numbers)\n    {\n        sum_of_abs_diff += abs(n - mean);\n\
    \    }\n    return sum_of_abs_diff / numbers.length;\n}\n/*\n    For a given list\
    \ of input numbers, calculate the standard deviation\n    around the mean of this\
    \ dataset.\n    Standard Deviation is the square root of the average of the squared\n\
    \    differences from the mean:\n    SD = sqrt(average (x - x_mean)^2)\n*/\nfloat\
    \ standard_deviation(float[] numbers) \n{\n    float mean = 0.0;\n    float sum\
    \ = 0.0;\n    foreach(n; numbers)\n    {\n        sum += n;\n    }\n    mean =\
    \ sum / numbers.length;\n    float sum_of_squared_diff = 0.0;\n    foreach(n;\
    \ numbers)\n    {\n        sum_of_squared_diff += (n - mean) * (n - mean);\n \
    \   }\n    return sqrt(sum_of_squared_diff / numbers.length);\n}\n/*\n    For\
    \ a given list of input numbers, calculate the median absolute\n    deviation\
    \ around the median of this dataset.\n    Median Absolute Deviation is the median\
    \ of the absolute differences\n    from the median:\n    MAD = median | x - x_median\
    \ |\n*/\nfloat median_absolute_deviation(float[] numbers) \n{\n    float[] abs_diff_from_median\
    \ = new float[numbers.length];\n    float median = 0.0;\n    if(numbers.length\
    \ % 2 == 0)\n    {\n        median = (numbers[numbers.length / 2] + numbers[numbers.length\
    \ / 2 - 1]) / 2;\n    }\n    else\n    {\n        median = numbers[numbers.length\
    \ / 2];\n    }\n    foreach(n; numbers)\n    {\n        abs_diff\nunittest\n{\n\
    \    alias candidate = mean_absolute_deviation;\n\n    assert(candidate([1.0,\
    \ 2.0]) == 0.5);\n    assert(candidate([1.0, 2.0, 3.0, 4.0]) == 1.0);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp9s53qedo.d(72): Error: found `unittest` when expecting `;` following
    statement

    /tmp/tmp9s53qedo.d(80): Error: found `End of File` when expecting `}` following
    compound statement

    /tmp/tmp9s53qedo.d(80): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9s53qedo.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163140
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = mean(numbers);\n    float[] diffs = new float[numbers.length];\n    foreach(i,\
    \ number; numbers)\n    {\n        diffs[i] = abs(number - mean);\n    }\n   \
    \ return mean(diffs);\n}\nunittest\n{\n    alias candidate = mean_absolute_deviation;\n\
    \n    assert(candidate([1.0, 2.0]) == 0.5);\n    assert(candidate([1.0, 2.0, 3.0,\
    \ 4.0]) == 1.0);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpma3shxh1.d(13): Error: undefined identifier `mean`, did you mean
    function `main`?

    /tmp/tmpma3shxh1.d(19): Error: function expected before `()`, not `mean` of type
    `float`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpma3shxh1.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = mean(numbers);\n    float[] absolute_deviations = new float[numbers.length];\n\
    \    foreach(i, number; numbers)\n    {\n        absolute_deviations[i] = abs(number\
    \ - mean);\n    }\n    return mean(absolute_deviations);\n}\nunittest\n{\n   \
    \ alias candidate = mean_absolute_deviation;\n\n    assert(candidate([1.0, 2.0])\
    \ == 0.5);\n    assert(candidate([1.0, 2.0, 3.0, 4.0]) == 1.0);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpe1sd_hfn.d(13): Error: undefined identifier `mean`, did you mean
    function `main`?

    /tmp/tmpe1sd_hfn.d(19): Error: function expected before `()`, not `mean` of type
    `float`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpe1sd_hfn.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = mean(numbers);\n    float[] diffs = new float[numbers.length];\n    foreach(i,\
    \ number; numbers)\n    {\n        diffs[i] = abs(number - mean);\n    }\n   \
    \ return mean(diffs);\n}\nunittest\n{\n    alias candidate = mean_absolute_deviation;\n\
    \n    assert(candidate([1.0, 2.0]) == 0.5);\n    assert(candidate([1.0, 2.0, 3.0,\
    \ 4.0]) == 1.0);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpma3shxh1.d(13): Error: undefined identifier `mean`, did you mean
    function `main`?

    /tmp/tmpma3shxh1.d(19): Error: function expected before `()`, not `mean` of type
    `float`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpma3shxh1.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = 0.0;\n    foreach(n; numbers)\n        mean += n;\n    mean /= numbers.length;\n\
    \    float mad = 0.0;\n    foreach(n; numbers)\n        mad += abs(n - mean);\n\
    \    mad /= numbers.length;\n    return mad;\n}\nunittest\n{\n    alias candidate\
    \ = mean_absolute_deviation;\n\n    assert(candidate([1.0, 2.0]) == 0.5);\n  \
    \  assert(candidate([1.0, 2.0, 3.0, 4.0]) == 1.0);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpa6rwc9cw.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283f5]

    ??:? void tmpa6rwc9cw.__unittest_L23_C1() [0x428155]

    ??:? void tmpa6rwc9cw.__modtest() [0x428174]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c3cf]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b262]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4303f5]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x4308a4]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430381]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b239]

    ??:? runModuleUnitTests [0x42c1a5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428844]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = mean(numbers);\n    float[] absolute_differences = new float[numbers.length];\n\
    \    foreach(i, number; numbers) {\n        absolute_differences[i] = abs(number\
    \ - mean);\n    }\n    return mean(absolute_differences);\n}\nunittest\n{\n  \
    \  alias candidate = mean_absolute_deviation;\n\n    assert(candidate([1.0, 2.0])\
    \ == 0.5);\n    assert(candidate([1.0, 2.0, 3.0, 4.0]) == 1.0);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpif7f9x6p.d(13): Error: undefined identifier `mean`, did you mean
    function `main`?

    /tmp/tmpif7f9x6p.d(18): Error: function expected before `()`, not `mean` of type
    `float`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpif7f9x6p.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = mean(numbers);\n    float[] diffs = new float[numbers.length];\n    foreach(i,\
    \ number; numbers)\n    {\n        diffs[i] = abs(number - mean);\n    }\n   \
    \ return mean(diffs);\n}\nunittest\n{\n    alias candidate = mean_absolute_deviation;\n\
    \n    assert(candidate([1.0, 2.0]) == 0.5);\n    assert(candidate([1.0, 2.0, 3.0,\
    \ 4.0]) == 1.0);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpma3shxh1.d(13): Error: undefined identifier `mean`, did you mean
    function `main`?

    /tmp/tmpma3shxh1.d(19): Error: function expected before `()`, not `mean` of type
    `float`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpma3shxh1.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = 0.0;\n    foreach(n; numbers)\n        mean += n;\n    mean /= numbers.length;\n\
    \    float mad = 0.0;\n    foreach(n; numbers)\n        mad += abs(n - mean);\n\
    \    mad /= numbers.length;\n    return mad;\n}\nunittest\n{\n    alias candidate\
    \ = mean_absolute_deviation;\n\n    assert(candidate([1.0, 2.0]) == 0.5);\n  \
    \  assert(candidate([1.0, 2.0, 3.0, 4.0]) == 1.0);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpa6rwc9cw.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283f5]

    ??:? void tmpa6rwc9cw.__unittest_L23_C1() [0x428155]

    ??:? void tmpa6rwc9cw.__modtest() [0x428174]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c3cf]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b262]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4303f5]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x4308a4]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430381]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b239]

    ??:? runModuleUnitTests [0x42c1a5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428844]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163139
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n For a given list of input\
    \ numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n\
    \    Mean Absolute Deviation is the average absolute difference between each\n\
    \    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean\
    \ |\n        \n*/\nfloat mean_absolute_deviation(float[] numbers) \n{\n    float\
    \ mean = mean(numbers);\n    float[] abs_deviations = new float[numbers.length];\n\
    \    foreach(i, number; numbers)\n    {\n        abs_deviations[i] = abs(number\
    \ - mean);\n    }\n    return mean(abs_deviations);\n}\nunittest\n{\n    alias\
    \ candidate = mean_absolute_deviation;\n\n    assert(candidate([1.0, 2.0]) ==\
    \ 0.5);\n    assert(candidate([1.0, 2.0, 3.0, 4.0]) == 1.0);\n    assert(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpz0c6emud.d(13): Error: undefined identifier `mean`, did you mean
    function `main`?

    /tmp/tmpz0c6emud.d(19): Error: function expected before `()`, not `mean` of type
    `float`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpz0c6emud.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163139

name: HumanEval_107_even_odd_palindrome
language: d
prompt: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
  \ n, return a tuple that has the number of even and odd\n    integer palindromes\
  \ that fall within the range(1, n), inclusive.\n\n    Example 1:\n\n           \
  \ Explanation:\n        Integer palindrome are 1, 2, 3. one of them is even, and\
  \ two of them are odd.\n\n    Example 2:\n\n            Explanation:\n        Integer\
  \ palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9, 11. four of them are even, and 6 of\
  \ them are odd.\n\n    Note:\n        1. 1 <= n <= 10^3\n        2. returned tuple\
  \ has the number of even and odd integer palindromes respectively.\n    \n*/\nTuple!(long,\
  \ long) even_odd_palindrome(long n) \n"
tests: "unittest\n{\n    alias candidate = even_odd_palindrome;\n\n    assert(candidate(123L)\
  \ == tuple(8L, 13L));\n    assert(candidate(12L) == tuple(4L, 6L));\n    assert(candidate(3L)\
  \ == tuple(1L, 2L));\n    assert(candidate(63L) == tuple(6L, 8L));\n    assert(candidate(25L)\
  \ == tuple(5L, 6L));\n    assert(candidate(19L) == tuple(4L, 6L));\n    assert(candidate(9L)\
  \ == tuple(4L, 5L));\n    assert(candidate(1L) == tuple(0L, 1L));\n}\nvoid main(){}"
completions: []
stop_tokens:
- "\n\n"
- "\nvoid"
- "\nbool"
- "\nint"

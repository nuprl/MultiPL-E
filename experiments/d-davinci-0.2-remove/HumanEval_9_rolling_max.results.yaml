language: d
name: HumanEval_9_rolling_max
results:
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max = numbers[0];\n    foreach(i,\
    \ v; numbers) \n    {\n        max = max(max, v);\n        result[i] = max;\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = rolling_max;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([1L, 2L, 3L, 4L]) ==\
    \ [1L, 2L, 3L, 4L]);\n    assert(candidate([4L, 3L, 2L, 1L]) == [4L, 4L, 4L, 4L]);\n\
    \    assert(candidate([3L, 2L, 3L, 100L, 3L]) == [3L, 3L, 3L, 100L, 100L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpgqfrtbyu.d(14): Error: function expected before `()`, not `max`
    of type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgqfrtbyu.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163126
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max = numbers[0];\n    for (int\
    \ i = 0; i < numbers.length; i++) \n    {\n        max = max(max, numbers[i]);\n\
    \        result[i] = max;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = rolling_max;\n\n    assert(candidate([]) == []);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([4L, 3L, 2L, 1L]) ==\
    \ [4L, 4L, 4L, 4L]);\n    assert(candidate([3L, 2L, 3L, 100L, 3L]) == [3L, 3L,\
    \ 3L, 100L, 100L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpvko_2ur3.d(14): Error: function expected before `()`, not `max`
    of type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvko_2ur3.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163126
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max = numbers[0];\n    result[0]\
    \ = max;\n    foreach(i, number; numbers[1..$])\n    {\n        max = max(max,\
    \ number);\n        result[i+1] = max;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = rolling_max;\n\n    assert(candidate([]) == []);\n  \
    \  assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([4L,\
    \ 3L, 2L, 1L]) == [4L, 4L, 4L, 4L]);\n    assert(candidate([3L, 2L, 3L, 100L,\
    \ 3L]) == [3L, 3L, 3L, 100L, 100L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp5ka8_lim.d(15): Error: function expected before `()`, not `max`
    of type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5ka8_lim.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163126
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result;\n    long max = numbers[0];\n    foreach(i, number; numbers) \n    {\n\
    \        max = max(max, number);\n        result ~= max;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = rolling_max;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([4L,\
    \ 3L, 2L, 1L]) == [4L, 4L, 4L, 4L]);\n    assert(candidate([3L, 2L, 3L, 100L,\
    \ 3L]) == [3L, 3L, 3L, 100L, 100L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpy3y5uhd6.d(14): Error: function expected before `()`, not `max`
    of type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpy3y5uhd6.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163126
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max = numbers[0];\n    result[0]\
    \ = max;\n    foreach(i, number; numbers[1..$])\n    {\n        if (number > max)\n\
    \        {\n            max = number;\n        }\n        result[i + 1] = max;\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = rolling_max;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([1L, 2L, 3L, 4L]) ==\
    \ [1L, 2L, 3L, 4L]);\n    assert(candidate([4L, 3L, 2L, 1L]) == [4L, 4L, 4L, 4L]);\n\
    \    assert(candidate([3L, 2L, 3L, 100L, 3L]) == [3L, 3L, 3L, 100L, 100L]);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.RangeError@/tmp/tmpbpi7m441.d(11): Range violation

    ----------------

    ??:? _d_arrayboundsp [0x42857e]

    ??:? long[] tmpbpi7m441.rolling_max(long[]) [0x427e62]

    ??:? void tmpbpi7m441.__unittest_L23_C1() [0x427f5e]

    ??:? void tmpbpi7m441.__modtest() [0x42824c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c5ab]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b43e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4306c9]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430b78]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430655]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b415]

    ??:? runModuleUnitTests [0x42c381]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function('
  stdout: ''
  timestamp: 1660163126
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max = numbers[0];\n    result[0]\
    \ = max;\n    foreach(i, number; numbers[1..$]) \n    {\n        max = max(max,\
    \ number);\n        result[i+1] = max;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = rolling_max;\n\n    assert(candidate([]) == []);\n  \
    \  assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([4L,\
    \ 3L, 2L, 1L]) == [4L, 4L, 4L, 4L]);\n    assert(candidate([3L, 2L, 3L, 100L,\
    \ 3L]) == [3L, 3L, 3L, 100L, 100L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpjqdboio1.d(15): Error: function expected before `()`, not `max`
    of type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjqdboio1.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163126
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max = numbers[0];\n    result[0]\
    \ = max;\n    foreach(i, number; numbers[1..$]) \n    {\n        max = max(max,\
    \ number);\n        result[i+1] = max;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = rolling_max;\n\n    assert(candidate([]) == []);\n  \
    \  assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([4L,\
    \ 3L, 2L, 1L]) == [4L, 4L, 4L, 4L]);\n    assert(candidate([3L, 2L, 3L, 100L,\
    \ 3L]) == [3L, 3L, 3L, 100L, 100L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpjqdboio1.d(15): Error: function expected before `()`, not `max`
    of type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjqdboio1.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163126
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result;\n    long max = 0;\n    foreach(i; 0 .. numbers.length) \n    {\n  \
    \      if (numbers[i] > max) \n        {\n            max = numbers[i];\n    \
    \    }\n        result ~= max;\n    }\n    return result;\n}\nunittest\n{\n  \
    \  alias candidate = rolling_max;\n\n    assert(candidate([]) == []);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([4L, 3L, 2L, 1L]) ==\
    \ [4L, 4L, 4L, 4L]);\n    assert(candidate([3L, 2L, 3L, 100L, 3L]) == [3L, 3L,\
    \ 3L, 100L, 100L]);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163126
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result;\n    long max = numbers[0];\n    foreach(i, number; numbers)\n    {\n\
    \        max = max(max, number);\n        result ~= max;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = rolling_max;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([4L,\
    \ 3L, 2L, 1L]) == [4L, 4L, 4L, 4L]);\n    assert(candidate([3L, 2L, 3L, 100L,\
    \ 3L]) == [3L, 3L, 3L, 100L, 100L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpjljswtzu.d(14): Error: function expected before `()`, not `max`
    of type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjljswtzu.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163126
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ max_numbers = new long[numbers.length];\n    long max_number = numbers[0];\n\
    \    max_numbers[0] = max_number;\n    foreach(i, number; numbers[1..$]) \n  \
    \  {\n        if (number > max_number) \n        {\n            max_number = number;\n\
    \        }\n        max_numbers[i+1] = max_number;\n    }\n    return max_numbers;\n\
    }\n/*\n From a given list of integers, generate a list of rolling minimum element\
    \ found until given moment\n    in the sequence.\n*/\nlong[] rolling_min(long[]\
    \ numbers) \n{\n    long[] min_numbers = new long[numbers.length];\n    long min_number\
    \ = numbers[0];\n    min_numbers[0] = min_number;\n    foreach(i, number; numbers[1..$])\
    \ \n    {\n        if (number < min_number) \n        {\n            min_number\
    \ = number;\n        }\n        min_numbers[i+1] = min_number;\n    }\n    return\
    \ min_numbers;\n}\n/*\n From a given list of integers, generate a list of rolling\
    \ sum of elements found until given moment\n    in the sequence.\n*/\nlong[] rolling_sum(long[]\
    \ numbers) \n{\n    long[] sum_numbers = new long[numbers.length];\n    long sum_number\
    \ = numbers[0];\n    sum_numbers[0] = sum_number;\n    foreach(i, number; numbers[1..$])\
    \ \n    {\n        sum_number += number;\n        sum_numbers[i+1] = sum_number;\n\
    \    }\n    return sum_numbers;\n}\n/*\n From a given list of integers, generate\
    \ a list of rolling average of elements found until given moment\n    in the sequence.\n\
    */\ndouble[] rolling_average(long[] numbers) \n{\n    double[] average_numbers\
    \ = new double[numbers.length];\n    double average_number = numbers[0];\n   \
    \ average_numbers[0] = average_number;\n    foreach(i, number;\nunittest\n{\n\
    \    alias candidate = rolling_max;\n\n    assert(candidate([]) == []);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([4L, 3L, 2L, 1L]) ==\
    \ [4L, 4L, 4L, 4L]);\n    assert(candidate([3L, 2L, 3L, 100L, 3L]) == [3L, 3L,\
    \ 3L, 100L, 100L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpwm2y6jya.d(68): Error: expression expected, not `unittest`

    /tmp/tmpwm2y6jya.d(69): Error: found `{` when expecting `)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwm2y6jya.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163126
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max = numbers[0];\n    result[0]\
    \ = max;\n    foreach(i, number; numbers[1..$]) \n    {\n        max = max(max,\
    \ number);\n        result[i + 1] = max;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = rolling_max;\n\n    assert(candidate([]) == []);\n  \
    \  assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([4L,\
    \ 3L, 2L, 1L]) == [4L, 4L, 4L, 4L]);\n    assert(candidate([3L, 2L, 3L, 100L,\
    \ 3L]) == [3L, 3L, 3L, 100L, 100L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpdx8u7fve.d(15): Error: function expected before `()`, not `max`
    of type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdx8u7fve.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163126
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max = numbers[0];\n    result[0]\
    \ = max;\n    foreach(i, number; numbers[1..$]) \n    {\n        if (number >\
    \ max) \n        {\n            max = number;\n        }\n        result[i + 1]\
    \ = max;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = rolling_max;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([1L, 2L, 3L, 4L]) ==\
    \ [1L, 2L, 3L, 4L]);\n    assert(candidate([4L, 3L, 2L, 1L]) == [4L, 4L, 4L, 4L]);\n\
    \    assert(candidate([3L, 2L, 3L, 100L, 3L]) == [3L, 3L, 3L, 100L, 100L]);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.RangeError@/tmp/tmpbdu8rkiv.d(11): Range violation

    ----------------

    ??:? _d_arrayboundsp [0x42857e]

    ??:? long[] tmpbdu8rkiv.rolling_max(long[]) [0x427e62]

    ??:? void tmpbdu8rkiv.__unittest_L23_C1() [0x427f5e]

    ??:? void tmpbdu8rkiv.__modtest() [0x42824c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c5ab]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b43e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4306c9]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430b78]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430655]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b415]

    ??:? runModuleUnitTests [0x42c381]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function('
  stdout: ''
  timestamp: 1660163126
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result;\n    foreach(i, n; numbers)\n    {\n        long max = n;\n        for(int\
    \ j = 0; j < i; j++)\n        {\n            if(numbers[j] > max)\n          \
    \      max = numbers[j];\n        }\n        result ~= max;\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = rolling_max;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([4L,\
    \ 3L, 2L, 1L]) == [4L, 4L, 4L, 4L]);\n    assert(candidate([3L, 2L, 3L, 100L,\
    \ 3L]) == [3L, 3L, 3L, 100L, 100L]);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163126
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max = numbers[0];\n    result[0]\
    \ = max;\n    foreach(i, number; numbers[1..$])\n    {\n        max = max(max,\
    \ number);\n        result[i + 1] = max;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = rolling_max;\n\n    assert(candidate([]) == []);\n  \
    \  assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([4L,\
    \ 3L, 2L, 1L]) == [4L, 4L, 4L, 4L]);\n    assert(candidate([3L, 2L, 3L, 100L,\
    \ 3L]) == [3L, 3L, 3L, 100L, 100L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp9jvz2cjh.d(15): Error: function expected before `()`, not `max`
    of type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9jvz2cjh.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163126
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max_so_far = numbers[0];\n    foreach(i,\
    \ number; numbers) \n    {\n        max_so_far = max(max_so_far, number);\n  \
    \      result[i] = max_so_far;\n    }\n    return result;\n}\nunittest\n{\n  \
    \  alias candidate = rolling_max;\n\n    assert(candidate([]) == []);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([4L, 3L, 2L, 1L]) ==\
    \ [4L, 4L, 4L, 4L]);\n    assert(candidate([3L, 2L, 3L, 100L, 3L]) == [3L, 3L,\
    \ 3L, 100L, 100L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpg6erd1r1.d(14): Error: undefined identifier `max`, did you mean
    function `fmax`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg6erd1r1.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163126
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max = numbers[0];\n    result[0]\
    \ = max;\n    foreach(i, number; numbers[1..$]) \n    {\n        max = max(max,\
    \ number);\n        result[i + 1] = max;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = rolling_max;\n\n    assert(candidate([]) == []);\n  \
    \  assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([4L,\
    \ 3L, 2L, 1L]) == [4L, 4L, 4L, 4L]);\n    assert(candidate([3L, 2L, 3L, 100L,\
    \ 3L]) == [3L, 3L, 3L, 100L, 100L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpdx8u7fve.d(15): Error: function expected before `()`, not `max`
    of type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdx8u7fve.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163126
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max = numbers[0];\n    result[0]\
    \ = max;\n    foreach(i, number; numbers[1..$]) \n    {\n        max = max(max,\
    \ number);\n        result[i+1] = max;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = rolling_max;\n\n    assert(candidate([]) == []);\n  \
    \  assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([4L,\
    \ 3L, 2L, 1L]) == [4L, 4L, 4L, 4L]);\n    assert(candidate([3L, 2L, 3L, 100L,\
    \ 3L]) == [3L, 3L, 3L, 100L, 100L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpjqdboio1.d(15): Error: function expected before `()`, not `max`
    of type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjqdboio1.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163126
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result;\n    long max = numbers[0];\n    foreach(i, n; numbers) \n    {\n  \
    \      max = max(max, n);\n        result ~= max;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = rolling_max;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([4L,\
    \ 3L, 2L, 1L]) == [4L, 4L, 4L, 4L]);\n    assert(candidate([3L, 2L, 3L, 100L,\
    \ 3L]) == [3L, 3L, 3L, 100L, 100L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1_7rjh6a.d(14): Error: function expected before `()`, not `max`
    of type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1_7rjh6a.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163126
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    result[0] = numbers[0];\n    foreach(i;\
    \ 1..numbers.length)\n    {\n        result[i] = max(result[i-1], numbers[i]);\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = rolling_max;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([1L, 2L, 3L, 4L]) ==\
    \ [1L, 2L, 3L, 4L]);\n    assert(candidate([4L, 3L, 2L, 1L]) == [4L, 4L, 4L, 4L]);\n\
    \    assert(candidate([3L, 2L, 3L, 100L, 3L]) == [3L, 3L, 3L, 100L, 100L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp2zkvyl2j.d(14): Error: undefined identifier `max`, did you mean
    function `fmax`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2zkvyl2j.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163126
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result;\n    foreach(i, n; numbers) \n    {\n        if (i == 0) \n        {\n\
    \            result ~= n;\n        } \n        else \n        {\n            result\
    \ ~= max(result[$-1], n);\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = rolling_max;\n\n    assert(candidate([]) == []);\n  \
    \  assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([4L,\
    \ 3L, 2L, 1L]) == [4L, 4L, 4L, 4L]);\n    assert(candidate([3L, 2L, 3L, 100L,\
    \ 3L]) == [3L, 3L, 3L, 100L, 100L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpj4l50t2s.d(19): Error: undefined identifier `max`, did you mean
    function `fmax`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpj4l50t2s.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163126
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max = numbers[0];\n    result[0]\
    \ = max;\n    foreach(i, number; numbers[1..$]) \n    {\n        max = max(max,\
    \ number);\n        result[i + 1] = max;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = rolling_max;\n\n    assert(candidate([]) == []);\n  \
    \  assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([4L,\
    \ 3L, 2L, 1L]) == [4L, 4L, 4L, 4L]);\n    assert(candidate([3L, 2L, 3L, 100L,\
    \ 3L]) == [3L, 3L, 3L, 100L, 100L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpdx8u7fve.d(15): Error: function expected before `()`, not `max`
    of type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdx8u7fve.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163126
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result;\n    long max = 0;\n    foreach(i; 0 .. numbers.length) \n    {\n  \
    \      max = max(max, numbers[i]);\n        result ~= max;\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = rolling_max;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([4L,\
    \ 3L, 2L, 1L]) == [4L, 4L, 4L, 4L]);\n    assert(candidate([3L, 2L, 3L, 100L,\
    \ 3L]) == [3L, 3L, 3L, 100L, 100L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmppw9wtkoi.d(14): Error: function expected before `()`, not `max`
    of type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmppw9wtkoi.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163126
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max = numbers[0];\n    foreach(i,\
    \ v; numbers)\n    {\n        max = max(max, v);\n        result[i] = max;\n \
    \   }\n    return result;\n}\nunittest\n{\n    alias candidate = rolling_max;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([1L, 2L, 3L, 4L]) ==\
    \ [1L, 2L, 3L, 4L]);\n    assert(candidate([4L, 3L, 2L, 1L]) == [4L, 4L, 4L, 4L]);\n\
    \    assert(candidate([3L, 2L, 3L, 100L, 3L]) == [3L, 3L, 3L, 100L, 100L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbejoav_x.d(14): Error: function expected before `()`, not `max`
    of type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbejoav_x.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163126
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max = numbers[0];\n    for (int\
    \ i = 0; i < numbers.length; i++) \n    {\n        if (numbers[i] > max) \n  \
    \      {\n            max = numbers[i];\n        }\n        result[i] = max;\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = rolling_max;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([1L, 2L, 3L, 4L]) ==\
    \ [1L, 2L, 3L, 4L]);\n    assert(candidate([4L, 3L, 2L, 1L]) == [4L, 4L, 4L, 4L]);\n\
    \    assert(candidate([3L, 2L, 3L, 100L, 3L]) == [3L, 3L, 3L, 100L, 100L]);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.RangeError@/tmp/tmpnk8_htog.d(11): Range violation

    ----------------

    ??:? _d_arrayboundsp [0x428566]

    ??:? long[] tmpnk8_htog.rolling_max(long[]) [0x427e62]

    ??:? void tmpnk8_htog.__unittest_L22_C1() [0x427f4a]

    ??:? void tmpnk8_htog.__modtest() [0x428238]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c593]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b426]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4306b1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430b60]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x43063d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b3fd]

    ??:? runModuleUnitTests [0x42c369]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function('
  stdout: ''
  timestamp: 1660163126
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result;\n    foreach(i, n; numbers) \n    {\n        if (i == 0) \n        {\n\
    \            result ~= n;\n        } \n        else \n        {\n            result\
    \ ~= max(result[$-1], n);\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = rolling_max;\n\n    assert(candidate([]) == []);\n  \
    \  assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([4L,\
    \ 3L, 2L, 1L]) == [4L, 4L, 4L, 4L]);\n    assert(candidate([3L, 2L, 3L, 100L,\
    \ 3L]) == [3L, 3L, 3L, 100L, 100L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpj4l50t2s.d(19): Error: undefined identifier `max`, did you mean
    function `fmax`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpj4l50t2s.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163126
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max = numbers[0];\n    for (int\
    \ i = 0; i < numbers.length; i++) \n    {\n        max = max(max, numbers[i]);\n\
    \        result[i] = max;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = rolling_max;\n\n    assert(candidate([]) == []);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([4L, 3L, 2L, 1L]) ==\
    \ [4L, 4L, 4L, 4L]);\n    assert(candidate([3L, 2L, 3L, 100L, 3L]) == [3L, 3L,\
    \ 3L, 100L, 100L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpvko_2ur3.d(14): Error: function expected before `()`, not `max`
    of type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvko_2ur3.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163126
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max = numbers[0];\n    result[0]\
    \ = max;\n    foreach(i, v; numbers[1..$])\n    {\n        max = max(max, v);\n\
    \        result[i] = max;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = rolling_max;\n\n    assert(candidate([]) == []);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([4L, 3L, 2L, 1L]) ==\
    \ [4L, 4L, 4L, 4L]);\n    assert(candidate([3L, 2L, 3L, 100L, 3L]) == [3L, 3L,\
    \ 3L, 100L, 100L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpyaptjn48.d(15): Error: function expected before `()`, not `max`
    of type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyaptjn48.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163126
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max_so_far = numbers[0];\n    result[0]\
    \ = max_so_far;\n    foreach(i, number; numbers[1..$])\n    {\n        max_so_far\
    \ = max(max_so_far, number);\n        result[i+1] = max_so_far;\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = rolling_max;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([4L,\
    \ 3L, 2L, 1L]) == [4L, 4L, 4L, 4L]);\n    assert(candidate([3L, 2L, 3L, 100L,\
    \ 3L]) == [3L, 3L, 3L, 100L, 100L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmptovgnaam.d(15): Error: undefined identifier `max`, did you mean
    function `fmax`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptovgnaam.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163126
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max = numbers[0];\n    for (int\
    \ i = 0; i < numbers.length; i++) \n    {\n        if (numbers[i] > max) \n  \
    \      {\n            max = numbers[i];\n        }\n        result[i] = max;\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = rolling_max;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([1L, 2L, 3L, 4L]) ==\
    \ [1L, 2L, 3L, 4L]);\n    assert(candidate([4L, 3L, 2L, 1L]) == [4L, 4L, 4L, 4L]);\n\
    \    assert(candidate([3L, 2L, 3L, 100L, 3L]) == [3L, 3L, 3L, 100L, 100L]);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.RangeError@/tmp/tmpnk8_htog.d(11): Range violation

    ----------------

    ??:? _d_arrayboundsp [0x428566]

    ??:? long[] tmpnk8_htog.rolling_max(long[]) [0x427e62]

    ??:? void tmpnk8_htog.__unittest_L22_C1() [0x427f4a]

    ??:? void tmpnk8_htog.__modtest() [0x428238]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c593]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b426]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4306b1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430b60]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x43063d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b3fd]

    ??:? runModuleUnitTests [0x42c369]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function('
  stdout: ''
  timestamp: 1660163126
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max = numbers[0];\n    result[0]\
    \ = max;\n    foreach(i, e; numbers[1..$])\n    {\n        max = max(max, e);\n\
    \        result[i] = max;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = rolling_max;\n\n    assert(candidate([]) == []);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([4L, 3L, 2L, 1L]) ==\
    \ [4L, 4L, 4L, 4L]);\n    assert(candidate([3L, 2L, 3L, 100L, 3L]) == [3L, 3L,\
    \ 3L, 100L, 100L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpyz65_5vw.d(15): Error: function expected before `()`, not `max`
    of type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyz65_5vw.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163126
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max = numbers[0];\n    foreach(i,\
    \ v; numbers) \n    {\n        max = max(max, v);\n        result[i] = max;\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = rolling_max;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([1L, 2L, 3L, 4L]) ==\
    \ [1L, 2L, 3L, 4L]);\n    assert(candidate([4L, 3L, 2L, 1L]) == [4L, 4L, 4L, 4L]);\n\
    \    assert(candidate([3L, 2L, 3L, 100L, 3L]) == [3L, 3L, 3L, 100L, 100L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpgqfrtbyu.d(14): Error: function expected before `()`, not `max`
    of type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgqfrtbyu.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163126
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max = numbers[0];\n    result[0]\
    \ = max;\n    foreach(i, number; numbers[1..$]) \n    {\n        max = max(max,\
    \ number);\n        result[i + 1] = max;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = rolling_max;\n\n    assert(candidate([]) == []);\n  \
    \  assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([4L,\
    \ 3L, 2L, 1L]) == [4L, 4L, 4L, 4L]);\n    assert(candidate([3L, 2L, 3L, 100L,\
    \ 3L]) == [3L, 3L, 3L, 100L, 100L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpdx8u7fve.d(15): Error: function expected before `()`, not `max`
    of type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdx8u7fve.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163126
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result;\n    foreach(i, number; numbers) \n    {\n        if (i == 0) \n   \
    \     {\n            result ~= number;\n        } \n        else \n        {\n\
    \            result ~= max(result[$-1], number);\n        }\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = rolling_max;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([4L,\
    \ 3L, 2L, 1L]) == [4L, 4L, 4L, 4L]);\n    assert(candidate([3L, 2L, 3L, 100L,\
    \ 3L]) == [3L, 3L, 3L, 100L, 100L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp0n2m7oss.d(19): Error: undefined identifier `max`, did you mean
    function `fmax`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0n2m7oss.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163126
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max = numbers[0];\n    for (int\
    \ i = 0; i < numbers.length; i++) {\n        max = max(max, numbers[i]);\n   \
    \     result[i] = max;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = rolling_max;\n\n    assert(candidate([]) == []);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([4L, 3L, 2L, 1L]) ==\
    \ [4L, 4L, 4L, 4L]);\n    assert(candidate([3L, 2L, 3L, 100L, 3L]) == [3L, 3L,\
    \ 3L, 100L, 100L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp0sesd5jb.d(13): Error: function expected before `()`, not `max`
    of type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0sesd5jb.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163126
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max = numbers[0];\n    for (int\
    \ i = 0; i < numbers.length; i++) \n    {\n        max = max(max, numbers[i]);\n\
    \        result[i] = max;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = rolling_max;\n\n    assert(candidate([]) == []);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([4L, 3L, 2L, 1L]) ==\
    \ [4L, 4L, 4L, 4L]);\n    assert(candidate([3L, 2L, 3L, 100L, 3L]) == [3L, 3L,\
    \ 3L, 100L, 100L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpvko_2ur3.d(14): Error: function expected before `()`, not `max`
    of type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvko_2ur3.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163126
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max = numbers[0];\n    foreach(i,\
    \ v; numbers)\n    {\n        max = max(max, v);\n        result[i] = max;\n \
    \   }\n    return result;\n}\nunittest\n{\n    alias candidate = rolling_max;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([1L, 2L, 3L, 4L]) ==\
    \ [1L, 2L, 3L, 4L]);\n    assert(candidate([4L, 3L, 2L, 1L]) == [4L, 4L, 4L, 4L]);\n\
    \    assert(candidate([3L, 2L, 3L, 100L, 3L]) == [3L, 3L, 3L, 100L, 100L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbejoav_x.d(14): Error: function expected before `()`, not `max`
    of type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbejoav_x.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163126
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max = numbers[0];\n    result[0]\
    \ = max;\n    foreach(i, v; numbers[1..$])\n    {\n        max = max(max, v);\n\
    \        result[i+1] = max;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = rolling_max;\n\n    assert(candidate([]) == []);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([4L, 3L, 2L, 1L]) ==\
    \ [4L, 4L, 4L, 4L]);\n    assert(candidate([3L, 2L, 3L, 100L, 3L]) == [3L, 3L,\
    \ 3L, 100L, 100L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpdlxxn86j.d(15): Error: function expected before `()`, not `max`
    of type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdlxxn86j.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163126
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max_so_far = numbers[0];\n    result[0]\
    \ = max_so_far;\n    foreach(i, n; numbers[1..$]) \n    {\n        max_so_far\
    \ = max(max_so_far, n);\n        result[i + 1] = max_so_far;\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = rolling_max;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([4L,\
    \ 3L, 2L, 1L]) == [4L, 4L, 4L, 4L]);\n    assert(candidate([3L, 2L, 3L, 100L,\
    \ 3L]) == [3L, 3L, 3L, 100L, 100L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpvxrc8pdr.d(15): Error: undefined identifier `max`, did you mean
    function `fmax`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvxrc8pdr.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163126
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max = numbers[0];\n    foreach(i,\
    \ number; numbers) \n    {\n        max = max(max, number);\n        result[i]\
    \ = max;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = rolling_max;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([1L, 2L, 3L, 4L]) ==\
    \ [1L, 2L, 3L, 4L]);\n    assert(candidate([4L, 3L, 2L, 1L]) == [4L, 4L, 4L, 4L]);\n\
    \    assert(candidate([3L, 2L, 3L, 100L, 3L]) == [3L, 3L, 3L, 100L, 100L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpua9cu4uc.d(14): Error: function expected before `()`, not `max`
    of type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpua9cu4uc.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163126
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result;\n    result.length = numbers.length;\n    long max = numbers[0];\n \
    \   foreach(i, e; numbers) \n    {\n        max = max(max, e);\n        result[i]\
    \ = max;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = rolling_max;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([1L, 2L, 3L, 4L]) ==\
    \ [1L, 2L, 3L, 4L]);\n    assert(candidate([4L, 3L, 2L, 1L]) == [4L, 4L, 4L, 4L]);\n\
    \    assert(candidate([3L, 2L, 3L, 100L, 3L]) == [3L, 3L, 3L, 100L, 100L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmptqjfqjbu.d(15): Error: function expected before `()`, not `max`
    of type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptqjfqjbu.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163126
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max = numbers[0];\n    for (int\
    \ i = 0; i < numbers.length; i++) \n    {\n        if (numbers[i] > max) \n  \
    \      {\n            max = numbers[i];\n        }\n        result[i] = max;\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = rolling_max;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([1L, 2L, 3L, 4L]) ==\
    \ [1L, 2L, 3L, 4L]);\n    assert(candidate([4L, 3L, 2L, 1L]) == [4L, 4L, 4L, 4L]);\n\
    \    assert(candidate([3L, 2L, 3L, 100L, 3L]) == [3L, 3L, 3L, 100L, 100L]);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.RangeError@/tmp/tmpnk8_htog.d(11): Range violation

    ----------------

    ??:? _d_arrayboundsp [0x428566]

    ??:? long[] tmpnk8_htog.rolling_max(long[]) [0x427e62]

    ??:? void tmpnk8_htog.__unittest_L22_C1() [0x427f4a]

    ??:? void tmpnk8_htog.__modtest() [0x428238]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c593]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b426]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4306b1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430b60]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x43063d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b3fd]

    ??:? runModuleUnitTests [0x42c369]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function('
  stdout: ''
  timestamp: 1660163126
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max = numbers[0];\n    result[0]\
    \ = max;\n    foreach(i, v; numbers[1..$])\n    {\n        max = max(max, v);\n\
    \        result[i] = max;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = rolling_max;\n\n    assert(candidate([]) == []);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([4L, 3L, 2L, 1L]) ==\
    \ [4L, 4L, 4L, 4L]);\n    assert(candidate([3L, 2L, 3L, 100L, 3L]) == [3L, 3L,\
    \ 3L, 100L, 100L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpyaptjn48.d(15): Error: function expected before `()`, not `max`
    of type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyaptjn48.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163126
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max = numbers[0];\n    for (int\
    \ i = 0; i < numbers.length; i++) \n    {\n        max = max(max, numbers[i]);\n\
    \        result[i] = max;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = rolling_max;\n\n    assert(candidate([]) == []);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([4L, 3L, 2L, 1L]) ==\
    \ [4L, 4L, 4L, 4L]);\n    assert(candidate([3L, 2L, 3L, 100L, 3L]) == [3L, 3L,\
    \ 3L, 100L, 100L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpvko_2ur3.d(14): Error: function expected before `()`, not `max`
    of type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvko_2ur3.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163126
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max = numbers[0];\n    result[0]\
    \ = max;\n    foreach(i, number; numbers[1..$])\n    {\n        if (number > max)\n\
    \        {\n            max = number;\n        }\n        result[i+1] = max;\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = rolling_max;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([1L, 2L, 3L, 4L]) ==\
    \ [1L, 2L, 3L, 4L]);\n    assert(candidate([4L, 3L, 2L, 1L]) == [4L, 4L, 4L, 4L]);\n\
    \    assert(candidate([3L, 2L, 3L, 100L, 3L]) == [3L, 3L, 3L, 100L, 100L]);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.RangeError@/tmp/tmp_ho7q40_.d(11): Range violation

    ----------------

    ??:? _d_arrayboundsp [0x42857e]

    ??:? long[] tmp_ho7q40_.rolling_max(long[]) [0x427e62]

    ??:? void tmp_ho7q40_.__unittest_L23_C1() [0x427f5e]

    ??:? void tmp_ho7q40_.__modtest() [0x42824c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c5ab]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b43e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4306c9]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430b78]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430655]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b415]

    ??:? runModuleUnitTests [0x42c381]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function('
  stdout: ''
  timestamp: 1660163127
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max = numbers[0];\n    for (int\
    \ i = 0; i < numbers.length; i++) \n    {\n        if (numbers[i] > max)\n   \
    \         max = numbers[i];\n        result[i] = max;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = rolling_max;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([4L,\
    \ 3L, 2L, 1L]) == [4L, 4L, 4L, 4L]);\n    assert(candidate([3L, 2L, 3L, 100L,\
    \ 3L]) == [3L, 3L, 3L, 100L, 100L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.RangeError@/tmp/tmp_se6jrgf.d(11): Range violation

    ----------------

    ??:? _d_arrayboundsp [0x428566]

    ??:? long[] tmp_se6jrgf.rolling_max(long[]) [0x427e62]

    ??:? void tmp_se6jrgf.__unittest_L20_C1() [0x427f4a]

    ??:? void tmp_se6jrgf.__modtest() [0x428238]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c593]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b426]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4306b1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430b60]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x43063d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b3fd]

    ??:? runModuleUnitTests [0x42c369]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function('
  stdout: ''
  timestamp: 1660163127
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max = numbers[0];\n    result[0]\
    \ = max;\n    for (int i = 1; i < numbers.length; i++) \n    {\n        max =\
    \ max(max, numbers[i]);\n        result[i] = max;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = rolling_max;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([4L,\
    \ 3L, 2L, 1L]) == [4L, 4L, 4L, 4L]);\n    assert(candidate([3L, 2L, 3L, 100L,\
    \ 3L]) == [3L, 3L, 3L, 100L, 100L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpm0a55q71.d(15): Error: function expected before `()`, not `max`
    of type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpm0a55q71.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163126
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result;\n    foreach(i, e; numbers)\n    {\n        if (i == 0)\n        {\n\
    \            result ~= e;\n        }\n        else\n        {\n            result\
    \ ~= max(result[$-1], e);\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = rolling_max;\n\n    assert(candidate([]) == []);\n  \
    \  assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([4L,\
    \ 3L, 2L, 1L]) == [4L, 4L, 4L, 4L]);\n    assert(candidate([3L, 2L, 3L, 100L,\
    \ 3L]) == [3L, 3L, 3L, 100L, 100L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpj1bnzawr.d(19): Error: undefined identifier `max`, did you mean
    function `fmax`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpj1bnzawr.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163126
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max = numbers[0];\n    result[0]\
    \ = max;\n    foreach(i, number; numbers[1..$]) \n    {\n        max = max(max,\
    \ number);\n        result[i + 1] = max;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = rolling_max;\n\n    assert(candidate([]) == []);\n  \
    \  assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([4L,\
    \ 3L, 2L, 1L]) == [4L, 4L, 4L, 4L]);\n    assert(candidate([3L, 2L, 3L, 100L,\
    \ 3L]) == [3L, 3L, 3L, 100L, 100L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpdx8u7fve.d(15): Error: function expected before `()`, not `max`
    of type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdx8u7fve.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163126
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result;\n    long max = numbers[0];\n    foreach(i, number; numbers) \n    {\n\
    \        if (number > max) \n        {\n            max = number;\n        }\n\
    \        result ~= max;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = rolling_max;\n\n    assert(candidate([]) == []);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([4L, 3L, 2L, 1L]) ==\
    \ [4L, 4L, 4L, 4L]);\n    assert(candidate([3L, 2L, 3L, 100L, 3L]) == [3L, 3L,\
    \ 3L, 100L, 100L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.RangeError@/tmp/tmpxe6gm21y.d(11): Range violation

    ----------------

    ??:? _d_arrayboundsp [0x42852e]

    ??:? long[] tmpxe6gm21y.rolling_max(long[]) [0x427e5b]

    ??:? void tmpxe6gm21y.__unittest_L22_C1() [0x427f0e]

    ??:? void tmpxe6gm21y.__modtest() [0x4281fc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42ceeb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42bd7e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4307d1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430c80]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x43075d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42bd55]

    ??:? runModuleUnitTests [0x42ccc1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function('
  stdout: ''
  timestamp: 1660163127
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result;\n    long max = long.min;\n    foreach(i, e; numbers) \n    {\n    \
    \    max = max(max, e);\n        result ~= max;\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = rolling_max;\n\n    assert(candidate([]) ==\
    \ []);\n    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([4L,\
    \ 3L, 2L, 1L]) == [4L, 4L, 4L, 4L]);\n    assert(candidate([3L, 2L, 3L, 100L,\
    \ 3L]) == [3L, 3L, 3L, 100L, 100L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp_ar50crp.d(14): Error: function expected before `()`, not `max`
    of type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_ar50crp.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163126
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max = numbers[0];\n    result[0]\
    \ = max;\n    foreach(i, number; numbers[1..$]) \n    {\n        max = max(max,\
    \ number);\n        result[i + 1] = max;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = rolling_max;\n\n    assert(candidate([]) == []);\n  \
    \  assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([4L,\
    \ 3L, 2L, 1L]) == [4L, 4L, 4L, 4L]);\n    assert(candidate([3L, 2L, 3L, 100L,\
    \ 3L]) == [3L, 3L, 3L, 100L, 100L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpdx8u7fve.d(15): Error: function expected before `()`, not `max`
    of type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdx8u7fve.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163126
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max = numbers[0];\n    foreach(i,\
    \ e; numbers) \n    {\n        max = max(max, e);\n        result[i] = max;\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = rolling_max;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([1L, 2L, 3L, 4L]) ==\
    \ [1L, 2L, 3L, 4L]);\n    assert(candidate([4L, 3L, 2L, 1L]) == [4L, 4L, 4L, 4L]);\n\
    \    assert(candidate([3L, 2L, 3L, 100L, 3L]) == [3L, 3L, 3L, 100L, 100L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpuqc8ue1c.d(14): Error: function expected before `()`, not `max`
    of type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpuqc8ue1c.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163126
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max = numbers[0];\n    result[0]\
    \ = max;\n    foreach(i, number; numbers[1..$]) \n    {\n        max = max(max,\
    \ number);\n        result[i + 1] = max;\n    }\n    return result;\n}\n/*\n \
    \   From a given list of integers, generate a list of rolling minimum element\
    \ found until given moment\n    in the sequence.\n*/\nlong[] rolling_min(long[]\
    \ numbers) \n{\n    long[] result = new long[numbers.length];\n    long min =\
    \ numbers[0];\n    result[0] = min;\n    foreach(i, number; numbers[1..$]) \n\
    \    {\n        min = min(min, number);\n        result[i + 1] = min;\n    }\n\
    \    return result;\n}\n/*\n    From a given list of integers, generate a list\
    \ of rolling sum of elements found until given moment\n    in the sequence.\n\
    */\nlong[] rolling_sum(long[] numbers) \n{\n    long[] result = new long[numbers.length];\n\
    \    long sum = numbers[0];\n    result[0] = sum;\n    foreach(i, number; numbers[1..$])\
    \ \n    {\n        sum += number;\n        result[i + 1] = sum;\n    }\n    return\
    \ result;\n}\n/*\n    From a given list of integers, generate a list of rolling\
    \ product of elements found until given moment\n    in the sequence.\n*/\nlong[]\
    \ rolling_product(long[] numbers) \n{\n    long[] result = new long[numbers.length];\n\
    \    long product = numbers[0];\n    result[0] = product;\n    foreach(i, number;\
    \ numbers[1..$]) \n    {\n        product *= number;\n        result[i + 1] =\
    \ product;\n    }\n    return result;\n}\n/*\n    From a given list of integers,\
    \ generate a list of rolling average of elements found until given moment\n  \
    \  in the sequence.\n*/\nlong[] rolling_average(long[] numbers) \n{\n    long[]\
    \ result = new long[n\nunittest\n{\n    alias candidate = rolling_max;\n\n   \
    \ assert(candidate([]) == []);\n    assert(candidate([1L, 2L, 3L, 4L]) == [1L,\
    \ 2L, 3L, 4L]);\n    assert(candidate([4L, 3L, 2L, 1L]) == [4L, 4L, 4L, 4L]);\n\
    \    assert(candidate([3L, 2L, 3L, 100L, 3L]) == [3L, 3L, 3L, 100L, 100L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpvmxglnob.d(75): Error: found `unittest` when expecting `]`

    /tmp/tmpvmxglnob.d(76): Error: semicolon expected, not `{`

    /tmp/tmpvmxglnob.d(84): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvmxglnob.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163126
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max = numbers[0];\n    result[0]\
    \ = max;\n    foreach(i, number; numbers[1..$]) \n    {\n        max = max(max,\
    \ number);\n        result[i + 1] = max;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = rolling_max;\n\n    assert(candidate([]) == []);\n  \
    \  assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([4L,\
    \ 3L, 2L, 1L]) == [4L, 4L, 4L, 4L]);\n    assert(candidate([3L, 2L, 3L, 100L,\
    \ 3L]) == [3L, 3L, 3L, 100L, 100L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpdx8u7fve.d(15): Error: function expected before `()`, not `max`
    of type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdx8u7fve.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163126
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max = numbers[0];\n    foreach(i,\
    \ e; numbers)\n    {\n        if (e > max)\n            max = e;\n        result[i]\
    \ = max;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = rolling_max;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([1L, 2L, 3L, 4L]) ==\
    \ [1L, 2L, 3L, 4L]);\n    assert(candidate([4L, 3L, 2L, 1L]) == [4L, 4L, 4L, 4L]);\n\
    \    assert(candidate([3L, 2L, 3L, 100L, 3L]) == [3L, 3L, 3L, 100L, 100L]);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.RangeError@/tmp/tmpjwjbhmi4.d(11): Range violation

    ----------------

    ??:? _d_arrayboundsp [0x428536]

    ??:? long[] tmpjwjbhmi4.rolling_max(long[]) [0x427e62]

    ??:? void tmpjwjbhmi4.__unittest_L20_C1() [0x427f1a]

    ??:? void tmpjwjbhmi4.__modtest() [0x428208]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c563]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b3f6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430681]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430b30]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x43060d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b3cd]

    ??:? runModuleUnitTests [0x42c339]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function('
  stdout: ''
  timestamp: 1660163127
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result;\n    long max = 0;\n    foreach(i; 0 .. numbers.length) \n    {\n  \
    \      if (numbers[i] > max)\n            max = numbers[i];\n        result ~=\
    \ max;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = rolling_max;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([1L, 2L, 3L, 4L]) ==\
    \ [1L, 2L, 3L, 4L]);\n    assert(candidate([4L, 3L, 2L, 1L]) == [4L, 4L, 4L, 4L]);\n\
    \    assert(candidate([3L, 2L, 3L, 100L, 3L]) == [3L, 3L, 3L, 100L, 100L]);\n\
    }\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163127
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max = numbers[0];\n    for (int\
    \ i = 0; i < numbers.length; i++) \n    {\n        max = max(max, numbers[i]);\n\
    \        result[i] = max;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = rolling_max;\n\n    assert(candidate([]) == []);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([4L, 3L, 2L, 1L]) ==\
    \ [4L, 4L, 4L, 4L]);\n    assert(candidate([3L, 2L, 3L, 100L, 3L]) == [3L, 3L,\
    \ 3L, 100L, 100L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpvko_2ur3.d(14): Error: function expected before `()`, not `max`
    of type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvko_2ur3.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163126
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max = numbers[0];\n    result[0]\
    \ = max;\n    foreach(i, number; numbers[1..$]) \n    {\n        max = max(max,\
    \ number);\n        result[i + 1] = max;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = rolling_max;\n\n    assert(candidate([]) == []);\n  \
    \  assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([4L,\
    \ 3L, 2L, 1L]) == [4L, 4L, 4L, 4L]);\n    assert(candidate([3L, 2L, 3L, 100L,\
    \ 3L]) == [3L, 3L, 3L, 100L, 100L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpdx8u7fve.d(15): Error: function expected before `()`, not `max`
    of type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdx8u7fve.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163126
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max = numbers[0];\n    for (int\
    \ i = 0; i < numbers.length; i++) \n    {\n        if (numbers[i] > max) \n  \
    \      {\n            max = numbers[i];\n        }\n        result[i] = max;\n\
    \    }\n    return result;\n}\n/*\n    From a given list of integers, generate\
    \ a list of rolling minimum element found until given moment\n    in the sequence.\n\
    */\nlong[] rolling_min(long[] numbers) \n{\n    long[] result = new long[numbers.length];\n\
    \    long min = numbers[0];\n    for (int i = 0; i < numbers.length; i++) \n \
    \   {\n        if (numbers[i] < min) \n        {\n            min = numbers[i];\n\
    \        }\n        result[i] = min;\n    }\n    return result;\n}\n/*\n    From\
    \ a given list of integers, generate a list of rolling sum of elements found until\
    \ given moment\n    in the sequence.\n*/\nlong[] rolling_sum(long[] numbers) \n\
    {\n    long[] result = new long[numbers.length];\n    long sum = numbers[0];\n\
    \    for (int i = 0; i < numbers.length; i++) \n    {\n        sum += numbers[i];\n\
    \        result[i] = sum;\n    }\n    return result;\n}\n/*\n    From a given\
    \ list of integers, generate a list of rolling average of elements found until\
    \ given moment\n    in the sequence.\n*/\ndouble[] rolling_average(long[] numbers)\
    \ \n{\n    double[] result = new double[numbers.length];\n    long sum = numbers[0];\n\
    \    for (int i = 0; i < numbers.length; i++) \n    {\n        sum += numbers[i];\n\
    \        result[i] = sum / (i + 1);\n    }\n    return result;\n}\n/*\n    From\
    \ a given list of integers, generate a list of rolling standard deviation of elements\
    \ found until given moment\n    in the sequence.\n*/\ndouble[] rolling_standard_deviation(long[]\
    \ numbers) \n{\nunittest\n{\n    alias candidate = rolling_max;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([4L,\
    \ 3L, 2L, 1L]) == [4L, 4L, 4L, 4L]);\n    assert(candidate([3L, 2L, 3L, 100L,\
    \ 3L]) == [3L, 3L, 3L, 100L, 100L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmphyu9rkgt.d(76): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphyu9rkgt.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163126
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result;\n    long max = 0;\n    foreach(i; 0 .. numbers.length)\n    {\n   \
    \     max = max(max, numbers[i]);\n        result ~= max;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = rolling_max;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([4L,\
    \ 3L, 2L, 1L]) == [4L, 4L, 4L, 4L]);\n    assert(candidate([3L, 2L, 3L, 100L,\
    \ 3L]) == [3L, 3L, 3L, 100L, 100L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpk2ohobh2.d(14): Error: function expected before `()`, not `max`
    of type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk2ohobh2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163126
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max = numbers[0];\n    result[0]\
    \ = max;\n    foreach(i, v; numbers[1..$])\n    {\n        max = max(max, v);\n\
    \        result[i+1] = max;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = rolling_max;\n\n    assert(candidate([]) == []);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([4L, 3L, 2L, 1L]) ==\
    \ [4L, 4L, 4L, 4L]);\n    assert(candidate([3L, 2L, 3L, 100L, 3L]) == [3L, 3L,\
    \ 3L, 100L, 100L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpdlxxn86j.d(15): Error: function expected before `()`, not `max`
    of type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdlxxn86j.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163126
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max = numbers[0];\n    foreach(i,\
    \ number; numbers)\n    {\n        if (number > max)\n            max = number;\n\
    \        result[i] = max;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = rolling_max;\n\n    assert(candidate([]) == []);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([4L, 3L, 2L, 1L]) ==\
    \ [4L, 4L, 4L, 4L]);\n    assert(candidate([3L, 2L, 3L, 100L, 3L]) == [3L, 3L,\
    \ 3L, 100L, 100L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.RangeError@/tmp/tmp30i5kgta.d(11): Range violation

    ----------------

    ??:? _d_arrayboundsp [0x428536]

    ??:? long[] tmp30i5kgta.rolling_max(long[]) [0x427e62]

    ??:? void tmp30i5kgta.__unittest_L20_C1() [0x427f1a]

    ??:? void tmp30i5kgta.__modtest() [0x428208]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c563]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b3f6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430681]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430b30]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x43060d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b3cd]

    ??:? runModuleUnitTests [0x42c339]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function('
  stdout: ''
  timestamp: 1660163127
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max = numbers[0];\n    result[0]\
    \ = max;\n    foreach(i, number; numbers[1..$]) \n    {\n        max = max(max,\
    \ number);\n        result[i + 1] = max;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = rolling_max;\n\n    assert(candidate([]) == []);\n  \
    \  assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([4L,\
    \ 3L, 2L, 1L]) == [4L, 4L, 4L, 4L]);\n    assert(candidate([3L, 2L, 3L, 100L,\
    \ 3L]) == [3L, 3L, 3L, 100L, 100L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpdx8u7fve.d(15): Error: function expected before `()`, not `max`
    of type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdx8u7fve.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163126
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max = numbers[0];\n    for (int\
    \ i = 0; i < numbers.length; i++) \n    {\n        max = max(max, numbers[i]);\n\
    \        result[i] = max;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = rolling_max;\n\n    assert(candidate([]) == []);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([4L, 3L, 2L, 1L]) ==\
    \ [4L, 4L, 4L, 4L]);\n    assert(candidate([3L, 2L, 3L, 100L, 3L]) == [3L, 3L,\
    \ 3L, 100L, 100L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpvko_2ur3.d(14): Error: function expected before `()`, not `max`
    of type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvko_2ur3.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163126
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max = numbers[0];\n    foreach(i,\
    \ e; numbers) \n    {\n        max = max(max, e);\n        result[i] = max;\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = rolling_max;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([1L, 2L, 3L, 4L]) ==\
    \ [1L, 2L, 3L, 4L]);\n    assert(candidate([4L, 3L, 2L, 1L]) == [4L, 4L, 4L, 4L]);\n\
    \    assert(candidate([3L, 2L, 3L, 100L, 3L]) == [3L, 3L, 3L, 100L, 100L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpuqc8ue1c.d(14): Error: function expected before `()`, not `max`
    of type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpuqc8ue1c.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163126
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max = numbers[0];\n    foreach(i,\
    \ n; numbers) \n    {\n        max = max(max, n);\n        result[i] = max;\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = rolling_max;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([1L, 2L, 3L, 4L]) ==\
    \ [1L, 2L, 3L, 4L]);\n    assert(candidate([4L, 3L, 2L, 1L]) == [4L, 4L, 4L, 4L]);\n\
    \    assert(candidate([3L, 2L, 3L, 100L, 3L]) == [3L, 3L, 3L, 100L, 100L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpfvn4o0lh.d(14): Error: function expected before `()`, not `max`
    of type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfvn4o0lh.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163126
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max = numbers[0];\n    result[0]\
    \ = max;\n    foreach(i, number; numbers[1..$]) \n    {\n        max = max(max,\
    \ number);\n        result[i+1] = max;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = rolling_max;\n\n    assert(candidate([]) == []);\n  \
    \  assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([4L,\
    \ 3L, 2L, 1L]) == [4L, 4L, 4L, 4L]);\n    assert(candidate([3L, 2L, 3L, 100L,\
    \ 3L]) == [3L, 3L, 3L, 100L, 100L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpjqdboio1.d(15): Error: function expected before `()`, not `max`
    of type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjqdboio1.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163126
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max = numbers[0];\n    foreach(i,\
    \ number; numbers) \n    {\n        max = max(max, number);\n        result[i]\
    \ = max;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = rolling_max;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([1L, 2L, 3L, 4L]) ==\
    \ [1L, 2L, 3L, 4L]);\n    assert(candidate([4L, 3L, 2L, 1L]) == [4L, 4L, 4L, 4L]);\n\
    \    assert(candidate([3L, 2L, 3L, 100L, 3L]) == [3L, 3L, 3L, 100L, 100L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpua9cu4uc.d(14): Error: function expected before `()`, not `max`
    of type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpua9cu4uc.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163126
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max = numbers[0];\n    foreach(i,\
    \ v; numbers) \n    {\n        max = max(max, v);\n        result[i] = max;\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = rolling_max;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([1L, 2L, 3L, 4L]) ==\
    \ [1L, 2L, 3L, 4L]);\n    assert(candidate([4L, 3L, 2L, 1L]) == [4L, 4L, 4L, 4L]);\n\
    \    assert(candidate([3L, 2L, 3L, 100L, 3L]) == [3L, 3L, 3L, 100L, 100L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpgqfrtbyu.d(14): Error: function expected before `()`, not `max`
    of type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgqfrtbyu.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163126
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ max_list;\n    long max_so_far = numbers[0];\n    foreach(i, number; numbers)\
    \ \n    {\n        max_so_far = max(max_so_far, number);\n        max_list ~=\
    \ max_so_far;\n    }\n    return max_list;\n}\nunittest\n{\n    alias candidate\
    \ = rolling_max;\n\n    assert(candidate([]) == []);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([4L, 3L, 2L, 1L]) ==\
    \ [4L, 4L, 4L, 4L]);\n    assert(candidate([3L, 2L, 3L, 100L, 3L]) == [3L, 3L,\
    \ 3L, 100L, 100L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpnd_c9mlh.d(14): Error: undefined identifier `max`, did you mean
    function `fmax`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnd_c9mlh.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163126
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max = numbers[0];\n    foreach(i,\
    \ e; numbers) \n    {\n        if (e > max) \n        {\n            max = e;\n\
    \        }\n        result[i] = max;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = rolling_max;\n\n    assert(candidate([]) == []);\n  \
    \  assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([4L,\
    \ 3L, 2L, 1L]) == [4L, 4L, 4L, 4L]);\n    assert(candidate([3L, 2L, 3L, 100L,\
    \ 3L]) == [3L, 3L, 3L, 100L, 100L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.RangeError@/tmp/tmp5wiod9hu.d(11): Range violation

    ----------------

    ??:? _d_arrayboundsp [0x428536]

    ??:? long[] tmp5wiod9hu.rolling_max(long[]) [0x427e62]

    ??:? void tmp5wiod9hu.__unittest_L22_C1() [0x427f1a]

    ??:? void tmp5wiod9hu.__modtest() [0x428208]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c563]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b3f6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430681]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430b30]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x43060d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b3cd]

    ??:? runModuleUnitTests [0x42c339]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function('
  stdout: ''
  timestamp: 1660163127
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max = numbers[0];\n    for (int\
    \ i = 0; i < numbers.length; i++) \n    {\n        if (numbers[i] > max) \n  \
    \      {\n            max = numbers[i];\n        }\n        result[i] = max;\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = rolling_max;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([1L, 2L, 3L, 4L]) ==\
    \ [1L, 2L, 3L, 4L]);\n    assert(candidate([4L, 3L, 2L, 1L]) == [4L, 4L, 4L, 4L]);\n\
    \    assert(candidate([3L, 2L, 3L, 100L, 3L]) == [3L, 3L, 3L, 100L, 100L]);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.RangeError@/tmp/tmpnk8_htog.d(11): Range violation

    ----------------

    ??:? _d_arrayboundsp [0x428566]

    ??:? long[] tmpnk8_htog.rolling_max(long[]) [0x427e62]

    ??:? void tmpnk8_htog.__unittest_L22_C1() [0x427f4a]

    ??:? void tmpnk8_htog.__modtest() [0x428238]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c593]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b426]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4306b1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430b60]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x43063d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b3fd]

    ??:? runModuleUnitTests [0x42c369]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function('
  stdout: ''
  timestamp: 1660163126
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max = numbers[0];\n    foreach(i,\
    \ v; numbers) \n    {\n        max = max(max, v);\n        result[i] = max;\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = rolling_max;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([1L, 2L, 3L, 4L]) ==\
    \ [1L, 2L, 3L, 4L]);\n    assert(candidate([4L, 3L, 2L, 1L]) == [4L, 4L, 4L, 4L]);\n\
    \    assert(candidate([3L, 2L, 3L, 100L, 3L]) == [3L, 3L, 3L, 100L, 100L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpgqfrtbyu.d(14): Error: function expected before `()`, not `max`
    of type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgqfrtbyu.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163126
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max = numbers[0];\n    result[0]\
    \ = max;\n    foreach(i, number; numbers[1..$])\n    {\n        max = max(max,\
    \ number);\n        result[i + 1] = max;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = rolling_max;\n\n    assert(candidate([]) == []);\n  \
    \  assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([4L,\
    \ 3L, 2L, 1L]) == [4L, 4L, 4L, 4L]);\n    assert(candidate([3L, 2L, 3L, 100L,\
    \ 3L]) == [3L, 3L, 3L, 100L, 100L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp9jvz2cjh.d(15): Error: function expected before `()`, not `max`
    of type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9jvz2cjh.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163126
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max_so_far = numbers[0];\n    foreach(i,\
    \ e; numbers)\n    {\n        max_so_far = max(max_so_far, e);\n        result[i]\
    \ = max_so_far;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = rolling_max;\n\n    assert(candidate([]) == []);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([4L, 3L, 2L, 1L]) ==\
    \ [4L, 4L, 4L, 4L]);\n    assert(candidate([3L, 2L, 3L, 100L, 3L]) == [3L, 3L,\
    \ 3L, 100L, 100L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpau_z0d3e.d(14): Error: undefined identifier `max`, did you mean
    function `fmax`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpau_z0d3e.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163127
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max = numbers[0];\n    result[0]\
    \ = max;\n    foreach(i, number; numbers[1..$]) \n    {\n        max = max(max,\
    \ number);\n        result[i + 1] = max;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = rolling_max;\n\n    assert(candidate([]) == []);\n  \
    \  assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([4L,\
    \ 3L, 2L, 1L]) == [4L, 4L, 4L, 4L]);\n    assert(candidate([3L, 2L, 3L, 100L,\
    \ 3L]) == [3L, 3L, 3L, 100L, 100L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpdx8u7fve.d(15): Error: function expected before `()`, not `max`
    of type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdx8u7fve.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163126
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max = numbers[0];\n    result[0]\
    \ = max;\n    foreach(i, n; numbers[1..$])\n    {\n        max = max(max, n);\n\
    \        result[i+1] = max;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = rolling_max;\n\n    assert(candidate([]) == []);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([4L, 3L, 2L, 1L]) ==\
    \ [4L, 4L, 4L, 4L]);\n    assert(candidate([3L, 2L, 3L, 100L, 3L]) == [3L, 3L,\
    \ 3L, 100L, 100L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpj1r0p9y5.d(15): Error: function expected before `()`, not `max`
    of type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpj1r0p9y5.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163127
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    auto max = numbers[0];\n    for (size_t\
    \ i = 0; i < numbers.length; i++) \n    {\n        max = max(max, numbers[i]);\n\
    \        result[i] = max;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = rolling_max;\n\n    assert(candidate([]) == []);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([4L, 3L, 2L, 1L]) ==\
    \ [4L, 4L, 4L, 4L]);\n    assert(candidate([3L, 2L, 3L, 100L, 3L]) == [3L, 3L,\
    \ 3L, 100L, 100L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp0wpgyfuf.d(14): Error: function expected before `()`, not `max`
    of type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0wpgyfuf.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163127
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max = numbers[0];\n    foreach(i,\
    \ v; numbers) \n    {\n        if (v > max) \n        {\n            max = v;\n\
    \        }\n        result[i] = max;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = rolling_max;\n\n    assert(candidate([]) == []);\n  \
    \  assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([4L,\
    \ 3L, 2L, 1L]) == [4L, 4L, 4L, 4L]);\n    assert(candidate([3L, 2L, 3L, 100L,\
    \ 3L]) == [3L, 3L, 3L, 100L, 100L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.RangeError@/tmp/tmpbhpnl91f.d(11): Range violation

    ----------------

    ??:? _d_arrayboundsp [0x428536]

    ??:? long[] tmpbhpnl91f.rolling_max(long[]) [0x427e62]

    ??:? void tmpbhpnl91f.__unittest_L22_C1() [0x427f1a]

    ??:? void tmpbhpnl91f.__modtest() [0x428208]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c563]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b3f6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430681]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430b30]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x43060d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b3cd]

    ??:? runModuleUnitTests [0x42c339]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function('
  stdout: ''
  timestamp: 1660163127
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max = numbers[0];\n    foreach(i,\
    \ v; numbers)\n    {\n        max = max(max, v);\n        result[i] = max;\n \
    \   }\n    return result;\n}\nunittest\n{\n    alias candidate = rolling_max;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([1L, 2L, 3L, 4L]) ==\
    \ [1L, 2L, 3L, 4L]);\n    assert(candidate([4L, 3L, 2L, 1L]) == [4L, 4L, 4L, 4L]);\n\
    \    assert(candidate([3L, 2L, 3L, 100L, 3L]) == [3L, 3L, 3L, 100L, 100L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbejoav_x.d(14): Error: function expected before `()`, not `max`
    of type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbejoav_x.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163126
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max = numbers[0];\n    result[0]\
    \ = max;\n    foreach(i, number; numbers[1..$]) \n    {\n        max = max(max,\
    \ number);\n        result[i + 1] = max;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = rolling_max;\n\n    assert(candidate([]) == []);\n  \
    \  assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([4L,\
    \ 3L, 2L, 1L]) == [4L, 4L, 4L, 4L]);\n    assert(candidate([3L, 2L, 3L, 100L,\
    \ 3L]) == [3L, 3L, 3L, 100L, 100L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpdx8u7fve.d(15): Error: function expected before `()`, not `max`
    of type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdx8u7fve.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163126
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max = numbers[0];\n    foreach(i,\
    \ e; numbers) \n    {\n        if (e > max) \n        {\n            max = e;\n\
    \        }\n        result[i] = max;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = rolling_max;\n\n    assert(candidate([]) == []);\n  \
    \  assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([4L,\
    \ 3L, 2L, 1L]) == [4L, 4L, 4L, 4L]);\n    assert(candidate([3L, 2L, 3L, 100L,\
    \ 3L]) == [3L, 3L, 3L, 100L, 100L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.RangeError@/tmp/tmp5wiod9hu.d(11): Range violation

    ----------------

    ??:? _d_arrayboundsp [0x428536]

    ??:? long[] tmp5wiod9hu.rolling_max(long[]) [0x427e62]

    ??:? void tmp5wiod9hu.__unittest_L22_C1() [0x427f1a]

    ??:? void tmp5wiod9hu.__modtest() [0x428208]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c563]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b3f6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430681]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430b30]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x43060d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b3cd]

    ??:? runModuleUnitTests [0x42c339]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function('
  stdout: ''
  timestamp: 1660163127
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max = numbers[0];\n    for (int\
    \ i = 0; i < numbers.length; i++) {\n        if (numbers[i] > max) {\n       \
    \     max = numbers[i];\n        }\n        result[i] = max;\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = rolling_max;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([4L,\
    \ 3L, 2L, 1L]) == [4L, 4L, 4L, 4L]);\n    assert(candidate([3L, 2L, 3L, 100L,\
    \ 3L]) == [3L, 3L, 3L, 100L, 100L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.RangeError@/tmp/tmpwaqubrqp.d(11): Range violation

    ----------------

    ??:? _d_arrayboundsp [0x428566]

    ??:? long[] tmpwaqubrqp.rolling_max(long[]) [0x427e62]

    ??:? void tmpwaqubrqp.__unittest_L20_C1() [0x427f4a]

    ??:? void tmpwaqubrqp.__modtest() [0x428238]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c593]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b426]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4306b1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430b60]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x43063d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b3fd]

    ??:? runModuleUnitTests [0x42c369]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function('
  stdout: ''
  timestamp: 1660163127
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result;\n    result.length = numbers.length;\n    result[0] = numbers[0];\n\
    \    foreach(i, ref n; numbers[1..$]) \n    {\n        result[i] = max(result[i-1],\
    \ n);\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = rolling_max;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([1L, 2L, 3L, 4L]) ==\
    \ [1L, 2L, 3L, 4L]);\n    assert(candidate([4L, 3L, 2L, 1L]) == [4L, 4L, 4L, 4L]);\n\
    \    assert(candidate([3L, 2L, 3L, 100L, 3L]) == [3L, 3L, 3L, 100L, 100L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpc6bv80we.d(15): Error: undefined identifier `max`, did you mean
    function `fmax`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpc6bv80we.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163127
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max = numbers[0];\n    for (int\
    \ i = 0; i < numbers.length; i++) \n    {\n        if (numbers[i] > max) \n  \
    \      {\n            max = numbers[i];\n        }\n        result[i] = max;\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = rolling_max;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([1L, 2L, 3L, 4L]) ==\
    \ [1L, 2L, 3L, 4L]);\n    assert(candidate([4L, 3L, 2L, 1L]) == [4L, 4L, 4L, 4L]);\n\
    \    assert(candidate([3L, 2L, 3L, 100L, 3L]) == [3L, 3L, 3L, 100L, 100L]);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.RangeError@/tmp/tmpnk8_htog.d(11): Range violation

    ----------------

    ??:? _d_arrayboundsp [0x428566]

    ??:? long[] tmpnk8_htog.rolling_max(long[]) [0x427e62]

    ??:? void tmpnk8_htog.__unittest_L22_C1() [0x427f4a]

    ??:? void tmpnk8_htog.__modtest() [0x428238]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c593]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b426]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4306b1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430b60]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x43063d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b3fd]

    ??:? runModuleUnitTests [0x42c369]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function('
  stdout: ''
  timestamp: 1660163126
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max = numbers[0];\n    result[0]\
    \ = max;\n    foreach(i, number; numbers[1..$])\n    {\n        max = max(max,\
    \ number);\n        result[i+1] = max;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = rolling_max;\n\n    assert(candidate([]) == []);\n  \
    \  assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([4L,\
    \ 3L, 2L, 1L]) == [4L, 4L, 4L, 4L]);\n    assert(candidate([3L, 2L, 3L, 100L,\
    \ 3L]) == [3L, 3L, 3L, 100L, 100L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp5ka8_lim.d(15): Error: function expected before `()`, not `max`
    of type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5ka8_lim.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163126
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max = numbers[0];\n    for (int\
    \ i = 0; i < numbers.length; i++) \n    {\n        if (numbers[i] > max) \n  \
    \      {\n            max = numbers[i];\n        }\n        result[i] = max;\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = rolling_max;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([1L, 2L, 3L, 4L]) ==\
    \ [1L, 2L, 3L, 4L]);\n    assert(candidate([4L, 3L, 2L, 1L]) == [4L, 4L, 4L, 4L]);\n\
    \    assert(candidate([3L, 2L, 3L, 100L, 3L]) == [3L, 3L, 3L, 100L, 100L]);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.RangeError@/tmp/tmpnk8_htog.d(11): Range violation

    ----------------

    ??:? _d_arrayboundsp [0x428566]

    ??:? long[] tmpnk8_htog.rolling_max(long[]) [0x427e62]

    ??:? void tmpnk8_htog.__unittest_L22_C1() [0x427f4a]

    ??:? void tmpnk8_htog.__modtest() [0x428238]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c593]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b426]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4306b1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430b60]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x43063d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b3fd]

    ??:? runModuleUnitTests [0x42c369]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function('
  stdout: ''
  timestamp: 1660163126
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max = numbers[0];\n    foreach(i,\
    \ e; numbers) \n    {\n        if (e > max) \n        {\n            max = e;\n\
    \        }\n        result[i] = max;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = rolling_max;\n\n    assert(candidate([]) == []);\n  \
    \  assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([4L,\
    \ 3L, 2L, 1L]) == [4L, 4L, 4L, 4L]);\n    assert(candidate([3L, 2L, 3L, 100L,\
    \ 3L]) == [3L, 3L, 3L, 100L, 100L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.RangeError@/tmp/tmp5wiod9hu.d(11): Range violation

    ----------------

    ??:? _d_arrayboundsp [0x428536]

    ??:? long[] tmp5wiod9hu.rolling_max(long[]) [0x427e62]

    ??:? void tmp5wiod9hu.__unittest_L22_C1() [0x427f1a]

    ??:? void tmp5wiod9hu.__modtest() [0x428208]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c563]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b3f6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430681]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430b30]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x43060d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b3cd]

    ??:? runModuleUnitTests [0x42c339]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function('
  stdout: ''
  timestamp: 1660163127
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max = numbers[0];\n    foreach(i,\
    \ e; numbers) \n    {\n        max = max(max, e);\n        result[i] = max;\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = rolling_max;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([1L, 2L, 3L, 4L]) ==\
    \ [1L, 2L, 3L, 4L]);\n    assert(candidate([4L, 3L, 2L, 1L]) == [4L, 4L, 4L, 4L]);\n\
    \    assert(candidate([3L, 2L, 3L, 100L, 3L]) == [3L, 3L, 3L, 100L, 100L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpuqc8ue1c.d(14): Error: function expected before `()`, not `max`
    of type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpuqc8ue1c.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163126
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max = numbers[0];\n    foreach(i,\
    \ number; numbers)\n    {\n        max = max(max, number);\n        result[i]\
    \ = max;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = rolling_max;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([1L, 2L, 3L, 4L]) ==\
    \ [1L, 2L, 3L, 4L]);\n    assert(candidate([4L, 3L, 2L, 1L]) == [4L, 4L, 4L, 4L]);\n\
    \    assert(candidate([3L, 2L, 3L, 100L, 3L]) == [3L, 3L, 3L, 100L, 100L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmppo5mqrs_.d(14): Error: function expected before `()`, not `max`
    of type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmppo5mqrs_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163127
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max = numbers[0];\n    for (int\
    \ i = 0; i < numbers.length; i++) {\n        max = max(max, numbers[i]);\n   \
    \     result[i] = max;\n    }\n    return result;\n}\n/*\n From a given list of\
    \ integers, generate a list of rolling minimum element found until given moment\n\
    \    in the sequence.\n        \n*/\nlong[] rolling_min(long[] numbers) \n{\n\
    \    long[] result = new long[numbers.length];\n    long min = numbers[0];\n \
    \   for (int i = 0; i < numbers.length; i++) {\n        min = min(min, numbers[i]);\n\
    \        result[i] = min;\n    }\n    return result;\n}\n/*\n From a given list\
    \ of integers, generate a list of rolling sum of elements found until given moment\n\
    \    in the sequence.\n        \n*/\nlong[] rolling_sum(long[] numbers) \n{\n\
    \    long[] result = new long[numbers.length];\n    long sum = numbers[0];\n \
    \   for (int i = 0; i < numbers.length; i++) {\n        sum += numbers[i];\n \
    \       result[i] = sum;\n    }\n    return result;\n}\n/*\n From a given list\
    \ of integers, generate a list of rolling product of elements found until given\
    \ moment\n    in the sequence.\n        \n*/\nlong[] rolling_product(long[] numbers)\
    \ \n{\n    long[] result = new long[numbers.length];\n    long product = numbers[0];\n\
    \    for (int i = 0; i < numbers.length; i++) {\n        product *= numbers[i];\n\
    \        result[i] = product;\n    }\n    return result;\n}\n/*\n From a given\
    \ list of integers, generate a list of rolling average of elements found until\
    \ given moment\n    in the sequence.\n        \n*/\ndouble[] rolling_average(long[]\
    \ numbers) \n{\n    double[] result = new double[numbers.length];\n    long sum\
    \ = numbers[0];\n    for (int i = 0; i < numbers.length; i++) {\n        sum +=\
    \ numbers\nunittest\n{\n    alias candidate = rolling_max;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([4L,\
    \ 3L, 2L, 1L]) == [4L, 4L, 4L, 4L]);\n    assert(candidate([3L, 2L, 3L, 100L,\
    \ 3L]) == [3L, 3L, 3L, 100L, 100L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp5ntp9y8z.d(74): Error: found `unittest` when expecting `;` following
    statement

    /tmp/tmp5ntp9y8z.d(83): Error: found `End of File` when expecting `}` following
    compound statement

    /tmp/tmp5ntp9y8z.d(83): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5ntp9y8z.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163126
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max = numbers[0];\n    result[0]\
    \ = max;\n    foreach(i, number; numbers[1..$])\n    {\n        max = max(max,\
    \ number);\n        result[i + 1] = max;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = rolling_max;\n\n    assert(candidate([]) == []);\n  \
    \  assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([4L,\
    \ 3L, 2L, 1L]) == [4L, 4L, 4L, 4L]);\n    assert(candidate([3L, 2L, 3L, 100L,\
    \ 3L]) == [3L, 3L, 3L, 100L, 100L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp9jvz2cjh.d(15): Error: function expected before `()`, not `max`
    of type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9jvz2cjh.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163126
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    result[0] = numbers[0];\n    foreach(i;\
    \ 1..numbers.length)\n    {\n        result[i] = max(result[i-1], numbers[i]);\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = rolling_max;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([1L, 2L, 3L, 4L]) ==\
    \ [1L, 2L, 3L, 4L]);\n    assert(candidate([4L, 3L, 2L, 1L]) == [4L, 4L, 4L, 4L]);\n\
    \    assert(candidate([3L, 2L, 3L, 100L, 3L]) == [3L, 3L, 3L, 100L, 100L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp2zkvyl2j.d(14): Error: undefined identifier `max`, did you mean
    function `fmax`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2zkvyl2j.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163126
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max = numbers[0];\n    result[0]\
    \ = max;\n    foreach(i, e; numbers[1..$]) \n    {\n        max = max(max, e);\n\
    \        result[i+1] = max;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = rolling_max;\n\n    assert(candidate([]) == []);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([4L, 3L, 2L, 1L]) ==\
    \ [4L, 4L, 4L, 4L]);\n    assert(candidate([3L, 2L, 3L, 100L, 3L]) == [3L, 3L,\
    \ 3L, 100L, 100L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp5ngb0l_9.d(15): Error: function expected before `()`, not `max`
    of type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5ngb0l_9.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163127
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max = numbers[0];\n    result[0]\
    \ = max;\n    foreach(i, e; numbers[1..$]) \n    {\n        if (e > max) \n  \
    \      {\n            max = e;\n        }\n        result[i + 1] = max;\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = rolling_max;\n\n  \
    \  assert(candidate([]) == []);\n    assert(candidate([1L, 2L, 3L, 4L]) == [1L,\
    \ 2L, 3L, 4L]);\n    assert(candidate([4L, 3L, 2L, 1L]) == [4L, 4L, 4L, 4L]);\n\
    \    assert(candidate([3L, 2L, 3L, 100L, 3L]) == [3L, 3L, 3L, 100L, 100L]);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.RangeError@/tmp/tmp_bp4zpcz.d(11): Range violation

    ----------------

    ??:? _d_arrayboundsp [0x42857e]

    ??:? long[] tmp_bp4zpcz.rolling_max(long[]) [0x427e62]

    ??:? void tmp_bp4zpcz.__unittest_L23_C1() [0x427f5e]

    ??:? void tmp_bp4zpcz.__modtest() [0x42824c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c5ab]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b43e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4306c9]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430b78]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430655]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b415]

    ??:? runModuleUnitTests [0x42c381]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function('
  stdout: ''
  timestamp: 1660163127
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result;\n    long max = numbers[0];\n    foreach(i, n; numbers)\n    {\n   \
    \     if (n > max)\n            max = n;\n        result ~= max;\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = rolling_max;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([4L,\
    \ 3L, 2L, 1L]) == [4L, 4L, 4L, 4L]);\n    assert(candidate([3L, 2L, 3L, 100L,\
    \ 3L]) == [3L, 3L, 3L, 100L, 100L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.RangeError@/tmp/tmpa6if6i12.d(11): Range violation

    ----------------

    ??:? _d_arrayboundsp [0x42852e]

    ??:? long[] tmpa6if6i12.rolling_max(long[]) [0x427e5b]

    ??:? void tmpa6if6i12.__unittest_L20_C1() [0x427f0e]

    ??:? void tmpa6if6i12.__modtest() [0x4281fc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42ceeb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42bd7e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4307d1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430c80]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x43075d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42bd55]

    ??:? runModuleUnitTests [0x42ccc1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function('
  stdout: ''
  timestamp: 1660163127
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result;\n    long max = 0;\n    foreach(i; 0 .. numbers.length) \n    {\n  \
    \      max = max(max, numbers[i]);\n        result ~= max;\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = rolling_max;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([4L,\
    \ 3L, 2L, 1L]) == [4L, 4L, 4L, 4L]);\n    assert(candidate([3L, 2L, 3L, 100L,\
    \ 3L]) == [3L, 3L, 3L, 100L, 100L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmppw9wtkoi.d(14): Error: function expected before `()`, not `max`
    of type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmppw9wtkoi.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163126
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max = numbers[0];\n    for (int\
    \ i = 0; i < numbers.length; i++) \n    {\n        max = max(max, numbers[i]);\n\
    \        result[i] = max;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = rolling_max;\n\n    assert(candidate([]) == []);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([4L, 3L, 2L, 1L]) ==\
    \ [4L, 4L, 4L, 4L]);\n    assert(candidate([3L, 2L, 3L, 100L, 3L]) == [3L, 3L,\
    \ 3L, 100L, 100L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpvko_2ur3.d(14): Error: function expected before `()`, not `max`
    of type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvko_2ur3.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163126
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max = numbers[0];\n    result[0]\
    \ = max;\n    foreach(i, e; numbers[1..$])\n    {\n        max = max(max, e);\n\
    \        result[i+1] = max;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = rolling_max;\n\n    assert(candidate([]) == []);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([4L, 3L, 2L, 1L]) ==\
    \ [4L, 4L, 4L, 4L]);\n    assert(candidate([3L, 2L, 3L, 100L, 3L]) == [3L, 3L,\
    \ 3L, 100L, 100L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpammllsox.d(15): Error: function expected before `()`, not `max`
    of type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpammllsox.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163127
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max = numbers[0];\n    for (int\
    \ i = 0; i < numbers.length; i++) {\n        max = max(max, numbers[i]);\n   \
    \     result[i] = max;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = rolling_max;\n\n    assert(candidate([]) == []);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([4L, 3L, 2L, 1L]) ==\
    \ [4L, 4L, 4L, 4L]);\n    assert(candidate([3L, 2L, 3L, 100L, 3L]) == [3L, 3L,\
    \ 3L, 100L, 100L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp0sesd5jb.d(13): Error: function expected before `()`, not `max`
    of type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0sesd5jb.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163126
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max = numbers[0];\n    for (int\
    \ i = 0; i < numbers.length; i++) {\n        max = max(max, numbers[i]);\n   \
    \     result[i] = max;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = rolling_max;\n\n    assert(candidate([]) == []);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([4L, 3L, 2L, 1L]) ==\
    \ [4L, 4L, 4L, 4L]);\n    assert(candidate([3L, 2L, 3L, 100L, 3L]) == [3L, 3L,\
    \ 3L, 100L, 100L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp0sesd5jb.d(13): Error: function expected before `()`, not `max`
    of type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0sesd5jb.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163126
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max = numbers[0];\n    result[0]\
    \ = max;\n    foreach(i,n; numbers[1..$])\n    {\n        max = max(max,n);\n\
    \        result[i+1] = max;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = rolling_max;\n\n    assert(candidate([]) == []);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([4L, 3L, 2L, 1L]) ==\
    \ [4L, 4L, 4L, 4L]);\n    assert(candidate([3L, 2L, 3L, 100L, 3L]) == [3L, 3L,\
    \ 3L, 100L, 100L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp223mlc98.d(15): Error: function expected before `()`, not `max`
    of type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp223mlc98.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163127
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max = numbers[0];\n    result[0]\
    \ = max;\n    foreach(i, number; numbers[1..$])\n    {\n        max = max(max,\
    \ number);\n        result[i + 1] = max;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = rolling_max;\n\n    assert(candidate([]) == []);\n  \
    \  assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([4L,\
    \ 3L, 2L, 1L]) == [4L, 4L, 4L, 4L]);\n    assert(candidate([3L, 2L, 3L, 100L,\
    \ 3L]) == [3L, 3L, 3L, 100L, 100L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp9jvz2cjh.d(15): Error: function expected before `()`, not `max`
    of type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9jvz2cjh.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163126
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max = numbers[0];\n    foreach(i,\
    \ v; numbers)\n    {\n        if (v > max)\n            max = v;\n        result[i]\
    \ = max;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = rolling_max;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([1L, 2L, 3L, 4L]) ==\
    \ [1L, 2L, 3L, 4L]);\n    assert(candidate([4L, 3L, 2L, 1L]) == [4L, 4L, 4L, 4L]);\n\
    \    assert(candidate([3L, 2L, 3L, 100L, 3L]) == [3L, 3L, 3L, 100L, 100L]);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.RangeError@/tmp/tmp8a7a5_xy.d(11): Range violation

    ----------------

    ??:? _d_arrayboundsp [0x428536]

    ??:? long[] tmp8a7a5_xy.rolling_max(long[]) [0x427e62]

    ??:? void tmp8a7a5_xy.__unittest_L20_C1() [0x427f1a]

    ??:? void tmp8a7a5_xy.__modtest() [0x428208]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c563]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b3f6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430681]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430b30]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x43060d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b3cd]

    ??:? runModuleUnitTests [0x42c339]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function('
  stdout: ''
  timestamp: 1660163127
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max = numbers[0];\n    result[0]\
    \ = max;\n    foreach(i, number; numbers[1..$]) \n    {\n        max = max(max,\
    \ number);\n        result[i + 1] = max;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = rolling_max;\n\n    assert(candidate([]) == []);\n  \
    \  assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([4L,\
    \ 3L, 2L, 1L]) == [4L, 4L, 4L, 4L]);\n    assert(candidate([3L, 2L, 3L, 100L,\
    \ 3L]) == [3L, 3L, 3L, 100L, 100L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpdx8u7fve.d(15): Error: function expected before `()`, not `max`
    of type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdx8u7fve.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163126
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max = numbers[0];\n    for (int\
    \ i = 0; i < numbers.length; i++) \n    {\n        max = max(max, numbers[i]);\n\
    \        result[i] = max;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = rolling_max;\n\n    assert(candidate([]) == []);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([4L, 3L, 2L, 1L]) ==\
    \ [4L, 4L, 4L, 4L]);\n    assert(candidate([3L, 2L, 3L, 100L, 3L]) == [3L, 3L,\
    \ 3L, 100L, 100L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpvko_2ur3.d(14): Error: function expected before `()`, not `max`
    of type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvko_2ur3.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163126
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max = numbers[0];\n    result[0]\
    \ = max;\n    foreach(i, e; numbers[1..$]) \n    {\n        if (e > max) \n  \
    \      {\n            max = e;\n        }\n        result[i+1] = max;\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = rolling_max;\n\n  \
    \  assert(candidate([]) == []);\n    assert(candidate([1L, 2L, 3L, 4L]) == [1L,\
    \ 2L, 3L, 4L]);\n    assert(candidate([4L, 3L, 2L, 1L]) == [4L, 4L, 4L, 4L]);\n\
    \    assert(candidate([3L, 2L, 3L, 100L, 3L]) == [3L, 3L, 3L, 100L, 100L]);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.RangeError@/tmp/tmp59wb5m2t.d(11): Range violation

    ----------------

    ??:? _d_arrayboundsp [0x42857e]

    ??:? long[] tmp59wb5m2t.rolling_max(long[]) [0x427e62]

    ??:? void tmp59wb5m2t.__unittest_L23_C1() [0x427f5e]

    ??:? void tmp59wb5m2t.__modtest() [0x42824c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c5ab]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b43e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4306c9]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430b78]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430655]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b415]

    ??:? runModuleUnitTests [0x42c381]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function('
  stdout: ''
  timestamp: 1660163127
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max_so_far = numbers[0];\n    result[0]\
    \ = max_so_far;\n    foreach(i, number; numbers[1..$]) \n    {\n        max_so_far\
    \ = max(max_so_far, number);\n        result[i+1] = max_so_far;\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = rolling_max;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([4L,\
    \ 3L, 2L, 1L]) == [4L, 4L, 4L, 4L]);\n    assert(candidate([3L, 2L, 3L, 100L,\
    \ 3L]) == [3L, 3L, 3L, 100L, 100L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpi7c5_16i.d(15): Error: undefined identifier `max`, did you mean
    function `fmax`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpi7c5_16i.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163127
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max = numbers[0];\n    result[0]\
    \ = max;\n    foreach(i, number; numbers[1..$]) \n    {\n        max = max(max,\
    \ number);\n        result[i + 1] = max;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = rolling_max;\n\n    assert(candidate([]) == []);\n  \
    \  assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([4L,\
    \ 3L, 2L, 1L]) == [4L, 4L, 4L, 4L]);\n    assert(candidate([3L, 2L, 3L, 100L,\
    \ 3L]) == [3L, 3L, 3L, 100L, 100L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpdx8u7fve.d(15): Error: function expected before `()`, not `max`
    of type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdx8u7fve.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163126
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max = numbers[0];\n    foreach(i,\
    \ e; numbers)\n    {\n        if (e > max)\n            max = e;\n        result[i]\
    \ = max;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = rolling_max;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([1L, 2L, 3L, 4L]) ==\
    \ [1L, 2L, 3L, 4L]);\n    assert(candidate([4L, 3L, 2L, 1L]) == [4L, 4L, 4L, 4L]);\n\
    \    assert(candidate([3L, 2L, 3L, 100L, 3L]) == [3L, 3L, 3L, 100L, 100L]);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.RangeError@/tmp/tmpjwjbhmi4.d(11): Range violation

    ----------------

    ??:? _d_arrayboundsp [0x428536]

    ??:? long[] tmpjwjbhmi4.rolling_max(long[]) [0x427e62]

    ??:? void tmpjwjbhmi4.__unittest_L20_C1() [0x427f1a]

    ??:? void tmpjwjbhmi4.__modtest() [0x428208]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c563]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b3f6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430681]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430b30]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x43060d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b3cd]

    ??:? runModuleUnitTests [0x42c339]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function('
  stdout: ''
  timestamp: 1660163127
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max = numbers[0];\n    result[0]\
    \ = max;\n    foreach(i, number; numbers[1..$])\n    {\n        max = max(max,\
    \ number);\n        result[i + 1] = max;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = rolling_max;\n\n    assert(candidate([]) == []);\n  \
    \  assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([4L,\
    \ 3L, 2L, 1L]) == [4L, 4L, 4L, 4L]);\n    assert(candidate([3L, 2L, 3L, 100L,\
    \ 3L]) == [3L, 3L, 3L, 100L, 100L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp9jvz2cjh.d(15): Error: function expected before `()`, not `max`
    of type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9jvz2cjh.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163126
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max = numbers[0];\n    result[0]\
    \ = max;\n    foreach(i, e; numbers[1..$])\n    {\n        max = max(max, e);\n\
    \        result[i] = max;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = rolling_max;\n\n    assert(candidate([]) == []);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([4L, 3L, 2L, 1L]) ==\
    \ [4L, 4L, 4L, 4L]);\n    assert(candidate([3L, 2L, 3L, 100L, 3L]) == [3L, 3L,\
    \ 3L, 100L, 100L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpyz65_5vw.d(15): Error: function expected before `()`, not `max`
    of type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyz65_5vw.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163126
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result;\n    long max = numbers[0];\n    foreach(i, e; numbers)\n    {\n   \
    \     if (e > max)\n            max = e;\n        result ~= max;\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = rolling_max;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([4L,\
    \ 3L, 2L, 1L]) == [4L, 4L, 4L, 4L]);\n    assert(candidate([3L, 2L, 3L, 100L,\
    \ 3L]) == [3L, 3L, 3L, 100L, 100L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.RangeError@/tmp/tmp4lux9uaw.d(11): Range violation

    ----------------

    ??:? _d_arrayboundsp [0x42852e]

    ??:? long[] tmp4lux9uaw.rolling_max(long[]) [0x427e5b]

    ??:? void tmp4lux9uaw.__unittest_L20_C1() [0x427f0e]

    ??:? void tmp4lux9uaw.__modtest() [0x4281fc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42ceeb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42bd7e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4307d1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430c80]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x43075d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42bd55]

    ??:? runModuleUnitTests [0x42ccc1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function('
  stdout: ''
  timestamp: 1660163127
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max = numbers[0];\n    foreach(i,\
    \ n; numbers) \n    {\n        max = max(max, n);\n        result[i] = max;\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = rolling_max;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([1L, 2L, 3L, 4L]) ==\
    \ [1L, 2L, 3L, 4L]);\n    assert(candidate([4L, 3L, 2L, 1L]) == [4L, 4L, 4L, 4L]);\n\
    \    assert(candidate([3L, 2L, 3L, 100L, 3L]) == [3L, 3L, 3L, 100L, 100L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpfvn4o0lh.d(14): Error: function expected before `()`, not `max`
    of type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfvn4o0lh.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163126
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    result[0] = numbers[0];\n    foreach(i;\
    \ 1..numbers.length)\n    {\n        result[i] = max(result[i-1], numbers[i]);\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = rolling_max;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([1L, 2L, 3L, 4L]) ==\
    \ [1L, 2L, 3L, 4L]);\n    assert(candidate([4L, 3L, 2L, 1L]) == [4L, 4L, 4L, 4L]);\n\
    \    assert(candidate([3L, 2L, 3L, 100L, 3L]) == [3L, 3L, 3L, 100L, 100L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp2zkvyl2j.d(14): Error: undefined identifier `max`, did you mean
    function `fmax`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2zkvyl2j.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163126
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max = numbers[0];\n    for (int\
    \ i = 0; i < numbers.length; i++) \n    {\n        if (numbers[i] > max) \n  \
    \      {\n            max = numbers[i];\n        }\n        result[i] = max;\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = rolling_max;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([1L, 2L, 3L, 4L]) ==\
    \ [1L, 2L, 3L, 4L]);\n    assert(candidate([4L, 3L, 2L, 1L]) == [4L, 4L, 4L, 4L]);\n\
    \    assert(candidate([3L, 2L, 3L, 100L, 3L]) == [3L, 3L, 3L, 100L, 100L]);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.RangeError@/tmp/tmpnk8_htog.d(11): Range violation

    ----------------

    ??:? _d_arrayboundsp [0x428566]

    ??:? long[] tmpnk8_htog.rolling_max(long[]) [0x427e62]

    ??:? void tmpnk8_htog.__unittest_L22_C1() [0x427f4a]

    ??:? void tmpnk8_htog.__modtest() [0x428238]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c593]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b426]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4306b1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430b60]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x43063d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b3fd]

    ??:? runModuleUnitTests [0x42c369]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function('
  stdout: ''
  timestamp: 1660163126
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max = numbers[0];\n    foreach(i,\
    \ number; numbers)\n    {\n        max = max(max, number);\n        result[i]\
    \ = max;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = rolling_max;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([1L, 2L, 3L, 4L]) ==\
    \ [1L, 2L, 3L, 4L]);\n    assert(candidate([4L, 3L, 2L, 1L]) == [4L, 4L, 4L, 4L]);\n\
    \    assert(candidate([3L, 2L, 3L, 100L, 3L]) == [3L, 3L, 3L, 100L, 100L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmppo5mqrs_.d(14): Error: function expected before `()`, not `max`
    of type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmppo5mqrs_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163127
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max = numbers[0];\n    result[0]\
    \ = max;\n    foreach(i, number; numbers[1..$]) \n    {\n        max = max(max,\
    \ number);\n        result[i + 1] = max;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = rolling_max;\n\n    assert(candidate([]) == []);\n  \
    \  assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([4L,\
    \ 3L, 2L, 1L]) == [4L, 4L, 4L, 4L]);\n    assert(candidate([3L, 2L, 3L, 100L,\
    \ 3L]) == [3L, 3L, 3L, 100L, 100L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpdx8u7fve.d(15): Error: function expected before `()`, not `max`
    of type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdx8u7fve.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163126
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max = numbers[0];\n    result[0]\
    \ = max;\n    foreach(i, number; numbers[1..$])\n    {\n        max = max(max,\
    \ number);\n        result[i+1] = max;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = rolling_max;\n\n    assert(candidate([]) == []);\n  \
    \  assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([4L,\
    \ 3L, 2L, 1L]) == [4L, 4L, 4L, 4L]);\n    assert(candidate([3L, 2L, 3L, 100L,\
    \ 3L]) == [3L, 3L, 3L, 100L, 100L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp5ka8_lim.d(15): Error: function expected before `()`, not `max`
    of type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5ka8_lim.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163126
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max = numbers[0];\n    result[0]\
    \ = max;\n    foreach(i, number; numbers[1..$]) \n    {\n        max = max(max,\
    \ number);\n        result[i+1] = max;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = rolling_max;\n\n    assert(candidate([]) == []);\n  \
    \  assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([4L,\
    \ 3L, 2L, 1L]) == [4L, 4L, 4L, 4L]);\n    assert(candidate([3L, 2L, 3L, 100L,\
    \ 3L]) == [3L, 3L, 3L, 100L, 100L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpjqdboio1.d(15): Error: function expected before `()`, not `max`
    of type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjqdboio1.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163126
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max = numbers[0];\n    foreach(i,\
    \ v; numbers) \n    {\n        max = max(max, v);\n        result[i] = max;\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = rolling_max;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([1L, 2L, 3L, 4L]) ==\
    \ [1L, 2L, 3L, 4L]);\n    assert(candidate([4L, 3L, 2L, 1L]) == [4L, 4L, 4L, 4L]);\n\
    \    assert(candidate([3L, 2L, 3L, 100L, 3L]) == [3L, 3L, 3L, 100L, 100L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpgqfrtbyu.d(14): Error: function expected before `()`, not `max`
    of type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgqfrtbyu.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163126
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result;\n    int i;\n    result.length = numbers.length;\n    result[0] = numbers[0];\n\
    \    for (i = 1; i < numbers.length; i++) \n    {\n        result[i] = max(result[i\
    \ - 1], numbers[i]);\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = rolling_max;\n\n    assert(candidate([]) == []);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([4L, 3L, 2L, 1L]) ==\
    \ [4L, 4L, 4L, 4L]);\n    assert(candidate([3L, 2L, 3L, 100L, 3L]) == [3L, 3L,\
    \ 3L, 100L, 100L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpcp1qk2zg.d(16): Error: undefined identifier `max`, did you mean
    function `fmax`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcp1qk2zg.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163127
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max = numbers[0];\n    for (int\
    \ i = 0; i < numbers.length; i++) \n    {\n        if (numbers[i] > max) \n  \
    \      {\n            max = numbers[i];\n        }\n        result[i] = max;\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = rolling_max;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([1L, 2L, 3L, 4L]) ==\
    \ [1L, 2L, 3L, 4L]);\n    assert(candidate([4L, 3L, 2L, 1L]) == [4L, 4L, 4L, 4L]);\n\
    \    assert(candidate([3L, 2L, 3L, 100L, 3L]) == [3L, 3L, 3L, 100L, 100L]);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.RangeError@/tmp/tmpnk8_htog.d(11): Range violation

    ----------------

    ??:? _d_arrayboundsp [0x428566]

    ??:? long[] tmpnk8_htog.rolling_max(long[]) [0x427e62]

    ??:? void tmpnk8_htog.__unittest_L22_C1() [0x427f4a]

    ??:? void tmpnk8_htog.__modtest() [0x428238]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c593]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b426]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4306b1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430b60]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x43063d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b3fd]

    ??:? runModuleUnitTests [0x42c369]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function('
  stdout: ''
  timestamp: 1660163126
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    result[0] = numbers[0];\n    for (int\
    \ i = 1; i < numbers.length; i++) \n    {\n        result[i] = max(result[i -\
    \ 1], numbers[i]);\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = rolling_max;\n\n    assert(candidate([]) == []);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([4L, 3L, 2L, 1L]) ==\
    \ [4L, 4L, 4L, 4L]);\n    assert(candidate([3L, 2L, 3L, 100L, 3L]) == [3L, 3L,\
    \ 3L, 100L, 100L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp2elrse1m.d(14): Error: undefined identifier `max`, did you mean
    function `fmax`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2elrse1m.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163127
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max = numbers[0];\n    for (int\
    \ i = 0; i < numbers.length; i++) \n    {\n        max = max(max, numbers[i]);\n\
    \        result[i] = max;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = rolling_max;\n\n    assert(candidate([]) == []);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([4L, 3L, 2L, 1L]) ==\
    \ [4L, 4L, 4L, 4L]);\n    assert(candidate([3L, 2L, 3L, 100L, 3L]) == [3L, 3L,\
    \ 3L, 100L, 100L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpvko_2ur3.d(14): Error: function expected before `()`, not `max`
    of type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvko_2ur3.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163126
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max = numbers[0];\n    result[0]\
    \ = max;\n    foreach(i, v; numbers[1..$])\n    {\n        max = max(max, v);\n\
    \        result[i+1] = max;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = rolling_max;\n\n    assert(candidate([]) == []);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([4L, 3L, 2L, 1L]) ==\
    \ [4L, 4L, 4L, 4L]);\n    assert(candidate([3L, 2L, 3L, 100L, 3L]) == [3L, 3L,\
    \ 3L, 100L, 100L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpdlxxn86j.d(15): Error: function expected before `()`, not `max`
    of type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdlxxn86j.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163126
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max = numbers[0];\n    foreach(i,\
    \ e; numbers)\n    {\n        max = max(max, e);\n        result[i] = max;\n \
    \   }\n    return result;\n}\nunittest\n{\n    alias candidate = rolling_max;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([1L, 2L, 3L, 4L]) ==\
    \ [1L, 2L, 3L, 4L]);\n    assert(candidate([4L, 3L, 2L, 1L]) == [4L, 4L, 4L, 4L]);\n\
    \    assert(candidate([3L, 2L, 3L, 100L, 3L]) == [3L, 3L, 3L, 100L, 100L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp7kubf5wu.d(14): Error: function expected before `()`, not `max`
    of type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7kubf5wu.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163127
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result;\n    long max = numbers[0];\n    foreach(i, number; numbers) \n    {\n\
    \        if (number > max) \n        {\n            max = number;\n        }\n\
    \        result ~= max;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = rolling_max;\n\n    assert(candidate([]) == []);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([4L, 3L, 2L, 1L]) ==\
    \ [4L, 4L, 4L, 4L]);\n    assert(candidate([3L, 2L, 3L, 100L, 3L]) == [3L, 3L,\
    \ 3L, 100L, 100L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.RangeError@/tmp/tmpxe6gm21y.d(11): Range violation

    ----------------

    ??:? _d_arrayboundsp [0x42852e]

    ??:? long[] tmpxe6gm21y.rolling_max(long[]) [0x427e5b]

    ??:? void tmpxe6gm21y.__unittest_L22_C1() [0x427f0e]

    ??:? void tmpxe6gm21y.__modtest() [0x4281fc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42ceeb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42bd7e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4307d1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430c80]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x43075d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42bd55]

    ??:? runModuleUnitTests [0x42ccc1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function('
  stdout: ''
  timestamp: 1660163127
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result;\n    long max = numbers[0];\n    foreach(i, e; numbers)\n    {\n   \
    \     if (e > max)\n            max = e;\n        result ~= max;\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = rolling_max;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([4L,\
    \ 3L, 2L, 1L]) == [4L, 4L, 4L, 4L]);\n    assert(candidate([3L, 2L, 3L, 100L,\
    \ 3L]) == [3L, 3L, 3L, 100L, 100L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.RangeError@/tmp/tmp4lux9uaw.d(11): Range violation

    ----------------

    ??:? _d_arrayboundsp [0x42852e]

    ??:? long[] tmp4lux9uaw.rolling_max(long[]) [0x427e5b]

    ??:? void tmp4lux9uaw.__unittest_L20_C1() [0x427f0e]

    ??:? void tmp4lux9uaw.__modtest() [0x4281fc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42ceeb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42bd7e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4307d1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430c80]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x43075d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42bd55]

    ??:? runModuleUnitTests [0x42ccc1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function('
  stdout: ''
  timestamp: 1660163127
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max = numbers[0];\n    for (int\
    \ i = 0; i < numbers.length; i++) \n    {\n        max = max(max, numbers[i]);\n\
    \        result[i] = max;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = rolling_max;\n\n    assert(candidate([]) == []);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([4L, 3L, 2L, 1L]) ==\
    \ [4L, 4L, 4L, 4L]);\n    assert(candidate([3L, 2L, 3L, 100L, 3L]) == [3L, 3L,\
    \ 3L, 100L, 100L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpvko_2ur3.d(14): Error: function expected before `()`, not `max`
    of type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvko_2ur3.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163126
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max = numbers[0];\n    result[0]\
    \ = max;\n    foreach(i, v; numbers[1..$])\n    {\n        if (v > max)\n    \
    \        max = v;\n        result[i+1] = max;\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = rolling_max;\n\n    assert(candidate([]) ==\
    \ []);\n    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([4L,\
    \ 3L, 2L, 1L]) == [4L, 4L, 4L, 4L]);\n    assert(candidate([3L, 2L, 3L, 100L,\
    \ 3L]) == [3L, 3L, 3L, 100L, 100L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.RangeError@/tmp/tmpd8hx3qov.d(11): Range violation

    ----------------

    ??:? _d_arrayboundsp [0x42857e]

    ??:? long[] tmpd8hx3qov.rolling_max(long[]) [0x427e62]

    ??:? void tmpd8hx3qov.__unittest_L21_C1() [0x427f5e]

    ??:? void tmpd8hx3qov.__modtest() [0x42824c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c5ab]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b43e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4306c9]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430b78]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430655]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b415]

    ??:? runModuleUnitTests [0x42c381]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function('
  stdout: ''
  timestamp: 1660163127
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max = numbers[0];\n    result[0]\
    \ = max;\n    foreach(i, number; numbers[1..$]) \n    {\n        max = max(max,\
    \ number);\n        result[i + 1] = max;\n    }\n    return result;\n}\n/*\n \
    \   From a given list of integers, generate a list of rolling minimum element\
    \ found until given moment\n    in the sequence.\n*/\nlong[] rolling_min(long[]\
    \ numbers) \n{\n    long[] result = new long[numbers.length];\n    long min =\
    \ numbers[0];\n    result[0] = min;\n    foreach(i, number; numbers[1..$]) \n\
    \    {\n        min = min(min, number);\n        result[i + 1] = min;\n    }\n\
    \    return result;\n}\n/*\n    From a given list of integers, generate a list\
    \ of rolling sum of elements found until given moment\n    in the sequence.\n\
    */\nlong[] rolling_sum(long[] numbers) \n{\n    long[] result = new long[numbers.length];\n\
    \    long sum = numbers[0];\n    result[0] = sum;\n    foreach(i, number; numbers[1..$])\
    \ \n    {\n        sum += number;\n        result[i + 1] = sum;\n    }\n    return\
    \ result;\n}\n/*\n    From a given list of integers, generate a list of rolling\
    \ average of elements found until given moment\n    in the sequence.\n*/\ndouble[]\
    \ rolling_average(long[] numbers) \n{\n    double[] result = new double[numbers.length];\n\
    \    double sum = numbers[0];\n    result[0] = sum;\n    foreach(i, number; numbers[1..$])\
    \ \n    {\n        sum += number;\n        result[i + 1] = sum / (i + 2);\n  \
    \  }\n    return result;\n}\n/*\n    From a given list of integers, generate a\
    \ list of rolling standard deviation of elements found until given moment\n  \
    \  in the sequence.\n*/\ndouble[] rolling_stddev(long[] numbers) \n{\n    double\n\
    unittest\n{\n    alias candidate = rolling_max;\n\n    assert(candidate([]) ==\
    \ []);\n    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([4L,\
    \ 3L, 2L, 1L]) == [4L, 4L, 4L, 4L]);\n    assert(candidate([3L, 2L, 3L, 100L,\
    \ 3L]) == [3L, 3L, 3L, 100L, 100L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmph6_aj8o7.d(75): Error: no identifier for declarator `double`

    /tmp/tmph6_aj8o7.d(75): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmph6_aj8o7.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163127
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max = numbers[0];\n    result[0]\
    \ = max;\n    foreach(i, number; numbers[1..$]) \n    {\n        max = max(max,\
    \ number);\n        result[i + 1] = max;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = rolling_max;\n\n    assert(candidate([]) == []);\n  \
    \  assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([4L,\
    \ 3L, 2L, 1L]) == [4L, 4L, 4L, 4L]);\n    assert(candidate([3L, 2L, 3L, 100L,\
    \ 3L]) == [3L, 3L, 3L, 100L, 100L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpdx8u7fve.d(15): Error: function expected before `()`, not `max`
    of type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdx8u7fve.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163126
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max = numbers[0];\n    result[0]\
    \ = max;\n    foreach(i, e; numbers[1..$])\n    {\n        max = max(max, e);\n\
    \        result[i] = max;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = rolling_max;\n\n    assert(candidate([]) == []);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([4L, 3L, 2L, 1L]) ==\
    \ [4L, 4L, 4L, 4L]);\n    assert(candidate([3L, 2L, 3L, 100L, 3L]) == [3L, 3L,\
    \ 3L, 100L, 100L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpyz65_5vw.d(15): Error: function expected before `()`, not `max`
    of type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyz65_5vw.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163126
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max = numbers[0];\n    for (int\
    \ i = 0; i < numbers.length; i++) \n    {\n        if (numbers[i] > max) \n  \
    \      {\n            max = numbers[i];\n        }\n        result[i] = max;\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = rolling_max;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([1L, 2L, 3L, 4L]) ==\
    \ [1L, 2L, 3L, 4L]);\n    assert(candidate([4L, 3L, 2L, 1L]) == [4L, 4L, 4L, 4L]);\n\
    \    assert(candidate([3L, 2L, 3L, 100L, 3L]) == [3L, 3L, 3L, 100L, 100L]);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.RangeError@/tmp/tmpnk8_htog.d(11): Range violation

    ----------------

    ??:? _d_arrayboundsp [0x428566]

    ??:? long[] tmpnk8_htog.rolling_max(long[]) [0x427e62]

    ??:? void tmpnk8_htog.__unittest_L22_C1() [0x427f4a]

    ??:? void tmpnk8_htog.__modtest() [0x428238]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c593]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b426]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4306b1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430b60]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x43063d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b3fd]

    ??:? runModuleUnitTests [0x42c369]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function('
  stdout: ''
  timestamp: 1660163126
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max = numbers[0];\n    result[0]\
    \ = max;\n    foreach(i, number; numbers[1..$]) \n    {\n        max = max(max,\
    \ number);\n        result[i + 1] = max;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = rolling_max;\n\n    assert(candidate([]) == []);\n  \
    \  assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([4L,\
    \ 3L, 2L, 1L]) == [4L, 4L, 4L, 4L]);\n    assert(candidate([3L, 2L, 3L, 100L,\
    \ 3L]) == [3L, 3L, 3L, 100L, 100L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpdx8u7fve.d(15): Error: function expected before `()`, not `max`
    of type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdx8u7fve.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163126
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max = numbers[0];\n    for (int\
    \ i = 0; i < numbers.length; i++) \n    {\n        if (numbers[i] > max) \n  \
    \      {\n            max = numbers[i];\n        }\n        result[i] = max;\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = rolling_max;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([1L, 2L, 3L, 4L]) ==\
    \ [1L, 2L, 3L, 4L]);\n    assert(candidate([4L, 3L, 2L, 1L]) == [4L, 4L, 4L, 4L]);\n\
    \    assert(candidate([3L, 2L, 3L, 100L, 3L]) == [3L, 3L, 3L, 100L, 100L]);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.RangeError@/tmp/tmpnk8_htog.d(11): Range violation

    ----------------

    ??:? _d_arrayboundsp [0x428566]

    ??:? long[] tmpnk8_htog.rolling_max(long[]) [0x427e62]

    ??:? void tmpnk8_htog.__unittest_L22_C1() [0x427f4a]

    ??:? void tmpnk8_htog.__modtest() [0x428238]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c593]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b426]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4306b1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430b60]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x43063d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b3fd]

    ??:? runModuleUnitTests [0x42c369]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function('
  stdout: ''
  timestamp: 1660163126
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max = numbers[0];\n    result[0]\
    \ = max;\n    foreach(i, e; numbers[1..$])\n    {\n        max = max(max, e);\n\
    \        result[i] = max;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = rolling_max;\n\n    assert(candidate([]) == []);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([4L, 3L, 2L, 1L]) ==\
    \ [4L, 4L, 4L, 4L]);\n    assert(candidate([3L, 2L, 3L, 100L, 3L]) == [3L, 3L,\
    \ 3L, 100L, 100L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpyz65_5vw.d(15): Error: function expected before `()`, not `max`
    of type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyz65_5vw.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163126
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max = numbers[0];\n    result[0]\
    \ = max;\n    foreach(i, number; numbers[1..$]) \n    {\n        max = max(max,\
    \ number);\n        result[i + 1] = max;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = rolling_max;\n\n    assert(candidate([]) == []);\n  \
    \  assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([4L,\
    \ 3L, 2L, 1L]) == [4L, 4L, 4L, 4L]);\n    assert(candidate([3L, 2L, 3L, 100L,\
    \ 3L]) == [3L, 3L, 3L, 100L, 100L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpdx8u7fve.d(15): Error: function expected before `()`, not `max`
    of type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdx8u7fve.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163126
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max = numbers[0];\n    result[0]\
    \ = max;\n    foreach(i, n; numbers[1..$]) \n    {\n        max = max(max, n);\n\
    \        result[i + 1] = max;\n    }\n    return result;\n}\nunittest\n{\n   \
    \ alias candidate = rolling_max;\n\n    assert(candidate([]) == []);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([4L, 3L, 2L, 1L]) ==\
    \ [4L, 4L, 4L, 4L]);\n    assert(candidate([3L, 2L, 3L, 100L, 3L]) == [3L, 3L,\
    \ 3L, 100L, 100L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp2frfu4kd.d(15): Error: function expected before `()`, not `max`
    of type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2frfu4kd.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163127
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max = numbers[0];\n    for (int\
    \ i = 0; i < numbers.length; i++) \n    {\n        max = max(max, numbers[i]);\n\
    \        result[i] = max;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = rolling_max;\n\n    assert(candidate([]) == []);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([4L, 3L, 2L, 1L]) ==\
    \ [4L, 4L, 4L, 4L]);\n    assert(candidate([3L, 2L, 3L, 100L, 3L]) == [3L, 3L,\
    \ 3L, 100L, 100L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpvko_2ur3.d(14): Error: function expected before `()`, not `max`
    of type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvko_2ur3.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163126
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    result[0] = numbers[0];\n    foreach(i;\
    \ 1..numbers.length)\n    {\n        result[i] = max(result[i-1], numbers[i]);\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = rolling_max;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([1L, 2L, 3L, 4L]) ==\
    \ [1L, 2L, 3L, 4L]);\n    assert(candidate([4L, 3L, 2L, 1L]) == [4L, 4L, 4L, 4L]);\n\
    \    assert(candidate([3L, 2L, 3L, 100L, 3L]) == [3L, 3L, 3L, 100L, 100L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp2zkvyl2j.d(14): Error: undefined identifier `max`, did you mean
    function `fmax`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2zkvyl2j.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163126
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max = numbers[0];\n    result[0]\
    \ = max;\n    foreach(i, number; numbers[1..$]) \n    {\n        max = max(max,\
    \ number);\n        result[i + 1] = max;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = rolling_max;\n\n    assert(candidate([]) == []);\n  \
    \  assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([4L,\
    \ 3L, 2L, 1L]) == [4L, 4L, 4L, 4L]);\n    assert(candidate([3L, 2L, 3L, 100L,\
    \ 3L]) == [3L, 3L, 3L, 100L, 100L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpdx8u7fve.d(15): Error: function expected before `()`, not `max`
    of type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdx8u7fve.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163126
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max = numbers[0];\n    foreach(i,\
    \ number; numbers) \n    {\n        max = max(max, number);\n        result[i]\
    \ = max;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = rolling_max;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([1L, 2L, 3L, 4L]) ==\
    \ [1L, 2L, 3L, 4L]);\n    assert(candidate([4L, 3L, 2L, 1L]) == [4L, 4L, 4L, 4L]);\n\
    \    assert(candidate([3L, 2L, 3L, 100L, 3L]) == [3L, 3L, 3L, 100L, 100L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpua9cu4uc.d(14): Error: function expected before `()`, not `max`
    of type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpua9cu4uc.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163126
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max = numbers[0];\n    foreach(i,\
    \ e; numbers)\n    {\n        max = max(max, e);\n        result[i] = max;\n \
    \   }\n    return result;\n}\nunittest\n{\n    alias candidate = rolling_max;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([1L, 2L, 3L, 4L]) ==\
    \ [1L, 2L, 3L, 4L]);\n    assert(candidate([4L, 3L, 2L, 1L]) == [4L, 4L, 4L, 4L]);\n\
    \    assert(candidate([3L, 2L, 3L, 100L, 3L]) == [3L, 3L, 3L, 100L, 100L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp7kubf5wu.d(14): Error: function expected before `()`, not `max`
    of type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7kubf5wu.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163127
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max = numbers[0];\n    for (int\
    \ i = 0; i < numbers.length; i++) \n    {\n        if (numbers[i] > max) \n  \
    \      {\n            max = numbers[i];\n        }\n        result[i] = max;\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = rolling_max;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([1L, 2L, 3L, 4L]) ==\
    \ [1L, 2L, 3L, 4L]);\n    assert(candidate([4L, 3L, 2L, 1L]) == [4L, 4L, 4L, 4L]);\n\
    \    assert(candidate([3L, 2L, 3L, 100L, 3L]) == [3L, 3L, 3L, 100L, 100L]);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.RangeError@/tmp/tmpnk8_htog.d(11): Range violation

    ----------------

    ??:? _d_arrayboundsp [0x428566]

    ??:? long[] tmpnk8_htog.rolling_max(long[]) [0x427e62]

    ??:? void tmpnk8_htog.__unittest_L22_C1() [0x427f4a]

    ??:? void tmpnk8_htog.__modtest() [0x428238]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c593]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b426]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4306b1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430b60]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x43063d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b3fd]

    ??:? runModuleUnitTests [0x42c369]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function('
  stdout: ''
  timestamp: 1660163126
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max = numbers[0];\n    result[0]\
    \ = max;\n    foreach(i, number; numbers[1..$]) \n    {\n        max = max(max,\
    \ number);\n        result[i + 1] = max;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = rolling_max;\n\n    assert(candidate([]) == []);\n  \
    \  assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([4L,\
    \ 3L, 2L, 1L]) == [4L, 4L, 4L, 4L]);\n    assert(candidate([3L, 2L, 3L, 100L,\
    \ 3L]) == [3L, 3L, 3L, 100L, 100L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpdx8u7fve.d(15): Error: function expected before `()`, not `max`
    of type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdx8u7fve.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163126
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max = numbers[0];\n    for (int\
    \ i = 0; i < numbers.length; i++) \n    {\n        if (numbers[i] > max) \n  \
    \      {\n            max = numbers[i];\n        }\n        result[i] = max;\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = rolling_max;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([1L, 2L, 3L, 4L]) ==\
    \ [1L, 2L, 3L, 4L]);\n    assert(candidate([4L, 3L, 2L, 1L]) == [4L, 4L, 4L, 4L]);\n\
    \    assert(candidate([3L, 2L, 3L, 100L, 3L]) == [3L, 3L, 3L, 100L, 100L]);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.RangeError@/tmp/tmpnk8_htog.d(11): Range violation

    ----------------

    ??:? _d_arrayboundsp [0x428566]

    ??:? long[] tmpnk8_htog.rolling_max(long[]) [0x427e62]

    ??:? void tmpnk8_htog.__unittest_L22_C1() [0x427f4a]

    ??:? void tmpnk8_htog.__modtest() [0x428238]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c593]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b426]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4306b1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430b60]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x43063d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b3fd]

    ??:? runModuleUnitTests [0x42c369]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function('
  stdout: ''
  timestamp: 1660163126
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max = numbers[0];\n    result[0]\
    \ = max;\n    foreach(i, e; numbers[1..$]) \n    {\n        max = max(max, e);\n\
    \        result[i+1] = max;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = rolling_max;\n\n    assert(candidate([]) == []);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([4L, 3L, 2L, 1L]) ==\
    \ [4L, 4L, 4L, 4L]);\n    assert(candidate([3L, 2L, 3L, 100L, 3L]) == [3L, 3L,\
    \ 3L, 100L, 100L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp5ngb0l_9.d(15): Error: function expected before `()`, not `max`
    of type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5ngb0l_9.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163127
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max = numbers[0];\n    for (int\
    \ i = 0; i < numbers.length; i++) \n    {\n        max = max(max, numbers[i]);\n\
    \        result[i] = max;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = rolling_max;\n\n    assert(candidate([]) == []);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([4L, 3L, 2L, 1L]) ==\
    \ [4L, 4L, 4L, 4L]);\n    assert(candidate([3L, 2L, 3L, 100L, 3L]) == [3L, 3L,\
    \ 3L, 100L, 100L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpvko_2ur3.d(14): Error: function expected before `()`, not `max`
    of type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvko_2ur3.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163126
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    result[0] = numbers[0];\n    foreach(i;\
    \ 1..numbers.length) \n    {\n        result[i] = max(result[i-1], numbers[i]);\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = rolling_max;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([1L, 2L, 3L, 4L]) ==\
    \ [1L, 2L, 3L, 4L]);\n    assert(candidate([4L, 3L, 2L, 1L]) == [4L, 4L, 4L, 4L]);\n\
    \    assert(candidate([3L, 2L, 3L, 100L, 3L]) == [3L, 3L, 3L, 100L, 100L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp9xngenql.d(14): Error: undefined identifier `max`, did you mean
    function `fmax`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9xngenql.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163127
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max = numbers[0];\n    foreach(i,\
    \ e; numbers) \n    {\n        if (e > max) \n        {\n            max = e;\n\
    \        }\n        result[i] = max;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = rolling_max;\n\n    assert(candidate([]) == []);\n  \
    \  assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([4L,\
    \ 3L, 2L, 1L]) == [4L, 4L, 4L, 4L]);\n    assert(candidate([3L, 2L, 3L, 100L,\
    \ 3L]) == [3L, 3L, 3L, 100L, 100L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.RangeError@/tmp/tmp5wiod9hu.d(11): Range violation

    ----------------

    ??:? _d_arrayboundsp [0x428536]

    ??:? long[] tmp5wiod9hu.rolling_max(long[]) [0x427e62]

    ??:? void tmp5wiod9hu.__unittest_L22_C1() [0x427f1a]

    ??:? void tmp5wiod9hu.__modtest() [0x428208]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c563]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b3f6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430681]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430b30]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x43060d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b3cd]

    ??:? runModuleUnitTests [0x42c339]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function('
  stdout: ''
  timestamp: 1660163127
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max = numbers[0];\n    result[0]\
    \ = max;\n    foreach(i, number; numbers[1..$])\n    {\n        max = max(max,\
    \ number);\n        result[i + 1] = max;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = rolling_max;\n\n    assert(candidate([]) == []);\n  \
    \  assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([4L,\
    \ 3L, 2L, 1L]) == [4L, 4L, 4L, 4L]);\n    assert(candidate([3L, 2L, 3L, 100L,\
    \ 3L]) == [3L, 3L, 3L, 100L, 100L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp9jvz2cjh.d(15): Error: function expected before `()`, not `max`
    of type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9jvz2cjh.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163126
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max = numbers[0];\n    result[0]\
    \ = max;\n    foreach(i, e; numbers[1..$]) \n    {\n        max = max(max, e);\n\
    \        result[i + 1] = max;\n    }\n    return result;\n}\nunittest\n{\n   \
    \ alias candidate = rolling_max;\n\n    assert(candidate([]) == []);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([4L, 3L, 2L, 1L]) ==\
    \ [4L, 4L, 4L, 4L]);\n    assert(candidate([3L, 2L, 3L, 100L, 3L]) == [3L, 3L,\
    \ 3L, 100L, 100L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpym19zugc.d(15): Error: function expected before `()`, not `max`
    of type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpym19zugc.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163127
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max = numbers[0];\n    result[0]\
    \ = max;\n    foreach(i, number; numbers[1..$]) \n    {\n        max = max(max,\
    \ number);\n        result[i + 1] = max;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = rolling_max;\n\n    assert(candidate([]) == []);\n  \
    \  assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([4L,\
    \ 3L, 2L, 1L]) == [4L, 4L, 4L, 4L]);\n    assert(candidate([3L, 2L, 3L, 100L,\
    \ 3L]) == [3L, 3L, 3L, 100L, 100L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpdx8u7fve.d(15): Error: function expected before `()`, not `max`
    of type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdx8u7fve.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163126
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max = numbers[0];\n    result[0]\
    \ = max;\n    foreach(i, number; numbers[1..$])\n    {\n        max = max(max,\
    \ number);\n        result[i + 1] = max;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = rolling_max;\n\n    assert(candidate([]) == []);\n  \
    \  assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([4L,\
    \ 3L, 2L, 1L]) == [4L, 4L, 4L, 4L]);\n    assert(candidate([3L, 2L, 3L, 100L,\
    \ 3L]) == [3L, 3L, 3L, 100L, 100L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp9jvz2cjh.d(15): Error: function expected before `()`, not `max`
    of type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9jvz2cjh.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163126
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result;\n    foreach(i, number; numbers) \n    {\n        if (i == 0) \n   \
    \     {\n            result ~= number;\n        } \n        else \n        {\n\
    \            result ~= max(result[$-1], number);\n        }\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = rolling_max;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([4L,\
    \ 3L, 2L, 1L]) == [4L, 4L, 4L, 4L]);\n    assert(candidate([3L, 2L, 3L, 100L,\
    \ 3L]) == [3L, 3L, 3L, 100L, 100L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp0n2m7oss.d(19): Error: undefined identifier `max`, did you mean
    function `fmax`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0n2m7oss.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163126
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max = numbers[0];\n    result[0]\
    \ = max;\n    foreach(i, number; numbers[1..$]) \n    {\n        max = max(max,\
    \ number);\n        result[i + 1] = max;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = rolling_max;\n\n    assert(candidate([]) == []);\n  \
    \  assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([4L,\
    \ 3L, 2L, 1L]) == [4L, 4L, 4L, 4L]);\n    assert(candidate([3L, 2L, 3L, 100L,\
    \ 3L]) == [3L, 3L, 3L, 100L, 100L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpdx8u7fve.d(15): Error: function expected before `()`, not `max`
    of type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdx8u7fve.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163126
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max = numbers[0];\n    foreach(i,\
    \ number; numbers)\n    {\n        max = max(max, number);\n        result[i]\
    \ = max;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = rolling_max;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([1L, 2L, 3L, 4L]) ==\
    \ [1L, 2L, 3L, 4L]);\n    assert(candidate([4L, 3L, 2L, 1L]) == [4L, 4L, 4L, 4L]);\n\
    \    assert(candidate([3L, 2L, 3L, 100L, 3L]) == [3L, 3L, 3L, 100L, 100L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmppo5mqrs_.d(14): Error: function expected before `()`, not `max`
    of type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmppo5mqrs_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163127
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max = numbers[0];\n    result[0]\
    \ = max;\n    for (int i = 1; i < numbers.length; i++) \n    {\n        if (numbers[i]\
    \ > max) \n        {\n            max = numbers[i];\n        }\n        result[i]\
    \ = max;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = rolling_max;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([1L, 2L, 3L, 4L]) ==\
    \ [1L, 2L, 3L, 4L]);\n    assert(candidate([4L, 3L, 2L, 1L]) == [4L, 4L, 4L, 4L]);\n\
    \    assert(candidate([3L, 2L, 3L, 100L, 3L]) == [3L, 3L, 3L, 100L, 100L]);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.RangeError@/tmp/tmppn0hh58_.d(11): Range violation

    ----------------

    ??:? _d_arrayboundsp [0x428586]

    ??:? long[] tmppn0hh58_.rolling_max(long[]) [0x427e62]

    ??:? void tmppn0hh58_.__unittest_L23_C1() [0x427f66]

    ??:? void tmppn0hh58_.__modtest() [0x428254]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c5b3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b446]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4306d1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430b80]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x43065d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b41d]

    ??:? runModuleUnitTests [0x42c389]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function('
  stdout: ''
  timestamp: 1660163127
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max = numbers[0];\n    foreach(i,\
    \ number; numbers)\n    {\n        max = max(max, number);\n        result[i]\
    \ = max;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = rolling_max;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([1L, 2L, 3L, 4L]) ==\
    \ [1L, 2L, 3L, 4L]);\n    assert(candidate([4L, 3L, 2L, 1L]) == [4L, 4L, 4L, 4L]);\n\
    \    assert(candidate([3L, 2L, 3L, 100L, 3L]) == [3L, 3L, 3L, 100L, 100L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmppo5mqrs_.d(14): Error: function expected before `()`, not `max`
    of type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmppo5mqrs_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163127
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max = numbers[0];\n    result[0]\
    \ = max;\n    foreach(i, number; numbers[1..$]) \n    {\n        max = max(max,\
    \ number);\n        result[i + 1] = max;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = rolling_max;\n\n    assert(candidate([]) == []);\n  \
    \  assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([4L,\
    \ 3L, 2L, 1L]) == [4L, 4L, 4L, 4L]);\n    assert(candidate([3L, 2L, 3L, 100L,\
    \ 3L]) == [3L, 3L, 3L, 100L, 100L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpdx8u7fve.d(15): Error: function expected before `()`, not `max`
    of type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdx8u7fve.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163126
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max = numbers[0];\n    result[0]\
    \ = max;\n    foreach(i, v; numbers[1..$])\n    {\n        max = max(max, v);\n\
    \        result[i+1] = max;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = rolling_max;\n\n    assert(candidate([]) == []);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([4L, 3L, 2L, 1L]) ==\
    \ [4L, 4L, 4L, 4L]);\n    assert(candidate([3L, 2L, 3L, 100L, 3L]) == [3L, 3L,\
    \ 3L, 100L, 100L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpdlxxn86j.d(15): Error: function expected before `()`, not `max`
    of type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdlxxn86j.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163126
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    auto\
    \ result = new long[](numbers.length);\n    auto max_so_far = numbers[0];\n  \
    \  foreach(i, e; numbers) \n    {\n        max_so_far = max(max_so_far, e);\n\
    \        result[i] = max_so_far;\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = rolling_max;\n\n    assert(candidate([]) == []);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([4L, 3L, 2L, 1L]) ==\
    \ [4L, 4L, 4L, 4L]);\n    assert(candidate([3L, 2L, 3L, 100L, 3L]) == [3L, 3L,\
    \ 3L, 100L, 100L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpavb2wf25.d(14): Error: undefined identifier `max`, did you mean
    function `fmax`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpavb2wf25.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163127
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result;\n    long max = 0;\n    foreach(i; 0 .. numbers.length)\n    {\n   \
    \     max = max(max, numbers[i]);\n        result ~= max;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = rolling_max;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([4L,\
    \ 3L, 2L, 1L]) == [4L, 4L, 4L, 4L]);\n    assert(candidate([3L, 2L, 3L, 100L,\
    \ 3L]) == [3L, 3L, 3L, 100L, 100L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpk2ohobh2.d(14): Error: function expected before `()`, not `max`
    of type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk2ohobh2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163126
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max = numbers[0];\n    foreach(i,\
    \ number; numbers) \n    {\n        max = max(max, number);\n        result[i]\
    \ = max;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = rolling_max;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([1L, 2L, 3L, 4L]) ==\
    \ [1L, 2L, 3L, 4L]);\n    assert(candidate([4L, 3L, 2L, 1L]) == [4L, 4L, 4L, 4L]);\n\
    \    assert(candidate([3L, 2L, 3L, 100L, 3L]) == [3L, 3L, 3L, 100L, 100L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpua9cu4uc.d(14): Error: function expected before `()`, not `max`
    of type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpua9cu4uc.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163126
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max = numbers[0];\n    result[0]\
    \ = max;\n    foreach(i, number; numbers[1..$]) \n    {\n        max = max(max,\
    \ number);\n        result[i + 1] = max;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = rolling_max;\n\n    assert(candidate([]) == []);\n  \
    \  assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([4L,\
    \ 3L, 2L, 1L]) == [4L, 4L, 4L, 4L]);\n    assert(candidate([3L, 2L, 3L, 100L,\
    \ 3L]) == [3L, 3L, 3L, 100L, 100L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpdx8u7fve.d(15): Error: function expected before `()`, not `max`
    of type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdx8u7fve.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163126
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max = numbers[0];\n    result[0]\
    \ = max;\n    foreach(i, e; numbers[1..$])\n    {\n        if (e > max)\n    \
    \    {\n            max = e;\n        }\n        result[i] = max;\n    }\n   \
    \ return result;\n}\nunittest\n{\n    alias candidate = rolling_max;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([4L,\
    \ 3L, 2L, 1L]) == [4L, 4L, 4L, 4L]);\n    assert(candidate([3L, 2L, 3L, 100L,\
    \ 3L]) == [3L, 3L, 3L, 100L, 100L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.RangeError@/tmp/tmp2hsvxxnh.d(11): Range violation

    ----------------

    ??:? _d_arrayboundsp [0x42857e]

    ??:? long[] tmp2hsvxxnh.rolling_max(long[]) [0x427e62]

    ??:? void tmp2hsvxxnh.__unittest_L23_C1() [0x427f5e]

    ??:? void tmp2hsvxxnh.__modtest() [0x42824c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c5ab]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b43e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4306c9]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430b78]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430655]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b415]

    ??:? runModuleUnitTests [0x42c381]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function('
  stdout: ''
  timestamp: 1660163127
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max = numbers[0];\n    result[0]\
    \ = max;\n    foreach(i, e; numbers[1..$]) \n    {\n        max = max(max, e);\n\
    \        result[i+1] = max;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = rolling_max;\n\n    assert(candidate([]) == []);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([4L, 3L, 2L, 1L]) ==\
    \ [4L, 4L, 4L, 4L]);\n    assert(candidate([3L, 2L, 3L, 100L, 3L]) == [3L, 3L,\
    \ 3L, 100L, 100L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp5ngb0l_9.d(15): Error: function expected before `()`, not `max`
    of type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5ngb0l_9.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163127
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max = numbers[0];\n    result[0]\
    \ = max;\n    foreach(i, e; numbers[1..$]) \n    {\n        max = max(max, e);\n\
    \        result[i+1] = max;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = rolling_max;\n\n    assert(candidate([]) == []);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([4L, 3L, 2L, 1L]) ==\
    \ [4L, 4L, 4L, 4L]);\n    assert(candidate([3L, 2L, 3L, 100L, 3L]) == [3L, 3L,\
    \ 3L, 100L, 100L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp5ngb0l_9.d(15): Error: function expected before `()`, not `max`
    of type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5ngb0l_9.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163127
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max = numbers[0];\n    for (int\
    \ i = 0; i < numbers.length; i++) \n    {\n        max = max(max, numbers[i]);\n\
    \        result[i] = max;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = rolling_max;\n\n    assert(candidate([]) == []);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([4L, 3L, 2L, 1L]) ==\
    \ [4L, 4L, 4L, 4L]);\n    assert(candidate([3L, 2L, 3L, 100L, 3L]) == [3L, 3L,\
    \ 3L, 100L, 100L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpvko_2ur3.d(14): Error: function expected before `()`, not `max`
    of type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvko_2ur3.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163126
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max = numbers[0];\n    for (int\
    \ i = 0; i < numbers.length; i++) \n    {\n        if (numbers[i] > max) \n  \
    \      {\n            max = numbers[i];\n        }\n        result[i] = max;\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = rolling_max;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([1L, 2L, 3L, 4L]) ==\
    \ [1L, 2L, 3L, 4L]);\n    assert(candidate([4L, 3L, 2L, 1L]) == [4L, 4L, 4L, 4L]);\n\
    \    assert(candidate([3L, 2L, 3L, 100L, 3L]) == [3L, 3L, 3L, 100L, 100L]);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.RangeError@/tmp/tmpnk8_htog.d(11): Range violation

    ----------------

    ??:? _d_arrayboundsp [0x428566]

    ??:? long[] tmpnk8_htog.rolling_max(long[]) [0x427e62]

    ??:? void tmpnk8_htog.__unittest_L22_C1() [0x427f4a]

    ??:? void tmpnk8_htog.__modtest() [0x428238]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c593]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b426]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4306b1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430b60]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x43063d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b3fd]

    ??:? runModuleUnitTests [0x42c369]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function('
  stdout: ''
  timestamp: 1660163126
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max = numbers[0];\n    result[0]\
    \ = max;\n    foreach(i, v; numbers[1..$])\n    {\n        max = max(max, v);\n\
    \        result[i+1] = max;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = rolling_max;\n\n    assert(candidate([]) == []);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([4L, 3L, 2L, 1L]) ==\
    \ [4L, 4L, 4L, 4L]);\n    assert(candidate([3L, 2L, 3L, 100L, 3L]) == [3L, 3L,\
    \ 3L, 100L, 100L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpdlxxn86j.d(15): Error: function expected before `()`, not `max`
    of type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdlxxn86j.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163126
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max = numbers[0];\n    result[0]\
    \ = max;\n    foreach(i, number; numbers[1..$])\n    {\n        if (number > max)\n\
    \        {\n            max = number;\n        }\n        result[i + 1] = max;\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = rolling_max;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([1L, 2L, 3L, 4L]) ==\
    \ [1L, 2L, 3L, 4L]);\n    assert(candidate([4L, 3L, 2L, 1L]) == [4L, 4L, 4L, 4L]);\n\
    \    assert(candidate([3L, 2L, 3L, 100L, 3L]) == [3L, 3L, 3L, 100L, 100L]);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.RangeError@/tmp/tmpbpi7m441.d(11): Range violation

    ----------------

    ??:? _d_arrayboundsp [0x42857e]

    ??:? long[] tmpbpi7m441.rolling_max(long[]) [0x427e62]

    ??:? void tmpbpi7m441.__unittest_L23_C1() [0x427f5e]

    ??:? void tmpbpi7m441.__modtest() [0x42824c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c5ab]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b43e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4306c9]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430b78]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430655]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b415]

    ??:? runModuleUnitTests [0x42c381]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function('
  stdout: ''
  timestamp: 1660163126
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max = numbers[0];\n    result[0]\
    \ = max;\n    foreach(i, number; numbers[1..$]) \n    {\n        max = max(max,\
    \ number);\n        result[i + 1] = max;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = rolling_max;\n\n    assert(candidate([]) == []);\n  \
    \  assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([4L,\
    \ 3L, 2L, 1L]) == [4L, 4L, 4L, 4L]);\n    assert(candidate([3L, 2L, 3L, 100L,\
    \ 3L]) == [3L, 3L, 3L, 100L, 100L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpdx8u7fve.d(15): Error: function expected before `()`, not `max`
    of type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdx8u7fve.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163126
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max = 0;\n    foreach(i,n; numbers)\n\
    \    {\n        max = max(max,n);\n        result[i] = max;\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = rolling_max;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([4L,\
    \ 3L, 2L, 1L]) == [4L, 4L, 4L, 4L]);\n    assert(candidate([3L, 2L, 3L, 100L,\
    \ 3L]) == [3L, 3L, 3L, 100L, 100L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpxy7n1jbh.d(14): Error: function expected before `()`, not `max`
    of type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxy7n1jbh.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163127
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max = numbers[0];\n    foreach(i,\
    \ number; numbers) \n    {\n        max = max(max, number);\n        result[i]\
    \ = max;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = rolling_max;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([1L, 2L, 3L, 4L]) ==\
    \ [1L, 2L, 3L, 4L]);\n    assert(candidate([4L, 3L, 2L, 1L]) == [4L, 4L, 4L, 4L]);\n\
    \    assert(candidate([3L, 2L, 3L, 100L, 3L]) == [3L, 3L, 3L, 100L, 100L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpua9cu4uc.d(14): Error: function expected before `()`, not `max`
    of type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpua9cu4uc.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163126
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max = numbers[0];\n    foreach(i,\
    \ v; numbers) \n    {\n        max = max(max, v);\n        result[i] = max;\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = rolling_max;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([1L, 2L, 3L, 4L]) ==\
    \ [1L, 2L, 3L, 4L]);\n    assert(candidate([4L, 3L, 2L, 1L]) == [4L, 4L, 4L, 4L]);\n\
    \    assert(candidate([3L, 2L, 3L, 100L, 3L]) == [3L, 3L, 3L, 100L, 100L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpgqfrtbyu.d(14): Error: function expected before `()`, not `max`
    of type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgqfrtbyu.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163126
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max = numbers[0];\n    foreach(i,\
    \ e; numbers) \n    {\n        max = max(max, e);\n        result[i] = max;\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = rolling_max;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([1L, 2L, 3L, 4L]) ==\
    \ [1L, 2L, 3L, 4L]);\n    assert(candidate([4L, 3L, 2L, 1L]) == [4L, 4L, 4L, 4L]);\n\
    \    assert(candidate([3L, 2L, 3L, 100L, 3L]) == [3L, 3L, 3L, 100L, 100L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpuqc8ue1c.d(14): Error: function expected before `()`, not `max`
    of type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpuqc8ue1c.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163126
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result;\n    long max = numbers[0];\n    foreach(i, n; numbers)\n    {\n   \
    \     max = max(max, n);\n        result ~= max;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = rolling_max;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([4L,\
    \ 3L, 2L, 1L]) == [4L, 4L, 4L, 4L]);\n    assert(candidate([3L, 2L, 3L, 100L,\
    \ 3L]) == [3L, 3L, 3L, 100L, 100L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpk_w5zbpa.d(14): Error: function expected before `()`, not `max`
    of type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk_w5zbpa.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163127
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result;\n    long max = 0;\n    foreach(i; 0 .. numbers.length) \n    {\n  \
    \      max = max(max, numbers[i]);\n        result ~= max;\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = rolling_max;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([4L,\
    \ 3L, 2L, 1L]) == [4L, 4L, 4L, 4L]);\n    assert(candidate([3L, 2L, 3L, 100L,\
    \ 3L]) == [3L, 3L, 3L, 100L, 100L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmppw9wtkoi.d(14): Error: function expected before `()`, not `max`
    of type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmppw9wtkoi.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163126
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max = numbers[0];\n    result[0]\
    \ = max;\n    foreach(i, number; numbers[1..$]) \n    {\n        max = max(max,\
    \ number);\n        result[i+1] = max;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = rolling_max;\n\n    assert(candidate([]) == []);\n  \
    \  assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([4L,\
    \ 3L, 2L, 1L]) == [4L, 4L, 4L, 4L]);\n    assert(candidate([3L, 2L, 3L, 100L,\
    \ 3L]) == [3L, 3L, 3L, 100L, 100L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpjqdboio1.d(15): Error: function expected before `()`, not `max`
    of type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjqdboio1.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163126
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max = numbers[0];\n    foreach(i,\
    \ number; numbers)\n    {\n        max = max(max, number);\n        result[i]\
    \ = max;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = rolling_max;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([1L, 2L, 3L, 4L]) ==\
    \ [1L, 2L, 3L, 4L]);\n    assert(candidate([4L, 3L, 2L, 1L]) == [4L, 4L, 4L, 4L]);\n\
    \    assert(candidate([3L, 2L, 3L, 100L, 3L]) == [3L, 3L, 3L, 100L, 100L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmppo5mqrs_.d(14): Error: function expected before `()`, not `max`
    of type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmppo5mqrs_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163127
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max = numbers[0];\n    foreach(i,\
    \ number; numbers) \n    {\n        if (number > max) \n        {\n          \
    \  max = number;\n        }\n        result[i] = max;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = rolling_max;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([4L,\
    \ 3L, 2L, 1L]) == [4L, 4L, 4L, 4L]);\n    assert(candidate([3L, 2L, 3L, 100L,\
    \ 3L]) == [3L, 3L, 3L, 100L, 100L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.RangeError@/tmp/tmp5x7bp1pb.d(11): Range violation

    ----------------

    ??:? _d_arrayboundsp [0x428536]

    ??:? long[] tmp5x7bp1pb.rolling_max(long[]) [0x427e62]

    ??:? void tmp5x7bp1pb.__unittest_L22_C1() [0x427f1a]

    ??:? void tmp5x7bp1pb.__modtest() [0x428208]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c563]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b3f6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430681]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430b30]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x43060d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b3cd]

    ??:? runModuleUnitTests [0x42c339]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function('
  stdout: ''
  timestamp: 1660163127
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max = numbers[0];\n    foreach(i,\
    \ number; numbers) \n    {\n        max = max(max, number);\n        result[i]\
    \ = max;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = rolling_max;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([1L, 2L, 3L, 4L]) ==\
    \ [1L, 2L, 3L, 4L]);\n    assert(candidate([4L, 3L, 2L, 1L]) == [4L, 4L, 4L, 4L]);\n\
    \    assert(candidate([3L, 2L, 3L, 100L, 3L]) == [3L, 3L, 3L, 100L, 100L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpua9cu4uc.d(14): Error: function expected before `()`, not `max`
    of type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpua9cu4uc.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163126
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max = numbers[0];\n    result[0]\
    \ = max;\n    foreach(i, number; numbers[1..$]) \n    {\n        max = max(max,\
    \ number);\n        result[i+1] = max;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = rolling_max;\n\n    assert(candidate([]) == []);\n  \
    \  assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([4L,\
    \ 3L, 2L, 1L]) == [4L, 4L, 4L, 4L]);\n    assert(candidate([3L, 2L, 3L, 100L,\
    \ 3L]) == [3L, 3L, 3L, 100L, 100L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpjqdboio1.d(15): Error: function expected before `()`, not `max`
    of type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjqdboio1.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163126
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max = numbers[0];\n    for (int\
    \ i = 0; i < numbers.length; i++) \n    {\n        max = max(max, numbers[i]);\n\
    \        result[i] = max;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = rolling_max;\n\n    assert(candidate([]) == []);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([4L, 3L, 2L, 1L]) ==\
    \ [4L, 4L, 4L, 4L]);\n    assert(candidate([3L, 2L, 3L, 100L, 3L]) == [3L, 3L,\
    \ 3L, 100L, 100L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpvko_2ur3.d(14): Error: function expected before `()`, not `max`
    of type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvko_2ur3.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163126
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result;\n    long max = numbers[0];\n    foreach(i, n; numbers) \n    {\n  \
    \      max = max(max, n);\n        result ~= max;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = rolling_max;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([4L,\
    \ 3L, 2L, 1L]) == [4L, 4L, 4L, 4L]);\n    assert(candidate([3L, 2L, 3L, 100L,\
    \ 3L]) == [3L, 3L, 3L, 100L, 100L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1_7rjh6a.d(14): Error: function expected before `()`, not `max`
    of type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1_7rjh6a.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163126
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result;\n    long max = numbers[0];\n    result ~= max;\n    foreach(i, number;\
    \ numbers[1..$])\n    {\n        max = max(max, number);\n        result ~= max;\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = rolling_max;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([1L, 2L, 3L, 4L]) ==\
    \ [1L, 2L, 3L, 4L]);\n    assert(candidate([4L, 3L, 2L, 1L]) == [4L, 4L, 4L, 4L]);\n\
    \    assert(candidate([3L, 2L, 3L, 100L, 3L]) == [3L, 3L, 3L, 100L, 100L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpv87vwh9l.d(15): Error: function expected before `()`, not `max`
    of type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpv87vwh9l.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163127
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result;\n    result.length = numbers.length;\n    result[0] = numbers[0];\n\
    \    foreach(i, number; numbers[1..$]) \n    {\n        result[i] = max(result[i-1],\
    \ number);\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = rolling_max;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([1L, 2L, 3L, 4L]) ==\
    \ [1L, 2L, 3L, 4L]);\n    assert(candidate([4L, 3L, 2L, 1L]) == [4L, 4L, 4L, 4L]);\n\
    \    assert(candidate([3L, 2L, 3L, 100L, 3L]) == [3L, 3L, 3L, 100L, 100L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpkvjonxra.d(15): Error: undefined identifier `max`, did you mean
    function `fmax`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkvjonxra.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163127
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max = numbers[0];\n    foreach(i,\
    \ v; numbers)\n    {\n        max = max(max, v);\n        result[i] = max;\n \
    \   }\n    return result;\n}\nunittest\n{\n    alias candidate = rolling_max;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([1L, 2L, 3L, 4L]) ==\
    \ [1L, 2L, 3L, 4L]);\n    assert(candidate([4L, 3L, 2L, 1L]) == [4L, 4L, 4L, 4L]);\n\
    \    assert(candidate([3L, 2L, 3L, 100L, 3L]) == [3L, 3L, 3L, 100L, 100L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbejoav_x.d(14): Error: function expected before `()`, not `max`
    of type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbejoav_x.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163126
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max = numbers[0];\n    result[0]\
    \ = max;\n    foreach(i, number; numbers[1..$]) \n    {\n        max = max(max,\
    \ number);\n        result[i + 1] = max;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = rolling_max;\n\n    assert(candidate([]) == []);\n  \
    \  assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([4L,\
    \ 3L, 2L, 1L]) == [4L, 4L, 4L, 4L]);\n    assert(candidate([3L, 2L, 3L, 100L,\
    \ 3L]) == [3L, 3L, 3L, 100L, 100L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpdx8u7fve.d(15): Error: function expected before `()`, not `max`
    of type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdx8u7fve.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163126
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max_so_far = numbers[0];\n    result[0]\
    \ = max_so_far;\n    foreach(i, e; numbers[1..$])\n    {\n        if (e > max_so_far)\n\
    \        {\n            max_so_far = e;\n        }\n        result[i+1] = max_so_far;\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = rolling_max;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([1L, 2L, 3L, 4L]) ==\
    \ [1L, 2L, 3L, 4L]);\n    assert(candidate([4L, 3L, 2L, 1L]) == [4L, 4L, 4L, 4L]);\n\
    \    assert(candidate([3L, 2L, 3L, 100L, 3L]) == [3L, 3L, 3L, 100L, 100L]);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.RangeError@/tmp/tmpe4md47hr.d(11): Range violation

    ----------------

    ??:? _d_arrayboundsp [0x42857e]

    ??:? long[] tmpe4md47hr.rolling_max(long[]) [0x427e62]

    ??:? void tmpe4md47hr.__unittest_L23_C1() [0x427f5e]

    ??:? void tmpe4md47hr.__modtest() [0x42824c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c5ab]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b43e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4306c9]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430b78]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430655]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b415]

    ??:? runModuleUnitTests [0x42c381]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function('
  stdout: ''
  timestamp: 1660163127
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max = numbers[0];\n    result[0]\
    \ = max;\n    foreach(i, e; numbers[1..$])\n    {\n        max = max(max, e);\n\
    \        result[i+1] = max;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = rolling_max;\n\n    assert(candidate([]) == []);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([4L, 3L, 2L, 1L]) ==\
    \ [4L, 4L, 4L, 4L]);\n    assert(candidate([3L, 2L, 3L, 100L, 3L]) == [3L, 3L,\
    \ 3L, 100L, 100L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpammllsox.d(15): Error: function expected before `()`, not `max`
    of type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpammllsox.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163127
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ max_list;\n    long max_so_far = 0;\n    foreach(i, number; numbers)\n    {\n\
    \        max_so_far = max(max_so_far, number);\n        max_list ~= max_so_far;\n\
    \    }\n    return max_list;\n}\nunittest\n{\n    alias candidate = rolling_max;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([1L, 2L, 3L, 4L]) ==\
    \ [1L, 2L, 3L, 4L]);\n    assert(candidate([4L, 3L, 2L, 1L]) == [4L, 4L, 4L, 4L]);\n\
    \    assert(candidate([3L, 2L, 3L, 100L, 3L]) == [3L, 3L, 3L, 100L, 100L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpdpvtqq9s.d(14): Error: undefined identifier `max`, did you mean
    function `fmax`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdpvtqq9s.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163127
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max = numbers[0];\n    result[0]\
    \ = max;\n    foreach(i, v; numbers[1..$])\n    {\n        if (v > max)\n    \
    \        max = v;\n        result[i+1] = max;\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = rolling_max;\n\n    assert(candidate([]) ==\
    \ []);\n    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([4L,\
    \ 3L, 2L, 1L]) == [4L, 4L, 4L, 4L]);\n    assert(candidate([3L, 2L, 3L, 100L,\
    \ 3L]) == [3L, 3L, 3L, 100L, 100L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.RangeError@/tmp/tmpd8hx3qov.d(11): Range violation

    ----------------

    ??:? _d_arrayboundsp [0x42857e]

    ??:? long[] tmpd8hx3qov.rolling_max(long[]) [0x427e62]

    ??:? void tmpd8hx3qov.__unittest_L21_C1() [0x427f5e]

    ??:? void tmpd8hx3qov.__modtest() [0x42824c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c5ab]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b43e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4306c9]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430b78]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430655]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b415]

    ??:? runModuleUnitTests [0x42c381]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function('
  stdout: ''
  timestamp: 1660163127
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    for (int i = 0; i < numbers.length;\
    \ i++) \n    {\n        result[i] = max(numbers[0..i]);\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = rolling_max;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([4L,\
    \ 3L, 2L, 1L]) == [4L, 4L, 4L, 4L]);\n    assert(candidate([3L, 2L, 3L, 100L,\
    \ 3L]) == [3L, 3L, 3L, 100L, 100L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpt30q3w7j.d(13): Error: undefined identifier `max`, did you mean
    function `fmax`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpt30q3w7j.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163127
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max = numbers[0];\n    for (int\
    \ i = 0; i < numbers.length; i++) \n    {\n        max = max(max, numbers[i]);\n\
    \        result[i] = max;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = rolling_max;\n\n    assert(candidate([]) == []);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([4L, 3L, 2L, 1L]) ==\
    \ [4L, 4L, 4L, 4L]);\n    assert(candidate([3L, 2L, 3L, 100L, 3L]) == [3L, 3L,\
    \ 3L, 100L, 100L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpvko_2ur3.d(14): Error: function expected before `()`, not `max`
    of type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvko_2ur3.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163126
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max = numbers[0];\n    result[0]\
    \ = max;\n    foreach(i, number; numbers[1..$]) \n    {\n        max = max(max,\
    \ number);\n        result[i+1] = max;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = rolling_max;\n\n    assert(candidate([]) == []);\n  \
    \  assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([4L,\
    \ 3L, 2L, 1L]) == [4L, 4L, 4L, 4L]);\n    assert(candidate([3L, 2L, 3L, 100L,\
    \ 3L]) == [3L, 3L, 3L, 100L, 100L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpjqdboio1.d(15): Error: function expected before `()`, not `max`
    of type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjqdboio1.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163126
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a given list of integers,\
    \ generate a list of rolling maximum element found until given moment\n    in\
    \ the sequence.\n        \n*/\nlong[] rolling_max(long[] numbers) \n{\n    long[]\
    \ result = new long[numbers.length];\n    long max = numbers[0];\n    foreach(i,\
    \ number; numbers) \n    {\n        max = max(max, number);\n        result[i]\
    \ = max;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = rolling_max;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([1L, 2L, 3L, 4L]) ==\
    \ [1L, 2L, 3L, 4L]);\n    assert(candidate([4L, 3L, 2L, 1L]) == [4L, 4L, 4L, 4L]);\n\
    \    assert(candidate([3L, 2L, 3L, 100L, 3L]) == [3L, 3L, 3L, 100L, 100L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpua9cu4uc.d(14): Error: function expected before `()`, not `max`
    of type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpua9cu4uc.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163126

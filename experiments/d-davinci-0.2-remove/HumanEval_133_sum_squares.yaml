name: HumanEval_133_sum_squares
language: d
prompt: "import std.typecons;\nimport std.math;\n/*\nYou are given a list of numbers.\n\
  \    You need to return the sum of squared numbers in the given list,\n    round\
  \ each element in the list to the upper int(Ceiling) first.\n    Examples:\n   \
  \                     \n\n    \n*/\nlong sum_squares(float[] lst) \n"
tests: "unittest\n{\n    alias candidate = sum_squares;\n\n    assert(candidate([1.0,\
  \ 2.0, 3.0]) == 14L);\n    assert(candidate([1.0, 2.0, 3.0]) == 14L);\n    assert(candidate([1.0,\
  \ 3.0, 5.0, 7.0]) == 84L);\n    assert(candidate([1.4, 4.2, 0.0]) == 29L);\n   \
  \ assert(candidate([-2.4, 1.0, 1.0]) == 6L);\n    assert(candidate([100.0, 1.0,\
  \ 15.0, 2.0]) == 10230L);\n    assert(candidate([10000.0, 10000.0]) == 200000000L);\n\
  \    assert(candidate([-1.4, 4.6, 6.3]) == 75L);\n    assert(candidate([-1.4, 17.9,\
  \ 18.9, 19.9]) == 1086L);\n    assert(candidate([0.0]) == 0L);\n    assert(candidate([-1.0])\
  \ == 1L);\n    assert(candidate([-1.0, 1.0, 0.0]) == 2L);\n}\nvoid main(){}"
completions: ["{\n    long sum = 0;\n    foreach(e; lst)\n    {\n        sum += cast(long)(ceil(e))\
    \ * cast(long)(ceil(e));\n    }\n    return sum;\n}", "{\n    long sum = 0;\n\
    \    foreach(e; lst)\n    {\n        sum += cast(long)(ceil(e) * ceil(e));\n \
    \   }\n    return sum;\n}", "{\n    long sum = 0;\n    foreach(e; lst)\n    {\n\
    \        sum += cast(long)(ceil(e) * ceil(e));\n    }\n    return sum;\n}", "{\n\
    \    long sum = 0;\n    foreach(e; lst)\n    {\n        sum += cast(long)(ceil(e)\
    \ * ceil(e));\n    }\n    return sum;\n}", "{\n    long sum = 0;\n    foreach(e;\
    \ lst)\n    {\n        sum += cast(long)(ceil(e)) * cast(long)(ceil(e));\n   \
    \ }\n    return sum;\n}", "{\n    long sum = 0;\n    foreach(e; lst)\n    {\n\
    \        sum += cast(long)(ceil(e) * ceil(e));\n    }\n    return sum;\n}", "{\n\
    \    long sum = 0;\n    foreach(e; lst)\n    {\n        sum += cast(long)(ceil(e))\
    \ * cast(long)(ceil(e));\n    }\n    return sum;\n}", "{\n    long sum = 0;\n\
    \    foreach(i; lst)\n    {\n        sum += cast(long)ceil(i) * cast(long)ceil(i);\n\
    \    }\n    return sum;\n}", "{\n    long sum = 0;\n    foreach(e; lst)\n    {\n\
    \        sum += cast(long)(ceil(e)) * cast(long)(ceil(e));\n    }\n    return\
    \ sum;\n}", "{\n    long sum = 0;\n    foreach(e; lst)\n    {\n        sum +=\
    \ cast(long)(ceil(e) * ceil(e));\n    }\n    return sum;\n}", "{\n    long sum\
    \ = 0;\n    foreach(float item; lst)\n    {\n        sum += item * item;\n   \
    \ }\n    return sum;\n}", "{\n    long sum = 0;\n    foreach(e; lst)\n    {\n\
    \        sum += cast(long)(e * e);\n    }\n    return sum;\n}", "{\n    long sum\
    \ = 0;\n    foreach(float f; lst)\n    {\n        sum += cast(long)ceil(f) * cast(long)ceil(f);\n\
    \    }\n    return sum;\n}", "{\n    long result = 0;\n    foreach(elem; lst)\n\
    \    {\n        result += ceil(elem) * ceil(elem);\n    }\n    return result;\n\
    }", "{\n    long sum = 0;\n    foreach(e; lst)\n    {\n        sum += cast(long)(ceil(e))\
    \ * cast(long)(ceil(e));\n    }\n    return sum;\n}", "{\n    return lst.map!(a\
    \ => cast(long)(ceil(a))).map!(a => a * a).reduce!((a, b) => a + b)(0);\n}", "{\n\
    \    long sum = 0;\n    foreach(e; lst)\n    {\n        sum += cast(long)(ceil(e))\
    \ * cast(long)(ceil(e));\n    }\n    return sum;\n}", "{\n    long sum = 0;\n\
    \    foreach(e; lst)\n    {\n        sum += cast(long)(ceil(e)) * cast(long)(ceil(e));\n\
    \    }\n    return sum;\n}", "{\n    long sum = 0;\n    foreach(float x; lst)\n\
    \    {\n        sum += cast(long)(ceil(x))*cast(long)(ceil(x));\n    }\n    return\
    \ sum;\n}", "{\n    long sum = 0;\n    foreach(e; lst)\n    {\n        sum +=\
    \ cast(long)(ceil(e)) * cast(long)(ceil(e));\n    }\n    return sum;\n}", "{\n\
    \    long sum = 0;\n    foreach(e; lst)\n    {\n        sum += cast(long)(ceil(e)\
    \ * ceil(e));\n    }\n    return sum;\n}", "{\n    long sum = 0;\n    foreach(e;\
    \ lst)\n    {\n        sum += cast(long)(ceil(e) * ceil(e));\n    }\n    return\
    \ sum;\n}", "{\n    long sum = 0;\n    foreach(e; lst)\n    {\n        sum +=\
    \ cast(long)(ceil(e)) * cast(long)(ceil(e));\n    }\n    return sum;\n}", "{\n\
    \    long sum = 0;\n    foreach(e; lst)\n    {\n        sum += cast(long)(ceil(e))\
    \ * cast(long)(ceil(e));\n    }\n    return sum;\n}", "{\n    long sum = 0;\n\
    \    foreach(float f; lst)\n    {\n        sum += cast(long)ceil(f) * cast(long)ceil(f);\n\
    \    }\n    return sum;\n}", "{\n    long sum = 0;\n    foreach(e; lst)\n    {\n\
    \        sum += cast(long)(ceil(e) * ceil(e));\n    }\n    return sum;\n}", "{\n\
    \    long sum = 0;\n    foreach(float f; lst)\n    {\n        sum += ceil(f) *\
    \ ceil(f);\n    }\n    return sum;\n}", "{\n    long sum = 0;\n    foreach(e;\
    \ lst)\n    {\n        sum += cast(long)(ceil(e) * ceil(e));\n    }\n    return\
    \ sum;\n}", "{\n    long sum = 0;\n    foreach(float i; lst)\n    {\n        sum\
    \ += cast(long)ceil(i) * cast(long)ceil(i);\n    }\n    return sum;\n}", "{\n\
    \    long sum = 0;\n    foreach(e; lst)\n    {\n        sum += cast(long)(ceil(e))\
    \ * cast(long)(ceil(e));\n    }\n    return sum;\n}", "{\n    long sum = 0;\n\
    \    foreach(e; lst)\n    {\n        sum += cast(long)(ceil(e)) * cast(long)(ceil(e));\n\
    \    }\n    return sum;\n}", "{\n    long sum = 0;\n    foreach(e; lst)\n    {\n\
    \        sum += cast(long)(ceil(e)) * cast(long)(ceil(e));\n    }\n    return\
    \ sum;\n}", "{\n    long sum = 0;\n    foreach(float f; lst)\n    {\n        sum\
    \ += cast(long)ceil(f) * cast(long)ceil(f);\n    }\n    return sum;\n}", "{\n\
    \    long sum = 0;\n    foreach(e; lst)\n    {\n        sum += cast(long)(ceil(e))\
    \ * cast(long)(ceil(e));\n    }\n    return sum;\n}", "{\n    long sum = 0;\n\
    \    foreach(e; lst)\n    {\n        sum += cast(long)(ceil(e) * ceil(e));\n \
    \   }\n    return sum;\n}", "{\n    long sum = 0;\n    foreach(e; lst)\n    {\n\
    \        sum += cast(long)(ceil(e)) * cast(long)(ceil(e));\n    }\n    return\
    \ sum;\n}", "{\n    long sum = 0;\n    foreach(e; lst)\n    {\n        sum +=\
    \ cast(long)(ceil(e) * ceil(e));\n    }\n    return sum;\n}", "{\n    long sum\
    \ = 0;\n    foreach(e; lst)\n    {\n        sum += cast(long)(ceil(e)) * cast(long)(ceil(e));\n\
    \    }\n    return sum;\n}", "{\n    long sum = 0;\n    foreach(e; lst)\n    {\n\
    \        sum += cast(long)(ceil(e)) * cast(long)(ceil(e));\n    }\n    return\
    \ sum;\n}", "{\n    long sum = 0;\n    foreach(e; lst)\n    {\n        sum +=\
    \ cast(long)(ceil(e)) * cast(long)(ceil(e));\n    }\n    return sum;\n}", "{\n\
    \    long sum = 0;\n    foreach(e; lst)\n    {\n        sum += cast(long)(ceil(e))\
    \ * cast(long)(ceil(e));\n    }\n    return sum;\n}", "{\n    long sum = 0;\n\
    \    foreach(e; lst)\n    {\n        sum += cast(long)(ceil(e) * ceil(e));\n \
    \   }\n    return sum;\n}", "{\n    long sum = 0;\n    foreach(e; lst)\n    {\n\
    \        sum += cast(long)(ceil(e) * ceil(e));\n    }\n    return sum;\n}", "{\n\
    \    long sum = 0;\n    foreach(e; lst)\n    {\n        sum += cast(long)(ceil(e)\
    \ * ceil(e));\n    }\n    return sum;\n}", "{\n    long sum = 0;\n    foreach(e;\
    \ lst)\n    {\n        sum += cast(long)(ceil(e) * ceil(e));\n    }\n    return\
    \ sum;\n}", "{\n    long sum = 0;\n    foreach(e; lst)\n    {\n        sum +=\
    \ cast(long)(ceil(e) * ceil(e));\n    }\n    return sum;\n}", "{\n    long sum\
    \ = 0;\n    foreach(e; lst)\n    {\n        sum += cast(long)(ceil(e)) * cast(long)(ceil(e));\n\
    \    }\n    return sum;\n}", "{\n    long sum = 0;\n    foreach(e; lst)\n    {\n\
    \        sum += cast(long)(ceil(e)) * cast(long)(ceil(e));\n    }\n    return\
    \ sum;\n}", "{\n    long sum = 0;\n    foreach(e; lst)\n    {\n        sum +=\
    \ cast(long)(ceil(e)) * cast(long)(ceil(e));\n    }\n    return sum;\n}", "{\n\
    \    long sum = 0;\n    foreach(e; lst)\n    {\n        sum += cast(long)(ceil(e))\
    \ * cast(long)(ceil(e));\n    }\n    return sum;\n}", "{\n    long sum = 0;\n\
    \    foreach(e; lst)\n    {\n        sum += cast(long)(ceil(e)) * cast(long)(ceil(e));\n\
    \    }\n    return sum;\n}", "{\n    long sum = 0;\n    foreach(e; lst)\n    {\n\
    \        sum += cast(long)(ceil(e) * ceil(e));\n    }\n    return sum;\n}", "{\n\
    \    long sum = 0;\n    foreach(e; lst)\n    {\n        sum += cast(long)(ceil(e)*ceil(e));\n\
    \    }\n    return sum;\n}", "{\n    long sum = 0;\n    foreach(e; lst)\n    {\n\
    \        sum += cast(long)(ceil(e) * ceil(e));\n    }\n    return sum;\n}", "{\n\
    \    long sum = 0;\n    foreach(e; lst)\n    {\n        sum += cast(long)(ceil(e))\
    \ * cast(long)(ceil(e));\n    }\n    return sum;\n}", "{\n    long sum = 0;\n\
    \    foreach(e; lst)\n    {\n        sum += cast(long)(ceil(e)) * cast(long)(ceil(e));\n\
    \    }\n    return sum;\n}", "{\n    long sum = 0;\n    foreach(e; lst)\n    {\n\
    \        sum += cast(long)(ceil(e)) * cast(long)(ceil(e));\n    }\n    return\
    \ sum;\n}", "{\n    long sum = 0;\n    foreach(e; lst)\n    {\n        sum +=\
    \ cast(long)(ceil(e)) * cast(long)(ceil(e));\n    }\n    return sum;\n}", "{\n\
    \    long sum = 0;\n    foreach(e; lst)\n    {\n        sum += cast(long)(ceil(e)\
    \ * ceil(e));\n    }\n    return sum;\n}", "{\n    long sum = 0;\n    foreach(e;\
    \ lst)\n    {\n        sum += cast(long)(ceil(e)) * cast(long)(ceil(e));\n   \
    \ }\n    return sum;\n}", "{\n    long sum = 0;\n    foreach(e; lst)\n    {\n\
    \        sum += cast(long)(ceil(e)) * cast(long)(ceil(e));\n    }\n    return\
    \ sum;\n}", "{\n    long sum = 0;\n    foreach(e; lst)\n    {\n        sum +=\
    \ cast(long)(ceil(e) * ceil(e));\n    }\n    return sum;\n}", "{\n    long sum\
    \ = 0;\n    foreach(e; lst)\n    {\n        sum += cast(long)(ceil(e)) * cast(long)(ceil(e));\n\
    \    }\n    return sum;\n}", "{\n    long sum = 0;\n    foreach(e; lst)\n    {\n\
    \        sum += cast(long)(ceil(e)) * cast(long)(ceil(e));\n    }\n    return\
    \ sum;\n}", "{\n    long sum = 0;\n    foreach(e; lst)\n    {\n        sum +=\
    \ cast(long)(ceil(e)) * cast(long)(ceil(e));\n    }\n    return sum;\n}", "{\n\
    \    long sum = 0;\n    foreach(e; lst)\n    {\n        sum += cast(long)(ceil(e))\
    \ * cast(long)(ceil(e));\n    }\n    return sum;\n}", "{\n    long sum = 0;\n\
    \    foreach(e; lst)\n    {\n        sum += cast(long)(ceil(e)) * cast(long)(ceil(e));\n\
    \    }\n    return sum;\n}", "{\n    long sum = 0;\n    foreach(e; lst)\n    {\n\
    \        sum += cast(long)(ceil(e)) * cast(long)(ceil(e));\n    }\n    return\
    \ sum;\n}", "{\n    long sum = 0;\n    foreach(num; lst)\n    {\n        sum +=\
    \ cast(long)(ceil(num)) * cast(long)(ceil(num));\n    }\n    return sum;\n}",
  "{\n    long sum = 0;\n    foreach(float f; lst)\n    {\n        sum += cast(long)ceil(f)\
    \ * cast(long)ceil(f);\n    }\n    return sum;\n}", "{\n    long sum = 0;\n  \
    \  foreach(float i; lst)\n    {\n        sum += cast(long)ceil(i) * cast(long)ceil(i);\n\
    \    }\n    return sum;\n}", "{\n    long sum = 0;\n    foreach(e; lst)\n    {\n\
    \        sum += cast(long)(e * e);\n    }\n    return sum;\n}", "{\n    long sum\
    \ = 0;\n    foreach(e; lst)\n    {\n        sum += cast(long)(ceil(e)) * cast(long)(ceil(e));\n\
    \    }\n    return sum;\n}", "{\n    long sum = 0;\n    foreach(e; lst)\n    {\n\
    \        sum += cast(long)(ceil(e) * ceil(e));\n    }\n    return sum;\n}", "{\n\
    \    long sum = 0;\n    foreach(e; lst)\n    {\n        sum += cast(long)(ceil(e))\
    \ * cast(long)(ceil(e));\n    }\n    return sum;\n}", "{\n    long sum = 0;\n\
    \    foreach(e; lst)\n    {\n        sum += cast(long)(ceil(e) * ceil(e));\n \
    \   }\n    return sum;\n}", "{\n    long sum = 0;\n    foreach(e; lst)\n    {\n\
    \        sum += cast(long)(ceil(e)) * cast(long)(ceil(e));\n    }\n    return\
    \ sum;\n}", "{\n    long sum = 0;\n    foreach(e; lst)\n    {\n        sum +=\
    \ cast(long)(ceil(e)) * cast(long)(ceil(e));\n    }\n    return sum;\n}", "{\n\
    \    long sum = 0;\n    foreach(e; lst)\n    {\n        sum += cast(long)(ceil(e))\
    \ * cast(long)(ceil(e));\n    }\n    return sum;\n}", "{\n    long sum = 0;\n\
    \    foreach(e; lst)\n    {\n        sum += cast(long)(ceil(e) * ceil(e));\n \
    \   }\n    return sum;\n}", "{\n    long sum = 0;\n    foreach(e; lst)\n    {\n\
    \        sum += cast(long)(ceil(e)) * cast(long)(ceil(e));\n    }\n    return\
    \ sum;\n}", "{\n    long sum = 0;\n    foreach(x; lst)\n    {\n        sum +=\
    \ cast(long)(ceil(x))*cast(long)(ceil(x));\n    }\n    return sum;\n}", "{\n \
    \   long result = 0;\n    foreach(elem; lst)\n    {\n        result += cast(long)ceil(elem)\
    \ * cast(long)ceil(elem);\n    }\n    return result;\n}", "{\n    long sum = 0;\n\
    \    foreach(e; lst)\n    {\n        sum += cast(long)(ceil(e)) * cast(long)(ceil(e));\n\
    \    }\n    return sum;\n}", "{\n    return lst.map!(a => cast(long)(ceil(a))).map!(a\
    \ => a * a).sum;\n}", "{\n    return lst.map!(a => cast(long)(ceil(a))).map!(a\
    \ => a * a).reduce!((a, b) => a + b)(0);\n}", "{\n    long sum = 0;\n    foreach(e;\
    \ lst)\n    {\n        sum += cast(long)(ceil(e) * ceil(e));\n    }\n    return\
    \ sum;\n}", "{\n    long sum = 0;\n    foreach(e; lst)\n    {\n        sum +=\
    \ cast(long)(ceil(e) * ceil(e));\n    }\n    return sum;\n}", "{\n    long sum\
    \ = 0;\n    foreach(e; lst) \n    {\n        sum += cast(long)(ceil(e) * ceil(e));\n\
    \    }\n    return sum;\n}", "{\n    long sum = 0;\n    foreach(e; lst)\n    {\n\
    \        sum += cast(long)(ceil(e)) * cast(long)(ceil(e));\n    }\n    return\
    \ sum;\n}", "{\n    long sum = 0;\n    foreach(e; lst)\n    {\n        sum +=\
    \ cast(long)(ceil(e)) * cast(long)(ceil(e));\n    }\n    return sum;\n}", "{\n\
    \    long sum = 0;\n    foreach(e; lst)\n    {\n        sum += cast(long)(ceil(e))\
    \ * cast(long)(ceil(e));\n    }\n    return sum;\n}", "{\n    long sum = 0;\n\
    \    foreach(i; lst)\n    {\n        sum += cast(long)ceil(i) * cast(long)ceil(i);\n\
    \    }\n    return sum;\n}", "{\n    long sum = 0;\n    foreach(e; lst)\n    {\n\
    \        sum += cast(long)(ceil(e) * ceil(e));\n    }\n    return sum;\n}", "{\n\
    \    long sum = 0;\n    foreach(e; lst)\n    {\n        sum += cast(long)(ceil(e))\
    \ * cast(long)(ceil(e));\n    }\n    return sum;\n}", "{\n    long sum = 0;\n\
    \    foreach(e; lst)\n    {\n        sum += cast(long)(ceil(e) * ceil(e));\n \
    \   }\n    return sum;\n}", "{\n    long sum = 0;\n    foreach(e; lst)\n    {\n\
    \        sum += cast(long)(ceil(e) * ceil(e));\n    }\n    return sum;\n}", "{\n\
    \    long sum = 0;\n    foreach(e; lst)\n    {\n        sum += cast(long)(ceil(e))\
    \ * cast(long)(ceil(e));\n    }\n    return sum;\n}", "{\n    long sum = 0;\n\
    \    foreach(float f; lst)\n    {\n        sum += cast(long)ceil(f) * cast(long)ceil(f);\n\
    \    }\n    return sum;\n}", "{\n    long sum = 0;\n    foreach(e; lst)\n    {\n\
    \        sum += cast(long)(ceil(e)) * cast(long)(ceil(e));\n    }\n    return\
    \ sum;\n}", "{\n    return lst.map!(a => cast(long)(ceil(a))).map!(a => a * a).reduce!((a,\
    \ b) => a + b)(0);\n}", "{\n    long sum = 0;\n    foreach(e; lst)\n    {\n  \
    \      sum += cast(long)(e*e);\n    }\n    return sum;\n}", "{\n    long sum =\
    \ 0;\n    foreach(e; lst)\n    {\n        sum += cast(long)(ceil(e)) * cast(long)(ceil(e));\n\
    \    }\n    return sum;\n}", "{\n    long sum = 0;\n    foreach(x; lst)\n    {\n\
    \        sum += cast(long)(ceil(x)) * cast(long)(ceil(x));\n    }\n    return\
    \ sum;\n}", "{\n    long sum = 0;\n    foreach(e; lst)\n    {\n        sum +=\
    \ cast(long)(ceil(e) * ceil(e));\n    }\n    return sum;\n}", "{\n    long sum\
    \ = 0;\n    foreach(e; lst)\n    {\n        sum += cast(long)(e * e);\n    }\n\
    \    return sum;\n}", "{\n    long sum = 0;\n    foreach(e; lst)\n    {\n    \
    \    sum += cast(long)(ceil(e) * ceil(e));\n    }\n    return sum;\n}", "{\n \
    \   long sum = 0;\n    foreach(e; lst)\n    {\n        sum += cast(long)(ceil(e))\
    \ * cast(long)(ceil(e));\n    }\n    return sum;\n}", "{\n    long sum = 0;\n\
    \    foreach(e; lst)\n    {\n        sum += cast(long)(ceil(e)) * cast(long)(ceil(e));\n\
    \    }\n    return sum;\n}", "{\n    long sum = 0;\n    foreach(e; lst)\n    {\n\
    \        sum += cast(long)(ceil(e) * ceil(e));\n    }\n    return sum;\n}", "{\n\
    \    long sum = 0;\n    foreach(e; lst)\n    {\n        sum += cast(long)(ceil(e))\
    \ * cast(long)(ceil(e));\n    }\n    return sum;\n}", "{\n    long sum = 0;\n\
    \    foreach(e; lst)\n    {\n        sum += cast(long)(ceil(e)) * cast(long)(ceil(e));\n\
    \    }\n    return sum;\n}", "{\n    long sum = 0;\n    foreach(e; lst)\n    {\n\
    \        sum += cast(long)(ceil(e)) * cast(long)(ceil(e));\n    }\n    return\
    \ sum;\n}", "{\n    long sum = 0;\n    foreach(e; lst)\n    {\n        sum +=\
    \ cast(long)(ceil(e) * ceil(e));\n    }\n    return sum;\n}", "{\n    long sum\
    \ = 0;\n    foreach(e; lst)\n    {\n        sum += cast(long)(ceil(e)) * cast(long)(ceil(e));\n\
    \    }\n    return sum;\n}", "{\n    long sum = 0;\n    foreach(e; lst)\n    {\n\
    \        sum += cast(long)(ceil(e)) * cast(long)(ceil(e));\n    }\n    return\
    \ sum;\n}", "{\n    long result = 0;\n    foreach(float f; lst)\n    {\n     \
    \   result += cast(long)ceil(f) * cast(long)ceil(f);\n    }\n    return result;\n\
    }", "{\n    long sum = 0;\n    foreach(e; lst)\n    {\n        sum += cast(long)(ceil(e))\
    \ * cast(long)(ceil(e));\n    }\n    return sum;\n}", "{\n    long sum = 0;\n\
    \    foreach(e; lst)\n    {\n        sum += cast(long)(ceil(e)) * cast(long)(ceil(e));\n\
    \    }\n    return sum;\n}", "{\n    long sum = 0;\n    foreach(e; lst)\n    {\n\
    \        sum += cast(long)(ceil(e)) * cast(long)(ceil(e));\n    }\n    return\
    \ sum;\n}", "{\n    long sum = 0;\n    foreach(float x; lst)\n    {\n        sum\
    \ += cast(long)(ceil(x) * ceil(x));\n    }\n    return sum;\n}", "{\n    long\
    \ sum = 0;\n    foreach(x; lst)\n    {\n        sum += cast(long)(ceil(x) * ceil(x));\n\
    \    }\n    return sum;\n}", "{\n    long sum = 0;\n    foreach(float i; lst)\n\
    \    {\n        sum += cast(long)ceil(i) * cast(long)ceil(i);\n    }\n    return\
    \ sum;\n}", "{\n    long sum = 0;\n    foreach(e; lst)\n    {\n        sum +=\
    \ cast(long)(ceil(e)) * cast(long)(ceil(e));\n    }\n    return sum;\n}", "{\n\
    \    long sum = 0;\n    foreach(e; lst)\n    {\n        sum += cast(long)(ceil(e))\
    \ * cast(long)(ceil(e));\n    }\n    return sum;\n}", "{\n    long sum = 0;\n\
    \    foreach(e; lst)\n    {\n        sum += cast(long)(ceil(e)) * cast(long)(ceil(e));\n\
    \    }\n    return sum;\n}", "{\n    long sum = 0;\n    foreach(e; lst)\n    {\n\
    \        sum += cast(long)(ceil(e)) * cast(long)(ceil(e));\n    }\n    return\
    \ sum;\n}", "{\n    long sum = 0;\n    foreach(e; lst)\n    {\n        sum +=\
    \ cast(long)(ceil(e)) * cast(long)(ceil(e));\n    }\n    return sum;\n}", "{\n\
    \    long sum = 0;\n    foreach(e; lst)\n    {\n        sum += cast(long)(ceil(e))\
    \ * cast(long)(ceil(e));\n    }\n    return sum;\n}", "{\n    long sum = 0;\n\
    \    foreach(e; lst)\n    {\n        sum += cast(long)(ceil(e)) * cast(long)(ceil(e));\n\
    \    }\n    return sum;\n}", "{\n    long sum = 0;\n    foreach(e; lst)\n    {\n\
    \        sum += cast(long)(ceil(e)) * cast(long)(ceil(e));\n    }\n    return\
    \ sum;\n}", "{\n    long sum = 0;\n    foreach(e; lst)\n    {\n        sum +=\
    \ cast(long)(ceil(e) * ceil(e));\n    }\n    return sum;\n}", "{\n    long sum\
    \ = 0;\n    foreach(e; lst)\n    {\n        sum += cast(long)(ceil(e)) * cast(long)(ceil(e));\n\
    \    }\n    return sum;\n}", "{\n    long sum = 0;\n    foreach(e; lst)\n    {\n\
    \        sum += cast(long)(ceil(e)) * cast(long)(ceil(e));\n    }\n    return\
    \ sum;\n}", "{\n    long sum = 0;\n    foreach(e; lst)\n    {\n        sum +=\
    \ cast(long)(ceil(e)) * cast(long)(ceil(e));\n    }\n    return sum;\n}", "{\n\
    \    long sum = 0;\n    foreach(float f; lst)\n    {\n        sum += cast(long)ceil(f)\
    \ * cast(long)ceil(f);\n    }\n    return sum;\n}", "{\n    long sum = 0;\n  \
    \  foreach(e; lst)\n    {\n        sum += ceil(e) * ceil(e);\n    }\n    return\
    \ sum;\n}", "{\n    long sum = 0;\n    foreach(float f; lst)\n    {\n        sum\
    \ += cast(long)ceil(f) * cast(long)ceil(f);\n    }\n    return sum;\n}", "{\n\
    \    long sum = 0;\n    foreach(e; lst)\n    {\n        sum += cast(long)(ceil(e)\
    \ * ceil(e));\n    }\n    return sum;\n}", "{\n    long sum = 0;\n    foreach(e;\
    \ lst)\n    {\n        sum += cast(long)(ceil(e) * ceil(e));\n    }\n    return\
    \ sum;\n}", "{\n    long sum = 0;\n    foreach(float f; lst)\n    {\n        sum\
    \ += cast(long)ceil(f) * cast(long)ceil(f);\n    }\n    return sum;\n}", "{\n\
    \    long sum = 0;\n    foreach(float f; lst)\n    {\n        sum += cast(long)ceil(f)\
    \ * cast(long)ceil(f);\n    }\n    return sum;\n}", "{\n    long sum = 0;\n  \
    \  foreach(e; lst)\n    {\n        sum += cast(long)(ceil(e)) * cast(long)(ceil(e));\n\
    \    }\n    return sum;\n}", "{\n    long sum = 0;\n    foreach(e; lst)\n    {\n\
    \        sum += cast(long)(ceil(e) * ceil(e));\n    }\n    return sum;\n}", "{\n\
    \    long sum = 0;\n    foreach(e; lst)\n    {\n        sum += cast(long)(ceil(e))\
    \ * cast(long)(ceil(e));\n    }\n    return sum;\n}", "{\n    long sum = 0;\n\
    \    foreach(float num; lst)\n    {\n        sum += cast(long) ceil(num) * cast(long)\
    \ ceil(num);\n    }\n    return sum;\n}", "{\n    return lst.map!(a => cast(long)(ceil(a))).map!(a\
    \ => a * a).reduce!((a, b) => a + b)(0);\n}", "{\n    long sum = 0;\n    foreach(e;\
    \ lst)\n    {\n        sum += cast(long)(ceil(e)) * cast(long)(ceil(e));\n   \
    \ }\n    return sum;\n}", "{\n    long sum = 0;\n    foreach(e; lst)\n    {\n\
    \        sum += cast(long)(ceil(e)) * cast(long)(ceil(e));\n    }\n    return\
    \ sum;\n}", "{\n    long sum = 0;\n    foreach(e; lst) {\n        sum += cast(long)(ceil(e)\
    \ * ceil(e));\n    }\n    return sum;\n}", "{\n    long sum = 0;\n    foreach(e;\
    \ lst)\n    {\n        sum += cast(long)(ceil(e) * ceil(e));\n    }\n    return\
    \ sum;\n}", "{\n    long sum = 0;\n    foreach(e; lst)\n    {\n        sum +=\
    \ cast(long)(ceil(e) * ceil(e));\n    }\n    return sum;\n}", "{\n    long result\
    \ = 0;\n    foreach(elem; lst)\n    {\n        result += cast(long)ceil(elem)\
    \ * cast(long)ceil(elem);\n    }\n    return result;\n}", "{\n    long sum = 0;\n\
    \    foreach(e; lst)\n    {\n        sum += cast(long)(ceil(e)) * cast(long)(ceil(e));\n\
    \    }\n    return sum;\n}", "{\n    long sum = 0;\n    foreach(e; lst)\n    {\n\
    \        sum += cast(long)(ceil(e)) * cast(long)(ceil(e));\n    }\n    return\
    \ sum;\n}", "{\n    long sum = 0;\n    foreach(e; lst)\n    {\n        sum +=\
    \ cast(long)(ceil(e)) * cast(long)(ceil(e));\n    }\n    return sum;\n}", "{\n\
    \    long sum = 0;\n    foreach(float x; lst)\n    {\n        sum += cast(long)(ceil(x))\
    \ * cast(long)(ceil(x));\n    }\n    return sum;\n}", "{\n    long sum = 0;\n\
    \    foreach(e; lst)\n    {\n        sum += cast(long)(ceil(e)) * cast(long)(ceil(e));\n\
    \    }\n    return sum;\n}", "{\n    long sum = 0;\n    foreach(e; lst)\n    {\n\
    \        sum += cast(long)(ceil(e)) * cast(long)(ceil(e));\n    }\n    return\
    \ sum;\n}", "{\n    long sum = 0;\n    foreach(e; lst)\n    {\n        sum +=\
    \ cast(long)(ceil(e)) * cast(long)(ceil(e));\n    }\n    return sum;\n}", "{\n\
    \    long sum = 0;\n    foreach(e; lst)\n    {\n        sum += cast(long)(ceil(e))\
    \ * cast(long)(ceil(e));\n    }\n    return sum;\n}", "{\n    long sum = 0;\n\
    \    foreach(e; lst)\n    {\n        sum += ceil(e) * ceil(e);\n    }\n    return\
    \ sum;\n}", "{\n    long sum = 0;\n    foreach(e; lst)\n    {\n        sum +=\
    \ cast(long)(e*e);\n    }\n    return sum;\n}", "{\n    long sum = 0;\n    foreach(e;\
    \ lst)\n    {\n        sum += cast(long)(ceil(e)) * cast(long)(ceil(e));\n   \
    \ }\n    return sum;\n}", "{\n    long sum = 0;\n    foreach(e; lst)\n    {\n\
    \        sum += cast(long)(ceil(e)) * cast(long)(ceil(e));\n    }\n    return\
    \ sum;\n}", "{\n    long sum = 0;\n    foreach(e; lst)\n    {\n        sum +=\
    \ cast(long)(ceil(e)) * cast(long)(ceil(e));\n    }\n    return sum;\n}", "{\n\
    \    long sum = 0;\n    foreach(float f; lst)\n    {\n        sum += cast(long)ceil(f)\
    \ * cast(long)ceil(f);\n    }\n    return sum;\n}", "{\n    long result = 0;\n\
    \    foreach(elem; lst)\n    {\n        result += cast(long)ceil(elem) * cast(long)ceil(elem);\n\
    \    }\n    return result;\n}", "{\n    long sum = 0;\n    foreach(e; lst)\n \
    \   {\n        sum += cast(long)(ceil(e) * ceil(e));\n    }\n    return sum;\n\
    }", "{\n    long sum = 0;\n    foreach(e; lst)\n    {\n        sum += cast(long)(ceil(e))\
    \ * cast(long)(ceil(e));\n    }\n    return sum;\n}", "{\n    long result = 0;\n\
    \    foreach(elem; lst)\n    {\n        result += cast(long)ceil(elem) * cast(long)ceil(elem);\n\
    \    }\n    return result;\n}", "{\n    long sum = 0;\n    foreach(float f; lst)\n\
    \    {\n        sum += cast(long)ceil(f) * cast(long)ceil(f);\n    }\n    return\
    \ sum;\n}", "{\n    long sum = 0;\n    foreach(e; lst)\n    {\n        sum +=\
    \ cast(long)(ceil(e) * ceil(e));\n    }\n    return sum;\n}", "{\n    long sum\
    \ = 0;\n    foreach(e; lst)\n    {\n        sum += cast(long)(ceil(e)) * cast(long)(ceil(e));\n\
    \    }\n    return sum;\n}", "{\n    long sum = 0;\n    foreach(e; lst)\n    {\n\
    \        sum += cast(long)(ceil(e)) * cast(long)(ceil(e));\n    }\n    return\
    \ sum;\n}", "{\n    long sum = 0;\n    foreach(float i; lst)\n    {\n        sum\
    \ += cast(long)ceil(i) * cast(long)ceil(i);\n    }\n    return sum;\n}", "{\n\
    \    long sum = 0;\n    foreach(float f; lst)\n    {\n        sum += cast(long)ceil(f)\
    \ * cast(long)ceil(f);\n    }\n    return sum;\n}", "{\n    long sum = 0;\n  \
    \  foreach(float f; lst)\n    {\n        sum += cast(long)ceil(f) * cast(long)ceil(f);\n\
    \    }\n    return sum;\n}", "{\n    long sum = 0;\n    foreach(float i; lst)\n\
    \    {\n        sum += cast(long)ceil(i) * cast(long)ceil(i);\n    }\n    return\
    \ sum;\n}", "{\n    long sum = 0;\n    foreach(float num; lst)\n    {\n      \
    \  sum += cast(long)ceil(num) * cast(long)ceil(num);\n    }\n    return sum;\n\
    }", "{\n    return lst.map!(a => cast(long)(ceil(a))).map!(a => a * a).sum;\n}",
  "{\n    long sum = 0;\n    foreach(float i; lst)\n    {\n        sum += cast(long)ceil(i)\
    \ * cast(long)ceil(i);\n    }\n    return sum;\n}", "{\n    long sum = 0;\n  \
    \  foreach(e; lst)\n    {\n        sum += cast(long)(ceil(e) * ceil(e));\n   \
    \ }\n    return sum;\n}", "{\n    long sum = 0;\n    foreach(e; lst)\n    {\n\
    \        sum += cast(long)(ceil(e)) * cast(long)(ceil(e));\n    }\n    return\
    \ sum;\n}", "{\n    long sum = 0;\n    foreach(e; lst)\n    {\n        sum +=\
    \ cast(long)(ceil(e)) * cast(long)(ceil(e));\n    }\n    return sum;\n}", "{\n\
    \    long sum = 0;\n    foreach(e; lst)\n    {\n        sum += cast(long)(ceil(e)\
    \ * ceil(e));\n    }\n    return sum;\n}", "{\n    long sum = 0;\n    foreach(e;\
    \ lst)\n    {\n        sum += cast(long)(ceil(e)) * cast(long)(ceil(e));\n   \
    \ }\n    return sum;\n}", "{\n    long sum = 0;\n    foreach(e; lst)\n    {\n\
    \        sum += cast(long)(ceil(e)) * cast(long)(ceil(e));\n    }\n    return\
    \ sum;\n}", "{\n    long sum = 0;\n    foreach(float f; lst)\n    {\n        sum\
    \ += cast(long) ceil(f) * cast(long) ceil(f);\n    }\n    return sum;\n}", "{\n\
    \    long sum = 0;\n    foreach(e; lst)\n    {\n        sum += cast(long)(ceil(e))\
    \ * cast(long)(ceil(e));\n    }\n    return sum;\n}", "{\n    long sum = 0;\n\
    \    foreach(e; lst)\n    {\n        sum += cast(long)(ceil(e) * ceil(e));\n \
    \   }\n    return sum;\n}", "{\n    long sum = 0;\n    foreach(e; lst)\n    {\n\
    \        sum += cast(long)(ceil(e) * ceil(e));\n    }\n    return sum;\n}", "{\n\
    \    long sum = 0;\n    foreach(e; lst)\n    {\n        sum += cast(long)(ceil(e))\
    \ * cast(long)(ceil(e));\n    }\n    return sum;\n}", "{\n    long sum = 0;\n\
    \    foreach(e; lst)\n    {\n        sum += cast(long)(ceil(e) * ceil(e));\n \
    \   }\n    return sum;\n}", "{\n    long sum = 0;\n    foreach(e; lst)\n    {\n\
    \        sum += cast(long)(ceil(e)) * cast(long)(ceil(e));\n    }\n    return\
    \ sum;\n}", "{\n    long sum = 0;\n    foreach(e; lst)\n    {\n        sum +=\
    \ cast(long)(ceil(e)) * cast(long)(ceil(e));\n    }\n    return sum;\n}", "{\n\
    \    long sum = 0;\n    foreach(e; lst)\n    {\n        sum += cast(long)(ceil(e))\
    \ * cast(long)(ceil(e));\n    }\n    return sum;\n}", "{\n    long sum = 0;\n\
    \    foreach(e; lst)\n    {\n        sum += cast(long)(ceil(e)) * cast(long)(ceil(e));\n\
    \    }\n    return sum;\n}", "{\n    return lst.map!(a => cast(long)(ceil(a))).map!(a\
    \ => a * a).sum;\n}", "{\n    long sum = 0;\n    foreach(e; lst)\n    {\n    \
    \    sum += cast(long)(ceil(e) * ceil(e));\n    }\n    return sum;\n}"]
stop_tokens:
- "\n\n"
- "\nvoid"
- "\nbool"
- "\nint"

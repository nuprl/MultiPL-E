language: d
name: HumanEval_42_incr_list
results:
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ res = new long[l.length];\n    foreach (i, e; l)\n    {\n        res[i] = e\
    \ + 1;\n    }\n    return res;\n}\nunittest\n{\n    alias candidate = incr_list;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([3L, 2L, 1L]) == [4L,\
    \ 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L,\
    \ 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpz4_00fmo.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret;\n    foreach(i; l)\n    {\n        ret ~= i + 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list2(long[]\
    \ l) \n{\n    return map!((a) => a + 1)(l);\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list3(long[] l) \n{\n    return\
    \ map!((a) => a + 1)(l);\n}\n/*\nReturn list with elements incremented by 1.\n\
    \            \n*/\nlong[] incr_list4(long[] l) \n{\n    return map!((a) => a +\
    \ 1)(l);\n}\n/*\nReturn list with elements incremented by 1.\n            \n*/\n\
    long[] incr_list5(long[] l) \n{\n    return map!((a) => a + 1)(l);\n}\n/*\nReturn\
    \ list with elements incremented by 1.\n            \n*/\nlong[] incr_list6(long[]\
    \ l) \n{\n    return map!((a) => a + 1)(l);\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list7(long[] l) \n{\n    return\
    \ map!((a) => a + 1)(l);\n}\n/*\nReturn list with elements incremented by 1.\n\
    \            \n*/\nlong[] incr_list8(long[] l) \n{\n    return map!((a) => a +\
    \ 1)(l);\n}\n/*\nReturn list with elements incremented by 1.\n            \n*/\n\
    long[] incr_list9(long[] l) \n{\n    return map!((a) => a + 1)(l);\n}\n/*\nReturn\
    \ list with elements incremented by 1.\n            \n*/\nlong[] incr_list10(long[]\
    \ l) \n{\n    return map!((a) => a + 1)(l);\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list11(long[] l) \n{\nunittest\n\
    {\n    alias candidate = incr_list;\n\n    assert(candidate([]) == []);\n    assert(candidate([3L,\
    \ 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L,\
    \ 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpvuvmbmsc.d(94): Error: found \''unittest\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvuvmbmsc.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n        ret[i] = e + 1;\n \
    \   return ret;\n}\nunittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1v_sxabr.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_2(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n\
    \    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list_3(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list_4(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i, e; l)\n    {\n\
    \        ret[i] = e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list_5(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_6(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n\
    \    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list_7(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l)\nunittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpqq43zpjk.d(89): Error: found \''unittest\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqq43zpjk.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements decremented by\
    \ 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l)\n    {\n        ret[i] = e - 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i, e; l)\n    {\n\
    \        ret[i] = e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ decremented by 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e -\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements decremented by 1.\n            \n*/\nlong[] decr_list(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i, e; l)\n    {\n\
    \        ret[i] = e - 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\n\
    unittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([]) == []);\n\
    \    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpvwhhmvid.d(91): Error: expression expected, not \''unittest\''\n/tmp/tmpvwhhmvid.d(92):
    Error: found \''{\'' when expecting \'';\'' following statement\n/tmp/tmpvwhhmvid.d(99):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvwhhmvid.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n        ret[i] = e + 1;\n \
    \   return ret;\n}\n/*\nReturn list with elements decremented by 1.\n        \
    \    \n*/\nlong[] decr_list(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l)\n        ret[i] = e - 1;\n    return ret;\n}\n/*\nReturn\
    \ list with elements incremented by 1.\n            \n*/\nlong[] incr_list(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i, e; l)\n       \
    \ ret[i] = e + 1;\n    return ret;\n}\n/*\nReturn list with elements decremented\
    \ by 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i, e; l)\n        ret[i] = e - 1;\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i, e; l)\n       \
    \ ret[i] = e + 1;\n    return ret;\n}\n/*\nReturn list with elements decremented\
    \ by 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i, e; l)\n        ret[i] = e - 1;\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i, e; l)\n       \
    \ ret[i] = e + 1;\n    return ret;\n}\n/*\nReturn list with elements decremented\
    \ by 1.\n            \n*/\nlong[] decr_list(long[] l) \n\nunittest\n{\n    alias\
    \ candidate = incr_list;\n\n    assert(candidate([]) == []);\n    assert(candidate([3L,\
    \ 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L,\
    \ 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmphknot444.d(86): Error: semicolon expected following function
    declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphknot444.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l) \n    {\n        ret[i] = e\
    \ + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_2(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i, e; l) \n    {\n        ret[i] = e + 1;\n   \
    \ }\n    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n   \
    \         \n*/\nlong[] incr_list_3(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l) \n    {\n        ret[i] = e + 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list_4(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i, e; l) \n    {\n\
    \        ret[i] = e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list_5(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l) \n    {\n        ret[i] = e\
    \ + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_6(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i, e; l) \n    {\n        ret[i] = e + 1;\n   \
    \ }\n    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n   \
    \         \n*/\nlong[] incr_list_7(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(\nunittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpbmnb5igo.d(89): Error: basic type expected, not unittest\n/tmp/tmpbmnb5igo.d(89):
    Error: no identifier for declarator int\n/tmp/tmpbmnb5igo.d(89): Error: found
    \''unittest\'' when expecting \'';\''\n/tmp/tmpbmnb5igo.d(97): Error: found \''void\''
    when expecting \'')\''\n/tmp/tmpbmnb5igo.d(97): Error: found \''{\'' when expecting
    \'';\'' following statement\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbmnb5igo.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\nunittest\n{\n    alias candidate = incr_list;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([3L, 2L, 1L]) == [4L,\
    \ 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L,\
    \ 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgvt05g61.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\nunittest\n{\n    alias candidate = incr_list;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([3L, 2L, 1L]) == [4L,\
    \ 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L,\
    \ 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0wf5r23j.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ res = new long[l.length];\n    foreach (i, e; l)\n    {\n        res[i] = e\
    \ + 1;\n    }\n    return res;\n}\nunittest\n{\n    alias candidate = incr_list;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([3L, 2L, 1L]) == [4L,\
    \ 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L,\
    \ 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpz4_00fmo.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_2(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n\
    \    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list_3(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list_4(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i, e; l)\n    {\n\
    \        ret[i] = e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list_5(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_6(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n\
    \    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list_7(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l)\nunittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpqq43zpjk.d(89): Error: found \''unittest\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqq43zpjk.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\nunittest\n{\n    alias candidate = incr_list;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([3L, 2L, 1L]) == [4L,\
    \ 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L,\
    \ 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0wf5r23j.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret;\n    ret = new long[l.length];\n    foreach (i, e; l)\n    {\n        ret[i]\
    \ = e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements decremented\
    \ by 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[] ret;\n \
    \   ret = new long[l.length];\n    foreach (i, e; l)\n    {\n        ret[i] =\
    \ e - 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented\
    \ by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[] ret;\n \
    \   ret = new long[l.length];\n    foreach (i, e; l)\n    {\n        ret[i] =\
    \ e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements decremented\
    \ by 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[] ret;\n \
    \   ret = new long[l.length];\n    foreach (i, e; l)\n    {\n        ret[i] =\
    \ e - 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented\
    \ by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[] ret;\n \
    \   ret = new long[l.length];\n    foreach (i, e; l)\n    {\n        ret[i] =\
    \ e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements decremented\
    \ by 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[] ret;\n \
    \   ret = new long[l.length];\n    foreach (i, e; l)\n    {\n        ret[i] =\
    \ e - 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented\
    \ by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[] ret;\n \
    \   ret = new long\nunittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpf4wnmhls.d(95): Error: found \''unittest\'' when expecting \'';\''
    following statement\n/tmp/tmpf4wnmhls.d(103): Error: found \''EOF\'' when expecting
    \''}\'' following compound statement\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmpf4wnmhls.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\nunittest\n{\n    alias candidate = incr_list;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([3L, 2L, 1L]) == [4L,\
    \ 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L,\
    \ 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgvt05g61.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i,e; l) \n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements decremented by\
    \ 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i,e; l) \n    {\n        ret[i] = e - 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i,e; l) \n    {\n\
    \        ret[i] = e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ decremented by 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i,e; l) \n    {\n        ret[i] = e -\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i,e; l) \n    {\n        ret[i] = e + 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements decremented by 1.\n            \n*/\nlong[] decr_list(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i,e; l) \n    {\n\
    \        ret[i] = e - 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i,e; l) \n    {\n       \nunittest\n\
    {\n    alias candidate = incr_list;\n\n    assert(candidate([]) == []);\n    assert(candidate([3L,\
    \ 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L,\
    \ 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpju04bkrs.d(91): Error: found \''unittest\'' instead of statement\n/tmp/tmpju04bkrs.d(99):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpju04bkrs.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\nunittest\n{\n    alias candidate = incr_list;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([3L, 2L, 1L]) == [4L,\
    \ 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L,\
    \ 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgvt05g61.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements decremented by\
    \ 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l)\n    {\n        ret[i] = e - 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i, e; l)\n    {\n\
    \        ret[i] = e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ decremented by 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e -\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements decremented by 1.\n            \n*/\nlong[] decr_list(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i, e; l)\n    {\n\
    \        ret[i] = e - 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\n\
    unittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([]) == []);\n\
    \    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpvwhhmvid.d(91): Error: expression expected, not \''unittest\''\n/tmp/tmpvwhhmvid.d(92):
    Error: found \''{\'' when expecting \'';\'' following statement\n/tmp/tmpvwhhmvid.d(99):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvwhhmvid.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\nunittest\n{\n    alias candidate = incr_list;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([3L, 2L, 1L]) == [4L,\
    \ 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L,\
    \ 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgvt05g61.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_2(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e + 1;\n    }\n\
    \    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list_3(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i,e; l)\n    {\n        ret[i] = e + 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list_4(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i,e; l)\n    {\n \
    \       ret[i] = e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list_5(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_6(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e + 1;\n    }\n\
    \    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list_7(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i,e; l)\nunittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp0njhajxd.d(89): Error: found \''unittest\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0njhajxd.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements decremented by\
    \ 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i,e; l)\n    {\n        ret[i] = e - 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i,e; l)\n    {\n \
    \       ret[i] = e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ decremented by 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e -\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i,e; l)\n    {\n        ret[i] = e + 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements decremented by 1.\n            \n*/\nlong[] decr_list(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i,e; l)\n    {\n \
    \       ret[i] = e - 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e +\n\
    unittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([]) == []);\n\
    \    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpcy3su7yf.d(91): Error: expression expected, not \''unittest\''\n/tmp/tmpcy3su7yf.d(92):
    Error: found \''{\'' when expecting \'';\'' following statement\n/tmp/tmpcy3su7yf.d(99):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcy3su7yf.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret;\n    foreach(e; l)\n    {\n        ret ~= e + 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements decremented by 1.\n            \n*/\nlong[] decr_list(long[]\
    \ l) \n{\n    long[] ret;\n    foreach(e; l)\n    {\n        ret ~= e - 1;\n \
    \   }\n    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n \
    \           \n*/\nlong[] incr_list(long[] l) \n{\n    long[] ret;\n    foreach(e;\
    \ l)\n    {\n        ret ~= e + 1;\n    }\n    return ret;\n}\n/*\nReturn list\
    \ with elements decremented by 1.\n            \n*/\nlong[] decr_list(long[] l)\
    \ \n{\n    long[] ret;\n    foreach(e; l)\n    {\n        ret ~= e - 1;\n    }\n\
    \    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list(long[] l) \n{\n    long[] ret;\n    foreach(e; l)\n\
    \    {\n        ret ~= e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with\
    \ elements decremented by 1.\n            \n*/\nlong[] decr_list(long[] l) \n\
    {\n    long[] ret;\n    foreach(e; l)\n    {\n        ret ~= e - 1;\n    }\n \
    \   return ret;\n}\n/*\nReturn list with elements incremented by 1.\n        \
    \    \n*/\nlong[] incr_list(long[] l) \n{\n    long[] ret;\n    foreach(e; l)\n\
    \    {\n        ret ~= e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with\
    \ elements decremented by 1.\n            \n*/\nlong[] decr_list(long[] l) \n\
    {\n    long[] ret;\n    foreach(e; l)\n    {\n        ret ~= e - 1;\n    }\n \
    \   return ret\nunittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmptfintjfg.d(106): Error: found \''unittest\'' when expecting
    \'';\'' following return statement\n/tmp/tmptfintjfg.d(114): Error: found \''EOF\''
    when expecting \''}\'' following compound statement\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmptfintjfg.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret;\n    ret = new long[l.length];\n    foreach (i, v; l)\n    {\n        ret[i]\
    \ = v + 1;\n    }\n    return ret;\n}\nunittest\n{\n    alias candidate = incr_list;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([3L, 2L, 1L]) == [4L,\
    \ 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L,\
    \ 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpko9sgznu.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ result = new long[l.length];\n    foreach (i, e; l)\n    {\n        result[i]\
    \ = e + 1;\n    }\n    return result;\n}\n/*\nReturn list with elements incremented\
    \ by 1.\n            \n*/\nlong[] incr_list_by_1(long[] l) \n{\n    long[] result\
    \ = new long[l.length];\n    foreach (i, e; l)\n    {\n        result[i] = e +\
    \ 1;\n    }\n    return result;\n}\n/*\nReturn list with elements incremented\
    \ by 1.\n            \n*/\nlong[] incr_list_by_1_2(long[] l) \n{\n    long[] result\
    \ = new long[l.length];\n    foreach (i, e; l)\n    {\n        result[i] = e +\
    \ 1;\n    }\n    return result;\n}\n/*\nReturn list with elements incremented\
    \ by 1.\n            \n*/\nlong[] incr_list_by_1_3(long[] l) \n{\n    long[] result\
    \ = new long[l.length];\n    foreach (i, e; l)\n    {\n        result[i] = e +\
    \ 1;\n    }\n    return result;\n}\n/*\nReturn list with elements incremented\
    \ by 1.\n            \n*/\nlong[] incr_list_by_1_4(long[] l) \n{\n    long[] result\
    \ = new long[l.length];\n    foreach (i, e; l)\n    {\n        result[i] = e +\
    \ 1;\n    }\n    return result;\n}\n/*\nReturn list with elements incremented\
    \ by 1.\n            \n*/\nlong[] incr_list_by_1_5(long[] l) \n{\n    long[] result\
    \ = new long[l.length];\n    foreach (i, e; l)\n    {\n        result[i] = e +\
    \ 1;\n    }\n    return result;\n}\n/*\nReturn list with elements incremented\
    \ by 1.\n            \n*/\nlong[] incr_list_by_1_6(long[] l) \n{\n   \nunittest\n\
    {\n    alias candidate = incr_list;\n\n    assert(candidate([]) == []);\n    assert(candidate([3L,\
    \ 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L,\
    \ 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpaexvdqag.d(88): Error: found \''unittest\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpaexvdqag.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret;\n    foreach(elem; l)\n    {\n        ret ~= elem + 1;\n    }\n    return\
    \ ret;\n}\n/*\nReturn list with elements incremented by 1.\n            \n*/\n\
    long[] incr_list_2(long[] l) \n{\n    long[] ret;\n    foreach(elem; l)\n    {\n\
    \        ret ~= elem + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list_3(long[] l) \n{\n    long[]\
    \ ret;\n    foreach(elem; l)\n    {\n        ret ~= elem + 1;\n    }\n    return\
    \ ret;\n}\n/*\nReturn list with elements incremented by 1.\n            \n*/\n\
    long[] incr_list_4(long[] l) \n{\n    long[] ret;\n    foreach(elem; l)\n    {\n\
    \        ret ~= elem + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list_5(long[] l) \n{\n    long[]\
    \ ret;\n    foreach(elem; l)\n    {\n        ret ~= elem + 1;\n    }\n    return\
    \ ret;\n}\n/*\nReturn list with elements incremented by 1.\n            \n*/\n\
    long[] incr_list_6(long[] l) \n{\n    long[] ret;\n    foreach(elem; l)\n    {\n\
    \        ret ~= elem + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list_7(long[] l) \n{\n    long[]\
    \ ret;\n    foreach(elem; l)\n    {\n        ret ~= elem + 1;\n    }\n    return\
    \ ret;\n}\n/*\nReturn list with elements incremented by 1.\n            \n*/\n\
    long[] incr_list_8(long[] l) \n{\n    long[] ret;\nunittest\n{\n    alias candidate\
    \ = incr_list;\n\n    assert(candidate([]) == []);\n    assert(candidate([3L,\
    \ 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L,\
    \ 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpksih8dsd.d(101): Error: found \''unittest\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpksih8dsd.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ result = new long[l.length];\n    foreach (i, ref e; l)\n    {\n        result[i]\
    \ = e + 1;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = incr_list;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([3L, 2L, 1L]) == [4L,\
    \ 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L,\
    \ 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpp0g26fj0.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i,e; l)\n        ret[i] = e + 1;\n  \
    \  return ret;\n}\nunittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjksqise5.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret;\n    ret = new long[l.length];\n    foreach (i,e; l) \n    {\n        ret[i]\
    \ = e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented\
    \ by 1.\n            \n*/\nlong[] incr_list_2(long[] l) \n{\n    long[] ret;\n\
    \    ret = new long[l.length];\n    foreach (i,e; l) \n    {\n        ret[i] =\
    \ e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented\
    \ by 1.\n            \n*/\nlong[] incr_list_3(long[] l) \n{\n    long[] ret;\n\
    \    ret = new long[l.length];\n    foreach (i,e; l) \n    {\n        ret[i] =\
    \ e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented\
    \ by 1.\n            \n*/\nlong[] incr_list_4(long[] l) \n{\n    long[] ret;\n\
    \    ret = new long[l.length];\n    foreach (i,e; l) \n    {\n        ret[i] =\
    \ e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented\
    \ by 1.\n            \n*/\nlong[] incr_list_5(long[] l) \n{\n    long[] ret;\n\
    \    ret = new long[l.length];\n    foreach (i,e; l) \n    {\n        ret[i] =\
    \ e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented\
    \ by 1.\n            \n*/\nlong[] incr_list_6(long[] l) \n{\n    long[] ret;\n\
    \    ret = new long[l.length];\n    foreach (i,e; l) \n    {\n        ret[i] =\
    \ e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented\
    \ by 1.\n            \n*/\nlong[] incr_list_7(long\nunittest\n{\n    alias candidate\
    \ = incr_list;\n\n    assert(candidate([]) == []);\n    assert(candidate([3L,\
    \ 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L,\
    \ 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp6hqbqrak.d(92): Error: found \''unittest\'' when expecting \'')\''\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6hqbqrak.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ result = new long[l.length];\n    foreach (i, e; l) \n    {\n        result[i]\
    \ = e + 1;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = incr_list;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([3L, 2L, 1L]) == [4L,\
    \ 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L,\
    \ 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwpu3s98u.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ r;\n    foreach(i; l)\n    {\n        r ~= i + 1;\n    }\n    return r;\n}\n\
    unittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([]) == []);\n\
    \    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpl3956aal.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ result = new long[l.length];\n    foreach (i, e; l) \n    {\n        result[i]\
    \ = e + 1;\n    }\n    return result;\n}\n/*\nReturn list with elements incremented\
    \ by 1.\n            \n*/\nlong[] incr_list_by_1(long[] l) \n{\n    long[] result\
    \ = new long[l.length];\n    foreach (i, e; l) \n    {\n        result[i] = e\
    \ + 1;\n    }\n    return result;\n}\n/*\nReturn list with elements incremented\
    \ by 1.\n            \n*/\nlong[] incr_list_by_1_2(long[] l) \n{\n    long[] result\
    \ = new long[l.length];\n    foreach (i, e; l) \n    {\n        result[i] = e\
    \ + 1;\n    }\n    return result;\n}\n/*\nReturn list with elements incremented\
    \ by 1.\n            \n*/\nlong[] incr_list_by_1_3(long[] l) \n{\n    long[] result\
    \ = new long[l.length];\n    foreach (i, e; l) \n    {\n        result[i] = e\
    \ + 1;\n    }\n    return result;\n}\n/*\nReturn list with elements incremented\
    \ by 1.\n            \n*/\nlong[] incr_list_by_1_4(long[] l) \n{\n    long[] result\
    \ = new long[l.length];\n    foreach (i, e; l) \n    {\n        result[i] = e\
    \ + 1;\n    }\n    return result;\n}\n/*\nReturn list with elements incremented\
    \ by 1.\n            \n*/\nlong[] incr_list_by_1_5(long[] l) \n{\n    long[] result\
    \ = new long[l.length];\n    foreach (i, e; l) \n    {\n        result[i] = e\
    \ + 1;\n    }\n    return result;\n}\n/*\nReturn list with elements incremented\
    \ by 1.\n            \n*/\nlong[] incr_list_by_1_6(long[] l\nunittest\n{\n   \
    \ alias candidate = incr_list;\n\n    assert(candidate([]) == []);\n    assert(candidate([3L,\
    \ 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L,\
    \ 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpq1tmdnix.d(86): Error: found \''unittest\'' when expecting \'')\''\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpq1tmdnix.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements decremented by\
    \ 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i,e; l)\n    {\n        ret[i] = e - 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i,e; l)\n    {\n \
    \       ret[i] = e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ decremented by 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e -\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i,e; l)\n    {\n        ret[i] = e + 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements decremented by 1.\n            \n*/\nlong[] decr_list(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i,e; l)\n    {\n \
    \       ret[i] = e - 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e +\n\
    unittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([]) == []);\n\
    \    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpcy3su7yf.d(91): Error: expression expected, not \''unittest\''\n/tmp/tmpcy3su7yf.d(92):
    Error: found \''{\'' when expecting \'';\'' following statement\n/tmp/tmpcy3su7yf.d(99):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcy3su7yf.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements decremented by\
    \ 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l)\n    {\n        ret[i] = e - 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i, e; l)\n    {\n\
    \        ret[i] = e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ decremented by 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e -\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements decremented by 1.\n            \n*/\nlong[] decr_list(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i, e; l)\n    {\n\
    \        ret[i] = e - 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\n\
    unittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([]) == []);\n\
    \    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpvwhhmvid.d(91): Error: expression expected, not \''unittest\''\n/tmp/tmpvwhhmvid.d(92):
    Error: found \''{\'' when expecting \'';\'' following statement\n/tmp/tmpvwhhmvid.d(99):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvwhhmvid.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_2(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e + 1;\n    }\n\
    \    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list_3(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i,e; l)\n    {\n        ret[i] = e + 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list_4(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i,e; l)\n    {\n \
    \       ret[i] = e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list_5(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_6(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e + 1;\n    }\n\
    \    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list_7(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i,e; l)\nunittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp0njhajxd.d(89): Error: found \''unittest\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0njhajxd.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\nunittest\n{\n    alias candidate = incr_list;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([3L, 2L, 1L]) == [4L,\
    \ 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L,\
    \ 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0wf5r23j.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements decremented by\
    \ 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l)\n    {\n        ret[i] = e - 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i, e; l)\n    {\n\
    \        ret[i] = e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ decremented by 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e -\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements decremented by 1.\n            \n*/\nlong[] decr_list(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i, e; l)\n    {\n\
    \        ret[i] = e - 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\n\
    unittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([]) == []);\n\
    \    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpvwhhmvid.d(91): Error: expression expected, not \''unittest\''\n/tmp/tmpvwhhmvid.d(92):
    Error: found \''{\'' when expecting \'';\'' following statement\n/tmp/tmpvwhhmvid.d(99):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvwhhmvid.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ res = new long[l.length];\n    foreach (i, e; l)\n    {\n        res[i] = e\
    \ + 1;\n    }\n    return res;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_by_ref(ref long[] l) \n{\n    foreach\
    \ (i, e; l)\n    {\n        l[i] = e + 1;\n    }\n    return l;\n}\n/*\nReturn\
    \ list with elements incremented by 1.\n            \n*/\nlong[] incr_list_by_ref_2(ref\
    \ long[] l) \n{\n    foreach (i, e; l)\n    {\n        l[i] = e + 1;\n    }\n\
    \    return l;\n}\n/*\nReturn list with elements incremented by 1.\n         \
    \   \n*/\nlong[] incr_list_by_ref_3(ref long[] l) \n{\n    foreach (i, e; l)\n\
    \    {\n        l[i] = e + 1;\n    }\n    return l;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list_by_ref_4(ref long[] l)\
    \ \n{\n    foreach (i, e; l)\n    {\n        l[i] = e + 1;\n    }\n    return\
    \ l;\n}\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[]\
    \ incr_list_by_ref_5(ref long[] l) \n{\n    foreach (i, e; l)\n    {\n       \
    \ l[i] = e + 1;\n    }\n    return l;\n}\n/*\nReturn list with elements incremented\
    \ by 1.\n            \n*/\nlong[] incr_list_by_ref_6(ref long[] l) \n{\n    foreach\
    \ (i, e; l)\n    {\n        l[i] = e + 1;\n    }\n    return l;\n}\n/*\nReturn\
    \ list with elements incremented by 1.\n            \n*/\nlong[] incr_list_by_\n\
    unittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([]) == []);\n\
    \    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp7eb6pbk_.d(93): Error: semicolon expected, not \''unittest\''\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7eb6pbk_.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\nunittest\n{\n    alias candidate = incr_list;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([3L, 2L, 1L]) == [4L,\
    \ 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L,\
    \ 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0wf5r23j.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list2(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n\
    \    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list3(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list4(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i, e; l)\n    {\n\
    \        ret[i] = e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list5(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list6(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n\
    \    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list7(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l)\n    {\n        ret\nunittest\n{\n    alias candidate =\
    \ incr_list;\n\n    assert(candidate([]) == []);\n    assert(candidate([3L, 2L,\
    \ 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L, 0L,\
    \ 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp4p7mwtji.d(91): Error: found \''unittest\'' when expecting \'';\''
    following statement\n/tmp/tmp4p7mwtji.d(99): Error: found \''EOF\'' when expecting
    \''}\'' following compound statement\n/tmp/tmp4p7mwtji.d(99): Error: found \''EOF\''
    when expecting \''}\'' following compound statement\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmp4p7mwtji.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret;\n    foreach(i; l)\n    {\n        ret ~= i + 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements decremented by 1.\n            \n*/\nlong[] decr_list(long[]\
    \ l) \n{\n    long[] ret;\n    foreach(i; l)\n    {\n        ret ~= i - 1;\n \
    \   }\n    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n \
    \           \n*/\nlong[] incr_list(long[] l) \n{\n    long[] ret;\n    foreach(i;\
    \ l)\n    {\n        ret ~= i + 1;\n    }\n    return ret;\n}\n/*\nReturn list\
    \ with elements decremented by 1.\n            \n*/\nlong[] decr_list(long[] l)\
    \ \n{\n    long[] ret;\n    foreach(i; l)\n    {\n        ret ~= i - 1;\n    }\n\
    \    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list(long[] l) \n{\n    long[] ret;\n    foreach(i; l)\n\
    \    {\n        ret ~= i + 1;\n    }\n    return ret;\n}\n/*\nReturn list with\
    \ elements decremented by 1.\n            \n*/\nlong[] decr_list(long[] l) \n\
    {\n    long[] ret;\n    foreach(i; l)\n    {\n        ret ~= i - 1;\n    }\n \
    \   return ret;\n}\n/*\nReturn list with elements incremented by 1.\n        \
    \    \n*/\nlong[] incr_list(long[] l) \n{\n    long[] ret;\n    foreach(i; l)\n\
    \    {\n        ret ~= i + 1;\n    }\n    return ret;\n}\n/*\nReturn list with\
    \ elements decremented by 1.\n            \n*/\nlong[] decr_list(long[] l) \n\
    {\n    long[] ret;\n    foreach(i; l)\n    {\n        ret ~= i - 1;\n    }\n \
    \   return ret\nunittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp36ktybdr.d(106): Error: found \''unittest\'' when expecting
    \'';\'' following return statement\n/tmp/tmp36ktybdr.d(114): Error: found \''EOF\''
    when expecting \''}\'' following compound statement\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmp36ktybdr.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l) \n    {\n        ret[i] = e\
    \ + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list2(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i, e; l) \n    {\n        ret[i] = e + 1;\n   \
    \ }\n    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n   \
    \         \n*/\nlong[] incr_list3(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l) \n    {\n        ret[i] = e + 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list4(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i, e; l) \n    {\n\
    \        ret[i] = e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list5(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l) \n    {\n        ret[i] = e\
    \ + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list6(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i, e; l) \n    {\n        ret[i] = e + 1;\n   \
    \ }\n    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n   \
    \         \n*/\nlong[] incr_list7(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l)\nunittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmplgigv3x_.d(89): Error: found \''unittest\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplgigv3x_.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret;\n    foreach(i; l)\n    {\n        ret ~= i + 1;\n    }\n    return ret;\n\
    }\nunittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([]) ==\
    \ []);\n    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdt8le3cl.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ res = new long[l.length];\n    foreach (i, e; l)\n    {\n        res[i] = e\
    \ + 1;\n    }\n    return res;\n}\nunittest\n{\n    alias candidate = incr_list;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([3L, 2L, 1L]) == [4L,\
    \ 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L,\
    \ 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpz4_00fmo.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_2(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e + 1;\n    }\n\
    \    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list_3(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i,e; l)\n    {\n        ret[i] = e + 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list_4(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i,e; l)\n    {\n \
    \       ret[i] = e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list_5(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_6(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e + 1;\n    }\n\
    \    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list_7(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i,e; l)\nunittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp0njhajxd.d(89): Error: found \''unittest\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0njhajxd.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_2(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n\
    \    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list_3(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list_4(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i, e; l)\n    {\n\
    \        ret[i] = e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list_5(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_6(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n\
    \    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list_7(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l)\nunittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpqq43zpjk.d(89): Error: found \''unittest\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqq43zpjk.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret;\n    foreach(int i; l)\n    {\n        ret ~= i + 1;\n    }\n    return\
    \ ret;\n}\nunittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwf9l4zh7.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ res = new long[l.length];\n    foreach (i, e; l)\n        res[i] = e + 1;\n\
    \    return res;\n}\n/*\nReturn list with elements decremented by 1.\n       \
    \     \n*/\nlong[] decr_list(long[] l) \n{\n    long[] res = new long[l.length];\n\
    \    foreach (i, e; l)\n        res[i] = e - 1;\n    return res;\n}\n/*\nReturn\
    \ list with elements incremented by 1.\n            \n*/\nlong[] incr_list(long[]\
    \ l) \n{\n    long[] res = new long[l.length];\n    foreach (i, e; l)\n      \
    \  res[i] = e + 1;\n    return res;\n}\n/*\nReturn list with elements decremented\
    \ by 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[] res = new\
    \ long[l.length];\n    foreach (i, e; l)\n        res[i] = e - 1;\n    return\
    \ res;\n}\n/*\nReturn list with elements incremented by 1.\n            \n*/\n\
    long[] incr_list(long[] l) \n{\n    long[] res = new long[l.length];\n    foreach\
    \ (i, e; l)\n        res[i] = e + 1;\n    return res;\n}\n/*\nReturn list with\
    \ elements decremented by 1.\n            \n*/\nlong[] decr_list(long[] l) \n\
    {\n    long[] res = new long[l.length];\n    foreach (i, e; l)\n        res[i]\
    \ = e - 1;\n    return res;\n}\n/*\nReturn list with elements incremented by 1.\n\
    \            \n*/\nlong[] incr_list(long[] l) \n{\n    long[] res = new long[l.length];\n\
    \    foreach (i, e; l)\n        res[i] = e + 1;\n    return res;\n}\n/*\nReturn\
    \ list with elements decremented by 1.\n            \n*/\nlong[] decr_list(long[]\
    \ l) \n\nunittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp_yxuw_5o.d(86): Error: semicolon expected following function
    declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_yxuw_5o.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements decremented by\
    \ 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i,e; l)\n    {\n        ret[i] = e - 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i,e; l)\n    {\n \
    \       ret[i] = e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ decremented by 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e -\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i,e; l)\n    {\n        ret[i] = e + 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements decremented by 1.\n            \n*/\nlong[] decr_list(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i,e; l)\n    {\n \
    \       ret[i] = e - 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e +\n\
    unittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([]) == []);\n\
    \    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpcy3su7yf.d(91): Error: expression expected, not \''unittest\''\n/tmp/tmpcy3su7yf.d(92):
    Error: found \''{\'' when expecting \'';\'' following statement\n/tmp/tmpcy3su7yf.d(99):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcy3su7yf.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ res = new long[l.length];\n    foreach (i, e; l)\n    {\n        res[i] = e\
    \ + 1;\n    }\n    return res;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list2(long[] l) \n{\n    long[] res = new\
    \ long[l.length];\n    foreach (i, e; l)\n    {\n        res[i] = e + 1;\n   \
    \ }\n    return res;\n}\n/*\nReturn list with elements incremented by 1.\n   \
    \         \n*/\nlong[] incr_list3(long[] l) \n{\n    long[] res = new long[l.length];\n\
    \    foreach (i, e; l)\n    {\n        res[i] = e + 1;\n    }\n    return res;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list4(long[]\
    \ l) \n{\n    long[] res = new long[l.length];\n    foreach (i, e; l)\n    {\n\
    \        res[i] = e + 1;\n    }\n    return res;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list5(long[] l) \n{\n    long[]\
    \ res = new long[l.length];\n    foreach (i, e; l)\n    {\n        res[i] = e\
    \ + 1;\n    }\n    return res;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list6(long[] l) \n{\n    long[] res = new\
    \ long[l.length];\n    foreach (i, e; l)\n    {\n        res[i] = e + 1;\n   \
    \ }\n    return res;\n}\n/*\nReturn list with elements incremented by 1.\n   \
    \         \n*/\nlong[] incr_list7(long[] l) \n{\n    long[] res = new long[l.length];\n\
    \    foreach (i, e; l)\n    {\n        res\nunittest\n{\n    alias candidate =\
    \ incr_list;\n\n    assert(candidate([]) == []);\n    assert(candidate([3L, 2L,\
    \ 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L, 0L,\
    \ 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp_hmn9wg8.d(91): Error: found \''unittest\'' when expecting \'';\''
    following statement\n/tmp/tmp_hmn9wg8.d(99): Error: found \''EOF\'' when expecting
    \''}\'' following compound statement\n/tmp/tmp_hmn9wg8.d(99): Error: found \''EOF\''
    when expecting \''}\'' following compound statement\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmp_hmn9wg8.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_2(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n\
    \    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list_3(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list_4(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i, e; l)\n    {\n\
    \        ret[i] = e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list_5(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_6(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n\
    \    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list_7(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l)\nunittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpqq43zpjk.d(89): Error: found \''unittest\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqq43zpjk.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ res = new long[l.length];\n    foreach (i, e; l)\n    {\n        res[i] = e\
    \ + 1;\n    }\n    return res;\n}\nunittest\n{\n    alias candidate = incr_list;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([3L, 2L, 1L]) == [4L,\
    \ 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L,\
    \ 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpz4_00fmo.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\nunittest\n{\n    alias candidate = incr_list;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([3L, 2L, 1L]) == [4L,\
    \ 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L,\
    \ 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0wf5r23j.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ res = new long[l.length];\n    foreach (i, e; l) \n    {\n        res[i] = e\
    \ + 1;\n    }\n    return res;\n}\n/*\nReturn list with elements decremented by\
    \ 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[] res = new long[l.length];\n\
    \    foreach (i, e; l) \n    {\n        res[i] = e - 1;\n    }\n    return res;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list(long[]\
    \ l) \n{\n    long[] res = new long[l.length];\n    foreach (i, e; l) \n    {\n\
    \        res[i] = e + 1;\n    }\n    return res;\n}\n/*\nReturn list with elements\
    \ decremented by 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[]\
    \ res = new long[l.length];\n    foreach (i, e; l) \n    {\n        res[i] = e\
    \ - 1;\n    }\n    return res;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[] res = new long[l.length];\n\
    \    foreach (i, e; l) \n    {\n        res[i] = e + 1;\n    }\n    return res;\n\
    }\n/*\nReturn list with elements decremented by 1.\n            \n*/\nlong[] decr_list(long[]\
    \ l) \n{\n    long[] res = new long[l.length];\n    foreach (i, e; l) \n    {\n\
    \        res[i] = e - 1;\n    }\n    return res;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ res = new long[l.length];\n    foreach (i, e; l) \n    {\n       \nunittest\n\
    {\n    alias candidate = incr_list;\n\n    assert(candidate([]) == []);\n    assert(candidate([3L,\
    \ 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L,\
    \ 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpnmzyqxs9.d(91): Error: found \''unittest\'' instead of statement\n/tmp/tmpnmzyqxs9.d(99):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnmzyqxs9.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ res = new long[l.length];\n    foreach (i, e; l)\n    {\n        res[i] = e\
    \ + 1;\n    }\n    return res;\n}\n/*\nReturn list with elements decremented by\
    \ 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[] res = new long[l.length];\n\
    \    foreach (i, e; l)\n    {\n        res[i] = e - 1;\n    }\n    return res;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list(long[]\
    \ l) \n{\n    long[] res = new long[l.length];\n    foreach (i, e; l)\n    {\n\
    \        res[i] = e + 1;\n    }\n    return res;\n}\n/*\nReturn list with elements\
    \ decremented by 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[]\
    \ res = new long[l.length];\n    foreach (i, e; l)\n    {\n        res[i] = e\
    \ - 1;\n    }\n    return res;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[] res = new long[l.length];\n\
    \    foreach (i, e; l)\n    {\n        res[i] = e + 1;\n    }\n    return res;\n\
    }\n/*\nReturn list with elements decremented by 1.\n            \n*/\nlong[] decr_list(long[]\
    \ l) \n{\n    long[] res = new long[l.length];\n    foreach (i, e; l)\n    {\n\
    \        res[i] = e - 1;\n    }\n    return res;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ res = new long[l.length];\n    foreach (i, e; l)\n    {\n        res[i] = e\
    \ +\nunittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpsihiszzb.d(91): Error: expression expected, not \''unittest\''\n/tmp/tmpsihiszzb.d(92):
    Error: found \''{\'' when expecting \'';\'' following statement\n/tmp/tmpsihiszzb.d(99):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsihiszzb.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\nunittest\n{\n    alias candidate = incr_list;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([3L, 2L, 1L]) == [4L,\
    \ 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L,\
    \ 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgvt05g61.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret;\n    foreach(e; l)\n        ret ~= e + 1;\n    return ret;\n}\nunittest\n\
    {\n    alias candidate = incr_list;\n\n    assert(candidate([]) == []);\n    assert(candidate([3L,\
    \ 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L,\
    \ 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpotww7iz7.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret;\n    foreach(i; l)\n        ret ~= i + 1;\n    return ret;\n}\n/*\nReturn\
    \ list with elements decremented by 1.\n            \n*/\nlong[] decr_list(long[]\
    \ l) \n{\n    long[] ret;\n    foreach(i; l)\n        ret ~= i - 1;\n    return\
    \ ret;\n}\n/*\nReturn list with elements incremented by 1.\n            \n*/\n\
    long[] incr_list(long[] l) \n{\n    long[] ret;\n    foreach(i; l)\n        ret\
    \ ~= i + 1;\n    return ret;\n}\n/*\nReturn list with elements decremented by\
    \ 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[] ret;\n    foreach(i;\
    \ l)\n        ret ~= i - 1;\n    return ret;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret;\n    foreach(i; l)\n        ret ~= i + 1;\n    return ret;\n}\n/*\nReturn\
    \ list with elements decremented by 1.\n            \n*/\nlong[] decr_list(long[]\
    \ l) \n{\n    long[] ret;\n    foreach(i; l)\n        ret ~= i - 1;\n    return\
    \ ret;\n}\n/*\nReturn list with elements incremented by 1.\n            \n*/\n\
    long[] incr_list(long[] l) \n{\n    long[] ret;\n    foreach(i; l)\n        ret\
    \ ~= i + 1;\n    return ret;\n}\n/*\nReturn list with elements decremented by\
    \ 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[] ret;\n    foreach(i;\
    \ l)\n        ret ~= i - 1;\n    return ret;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret;\n    foreach(i; l\nunittest\n{\n    alias candidate = incr_list;\n\n  \
    \  assert(candidate([]) == []);\n    assert(candidate([3L, 2L, 1L]) == [4L, 3L,\
    \ 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L,\
    \ 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp5h3voutk.d(99): Error: found \''unittest\'' when expecting \'')\''\n/tmp/tmp5h3voutk.d(107):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5h3voutk.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements decremented by\
    \ 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l)\n    {\n        ret[i] = e - 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i, e; l)\n    {\n\
    \        ret[i] = e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ decremented by 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e -\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements decremented by 1.\n            \n*/\nlong[] decr_list(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i, e; l)\n    {\n\
    \        ret[i] = e - 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\n\
    unittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([]) == []);\n\
    \    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpvwhhmvid.d(91): Error: expression expected, not \''unittest\''\n/tmp/tmpvwhhmvid.d(92):
    Error: found \''{\'' when expecting \'';\'' following statement\n/tmp/tmpvwhhmvid.d(99):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvwhhmvid.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ result = new long[l.length];\n    foreach (i, e; l)\n    {\n        result[i]\
    \ = e + 1;\n    }\n    return result;\n}\n/*\nReturn list with elements incremented\
    \ by 1.\n            \n*/\nlong[] incr_list_2(long[] l) \n{\n    long[] result\
    \ = new long[l.length];\n    foreach (i, e; l)\n    {\n        result[i] = e +\
    \ 1;\n    }\n    return result;\n}\n/*\nReturn list with elements incremented\
    \ by 1.\n            \n*/\nlong[] incr_list_3(long[] l) \n{\n    long[] result\
    \ = new long[l.length];\n    foreach (i, e; l)\n    {\n        result[i] = e +\
    \ 1;\n    }\n    return result;\n}\n/*\nReturn list with elements incremented\
    \ by 1.\n            \n*/\nlong[] incr_list_4(long[] l) \n{\n    long[] result\
    \ = new long[l.length];\n    foreach (i, e; l)\n    {\n        result[i] = e +\
    \ 1;\n    }\n    return result;\n}\n/*\nReturn list with elements incremented\
    \ by 1.\n            \n*/\nlong[] incr_list_5(long[] l) \n{\n    long[] result\
    \ = new long[l.length];\n    foreach (i, e; l)\n    {\n        result[i] = e +\
    \ 1;\n    }\n    return result;\n}\n/*\nReturn list with elements incremented\
    \ by 1.\n            \n*/\nlong[] incr_list_6(long[] l) \n{\n    long[] result\
    \ = new long[l.length];\n    foreach (i, e; l)\n    {\n        result[i] = e +\
    \ 1;\n    }\n    return result;\n}\n/*\nReturn list with elements incremented\
    \ by 1.\n            \n*/\nlong[] incr_list_7(long[] l) \n{\n    long[] result\
    \ = new long[l.length];\n    foreach (i, e; l)\nunittest\n{\n    alias candidate\
    \ = incr_list;\n\n    assert(candidate([]) == []);\n    assert(candidate([3L,\
    \ 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L,\
    \ 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp3d7f8h0h.d(89): Error: found \''unittest\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3d7f8h0h.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements decremented by\
    \ 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i,e; l)\n    {\n        ret[i] = e - 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i,e; l)\n    {\n \
    \       ret[i] = e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ decremented by 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e -\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i,e; l)\n    {\n        ret[i] = e + 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements decremented by 1.\n            \n*/\nlong[] decr_list(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i,e; l)\n    {\n \
    \       ret[i] = e - 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e +\n\
    unittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([]) == []);\n\
    \    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpcy3su7yf.d(91): Error: expression expected, not \''unittest\''\n/tmp/tmpcy3su7yf.d(92):
    Error: found \''{\'' when expecting \'';\'' following statement\n/tmp/tmpcy3su7yf.d(99):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcy3su7yf.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ result;\n    foreach (elem; l) \n    {\n        result ~= elem + 1;\n    }\n\
    \    return result;\n}\n/*\nReturn list with elements incremented by 1.\n    \
    \        \n*/\nlong[] incr_list2(long[] l) \n{\n    long[] result;\n    foreach\
    \ (elem; l) \n    {\n        result ~= elem + 1;\n    }\n    return result;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list3(long[]\
    \ l) \n{\n    long[] result;\n    foreach (elem; l) \n    {\n        result ~=\
    \ elem + 1;\n    }\n    return result;\n}\n/*\nReturn list with elements incremented\
    \ by 1.\n            \n*/\nlong[] incr_list4(long[] l) \n{\n    long[] result;\n\
    \    foreach (elem; l) \n    {\n        result ~= elem + 1;\n    }\n    return\
    \ result;\n}\n/*\nReturn list with elements incremented by 1.\n            \n\
    */\nlong[] incr_list5(long[] l) \n{\n    long[] result;\n    foreach (elem; l)\
    \ \n    {\n        result ~= elem + 1;\n    }\n    return result;\n}\n/*\nReturn\
    \ list with elements incremented by 1.\n            \n*/\nlong[] incr_list6(long[]\
    \ l) \n{\n    long[] result;\n    foreach (elem; l) \n    {\n        result ~=\
    \ elem + 1;\n    }\n    return result;\n}\n/*\nReturn list with elements incremented\
    \ by 1.\n            \n*/\nlong[] incr_list7(long[] l) \n{\n    long[] result;\n\
    \    foreach (elem; l) \n    {\n        result ~= elem + 1;\n    }\n    return\
    \ result;\n}\n/*\nReturn list with elements incremented by 1.\n            \n\
    */\nlong[] incr_list8(long[] l) \n{\n    long[] result;\nunittest\n{\n    alias\
    \ candidate = incr_list;\n\n    assert(candidate([]) == []);\n    assert(candidate([3L,\
    \ 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L,\
    \ 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp2remoxzk.d(101): Error: found \''unittest\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2remoxzk.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret;\n    ret = new long[l.length];\n    foreach (i,e; l) \n    {\n        ret[i]\
    \ = e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements decremented\
    \ by 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[] ret;\n \
    \   ret = new long[l.length];\n    foreach (i,e; l) \n    {\n        ret[i] =\
    \ e - 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented\
    \ by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[] ret;\n \
    \   ret = new long[l.length];\n    foreach (i,e; l) \n    {\n        ret[i] =\
    \ e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements decremented\
    \ by 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[] ret;\n \
    \   ret = new long[l.length];\n    foreach (i,e; l) \n    {\n        ret[i] =\
    \ e - 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented\
    \ by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[] ret;\n \
    \   ret = new long[l.length];\n    foreach (i,e; l) \n    {\n        ret[i] =\
    \ e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements decremented\
    \ by 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[] ret;\n \
    \   ret = new long[l.length];\n    foreach (i,e; l) \n    {\n        ret[i] =\
    \ e - 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented\
    \ by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[] ret;\nunittest\n\
    {\n    alias candidate = incr_list;\n\n    assert(candidate([]) == []);\n    assert(candidate([3L,\
    \ 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L,\
    \ 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpvlb8_ien.d(94): Error: found \''unittest\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvlb8_ien.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ r = new long[l.length];\n    foreach (i, e; l)\n    {\n        r[i] = e + 1;\n\
    \    }\n    return r;\n}\n/*\nReturn list with elements incremented by 1.\n  \
    \          \n*/\nlong[] incr_list_2(long[] l) \n{\n    long[] r = new long[l.length];\n\
    \    foreach (i, e; l)\n    {\n        r[i] = e + 1;\n    }\n    return r;\n}\n\
    /*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list_3(long[]\
    \ l) \n{\n    long[] r = new long[l.length];\n    foreach (i, e; l)\n    {\n \
    \       r[i] = e + 1;\n    }\n    return r;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list_4(long[] l) \n{\n    long[]\
    \ r = new long[l.length];\n    foreach (i, e; l)\n    {\n        r[i] = e + 1;\n\
    \    }\n    return r;\n}\n/*\nReturn list with elements incremented by 1.\n  \
    \          \n*/\nlong[] incr_list_5(long[] l) \n{\n    long[] r = new long[l.length];\n\
    \    foreach (i, e; l)\n    {\n        r[i] = e + 1;\n    }\n    return r;\n}\n\
    /*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list_6(long[]\
    \ l) \n{\n    long[] r = new long[l.length];\n    foreach (i, e; l)\n    {\n \
    \       r[i] = e + 1;\n    }\n    return r;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list_7(long[] l) \n{\n    long[]\
    \ r = new long[l.length];\n    foreach (i, e; l)\nunittest\n{\n    alias candidate\
    \ = incr_list;\n\n    assert(candidate([]) == []);\n    assert(candidate([3L,\
    \ 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L,\
    \ 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp00t2o1m4.d(89): Error: found \''unittest\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp00t2o1m4.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ res = new long[l.length];\n    foreach (i, e; l)\n    {\n        res[i] = e\
    \ + 1;\n    }\n    return res;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_range(long[] l) \n{\n    long[] res =\
    \ new long[l.length];\n    foreach (e; l)\n    {\n        res ~= e + 1;\n    }\n\
    \    return res;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list_foreach(long[] l) \n{\n    long[] res = new long[l.length];\n\
    \    foreach (e; l)\n    {\n        res[e] = e + 1;\n    }\n    return res;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list_foreach_range(long[]\
    \ l) \n{\n    long[] res = new long[l.length];\n    foreach (e; l)\n    {\n  \
    \      res ~= e + 1;\n    }\n    return res;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list_foreach_index(long[] l)\
    \ \n{\n    long[] res = new long[l.length];\n    foreach (i, e; l)\n    {\n  \
    \      res[i] = e + 1;\n    }\n    return res;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list_foreach_index_range(long[]\
    \ l) \n{\n    long[] res = new long[l.length];\n    foreach (i, e; l)\n    {\n\
    \        res ~= e + 1;\n    }\n    return res;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list_foreach_index_range_reverse(long[]\
    \ l) \n{\n    long[] res = new long[l.length];\n    foreach\nunittest\n{\n   \
    \ alias candidate = incr_list;\n\n    assert(candidate([]) == []);\n    assert(candidate([3L,\
    \ 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L,\
    \ 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpyuegyj0n.d(89): Error: found \''unittest\'' when expecting \''(\''\n/tmp/tmpyuegyj0n.d(90):
    Error: basic type expected, not {\n/tmp/tmpyuegyj0n.d(90): Error: no identifier
    for declarator int\n/tmp/tmpyuegyj0n.d(90): Error: found \''{\'' when expecting
    \'';\''\n/tmp/tmpyuegyj0n.d(91): Error: expression expected, not \''alias\''\n/tmp/tmpyuegyj0n.d(91):
    Error: found \''candidate\'' when expecting \'')\''\n/tmp/tmpyuegyj0n.d(91): Error:
    found \''=\'' instead of statement\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmpyuegyj0n.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i,e; l)\n        ret[i] = e + 1;\n  \
    \  return ret;\n}\n/*\nReturn list with elements incremented by 1.\n         \
    \   \n*/\nlong[] incr_list_2(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i,e; l)\n        ret[i] = e + 1;\n    return ret;\n}\n/*\nReturn\
    \ list with elements incremented by 1.\n            \n*/\nlong[] incr_list_3(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i,e; l)\n        ret[i]\
    \ = e + 1;\n    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n\
    \            \n*/\nlong[] incr_list_4(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i,e; l)\n        ret[i] = e + 1;\n    return ret;\n}\n/*\nReturn\
    \ list with elements incremented by 1.\n            \n*/\nlong[] incr_list_5(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i,e; l)\n        ret[i]\
    \ = e + 1;\n    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n\
    \            \n*/\nlong[] incr_list_6(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i,e; l)\n        ret[i] = e + 1;\n    return ret;\n}\n/*\nReturn\
    \ list with elements incremented by 1.\n            \n*/\nlong[] incr_list_7(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i,e; l)\n        ret[i]\
    \ = e + 1;\n    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n\
    \            \n*/\nlong\nunittest\n{\n    alias candidate = incr_list;\n\n   \
    \ assert(candidate([]) == []);\n    assert(candidate([3L, 2L, 1L]) == [4L, 3L,\
    \ 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L,\
    \ 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpzkklt2a2.d(85): Error: no identifier for declarator long\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpzkklt2a2.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ r = new long[l.length];\n    foreach (i, e; l)\n    {\n        r[i] = e + 1;\n\
    \    }\n    return r;\n}\n/*\nReturn list with elements incremented by 1.\n  \
    \          \n*/\nlong[] incr_list_2(long[] l) \n{\n    long[] r = new long[l.length];\n\
    \    foreach (i, e; l)\n    {\n        r[i] = e + 1;\n    }\n    return r;\n}\n\
    /*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list_3(long[]\
    \ l) \n{\n    long[] r = new long[l.length];\n    foreach (i, e; l)\n    {\n \
    \       r[i] = e + 1;\n    }\n    return r;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list_4(long[] l) \n{\n    long[]\
    \ r = new long[l.length];\n    foreach (i, e; l)\n    {\n        r[i] = e + 1;\n\
    \    }\n    return r;\n}\n/*\nReturn list with elements incremented by 1.\n  \
    \          \n*/\nlong[] incr_list_5(long[] l) \n{\n    long[] r = new long[l.length];\n\
    \    foreach (i, e; l)\n    {\n        r[i] = e + 1;\n    }\n    return r;\n}\n\
    /*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list_6(long[]\
    \ l) \n{\n    long[] r = new long[l.length];\n    foreach (i, e; l)\n    {\n \
    \       r[i] = e + 1;\n    }\n    return r;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list_7(long[] l) \n{\n    long[]\
    \ r = new long[l.length];\n    foreach (i, e; l)\nunittest\n{\n    alias candidate\
    \ = incr_list;\n\n    assert(candidate([]) == []);\n    assert(candidate([3L,\
    \ 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L,\
    \ 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp00t2o1m4.d(89): Error: found \''unittest\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp00t2o1m4.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_2(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n\
    \    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list_3(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list_4(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i, e; l)\n    {\n\
    \        ret[i] = e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list_5(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_6(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n\
    \    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list_7(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l)\nunittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpqq43zpjk.d(89): Error: found \''unittest\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqq43zpjk.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret;\n    ret.length = l.length;\n    foreach(i, e; l)\n    {\n        ret[i]\
    \ = e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented\
    \ by 1.\n            \n*/\nlong[] incr_list_2(long[] l) \n{\n    long[] ret;\n\
    \    ret.length = l.length;\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_3(long[] l) \n{\n    long[] ret;\n  \
    \  ret.length = l.length;\n    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n\
    \    }\n    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n\
    \            \n*/\nlong[] incr_list_4(long[] l) \n{\n    long[] ret;\n    ret.length\
    \ = l.length;\n    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n \
    \   return ret;\n}\n/*\nReturn list with elements incremented by 1.\n        \
    \    \n*/\nlong[] incr_list_5(long[] l) \n{\n    long[] ret;\n    ret.length =\
    \ l.length;\n    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n   \
    \ return ret;\n}\n/*\nReturn list with elements incremented by 1.\n          \
    \  \n*/\nlong[] incr_list_6(long[] l) \n{\n    long[] ret;\n    ret.length = l.length;\n\
    \    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list_7(long[]\
    \ l) \n{\n    long[] ret;\nunittest\n{\n    alias candidate = incr_list;\n\n \
    \   assert(candidate([]) == []);\n    assert(candidate([3L, 2L, 1L]) == [4L, 3L,\
    \ 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L,\
    \ 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp63u4fl3k.d(94): Error: found \''unittest\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp63u4fl3k.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\nunittest\n{\n    alias candidate = incr_list;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([3L, 2L, 1L]) == [4L,\
    \ 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L,\
    \ 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgvt05g61.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i,e; l)\n        ret[i] = e + 1;\n  \
    \  return ret;\n}\n/*\nReturn list with elements decremented by 1.\n         \
    \   \n*/\nlong[] decr_list(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i,e; l)\n        ret[i] = e - 1;\n    return ret;\n}\n/*\nReturn\
    \ list with elements incremented by 1.\n            \n*/\nlong[] incr_list(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i,e; l)\n        ret[i]\
    \ = e + 1;\n    return ret;\n}\n/*\nReturn list with elements decremented by 1.\n\
    \            \n*/\nlong[] decr_list(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i,e; l)\n        ret[i] = e - 1;\n    return ret;\n}\n/*\nReturn\
    \ list with elements incremented by 1.\n            \n*/\nlong[] incr_list(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i,e; l)\n        ret[i]\
    \ = e + 1;\n    return ret;\n}\n/*\nReturn list with elements decremented by 1.\n\
    \            \n*/\nlong[] decr_list(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i,e; l)\n        ret[i] = e - 1;\n    return ret;\n}\n/*\nReturn\
    \ list with elements incremented by 1.\n            \n*/\nlong[] incr_list(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i,e; l)\n        ret[i]\
    \ = e + 1;\n    return ret;\n}\n/*\nReturn list with elements decremented by 1.\n\
    \            \n*/\nlong[] decr_list(long[] l) \n\nunittest\n{\n    alias candidate\
    \ = incr_list;\n\n    assert(candidate([]) == []);\n    assert(candidate([3L,\
    \ 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L,\
    \ 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmps6rguels.d(86): Error: semicolon expected following function
    declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmps6rguels.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n        ret[i] = e + 1;\n \
    \   return ret;\n}\nunittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1v_sxabr.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ res;\n    foreach(e; l)\n    {\n        res ~= e + 1;\n    }\n    return res;\n\
    }\n/*\nReturn list with elements decremented by 1.\n            \n*/\nlong[] decr_list(long[]\
    \ l) \n{\n    long[] res;\n    foreach(e; l)\n    {\n        res ~= e - 1;\n \
    \   }\n    return res;\n}\n/*\nReturn list with elements incremented by 1.\n \
    \           \n*/\nlong[] incr_list(long[] l) \n{\n    long[] res;\n    foreach(e;\
    \ l)\n    {\n        res ~= e + 1;\n    }\n    return res;\n}\n/*\nReturn list\
    \ with elements decremented by 1.\n            \n*/\nlong[] decr_list(long[] l)\
    \ \n{\n    long[] res;\n    foreach(e; l)\n    {\n        res ~= e - 1;\n    }\n\
    \    return res;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list(long[] l) \n{\n    long[] res;\n    foreach(e; l)\n\
    \    {\n        res ~= e + 1;\n    }\n    return res;\n}\n/*\nReturn list with\
    \ elements decremented by 1.\n            \n*/\nlong[] decr_list(long[] l) \n\
    {\n    long[] res;\n    foreach(e; l)\n    {\n        res ~= e - 1;\n    }\n \
    \   return res;\n}\n/*\nReturn list with elements incremented by 1.\n        \
    \    \n*/\nlong[] incr_list(long[] l) \n{\n    long[] res;\n    foreach(e; l)\n\
    \    {\n        res ~= e + 1;\n    }\n    return res;\n}\n/*\nReturn list with\
    \ elements decremented by 1.\n            \n*/\nlong[] decr_list(long[] l) \n\
    {\n    long[] res;\n    foreach(e; l)\n    {\n        res ~= e - 1;\n    }\n \
    \   return res\nunittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp6cmh65k7.d(106): Error: found \''unittest\'' when expecting
    \'';\'' following return statement\n/tmp/tmp6cmh65k7.d(114): Error: found \''EOF\''
    when expecting \''}\'' following compound statement\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmp6cmh65k7.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret;\n    foreach(i; l)\n    {\n        ret ~= i + 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements decremented by 1.\n            \n*/\nlong[] decr_list(long[]\
    \ l) \n{\n    long[] ret;\n    foreach(i; l)\n    {\n        ret ~= i - 1;\n \
    \   }\n    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n \
    \           \n*/\nlong[] incr_list(long[] l) \n{\n    long[] ret;\n    foreach(i;\
    \ l)\n    {\n        ret ~= i + 1;\n    }\n    return ret;\n}\n/*\nReturn list\
    \ with elements decremented by 1.\n            \n*/\nlong[] decr_list(long[] l)\
    \ \n{\n    long[] ret;\n    foreach(i; l)\n    {\n        ret ~= i - 1;\n    }\n\
    \    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list(long[] l) \n{\n    long[] ret;\n    foreach(i; l)\n\
    \    {\n        ret ~= i + 1;\n    }\n    return ret;\n}\n/*\nReturn list with\
    \ elements decremented by 1.\n            \n*/\nlong[] decr_list(long[] l) \n\
    {\n    long[] ret;\n    foreach(i; l)\n    {\n        ret ~= i - 1;\n    }\n \
    \   return ret;\n}\n/*\nReturn list with elements incremented by 1.\n        \
    \    \n*/\nlong[] incr_list(long[] l) \n{\n    long[] ret;\n    foreach(i; l)\n\
    \    {\n        ret ~= i + 1;\n    }\n    return ret;\n}\n/*\nReturn list with\
    \ elements decremented by 1.\n            \n*/\nlong[] decr_list(long[] l) \n\
    {\n    long[] ret;\n    foreach(i; l)\n    {\n        ret ~= i - 1;\n    }\n \
    \   return ret\nunittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp36ktybdr.d(106): Error: found \''unittest\'' when expecting
    \'';\'' following return statement\n/tmp/tmp36ktybdr.d(114): Error: found \''EOF\''
    when expecting \''}\'' following compound statement\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmp36ktybdr.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\nunittest\n{\n    alias candidate = incr_list;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([3L, 2L, 1L]) == [4L,\
    \ 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L,\
    \ 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0wf5r23j.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret;\n    foreach(i; l)\n    {\n        ret ~= i + 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements decremented by 1.\n            \n*/\nlong[] decr_list(long[]\
    \ l) \n{\n    long[] ret;\n    foreach(i; l)\n    {\n        ret ~= i - 1;\n \
    \   }\n    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n \
    \           \n*/\nlong[] incr_list(long[] l) \n{\n    long[] ret;\n    foreach(i;\
    \ l)\n    {\n        ret ~= i + 1;\n    }\n    return ret;\n}\n/*\nReturn list\
    \ with elements decremented by 1.\n            \n*/\nlong[] decr_list(long[] l)\
    \ \n{\n    long[] ret;\n    foreach(i; l)\n    {\n        ret ~= i - 1;\n    }\n\
    \    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list(long[] l) \n{\n    long[] ret;\n    foreach(i; l)\n\
    \    {\n        ret ~= i + 1;\n    }\n    return ret;\n}\n/*\nReturn list with\
    \ elements decremented by 1.\n            \n*/\nlong[] decr_list(long[] l) \n\
    {\n    long[] ret;\n    foreach(i; l)\n    {\n        ret ~= i - 1;\n    }\n \
    \   return ret;\n}\n/*\nReturn list with elements incremented by 1.\n        \
    \    \n*/\nlong[] incr_list(long[] l) \n{\n    long[] ret;\n    foreach(i; l)\n\
    \    {\n        ret ~= i + 1;\n    }\n    return ret;\n}\n/*\nReturn list with\
    \ elements decremented by 1.\n            \n*/\nlong[] decr_list(long[] l) \n\
    {\n    long[] ret;\n    foreach(i; l)\n    {\n        ret ~= i - 1;\n    }\n \
    \   return ret\nunittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp36ktybdr.d(106): Error: found \''unittest\'' when expecting
    \'';\'' following return statement\n/tmp/tmp36ktybdr.d(114): Error: found \''EOF\''
    when expecting \''}\'' following compound statement\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmp36ktybdr.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\nunittest\n{\n    alias candidate = incr_list;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([3L, 2L, 1L]) == [4L,\
    \ 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L,\
    \ 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0wf5r23j.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ result = new long[l.length];\n    foreach (i, e; l)\n    {\n        result[i]\
    \ = e + 1;\n    }\n    return result;\n}\n/*\nReturn list with elements incremented\
    \ by 1.\n            \n*/\nlong[] incr_list_2(long[] l) \n{\n    long[] result\
    \ = new long[l.length];\n    foreach (i, e; l)\n    {\n        result[i] = e +\
    \ 1;\n    }\n    return result;\n}\n/*\nReturn list with elements incremented\
    \ by 1.\n            \n*/\nlong[] incr_list_3(long[] l) \n{\n    long[] result\
    \ = new long[l.length];\n    foreach (i, e; l)\n    {\n        result[i] = e +\
    \ 1;\n    }\n    return result;\n}\n/*\nReturn list with elements incremented\
    \ by 1.\n            \n*/\nlong[] incr_list_4(long[] l) \n{\n    long[] result\
    \ = new long[l.length];\n    foreach (i, e; l)\n    {\n        result[i] = e +\
    \ 1;\n    }\n    return result;\n}\n/*\nReturn list with elements incremented\
    \ by 1.\n            \n*/\nlong[] incr_list_5(long[] l) \n{\n    long[] result\
    \ = new long[l.length];\n    foreach (i, e; l)\n    {\n        result[i] = e +\
    \ 1;\n    }\n    return result;\n}\n/*\nReturn list with elements incremented\
    \ by 1.\n            \n*/\nlong[] incr_list_6(long[] l) \n{\n    long[] result\
    \ = new long[l.length];\n    foreach (i, e; l)\n    {\n        result[i] = e +\
    \ 1;\n    }\n    return result;\n}\n/*\nReturn list with elements incremented\
    \ by 1.\n            \n*/\nlong[] incr_list_7(long[] l) \n{\n    long[] result\
    \ = new long[l.length];\n    foreach (i, e; l)\nunittest\n{\n    alias candidate\
    \ = incr_list;\n\n    assert(candidate([]) == []);\n    assert(candidate([3L,\
    \ 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L,\
    \ 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp3d7f8h0h.d(89): Error: found \''unittest\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3d7f8h0h.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ res;\n    foreach(i; l)\n    {\n        res ~= i + 1;\n    }\n    return res;\n\
    }\n/*\nReturn list with elements decremented by 1.\n            \n*/\nlong[] decr_list(long[]\
    \ l) \n{\n    long[] res;\n    foreach(i; l)\n    {\n        res ~= i - 1;\n \
    \   }\n    return res;\n}\n/*\nReturn list with elements incremented by 1.\n \
    \           \n*/\nlong[] incr_list(long[] l) \n{\n    long[] res;\n    foreach(i;\
    \ l)\n    {\n        res ~= i + 1;\n    }\n    return res;\n}\n/*\nReturn list\
    \ with elements decremented by 1.\n            \n*/\nlong[] decr_list(long[] l)\
    \ \n{\n    long[] res;\n    foreach(i; l)\n    {\n        res ~= i - 1;\n    }\n\
    \    return res;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list(long[] l) \n{\n    long[] res;\n    foreach(i; l)\n\
    \    {\n        res ~= i + 1;\n    }\n    return res;\n}\n/*\nReturn list with\
    \ elements decremented by 1.\n            \n*/\nlong[] decr_list(long[] l) \n\
    {\n    long[] res;\n    foreach(i; l)\n    {\n        res ~= i - 1;\n    }\n \
    \   return res;\n}\n/*\nReturn list with elements incremented by 1.\n        \
    \    \n*/\nlong[] incr_list(long[] l) \n{\n    long[] res;\n    foreach(i; l)\n\
    \    {\n        res ~= i + 1;\n    }\n    return res;\n}\n/*\nReturn list with\
    \ elements decremented by 1.\n            \n*/\nlong[] decr_list(long[] l) \n\
    {\n    long[] res;\n    foreach(i; l)\n    {\n        res ~= i - 1;\n    }\n \
    \   return res\nunittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpuayktm2m.d(106): Error: found \''unittest\'' when expecting
    \'';\'' following return statement\n/tmp/tmpuayktm2m.d(114): Error: found \''EOF\''
    when expecting \''}\'' following compound statement\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmpuayktm2m.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ res = new long[l.length];\n    foreach (i, e; l)\n    {\n        res[i] = e\
    \ + 1;\n    }\n    return res;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_2(long[] l) \n{\n    long[] res = new\
    \ long[l.length];\n    foreach (i, e; l)\n    {\n        res[i] = e + 1;\n   \
    \ }\n    return res;\n}\n/*\nReturn list with elements incremented by 1.\n   \
    \         \n*/\nlong[] incr_list_3(long[] l) \n{\n    long[] res = new long[l.length];\n\
    \    foreach (i, e; l)\n    {\n        res[i] = e + 1;\n    }\n    return res;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list_4(long[]\
    \ l) \n{\n    long[] res = new long[l.length];\n    foreach (i, e; l)\n    {\n\
    \        res[i] = e + 1;\n    }\n    return res;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list_5(long[] l) \n{\n    long[]\
    \ res = new long[l.length];\n    foreach (i, e; l)\n    {\n        res[i] = e\
    \ + 1;\n    }\n    return res;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_6(long[] l) \n{\n    long[] res = new\
    \ long[l.length];\n    foreach (i, e; l)\n    {\n        res[i] = e + 1;\n   \
    \ }\n    return res;\n}\n/*\nReturn list with elements incremented by 1.\n   \
    \         \n*/\nlong[] incr_list_7(long[] l) \n{\n    long[] res = new long[l.length];\n\
    \    foreach (i, e; l)\nunittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp50k5e2td.d(89): Error: found \''unittest\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp50k5e2td.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret;\n    foreach(e; l)\n    {\n        ret ~= e + 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements decremented by 1.\n            \n*/\nlong[] decr_list(long[]\
    \ l) \n{\n    long[] ret;\n    foreach(e; l)\n    {\n        ret ~= e - 1;\n \
    \   }\n    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n \
    \           \n*/\nlong[] incr_list(long[] l) \n{\n    long[] ret;\n    foreach(e;\
    \ l)\n    {\n        ret ~= e + 1;\n    }\n    return ret;\n}\n/*\nReturn list\
    \ with elements decremented by 1.\n            \n*/\nlong[] decr_list(long[] l)\
    \ \n{\n    long[] ret;\n    foreach(e; l)\n    {\n        ret ~= e - 1;\n    }\n\
    \    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list(long[] l) \n{\n    long[] ret;\n    foreach(e; l)\n\
    \    {\n        ret ~= e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with\
    \ elements decremented by 1.\n            \n*/\nlong[] decr_list(long[] l) \n\
    {\n    long[] ret;\n    foreach(e; l)\n    {\n        ret ~= e - 1;\n    }\n \
    \   return ret;\n}\n/*\nReturn list with elements incremented by 1.\n        \
    \    \n*/\nlong[] incr_list(long[] l) \n{\n    long[] ret;\n    foreach(e; l)\n\
    \    {\n        ret ~= e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with\
    \ elements decremented by 1.\n            \n*/\nlong[] decr_list(long[] l) \n\
    {\n    long[] ret;\n    foreach(e; l)\n    {\n        ret ~= e - 1;\n    }\n \
    \   return ret\nunittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmptfintjfg.d(106): Error: found \''unittest\'' when expecting
    \'';\'' following return statement\n/tmp/tmptfintjfg.d(114): Error: found \''EOF\''
    when expecting \''}\'' following compound statement\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmptfintjfg.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements decremented by\
    \ 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l)\n    {\n        ret[i] = e - 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i, e; l)\n    {\n\
    \        ret[i] = e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ decremented by 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e -\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements decremented by 1.\n            \n*/\nlong[] decr_list(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i, e; l)\n    {\n\
    \        ret[i] = e - 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\n\
    unittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([]) == []);\n\
    \    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpvwhhmvid.d(91): Error: expression expected, not \''unittest\''\n/tmp/tmpvwhhmvid.d(92):
    Error: found \''{\'' when expecting \'';\'' following statement\n/tmp/tmpvwhhmvid.d(99):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvwhhmvid.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ res = new long[l.length];\n    foreach (i, e; l) \n    {\n        res[i] = e\
    \ + 1;\n    }\n    return res;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_2(long[] l) \n{\n    long[] res = new\
    \ long[l.length];\n    foreach (i, e; l) \n    {\n        res[i] = e + 1;\n  \
    \  }\n    return res;\n}\n/*\nReturn list with elements incremented by 1.\n  \
    \          \n*/\nlong[] incr_list_3(long[] l) \n{\n    long[] res = new long[l.length];\n\
    \    foreach (i, e; l) \n    {\n        res[i] = e + 1;\n    }\n    return res;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list_4(long[]\
    \ l) \n{\n    long[] res = new long[l.length];\n    foreach (i, e; l) \n    {\n\
    \        res[i] = e + 1;\n    }\n    return res;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list_5(long[] l) \n{\n    long[]\
    \ res = new long[l.length];\n    foreach (i, e; l) \n    {\n        res[i] = e\
    \ + 1;\n    }\n    return res;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_6(long[] l) \n{\n    long[] res = new\
    \ long[l.length];\n    foreach (i, e; l) \n    {\n        res[i] = e + 1;\n  \
    \  }\n    return res;\n}\n/*\nReturn list with elements incremented by 1.\n  \
    \          \n*/\nlong[] incr_list_7(long[] l) \n{\n    long[] res = new long[l.length];\n\
    \    foreach (\nunittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp_wrvl33u.d(89): Error: basic type expected, not unittest\n/tmp/tmp_wrvl33u.d(89):
    Error: no identifier for declarator int\n/tmp/tmp_wrvl33u.d(89): Error: found
    \''unittest\'' when expecting \'';\''\n/tmp/tmp_wrvl33u.d(97): Error: found \''void\''
    when expecting \'')\''\n/tmp/tmp_wrvl33u.d(97): Error: found \''{\'' when expecting
    \'';\'' following statement\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_wrvl33u.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_2(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n\
    \    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list_3(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list_4(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i, e; l)\n    {\n\
    \        ret[i] = e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list_5(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_6(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n\
    \    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list_7(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l)\nunittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpqq43zpjk.d(89): Error: found \''unittest\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqq43zpjk.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\nunittest\n{\n    alias candidate = incr_list;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([3L, 2L, 1L]) == [4L,\
    \ 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L,\
    \ 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgvt05g61.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ r;\n    foreach(i; l)\n    {\n        r ~= i + 1;\n    }\n    return r;\n}\n\
    unittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([]) == []);\n\
    \    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpl3956aal.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_by_ref(ref long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_by_ref_2(ref long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_by_ref_3(ref long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_by_ref_4(ref long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_by_ref_5(ref long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_by_ref_6(ref long[] l\nunittest\n{\n\
    \    alias candidate = incr_list;\n\n    assert(candidate([]) == []);\n    assert(candidate([3L,\
    \ 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L,\
    \ 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpo8ttkjt1.d(86): Error: found \''unittest\'' when expecting \'')\''\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpo8ttkjt1.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ result = new long[l.length];\n    foreach (i, e; l)\n    {\n        result[i]\
    \ = e + 1;\n    }\n    return result;\n}\n/*\nReturn list with elements decremented\
    \ by 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[] result =\
    \ new long[l.length];\n    foreach (i, e; l)\n    {\n        result[i] = e - 1;\n\
    \    }\n    return result;\n}\n/*\nReturn list with elements incremented by 1.\n\
    \            \n*/\nlong[] incr_list(long[] l) \n{\n    long[] result = new long[l.length];\n\
    \    foreach (i, e; l)\n    {\n        result[i] = e + 1;\n    }\n    return result;\n\
    }\n/*\nReturn list with elements decremented by 1.\n            \n*/\nlong[] decr_list(long[]\
    \ l) \n{\n    long[] result = new long[l.length];\n    foreach (i, e; l)\n   \
    \ {\n        result[i] = e - 1;\n    }\n    return result;\n}\n/*\nReturn list\
    \ with elements incremented by 1.\n            \n*/\nlong[] incr_list(long[] l)\
    \ \n{\n    long[] result = new long[l.length];\n    foreach (i, e; l)\n    {\n\
    \        result[i] = e + 1;\n    }\n    return result;\n}\n/*\nReturn list with\
    \ elements decremented by 1.\n            \n*/\nlong[] decr_list(long[] l) \n\
    {\n    long[] result = new long[l.length];\n    foreach (i, e; l)\n    {\n   \
    \     result[i] = e - 1;\n    }\n    return result;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ result = new long[l.length];\n    foreach (i, e; l)\n    {\n        result[i]\
    \ = e +\nunittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpnt2siorc.d(91): Error: expression expected, not \''unittest\''\n/tmp/tmpnt2siorc.d(92):
    Error: found \''{\'' when expecting \'';\'' following statement\n/tmp/tmpnt2siorc.d(99):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnt2siorc.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements decremented by\
    \ 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l)\n    {\n        ret[i] = e - 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i, e; l)\n    {\n\
    \        ret[i] = e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ decremented by 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e -\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements decremented by 1.\n            \n*/\nlong[] decr_list(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i, e; l)\n    {\n\
    \        ret[i] = e - 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\n\
    unittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([]) == []);\n\
    \    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpvwhhmvid.d(91): Error: expression expected, not \''unittest\''\n/tmp/tmpvwhhmvid.d(92):
    Error: found \''{\'' when expecting \'';\'' following statement\n/tmp/tmpvwhhmvid.d(99):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvwhhmvid.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ res = new long[l.length];\n    foreach (i, e; l)\n    {\n        res[i] = e\
    \ + 1;\n    }\n    return res;\n}\nunittest\n{\n    alias candidate = incr_list;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([3L, 2L, 1L]) == [4L,\
    \ 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L,\
    \ 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpz4_00fmo.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ res = new long[l.length];\n    foreach (i, e; l)\n    {\n        res[i] = e\
    \ + 1;\n    }\n    return res;\n}\nunittest\n{\n    alias candidate = incr_list;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([3L, 2L, 1L]) == [4L,\
    \ 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L,\
    \ 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpz4_00fmo.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret;\n    foreach(i; l)\n    {\n        ret ~= i + 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list_range(long[]\
    \ l) \n{\n    long[] ret;\n    foreach(i; l[])\n    {\n        ret ~= i + 1;\n\
    \    }\n    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n\
    \            \n*/\nlong[] incr_list_foreach(long[] l) \n{\n    long[] ret;\n \
    \   foreach(i; l)\n    {\n        ret ~= i + 1;\n    }\n    return ret;\n}\n/*\n\
    Return list with elements incremented by 1.\n            \n*/\nlong[] incr_list_foreach_range(long[]\
    \ l) \n{\n    long[] ret;\n    foreach(i; l[])\n    {\n        ret ~= i + 1;\n\
    \    }\n    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n\
    \            \n*/\nlong[] incr_list_foreach_ref(long[] l) \n{\n    long[] ret;\n\
    \    foreach(ref i; l)\n    {\n        ret ~= i + 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list_foreach_ref_range(long[]\
    \ l) \n{\n    long[] ret;\n    foreach(ref i; l[])\n    {\n        ret ~= i +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_foreach_index(long[] l) \n{\n    long[]\
    \ ret;\n    foreach(i, index; l)\n    {\n        ret ~= i + 1;\n    }\n    return\
    \ ret;\n}\n/*\nReturn list with elements incremented by 1.\n            \n*/\n\
    long[] incr_list_foreach_index_range(\nunittest\n{\n    alias candidate = incr_list;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([3L, 2L, 1L]) == [4L,\
    \ 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L,\
    \ 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmplhofi0q0.d(99): Error: basic type expected, not unittest\n/tmp/tmplhofi0q0.d(99):
    Error: found \''unittest\'' when expecting \'')\''\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmplhofi0q0.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ res = new long[l.length];\n    foreach (i, e; l) \n    {\n        res[i] = e\
    \ + 1;\n    }\n    return res;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list2(long[] l) \n{\n    long[] res = new\
    \ long[l.length];\n    foreach (i, e; l) \n    {\n        res[i] = e + 1;\n  \
    \  }\n    return res;\n}\n/*\nReturn list with elements incremented by 1.\n  \
    \          \n*/\nlong[] incr_list3(long[] l) \n{\n    long[] res = new long[l.length];\n\
    \    foreach (i, e; l) \n    {\n        res[i] = e + 1;\n    }\n    return res;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list4(long[]\
    \ l) \n{\n    long[] res = new long[l.length];\n    foreach (i, e; l) \n    {\n\
    \        res[i] = e + 1;\n    }\n    return res;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list5(long[] l) \n{\n    long[]\
    \ res = new long[l.length];\n    foreach (i, e; l) \n    {\n        res[i] = e\
    \ + 1;\n    }\n    return res;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list6(long[] l) \n{\n    long[] res = new\
    \ long[l.length];\n    foreach (i, e; l) \n    {\n        res[i] = e + 1;\n  \
    \  }\n    return res;\n}\n/*\nReturn list with elements incremented by 1.\n  \
    \          \n*/\nlong[] incr_list7(long[] l) \n{\n    long[] res = new long[l.length];\n\
    \    foreach (i, e; l)\nunittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp0fo4p8wi.d(89): Error: found \''unittest\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0fo4p8wi.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\nunittest\n{\n    alias candidate = incr_list;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([3L, 2L, 1L]) == [4L,\
    \ 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L,\
    \ 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0wf5r23j.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i,e; l)\n        ret[i] = e + 1;\n  \
    \  return ret;\n}\n/*\nReturn list with elements decremented by 1.\n         \
    \   \n*/\nlong[] decr_list(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i,e; l)\n        ret[i] = e - 1;\n    return ret;\n}\n/*\nReturn\
    \ list with elements squared.\n            \n*/\nlong[] square_list(long[] l)\
    \ \n{\n    long[] ret = new long[l.length];\n    foreach(i,e; l)\n        ret[i]\
    \ = e * e;\n    return ret;\n}\n/*\nReturn list with elements cubed.\n       \
    \     \n*/\nlong[] cube_list(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i,e; l)\n        ret[i] = e * e * e;\n    return ret;\n}\n/*\nReturn\
    \ list with elements negated.\n            \n*/\nlong[] negate_list(long[] l)\
    \ \n{\n    long[] ret = new long[l.length];\n    foreach(i,e; l)\n        ret[i]\
    \ = -e;\n    return ret;\n}\n/*\nReturn list with elements inverted.\n       \
    \     \n*/\nlong[] invert_list(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i,e; l)\n        ret[i] = 1 / e;\n    return ret;\n}\n/*\nReturn\
    \ list with elements raised to the power of `p`.\n            \n*/\nlong[] power_list(long[]\
    \ l, long p) \n{\n    long[] ret = new long[l.length];\n    foreach(i,e; l)\n\
    \        ret[i] = pow(e, p);\n    return ret;\n}\n/*\nReturn list with elements\
    \ raised to the power of `p`.\n            \n*/\nlong[] power_list(long[] l, double\
    \ p) \n\nunittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp0n9783re.d(86): Error: semicolon expected following function
    declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0n9783re.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ res;\n    foreach(i; l)\n    {\n        res ~= i + 1;\n    }\n    return res;\n\
    }\nunittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([]) ==\
    \ []);\n    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdb3rd53b.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_2(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n\
    \    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list_3(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list_4(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i, e; l)\n    {\n\
    \        ret[i] = e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list_5(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_6(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n\
    \    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list_7(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l)\nunittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpqq43zpjk.d(89): Error: found \''unittest\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqq43zpjk.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    for (int i = 0; i < l.length; i++)\n    {\n \
    \       ret[i] = l[i] + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list_2(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach (i, e; l)\n    {\n        ret[i] = e\
    \ + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_3(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach (i, e; l)\n    {\n        ret[i] = e + 1;\n   \
    \ }\n    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n   \
    \         \n*/\nlong[] incr_list_4(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach (i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list_5(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach (i, e; l)\n    {\n\
    \        ret[i] = e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list_6(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach (i, e; l)\n    {\n        ret[i] = e\
    \ + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_7(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n   \nunittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpv_vvu9qr.d(89): Error: found \''unittest\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpv_vvu9qr.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret;\n    foreach(e; l)\n    {\n        ret ~= e + 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list_2(long[]\
    \ l) \n{\n    long[] ret;\n    foreach(e; l)\n    {\n        ret ~= e + 1;\n \
    \   }\n    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n \
    \           \n*/\nlong[] incr_list_3(long[] l) \n{\n    long[] ret;\n    foreach(e;\
    \ l)\n    {\n        ret ~= e + 1;\n    }\n    return ret;\n}\n/*\nReturn list\
    \ with elements incremented by 1.\n            \n*/\nlong[] incr_list_4(long[]\
    \ l) \n{\n    long[] ret;\n    foreach(e; l)\n    {\n        ret ~= e + 1;\n \
    \   }\n    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n \
    \           \n*/\nlong[] incr_list_5(long[] l) \n{\n    long[] ret;\n    foreach(e;\
    \ l)\n    {\n        ret ~= e + 1;\n    }\n    return ret;\n}\n/*\nReturn list\
    \ with elements incremented by 1.\n            \n*/\nlong[] incr_list_6(long[]\
    \ l) \n{\n    long[] ret;\n    foreach(e; l)\n    {\n        ret ~= e + 1;\n \
    \   }\n    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n \
    \           \n*/\nlong[] incr_list_7(long[] l) \n{\n    long[] ret;\n    foreach(e;\
    \ l)\n    {\n        ret ~= e + 1;\n    }\n    return ret;\n}\n/*\nReturn list\
    \ with elements incremented by 1.\n            \n*/\nlong[] incr_list_8(long[]\
    \ l) \n{\n    long[] ret;\n    foreach(e; l)\n    {\n       \nunittest\n{\n  \
    \  alias candidate = incr_list;\n\n    assert(candidate([]) == []);\n    assert(candidate([3L,\
    \ 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L,\
    \ 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpis12osm_.d(104): Error: found \''unittest\'' instead of statement\n/tmp/tmpis12osm_.d(112):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpis12osm_.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ r;\n    foreach(e; l)\n        r ~= e + 1;\n    return r;\n}\n/*\nReturn list\
    \ with elements incremented by 1.\n            \n*/\nlong[] incr_list_2(long[]\
    \ l) \n{\n    return map!(a => a + 1)(l);\n}\n/*\nReturn list with elements incremented\
    \ by 1.\n            \n*/\nlong[] incr_list_3(long[] l) \n{\n    return map!(a\
    \ => a + 1)(l);\n}\n/*\nReturn list with elements incremented by 1.\n        \
    \    \n*/\nlong[] incr_list_4(long[] l) \n{\n    return map!(a => a + 1)(l);\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list_5(long[]\
    \ l) \n{\n    return map!(a => a + 1)(l);\n}\n/*\nReturn list with elements incremented\
    \ by 1.\n            \n*/\nlong[] incr_list_6(long[] l) \n{\n    return map!(a\
    \ => a + 1)(l);\n}\n/*\nReturn list with elements incremented by 1.\n        \
    \    \n*/\nlong[] incr_list_7(long[] l) \n{\n    return map!(a => a + 1)(l);\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list_8(long[]\
    \ l) \n{\n    return map!(a => a + 1)(l);\n}\n/*\nReturn list with elements incremented\
    \ by 1.\n            \n*/\nlong[] incr_list_9(long[] l) \n{\n    return map!(a\
    \ => a + 1)(l);\n}\n/*\nReturn list with elements incremented by 1.\n        \
    \    \n*/\nlong[] incr_list_10(long[] l) \n{\n    return map!(a => a + 1)(l);\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list_11(long[]\
    \ l) \n{\n    return map!\nunittest\n{\n    alias candidate = incr_list;\n\n \
    \   assert(candidate([]) == []);\n    assert(candidate([3L, 2L, 1L]) == [4L, 3L,\
    \ 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L,\
    \ 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpk1biygxo.d(93): Error: template argument expected following
    !\n/tmp/tmpk1biygxo.d(93): Error: found \''unittest\'' when expecting \'';\''
    following return statement\n/tmp/tmpk1biygxo.d(101): Error: found \''EOF\'' when
    expecting \''}\'' following compound statement\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpk1biygxo.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_by_ref(ref long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_by_ref_2(ref long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_by_ref_3(ref long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_by_ref_4(ref long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_by_ref_5(ref long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_by_ref_6(ref long[] l\nunittest\n{\n\
    \    alias candidate = incr_list;\n\n    assert(candidate([]) == []);\n    assert(candidate([3L,\
    \ 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L,\
    \ 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpnksqwndb.d(86): Error: found \''unittest\'' when expecting \'')\''\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnksqwndb.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements decremented by\
    \ 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i,e; l)\n    {\n        ret[i] = e - 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i,e; l)\n    {\n \
    \       ret[i] = e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ decremented by 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e -\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i,e; l)\n    {\n        ret[i] = e + 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements decremented by 1.\n            \n*/\nlong[] decr_list(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i,e; l)\n    {\n \
    \       ret[i] = e - 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e +\n\
    unittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([]) == []);\n\
    \    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpcy3su7yf.d(91): Error: expression expected, not \''unittest\''\n/tmp/tmpcy3su7yf.d(92):
    Error: found \''{\'' when expecting \'';\'' following statement\n/tmp/tmpcy3su7yf.d(99):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcy3su7yf.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ res = new long[l.length];\n    foreach (i, e; l) {\n        res[i] = e + 1;\n\
    \    }\n    return res;\n}\n/*\nReturn list with elements incremented by 1.\n\
    \            \n*/\nlong[] incr_list_2(long[] l) \n{\n    long[] res = new long[l.length];\n\
    \    foreach (i, e; l) {\n        res[i] = e + 1;\n    }\n    return res;\n}\n\
    /*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list_3(long[]\
    \ l) \n{\n    long[] res = new long[l.length];\n    foreach (i, e; l) {\n    \
    \    res[i] = e + 1;\n    }\n    return res;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list_4(long[] l) \n{\n    long[]\
    \ res = new long[l.length];\n    foreach (i, e; l) {\n        res[i] = e + 1;\n\
    \    }\n    return res;\n}\n/*\nReturn list with elements incremented by 1.\n\
    \            \n*/\nlong[] incr_list_5(long[] l) \n{\n    long[] res = new long[l.length];\n\
    \    foreach (i, e; l) {\n        res[i] = e + 1;\n    }\n    return res;\n}\n\
    /*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list_6(long[]\
    \ l) \n{\n    long[] res = new long[l.length];\n    foreach (i, e; l) {\n    \
    \    res[i] = e + 1;\n    }\n    return res;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list_7(long[] l) \n{\n    long[]\
    \ res = new long[l.length];\n    foreach (i, e; l) {\n        res[i] = e + 1;\n\
    unittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([]) == []);\n\
    \    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp3p1m0jit.d(84): Error: found \''unittest\'' instead of statement\n/tmp/tmp3p1m0jit.d(92):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3p1m0jit.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ res = new long[l.length];\n    foreach (i, e; l)\n    {\n        res[i] = e\
    \ + 1;\n    }\n    return res;\n}\nunittest\n{\n    alias candidate = incr_list;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([3L, 2L, 1L]) == [4L,\
    \ 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L,\
    \ 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpz4_00fmo.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n        ret[i] = e + 1;\n \
    \   return ret;\n}\n/*\nReturn list with elements decremented by 1.\n        \
    \    \n*/\nlong[] decr_list(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l)\n        ret[i] = e - 1;\n    return ret;\n}\n/*\nReturn\
    \ list with elements incremented by 1.\n            \n*/\nlong[] incr_list(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i, e; l)\n       \
    \ ret[i] = e + 1;\n    return ret;\n}\n/*\nReturn list with elements decremented\
    \ by 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i, e; l)\n        ret[i] = e - 1;\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i, e; l)\n       \
    \ ret[i] = e + 1;\n    return ret;\n}\n/*\nReturn list with elements decremented\
    \ by 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i, e; l)\n        ret[i] = e - 1;\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i, e; l)\n       \
    \ ret[i] = e + 1;\n    return ret;\n}\n/*\nReturn list with elements decremented\
    \ by 1.\n            \n*/\nlong[] decr_list(long[] l) \n\nunittest\n{\n    alias\
    \ candidate = incr_list;\n\n    assert(candidate([]) == []);\n    assert(candidate([3L,\
    \ 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L,\
    \ 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmphknot444.d(86): Error: semicolon expected following function
    declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphknot444.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ res = new long[l.length];\n    foreach (i,e; l)\n    {\n        res[i] = e +\
    \ 1;\n    }\n    return res;\n}\nunittest\n{\n    alias candidate = incr_list;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([3L, 2L, 1L]) == [4L,\
    \ 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L,\
    \ 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphtk3a2z0.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret;\n    foreach(e; l)\n    {\n        ret ~= e + 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements decremented by 1.\n            \n*/\nlong[] decr_list(long[]\
    \ l) \n{\n    long[] ret;\n    foreach(e; l)\n    {\n        ret ~= e - 1;\n \
    \   }\n    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n \
    \           \n*/\nlong[] incr_list(long[] l) \n{\n    long[] ret;\n    foreach(e;\
    \ l)\n    {\n        ret ~= e + 1;\n    }\n    return ret;\n}\n/*\nReturn list\
    \ with elements decremented by 1.\n            \n*/\nlong[] decr_list(long[] l)\
    \ \n{\n    long[] ret;\n    foreach(e; l)\n    {\n        ret ~= e - 1;\n    }\n\
    \    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list(long[] l) \n{\n    long[] ret;\n    foreach(e; l)\n\
    \    {\n        ret ~= e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with\
    \ elements decremented by 1.\n            \n*/\nlong[] decr_list(long[] l) \n\
    {\n    long[] ret;\n    foreach(e; l)\n    {\n        ret ~= e - 1;\n    }\n \
    \   return ret;\n}\n/*\nReturn list with elements incremented by 1.\n        \
    \    \n*/\nlong[] incr_list(long[] l) \n{\n    long[] ret;\n    foreach(e; l)\n\
    \    {\n        ret ~= e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with\
    \ elements decremented by 1.\n            \n*/\nlong[] decr_list(long[] l) \n\
    {\n    long[] ret;\n    foreach(e; l)\n    {\n        ret ~= e - 1;\n    }\n \
    \   return ret\nunittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmptfintjfg.d(106): Error: found \''unittest\'' when expecting
    \'';\'' following return statement\n/tmp/tmptfintjfg.d(114): Error: found \''EOF\''
    when expecting \''}\'' following compound statement\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmptfintjfg.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ r = new long[l.length];\n    foreach (i, e; l)\n    {\n        r[i] = e + 1;\n\
    \    }\n    return r;\n}\nunittest\n{\n    alias candidate = incr_list;\n\n  \
    \  assert(candidate([]) == []);\n    assert(candidate([3L, 2L, 1L]) == [4L, 3L,\
    \ 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L,\
    \ 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3yswq6bi.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ result = new long[l.length];\n    foreach (i, e; l)\n        result[i] = e +\
    \ 1;\n    return result;\n}\n/*\nReturn list with elements incremented by 1.\n\
    \            \n*/\nlong[] incr_list_2(long[] l) \n{\n    long[] result = new long[l.length];\n\
    \    foreach (i, e; l)\n        result[i] = e + 1;\n    return result;\n}\n/*\n\
    Return list with elements incremented by 1.\n            \n*/\nlong[] incr_list_3(long[]\
    \ l) \n{\n    long[] result = new long[l.length];\n    foreach (i, e; l)\n   \
    \     result[i] = e + 1;\n    return result;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list_4(long[] l) \n{\n    long[]\
    \ result = new long[l.length];\n    foreach (i, e; l)\n        result[i] = e +\
    \ 1;\n    return result;\n}\n/*\nReturn list with elements incremented by 1.\n\
    \            \n*/\nlong[] incr_list_5(long[] l) \n{\n    long[] result = new long[l.length];\n\
    \    foreach (i, e; l)\n        result[i] = e + 1;\n    return result;\n}\n/*\n\
    Return list with elements incremented by 1.\n            \n*/\nlong[] incr_list_6(long[]\
    \ l) \n{\n    long[] result = new long[l.length];\n    foreach (i, e; l)\n   \
    \     result[i] = e + 1;\n    return result;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list_7(long[] l) \n{\n    long[]\
    \ result = new long[l.length];\n    foreach (i, e; l)\n        result[i] = e +\
    \ 1;\n    return result;\n}\n/*\nReturn list with elements incremented by 1.\n\
    \            \n*/\nlong\nunittest\n{\n    alias candidate = incr_list;\n\n   \
    \ assert(candidate([]) == []);\n    assert(candidate([3L, 2L, 1L]) == [4L, 3L,\
    \ 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L,\
    \ 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpudud4qhr.d(85): Error: no identifier for declarator long\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpudud4qhr.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n        ret[i] = e + 1;\n \
    \   return ret;\n}\n/*\nReturn list with elements incremented by 1.\n        \
    \    \n*/\nlong[] incr_list_range(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l)\n        ret[i] = e + 1;\n    return ret;\n}\n/*\nReturn\
    \ list with elements incremented by 1.\n            \n*/\nlong[] incr_list_foreach(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i, e; l)\n       \
    \ ret[i] = e + 1;\n    return ret;\n}\n/*\nReturn list with elements incremented\
    \ by 1.\n            \n*/\nlong[] incr_list_foreach_range(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n        ret[i] = e + 1;\n \
    \   return ret;\n}\n/*\nReturn list with elements incremented by 1.\n        \
    \    \n*/\nlong[] incr_list_foreach_range_array(long[] l) \n{\n    long[] ret\
    \ = new long[l.length];\n    foreach(i, e; l)\n        ret[i] = e + 1;\n    return\
    \ ret;\n}\n/*\nReturn list with elements incremented by 1.\n            \n*/\n\
    long[] incr_list_foreach_range_array_ref(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l)\n        ret[i] = e + 1;\n    return ret;\n}\n/*\nReturn\
    \ list with elements incremented by 1.\n            \n*/\nlong[] incr_list_foreach_range_array_ref_const(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i, e; l)\n       \
    \ ret[i] = e + 1;\nunittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmps58kxphg.d(78): Error: found \''unittest\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmps58kxphg.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l) \n    {\n        ret[i] = e\
    \ + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements decremented by\
    \ 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l) \n    {\n        ret[i] = e - 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list_2(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i, e; l) \n    {\n\
    \        ret[i] = e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ decremented by 1.\n            \n*/\nlong[] decr_list_2(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l) \n    {\n        ret[i] = e\
    \ - 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_3(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i, e; l) \n    {\n        ret[i] = e + 1;\n   \
    \ }\n    return ret;\n}\n/*\nReturn list with elements decremented by 1.\n   \
    \         \n*/\nlong[] decr_list_3(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l) \n    {\n        ret[i] = e - 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list_4(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i,\nunittest\n{\n\
    \    alias candidate = incr_list;\n\n    assert(candidate([]) == []);\n    assert(candidate([3L,\
    \ 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L,\
    \ 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp2bkedz1z.d(89): Error: basic type expected, not unittest\n/tmp/tmp2bkedz1z.d(89):
    Error: no identifier for declarator int\n/tmp/tmp2bkedz1z.d(89): Error: found
    \''unittest\'' when expecting \'';\''\n/tmp/tmp2bkedz1z.d(97): Error: found \''void\''
    when expecting \'')\''\n/tmp/tmp2bkedz1z.d(97): Error: found \''{\'' when expecting
    \'';\'' following statement\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2bkedz1z.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ res = new long[l.length];\n    foreach (i, e; l)\n    {\n        res[i] = e\
    \ + 1;\n    }\n    return res;\n}\n/*\nReturn list with elements decremented by\
    \ 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[] res = new long[l.length];\n\
    \    foreach (i, e; l)\n    {\n        res[i] = e - 1;\n    }\n    return res;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list(long[]\
    \ l) \n{\n    long[] res = new long[l.length];\n    foreach (i, e; l)\n    {\n\
    \        res[i] = e + 1;\n    }\n    return res;\n}\n/*\nReturn list with elements\
    \ decremented by 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[]\
    \ res = new long[l.length];\n    foreach (i, e; l)\n    {\n        res[i] = e\
    \ - 1;\n    }\n    return res;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[] res = new long[l.length];\n\
    \    foreach (i, e; l)\n    {\n        res[i] = e + 1;\n    }\n    return res;\n\
    }\n/*\nReturn list with elements decremented by 1.\n            \n*/\nlong[] decr_list(long[]\
    \ l) \n{\n    long[] res = new long[l.length];\n    foreach (i, e; l)\n    {\n\
    \        res[i] = e - 1;\n    }\n    return res;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ res = new long[l.length];\n    foreach (i, e; l)\n    {\n        res[i] = e\
    \ +\nunittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpsihiszzb.d(91): Error: expression expected, not \''unittest\''\n/tmp/tmpsihiszzb.d(92):
    Error: found \''{\'' when expecting \'';\'' following statement\n/tmp/tmpsihiszzb.d(99):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsihiszzb.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_2(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n\
    \    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list_3(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list_4(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i, e; l)\n    {\n\
    \        ret[i] = e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list_5(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_6(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n\
    \    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list_7(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l)\nunittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpqq43zpjk.d(89): Error: found \''unittest\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqq43zpjk.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\nunittest\n{\n    alias candidate = incr_list;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([3L, 2L, 1L]) == [4L,\
    \ 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L,\
    \ 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0wf5r23j.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret;\n    foreach(e; l)\n    {\n        ret ~= e + 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list_foreach_index(long[]\
    \ l) \n{\n    long[] ret;\n    foreach_index(i; l)\n    {\n        ret ~= l[i]\
    \ + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_foreach_reverse(long[] l) \n{\n    long[]\
    \ ret;\n    foreach_reverse(e; l)\n    {\n        ret ~= e + 1;\n    }\n    return\
    \ ret;\n}\n/*\nReturn list with elements incremented by 1.\n            \n*/\n\
    long[] incr_list_foreach_reverse_index(long[] l) \n{\n    long[] ret;\n    foreach_reverse_index(i;\
    \ l)\n    {\n        ret ~= l[i] + 1;\n    }\n    return ret;\n}\n/*\nReturn list\
    \ with elements incremented by 1.\n            \n*/\nlong[] incr_list_foreach_index_reverse(long[]\
    \ l) \n{\n    long[] ret;\n    foreach_index_reverse(i; l)\n    {\n        ret\
    \ ~= l[i] + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented\
    \ by 1.\n            \n*/\nlong[] incr_list_foreach_index_reverse_index(long[]\
    \ l) \n{\n    long[] ret;\n    foreach_index_reverse_index(i; l)\n    {\n    \
    \    ret ~= l[i] + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list_foreach_index_reverse_index_reverse(long[]\
    \ l) \n{\n    long[] ret;\n    foreach_index_reverse_index_reverse(i; l)\n   \
    \ {\n       \nunittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp5bvza3md.d(23): Error: found \'';\'' when expecting \'',\''\n/tmp/tmp5bvza3md.d(24):
    Error: found \''{\'' when expecting \'';\'' following statement\n/tmp/tmp5bvza3md.d(27):
    Error: Declaration expected, not \''return\''\n/tmp/tmp5bvza3md.d(28): Error:
    unrecognized declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5bvza3md.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ res = new long[l.length];\n    foreach (i, e; l) \n    {\n        res[i] = e\
    \ + 1;\n    }\n    return res;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list2(long[] l) \n{\n    long[] res = new\
    \ long[l.length];\n    foreach (i, e; l) \n    {\n        res[i] = e + 1;\n  \
    \  }\n    return res;\n}\n/*\nReturn list with elements incremented by 1.\n  \
    \          \n*/\nlong[] incr_list3(long[] l) \n{\n    long[] res = new long[l.length];\n\
    \    foreach (i, e; l) \n    {\n        res[i] = e + 1;\n    }\n    return res;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list4(long[]\
    \ l) \n{\n    long[] res = new long[l.length];\n    foreach (i, e; l) \n    {\n\
    \        res[i] = e + 1;\n    }\n    return res;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list5(long[] l) \n{\n    long[]\
    \ res = new long[l.length];\n    foreach (i, e; l) \n    {\n        res[i] = e\
    \ + 1;\n    }\n    return res;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list6(long[] l) \n{\n    long[] res = new\
    \ long[l.length];\n    foreach (i, e; l) \n    {\n        res[i] = e + 1;\n  \
    \  }\n    return res;\n}\n/*\nReturn list with elements incremented by 1.\n  \
    \          \n*/\nlong[] incr_list7(long[] l) \n{\n    long[] res = new long[l.length];\n\
    \    foreach (i, e; l)\nunittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp0fo4p8wi.d(89): Error: found \''unittest\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0fo4p8wi.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_by_1(long[] l) \n{\n    long[] ret =\
    \ new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n\
    \    }\n    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n\
    \            \n*/\nlong[] incr_list_by_1_2(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n\
    \    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list_by_1_3(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list_by_1_4(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i, e; l)\n    {\n\
    \        ret[i] = e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list_by_1_5(long[] l) \n{\n\
    \    long[] ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i]\
    \ = e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented\
    \ by 1.\n            \n*/\nlong[] incr_list_by_1_6(long[] l) \n{\n   \nunittest\n\
    {\n    alias candidate = incr_list;\n\n    assert(candidate([]) == []);\n    assert(candidate([3L,\
    \ 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L,\
    \ 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp0sbs90xz.d(88): Error: found \''unittest\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0sbs90xz.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_2(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e + 1;\n    }\n\
    \    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list_3(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i,e; l)\n    {\n        ret[i] = e + 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list_4(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i,e; l)\n    {\n \
    \       ret[i] = e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list_5(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_6(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e + 1;\n    }\n\
    \    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list_7(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i,e; l)\nunittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp0njhajxd.d(89): Error: found \''unittest\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0njhajxd.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret;\n    foreach(i; l)\n    {\n        ret ~= i + 1;\n    }\n    return ret;\n\
    }\nunittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([]) ==\
    \ []);\n    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdt8le3cl.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_2(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n\
    \    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list_3(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list_4(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i, e; l)\n    {\n\
    \        ret[i] = e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list_5(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_6(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n\
    \    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list_7(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l)\nunittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpqq43zpjk.d(89): Error: found \''unittest\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqq43zpjk.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\nunittest\n{\n    alias candidate = incr_list;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([3L, 2L, 1L]) == [4L,\
    \ 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L,\
    \ 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0wf5r23j.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    for (int i = 0; i < l.length; i++) \n    {\n\
    \        ret[i] = l[i] + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ decremented by 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    for (int i = 0; i < l.length; i++) \n    {\n\
    \        ret[i] = l[i] - 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l, int n) \n{\n\
    \    long[] ret = new long[l.length];\n    for (int i = 0; i < l.length; i++)\
    \ \n    {\n        ret[i] = l[i] + n;\n    }\n    return ret;\n}\n/*\nReturn list\
    \ with elements decremented by 1.\n            \n*/\nlong[] decr_list(long[] l,\
    \ int n) \n{\n    long[] ret = new long[l.length];\n    for (int i = 0; i < l.length;\
    \ i++) \n    {\n        ret[i] = l[i] - n;\n    }\n    return ret;\n}\n/*\nReturn\
    \ list with elements incremented by 1.\n            \n*/\nlong[] incr_list(long[]\
    \ l, long n) \n{\n    long[] ret = new long[l.length];\n    for (int i = 0; i\
    \ < l.length; i++) \n    {\n        ret[i] = l[i] + n;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements decremented by 1.\n            \n*/\nlong[] decr_list(long[]\
    \ l, long n) \n{\n    long[] ret = new long[l.length];\n    for (int i = 0; i\
    \ < l.length; i++) \n    {\n        ret[i] = l[i] - n;\n    }\n   \nunittest\n\
    {\n    alias candidate = incr_list;\n\n    assert(candidate([]) == []);\n    assert(candidate([3L,\
    \ 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L,\
    \ 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp6dpry4g8.d(80): Error: found \''unittest\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6dpry4g8.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l) {\n        ret[i] = e + 1;\n\
    \    }\n    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n\
    \            \n*/\nlong[] incr_list_2(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l) {\n        ret[i] = e + 1;\n    }\n    return ret;\n}\n\
    /*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list_3(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i, e; l) {\n     \
    \   ret[i] = e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list_4(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l) {\n        ret[i] = e + 1;\n\
    \    }\n    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n\
    \            \n*/\nlong[] incr_list_5(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l) {\n        ret[i] = e + 1;\n    }\n    return ret;\n}\n\
    /*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list_6(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i, e; l) {\n     \
    \   ret[i] = e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list_7(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l) {\n        ret[i] = e + 1;\n\
    unittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([]) == []);\n\
    \    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmps5_8gfw7.d(84): Error: found \''unittest\'' instead of statement\n/tmp/tmps5_8gfw7.d(92):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmps5_8gfw7.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ res = new long[l.length];\n    foreach (i, e; l)\n    {\n        res[i] = e\
    \ + 1;\n    }\n    return res;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list2(long[] l) \n{\n    long[] res = new\
    \ long[l.length];\n    foreach (i, e; l)\n    {\n        res[i] = e + 1;\n   \
    \ }\n    return res;\n}\n/*\nReturn list with elements incremented by 1.\n   \
    \         \n*/\nlong[] incr_list3(long[] l) \n{\n    long[] res = new long[l.length];\n\
    \    foreach (i, e; l)\n    {\n        res[i] = e + 1;\n    }\n    return res;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list4(long[]\
    \ l) \n{\n    long[] res = new long[l.length];\n    foreach (i, e; l)\n    {\n\
    \        res[i] = e + 1;\n    }\n    return res;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list5(long[] l) \n{\n    long[]\
    \ res = new long[l.length];\n    foreach (i, e; l)\n    {\n        res[i] = e\
    \ + 1;\n    }\n    return res;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list6(long[] l) \n{\n    long[] res = new\
    \ long[l.length];\n    foreach (i, e; l)\n    {\n        res[i] = e + 1;\n   \
    \ }\n    return res;\n}\n/*\nReturn list with elements incremented by 1.\n   \
    \         \n*/\nlong[] incr_list7(long[] l) \n{\n    long[] res = new long[l.length];\n\
    \    foreach (i, e; l)\n    {\n        res\nunittest\n{\n    alias candidate =\
    \ incr_list;\n\n    assert(candidate([]) == []);\n    assert(candidate([3L, 2L,\
    \ 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L, 0L,\
    \ 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp_hmn9wg8.d(91): Error: found \''unittest\'' when expecting \'';\''
    following statement\n/tmp/tmp_hmn9wg8.d(99): Error: found \''EOF\'' when expecting
    \''}\'' following compound statement\n/tmp/tmp_hmn9wg8.d(99): Error: found \''EOF\''
    when expecting \''}\'' following compound statement\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmp_hmn9wg8.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list2(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n\
    \    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list3(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list4(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i, e; l)\n    {\n\
    \        ret[i] = e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list5(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list6(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n\
    \    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list7(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l)\n    {\n        ret\nunittest\n{\n    alias candidate =\
    \ incr_list;\n\n    assert(candidate([]) == []);\n    assert(candidate([3L, 2L,\
    \ 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L, 0L,\
    \ 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp4p7mwtji.d(91): Error: found \''unittest\'' when expecting \'';\''
    following statement\n/tmp/tmp4p7mwtji.d(99): Error: found \''EOF\'' when expecting
    \''}\'' following compound statement\n/tmp/tmp4p7mwtji.d(99): Error: found \''EOF\''
    when expecting \''}\'' following compound statement\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmp4p7mwtji.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ r = new long[l.length];\n    foreach (i, e; l) {\n        r[i] = e + 1;\n  \
    \  }\n    return r;\n}\n/*\nReturn list with elements incremented by 1.\n    \
    \        \n*/\nlong[] incr_list2(long[] l) \n{\n    long[] r = new long[l.length];\n\
    \    foreach (i, e; l) {\n        r[i] = e + 1;\n    }\n    return r;\n}\n/*\n\
    Return list with elements incremented by 1.\n            \n*/\nlong[] incr_list3(long[]\
    \ l) \n{\n    long[] r = new long[l.length];\n    foreach (i, e; l) {\n      \
    \  r[i] = e + 1;\n    }\n    return r;\n}\n/*\nReturn list with elements incremented\
    \ by 1.\n            \n*/\nlong[] incr_list4(long[] l) \n{\n    long[] r = new\
    \ long[l.length];\n    foreach (i, e; l) {\n        r[i] = e + 1;\n    }\n   \
    \ return r;\n}\n/*\nReturn list with elements incremented by 1.\n            \n\
    */\nlong[] incr_list5(long[] l) \n{\n    long[] r = new long[l.length];\n    foreach\
    \ (i, e; l) {\n        r[i] = e + 1;\n    }\n    return r;\n}\n/*\nReturn list\
    \ with elements incremented by 1.\n            \n*/\nlong[] incr_list6(long[]\
    \ l) \n{\n    long[] r = new long[l.length];\n    foreach (i, e; l) {\n      \
    \  r[i] = e + 1;\n    }\n    return r;\n}\n/*\nReturn list with elements incremented\
    \ by 1.\n            \n*/\nlong[] incr_list7(long[] l) \n{\n    long[] r = new\
    \ long[l.length];\n    foreach (i, e; l) {\n        r[i] = e + 1;\n    }\n   \
    \ return\nunittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpu_admlqx.d(86): Error: expression expected, not \''unittest\''\n/tmp/tmpu_admlqx.d(87):
    Error: found \''{\'' when expecting \'';\'' following return statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpu_admlqx.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list2(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n\
    \    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list3(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list4(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i, e; l)\n    {\n\
    \        ret[i] = e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list5(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list6(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n\
    \    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list7(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l)\n    {\n        ret\nunittest\n{\n    alias candidate =\
    \ incr_list;\n\n    assert(candidate([]) == []);\n    assert(candidate([3L, 2L,\
    \ 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L, 0L,\
    \ 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp4p7mwtji.d(91): Error: found \''unittest\'' when expecting \'';\''
    following statement\n/tmp/tmp4p7mwtji.d(99): Error: found \''EOF\'' when expecting
    \''}\'' following compound statement\n/tmp/tmp4p7mwtji.d(99): Error: found \''EOF\''
    when expecting \''}\'' following compound statement\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmp4p7mwtji.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list2(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e + 1;\n    }\n\
    \    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list3(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i,e; l)\n    {\n        ret[i] = e + 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list4(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i,e; l)\n    {\n \
    \       ret[i] = e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list5(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list6(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e + 1;\n    }\n\
    \    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list7(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i,e; l)\n    {\n        ret\nunittest\n{\n    alias candidate = incr_list;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([3L, 2L, 1L]) == [4L,\
    \ 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L,\
    \ 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp7rzz2slw.d(91): Error: found \''unittest\'' when expecting \'';\''
    following statement\n/tmp/tmp7rzz2slw.d(99): Error: found \''EOF\'' when expecting
    \''}\'' following compound statement\n/tmp/tmp7rzz2slw.d(99): Error: found \''EOF\''
    when expecting \''}\'' following compound statement\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmp7rzz2slw.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ res = new long[l.length];\n    foreach (i, e; l) \n    {\n        res[i] = e\
    \ + 1;\n    }\n    return res;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_2(long[] l) \n{\n    long[] res = new\
    \ long[l.length];\n    foreach (i, e; l) \n    {\n        res[i] = e + 1;\n  \
    \  }\n    return res;\n}\n/*\nReturn list with elements incremented by 1.\n  \
    \          \n*/\nlong[] incr_list_3(long[] l) \n{\n    long[] res = new long[l.length];\n\
    \    foreach (i, e; l) \n    {\n        res[i] = e + 1;\n    }\n    return res;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list_4(long[]\
    \ l) \n{\n    long[] res = new long[l.length];\n    foreach (i, e; l) \n    {\n\
    \        res[i] = e + 1;\n    }\n    return res;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list_5(long[] l) \n{\n    long[]\
    \ res = new long[l.length];\n    foreach (i, e; l) \n    {\n        res[i] = e\
    \ + 1;\n    }\n    return res;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_6(long[] l) \n{\n    long[] res = new\
    \ long[l.length];\n    foreach (i, e; l) \n    {\n        res[i] = e + 1;\n  \
    \  }\n    return res;\n}\n/*\nReturn list with elements incremented by 1.\n  \
    \          \n*/\nlong[] incr_list_7(long[] l) \n{\n    long[] res = new long[l.length];\n\
    \    foreach (\nunittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp_wrvl33u.d(89): Error: basic type expected, not unittest\n/tmp/tmp_wrvl33u.d(89):
    Error: no identifier for declarator int\n/tmp/tmp_wrvl33u.d(89): Error: found
    \''unittest\'' when expecting \'';\''\n/tmp/tmp_wrvl33u.d(97): Error: found \''void\''
    when expecting \'')\''\n/tmp/tmp_wrvl33u.d(97): Error: found \''{\'' when expecting
    \'';\'' following statement\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_wrvl33u.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret;\n    foreach(i; l)\n    {\n        ret ~= i + 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list_2(long[]\
    \ l) \n{\n    long[] ret;\n    foreach(i; l)\n    {\n        ret ~= i + 1;\n \
    \   }\n    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n \
    \           \n*/\nlong[] incr_list_3(long[] l) \n{\n    long[] ret;\n    foreach(i;\
    \ l)\n    {\n        ret ~= i + 1;\n    }\n    return ret;\n}\n/*\nReturn list\
    \ with elements incremented by 1.\n            \n*/\nlong[] incr_list_4(long[]\
    \ l) \n{\n    long[] ret;\n    foreach(i; l)\n    {\n        ret ~= i + 1;\n \
    \   }\n    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n \
    \           \n*/\nlong[] incr_list_5(long[] l) \n{\n    long[] ret;\n    foreach(i;\
    \ l)\n    {\n        ret ~= i + 1;\n    }\n    return ret;\n}\n/*\nReturn list\
    \ with elements incremented by 1.\n            \n*/\nlong[] incr_list_6(long[]\
    \ l) \n{\n    long[] ret;\n    foreach(i; l)\n    {\n        ret ~= i + 1;\n \
    \   }\n    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n \
    \           \n*/\nlong[] incr_list_7(long[] l) \n{\n    long[] ret;\n    foreach(i;\
    \ l)\n    {\n        ret ~= i + 1;\n    }\n    return ret;\n}\n/*\nReturn list\
    \ with elements incremented by 1.\n            \n*/\nlong[] incr_list_8(long[]\
    \ l) \n{\n    long[] ret;\n    foreach(i; l)\n    {\n       \nunittest\n{\n  \
    \  alias candidate = incr_list;\n\n    assert(candidate([]) == []);\n    assert(candidate([3L,\
    \ 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L,\
    \ 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp1_qomz_5.d(104): Error: found \''unittest\'' instead of statement\n/tmp/tmp1_qomz_5.d(112):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1_qomz_5.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979978
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ res = new long[l.length];\n    foreach (i, e; l)\n    {\n        res[i] = e\
    \ + 1;\n    }\n    return res;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_range(long[] l) \n{\n    long[] res =\
    \ new long[l.length];\n    foreach (e; l)\n    {\n        res ~= e + 1;\n    }\n\
    \    return res;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list_foreach(long[] l) \n{\n    long[] res = new long[l.length];\n\
    \    foreach (e; l)\n    {\n        res[$] = e + 1;\n    }\n    return res;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list_foreach_range(long[]\
    \ l) \n{\n    long[] res;\n    foreach (e; l)\n    {\n        res ~= e + 1;\n\
    \    }\n    return res;\n}\n/*\nReturn list with elements incremented by 1.\n\
    \            \n*/\nlong[] incr_list_foreach_range_init(long[] l) \n{\n    long[]\
    \ res = new long[];\n    foreach (e; l)\n    {\n        res ~= e + 1;\n    }\n\
    \    return res;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list_foreach_range_init_reserve(long[] l) \n{\n    long[]\
    \ res = new long[l.length];\n    foreach (e; l)\n    {\n        res ~= e + 1;\n\
    \    }\n    return res;\n}\n/*\nReturn list with elements incremented by 1.\n\
    \            \n*/\nlong[] incr_list_foreach_range_init_reserve_wrong(long[] l)\
    \ \n{\n    long[] res = new long[l.length];\n    foreach (e; l)\n    {\nunittest\n\
    {\n    alias candidate = incr_list;\n\n    assert(candidate([]) == []);\n    assert(candidate([3L,\
    \ 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L,\
    \ 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp1f2vig6e.d(90): Error: found \''unittest\'' instead of statement\n/tmp/tmp1f2vig6e.d(98):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1f2vig6e.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, elem; l)\n    {\n        ret[i] =\
    \ elem + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented\
    \ by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i, elem; l)\n    {\n        ret[i] = elem + 1;\n\
    \    }\n    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n\
    \            \n*/\nlong[] incr_list(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, elem; l)\n    {\n        ret[i] = elem + 1;\n    }\n    return\
    \ ret;\n}\n/*\nReturn list with elements incremented by 1.\n            \n*/\n\
    long[] incr_list(long[] l) \n{\n    long[] ret = new long[l.length];\n    foreach(i,\
    \ elem; l)\n    {\n        ret[i] = elem + 1;\n    }\n    return ret;\n}\n/*\n\
    Return list with elements incremented by 1.\n            \n*/\nlong[] incr_list(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i, elem; l)\n    {\n\
    \        ret[i] = elem + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, elem; l)\n    {\n        ret[i] =\
    \ elem + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented\
    \ by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i, elem; l\nunittest\n{\n    alias candidate =\
    \ incr_list;\n\n    assert(candidate([]) == []);\n    assert(candidate([3L, 2L,\
    \ 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L, 0L,\
    \ 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp0ld6rx6t.d(89): Error: found \''unittest\'' when expecting \'')\''\n/tmp/tmp0ld6rx6t.d(97):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0ld6rx6t.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979978
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements decremented by\
    \ 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l)\n    {\n        ret[i] = e - 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i, e; l)\n    {\n\
    \        ret[i] = e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ decremented by 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e -\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements decremented by 1.\n            \n*/\nlong[] decr_list(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i, e; l)\n    {\n\
    \        ret[i] = e - 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\n\
    unittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([]) == []);\n\
    \    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpvwhhmvid.d(91): Error: expression expected, not \''unittest\''\n/tmp/tmpvwhhmvid.d(92):
    Error: found \''{\'' when expecting \'';\'' following statement\n/tmp/tmpvwhhmvid.d(99):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvwhhmvid.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\nunittest\n{\n    alias candidate = incr_list;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([3L, 2L, 1L]) == [4L,\
    \ 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L,\
    \ 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0wf5r23j.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list2(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n\
    \    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list3(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list4(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i, e; l)\n    {\n\
    \        ret[i] = e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list5(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list6(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n\
    \    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list7(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l)\n    {\n        ret\nunittest\n{\n    alias candidate =\
    \ incr_list;\n\n    assert(candidate([]) == []);\n    assert(candidate([3L, 2L,\
    \ 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L, 0L,\
    \ 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp4p7mwtji.d(91): Error: found \''unittest\'' when expecting \'';\''
    following statement\n/tmp/tmp4p7mwtji.d(99): Error: found \''EOF\'' when expecting
    \''}\'' following compound statement\n/tmp/tmp4p7mwtji.d(99): Error: found \''EOF\''
    when expecting \''}\'' following compound statement\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmp4p7mwtji.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ r = new long[l.length];\n    foreach (i, e; l)\n        r[i] = e + 1;\n    return\
    \ r;\n}\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[]\
    \ incr_list(long[] l) \n{\n    long[] r = new long[l.length];\n    foreach (i,\
    \ e; l)\n        r[i] = e + 1;\n    return r;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ r = new long[l.length];\n    foreach (i, e; l)\n        r[i] = e + 1;\n    return\
    \ r;\n}\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[]\
    \ incr_list(long[] l) \n{\n    long[] r = new long[l.length];\n    foreach (i,\
    \ e; l)\n        r[i] = e + 1;\n    return r;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ r = new long[l.length];\n    foreach (i, e; l)\n        r[i] = e + 1;\n    return\
    \ r;\n}\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[]\
    \ incr_list(long[] l) \n{\n    long[] r = new long[l.length];\n    foreach (i,\
    \ e; l)\n        r[i] = e + 1;\n    return r;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ r = new long[l.length];\n    foreach (i, e; l)\n        r[i] = e + 1;\n    return\
    \ r;\n}\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[]\
    \ incr_list(long[] l) \n\nunittest\n{\n    alias candidate = incr_list;\n\n  \
    \  assert(candidate([]) == []);\n    assert(candidate([3L, 2L, 1L]) == [4L, 3L,\
    \ 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L,\
    \ 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpnxakx4yy.d(86): Error: semicolon expected following function
    declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnxakx4yy.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979978
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_2(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n\
    \    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list_3(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list_4(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i, e; l)\n    {\n\
    \        ret[i] = e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list_5(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_6(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n\
    \    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list_7(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l)\nunittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpqq43zpjk.d(89): Error: found \''unittest\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqq43zpjk.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\nunittest\n{\n    alias candidate = incr_list;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([3L, 2L, 1L]) == [4L,\
    \ 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L,\
    \ 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0wf5r23j.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_2(long[] l) \n{\n    return l.map!(a\
    \ => a + 1)();\n}\n/*\nReturn list with elements incremented by 1.\n         \
    \   \n*/\nlong[] incr_list_3(long[] l) \n{\n    return l.map!(a => a + 1)();\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list_4(long[]\
    \ l) \n{\n    return l.map!(a => a + 1)();\n}\n/*\nReturn list with elements incremented\
    \ by 1.\n            \n*/\nlong[] incr_list_5(long[] l) \n{\n    return l.map!(a\
    \ => a + 1)();\n}\n/*\nReturn list with elements incremented by 1.\n         \
    \   \n*/\nlong[] incr_list_6(long[] l) \n{\n    return l.map!(a => a + 1)();\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list_7(long[]\
    \ l) \n{\n    return l.map!(a => a + 1)();\n}\n/*\nReturn list with elements incremented\
    \ by 1.\n            \n*/\nlong[] incr_list_8(long[] l) \n{\n    return l.map!(a\
    \ => a + 1)();\n}\n/*\nReturn list with elements incremented by 1.\n         \
    \   \n*/\nlong[] incr_list_9(long[] l) \n{\n    return l.map!(a => a + 1)();\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list_10(long[]\
    \ l) \n{\n    return l.map!(a => a + 1)();\n}\n/*\nReturn list with elements incremented\
    \ by 1.\nunittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpxvtdl39y.d(88): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpxvtdl39y.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret;\n    foreach(i; l)\n    {\n        ret ~= i + 1;\n    }\n    return ret;\n\
    }\nunittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([]) ==\
    \ []);\n    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdt8le3cl.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list2(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n\
    \    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list3(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list4(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i, e; l)\n    {\n\
    \        ret[i] = e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list5(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list6(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n\
    \    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list7(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l)\n    {\n        ret\nunittest\n{\n    alias candidate =\
    \ incr_list;\n\n    assert(candidate([]) == []);\n    assert(candidate([3L, 2L,\
    \ 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L, 0L,\
    \ 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp4p7mwtji.d(91): Error: found \''unittest\'' when expecting \'';\''
    following statement\n/tmp/tmp4p7mwtji.d(99): Error: found \''EOF\'' when expecting
    \''}\'' following compound statement\n/tmp/tmp4p7mwtji.d(99): Error: found \''EOF\''
    when expecting \''}\'' following compound statement\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmp4p7mwtji.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements decremented by\
    \ 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l)\n    {\n        ret[i] = e - 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i, e; l)\n    {\n\
    \        ret[i] = e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ decremented by 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e -\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements decremented by 1.\n            \n*/\nlong[] decr_list(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i, e; l)\n    {\n\
    \        ret[i] = e - 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\n\
    unittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([]) == []);\n\
    \    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpvwhhmvid.d(91): Error: expression expected, not \''unittest\''\n/tmp/tmpvwhhmvid.d(92):
    Error: found \''{\'' when expecting \'';\'' following statement\n/tmp/tmpvwhhmvid.d(99):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvwhhmvid.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements decremented by\
    \ 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i,e; l)\n    {\n        ret[i] = e - 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i,e; l)\n    {\n \
    \       ret[i] = e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ decremented by 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e -\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i,e; l)\n    {\n        ret[i] = e + 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements decremented by 1.\n            \n*/\nlong[] decr_list(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i,e; l)\n    {\n \
    \       ret[i] = e - 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e +\n\
    unittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([]) == []);\n\
    \    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpcy3su7yf.d(91): Error: expression expected, not \''unittest\''\n/tmp/tmpcy3su7yf.d(92):
    Error: found \''{\'' when expecting \'';\'' following statement\n/tmp/tmpcy3su7yf.d(99):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcy3su7yf.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret;\n    foreach(i; l)\n    {\n        ret ~= i + 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list_2(long[]\
    \ l) \n{\n    long[] ret;\n    foreach(i; l)\n    {\n        ret ~= i + 1;\n \
    \   }\n    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n \
    \           \n*/\nlong[] incr_list_3(long[] l) \n{\n    long[] ret;\n    foreach(i;\
    \ l)\n    {\n        ret ~= i + 1;\n    }\n    return ret;\n}\n/*\nReturn list\
    \ with elements incremented by 1.\n            \n*/\nlong[] incr_list_4(long[]\
    \ l) \n{\n    long[] ret;\n    foreach(i; l)\n    {\n        ret ~= i + 1;\n \
    \   }\n    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n \
    \           \n*/\nlong[] incr_list_5(long[] l) \n{\n    long[] ret;\n    foreach(i;\
    \ l)\n    {\n        ret ~= i + 1;\n    }\n    return ret;\n}\n/*\nReturn list\
    \ with elements incremented by 1.\n            \n*/\nlong[] incr_list_6(long[]\
    \ l) \n{\n    long[] ret;\n    foreach(i; l)\n    {\n        ret ~= i + 1;\n \
    \   }\n    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n \
    \           \n*/\nlong[] incr_list_7(long[] l) \n{\n    long[] ret;\n    foreach(i;\
    \ l)\n    {\n        ret ~= i + 1;\n    }\n    return ret;\n}\n/*\nReturn list\
    \ with elements incremented by 1.\n            \n*/\nlong[] incr_list_8(long[]\
    \ l) \n{\n    long[] ret;\n    foreach(i; l)\n    {\n       \nunittest\n{\n  \
    \  alias candidate = incr_list;\n\n    assert(candidate([]) == []);\n    assert(candidate([3L,\
    \ 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L,\
    \ 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp1_qomz_5.d(104): Error: found \''unittest\'' instead of statement\n/tmp/tmp1_qomz_5.d(112):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1_qomz_5.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979978
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\nunittest\n{\n    alias candidate = incr_list;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([3L, 2L, 1L]) == [4L,\
    \ 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L,\
    \ 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0wf5r23j.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_2(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n\
    \    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list_3(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list_4(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i, e; l)\n    {\n\
    \        ret[i] = e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list_5(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_6(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n\
    \    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list_7(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l)\nunittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpqq43zpjk.d(89): Error: found \''unittest\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqq43zpjk.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list2(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e + 1;\n    }\n\
    \    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list3(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i,e; l)\n    {\n        ret[i] = e + 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list4(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i,e; l)\n    {\n \
    \       ret[i] = e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list5(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list6(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e + 1;\n    }\n\
    \    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list7(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i,e; l)\n    {\n        ret\nunittest\n{\n    alias candidate = incr_list;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([3L, 2L, 1L]) == [4L,\
    \ 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L,\
    \ 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp7rzz2slw.d(91): Error: found \''unittest\'' when expecting \'';\''
    following statement\n/tmp/tmp7rzz2slw.d(99): Error: found \''EOF\'' when expecting
    \''}\'' following compound statement\n/tmp/tmp7rzz2slw.d(99): Error: found \''EOF\''
    when expecting \''}\'' following compound statement\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmp7rzz2slw.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements decremented by\
    \ 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l)\n    {\n        ret[i] = e - 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i, e; l)\n    {\n\
    \        ret[i] = e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ decremented by 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e -\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements decremented by 1.\n            \n*/\nlong[] decr_list(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i, e; l)\n    {\n\
    \        ret[i] = e - 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\n\
    unittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([]) == []);\n\
    \    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpvwhhmvid.d(91): Error: expression expected, not \''unittest\''\n/tmp/tmpvwhhmvid.d(92):
    Error: found \''{\'' when expecting \'';\'' following statement\n/tmp/tmpvwhhmvid.d(99):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvwhhmvid.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\nunittest\n{\n    alias candidate = incr_list;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([3L, 2L, 1L]) == [4L,\
    \ 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L,\
    \ 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0wf5r23j.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ r = new long[l.length];\n    foreach (i, e; l)\n    {\n        r[i] = e + 1;\n\
    \    }\n    return r;\n}\n/*\nReturn list with elements decremented by 1.\n  \
    \          \n*/\nlong[] decr_list(long[] l) \n{\n    long[] r = new long[l.length];\n\
    \    foreach (i, e; l)\n    {\n        r[i] = e - 1;\n    }\n    return r;\n}\n\
    /*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list(long[]\
    \ l) \n{\n    long[] r = new long[l.length];\n    foreach (i, e; l)\n    {\n \
    \       r[i] = e + 1;\n    }\n    return r;\n}\n/*\nReturn list with elements\
    \ decremented by 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[]\
    \ r = new long[l.length];\n    foreach (i, e; l)\n    {\n        r[i] = e - 1;\n\
    \    }\n    return r;\n}\n/*\nReturn list with elements incremented by 1.\n  \
    \          \n*/\nlong[] incr_list(long[] l) \n{\n    long[] r = new long[l.length];\n\
    \    foreach (i, e; l)\n    {\n        r[i] = e + 1;\n    }\n    return r;\n}\n\
    /*\nReturn list with elements decremented by 1.\n            \n*/\nlong[] decr_list(long[]\
    \ l) \n{\n    long[] r = new long[l.length];\n    foreach (i, e; l)\n    {\n \
    \       r[i] = e - 1;\n    }\n    return r;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ r = new long[l.length];\n    foreach (i, e; l)\n    {\n        r[i] = e +\n\
    unittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([]) == []);\n\
    \    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp764qf07x.d(91): Error: expression expected, not \''unittest\''\n/tmp/tmp764qf07x.d(92):
    Error: found \''{\'' when expecting \'';\'' following statement\n/tmp/tmp764qf07x.d(99):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp764qf07x.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979978
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ res = new long[l.length];\n    foreach (i, e; l) \n    {\n        res[i] = e\
    \ + 1;\n    }\n    return res;\n}\nunittest\n{\n    alias candidate = incr_list;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([3L, 2L, 1L]) == [4L,\
    \ 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L,\
    \ 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprhe_ezuc.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979978
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ res = new long[l.length];\n    foreach (i, e; l) \n    {\n        res[i] = e\
    \ + 1;\n    }\n    return res;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_2(long[] l) \n{\n    long[] res = new\
    \ long[l.length];\n    foreach (i, e; l) \n    {\n        res[i] = e + 1;\n  \
    \  }\n    return res;\n}\n/*\nReturn list with elements incremented by 1.\n  \
    \          \n*/\nlong[] incr_list_3(long[] l) \n{\n    long[] res = new long[l.length];\n\
    \    foreach (i, e; l) \n    {\n        res[i] = e + 1;\n    }\n    return res;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list_4(long[]\
    \ l) \n{\n    long[] res = new long[l.length];\n    foreach (i, e; l) \n    {\n\
    \        res[i] = e + 1;\n    }\n    return res;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list_5(long[] l) \n{\n    long[]\
    \ res = new long[l.length];\n    foreach (i, e; l) \n    {\n        res[i] = e\
    \ + 1;\n    }\n    return res;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_6(long[] l) \n{\n    long[] res = new\
    \ long[l.length];\n    foreach (i, e; l) \n    {\n        res[i] = e + 1;\n  \
    \  }\n    return res;\n}\n/*\nReturn list with elements incremented by 1.\n  \
    \          \n*/\nlong[] incr_list_7(long[] l) \n{\n    long[] res = new long[l.length];\n\
    \    foreach (\nunittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp_wrvl33u.d(89): Error: basic type expected, not unittest\n/tmp/tmp_wrvl33u.d(89):
    Error: no identifier for declarator int\n/tmp/tmp_wrvl33u.d(89): Error: found
    \''unittest\'' when expecting \'';\''\n/tmp/tmp_wrvl33u.d(97): Error: found \''void\''
    when expecting \'')\''\n/tmp/tmp_wrvl33u.d(97): Error: found \''{\'' when expecting
    \'';\'' following statement\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_wrvl33u.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret;\n    foreach(i; l)\n    {\n        ret ~= i + 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list_2(long[]\
    \ l) \n{\n    long[] ret;\n    foreach(i; l)\n    {\n        ret ~= i + 1;\n \
    \   }\n    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n \
    \           \n*/\nlong[] incr_list_3(long[] l) \n{\n    long[] ret;\n    foreach(i;\
    \ l)\n    {\n        ret ~= i + 1;\n    }\n    return ret;\n}\n/*\nReturn list\
    \ with elements incremented by 1.\n            \n*/\nlong[] incr_list_4(long[]\
    \ l) \n{\n    long[] ret;\n    foreach(i; l)\n    {\n        ret ~= i + 1;\n \
    \   }\n    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n \
    \           \n*/\nlong[] incr_list_5(long[] l) \n{\n    long[] ret;\n    foreach(i;\
    \ l)\n    {\n        ret ~= i + 1;\n    }\n    return ret;\n}\n/*\nReturn list\
    \ with elements incremented by 1.\n            \n*/\nlong[] incr_list_6(long[]\
    \ l) \n{\n    long[] ret;\n    foreach(i; l)\n    {\n        ret ~= i + 1;\n \
    \   }\n    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n \
    \           \n*/\nlong[] incr_list_7(long[] l) \n{\n    long[] ret;\n    foreach(i;\
    \ l)\n    {\n        ret ~= i + 1;\n    }\n    return ret;\n}\n/*\nReturn list\
    \ with elements incremented by 1.\n            \n*/\nlong[] incr_list_8(long[]\
    \ l) \n{\n    long[] ret;\n    foreach(i; l)\n    {\n       \nunittest\n{\n  \
    \  alias candidate = incr_list;\n\n    assert(candidate([]) == []);\n    assert(candidate([3L,\
    \ 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L,\
    \ 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp1_qomz_5.d(104): Error: found \''unittest\'' instead of statement\n/tmp/tmp1_qomz_5.d(112):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1_qomz_5.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979978
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i,e; l)\n        ret[i] = e + 1;\n  \
    \  return ret;\n}\n/*\nReturn list with elements incremented by 1.\n         \
    \   \n*/\nlong[] incr_list_foreach(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(e; l)\n        ret ~= e + 1;\n    return ret;\n}\n/*\nReturn list\
    \ with elements incremented by 1.\n            \n*/\nlong[] incr_list_foreach_index(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach_index(i; l)\n    \
    \    ret[i] = l[i] + 1;\n    return ret;\n}\n/*\nReturn list with elements incremented\
    \ by 1.\n            \n*/\nlong[] incr_list_foreach_reverse(long[] l) \n{\n  \
    \  long[] ret = new long[l.length];\n    foreach_reverse(e; l)\n        ret ~=\
    \ e + 1;\n    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n\
    \            \n*/\nlong[] incr_list_foreach_reverse_index(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach_reverse_index(i; l)\n        ret[i] =\
    \ l[i] + 1;\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_foreach_reverse_index_array(long[] l)\
    \ \n{\n    long[] ret = new long[l.length];\n    foreach_reverse_index(i,e; l)\n\
    \        ret[i] = e + 1;\n    return ret;\n}\n/*\nReturn list with elements incremented\
    \ by 1.\n            \n*/\nlong[] incr_list_foreach_reverse_array(long[] l) \n\
    {\n    long[] ret = new long[l.length];\n    foreach_reverse(i,e; l)\n       \
    \ ret[\nunittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp6mj9wlfs.d(32): Error: found \'';\'' when expecting \'',\''\n/tmp/tmp6mj9wlfs.d(33):
    Error: found \''ret\'' when expecting \'';\'' following statement\n/tmp/tmp6mj9wlfs.d(54):
    Error: found \'';\'' when expecting \'',\''\n/tmp/tmp6mj9wlfs.d(55): Error: found
    \''ret\'' when expecting \'';\'' following statement\n/tmp/tmp6mj9wlfs.d(65):
    Error: found \'';\'' when expecting \'',\''\n/tmp/tmp6mj9wlfs.d(66): Error: found
    \''ret\'' when expecting \'';\'' following statement\n/tmp/tmp6mj9wlfs.d(78):
    Error: expression expected, not \''unittest\''\n/tmp/tmp6mj9wlfs.d(79): Error:
    found \''{\'' when expecting \'']\''\n/tmp/tmp6mj9wlfs.d(80): Error: found \''alias\''
    when expecting \'';\'' following statement\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmp6mj9wlfs.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979978
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements decremented by\
    \ 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i,e; l)\n    {\n        ret[i] = e - 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i,e; l)\n    {\n \
    \       ret[i] = e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ decremented by 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e -\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i,e; l)\n    {\n        ret[i] = e + 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements decremented by 1.\n            \n*/\nlong[] decr_list(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i,e; l)\n    {\n \
    \       ret[i] = e - 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e +\n\
    unittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([]) == []);\n\
    \    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpcy3su7yf.d(91): Error: expression expected, not \''unittest\''\n/tmp/tmpcy3su7yf.d(92):
    Error: found \''{\'' when expecting \'';\'' following statement\n/tmp/tmpcy3su7yf.d(99):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcy3su7yf.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l) {\n        ret[i] = e + 1;\n\
    \    }\n    return ret;\n}\n/*\nReturn list with elements decremented by 1.\n\
    \            \n*/\nlong[] decr_list(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l) {\n        ret[i] = e - 1;\n    }\n    return ret;\n}\n\
    /*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i, e; l) {\n     \
    \   ret[i] = e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ decremented by 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l) {\n        ret[i] = e - 1;\n\
    \    }\n    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n\
    \            \n*/\nlong[] incr_list(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l) {\n        ret[i] = e + 1;\n    }\n    return ret;\n}\n\
    /*\nReturn list with elements decremented by 1.\n            \n*/\nlong[] decr_list(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i, e; l) {\n     \
    \   ret[i] = e - 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l) {\n        ret[i] = e + 1;\n\
    \    }\n    return ret;\n}\n/*\nunittest\n{\n    alias candidate = incr_list;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([3L, 2L, 1L]) == [4L,\
    \ 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L,\
    \ 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpkd948y4p.d(87): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpkd948y4p.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979978
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ res = new long[l.length];\n    foreach (i, e; l)\n    {\n        res[i] = e\
    \ + 1;\n    }\n    return res;\n}\n/*\nReturn list with elements decremented by\
    \ 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[] res = new long[l.length];\n\
    \    foreach (i, e; l)\n    {\n        res[i] = e - 1;\n    }\n    return res;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list(long[]\
    \ l) \n{\n    long[] res = new long[l.length];\n    foreach (i, e; l)\n    {\n\
    \        res[i] = e + 1;\n    }\n    return res;\n}\n/*\nReturn list with elements\
    \ decremented by 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[]\
    \ res = new long[l.length];\n    foreach (i, e; l)\n    {\n        res[i] = e\
    \ - 1;\n    }\n    return res;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[] res = new long[l.length];\n\
    \    foreach (i, e; l)\n    {\n        res[i] = e + 1;\n    }\n    return res;\n\
    }\n/*\nReturn list with elements decremented by 1.\n            \n*/\nlong[] decr_list(long[]\
    \ l) \n{\n    long[] res = new long[l.length];\n    foreach (i, e; l)\n    {\n\
    \        res[i] = e - 1;\n    }\n    return res;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ res = new long[l.length];\n    foreach (i, e; l)\n    {\n        res[i] = e\
    \ +\nunittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpsihiszzb.d(91): Error: expression expected, not \''unittest\''\n/tmp/tmpsihiszzb.d(92):
    Error: found \''{\'' when expecting \'';\'' following statement\n/tmp/tmpsihiszzb.d(99):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsihiszzb.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_2(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n\
    \    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list_3(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list_4(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i, e; l)\n    {\n\
    \        ret[i] = e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list_5(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_6(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n\
    \    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list_7(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l)\nunittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpqq43zpjk.d(89): Error: found \''unittest\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqq43zpjk.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_2(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e + 1;\n    }\n\
    \    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list_3(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i,e; l)\n    {\n        ret[i] = e + 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list_4(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i,e; l)\n    {\n \
    \       ret[i] = e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list_5(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_6(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e + 1;\n    }\n\
    \    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list_7(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i,e; l)\nunittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp0njhajxd.d(89): Error: found \''unittest\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0njhajxd.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_2(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e + 1;\n    }\n\
    \    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list_3(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i,e; l)\n    {\n        ret[i] = e + 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list_4(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i,e; l)\n    {\n \
    \       ret[i] = e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list_5(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_6(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e + 1;\n    }\n\
    \    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list_7(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i,e; l)\nunittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp0njhajxd.d(89): Error: found \''unittest\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0njhajxd.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l) \n    {\n        ret[i] = e\
    \ + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list2(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i, e; l) \n    {\n        ret[i] = e + 1;\n   \
    \ }\n    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n   \
    \         \n*/\nlong[] incr_list3(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l) \n    {\n        ret[i] = e + 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list4(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i, e; l) \n    {\n\
    \        ret[i] = e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list5(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l) \n    {\n        ret[i] = e\
    \ + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list6(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i, e; l) \n    {\n        ret[i] = e + 1;\n   \
    \ }\n    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n   \
    \         \n*/\nlong[] incr_list7(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l)\nunittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmplgigv3x_.d(89): Error: found \''unittest\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplgigv3x_.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ r = new long[l.length];\n    foreach (i, e; l)\n        r[i] = e + 1;\n    return\
    \ r;\n}\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[]\
    \ incr_list_2(long[] l) \n{\n    long[] r = new long[l.length];\n    foreach (i,\
    \ e; l)\n        r[i] = e + 1;\n    return r;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list_3(long[] l) \n{\n    long[]\
    \ r = new long[l.length];\n    foreach (i, e; l)\n        r[i] = e + 1;\n    return\
    \ r;\n}\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[]\
    \ incr_list_4(long[] l) \n{\n    long[] r = new long[l.length];\n    foreach (i,\
    \ e; l)\n        r[i] = e + 1;\n    return r;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list_5(long[] l) \n{\n    long[]\
    \ r = new long[l.length];\n    foreach (i, e; l)\n        r[i] = e + 1;\n    return\
    \ r;\n}\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[]\
    \ incr_list_6(long[] l) \n{\n    long[] r = new long[l.length];\n    foreach (i,\
    \ e; l)\n        r[i] = e + 1;\n    return r;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list_7(long[] l) \n{\n    long[]\
    \ r = new long[l.length];\n    foreach (i, e; l)\n        r[i] = e + 1;\n    return\
    \ r;\n}\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong\n\
    unittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([]) == []);\n\
    \    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp6zsvcawg.d(85): Error: no identifier for declarator long\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6zsvcawg.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979978
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l) \n    {\n        ret[i] = e\
    \ + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_2(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i, e; l) \n    {\n        ret[i] = e + 1;\n   \
    \ }\n    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n   \
    \         \n*/\nlong[] incr_list_3(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l) \n    {\n        ret[i] = e + 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list_4(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i, e; l) \n    {\n\
    \        ret[i] = e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list_5(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l) \n    {\n        ret[i] = e\
    \ + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_6(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i, e; l) \n    {\n        ret[i] = e + 1;\n   \
    \ }\n    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n   \
    \         \n*/\nlong[] incr_list_7(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(\nunittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpbmnb5igo.d(89): Error: basic type expected, not unittest\n/tmp/tmpbmnb5igo.d(89):
    Error: no identifier for declarator int\n/tmp/tmpbmnb5igo.d(89): Error: found
    \''unittest\'' when expecting \'';\''\n/tmp/tmpbmnb5igo.d(97): Error: found \''void\''
    when expecting \'')\''\n/tmp/tmpbmnb5igo.d(97): Error: found \''{\'' when expecting
    \'';\'' following statement\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbmnb5igo.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i,e; l)\n        ret[i] = e + 1;\n  \
    \  return ret;\n}\nunittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjksqise5.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements decremented by\
    \ 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l)\n    {\n        ret[i] = e - 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i, e; l)\n    {\n\
    \        ret[i] = e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ decremented by 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e -\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements decremented by 1.\n            \n*/\nlong[] decr_list(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i, e; l)\n    {\n\
    \        ret[i] = e - 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\n\
    unittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([]) == []);\n\
    \    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpvwhhmvid.d(91): Error: expression expected, not \''unittest\''\n/tmp/tmpvwhhmvid.d(92):
    Error: found \''{\'' when expecting \'';\'' following statement\n/tmp/tmpvwhhmvid.d(99):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvwhhmvid.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ r = new long[l.length];\n    foreach (i, e; l)\n    {\n        r[i] = e + 1;\n\
    \    }\n    return r;\n}\nunittest\n{\n    alias candidate = incr_list;\n\n  \
    \  assert(candidate([]) == []);\n    assert(candidate([3L, 2L, 1L]) == [4L, 3L,\
    \ 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L,\
    \ 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3yswq6bi.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    for (int i = 0; i < l.length; i++) {\n      \
    \  ret[i] = l[i] + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ decremented by 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    for (int i = 0; i < l.length; i++) {\n      \
    \  ret[i] = l[i] - 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l, long[] ret)\
    \ \n{\n    for (int i = 0; i < l.length; i++) {\n        ret[i] = l[i] + 1;\n\
    \    }\n    return ret;\n}\n/*\nReturn list with elements decremented by 1.\n\
    \            \n*/\nlong[] decr_list(long[] l, long[] ret) \n{\n    for (int i\
    \ = 0; i < l.length; i++) {\n        ret[i] = l[i] - 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list(long[]\
    \ l, long[] ret, int start) \n{\n    for (int i = start; i < l.length; i++) {\n\
    \        ret[i] = l[i] + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ decremented by 1.\n            \n*/\nlong[] decr_list(long[] l, long[] ret,\
    \ int start) \n{\n    for (int i = start; i < l.length; i++) {\n        ret[i]\
    \ = l[i] - 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented\
    \ by 1.\n            \n*/\nlong[] incr_list(long[] l, long[] ret, int start, int\
    \ end) \n{\n    for (int i = start; i < end; i\nunittest\n{\n    alias candidate\
    \ = incr_list;\n\n    assert(candidate([]) == []);\n    assert(candidate([3L,\
    \ 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L,\
    \ 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpj4_nxfb_.d(78): Error: found \''unittest\'' when expecting \'')\''\n/tmp/tmpj4_nxfb_.d(86):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpj4_nxfb_.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979978
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ r = new long[l.length];\n    foreach (i, e; l) \n    {\n        r[i] = e + 1;\n\
    \    }\n    return r;\n}\nunittest\n{\n    alias candidate = incr_list;\n\n  \
    \  assert(candidate([]) == []);\n    assert(candidate([3L, 2L, 1L]) == [4L, 3L,\
    \ 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L,\
    \ 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpm21pqr00.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979978
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\nunittest\n{\n    alias candidate = incr_list;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([3L, 2L, 1L]) == [4L,\
    \ 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L,\
    \ 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgvt05g61.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ res = new long[l.length];\n    foreach (i, e; l)\n    {\n        res[i] = e\
    \ + 1;\n    }\n    return res;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_2(long[] l) \n{\n    long[] res = new\
    \ long[l.length];\n    foreach (i, e; l)\n    {\n        res[i] = e + 1;\n   \
    \ }\n    return res;\n}\n/*\nReturn list with elements incremented by 1.\n   \
    \         \n*/\nlong[] incr_list_3(long[] l) \n{\n    long[] res = new long[l.length];\n\
    \    foreach (i, e; l)\n    {\n        res[i] = e + 1;\n    }\n    return res;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list_4(long[]\
    \ l) \n{\n    long[] res = new long[l.length];\n    foreach (i, e; l)\n    {\n\
    \        res[i] = e + 1;\n    }\n    return res;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list_5(long[] l) \n{\n    long[]\
    \ res = new long[l.length];\n    foreach (i, e; l)\n    {\n        res[i] = e\
    \ + 1;\n    }\n    return res;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_6(long[] l) \n{\n    long[] res = new\
    \ long[l.length];\n    foreach (i, e; l)\n    {\n        res[i] = e + 1;\n   \
    \ }\n    return res;\n}\n/*\nReturn list with elements incremented by 1.\n   \
    \         \n*/\nlong[] incr_list_7(long[] l) \n{\n    long[] res = new long[l.length];\n\
    \    foreach (i, e; l)\nunittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp50k5e2td.d(89): Error: found \''unittest\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp50k5e2td.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_foreach(long[] l) \n{\n    long[] ret\
    \ = new long[l.length];\n    foreach(e; l)\n    {\n        ret ~= e + 1;\n   \
    \ }\n    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n   \
    \         \n*/\nlong[] incr_list_foreach_index(long[] l) \n{\n    long[] ret =\
    \ new long[l.length];\n    foreach_index(i; l)\n    {\n        ret[i] = l[i] +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_foreach_reverse(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach_reverse(e; l)\n    {\n        ret ~=\
    \ e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented\
    \ by 1.\n            \n*/\nlong[] incr_list_foreach_reverse_index(long[] l) \n\
    {\n    long[] ret = new long[l.length];\n    foreach_reverse_index(i; l)\n   \
    \ {\n        ret[i] = l[i] + 1;\n    }\n    return ret;\n}\n/*\nReturn list with\
    \ elements incremented by 1.\n            \n*/\nlong[] incr_list_foreach_reverse_index_range(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach_reverse_index(i; l[0..$-1])\n\
    \    {\n        ret[i] = l[i] + 1;\n    }\n    return ret;\n}\n/*\nReturn list\
    \ with elements incremented by 1.\n            \n*/\nlong[] incr_list_fore\nunittest\n\
    {\n    alias candidate = incr_list;\n\n    assert(candidate([]) == []);\n    assert(candidate([3L,\
    \ 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L,\
    \ 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpotjmjpvc.d(36): Error: found \'';\'' when expecting \'',\''\n/tmp/tmpotjmjpvc.d(37):
    Error: found \''{\'' when expecting \'';\'' following statement\n/tmp/tmpotjmjpvc.d(40):
    Error: Declaration expected, not \''return\''\n/tmp/tmpotjmjpvc.d(41): Error:
    unrecognized declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpotjmjpvc.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979978
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ res;\n    foreach(elem; l)\n    {\n        res ~= elem + 1;\n    }\n    return\
    \ res;\n}\n/*\nReturn list with elements incremented by 1.\n            \n*/\n\
    long[] incr_list2(long[] l) \n{\n    long[] res;\n    foreach(elem; l)\n    {\n\
    \        res ~= elem + 1;\n    }\n    return res;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list3(long[] l) \n{\n    long[]\
    \ res;\n    foreach(elem; l)\n    {\n        res ~= elem + 1;\n    }\n    return\
    \ res;\n}\n/*\nReturn list with elements incremented by 1.\n            \n*/\n\
    long[] incr_list4(long[] l) \n{\n    long[] res;\n    foreach(elem; l)\n    {\n\
    \        res ~= elem + 1;\n    }\n    return res;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list5(long[] l) \n{\n    long[]\
    \ res;\n    foreach(elem; l)\n    {\n        res ~= elem + 1;\n    }\n    return\
    \ res;\n}\n/*\nReturn list with elements incremented by 1.\n            \n*/\n\
    long[] incr_list6(long[] l) \n{\n    long[] res;\n    foreach(elem; l)\n    {\n\
    \        res ~= elem + 1;\n    }\n    return res;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list7(long[] l) \n{\n    long[]\
    \ res;\n    foreach(elem; l)\n    {\n        res ~= elem + 1;\n    }\n    return\
    \ res;\n}\n/*\nReturn list with elements incremented by 1.\n            \n*/\n\
    long[] incr_list8(long[] l) \n{\n    long[] res;\n    foreach(elem\nunittest\n\
    {\n    alias candidate = incr_list;\n\n    assert(candidate([]) == []);\n    assert(candidate([3L,\
    \ 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L,\
    \ 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmprej_klnd.d(102): Error: no identifier for declarator elem\n/tmp/tmprej_klnd.d(102):
    Error: found \''unittest\'' when expecting \'';\''\n/tmp/tmprej_klnd.d(110): Error:
    found \''void\'' when expecting \'')\''\n/tmp/tmprej_klnd.d(110): Error: found
    \''{\'' when expecting \'';\'' following statement\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmprej_klnd.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979978
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_2(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e + 1;\n    }\n\
    \    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list_3(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i,e; l)\n    {\n        ret[i] = e + 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list_4(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i,e; l)\n    {\n \
    \       ret[i] = e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list_5(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_6(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e + 1;\n    }\n\
    \    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list_7(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i,e; l)\nunittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp0njhajxd.d(89): Error: found \''unittest\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0njhajxd.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_2(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n\
    \    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list_3(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list_4(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i, e; l)\n    {\n\
    \        ret[i] = e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list_5(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_6(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n\
    \    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list_7(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l)\nunittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpqq43zpjk.d(89): Error: found \''unittest\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqq43zpjk.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_range(long[] l) \n{\n    long[] ret =\
    \ new long[l.length];\n    foreach(i, e; l[])\n    {\n        ret[i] = e + 1;\n\
    \    }\n    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n\
    \            \n*/\nlong[] incr_list_range_2(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i, e; l[0 .. l.length])\n    {\n        ret[i]\
    \ = e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented\
    \ by 1.\n            \n*/\nlong[] incr_list_range_3(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l[0 .. $])\n    {\n        ret[i]\
    \ = e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented\
    \ by 1.\n            \n*/\nlong[] incr_list_range_4(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l[$ - l.length .. $])\n    {\n\
    \        ret[i] = e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list_range_5(long[] l) \n{\n\
    \    long[] ret = new long[l.length];\n    foreach(i, e; l[$ - l.length .. $])\n\
    \    {\n        ret[i] = e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with\
    \ elements incremented by 1.\n            \n*/\nlong[] incr_\nunittest\n{\n  \
    \  alias candidate = incr_list;\n\n    assert(candidate([]) == []);\n    assert(candidate([3L,\
    \ 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L,\
    \ 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpkho_ywx3.d(86): Error: semicolon expected, not \''unittest\''\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkho_ywx3.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979978
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list2(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n\
    \    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list3(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list4(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i, e; l)\n    {\n\
    \        ret[i] = e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list5(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list6(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n\
    \    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list7(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l)\n    {\n        ret\nunittest\n{\n    alias candidate =\
    \ incr_list;\n\n    assert(candidate([]) == []);\n    assert(candidate([3L, 2L,\
    \ 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L, 0L,\
    \ 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp4p7mwtji.d(91): Error: found \''unittest\'' when expecting \'';\''
    following statement\n/tmp/tmp4p7mwtji.d(99): Error: found \''EOF\'' when expecting
    \''}\'' following compound statement\n/tmp/tmp4p7mwtji.d(99): Error: found \''EOF\''
    when expecting \''}\'' following compound statement\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmp4p7mwtji.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_2(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n\
    \    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list_3(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list_4(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i, e; l)\n    {\n\
    \        ret[i] = e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list_5(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_6(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n\
    \    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list_7(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l)\nunittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpqq43zpjk.d(89): Error: found \''unittest\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqq43zpjk.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ r = new long[l.length];\n    foreach (i, e; l)\n    {\n        r[i] = e + 1;\n\
    \    }\n    return r;\n}\nunittest\n{\n    alias candidate = incr_list;\n\n  \
    \  assert(candidate([]) == []);\n    assert(candidate([3L, 2L, 1L]) == [4L, 3L,\
    \ 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L,\
    \ 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3yswq6bi.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ res = new long[l.length];\n    foreach (i, e; l)\n    {\n        res[i] = e\
    \ + 1;\n    }\n    return res;\n}\nunittest\n{\n    alias candidate = incr_list;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([3L, 2L, 1L]) == [4L,\
    \ 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L,\
    \ 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpz4_00fmo.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret;\n    foreach(i; l)\n    {\n        ret ~= i + 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list_range(long[]\
    \ l) \n{\n    long[] ret;\n    foreach(i; l)\n    {\n        ret ~= i + 1;\n \
    \   }\n    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n \
    \           \n*/\nlong[] incr_list_foreach(long[] l) \n{\n    long[] ret;\n  \
    \  foreach(i; l)\n    {\n        ret ~= i + 1;\n    }\n    return ret;\n}\n/*\n\
    Return list with elements incremented by 1.\n            \n*/\nlong[] incr_list_foreach_range(long[]\
    \ l) \n{\n    long[] ret;\n    foreach(i; l)\n    {\n        ret ~= i + 1;\n \
    \   }\n    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n \
    \           \n*/\nlong[] incr_list_foreach_index(long[] l) \n{\n    long[] ret;\n\
    \    foreach(i; l)\n    {\n        ret ~= i + 1;\n    }\n    return ret;\n}\n\
    /*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list_foreach_index_range(long[]\
    \ l) \n{\n    long[] ret;\n    foreach(i; l)\n    {\n        ret ~= i + 1;\n \
    \   }\n    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n \
    \           \n*/\nlong[] incr_list_foreach_index_range_ref(long[] l) \n{\n   \
    \ long[] ret;\n    foreach(i; l)\n    {\n        ret ~= i + 1;\n    }\n    return\
    \ ret;\n}\n/*\nReturn list with elements incremented by 1.\n            \n*/\n\
    long[] incr_list_foreach_index_range_ref_const\nunittest\n{\n    alias candidate\
    \ = incr_list;\n\n    assert(candidate([]) == []);\n    assert(candidate([3L,\
    \ 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L,\
    \ 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpm7rcqna5.d(99): Error: semicolon expected, not \''unittest\''\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpm7rcqna5.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979978
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret;\n    foreach(i; l)\n        ret ~= i + 1;\n    return ret;\n}\n/*\nReturn\
    \ list with elements incremented by 1.\n            \n*/\nlong[] incr_list_2(long[]\
    \ l) \n{\n    long[] ret;\n    foreach(i; l)\n        ret ~= i + 1;\n    return\
    \ ret;\n}\n/*\nReturn list with elements incremented by 1.\n            \n*/\n\
    long[] incr_list_3(long[] l) \n{\n    long[] ret;\n    foreach(i; l)\n       \
    \ ret ~= i + 1;\n    return ret;\n}\n/*\nReturn list with elements incremented\
    \ by 1.\n            \n*/\nlong[] incr_list_4(long[] l) \n{\n    long[] ret;\n\
    \    foreach(i; l)\n        ret ~= i + 1;\n    return ret;\n}\n/*\nReturn list\
    \ with elements incremented by 1.\n            \n*/\nlong[] incr_list_5(long[]\
    \ l) \n{\n    long[] ret;\n    foreach(i; l)\n        ret ~= i + 1;\n    return\
    \ ret;\n}\n/*\nReturn list with elements incremented by 1.\n            \n*/\n\
    long[] incr_list_6(long[] l) \n{\n    long[] ret;\n    foreach(i; l)\n       \
    \ ret ~= i + 1;\n    return ret;\n}\n/*\nReturn list with elements incremented\
    \ by 1.\n            \n*/\nlong[] incr_list_7(long[] l) \n{\n    long[] ret;\n\
    \    foreach(i; l)\n        ret ~= i + 1;\n    return ret;\n}\n/*\nReturn list\
    \ with elements incremented by 1.\n            \n*/\nlong[] incr_list_8(long[]\
    \ l) \n{\n    long[] ret;\n    foreach(i; l)\n        ret ~= i + 1;\n    return\
    \ ret;\n}\n/*\nReturn list with elements incremented by 1.\n            \n*/\n\
    long[] incr_list_9(long[] l) \nunittest\n{\n    alias candidate = incr_list;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([3L, 2L, 1L]) == [4L,\
    \ 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L,\
    \ 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpoemu3af3.d(96): Error: semicolon expected following function
    declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpoemu3af3.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979978
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n        ret[i] = e + 1;\n \
    \   return ret;\n}\n/*\nReturn list with elements incremented by 1.\n        \
    \    \n*/\nlong[] incr_list_range(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(e; l)\n        ret ~= e + 1;\n    return ret;\n}\n/*\nReturn list\
    \ with elements incremented by 1.\n            \n*/\nlong[] incr_list_index(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach_index(i; l)\n    \
    \    ret[i] = l[i] + 1;\n    return ret;\n}\n/*\nReturn list with elements incremented\
    \ by 1.\n            \n*/\nlong[] incr_list_index_range(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach_index(i; l)\n        ret ~= l[i] + 1;\n\
    \    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list_index_range_reverse(long[] l) \n{\n    long[] ret\
    \ = new long[l.length];\n    foreach_reverse(i; l)\n        ret ~= l[i] + 1;\n\
    \    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list_index_range_reverse_step(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach_reverse(i; l)\n        ret ~= l[i] +\
    \ 1;\n    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n  \
    \          \n*/\nlong[] incr_list_index_range_reverse_step_parallel(long[] l)\
    \ \n{\n    long[] ret = new long[l.length];\n    foreach_reverse(i; l)\n     \
    \   ret ~= l[i] + 1;\n\nunittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpayzc0u8v.d(32): Error: found \'';\'' when expecting \'',\''\n/tmp/tmpayzc0u8v.d(33):
    Error: found \''ret\'' when expecting \'';\'' following statement\n/tmp/tmpayzc0u8v.d(43):
    Error: found \'';\'' when expecting \'',\''\n/tmp/tmpayzc0u8v.d(44): Error: found
    \''ret\'' when expecting \'';\'' following statement\n/tmp/tmpayzc0u8v.d(44):
    Error: found \''~=\'' instead of statement\n/tmp/tmpayzc0u8v.d(79): Error: found
    \''unittest\'' instead of statement\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmpayzc0u8v.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979978
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\nunittest\n{\n    alias candidate = incr_list;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([3L, 2L, 1L]) == [4L,\
    \ 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L,\
    \ 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0wf5r23j.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n        ret[i] = e + 1;\n \
    \   return ret;\n}\n/*\nReturn list with elements decremented by 1.\n        \
    \    \n*/\nlong[] decr_list(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l)\n        ret[i] = e - 1;\n    return ret;\n}\n/*\nReturn\
    \ list with elements incremented by 1.\n            \n*/\nlong[] incr_list(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i, e; l)\n       \
    \ ret[i] = e + 1;\n    return ret;\n}\n/*\nReturn list with elements decremented\
    \ by 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i, e; l)\n        ret[i] = e - 1;\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i, e; l)\n       \
    \ ret[i] = e + 1;\n    return ret;\n}\n/*\nReturn list with elements decremented\
    \ by 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i, e; l)\n        ret[i] = e - 1;\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i, e; l)\n       \
    \ ret[i] = e + 1;\n    return ret;\n}\n/*\nReturn list with elements decremented\
    \ by 1.\n            \n*/\nlong[] decr_list(long[] l) \n\nunittest\n{\n    alias\
    \ candidate = incr_list;\n\n    assert(candidate([]) == []);\n    assert(candidate([3L,\
    \ 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L,\
    \ 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmphknot444.d(86): Error: semicolon expected following function
    declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphknot444.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\nunittest\n{\n    alias candidate = incr_list;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([3L, 2L, 1L]) == [4L,\
    \ 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L,\
    \ 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgvt05g61.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\nunittest\n{\n    alias candidate = incr_list;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([3L, 2L, 1L]) == [4L,\
    \ 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L,\
    \ 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0wf5r23j.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements decremented by\
    \ 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l)\n    {\n        ret[i] = e - 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i, e; l)\n    {\n\
    \        ret[i] = e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ decremented by 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e -\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements decremented by 1.\n            \n*/\nlong[] decr_list(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i, e; l)\n    {\n\
    \        ret[i] = e - 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\n\
    unittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([]) == []);\n\
    \    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpvwhhmvid.d(91): Error: expression expected, not \''unittest\''\n/tmp/tmpvwhhmvid.d(92):
    Error: found \''{\'' when expecting \'';\'' following statement\n/tmp/tmpvwhhmvid.d(99):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvwhhmvid.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret;\n    ret.length = l.length;\n    foreach(i, e; l)\n        ret[i] = e +\
    \ 1;\n    return ret;\n}\n/*\nReturn list with elements decremented by 1.\n  \
    \          \n*/\nlong[] decr_list(long[] l) \n{\n    long[] ret;\n    ret.length\
    \ = l.length;\n    foreach(i, e; l)\n        ret[i] = e - 1;\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list(long[]\
    \ l) \n{\n    long[] ret;\n    ret.length = l.length;\n    foreach(i, e; l)\n\
    \        ret[i] = e + 1;\n    return ret;\n}\n/*\nReturn list with elements decremented\
    \ by 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[] ret;\n \
    \   ret.length = l.length;\n    foreach(i, e; l)\n        ret[i] = e - 1;\n  \
    \  return ret;\n}\n/*\nReturn list with elements incremented by 1.\n         \
    \   \n*/\nlong[] incr_list(long[] l) \n{\n    long[] ret;\n    ret.length = l.length;\n\
    \    foreach(i, e; l)\n        ret[i] = e + 1;\n    return ret;\n}\n/*\nReturn\
    \ list with elements decremented by 1.\n            \n*/\nlong[] decr_list(long[]\
    \ l) \n{\n    long[] ret;\n    ret.length = l.length;\n    foreach(i, e; l)\n\
    \        ret[i] = e - 1;\n    return ret;\n}\n/*\nReturn list with elements incremented\
    \ by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[] ret;\n \
    \   ret.length = l.length;\n    foreach(i, e; l)\n        ret[i] = e + 1;\n  \
    \  return ret;\n}\n/*\nReturn list with elements decremented\nunittest\n{\n  \
    \  alias candidate = incr_list;\n\n    assert(candidate([]) == []);\n    assert(candidate([3L,\
    \ 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L,\
    \ 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmppl9es31a.d(87): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmppl9es31a.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979978
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\nunittest\n{\n    alias candidate = incr_list;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([3L, 2L, 1L]) == [4L,\
    \ 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L,\
    \ 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgvt05g61.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ result = new long[l.length];\n    foreach (i, e; l)\n    {\n        result[i]\
    \ = e + 1;\n    }\n    return result;\n}\n/*\nReturn list with elements incremented\
    \ by 1.\n            \n*/\nlong[] incr_list2(long[] l) \n{\n    long[] result\
    \ = new long[l.length];\n    foreach (i, e; l)\n    {\n        result[i] = e +\
    \ 1;\n    }\n    return result;\n}\n/*\nReturn list with elements incremented\
    \ by 1.\n            \n*/\nlong[] incr_list3(long[] l) \n{\n    long[] result\
    \ = new long[l.length];\n    foreach (i, e; l)\n    {\n        result[i] = e +\
    \ 1;\n    }\n    return result;\n}\n/*\nReturn list with elements incremented\
    \ by 1.\n            \n*/\nlong[] incr_list4(long[] l) \n{\n    long[] result\
    \ = new long[l.length];\n    foreach (i, e; l)\n    {\n        result[i] = e +\
    \ 1;\n    }\n    return result;\n}\n/*\nReturn list with elements incremented\
    \ by 1.\n            \n*/\nlong[] incr_list5(long[] l) \n{\n    long[] result\
    \ = new long[l.length];\n    foreach (i, e; l)\n    {\n        result[i] = e +\
    \ 1;\n    }\n    return result;\n}\n/*\nReturn list with elements incremented\
    \ by 1.\n            \n*/\nlong[] incr_list6(long[] l) \n{\n    long[] result\
    \ = new long[l.length];\n    foreach (i, e; l)\n    {\n        result[i] = e +\
    \ 1;\n    }\n    return result;\n}\n/*\nReturn list with elements incremented\
    \ by 1.\n            \n*/\nlong[] incr_list7(long[] l) \n{\n    long[] result\
    \ = new long[l.length];\n    foreach (i, e; l)\n    {\n        result\nunittest\n\
    {\n    alias candidate = incr_list;\n\n    assert(candidate([]) == []);\n    assert(candidate([3L,\
    \ 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L,\
    \ 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp4nmrx_v5.d(91): Error: found \''unittest\'' when expecting \'';\''
    following statement\n/tmp/tmp4nmrx_v5.d(99): Error: found \''EOF\'' when expecting
    \''}\'' following compound statement\n/tmp/tmp4nmrx_v5.d(99): Error: found \''EOF\''
    when expecting \''}\'' following compound statement\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmp4nmrx_v5.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979978
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_range(long[] l) \n{\n    long[] ret =\
    \ new long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e + 1;\n \
    \   }\n    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n \
    \           \n*/\nlong[] incr_list_foreach(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e + 1;\n    }\n\
    \    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list_foreach_range(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e + 1;\n    }\n\
    \    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list_foreach_range_ref(long[] l) \n{\n    long[] ret =\
    \ new long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e + 1;\n \
    \   }\n    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n \
    \           \n*/\nlong[] incr_list_foreach_range_ref_const(long[] l) \n{\n   \
    \ long[] ret = new long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i]\
    \ = e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented\
    \ by 1.\n            \n*/\nlong[] incr_list_foreach_range_ref_const_immutable(long[]\
    \ l) \nunittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp7xlb7otf.d(86): Error: semicolon expected following function
    declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7xlb7otf.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979978
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, v; l)\n    {\n        ret[i] = v +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_2(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i, v; l)\n    {\n        ret[i] = v + 1;\n    }\n\
    \    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list_3(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, v; l)\n    {\n        ret[i] = v + 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list_4(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i, v; l)\n    {\n\
    \        ret[i] = v + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list_5(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, v; l)\n    {\n        ret[i] = v +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_6(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i, v; l)\n    {\n        ret[i] = v + 1;\n    }\n\
    \    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list_7(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, v; l)\nunittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpkyg7inv4.d(89): Error: found \''unittest\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkyg7inv4.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979978
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ res = new long[l.length];\n    foreach (i, e; l) {\n        res[i] = e + 1;\n\
    \    }\n    return res;\n}\nunittest\n{\n    alias candidate = incr_list;\n\n\
    \    assert(candidate([]) == []);\n    assert(candidate([3L, 2L, 1L]) == [4L,\
    \ 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L,\
    \ 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpe_6ds2jx.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979978
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret;\n    foreach(i; l)\n        ret ~= i + 1;\n    return ret;\n}\nunittest\n\
    {\n    alias candidate = incr_list;\n\n    assert(candidate([]) == []);\n    assert(candidate([3L,\
    \ 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L,\
    \ 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpc9cvpet5.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979978
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements decremented by\
    \ 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l)\n    {\n        ret[i] = e - 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i, e; l)\n    {\n\
    \        ret[i] = e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ decremented by 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e -\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements decremented by 1.\n            \n*/\nlong[] decr_list(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i, e; l)\n    {\n\
    \        ret[i] = e - 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\n\
    unittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([]) == []);\n\
    \    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpvwhhmvid.d(91): Error: expression expected, not \''unittest\''\n/tmp/tmpvwhhmvid.d(92):
    Error: found \''{\'' when expecting \'';\'' following statement\n/tmp/tmpvwhhmvid.d(99):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvwhhmvid.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements decremented by\
    \ 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l)\n    {\n        ret[i] = e - 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i, e; l)\n    {\n\
    \        ret[i] = e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ decremented by 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e -\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements decremented by 1.\n            \n*/\nlong[] decr_list(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i, e; l)\n    {\n\
    \        ret[i] = e - 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\n\
    unittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([]) == []);\n\
    \    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpvwhhmvid.d(91): Error: expression expected, not \''unittest\''\n/tmp/tmpvwhhmvid.d(92):
    Error: found \''{\'' when expecting \'';\'' following statement\n/tmp/tmpvwhhmvid.d(99):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvwhhmvid.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\nunittest\n{\n    alias candidate = incr_list;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([3L, 2L, 1L]) == [4L,\
    \ 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L,\
    \ 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0wf5r23j.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_2(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e + 1;\n    }\n\
    \    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list_3(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i,e; l)\n    {\n        ret[i] = e + 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list_4(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i,e; l)\n    {\n \
    \       ret[i] = e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list_5(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_6(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e + 1;\n    }\n\
    \    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list_7(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i,e; l)\nunittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp0njhajxd.d(89): Error: found \''unittest\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0njhajxd.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret;\n    ret = new long[l.length];\n    foreach (i, v; l) \n    {\n       \
    \ ret[i] = v + 1;\n    }\n    return ret;\n}\nunittest\n{\n    alias candidate\
    \ = incr_list;\n\n    assert(candidate([]) == []);\n    assert(candidate([3L,\
    \ 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L,\
    \ 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpm9cb8f_v.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979978
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret;\n    ret = new long[l.length];\n    foreach (i, e; l) \n    {\n       \
    \ ret[i] = e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements decremented\
    \ by 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[] ret;\n \
    \   ret = new long[l.length];\n    foreach (i, e; l) \n    {\n        ret[i] =\
    \ e - 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented\
    \ by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[] ret;\n \
    \   ret = new long[l.length];\n    foreach (i, e; l) \n    {\n        ret[i] =\
    \ e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements decremented\
    \ by 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[] ret;\n \
    \   ret = new long[l.length];\n    foreach (i, e; l) \n    {\n        ret[i] =\
    \ e - 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented\
    \ by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[] ret;\n \
    \   ret = new long[l.length];\n    foreach (i, e; l) \n    {\n        ret[i] =\
    \ e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements decremented\
    \ by 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[] ret;\n \
    \   ret = new long[l.length];\n    foreach (i, e; l) \n    {\n        ret[i] =\
    \ e - 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented\
    \ by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[] ret;\nunittest\n\
    {\n    alias candidate = incr_list;\n\n    assert(candidate([]) == []);\n    assert(candidate([3L,\
    \ 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L,\
    \ 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpliyaqxur.d(94): Error: found \''unittest\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpliyaqxur.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979978
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n        ret[i] = e + 1;\n \
    \   return ret;\n}\n/*\nReturn list with elements decremented by 1.\n        \
    \    \n*/\nlong[] decr_list(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l)\n        ret[i] = e - 1;\n    return ret;\n}\n/*\nReturn\
    \ list with elements incremented by 1.\n            \n*/\nlong[] incr_list(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i, e; l)\n       \
    \ ret[i] = e + 1;\n    return ret;\n}\n/*\nReturn list with elements decremented\
    \ by 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i, e; l)\n        ret[i] = e - 1;\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i, e; l)\n       \
    \ ret[i] = e + 1;\n    return ret;\n}\n/*\nReturn list with elements decremented\
    \ by 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i, e; l)\n        ret[i] = e - 1;\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i, e; l)\n       \
    \ ret[i] = e + 1;\n    return ret;\n}\n/*\nReturn list with elements decremented\
    \ by 1.\n            \n*/\nlong[] decr_list(long[] l) \n\nunittest\n{\n    alias\
    \ candidate = incr_list;\n\n    assert(candidate([]) == []);\n    assert(candidate([3L,\
    \ 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L,\
    \ 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmphknot444.d(86): Error: semicolon expected following function
    declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphknot444.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\nunittest\n{\n    alias candidate = incr_list;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([3L, 2L, 1L]) == [4L,\
    \ 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L,\
    \ 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0wf5r23j.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979977

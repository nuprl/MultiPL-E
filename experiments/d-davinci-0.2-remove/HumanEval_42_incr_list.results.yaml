language: d
name: HumanEval_42_incr_list
results:
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ res = new long[l.length];\n    foreach (i, e; l)\n    {\n        res[i] = e\
    \ + 1;\n    }\n    return res;\n}\nunittest\n{\n    alias candidate = incr_list;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([3L, 2L, 1L]) == [4L,\
    \ 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L,\
    \ 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163125
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret;\n    foreach(i; l)\n    {\n        ret ~= i + 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list2(long[]\
    \ l) \n{\n    return map!((a) => a + 1)(l);\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list3(long[] l) \n{\n    return\
    \ map!((a) => a + 1)(l);\n}\n/*\nReturn list with elements incremented by 1.\n\
    \            \n*/\nlong[] incr_list4(long[] l) \n{\n    return map!((a) => a +\
    \ 1)(l);\n}\n/*\nReturn list with elements incremented by 1.\n            \n*/\n\
    long[] incr_list5(long[] l) \n{\n    return map!((a) => a + 1)(l);\n}\n/*\nReturn\
    \ list with elements incremented by 1.\n            \n*/\nlong[] incr_list6(long[]\
    \ l) \n{\n    return map!((a) => a + 1)(l);\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list7(long[] l) \n{\n    return\
    \ map!((a) => a + 1)(l);\n}\n/*\nReturn list with elements incremented by 1.\n\
    \            \n*/\nlong[] incr_list8(long[] l) \n{\n    return map!((a) => a +\
    \ 1)(l);\n}\n/*\nReturn list with elements incremented by 1.\n            \n*/\n\
    long[] incr_list9(long[] l) \n{\n    return map!((a) => a + 1)(l);\n}\n/*\nReturn\
    \ list with elements incremented by 1.\n            \n*/\nlong[] incr_list10(long[]\
    \ l) \n{\n    return map!((a) => a + 1)(l);\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list11(long[] l) \n{\nunittest\n\
    {\n    alias candidate = incr_list;\n\n    assert(candidate([]) == []);\n    assert(candidate([3L,\
    \ 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L,\
    \ 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpsasjjf02.d(94): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsasjjf02.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163124
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n        ret[i] = e + 1;\n \
    \   return ret;\n}\nunittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163125
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_2(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n\
    \    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list_3(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list_4(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i, e; l)\n    {\n\
    \        ret[i] = e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list_5(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_6(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n\
    \    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list_7(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l)\nunittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp9yeh7l52.d(89): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9yeh7l52.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163124
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements decremented by\
    \ 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l)\n    {\n        ret[i] = e - 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i, e; l)\n    {\n\
    \        ret[i] = e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ decremented by 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e -\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements decremented by 1.\n            \n*/\nlong[] decr_list(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i, e; l)\n    {\n\
    \        ret[i] = e - 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\n\
    unittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([]) == []);\n\
    \    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp9p4nnmen.d(91): Error: expression expected, not `unittest`

    /tmp/tmp9p4nnmen.d(92): Error: found `{` when expecting `;` following statement

    /tmp/tmp9p4nnmen.d(99): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9p4nnmen.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163124
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n        ret[i] = e + 1;\n \
    \   return ret;\n}\n/*\nReturn list with elements decremented by 1.\n        \
    \    \n*/\nlong[] decr_list(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l)\n        ret[i] = e - 1;\n    return ret;\n}\n/*\nReturn\
    \ list with elements incremented by 1.\n            \n*/\nlong[] incr_list(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i, e; l)\n       \
    \ ret[i] = e + 1;\n    return ret;\n}\n/*\nReturn list with elements decremented\
    \ by 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i, e; l)\n        ret[i] = e - 1;\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i, e; l)\n       \
    \ ret[i] = e + 1;\n    return ret;\n}\n/*\nReturn list with elements decremented\
    \ by 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i, e; l)\n        ret[i] = e - 1;\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i, e; l)\n       \
    \ ret[i] = e + 1;\n    return ret;\n}\n/*\nReturn list with elements decremented\
    \ by 1.\n            \n*/\nlong[] decr_list(long[] l) \n\nunittest\n{\n    alias\
    \ candidate = incr_list;\n\n    assert(candidate([]) == []);\n    assert(candidate([3L,\
    \ 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L,\
    \ 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4rokqg72.d(86): Error: semicolon expected following function declaration

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4rokqg72.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163124
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l) \n    {\n        ret[i] = e\
    \ + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_2(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i, e; l) \n    {\n        ret[i] = e + 1;\n   \
    \ }\n    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n   \
    \         \n*/\nlong[] incr_list_3(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l) \n    {\n        ret[i] = e + 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list_4(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i, e; l) \n    {\n\
    \        ret[i] = e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list_5(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l) \n    {\n        ret[i] = e\
    \ + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_6(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i, e; l) \n    {\n        ret[i] = e + 1;\n   \
    \ }\n    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n   \
    \         \n*/\nlong[] incr_list_7(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(\nunittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpdk06tja3.d(89): Error: basic type expected, not `unittest`

    /tmp/tmpdk06tja3.d(89): Error: no identifier for declarator `_error_`

    /tmp/tmpdk06tja3.d(89): Error: found `unittest` when expecting `;`

    /tmp/tmpdk06tja3.d(97): Error: found `void` when expecting `)`

    /tmp/tmpdk06tja3.d(97): Error: found `{` when expecting `;` following statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdk06tja3.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163124
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\nunittest\n{\n    alias candidate = incr_list;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([3L, 2L, 1L]) == [4L,\
    \ 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L,\
    \ 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163125
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\nunittest\n{\n    alias candidate = incr_list;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([3L, 2L, 1L]) == [4L,\
    \ 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L,\
    \ 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163125
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ res = new long[l.length];\n    foreach (i, e; l)\n    {\n        res[i] = e\
    \ + 1;\n    }\n    return res;\n}\nunittest\n{\n    alias candidate = incr_list;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([3L, 2L, 1L]) == [4L,\
    \ 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L,\
    \ 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163125
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_2(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n\
    \    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list_3(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list_4(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i, e; l)\n    {\n\
    \        ret[i] = e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list_5(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_6(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n\
    \    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list_7(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l)\nunittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp9yeh7l52.d(89): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9yeh7l52.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163124
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\nunittest\n{\n    alias candidate = incr_list;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([3L, 2L, 1L]) == [4L,\
    \ 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L,\
    \ 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163125
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret;\n    ret = new long[l.length];\n    foreach (i, e; l)\n    {\n        ret[i]\
    \ = e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements decremented\
    \ by 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[] ret;\n \
    \   ret = new long[l.length];\n    foreach (i, e; l)\n    {\n        ret[i] =\
    \ e - 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented\
    \ by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[] ret;\n \
    \   ret = new long[l.length];\n    foreach (i, e; l)\n    {\n        ret[i] =\
    \ e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements decremented\
    \ by 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[] ret;\n \
    \   ret = new long[l.length];\n    foreach (i, e; l)\n    {\n        ret[i] =\
    \ e - 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented\
    \ by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[] ret;\n \
    \   ret = new long[l.length];\n    foreach (i, e; l)\n    {\n        ret[i] =\
    \ e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements decremented\
    \ by 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[] ret;\n \
    \   ret = new long[l.length];\n    foreach (i, e; l)\n    {\n        ret[i] =\
    \ e - 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented\
    \ by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[] ret;\n \
    \   ret = new long\nunittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpsj5ipe4t.d(95): Error: found `unittest` when expecting `;` following
    statement

    /tmp/tmpsj5ipe4t.d(103): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsj5ipe4t.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163124
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\nunittest\n{\n    alias candidate = incr_list;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([3L, 2L, 1L]) == [4L,\
    \ 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L,\
    \ 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163125
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i,e; l) \n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements decremented by\
    \ 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i,e; l) \n    {\n        ret[i] = e - 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i,e; l) \n    {\n\
    \        ret[i] = e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ decremented by 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i,e; l) \n    {\n        ret[i] = e -\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i,e; l) \n    {\n        ret[i] = e + 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements decremented by 1.\n            \n*/\nlong[] decr_list(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i,e; l) \n    {\n\
    \        ret[i] = e - 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i,e; l) \n    {\n       \nunittest\n\
    {\n    alias candidate = incr_list;\n\n    assert(candidate([]) == []);\n    assert(candidate([3L,\
    \ 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L,\
    \ 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpu3f__wd4.d(91): Error: found `unittest` instead of statement

    /tmp/tmpu3f__wd4.d(99): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpu3f__wd4.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163124
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\nunittest\n{\n    alias candidate = incr_list;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([3L, 2L, 1L]) == [4L,\
    \ 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L,\
    \ 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163125
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements decremented by\
    \ 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l)\n    {\n        ret[i] = e - 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i, e; l)\n    {\n\
    \        ret[i] = e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ decremented by 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e -\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements decremented by 1.\n            \n*/\nlong[] decr_list(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i, e; l)\n    {\n\
    \        ret[i] = e - 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\n\
    unittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([]) == []);\n\
    \    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp9p4nnmen.d(91): Error: expression expected, not `unittest`

    /tmp/tmp9p4nnmen.d(92): Error: found `{` when expecting `;` following statement

    /tmp/tmp9p4nnmen.d(99): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9p4nnmen.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163124
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\nunittest\n{\n    alias candidate = incr_list;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([3L, 2L, 1L]) == [4L,\
    \ 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L,\
    \ 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163125
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_2(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e + 1;\n    }\n\
    \    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list_3(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i,e; l)\n    {\n        ret[i] = e + 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list_4(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i,e; l)\n    {\n \
    \       ret[i] = e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list_5(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_6(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e + 1;\n    }\n\
    \    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list_7(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i,e; l)\nunittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp9d2d9vks.d(89): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9d2d9vks.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163124
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements decremented by\
    \ 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i,e; l)\n    {\n        ret[i] = e - 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i,e; l)\n    {\n \
    \       ret[i] = e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ decremented by 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e -\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i,e; l)\n    {\n        ret[i] = e + 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements decremented by 1.\n            \n*/\nlong[] decr_list(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i,e; l)\n    {\n \
    \       ret[i] = e - 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e +\n\
    unittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([]) == []);\n\
    \    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpeo8dnwjp.d(91): Error: expression expected, not `unittest`

    /tmp/tmpeo8dnwjp.d(92): Error: found `{` when expecting `;` following statement

    /tmp/tmpeo8dnwjp.d(99): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpeo8dnwjp.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163124
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret;\n    foreach(e; l)\n    {\n        ret ~= e + 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements decremented by 1.\n            \n*/\nlong[] decr_list(long[]\
    \ l) \n{\n    long[] ret;\n    foreach(e; l)\n    {\n        ret ~= e - 1;\n \
    \   }\n    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n \
    \           \n*/\nlong[] incr_list(long[] l) \n{\n    long[] ret;\n    foreach(e;\
    \ l)\n    {\n        ret ~= e + 1;\n    }\n    return ret;\n}\n/*\nReturn list\
    \ with elements decremented by 1.\n            \n*/\nlong[] decr_list(long[] l)\
    \ \n{\n    long[] ret;\n    foreach(e; l)\n    {\n        ret ~= e - 1;\n    }\n\
    \    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list(long[] l) \n{\n    long[] ret;\n    foreach(e; l)\n\
    \    {\n        ret ~= e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with\
    \ elements decremented by 1.\n            \n*/\nlong[] decr_list(long[] l) \n\
    {\n    long[] ret;\n    foreach(e; l)\n    {\n        ret ~= e - 1;\n    }\n \
    \   return ret;\n}\n/*\nReturn list with elements incremented by 1.\n        \
    \    \n*/\nlong[] incr_list(long[] l) \n{\n    long[] ret;\n    foreach(e; l)\n\
    \    {\n        ret ~= e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with\
    \ elements decremented by 1.\n            \n*/\nlong[] decr_list(long[] l) \n\
    {\n    long[] ret;\n    foreach(e; l)\n    {\n        ret ~= e - 1;\n    }\n \
    \   return ret\nunittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpix6th3jr.d(106): Error: found `unittest` when expecting `;` following
    `return` statement

    /tmp/tmpix6th3jr.d(114): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpix6th3jr.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163124
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret;\n    ret = new long[l.length];\n    foreach (i, v; l)\n    {\n        ret[i]\
    \ = v + 1;\n    }\n    return ret;\n}\nunittest\n{\n    alias candidate = incr_list;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([3L, 2L, 1L]) == [4L,\
    \ 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L,\
    \ 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163125
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ result = new long[l.length];\n    foreach (i, e; l)\n    {\n        result[i]\
    \ = e + 1;\n    }\n    return result;\n}\n/*\nReturn list with elements incremented\
    \ by 1.\n            \n*/\nlong[] incr_list_by_1(long[] l) \n{\n    long[] result\
    \ = new long[l.length];\n    foreach (i, e; l)\n    {\n        result[i] = e +\
    \ 1;\n    }\n    return result;\n}\n/*\nReturn list with elements incremented\
    \ by 1.\n            \n*/\nlong[] incr_list_by_1_2(long[] l) \n{\n    long[] result\
    \ = new long[l.length];\n    foreach (i, e; l)\n    {\n        result[i] = e +\
    \ 1;\n    }\n    return result;\n}\n/*\nReturn list with elements incremented\
    \ by 1.\n            \n*/\nlong[] incr_list_by_1_3(long[] l) \n{\n    long[] result\
    \ = new long[l.length];\n    foreach (i, e; l)\n    {\n        result[i] = e +\
    \ 1;\n    }\n    return result;\n}\n/*\nReturn list with elements incremented\
    \ by 1.\n            \n*/\nlong[] incr_list_by_1_4(long[] l) \n{\n    long[] result\
    \ = new long[l.length];\n    foreach (i, e; l)\n    {\n        result[i] = e +\
    \ 1;\n    }\n    return result;\n}\n/*\nReturn list with elements incremented\
    \ by 1.\n            \n*/\nlong[] incr_list_by_1_5(long[] l) \n{\n    long[] result\
    \ = new long[l.length];\n    foreach (i, e; l)\n    {\n        result[i] = e +\
    \ 1;\n    }\n    return result;\n}\n/*\nReturn list with elements incremented\
    \ by 1.\n            \n*/\nlong[] incr_list_by_1_6(long[] l) \n{\n   \nunittest\n\
    {\n    alias candidate = incr_list;\n\n    assert(candidate([]) == []);\n    assert(candidate([3L,\
    \ 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L,\
    \ 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpv3u1hb_b.d(88): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpv3u1hb_b.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163124
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret;\n    foreach(elem; l)\n    {\n        ret ~= elem + 1;\n    }\n    return\
    \ ret;\n}\n/*\nReturn list with elements incremented by 1.\n            \n*/\n\
    long[] incr_list_2(long[] l) \n{\n    long[] ret;\n    foreach(elem; l)\n    {\n\
    \        ret ~= elem + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list_3(long[] l) \n{\n    long[]\
    \ ret;\n    foreach(elem; l)\n    {\n        ret ~= elem + 1;\n    }\n    return\
    \ ret;\n}\n/*\nReturn list with elements incremented by 1.\n            \n*/\n\
    long[] incr_list_4(long[] l) \n{\n    long[] ret;\n    foreach(elem; l)\n    {\n\
    \        ret ~= elem + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list_5(long[] l) \n{\n    long[]\
    \ ret;\n    foreach(elem; l)\n    {\n        ret ~= elem + 1;\n    }\n    return\
    \ ret;\n}\n/*\nReturn list with elements incremented by 1.\n            \n*/\n\
    long[] incr_list_6(long[] l) \n{\n    long[] ret;\n    foreach(elem; l)\n    {\n\
    \        ret ~= elem + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list_7(long[] l) \n{\n    long[]\
    \ ret;\n    foreach(elem; l)\n    {\n        ret ~= elem + 1;\n    }\n    return\
    \ ret;\n}\n/*\nReturn list with elements incremented by 1.\n            \n*/\n\
    long[] incr_list_8(long[] l) \n{\n    long[] ret;\nunittest\n{\n    alias candidate\
    \ = incr_list;\n\n    assert(candidate([]) == []);\n    assert(candidate([3L,\
    \ 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L,\
    \ 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmphzfysj5k.d(101): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphzfysj5k.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163124
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ result = new long[l.length];\n    foreach (i, ref e; l)\n    {\n        result[i]\
    \ = e + 1;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = incr_list;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([3L, 2L, 1L]) == [4L,\
    \ 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L,\
    \ 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163125
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i,e; l)\n        ret[i] = e + 1;\n  \
    \  return ret;\n}\nunittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163125
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret;\n    ret = new long[l.length];\n    foreach (i,e; l) \n    {\n        ret[i]\
    \ = e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented\
    \ by 1.\n            \n*/\nlong[] incr_list_2(long[] l) \n{\n    long[] ret;\n\
    \    ret = new long[l.length];\n    foreach (i,e; l) \n    {\n        ret[i] =\
    \ e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented\
    \ by 1.\n            \n*/\nlong[] incr_list_3(long[] l) \n{\n    long[] ret;\n\
    \    ret = new long[l.length];\n    foreach (i,e; l) \n    {\n        ret[i] =\
    \ e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented\
    \ by 1.\n            \n*/\nlong[] incr_list_4(long[] l) \n{\n    long[] ret;\n\
    \    ret = new long[l.length];\n    foreach (i,e; l) \n    {\n        ret[i] =\
    \ e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented\
    \ by 1.\n            \n*/\nlong[] incr_list_5(long[] l) \n{\n    long[] ret;\n\
    \    ret = new long[l.length];\n    foreach (i,e; l) \n    {\n        ret[i] =\
    \ e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented\
    \ by 1.\n            \n*/\nlong[] incr_list_6(long[] l) \n{\n    long[] ret;\n\
    \    ret = new long[l.length];\n    foreach (i,e; l) \n    {\n        ret[i] =\
    \ e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented\
    \ by 1.\n            \n*/\nlong[] incr_list_7(long\nunittest\n{\n    alias candidate\
    \ = incr_list;\n\n    assert(candidate([]) == []);\n    assert(candidate([3L,\
    \ 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L,\
    \ 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpm_xeu3na.d(92): Error: found `unittest` when expecting `)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpm_xeu3na.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163124
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ result = new long[l.length];\n    foreach (i, e; l) \n    {\n        result[i]\
    \ = e + 1;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = incr_list;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([3L, 2L, 1L]) == [4L,\
    \ 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L,\
    \ 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163125
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ r;\n    foreach(i; l)\n    {\n        r ~= i + 1;\n    }\n    return r;\n}\n\
    unittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([]) == []);\n\
    \    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163125
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ result = new long[l.length];\n    foreach (i, e; l) \n    {\n        result[i]\
    \ = e + 1;\n    }\n    return result;\n}\n/*\nReturn list with elements incremented\
    \ by 1.\n            \n*/\nlong[] incr_list_by_1(long[] l) \n{\n    long[] result\
    \ = new long[l.length];\n    foreach (i, e; l) \n    {\n        result[i] = e\
    \ + 1;\n    }\n    return result;\n}\n/*\nReturn list with elements incremented\
    \ by 1.\n            \n*/\nlong[] incr_list_by_1_2(long[] l) \n{\n    long[] result\
    \ = new long[l.length];\n    foreach (i, e; l) \n    {\n        result[i] = e\
    \ + 1;\n    }\n    return result;\n}\n/*\nReturn list with elements incremented\
    \ by 1.\n            \n*/\nlong[] incr_list_by_1_3(long[] l) \n{\n    long[] result\
    \ = new long[l.length];\n    foreach (i, e; l) \n    {\n        result[i] = e\
    \ + 1;\n    }\n    return result;\n}\n/*\nReturn list with elements incremented\
    \ by 1.\n            \n*/\nlong[] incr_list_by_1_4(long[] l) \n{\n    long[] result\
    \ = new long[l.length];\n    foreach (i, e; l) \n    {\n        result[i] = e\
    \ + 1;\n    }\n    return result;\n}\n/*\nReturn list with elements incremented\
    \ by 1.\n            \n*/\nlong[] incr_list_by_1_5(long[] l) \n{\n    long[] result\
    \ = new long[l.length];\n    foreach (i, e; l) \n    {\n        result[i] = e\
    \ + 1;\n    }\n    return result;\n}\n/*\nReturn list with elements incremented\
    \ by 1.\n            \n*/\nlong[] incr_list_by_1_6(long[] l\nunittest\n{\n   \
    \ alias candidate = incr_list;\n\n    assert(candidate([]) == []);\n    assert(candidate([3L,\
    \ 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L,\
    \ 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpv9mqnz1n.d(86): Error: found `unittest` when expecting `)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpv9mqnz1n.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163124
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements decremented by\
    \ 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i,e; l)\n    {\n        ret[i] = e - 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i,e; l)\n    {\n \
    \       ret[i] = e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ decremented by 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e -\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i,e; l)\n    {\n        ret[i] = e + 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements decremented by 1.\n            \n*/\nlong[] decr_list(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i,e; l)\n    {\n \
    \       ret[i] = e - 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e +\n\
    unittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([]) == []);\n\
    \    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpeo8dnwjp.d(91): Error: expression expected, not `unittest`

    /tmp/tmpeo8dnwjp.d(92): Error: found `{` when expecting `;` following statement

    /tmp/tmpeo8dnwjp.d(99): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpeo8dnwjp.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163124
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements decremented by\
    \ 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l)\n    {\n        ret[i] = e - 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i, e; l)\n    {\n\
    \        ret[i] = e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ decremented by 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e -\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements decremented by 1.\n            \n*/\nlong[] decr_list(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i, e; l)\n    {\n\
    \        ret[i] = e - 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\n\
    unittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([]) == []);\n\
    \    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp9p4nnmen.d(91): Error: expression expected, not `unittest`

    /tmp/tmp9p4nnmen.d(92): Error: found `{` when expecting `;` following statement

    /tmp/tmp9p4nnmen.d(99): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9p4nnmen.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163124
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_2(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e + 1;\n    }\n\
    \    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list_3(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i,e; l)\n    {\n        ret[i] = e + 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list_4(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i,e; l)\n    {\n \
    \       ret[i] = e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list_5(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_6(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e + 1;\n    }\n\
    \    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list_7(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i,e; l)\nunittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp9d2d9vks.d(89): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9d2d9vks.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163124
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\nunittest\n{\n    alias candidate = incr_list;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([3L, 2L, 1L]) == [4L,\
    \ 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L,\
    \ 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163125
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements decremented by\
    \ 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l)\n    {\n        ret[i] = e - 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i, e; l)\n    {\n\
    \        ret[i] = e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ decremented by 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e -\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements decremented by 1.\n            \n*/\nlong[] decr_list(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i, e; l)\n    {\n\
    \        ret[i] = e - 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\n\
    unittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([]) == []);\n\
    \    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp9p4nnmen.d(91): Error: expression expected, not `unittest`

    /tmp/tmp9p4nnmen.d(92): Error: found `{` when expecting `;` following statement

    /tmp/tmp9p4nnmen.d(99): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9p4nnmen.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163124
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ res = new long[l.length];\n    foreach (i, e; l)\n    {\n        res[i] = e\
    \ + 1;\n    }\n    return res;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_by_ref(ref long[] l) \n{\n    foreach\
    \ (i, e; l)\n    {\n        l[i] = e + 1;\n    }\n    return l;\n}\n/*\nReturn\
    \ list with elements incremented by 1.\n            \n*/\nlong[] incr_list_by_ref_2(ref\
    \ long[] l) \n{\n    foreach (i, e; l)\n    {\n        l[i] = e + 1;\n    }\n\
    \    return l;\n}\n/*\nReturn list with elements incremented by 1.\n         \
    \   \n*/\nlong[] incr_list_by_ref_3(ref long[] l) \n{\n    foreach (i, e; l)\n\
    \    {\n        l[i] = e + 1;\n    }\n    return l;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list_by_ref_4(ref long[] l)\
    \ \n{\n    foreach (i, e; l)\n    {\n        l[i] = e + 1;\n    }\n    return\
    \ l;\n}\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[]\
    \ incr_list_by_ref_5(ref long[] l) \n{\n    foreach (i, e; l)\n    {\n       \
    \ l[i] = e + 1;\n    }\n    return l;\n}\n/*\nReturn list with elements incremented\
    \ by 1.\n            \n*/\nlong[] incr_list_by_ref_6(ref long[] l) \n{\n    foreach\
    \ (i, e; l)\n    {\n        l[i] = e + 1;\n    }\n    return l;\n}\n/*\nReturn\
    \ list with elements incremented by 1.\n            \n*/\nlong[] incr_list_by_\n\
    unittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([]) == []);\n\
    \    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpvlk_sh11.d(93): Error: semicolon expected, not `unittest`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvlk_sh11.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163124
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\nunittest\n{\n    alias candidate = incr_list;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([3L, 2L, 1L]) == [4L,\
    \ 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L,\
    \ 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163125
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list2(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n\
    \    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list3(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list4(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i, e; l)\n    {\n\
    \        ret[i] = e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list5(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list6(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n\
    \    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list7(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l)\n    {\n        ret\nunittest\n{\n    alias candidate =\
    \ incr_list;\n\n    assert(candidate([]) == []);\n    assert(candidate([3L, 2L,\
    \ 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L, 0L,\
    \ 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpd573vbg7.d(91): Error: found `unittest` when expecting `;` following
    statement

    /tmp/tmpd573vbg7.d(99): Error: found `End of File` when expecting `}` following
    compound statement

    /tmp/tmpd573vbg7.d(99): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpd573vbg7.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163124
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret;\n    foreach(i; l)\n    {\n        ret ~= i + 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements decremented by 1.\n            \n*/\nlong[] decr_list(long[]\
    \ l) \n{\n    long[] ret;\n    foreach(i; l)\n    {\n        ret ~= i - 1;\n \
    \   }\n    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n \
    \           \n*/\nlong[] incr_list(long[] l) \n{\n    long[] ret;\n    foreach(i;\
    \ l)\n    {\n        ret ~= i + 1;\n    }\n    return ret;\n}\n/*\nReturn list\
    \ with elements decremented by 1.\n            \n*/\nlong[] decr_list(long[] l)\
    \ \n{\n    long[] ret;\n    foreach(i; l)\n    {\n        ret ~= i - 1;\n    }\n\
    \    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list(long[] l) \n{\n    long[] ret;\n    foreach(i; l)\n\
    \    {\n        ret ~= i + 1;\n    }\n    return ret;\n}\n/*\nReturn list with\
    \ elements decremented by 1.\n            \n*/\nlong[] decr_list(long[] l) \n\
    {\n    long[] ret;\n    foreach(i; l)\n    {\n        ret ~= i - 1;\n    }\n \
    \   return ret;\n}\n/*\nReturn list with elements incremented by 1.\n        \
    \    \n*/\nlong[] incr_list(long[] l) \n{\n    long[] ret;\n    foreach(i; l)\n\
    \    {\n        ret ~= i + 1;\n    }\n    return ret;\n}\n/*\nReturn list with\
    \ elements decremented by 1.\n            \n*/\nlong[] decr_list(long[] l) \n\
    {\n    long[] ret;\n    foreach(i; l)\n    {\n        ret ~= i - 1;\n    }\n \
    \   return ret\nunittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmppif8okx_.d(106): Error: found `unittest` when expecting `;` following
    `return` statement

    /tmp/tmppif8okx_.d(114): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmppif8okx_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163124
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l) \n    {\n        ret[i] = e\
    \ + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list2(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i, e; l) \n    {\n        ret[i] = e + 1;\n   \
    \ }\n    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n   \
    \         \n*/\nlong[] incr_list3(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l) \n    {\n        ret[i] = e + 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list4(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i, e; l) \n    {\n\
    \        ret[i] = e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list5(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l) \n    {\n        ret[i] = e\
    \ + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list6(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i, e; l) \n    {\n        ret[i] = e + 1;\n   \
    \ }\n    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n   \
    \         \n*/\nlong[] incr_list7(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l)\nunittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmprgelfv8z.d(89): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprgelfv8z.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163124
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret;\n    foreach(i; l)\n    {\n        ret ~= i + 1;\n    }\n    return ret;\n\
    }\nunittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([]) ==\
    \ []);\n    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163125
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ res = new long[l.length];\n    foreach (i, e; l)\n    {\n        res[i] = e\
    \ + 1;\n    }\n    return res;\n}\nunittest\n{\n    alias candidate = incr_list;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([3L, 2L, 1L]) == [4L,\
    \ 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L,\
    \ 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163125
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_2(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e + 1;\n    }\n\
    \    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list_3(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i,e; l)\n    {\n        ret[i] = e + 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list_4(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i,e; l)\n    {\n \
    \       ret[i] = e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list_5(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_6(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e + 1;\n    }\n\
    \    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list_7(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i,e; l)\nunittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp9d2d9vks.d(89): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9d2d9vks.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163124
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_2(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n\
    \    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list_3(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list_4(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i, e; l)\n    {\n\
    \        ret[i] = e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list_5(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_6(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n\
    \    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list_7(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l)\nunittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp9yeh7l52.d(89): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9yeh7l52.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163124
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret;\n    foreach(int i; l)\n    {\n        ret ~= i + 1;\n    }\n    return\
    \ ret;\n}\nunittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpypu01nj1.d(10): Error: cannot implicitly convert expression `__r73[__key74]`
    of type `long` to `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpypu01nj1.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163124
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ res = new long[l.length];\n    foreach (i, e; l)\n        res[i] = e + 1;\n\
    \    return res;\n}\n/*\nReturn list with elements decremented by 1.\n       \
    \     \n*/\nlong[] decr_list(long[] l) \n{\n    long[] res = new long[l.length];\n\
    \    foreach (i, e; l)\n        res[i] = e - 1;\n    return res;\n}\n/*\nReturn\
    \ list with elements incremented by 1.\n            \n*/\nlong[] incr_list(long[]\
    \ l) \n{\n    long[] res = new long[l.length];\n    foreach (i, e; l)\n      \
    \  res[i] = e + 1;\n    return res;\n}\n/*\nReturn list with elements decremented\
    \ by 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[] res = new\
    \ long[l.length];\n    foreach (i, e; l)\n        res[i] = e - 1;\n    return\
    \ res;\n}\n/*\nReturn list with elements incremented by 1.\n            \n*/\n\
    long[] incr_list(long[] l) \n{\n    long[] res = new long[l.length];\n    foreach\
    \ (i, e; l)\n        res[i] = e + 1;\n    return res;\n}\n/*\nReturn list with\
    \ elements decremented by 1.\n            \n*/\nlong[] decr_list(long[] l) \n\
    {\n    long[] res = new long[l.length];\n    foreach (i, e; l)\n        res[i]\
    \ = e - 1;\n    return res;\n}\n/*\nReturn list with elements incremented by 1.\n\
    \            \n*/\nlong[] incr_list(long[] l) \n{\n    long[] res = new long[l.length];\n\
    \    foreach (i, e; l)\n        res[i] = e + 1;\n    return res;\n}\n/*\nReturn\
    \ list with elements decremented by 1.\n            \n*/\nlong[] decr_list(long[]\
    \ l) \n\nunittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpsbkrl4ub.d(86): Error: semicolon expected following function declaration

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsbkrl4ub.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163124
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements decremented by\
    \ 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i,e; l)\n    {\n        ret[i] = e - 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i,e; l)\n    {\n \
    \       ret[i] = e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ decremented by 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e -\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i,e; l)\n    {\n        ret[i] = e + 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements decremented by 1.\n            \n*/\nlong[] decr_list(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i,e; l)\n    {\n \
    \       ret[i] = e - 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e +\n\
    unittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([]) == []);\n\
    \    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpeo8dnwjp.d(91): Error: expression expected, not `unittest`

    /tmp/tmpeo8dnwjp.d(92): Error: found `{` when expecting `;` following statement

    /tmp/tmpeo8dnwjp.d(99): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpeo8dnwjp.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163124
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ res = new long[l.length];\n    foreach (i, e; l)\n    {\n        res[i] = e\
    \ + 1;\n    }\n    return res;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list2(long[] l) \n{\n    long[] res = new\
    \ long[l.length];\n    foreach (i, e; l)\n    {\n        res[i] = e + 1;\n   \
    \ }\n    return res;\n}\n/*\nReturn list with elements incremented by 1.\n   \
    \         \n*/\nlong[] incr_list3(long[] l) \n{\n    long[] res = new long[l.length];\n\
    \    foreach (i, e; l)\n    {\n        res[i] = e + 1;\n    }\n    return res;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list4(long[]\
    \ l) \n{\n    long[] res = new long[l.length];\n    foreach (i, e; l)\n    {\n\
    \        res[i] = e + 1;\n    }\n    return res;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list5(long[] l) \n{\n    long[]\
    \ res = new long[l.length];\n    foreach (i, e; l)\n    {\n        res[i] = e\
    \ + 1;\n    }\n    return res;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list6(long[] l) \n{\n    long[] res = new\
    \ long[l.length];\n    foreach (i, e; l)\n    {\n        res[i] = e + 1;\n   \
    \ }\n    return res;\n}\n/*\nReturn list with elements incremented by 1.\n   \
    \         \n*/\nlong[] incr_list7(long[] l) \n{\n    long[] res = new long[l.length];\n\
    \    foreach (i, e; l)\n    {\n        res\nunittest\n{\n    alias candidate =\
    \ incr_list;\n\n    assert(candidate([]) == []);\n    assert(candidate([3L, 2L,\
    \ 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L, 0L,\
    \ 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpptbzkbsn.d(91): Error: found `unittest` when expecting `;` following
    statement

    /tmp/tmpptbzkbsn.d(99): Error: found `End of File` when expecting `}` following
    compound statement

    /tmp/tmpptbzkbsn.d(99): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpptbzkbsn.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163124
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_2(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n\
    \    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list_3(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list_4(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i, e; l)\n    {\n\
    \        ret[i] = e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list_5(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_6(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n\
    \    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list_7(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l)\nunittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp9yeh7l52.d(89): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9yeh7l52.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163124
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ res = new long[l.length];\n    foreach (i, e; l)\n    {\n        res[i] = e\
    \ + 1;\n    }\n    return res;\n}\nunittest\n{\n    alias candidate = incr_list;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([3L, 2L, 1L]) == [4L,\
    \ 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L,\
    \ 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163125
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\nunittest\n{\n    alias candidate = incr_list;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([3L, 2L, 1L]) == [4L,\
    \ 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L,\
    \ 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163125
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ res = new long[l.length];\n    foreach (i, e; l) \n    {\n        res[i] = e\
    \ + 1;\n    }\n    return res;\n}\n/*\nReturn list with elements decremented by\
    \ 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[] res = new long[l.length];\n\
    \    foreach (i, e; l) \n    {\n        res[i] = e - 1;\n    }\n    return res;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list(long[]\
    \ l) \n{\n    long[] res = new long[l.length];\n    foreach (i, e; l) \n    {\n\
    \        res[i] = e + 1;\n    }\n    return res;\n}\n/*\nReturn list with elements\
    \ decremented by 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[]\
    \ res = new long[l.length];\n    foreach (i, e; l) \n    {\n        res[i] = e\
    \ - 1;\n    }\n    return res;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[] res = new long[l.length];\n\
    \    foreach (i, e; l) \n    {\n        res[i] = e + 1;\n    }\n    return res;\n\
    }\n/*\nReturn list with elements decremented by 1.\n            \n*/\nlong[] decr_list(long[]\
    \ l) \n{\n    long[] res = new long[l.length];\n    foreach (i, e; l) \n    {\n\
    \        res[i] = e - 1;\n    }\n    return res;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ res = new long[l.length];\n    foreach (i, e; l) \n    {\n       \nunittest\n\
    {\n    alias candidate = incr_list;\n\n    assert(candidate([]) == []);\n    assert(candidate([3L,\
    \ 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L,\
    \ 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp_w4liggx.d(91): Error: found `unittest` instead of statement

    /tmp/tmp_w4liggx.d(99): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_w4liggx.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163124
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ res = new long[l.length];\n    foreach (i, e; l)\n    {\n        res[i] = e\
    \ + 1;\n    }\n    return res;\n}\n/*\nReturn list with elements decremented by\
    \ 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[] res = new long[l.length];\n\
    \    foreach (i, e; l)\n    {\n        res[i] = e - 1;\n    }\n    return res;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list(long[]\
    \ l) \n{\n    long[] res = new long[l.length];\n    foreach (i, e; l)\n    {\n\
    \        res[i] = e + 1;\n    }\n    return res;\n}\n/*\nReturn list with elements\
    \ decremented by 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[]\
    \ res = new long[l.length];\n    foreach (i, e; l)\n    {\n        res[i] = e\
    \ - 1;\n    }\n    return res;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[] res = new long[l.length];\n\
    \    foreach (i, e; l)\n    {\n        res[i] = e + 1;\n    }\n    return res;\n\
    }\n/*\nReturn list with elements decremented by 1.\n            \n*/\nlong[] decr_list(long[]\
    \ l) \n{\n    long[] res = new long[l.length];\n    foreach (i, e; l)\n    {\n\
    \        res[i] = e - 1;\n    }\n    return res;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ res = new long[l.length];\n    foreach (i, e; l)\n    {\n        res[i] = e\
    \ +\nunittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmppk_w3_8n.d(91): Error: expression expected, not `unittest`

    /tmp/tmppk_w3_8n.d(92): Error: found `{` when expecting `;` following statement

    /tmp/tmppk_w3_8n.d(99): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmppk_w3_8n.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163124
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\nunittest\n{\n    alias candidate = incr_list;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([3L, 2L, 1L]) == [4L,\
    \ 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L,\
    \ 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163125
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret;\n    foreach(e; l)\n        ret ~= e + 1;\n    return ret;\n}\nunittest\n\
    {\n    alias candidate = incr_list;\n\n    assert(candidate([]) == []);\n    assert(candidate([3L,\
    \ 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L,\
    \ 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163125
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret;\n    foreach(i; l)\n        ret ~= i + 1;\n    return ret;\n}\n/*\nReturn\
    \ list with elements decremented by 1.\n            \n*/\nlong[] decr_list(long[]\
    \ l) \n{\n    long[] ret;\n    foreach(i; l)\n        ret ~= i - 1;\n    return\
    \ ret;\n}\n/*\nReturn list with elements incremented by 1.\n            \n*/\n\
    long[] incr_list(long[] l) \n{\n    long[] ret;\n    foreach(i; l)\n        ret\
    \ ~= i + 1;\n    return ret;\n}\n/*\nReturn list with elements decremented by\
    \ 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[] ret;\n    foreach(i;\
    \ l)\n        ret ~= i - 1;\n    return ret;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret;\n    foreach(i; l)\n        ret ~= i + 1;\n    return ret;\n}\n/*\nReturn\
    \ list with elements decremented by 1.\n            \n*/\nlong[] decr_list(long[]\
    \ l) \n{\n    long[] ret;\n    foreach(i; l)\n        ret ~= i - 1;\n    return\
    \ ret;\n}\n/*\nReturn list with elements incremented by 1.\n            \n*/\n\
    long[] incr_list(long[] l) \n{\n    long[] ret;\n    foreach(i; l)\n        ret\
    \ ~= i + 1;\n    return ret;\n}\n/*\nReturn list with elements decremented by\
    \ 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[] ret;\n    foreach(i;\
    \ l)\n        ret ~= i - 1;\n    return ret;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret;\n    foreach(i; l\nunittest\n{\n    alias candidate = incr_list;\n\n  \
    \  assert(candidate([]) == []);\n    assert(candidate([3L, 2L, 1L]) == [4L, 3L,\
    \ 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L,\
    \ 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmplj3rr6un.d(99): Error: found `unittest` when expecting `)`

    /tmp/tmplj3rr6un.d(107): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplj3rr6un.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163124
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements decremented by\
    \ 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l)\n    {\n        ret[i] = e - 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i, e; l)\n    {\n\
    \        ret[i] = e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ decremented by 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e -\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements decremented by 1.\n            \n*/\nlong[] decr_list(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i, e; l)\n    {\n\
    \        ret[i] = e - 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\n\
    unittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([]) == []);\n\
    \    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp9p4nnmen.d(91): Error: expression expected, not `unittest`

    /tmp/tmp9p4nnmen.d(92): Error: found `{` when expecting `;` following statement

    /tmp/tmp9p4nnmen.d(99): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9p4nnmen.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163124
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ result = new long[l.length];\n    foreach (i, e; l)\n    {\n        result[i]\
    \ = e + 1;\n    }\n    return result;\n}\n/*\nReturn list with elements incremented\
    \ by 1.\n            \n*/\nlong[] incr_list_2(long[] l) \n{\n    long[] result\
    \ = new long[l.length];\n    foreach (i, e; l)\n    {\n        result[i] = e +\
    \ 1;\n    }\n    return result;\n}\n/*\nReturn list with elements incremented\
    \ by 1.\n            \n*/\nlong[] incr_list_3(long[] l) \n{\n    long[] result\
    \ = new long[l.length];\n    foreach (i, e; l)\n    {\n        result[i] = e +\
    \ 1;\n    }\n    return result;\n}\n/*\nReturn list with elements incremented\
    \ by 1.\n            \n*/\nlong[] incr_list_4(long[] l) \n{\n    long[] result\
    \ = new long[l.length];\n    foreach (i, e; l)\n    {\n        result[i] = e +\
    \ 1;\n    }\n    return result;\n}\n/*\nReturn list with elements incremented\
    \ by 1.\n            \n*/\nlong[] incr_list_5(long[] l) \n{\n    long[] result\
    \ = new long[l.length];\n    foreach (i, e; l)\n    {\n        result[i] = e +\
    \ 1;\n    }\n    return result;\n}\n/*\nReturn list with elements incremented\
    \ by 1.\n            \n*/\nlong[] incr_list_6(long[] l) \n{\n    long[] result\
    \ = new long[l.length];\n    foreach (i, e; l)\n    {\n        result[i] = e +\
    \ 1;\n    }\n    return result;\n}\n/*\nReturn list with elements incremented\
    \ by 1.\n            \n*/\nlong[] incr_list_7(long[] l) \n{\n    long[] result\
    \ = new long[l.length];\n    foreach (i, e; l)\nunittest\n{\n    alias candidate\
    \ = incr_list;\n\n    assert(candidate([]) == []);\n    assert(candidate([3L,\
    \ 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L,\
    \ 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp2ynykg9x.d(89): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2ynykg9x.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163124
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements decremented by\
    \ 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i,e; l)\n    {\n        ret[i] = e - 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i,e; l)\n    {\n \
    \       ret[i] = e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ decremented by 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e -\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i,e; l)\n    {\n        ret[i] = e + 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements decremented by 1.\n            \n*/\nlong[] decr_list(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i,e; l)\n    {\n \
    \       ret[i] = e - 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e +\n\
    unittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([]) == []);\n\
    \    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpeo8dnwjp.d(91): Error: expression expected, not `unittest`

    /tmp/tmpeo8dnwjp.d(92): Error: found `{` when expecting `;` following statement

    /tmp/tmpeo8dnwjp.d(99): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpeo8dnwjp.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163124
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ result;\n    foreach (elem; l) \n    {\n        result ~= elem + 1;\n    }\n\
    \    return result;\n}\n/*\nReturn list with elements incremented by 1.\n    \
    \        \n*/\nlong[] incr_list2(long[] l) \n{\n    long[] result;\n    foreach\
    \ (elem; l) \n    {\n        result ~= elem + 1;\n    }\n    return result;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list3(long[]\
    \ l) \n{\n    long[] result;\n    foreach (elem; l) \n    {\n        result ~=\
    \ elem + 1;\n    }\n    return result;\n}\n/*\nReturn list with elements incremented\
    \ by 1.\n            \n*/\nlong[] incr_list4(long[] l) \n{\n    long[] result;\n\
    \    foreach (elem; l) \n    {\n        result ~= elem + 1;\n    }\n    return\
    \ result;\n}\n/*\nReturn list with elements incremented by 1.\n            \n\
    */\nlong[] incr_list5(long[] l) \n{\n    long[] result;\n    foreach (elem; l)\
    \ \n    {\n        result ~= elem + 1;\n    }\n    return result;\n}\n/*\nReturn\
    \ list with elements incremented by 1.\n            \n*/\nlong[] incr_list6(long[]\
    \ l) \n{\n    long[] result;\n    foreach (elem; l) \n    {\n        result ~=\
    \ elem + 1;\n    }\n    return result;\n}\n/*\nReturn list with elements incremented\
    \ by 1.\n            \n*/\nlong[] incr_list7(long[] l) \n{\n    long[] result;\n\
    \    foreach (elem; l) \n    {\n        result ~= elem + 1;\n    }\n    return\
    \ result;\n}\n/*\nReturn list with elements incremented by 1.\n            \n\
    */\nlong[] incr_list8(long[] l) \n{\n    long[] result;\nunittest\n{\n    alias\
    \ candidate = incr_list;\n\n    assert(candidate([]) == []);\n    assert(candidate([3L,\
    \ 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L,\
    \ 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpci5ey8j_.d(101): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpci5ey8j_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163124
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret;\n    ret = new long[l.length];\n    foreach (i,e; l) \n    {\n        ret[i]\
    \ = e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements decremented\
    \ by 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[] ret;\n \
    \   ret = new long[l.length];\n    foreach (i,e; l) \n    {\n        ret[i] =\
    \ e - 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented\
    \ by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[] ret;\n \
    \   ret = new long[l.length];\n    foreach (i,e; l) \n    {\n        ret[i] =\
    \ e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements decremented\
    \ by 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[] ret;\n \
    \   ret = new long[l.length];\n    foreach (i,e; l) \n    {\n        ret[i] =\
    \ e - 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented\
    \ by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[] ret;\n \
    \   ret = new long[l.length];\n    foreach (i,e; l) \n    {\n        ret[i] =\
    \ e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements decremented\
    \ by 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[] ret;\n \
    \   ret = new long[l.length];\n    foreach (i,e; l) \n    {\n        ret[i] =\
    \ e - 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented\
    \ by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[] ret;\nunittest\n\
    {\n    alias candidate = incr_list;\n\n    assert(candidate([]) == []);\n    assert(candidate([3L,\
    \ 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L,\
    \ 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpo0wmr3cm.d(94): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpo0wmr3cm.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163124
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ r = new long[l.length];\n    foreach (i, e; l)\n    {\n        r[i] = e + 1;\n\
    \    }\n    return r;\n}\n/*\nReturn list with elements incremented by 1.\n  \
    \          \n*/\nlong[] incr_list_2(long[] l) \n{\n    long[] r = new long[l.length];\n\
    \    foreach (i, e; l)\n    {\n        r[i] = e + 1;\n    }\n    return r;\n}\n\
    /*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list_3(long[]\
    \ l) \n{\n    long[] r = new long[l.length];\n    foreach (i, e; l)\n    {\n \
    \       r[i] = e + 1;\n    }\n    return r;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list_4(long[] l) \n{\n    long[]\
    \ r = new long[l.length];\n    foreach (i, e; l)\n    {\n        r[i] = e + 1;\n\
    \    }\n    return r;\n}\n/*\nReturn list with elements incremented by 1.\n  \
    \          \n*/\nlong[] incr_list_5(long[] l) \n{\n    long[] r = new long[l.length];\n\
    \    foreach (i, e; l)\n    {\n        r[i] = e + 1;\n    }\n    return r;\n}\n\
    /*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list_6(long[]\
    \ l) \n{\n    long[] r = new long[l.length];\n    foreach (i, e; l)\n    {\n \
    \       r[i] = e + 1;\n    }\n    return r;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list_7(long[] l) \n{\n    long[]\
    \ r = new long[l.length];\n    foreach (i, e; l)\nunittest\n{\n    alias candidate\
    \ = incr_list;\n\n    assert(candidate([]) == []);\n    assert(candidate([3L,\
    \ 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L,\
    \ 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpoumjqbup.d(89): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpoumjqbup.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163124
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ res = new long[l.length];\n    foreach (i, e; l)\n    {\n        res[i] = e\
    \ + 1;\n    }\n    return res;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_range(long[] l) \n{\n    long[] res =\
    \ new long[l.length];\n    foreach (e; l)\n    {\n        res ~= e + 1;\n    }\n\
    \    return res;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list_foreach(long[] l) \n{\n    long[] res = new long[l.length];\n\
    \    foreach (e; l)\n    {\n        res[e] = e + 1;\n    }\n    return res;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list_foreach_range(long[]\
    \ l) \n{\n    long[] res = new long[l.length];\n    foreach (e; l)\n    {\n  \
    \      res ~= e + 1;\n    }\n    return res;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list_foreach_index(long[] l)\
    \ \n{\n    long[] res = new long[l.length];\n    foreach (i, e; l)\n    {\n  \
    \      res[i] = e + 1;\n    }\n    return res;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list_foreach_index_range(long[]\
    \ l) \n{\n    long[] res = new long[l.length];\n    foreach (i, e; l)\n    {\n\
    \        res ~= e + 1;\n    }\n    return res;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list_foreach_index_range_reverse(long[]\
    \ l) \n{\n    long[] res = new long[l.length];\n    foreach\nunittest\n{\n   \
    \ alias candidate = incr_list;\n\n    assert(candidate([]) == []);\n    assert(candidate([3L,\
    \ 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L,\
    \ 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpohxb54im.d(89): Error: found `unittest` when expecting `(`

    /tmp/tmpohxb54im.d(90): Error: basic type expected, not `{`

    /tmp/tmpohxb54im.d(90): Error: no identifier for declarator `_error_`

    /tmp/tmpohxb54im.d(90): Error: found `{` when expecting `;`

    /tmp/tmpohxb54im.d(91): Error: expression expected, not `alias`

    /tmp/tmpohxb54im.d(91): Error: found `candidate` when expecting `)`

    /tmp/tmpohxb54im.d(91): Error: found `=` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpohxb54im.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163124
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i,e; l)\n        ret[i] = e + 1;\n  \
    \  return ret;\n}\n/*\nReturn list with elements incremented by 1.\n         \
    \   \n*/\nlong[] incr_list_2(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i,e; l)\n        ret[i] = e + 1;\n    return ret;\n}\n/*\nReturn\
    \ list with elements incremented by 1.\n            \n*/\nlong[] incr_list_3(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i,e; l)\n        ret[i]\
    \ = e + 1;\n    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n\
    \            \n*/\nlong[] incr_list_4(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i,e; l)\n        ret[i] = e + 1;\n    return ret;\n}\n/*\nReturn\
    \ list with elements incremented by 1.\n            \n*/\nlong[] incr_list_5(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i,e; l)\n        ret[i]\
    \ = e + 1;\n    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n\
    \            \n*/\nlong[] incr_list_6(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i,e; l)\n        ret[i] = e + 1;\n    return ret;\n}\n/*\nReturn\
    \ list with elements incremented by 1.\n            \n*/\nlong[] incr_list_7(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i,e; l)\n        ret[i]\
    \ = e + 1;\n    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n\
    \            \n*/\nlong\nunittest\n{\n    alias candidate = incr_list;\n\n   \
    \ assert(candidate([]) == []);\n    assert(candidate([3L, 2L, 1L]) == [4L, 3L,\
    \ 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L,\
    \ 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpssahfs71.d(85): Error: no identifier for declarator `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpssahfs71.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163124
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ r = new long[l.length];\n    foreach (i, e; l)\n    {\n        r[i] = e + 1;\n\
    \    }\n    return r;\n}\n/*\nReturn list with elements incremented by 1.\n  \
    \          \n*/\nlong[] incr_list_2(long[] l) \n{\n    long[] r = new long[l.length];\n\
    \    foreach (i, e; l)\n    {\n        r[i] = e + 1;\n    }\n    return r;\n}\n\
    /*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list_3(long[]\
    \ l) \n{\n    long[] r = new long[l.length];\n    foreach (i, e; l)\n    {\n \
    \       r[i] = e + 1;\n    }\n    return r;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list_4(long[] l) \n{\n    long[]\
    \ r = new long[l.length];\n    foreach (i, e; l)\n    {\n        r[i] = e + 1;\n\
    \    }\n    return r;\n}\n/*\nReturn list with elements incremented by 1.\n  \
    \          \n*/\nlong[] incr_list_5(long[] l) \n{\n    long[] r = new long[l.length];\n\
    \    foreach (i, e; l)\n    {\n        r[i] = e + 1;\n    }\n    return r;\n}\n\
    /*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list_6(long[]\
    \ l) \n{\n    long[] r = new long[l.length];\n    foreach (i, e; l)\n    {\n \
    \       r[i] = e + 1;\n    }\n    return r;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list_7(long[] l) \n{\n    long[]\
    \ r = new long[l.length];\n    foreach (i, e; l)\nunittest\n{\n    alias candidate\
    \ = incr_list;\n\n    assert(candidate([]) == []);\n    assert(candidate([3L,\
    \ 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L,\
    \ 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpoumjqbup.d(89): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpoumjqbup.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163124
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_2(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n\
    \    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list_3(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list_4(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i, e; l)\n    {\n\
    \        ret[i] = e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list_5(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_6(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n\
    \    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list_7(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l)\nunittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp9yeh7l52.d(89): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9yeh7l52.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163124
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret;\n    ret.length = l.length;\n    foreach(i, e; l)\n    {\n        ret[i]\
    \ = e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented\
    \ by 1.\n            \n*/\nlong[] incr_list_2(long[] l) \n{\n    long[] ret;\n\
    \    ret.length = l.length;\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_3(long[] l) \n{\n    long[] ret;\n  \
    \  ret.length = l.length;\n    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n\
    \    }\n    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n\
    \            \n*/\nlong[] incr_list_4(long[] l) \n{\n    long[] ret;\n    ret.length\
    \ = l.length;\n    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n \
    \   return ret;\n}\n/*\nReturn list with elements incremented by 1.\n        \
    \    \n*/\nlong[] incr_list_5(long[] l) \n{\n    long[] ret;\n    ret.length =\
    \ l.length;\n    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n   \
    \ return ret;\n}\n/*\nReturn list with elements incremented by 1.\n          \
    \  \n*/\nlong[] incr_list_6(long[] l) \n{\n    long[] ret;\n    ret.length = l.length;\n\
    \    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list_7(long[]\
    \ l) \n{\n    long[] ret;\nunittest\n{\n    alias candidate = incr_list;\n\n \
    \   assert(candidate([]) == []);\n    assert(candidate([3L, 2L, 1L]) == [4L, 3L,\
    \ 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L,\
    \ 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmppluasfc7.d(94): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmppluasfc7.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163124
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\nunittest\n{\n    alias candidate = incr_list;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([3L, 2L, 1L]) == [4L,\
    \ 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L,\
    \ 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163125
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i,e; l)\n        ret[i] = e + 1;\n  \
    \  return ret;\n}\n/*\nReturn list with elements decremented by 1.\n         \
    \   \n*/\nlong[] decr_list(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i,e; l)\n        ret[i] = e - 1;\n    return ret;\n}\n/*\nReturn\
    \ list with elements incremented by 1.\n            \n*/\nlong[] incr_list(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i,e; l)\n        ret[i]\
    \ = e + 1;\n    return ret;\n}\n/*\nReturn list with elements decremented by 1.\n\
    \            \n*/\nlong[] decr_list(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i,e; l)\n        ret[i] = e - 1;\n    return ret;\n}\n/*\nReturn\
    \ list with elements incremented by 1.\n            \n*/\nlong[] incr_list(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i,e; l)\n        ret[i]\
    \ = e + 1;\n    return ret;\n}\n/*\nReturn list with elements decremented by 1.\n\
    \            \n*/\nlong[] decr_list(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i,e; l)\n        ret[i] = e - 1;\n    return ret;\n}\n/*\nReturn\
    \ list with elements incremented by 1.\n            \n*/\nlong[] incr_list(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i,e; l)\n        ret[i]\
    \ = e + 1;\n    return ret;\n}\n/*\nReturn list with elements decremented by 1.\n\
    \            \n*/\nlong[] decr_list(long[] l) \n\nunittest\n{\n    alias candidate\
    \ = incr_list;\n\n    assert(candidate([]) == []);\n    assert(candidate([3L,\
    \ 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L,\
    \ 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpwxwg95vo.d(86): Error: semicolon expected following function declaration

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwxwg95vo.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163124
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n        ret[i] = e + 1;\n \
    \   return ret;\n}\nunittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163125
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ res;\n    foreach(e; l)\n    {\n        res ~= e + 1;\n    }\n    return res;\n\
    }\n/*\nReturn list with elements decremented by 1.\n            \n*/\nlong[] decr_list(long[]\
    \ l) \n{\n    long[] res;\n    foreach(e; l)\n    {\n        res ~= e - 1;\n \
    \   }\n    return res;\n}\n/*\nReturn list with elements incremented by 1.\n \
    \           \n*/\nlong[] incr_list(long[] l) \n{\n    long[] res;\n    foreach(e;\
    \ l)\n    {\n        res ~= e + 1;\n    }\n    return res;\n}\n/*\nReturn list\
    \ with elements decremented by 1.\n            \n*/\nlong[] decr_list(long[] l)\
    \ \n{\n    long[] res;\n    foreach(e; l)\n    {\n        res ~= e - 1;\n    }\n\
    \    return res;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list(long[] l) \n{\n    long[] res;\n    foreach(e; l)\n\
    \    {\n        res ~= e + 1;\n    }\n    return res;\n}\n/*\nReturn list with\
    \ elements decremented by 1.\n            \n*/\nlong[] decr_list(long[] l) \n\
    {\n    long[] res;\n    foreach(e; l)\n    {\n        res ~= e - 1;\n    }\n \
    \   return res;\n}\n/*\nReturn list with elements incremented by 1.\n        \
    \    \n*/\nlong[] incr_list(long[] l) \n{\n    long[] res;\n    foreach(e; l)\n\
    \    {\n        res ~= e + 1;\n    }\n    return res;\n}\n/*\nReturn list with\
    \ elements decremented by 1.\n            \n*/\nlong[] decr_list(long[] l) \n\
    {\n    long[] res;\n    foreach(e; l)\n    {\n        res ~= e - 1;\n    }\n \
    \   return res\nunittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpfd_s0w4_.d(106): Error: found `unittest` when expecting `;` following
    `return` statement

    /tmp/tmpfd_s0w4_.d(114): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfd_s0w4_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163124
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret;\n    foreach(i; l)\n    {\n        ret ~= i + 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements decremented by 1.\n            \n*/\nlong[] decr_list(long[]\
    \ l) \n{\n    long[] ret;\n    foreach(i; l)\n    {\n        ret ~= i - 1;\n \
    \   }\n    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n \
    \           \n*/\nlong[] incr_list(long[] l) \n{\n    long[] ret;\n    foreach(i;\
    \ l)\n    {\n        ret ~= i + 1;\n    }\n    return ret;\n}\n/*\nReturn list\
    \ with elements decremented by 1.\n            \n*/\nlong[] decr_list(long[] l)\
    \ \n{\n    long[] ret;\n    foreach(i; l)\n    {\n        ret ~= i - 1;\n    }\n\
    \    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list(long[] l) \n{\n    long[] ret;\n    foreach(i; l)\n\
    \    {\n        ret ~= i + 1;\n    }\n    return ret;\n}\n/*\nReturn list with\
    \ elements decremented by 1.\n            \n*/\nlong[] decr_list(long[] l) \n\
    {\n    long[] ret;\n    foreach(i; l)\n    {\n        ret ~= i - 1;\n    }\n \
    \   return ret;\n}\n/*\nReturn list with elements incremented by 1.\n        \
    \    \n*/\nlong[] incr_list(long[] l) \n{\n    long[] ret;\n    foreach(i; l)\n\
    \    {\n        ret ~= i + 1;\n    }\n    return ret;\n}\n/*\nReturn list with\
    \ elements decremented by 1.\n            \n*/\nlong[] decr_list(long[] l) \n\
    {\n    long[] ret;\n    foreach(i; l)\n    {\n        ret ~= i - 1;\n    }\n \
    \   return ret\nunittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmppif8okx_.d(106): Error: found `unittest` when expecting `;` following
    `return` statement

    /tmp/tmppif8okx_.d(114): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmppif8okx_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163124
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\nunittest\n{\n    alias candidate = incr_list;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([3L, 2L, 1L]) == [4L,\
    \ 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L,\
    \ 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163125
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret;\n    foreach(i; l)\n    {\n        ret ~= i + 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements decremented by 1.\n            \n*/\nlong[] decr_list(long[]\
    \ l) \n{\n    long[] ret;\n    foreach(i; l)\n    {\n        ret ~= i - 1;\n \
    \   }\n    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n \
    \           \n*/\nlong[] incr_list(long[] l) \n{\n    long[] ret;\n    foreach(i;\
    \ l)\n    {\n        ret ~= i + 1;\n    }\n    return ret;\n}\n/*\nReturn list\
    \ with elements decremented by 1.\n            \n*/\nlong[] decr_list(long[] l)\
    \ \n{\n    long[] ret;\n    foreach(i; l)\n    {\n        ret ~= i - 1;\n    }\n\
    \    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list(long[] l) \n{\n    long[] ret;\n    foreach(i; l)\n\
    \    {\n        ret ~= i + 1;\n    }\n    return ret;\n}\n/*\nReturn list with\
    \ elements decremented by 1.\n            \n*/\nlong[] decr_list(long[] l) \n\
    {\n    long[] ret;\n    foreach(i; l)\n    {\n        ret ~= i - 1;\n    }\n \
    \   return ret;\n}\n/*\nReturn list with elements incremented by 1.\n        \
    \    \n*/\nlong[] incr_list(long[] l) \n{\n    long[] ret;\n    foreach(i; l)\n\
    \    {\n        ret ~= i + 1;\n    }\n    return ret;\n}\n/*\nReturn list with\
    \ elements decremented by 1.\n            \n*/\nlong[] decr_list(long[] l) \n\
    {\n    long[] ret;\n    foreach(i; l)\n    {\n        ret ~= i - 1;\n    }\n \
    \   return ret\nunittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmppif8okx_.d(106): Error: found `unittest` when expecting `;` following
    `return` statement

    /tmp/tmppif8okx_.d(114): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmppif8okx_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163124
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\nunittest\n{\n    alias candidate = incr_list;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([3L, 2L, 1L]) == [4L,\
    \ 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L,\
    \ 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163125
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ result = new long[l.length];\n    foreach (i, e; l)\n    {\n        result[i]\
    \ = e + 1;\n    }\n    return result;\n}\n/*\nReturn list with elements incremented\
    \ by 1.\n            \n*/\nlong[] incr_list_2(long[] l) \n{\n    long[] result\
    \ = new long[l.length];\n    foreach (i, e; l)\n    {\n        result[i] = e +\
    \ 1;\n    }\n    return result;\n}\n/*\nReturn list with elements incremented\
    \ by 1.\n            \n*/\nlong[] incr_list_3(long[] l) \n{\n    long[] result\
    \ = new long[l.length];\n    foreach (i, e; l)\n    {\n        result[i] = e +\
    \ 1;\n    }\n    return result;\n}\n/*\nReturn list with elements incremented\
    \ by 1.\n            \n*/\nlong[] incr_list_4(long[] l) \n{\n    long[] result\
    \ = new long[l.length];\n    foreach (i, e; l)\n    {\n        result[i] = e +\
    \ 1;\n    }\n    return result;\n}\n/*\nReturn list with elements incremented\
    \ by 1.\n            \n*/\nlong[] incr_list_5(long[] l) \n{\n    long[] result\
    \ = new long[l.length];\n    foreach (i, e; l)\n    {\n        result[i] = e +\
    \ 1;\n    }\n    return result;\n}\n/*\nReturn list with elements incremented\
    \ by 1.\n            \n*/\nlong[] incr_list_6(long[] l) \n{\n    long[] result\
    \ = new long[l.length];\n    foreach (i, e; l)\n    {\n        result[i] = e +\
    \ 1;\n    }\n    return result;\n}\n/*\nReturn list with elements incremented\
    \ by 1.\n            \n*/\nlong[] incr_list_7(long[] l) \n{\n    long[] result\
    \ = new long[l.length];\n    foreach (i, e; l)\nunittest\n{\n    alias candidate\
    \ = incr_list;\n\n    assert(candidate([]) == []);\n    assert(candidate([3L,\
    \ 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L,\
    \ 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp2ynykg9x.d(89): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2ynykg9x.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163124
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ res;\n    foreach(i; l)\n    {\n        res ~= i + 1;\n    }\n    return res;\n\
    }\n/*\nReturn list with elements decremented by 1.\n            \n*/\nlong[] decr_list(long[]\
    \ l) \n{\n    long[] res;\n    foreach(i; l)\n    {\n        res ~= i - 1;\n \
    \   }\n    return res;\n}\n/*\nReturn list with elements incremented by 1.\n \
    \           \n*/\nlong[] incr_list(long[] l) \n{\n    long[] res;\n    foreach(i;\
    \ l)\n    {\n        res ~= i + 1;\n    }\n    return res;\n}\n/*\nReturn list\
    \ with elements decremented by 1.\n            \n*/\nlong[] decr_list(long[] l)\
    \ \n{\n    long[] res;\n    foreach(i; l)\n    {\n        res ~= i - 1;\n    }\n\
    \    return res;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list(long[] l) \n{\n    long[] res;\n    foreach(i; l)\n\
    \    {\n        res ~= i + 1;\n    }\n    return res;\n}\n/*\nReturn list with\
    \ elements decremented by 1.\n            \n*/\nlong[] decr_list(long[] l) \n\
    {\n    long[] res;\n    foreach(i; l)\n    {\n        res ~= i - 1;\n    }\n \
    \   return res;\n}\n/*\nReturn list with elements incremented by 1.\n        \
    \    \n*/\nlong[] incr_list(long[] l) \n{\n    long[] res;\n    foreach(i; l)\n\
    \    {\n        res ~= i + 1;\n    }\n    return res;\n}\n/*\nReturn list with\
    \ elements decremented by 1.\n            \n*/\nlong[] decr_list(long[] l) \n\
    {\n    long[] res;\n    foreach(i; l)\n    {\n        res ~= i - 1;\n    }\n \
    \   return res\nunittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpem60umr_.d(106): Error: found `unittest` when expecting `;` following
    `return` statement

    /tmp/tmpem60umr_.d(114): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpem60umr_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163124
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ res = new long[l.length];\n    foreach (i, e; l)\n    {\n        res[i] = e\
    \ + 1;\n    }\n    return res;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_2(long[] l) \n{\n    long[] res = new\
    \ long[l.length];\n    foreach (i, e; l)\n    {\n        res[i] = e + 1;\n   \
    \ }\n    return res;\n}\n/*\nReturn list with elements incremented by 1.\n   \
    \         \n*/\nlong[] incr_list_3(long[] l) \n{\n    long[] res = new long[l.length];\n\
    \    foreach (i, e; l)\n    {\n        res[i] = e + 1;\n    }\n    return res;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list_4(long[]\
    \ l) \n{\n    long[] res = new long[l.length];\n    foreach (i, e; l)\n    {\n\
    \        res[i] = e + 1;\n    }\n    return res;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list_5(long[] l) \n{\n    long[]\
    \ res = new long[l.length];\n    foreach (i, e; l)\n    {\n        res[i] = e\
    \ + 1;\n    }\n    return res;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_6(long[] l) \n{\n    long[] res = new\
    \ long[l.length];\n    foreach (i, e; l)\n    {\n        res[i] = e + 1;\n   \
    \ }\n    return res;\n}\n/*\nReturn list with elements incremented by 1.\n   \
    \         \n*/\nlong[] incr_list_7(long[] l) \n{\n    long[] res = new long[l.length];\n\
    \    foreach (i, e; l)\nunittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpo9qdjxrx.d(89): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpo9qdjxrx.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163124
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret;\n    foreach(e; l)\n    {\n        ret ~= e + 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements decremented by 1.\n            \n*/\nlong[] decr_list(long[]\
    \ l) \n{\n    long[] ret;\n    foreach(e; l)\n    {\n        ret ~= e - 1;\n \
    \   }\n    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n \
    \           \n*/\nlong[] incr_list(long[] l) \n{\n    long[] ret;\n    foreach(e;\
    \ l)\n    {\n        ret ~= e + 1;\n    }\n    return ret;\n}\n/*\nReturn list\
    \ with elements decremented by 1.\n            \n*/\nlong[] decr_list(long[] l)\
    \ \n{\n    long[] ret;\n    foreach(e; l)\n    {\n        ret ~= e - 1;\n    }\n\
    \    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list(long[] l) \n{\n    long[] ret;\n    foreach(e; l)\n\
    \    {\n        ret ~= e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with\
    \ elements decremented by 1.\n            \n*/\nlong[] decr_list(long[] l) \n\
    {\n    long[] ret;\n    foreach(e; l)\n    {\n        ret ~= e - 1;\n    }\n \
    \   return ret;\n}\n/*\nReturn list with elements incremented by 1.\n        \
    \    \n*/\nlong[] incr_list(long[] l) \n{\n    long[] ret;\n    foreach(e; l)\n\
    \    {\n        ret ~= e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with\
    \ elements decremented by 1.\n            \n*/\nlong[] decr_list(long[] l) \n\
    {\n    long[] ret;\n    foreach(e; l)\n    {\n        ret ~= e - 1;\n    }\n \
    \   return ret\nunittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpix6th3jr.d(106): Error: found `unittest` when expecting `;` following
    `return` statement

    /tmp/tmpix6th3jr.d(114): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpix6th3jr.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163124
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements decremented by\
    \ 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l)\n    {\n        ret[i] = e - 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i, e; l)\n    {\n\
    \        ret[i] = e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ decremented by 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e -\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements decremented by 1.\n            \n*/\nlong[] decr_list(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i, e; l)\n    {\n\
    \        ret[i] = e - 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\n\
    unittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([]) == []);\n\
    \    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp9p4nnmen.d(91): Error: expression expected, not `unittest`

    /tmp/tmp9p4nnmen.d(92): Error: found `{` when expecting `;` following statement

    /tmp/tmp9p4nnmen.d(99): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9p4nnmen.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163124
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ res = new long[l.length];\n    foreach (i, e; l) \n    {\n        res[i] = e\
    \ + 1;\n    }\n    return res;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_2(long[] l) \n{\n    long[] res = new\
    \ long[l.length];\n    foreach (i, e; l) \n    {\n        res[i] = e + 1;\n  \
    \  }\n    return res;\n}\n/*\nReturn list with elements incremented by 1.\n  \
    \          \n*/\nlong[] incr_list_3(long[] l) \n{\n    long[] res = new long[l.length];\n\
    \    foreach (i, e; l) \n    {\n        res[i] = e + 1;\n    }\n    return res;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list_4(long[]\
    \ l) \n{\n    long[] res = new long[l.length];\n    foreach (i, e; l) \n    {\n\
    \        res[i] = e + 1;\n    }\n    return res;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list_5(long[] l) \n{\n    long[]\
    \ res = new long[l.length];\n    foreach (i, e; l) \n    {\n        res[i] = e\
    \ + 1;\n    }\n    return res;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_6(long[] l) \n{\n    long[] res = new\
    \ long[l.length];\n    foreach (i, e; l) \n    {\n        res[i] = e + 1;\n  \
    \  }\n    return res;\n}\n/*\nReturn list with elements incremented by 1.\n  \
    \          \n*/\nlong[] incr_list_7(long[] l) \n{\n    long[] res = new long[l.length];\n\
    \    foreach (\nunittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpyqtp_8b7.d(89): Error: basic type expected, not `unittest`

    /tmp/tmpyqtp_8b7.d(89): Error: no identifier for declarator `_error_`

    /tmp/tmpyqtp_8b7.d(89): Error: found `unittest` when expecting `;`

    /tmp/tmpyqtp_8b7.d(97): Error: found `void` when expecting `)`

    /tmp/tmpyqtp_8b7.d(97): Error: found `{` when expecting `;` following statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyqtp_8b7.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163124
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_2(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n\
    \    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list_3(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list_4(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i, e; l)\n    {\n\
    \        ret[i] = e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list_5(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_6(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n\
    \    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list_7(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l)\nunittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp9yeh7l52.d(89): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9yeh7l52.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163124
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\nunittest\n{\n    alias candidate = incr_list;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([3L, 2L, 1L]) == [4L,\
    \ 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L,\
    \ 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163125
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ r;\n    foreach(i; l)\n    {\n        r ~= i + 1;\n    }\n    return r;\n}\n\
    unittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([]) == []);\n\
    \    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163125
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_by_ref(ref long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_by_ref_2(ref long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_by_ref_3(ref long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_by_ref_4(ref long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_by_ref_5(ref long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_by_ref_6(ref long[] l\nunittest\n{\n\
    \    alias candidate = incr_list;\n\n    assert(candidate([]) == []);\n    assert(candidate([3L,\
    \ 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L,\
    \ 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp7w9a3_rm.d(86): Error: found `unittest` when expecting `)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7w9a3_rm.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163124
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ result = new long[l.length];\n    foreach (i, e; l)\n    {\n        result[i]\
    \ = e + 1;\n    }\n    return result;\n}\n/*\nReturn list with elements decremented\
    \ by 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[] result =\
    \ new long[l.length];\n    foreach (i, e; l)\n    {\n        result[i] = e - 1;\n\
    \    }\n    return result;\n}\n/*\nReturn list with elements incremented by 1.\n\
    \            \n*/\nlong[] incr_list(long[] l) \n{\n    long[] result = new long[l.length];\n\
    \    foreach (i, e; l)\n    {\n        result[i] = e + 1;\n    }\n    return result;\n\
    }\n/*\nReturn list with elements decremented by 1.\n            \n*/\nlong[] decr_list(long[]\
    \ l) \n{\n    long[] result = new long[l.length];\n    foreach (i, e; l)\n   \
    \ {\n        result[i] = e - 1;\n    }\n    return result;\n}\n/*\nReturn list\
    \ with elements incremented by 1.\n            \n*/\nlong[] incr_list(long[] l)\
    \ \n{\n    long[] result = new long[l.length];\n    foreach (i, e; l)\n    {\n\
    \        result[i] = e + 1;\n    }\n    return result;\n}\n/*\nReturn list with\
    \ elements decremented by 1.\n            \n*/\nlong[] decr_list(long[] l) \n\
    {\n    long[] result = new long[l.length];\n    foreach (i, e; l)\n    {\n   \
    \     result[i] = e - 1;\n    }\n    return result;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ result = new long[l.length];\n    foreach (i, e; l)\n    {\n        result[i]\
    \ = e +\nunittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpwg8mav_s.d(91): Error: expression expected, not `unittest`

    /tmp/tmpwg8mav_s.d(92): Error: found `{` when expecting `;` following statement

    /tmp/tmpwg8mav_s.d(99): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwg8mav_s.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163125
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements decremented by\
    \ 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l)\n    {\n        ret[i] = e - 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i, e; l)\n    {\n\
    \        ret[i] = e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ decremented by 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e -\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements decremented by 1.\n            \n*/\nlong[] decr_list(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i, e; l)\n    {\n\
    \        ret[i] = e - 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\n\
    unittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([]) == []);\n\
    \    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp9p4nnmen.d(91): Error: expression expected, not `unittest`

    /tmp/tmp9p4nnmen.d(92): Error: found `{` when expecting `;` following statement

    /tmp/tmp9p4nnmen.d(99): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9p4nnmen.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163124
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ res = new long[l.length];\n    foreach (i, e; l)\n    {\n        res[i] = e\
    \ + 1;\n    }\n    return res;\n}\nunittest\n{\n    alias candidate = incr_list;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([3L, 2L, 1L]) == [4L,\
    \ 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L,\
    \ 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163125
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ res = new long[l.length];\n    foreach (i, e; l)\n    {\n        res[i] = e\
    \ + 1;\n    }\n    return res;\n}\nunittest\n{\n    alias candidate = incr_list;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([3L, 2L, 1L]) == [4L,\
    \ 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L,\
    \ 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163125
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret;\n    foreach(i; l)\n    {\n        ret ~= i + 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list_range(long[]\
    \ l) \n{\n    long[] ret;\n    foreach(i; l[])\n    {\n        ret ~= i + 1;\n\
    \    }\n    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n\
    \            \n*/\nlong[] incr_list_foreach(long[] l) \n{\n    long[] ret;\n \
    \   foreach(i; l)\n    {\n        ret ~= i + 1;\n    }\n    return ret;\n}\n/*\n\
    Return list with elements incremented by 1.\n            \n*/\nlong[] incr_list_foreach_range(long[]\
    \ l) \n{\n    long[] ret;\n    foreach(i; l[])\n    {\n        ret ~= i + 1;\n\
    \    }\n    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n\
    \            \n*/\nlong[] incr_list_foreach_ref(long[] l) \n{\n    long[] ret;\n\
    \    foreach(ref i; l)\n    {\n        ret ~= i + 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list_foreach_ref_range(long[]\
    \ l) \n{\n    long[] ret;\n    foreach(ref i; l[])\n    {\n        ret ~= i +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_foreach_index(long[] l) \n{\n    long[]\
    \ ret;\n    foreach(i, index; l)\n    {\n        ret ~= i + 1;\n    }\n    return\
    \ ret;\n}\n/*\nReturn list with elements incremented by 1.\n            \n*/\n\
    long[] incr_list_foreach_index_range(\nunittest\n{\n    alias candidate = incr_list;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([3L, 2L, 1L]) == [4L,\
    \ 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L,\
    \ 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpd7sahoz0.d(99): Error: basic type expected, not `unittest`

    /tmp/tmpd7sahoz0.d(99): Error: found `unittest` when expecting `)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpd7sahoz0.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163125
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ res = new long[l.length];\n    foreach (i, e; l) \n    {\n        res[i] = e\
    \ + 1;\n    }\n    return res;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list2(long[] l) \n{\n    long[] res = new\
    \ long[l.length];\n    foreach (i, e; l) \n    {\n        res[i] = e + 1;\n  \
    \  }\n    return res;\n}\n/*\nReturn list with elements incremented by 1.\n  \
    \          \n*/\nlong[] incr_list3(long[] l) \n{\n    long[] res = new long[l.length];\n\
    \    foreach (i, e; l) \n    {\n        res[i] = e + 1;\n    }\n    return res;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list4(long[]\
    \ l) \n{\n    long[] res = new long[l.length];\n    foreach (i, e; l) \n    {\n\
    \        res[i] = e + 1;\n    }\n    return res;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list5(long[] l) \n{\n    long[]\
    \ res = new long[l.length];\n    foreach (i, e; l) \n    {\n        res[i] = e\
    \ + 1;\n    }\n    return res;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list6(long[] l) \n{\n    long[] res = new\
    \ long[l.length];\n    foreach (i, e; l) \n    {\n        res[i] = e + 1;\n  \
    \  }\n    return res;\n}\n/*\nReturn list with elements incremented by 1.\n  \
    \          \n*/\nlong[] incr_list7(long[] l) \n{\n    long[] res = new long[l.length];\n\
    \    foreach (i, e; l)\nunittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpe06qvkfe.d(89): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpe06qvkfe.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163125
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\nunittest\n{\n    alias candidate = incr_list;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([3L, 2L, 1L]) == [4L,\
    \ 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L,\
    \ 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163125
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i,e; l)\n        ret[i] = e + 1;\n  \
    \  return ret;\n}\n/*\nReturn list with elements decremented by 1.\n         \
    \   \n*/\nlong[] decr_list(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i,e; l)\n        ret[i] = e - 1;\n    return ret;\n}\n/*\nReturn\
    \ list with elements squared.\n            \n*/\nlong[] square_list(long[] l)\
    \ \n{\n    long[] ret = new long[l.length];\n    foreach(i,e; l)\n        ret[i]\
    \ = e * e;\n    return ret;\n}\n/*\nReturn list with elements cubed.\n       \
    \     \n*/\nlong[] cube_list(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i,e; l)\n        ret[i] = e * e * e;\n    return ret;\n}\n/*\nReturn\
    \ list with elements negated.\n            \n*/\nlong[] negate_list(long[] l)\
    \ \n{\n    long[] ret = new long[l.length];\n    foreach(i,e; l)\n        ret[i]\
    \ = -e;\n    return ret;\n}\n/*\nReturn list with elements inverted.\n       \
    \     \n*/\nlong[] invert_list(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i,e; l)\n        ret[i] = 1 / e;\n    return ret;\n}\n/*\nReturn\
    \ list with elements raised to the power of `p`.\n            \n*/\nlong[] power_list(long[]\
    \ l, long p) \n{\n    long[] ret = new long[l.length];\n    foreach(i,e; l)\n\
    \        ret[i] = pow(e, p);\n    return ret;\n}\n/*\nReturn list with elements\
    \ raised to the power of `p`.\n            \n*/\nlong[] power_list(long[] l, double\
    \ p) \n\nunittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpizdblx_t.d(86): Error: semicolon expected following function declaration

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpizdblx_t.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163125
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ res;\n    foreach(i; l)\n    {\n        res ~= i + 1;\n    }\n    return res;\n\
    }\nunittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([]) ==\
    \ []);\n    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163125
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_2(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n\
    \    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list_3(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list_4(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i, e; l)\n    {\n\
    \        ret[i] = e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list_5(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_6(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n\
    \    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list_7(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l)\nunittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp9yeh7l52.d(89): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9yeh7l52.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163124
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    for (int i = 0; i < l.length; i++)\n    {\n \
    \       ret[i] = l[i] + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list_2(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach (i, e; l)\n    {\n        ret[i] = e\
    \ + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_3(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach (i, e; l)\n    {\n        ret[i] = e + 1;\n   \
    \ }\n    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n   \
    \         \n*/\nlong[] incr_list_4(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach (i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list_5(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach (i, e; l)\n    {\n\
    \        ret[i] = e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list_6(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach (i, e; l)\n    {\n        ret[i] = e\
    \ + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_7(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n   \nunittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpuva4ng6e.d(89): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpuva4ng6e.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163125
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret;\n    foreach(e; l)\n    {\n        ret ~= e + 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list_2(long[]\
    \ l) \n{\n    long[] ret;\n    foreach(e; l)\n    {\n        ret ~= e + 1;\n \
    \   }\n    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n \
    \           \n*/\nlong[] incr_list_3(long[] l) \n{\n    long[] ret;\n    foreach(e;\
    \ l)\n    {\n        ret ~= e + 1;\n    }\n    return ret;\n}\n/*\nReturn list\
    \ with elements incremented by 1.\n            \n*/\nlong[] incr_list_4(long[]\
    \ l) \n{\n    long[] ret;\n    foreach(e; l)\n    {\n        ret ~= e + 1;\n \
    \   }\n    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n \
    \           \n*/\nlong[] incr_list_5(long[] l) \n{\n    long[] ret;\n    foreach(e;\
    \ l)\n    {\n        ret ~= e + 1;\n    }\n    return ret;\n}\n/*\nReturn list\
    \ with elements incremented by 1.\n            \n*/\nlong[] incr_list_6(long[]\
    \ l) \n{\n    long[] ret;\n    foreach(e; l)\n    {\n        ret ~= e + 1;\n \
    \   }\n    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n \
    \           \n*/\nlong[] incr_list_7(long[] l) \n{\n    long[] ret;\n    foreach(e;\
    \ l)\n    {\n        ret ~= e + 1;\n    }\n    return ret;\n}\n/*\nReturn list\
    \ with elements incremented by 1.\n            \n*/\nlong[] incr_list_8(long[]\
    \ l) \n{\n    long[] ret;\n    foreach(e; l)\n    {\n       \nunittest\n{\n  \
    \  alias candidate = incr_list;\n\n    assert(candidate([]) == []);\n    assert(candidate([3L,\
    \ 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L,\
    \ 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpof4bbdvt.d(104): Error: found `unittest` instead of statement

    /tmp/tmpof4bbdvt.d(112): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpof4bbdvt.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163125
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ r;\n    foreach(e; l)\n        r ~= e + 1;\n    return r;\n}\n/*\nReturn list\
    \ with elements incremented by 1.\n            \n*/\nlong[] incr_list_2(long[]\
    \ l) \n{\n    return map!(a => a + 1)(l);\n}\n/*\nReturn list with elements incremented\
    \ by 1.\n            \n*/\nlong[] incr_list_3(long[] l) \n{\n    return map!(a\
    \ => a + 1)(l);\n}\n/*\nReturn list with elements incremented by 1.\n        \
    \    \n*/\nlong[] incr_list_4(long[] l) \n{\n    return map!(a => a + 1)(l);\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list_5(long[]\
    \ l) \n{\n    return map!(a => a + 1)(l);\n}\n/*\nReturn list with elements incremented\
    \ by 1.\n            \n*/\nlong[] incr_list_6(long[] l) \n{\n    return map!(a\
    \ => a + 1)(l);\n}\n/*\nReturn list with elements incremented by 1.\n        \
    \    \n*/\nlong[] incr_list_7(long[] l) \n{\n    return map!(a => a + 1)(l);\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list_8(long[]\
    \ l) \n{\n    return map!(a => a + 1)(l);\n}\n/*\nReturn list with elements incremented\
    \ by 1.\n            \n*/\nlong[] incr_list_9(long[] l) \n{\n    return map!(a\
    \ => a + 1)(l);\n}\n/*\nReturn list with elements incremented by 1.\n        \
    \    \n*/\nlong[] incr_list_10(long[] l) \n{\n    return map!(a => a + 1)(l);\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list_11(long[]\
    \ l) \n{\n    return map!\nunittest\n{\n    alias candidate = incr_list;\n\n \
    \   assert(candidate([]) == []);\n    assert(candidate([3L, 2L, 1L]) == [4L, 3L,\
    \ 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L,\
    \ 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpf1ze5d7e.d(93): Error: template argument expected following `!`

    /tmp/tmpf1ze5d7e.d(93): Error: found `unittest` when expecting `;` following `return`
    statement

    /tmp/tmpf1ze5d7e.d(101): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpf1ze5d7e.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163125
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_by_ref(ref long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_by_ref_2(ref long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_by_ref_3(ref long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_by_ref_4(ref long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_by_ref_5(ref long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_by_ref_6(ref long[] l\nunittest\n{\n\
    \    alias candidate = incr_list;\n\n    assert(candidate([]) == []);\n    assert(candidate([3L,\
    \ 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L,\
    \ 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpb3hcjfc_.d(86): Error: found `unittest` when expecting `)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpb3hcjfc_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163125
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements decremented by\
    \ 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i,e; l)\n    {\n        ret[i] = e - 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i,e; l)\n    {\n \
    \       ret[i] = e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ decremented by 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e -\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i,e; l)\n    {\n        ret[i] = e + 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements decremented by 1.\n            \n*/\nlong[] decr_list(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i,e; l)\n    {\n \
    \       ret[i] = e - 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e +\n\
    unittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([]) == []);\n\
    \    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpeo8dnwjp.d(91): Error: expression expected, not `unittest`

    /tmp/tmpeo8dnwjp.d(92): Error: found `{` when expecting `;` following statement

    /tmp/tmpeo8dnwjp.d(99): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpeo8dnwjp.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163124
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ res = new long[l.length];\n    foreach (i, e; l) {\n        res[i] = e + 1;\n\
    \    }\n    return res;\n}\n/*\nReturn list with elements incremented by 1.\n\
    \            \n*/\nlong[] incr_list_2(long[] l) \n{\n    long[] res = new long[l.length];\n\
    \    foreach (i, e; l) {\n        res[i] = e + 1;\n    }\n    return res;\n}\n\
    /*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list_3(long[]\
    \ l) \n{\n    long[] res = new long[l.length];\n    foreach (i, e; l) {\n    \
    \    res[i] = e + 1;\n    }\n    return res;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list_4(long[] l) \n{\n    long[]\
    \ res = new long[l.length];\n    foreach (i, e; l) {\n        res[i] = e + 1;\n\
    \    }\n    return res;\n}\n/*\nReturn list with elements incremented by 1.\n\
    \            \n*/\nlong[] incr_list_5(long[] l) \n{\n    long[] res = new long[l.length];\n\
    \    foreach (i, e; l) {\n        res[i] = e + 1;\n    }\n    return res;\n}\n\
    /*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list_6(long[]\
    \ l) \n{\n    long[] res = new long[l.length];\n    foreach (i, e; l) {\n    \
    \    res[i] = e + 1;\n    }\n    return res;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list_7(long[] l) \n{\n    long[]\
    \ res = new long[l.length];\n    foreach (i, e; l) {\n        res[i] = e + 1;\n\
    unittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([]) == []);\n\
    \    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp71e8hj80.d(84): Error: found `unittest` instead of statement

    /tmp/tmp71e8hj80.d(92): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp71e8hj80.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163125
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ res = new long[l.length];\n    foreach (i, e; l)\n    {\n        res[i] = e\
    \ + 1;\n    }\n    return res;\n}\nunittest\n{\n    alias candidate = incr_list;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([3L, 2L, 1L]) == [4L,\
    \ 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L,\
    \ 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163125
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n        ret[i] = e + 1;\n \
    \   return ret;\n}\n/*\nReturn list with elements decremented by 1.\n        \
    \    \n*/\nlong[] decr_list(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l)\n        ret[i] = e - 1;\n    return ret;\n}\n/*\nReturn\
    \ list with elements incremented by 1.\n            \n*/\nlong[] incr_list(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i, e; l)\n       \
    \ ret[i] = e + 1;\n    return ret;\n}\n/*\nReturn list with elements decremented\
    \ by 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i, e; l)\n        ret[i] = e - 1;\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i, e; l)\n       \
    \ ret[i] = e + 1;\n    return ret;\n}\n/*\nReturn list with elements decremented\
    \ by 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i, e; l)\n        ret[i] = e - 1;\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i, e; l)\n       \
    \ ret[i] = e + 1;\n    return ret;\n}\n/*\nReturn list with elements decremented\
    \ by 1.\n            \n*/\nlong[] decr_list(long[] l) \n\nunittest\n{\n    alias\
    \ candidate = incr_list;\n\n    assert(candidate([]) == []);\n    assert(candidate([3L,\
    \ 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L,\
    \ 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4rokqg72.d(86): Error: semicolon expected following function declaration

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4rokqg72.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163124
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ res = new long[l.length];\n    foreach (i,e; l)\n    {\n        res[i] = e +\
    \ 1;\n    }\n    return res;\n}\nunittest\n{\n    alias candidate = incr_list;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([3L, 2L, 1L]) == [4L,\
    \ 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L,\
    \ 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163125
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret;\n    foreach(e; l)\n    {\n        ret ~= e + 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements decremented by 1.\n            \n*/\nlong[] decr_list(long[]\
    \ l) \n{\n    long[] ret;\n    foreach(e; l)\n    {\n        ret ~= e - 1;\n \
    \   }\n    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n \
    \           \n*/\nlong[] incr_list(long[] l) \n{\n    long[] ret;\n    foreach(e;\
    \ l)\n    {\n        ret ~= e + 1;\n    }\n    return ret;\n}\n/*\nReturn list\
    \ with elements decremented by 1.\n            \n*/\nlong[] decr_list(long[] l)\
    \ \n{\n    long[] ret;\n    foreach(e; l)\n    {\n        ret ~= e - 1;\n    }\n\
    \    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list(long[] l) \n{\n    long[] ret;\n    foreach(e; l)\n\
    \    {\n        ret ~= e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with\
    \ elements decremented by 1.\n            \n*/\nlong[] decr_list(long[] l) \n\
    {\n    long[] ret;\n    foreach(e; l)\n    {\n        ret ~= e - 1;\n    }\n \
    \   return ret;\n}\n/*\nReturn list with elements incremented by 1.\n        \
    \    \n*/\nlong[] incr_list(long[] l) \n{\n    long[] ret;\n    foreach(e; l)\n\
    \    {\n        ret ~= e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with\
    \ elements decremented by 1.\n            \n*/\nlong[] decr_list(long[] l) \n\
    {\n    long[] ret;\n    foreach(e; l)\n    {\n        ret ~= e - 1;\n    }\n \
    \   return ret\nunittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpix6th3jr.d(106): Error: found `unittest` when expecting `;` following
    `return` statement

    /tmp/tmpix6th3jr.d(114): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpix6th3jr.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163124
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ r = new long[l.length];\n    foreach (i, e; l)\n    {\n        r[i] = e + 1;\n\
    \    }\n    return r;\n}\nunittest\n{\n    alias candidate = incr_list;\n\n  \
    \  assert(candidate([]) == []);\n    assert(candidate([3L, 2L, 1L]) == [4L, 3L,\
    \ 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L,\
    \ 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163125
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ result = new long[l.length];\n    foreach (i, e; l)\n        result[i] = e +\
    \ 1;\n    return result;\n}\n/*\nReturn list with elements incremented by 1.\n\
    \            \n*/\nlong[] incr_list_2(long[] l) \n{\n    long[] result = new long[l.length];\n\
    \    foreach (i, e; l)\n        result[i] = e + 1;\n    return result;\n}\n/*\n\
    Return list with elements incremented by 1.\n            \n*/\nlong[] incr_list_3(long[]\
    \ l) \n{\n    long[] result = new long[l.length];\n    foreach (i, e; l)\n   \
    \     result[i] = e + 1;\n    return result;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list_4(long[] l) \n{\n    long[]\
    \ result = new long[l.length];\n    foreach (i, e; l)\n        result[i] = e +\
    \ 1;\n    return result;\n}\n/*\nReturn list with elements incremented by 1.\n\
    \            \n*/\nlong[] incr_list_5(long[] l) \n{\n    long[] result = new long[l.length];\n\
    \    foreach (i, e; l)\n        result[i] = e + 1;\n    return result;\n}\n/*\n\
    Return list with elements incremented by 1.\n            \n*/\nlong[] incr_list_6(long[]\
    \ l) \n{\n    long[] result = new long[l.length];\n    foreach (i, e; l)\n   \
    \     result[i] = e + 1;\n    return result;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list_7(long[] l) \n{\n    long[]\
    \ result = new long[l.length];\n    foreach (i, e; l)\n        result[i] = e +\
    \ 1;\n    return result;\n}\n/*\nReturn list with elements incremented by 1.\n\
    \            \n*/\nlong\nunittest\n{\n    alias candidate = incr_list;\n\n   \
    \ assert(candidate([]) == []);\n    assert(candidate([3L, 2L, 1L]) == [4L, 3L,\
    \ 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L,\
    \ 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp98yqipl8.d(85): Error: no identifier for declarator `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp98yqipl8.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163125
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n        ret[i] = e + 1;\n \
    \   return ret;\n}\n/*\nReturn list with elements incremented by 1.\n        \
    \    \n*/\nlong[] incr_list_range(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l)\n        ret[i] = e + 1;\n    return ret;\n}\n/*\nReturn\
    \ list with elements incremented by 1.\n            \n*/\nlong[] incr_list_foreach(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i, e; l)\n       \
    \ ret[i] = e + 1;\n    return ret;\n}\n/*\nReturn list with elements incremented\
    \ by 1.\n            \n*/\nlong[] incr_list_foreach_range(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n        ret[i] = e + 1;\n \
    \   return ret;\n}\n/*\nReturn list with elements incremented by 1.\n        \
    \    \n*/\nlong[] incr_list_foreach_range_array(long[] l) \n{\n    long[] ret\
    \ = new long[l.length];\n    foreach(i, e; l)\n        ret[i] = e + 1;\n    return\
    \ ret;\n}\n/*\nReturn list with elements incremented by 1.\n            \n*/\n\
    long[] incr_list_foreach_range_array_ref(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l)\n        ret[i] = e + 1;\n    return ret;\n}\n/*\nReturn\
    \ list with elements incremented by 1.\n            \n*/\nlong[] incr_list_foreach_range_array_ref_const(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i, e; l)\n       \
    \ ret[i] = e + 1;\nunittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbkn88f_d.d(78): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbkn88f_d.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163125
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l) \n    {\n        ret[i] = e\
    \ + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements decremented by\
    \ 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l) \n    {\n        ret[i] = e - 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list_2(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i, e; l) \n    {\n\
    \        ret[i] = e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ decremented by 1.\n            \n*/\nlong[] decr_list_2(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l) \n    {\n        ret[i] = e\
    \ - 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_3(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i, e; l) \n    {\n        ret[i] = e + 1;\n   \
    \ }\n    return ret;\n}\n/*\nReturn list with elements decremented by 1.\n   \
    \         \n*/\nlong[] decr_list_3(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l) \n    {\n        ret[i] = e - 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list_4(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i,\nunittest\n{\n\
    \    alias candidate = incr_list;\n\n    assert(candidate([]) == []);\n    assert(candidate([3L,\
    \ 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L,\
    \ 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp2knbcc75.d(89): Error: basic type expected, not `unittest`

    /tmp/tmp2knbcc75.d(89): Error: no identifier for declarator `_error_`

    /tmp/tmp2knbcc75.d(89): Error: found `unittest` when expecting `;`

    /tmp/tmp2knbcc75.d(97): Error: found `void` when expecting `)`

    /tmp/tmp2knbcc75.d(97): Error: found `{` when expecting `;` following statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2knbcc75.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163125
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ res = new long[l.length];\n    foreach (i, e; l)\n    {\n        res[i] = e\
    \ + 1;\n    }\n    return res;\n}\n/*\nReturn list with elements decremented by\
    \ 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[] res = new long[l.length];\n\
    \    foreach (i, e; l)\n    {\n        res[i] = e - 1;\n    }\n    return res;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list(long[]\
    \ l) \n{\n    long[] res = new long[l.length];\n    foreach (i, e; l)\n    {\n\
    \        res[i] = e + 1;\n    }\n    return res;\n}\n/*\nReturn list with elements\
    \ decremented by 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[]\
    \ res = new long[l.length];\n    foreach (i, e; l)\n    {\n        res[i] = e\
    \ - 1;\n    }\n    return res;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[] res = new long[l.length];\n\
    \    foreach (i, e; l)\n    {\n        res[i] = e + 1;\n    }\n    return res;\n\
    }\n/*\nReturn list with elements decremented by 1.\n            \n*/\nlong[] decr_list(long[]\
    \ l) \n{\n    long[] res = new long[l.length];\n    foreach (i, e; l)\n    {\n\
    \        res[i] = e - 1;\n    }\n    return res;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ res = new long[l.length];\n    foreach (i, e; l)\n    {\n        res[i] = e\
    \ +\nunittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmppk_w3_8n.d(91): Error: expression expected, not `unittest`

    /tmp/tmppk_w3_8n.d(92): Error: found `{` when expecting `;` following statement

    /tmp/tmppk_w3_8n.d(99): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmppk_w3_8n.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163124
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_2(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n\
    \    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list_3(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list_4(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i, e; l)\n    {\n\
    \        ret[i] = e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list_5(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_6(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n\
    \    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list_7(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l)\nunittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp9yeh7l52.d(89): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9yeh7l52.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163124
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\nunittest\n{\n    alias candidate = incr_list;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([3L, 2L, 1L]) == [4L,\
    \ 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L,\
    \ 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163125
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret;\n    foreach(e; l)\n    {\n        ret ~= e + 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list_foreach_index(long[]\
    \ l) \n{\n    long[] ret;\n    foreach_index(i; l)\n    {\n        ret ~= l[i]\
    \ + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_foreach_reverse(long[] l) \n{\n    long[]\
    \ ret;\n    foreach_reverse(e; l)\n    {\n        ret ~= e + 1;\n    }\n    return\
    \ ret;\n}\n/*\nReturn list with elements incremented by 1.\n            \n*/\n\
    long[] incr_list_foreach_reverse_index(long[] l) \n{\n    long[] ret;\n    foreach_reverse_index(i;\
    \ l)\n    {\n        ret ~= l[i] + 1;\n    }\n    return ret;\n}\n/*\nReturn list\
    \ with elements incremented by 1.\n            \n*/\nlong[] incr_list_foreach_index_reverse(long[]\
    \ l) \n{\n    long[] ret;\n    foreach_index_reverse(i; l)\n    {\n        ret\
    \ ~= l[i] + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented\
    \ by 1.\n            \n*/\nlong[] incr_list_foreach_index_reverse_index(long[]\
    \ l) \n{\n    long[] ret;\n    foreach_index_reverse_index(i; l)\n    {\n    \
    \    ret ~= l[i] + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list_foreach_index_reverse_index_reverse(long[]\
    \ l) \n{\n    long[] ret;\n    foreach_index_reverse_index_reverse(i; l)\n   \
    \ {\n       \nunittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpgdo222df.d(23): Error: found `;` when expecting `,`

    /tmp/tmpgdo222df.d(24): Error: found `{` when expecting `;` following statement

    /tmp/tmpgdo222df.d(27): Error: declaration expected, not `return`

    /tmp/tmpgdo222df.d(28): Error: unrecognized declaration

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgdo222df.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163125
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ res = new long[l.length];\n    foreach (i, e; l) \n    {\n        res[i] = e\
    \ + 1;\n    }\n    return res;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list2(long[] l) \n{\n    long[] res = new\
    \ long[l.length];\n    foreach (i, e; l) \n    {\n        res[i] = e + 1;\n  \
    \  }\n    return res;\n}\n/*\nReturn list with elements incremented by 1.\n  \
    \          \n*/\nlong[] incr_list3(long[] l) \n{\n    long[] res = new long[l.length];\n\
    \    foreach (i, e; l) \n    {\n        res[i] = e + 1;\n    }\n    return res;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list4(long[]\
    \ l) \n{\n    long[] res = new long[l.length];\n    foreach (i, e; l) \n    {\n\
    \        res[i] = e + 1;\n    }\n    return res;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list5(long[] l) \n{\n    long[]\
    \ res = new long[l.length];\n    foreach (i, e; l) \n    {\n        res[i] = e\
    \ + 1;\n    }\n    return res;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list6(long[] l) \n{\n    long[] res = new\
    \ long[l.length];\n    foreach (i, e; l) \n    {\n        res[i] = e + 1;\n  \
    \  }\n    return res;\n}\n/*\nReturn list with elements incremented by 1.\n  \
    \          \n*/\nlong[] incr_list7(long[] l) \n{\n    long[] res = new long[l.length];\n\
    \    foreach (i, e; l)\nunittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpe06qvkfe.d(89): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpe06qvkfe.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163125
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_by_1(long[] l) \n{\n    long[] ret =\
    \ new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n\
    \    }\n    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n\
    \            \n*/\nlong[] incr_list_by_1_2(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n\
    \    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list_by_1_3(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list_by_1_4(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i, e; l)\n    {\n\
    \        ret[i] = e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list_by_1_5(long[] l) \n{\n\
    \    long[] ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i]\
    \ = e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented\
    \ by 1.\n            \n*/\nlong[] incr_list_by_1_6(long[] l) \n{\n   \nunittest\n\
    {\n    alias candidate = incr_list;\n\n    assert(candidate([]) == []);\n    assert(candidate([3L,\
    \ 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L,\
    \ 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmprd5ts9mn.d(88): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprd5ts9mn.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163125
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_2(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e + 1;\n    }\n\
    \    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list_3(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i,e; l)\n    {\n        ret[i] = e + 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list_4(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i,e; l)\n    {\n \
    \       ret[i] = e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list_5(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_6(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e + 1;\n    }\n\
    \    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list_7(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i,e; l)\nunittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp9d2d9vks.d(89): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9d2d9vks.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163124
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret;\n    foreach(i; l)\n    {\n        ret ~= i + 1;\n    }\n    return ret;\n\
    }\nunittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([]) ==\
    \ []);\n    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163125
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_2(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n\
    \    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list_3(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list_4(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i, e; l)\n    {\n\
    \        ret[i] = e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list_5(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_6(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n\
    \    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list_7(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l)\nunittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp9yeh7l52.d(89): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9yeh7l52.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163124
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\nunittest\n{\n    alias candidate = incr_list;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([3L, 2L, 1L]) == [4L,\
    \ 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L,\
    \ 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163125
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    for (int i = 0; i < l.length; i++) \n    {\n\
    \        ret[i] = l[i] + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ decremented by 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    for (int i = 0; i < l.length; i++) \n    {\n\
    \        ret[i] = l[i] - 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l, int n) \n{\n\
    \    long[] ret = new long[l.length];\n    for (int i = 0; i < l.length; i++)\
    \ \n    {\n        ret[i] = l[i] + n;\n    }\n    return ret;\n}\n/*\nReturn list\
    \ with elements decremented by 1.\n            \n*/\nlong[] decr_list(long[] l,\
    \ int n) \n{\n    long[] ret = new long[l.length];\n    for (int i = 0; i < l.length;\
    \ i++) \n    {\n        ret[i] = l[i] - n;\n    }\n    return ret;\n}\n/*\nReturn\
    \ list with elements incremented by 1.\n            \n*/\nlong[] incr_list(long[]\
    \ l, long n) \n{\n    long[] ret = new long[l.length];\n    for (int i = 0; i\
    \ < l.length; i++) \n    {\n        ret[i] = l[i] + n;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements decremented by 1.\n            \n*/\nlong[] decr_list(long[]\
    \ l, long n) \n{\n    long[] ret = new long[l.length];\n    for (int i = 0; i\
    \ < l.length; i++) \n    {\n        ret[i] = l[i] - n;\n    }\n   \nunittest\n\
    {\n    alias candidate = incr_list;\n\n    assert(candidate([]) == []);\n    assert(candidate([3L,\
    \ 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L,\
    \ 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpmet09t9n.d(80): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmet09t9n.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163125
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l) {\n        ret[i] = e + 1;\n\
    \    }\n    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n\
    \            \n*/\nlong[] incr_list_2(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l) {\n        ret[i] = e + 1;\n    }\n    return ret;\n}\n\
    /*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list_3(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i, e; l) {\n     \
    \   ret[i] = e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list_4(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l) {\n        ret[i] = e + 1;\n\
    \    }\n    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n\
    \            \n*/\nlong[] incr_list_5(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l) {\n        ret[i] = e + 1;\n    }\n    return ret;\n}\n\
    /*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list_6(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i, e; l) {\n     \
    \   ret[i] = e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list_7(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l) {\n        ret[i] = e + 1;\n\
    unittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([]) == []);\n\
    \    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp9320_5gu.d(84): Error: found `unittest` instead of statement

    /tmp/tmp9320_5gu.d(92): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9320_5gu.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163125
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ res = new long[l.length];\n    foreach (i, e; l)\n    {\n        res[i] = e\
    \ + 1;\n    }\n    return res;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list2(long[] l) \n{\n    long[] res = new\
    \ long[l.length];\n    foreach (i, e; l)\n    {\n        res[i] = e + 1;\n   \
    \ }\n    return res;\n}\n/*\nReturn list with elements incremented by 1.\n   \
    \         \n*/\nlong[] incr_list3(long[] l) \n{\n    long[] res = new long[l.length];\n\
    \    foreach (i, e; l)\n    {\n        res[i] = e + 1;\n    }\n    return res;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list4(long[]\
    \ l) \n{\n    long[] res = new long[l.length];\n    foreach (i, e; l)\n    {\n\
    \        res[i] = e + 1;\n    }\n    return res;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list5(long[] l) \n{\n    long[]\
    \ res = new long[l.length];\n    foreach (i, e; l)\n    {\n        res[i] = e\
    \ + 1;\n    }\n    return res;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list6(long[] l) \n{\n    long[] res = new\
    \ long[l.length];\n    foreach (i, e; l)\n    {\n        res[i] = e + 1;\n   \
    \ }\n    return res;\n}\n/*\nReturn list with elements incremented by 1.\n   \
    \         \n*/\nlong[] incr_list7(long[] l) \n{\n    long[] res = new long[l.length];\n\
    \    foreach (i, e; l)\n    {\n        res\nunittest\n{\n    alias candidate =\
    \ incr_list;\n\n    assert(candidate([]) == []);\n    assert(candidate([3L, 2L,\
    \ 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L, 0L,\
    \ 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpptbzkbsn.d(91): Error: found `unittest` when expecting `;` following
    statement

    /tmp/tmpptbzkbsn.d(99): Error: found `End of File` when expecting `}` following
    compound statement

    /tmp/tmpptbzkbsn.d(99): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpptbzkbsn.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163124
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list2(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n\
    \    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list3(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list4(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i, e; l)\n    {\n\
    \        ret[i] = e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list5(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list6(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n\
    \    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list7(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l)\n    {\n        ret\nunittest\n{\n    alias candidate =\
    \ incr_list;\n\n    assert(candidate([]) == []);\n    assert(candidate([3L, 2L,\
    \ 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L, 0L,\
    \ 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpd573vbg7.d(91): Error: found `unittest` when expecting `;` following
    statement

    /tmp/tmpd573vbg7.d(99): Error: found `End of File` when expecting `}` following
    compound statement

    /tmp/tmpd573vbg7.d(99): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpd573vbg7.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163124
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ r = new long[l.length];\n    foreach (i, e; l) {\n        r[i] = e + 1;\n  \
    \  }\n    return r;\n}\n/*\nReturn list with elements incremented by 1.\n    \
    \        \n*/\nlong[] incr_list2(long[] l) \n{\n    long[] r = new long[l.length];\n\
    \    foreach (i, e; l) {\n        r[i] = e + 1;\n    }\n    return r;\n}\n/*\n\
    Return list with elements incremented by 1.\n            \n*/\nlong[] incr_list3(long[]\
    \ l) \n{\n    long[] r = new long[l.length];\n    foreach (i, e; l) {\n      \
    \  r[i] = e + 1;\n    }\n    return r;\n}\n/*\nReturn list with elements incremented\
    \ by 1.\n            \n*/\nlong[] incr_list4(long[] l) \n{\n    long[] r = new\
    \ long[l.length];\n    foreach (i, e; l) {\n        r[i] = e + 1;\n    }\n   \
    \ return r;\n}\n/*\nReturn list with elements incremented by 1.\n            \n\
    */\nlong[] incr_list5(long[] l) \n{\n    long[] r = new long[l.length];\n    foreach\
    \ (i, e; l) {\n        r[i] = e + 1;\n    }\n    return r;\n}\n/*\nReturn list\
    \ with elements incremented by 1.\n            \n*/\nlong[] incr_list6(long[]\
    \ l) \n{\n    long[] r = new long[l.length];\n    foreach (i, e; l) {\n      \
    \  r[i] = e + 1;\n    }\n    return r;\n}\n/*\nReturn list with elements incremented\
    \ by 1.\n            \n*/\nlong[] incr_list7(long[] l) \n{\n    long[] r = new\
    \ long[l.length];\n    foreach (i, e; l) {\n        r[i] = e + 1;\n    }\n   \
    \ return\nunittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpg3k11gc0.d(86): Error: expression expected, not `unittest`

    /tmp/tmpg3k11gc0.d(87): Error: found `{` when expecting `;` following `return`
    statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg3k11gc0.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163125
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list2(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n\
    \    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list3(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list4(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i, e; l)\n    {\n\
    \        ret[i] = e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list5(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list6(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n\
    \    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list7(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l)\n    {\n        ret\nunittest\n{\n    alias candidate =\
    \ incr_list;\n\n    assert(candidate([]) == []);\n    assert(candidate([3L, 2L,\
    \ 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L, 0L,\
    \ 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpd573vbg7.d(91): Error: found `unittest` when expecting `;` following
    statement

    /tmp/tmpd573vbg7.d(99): Error: found `End of File` when expecting `}` following
    compound statement

    /tmp/tmpd573vbg7.d(99): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpd573vbg7.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163124
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list2(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e + 1;\n    }\n\
    \    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list3(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i,e; l)\n    {\n        ret[i] = e + 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list4(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i,e; l)\n    {\n \
    \       ret[i] = e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list5(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list6(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e + 1;\n    }\n\
    \    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list7(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i,e; l)\n    {\n        ret\nunittest\n{\n    alias candidate = incr_list;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([3L, 2L, 1L]) == [4L,\
    \ 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L,\
    \ 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpu9sjpyt5.d(91): Error: found `unittest` when expecting `;` following
    statement

    /tmp/tmpu9sjpyt5.d(99): Error: found `End of File` when expecting `}` following
    compound statement

    /tmp/tmpu9sjpyt5.d(99): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpu9sjpyt5.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163125
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ res = new long[l.length];\n    foreach (i, e; l) \n    {\n        res[i] = e\
    \ + 1;\n    }\n    return res;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_2(long[] l) \n{\n    long[] res = new\
    \ long[l.length];\n    foreach (i, e; l) \n    {\n        res[i] = e + 1;\n  \
    \  }\n    return res;\n}\n/*\nReturn list with elements incremented by 1.\n  \
    \          \n*/\nlong[] incr_list_3(long[] l) \n{\n    long[] res = new long[l.length];\n\
    \    foreach (i, e; l) \n    {\n        res[i] = e + 1;\n    }\n    return res;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list_4(long[]\
    \ l) \n{\n    long[] res = new long[l.length];\n    foreach (i, e; l) \n    {\n\
    \        res[i] = e + 1;\n    }\n    return res;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list_5(long[] l) \n{\n    long[]\
    \ res = new long[l.length];\n    foreach (i, e; l) \n    {\n        res[i] = e\
    \ + 1;\n    }\n    return res;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_6(long[] l) \n{\n    long[] res = new\
    \ long[l.length];\n    foreach (i, e; l) \n    {\n        res[i] = e + 1;\n  \
    \  }\n    return res;\n}\n/*\nReturn list with elements incremented by 1.\n  \
    \          \n*/\nlong[] incr_list_7(long[] l) \n{\n    long[] res = new long[l.length];\n\
    \    foreach (\nunittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpyqtp_8b7.d(89): Error: basic type expected, not `unittest`

    /tmp/tmpyqtp_8b7.d(89): Error: no identifier for declarator `_error_`

    /tmp/tmpyqtp_8b7.d(89): Error: found `unittest` when expecting `;`

    /tmp/tmpyqtp_8b7.d(97): Error: found `void` when expecting `)`

    /tmp/tmpyqtp_8b7.d(97): Error: found `{` when expecting `;` following statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyqtp_8b7.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163124
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret;\n    foreach(i; l)\n    {\n        ret ~= i + 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list_2(long[]\
    \ l) \n{\n    long[] ret;\n    foreach(i; l)\n    {\n        ret ~= i + 1;\n \
    \   }\n    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n \
    \           \n*/\nlong[] incr_list_3(long[] l) \n{\n    long[] ret;\n    foreach(i;\
    \ l)\n    {\n        ret ~= i + 1;\n    }\n    return ret;\n}\n/*\nReturn list\
    \ with elements incremented by 1.\n            \n*/\nlong[] incr_list_4(long[]\
    \ l) \n{\n    long[] ret;\n    foreach(i; l)\n    {\n        ret ~= i + 1;\n \
    \   }\n    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n \
    \           \n*/\nlong[] incr_list_5(long[] l) \n{\n    long[] ret;\n    foreach(i;\
    \ l)\n    {\n        ret ~= i + 1;\n    }\n    return ret;\n}\n/*\nReturn list\
    \ with elements incremented by 1.\n            \n*/\nlong[] incr_list_6(long[]\
    \ l) \n{\n    long[] ret;\n    foreach(i; l)\n    {\n        ret ~= i + 1;\n \
    \   }\n    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n \
    \           \n*/\nlong[] incr_list_7(long[] l) \n{\n    long[] ret;\n    foreach(i;\
    \ l)\n    {\n        ret ~= i + 1;\n    }\n    return ret;\n}\n/*\nReturn list\
    \ with elements incremented by 1.\n            \n*/\nlong[] incr_list_8(long[]\
    \ l) \n{\n    long[] ret;\n    foreach(i; l)\n    {\n       \nunittest\n{\n  \
    \  alias candidate = incr_list;\n\n    assert(candidate([]) == []);\n    assert(candidate([3L,\
    \ 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L,\
    \ 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpfbgd1080.d(104): Error: found `unittest` instead of statement

    /tmp/tmpfbgd1080.d(112): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfbgd1080.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163125
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ res = new long[l.length];\n    foreach (i, e; l)\n    {\n        res[i] = e\
    \ + 1;\n    }\n    return res;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_range(long[] l) \n{\n    long[] res =\
    \ new long[l.length];\n    foreach (e; l)\n    {\n        res ~= e + 1;\n    }\n\
    \    return res;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list_foreach(long[] l) \n{\n    long[] res = new long[l.length];\n\
    \    foreach (e; l)\n    {\n        res[$] = e + 1;\n    }\n    return res;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list_foreach_range(long[]\
    \ l) \n{\n    long[] res;\n    foreach (e; l)\n    {\n        res ~= e + 1;\n\
    \    }\n    return res;\n}\n/*\nReturn list with elements incremented by 1.\n\
    \            \n*/\nlong[] incr_list_foreach_range_init(long[] l) \n{\n    long[]\
    \ res = new long[];\n    foreach (e; l)\n    {\n        res ~= e + 1;\n    }\n\
    \    return res;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list_foreach_range_init_reserve(long[] l) \n{\n    long[]\
    \ res = new long[l.length];\n    foreach (e; l)\n    {\n        res ~= e + 1;\n\
    \    }\n    return res;\n}\n/*\nReturn list with elements incremented by 1.\n\
    \            \n*/\nlong[] incr_list_foreach_range_init_reserve_wrong(long[] l)\
    \ \n{\n    long[] res = new long[l.length];\n    foreach (e; l)\n    {\nunittest\n\
    {\n    alias candidate = incr_list;\n\n    assert(candidate([]) == []);\n    assert(candidate([3L,\
    \ 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L,\
    \ 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmptg5pikdd.d(90): Error: found `unittest` instead of statement

    /tmp/tmptg5pikdd.d(98): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptg5pikdd.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163125
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, elem; l)\n    {\n        ret[i] =\
    \ elem + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented\
    \ by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i, elem; l)\n    {\n        ret[i] = elem + 1;\n\
    \    }\n    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n\
    \            \n*/\nlong[] incr_list(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, elem; l)\n    {\n        ret[i] = elem + 1;\n    }\n    return\
    \ ret;\n}\n/*\nReturn list with elements incremented by 1.\n            \n*/\n\
    long[] incr_list(long[] l) \n{\n    long[] ret = new long[l.length];\n    foreach(i,\
    \ elem; l)\n    {\n        ret[i] = elem + 1;\n    }\n    return ret;\n}\n/*\n\
    Return list with elements incremented by 1.\n            \n*/\nlong[] incr_list(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i, elem; l)\n    {\n\
    \        ret[i] = elem + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, elem; l)\n    {\n        ret[i] =\
    \ elem + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented\
    \ by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i, elem; l\nunittest\n{\n    alias candidate =\
    \ incr_list;\n\n    assert(candidate([]) == []);\n    assert(candidate([3L, 2L,\
    \ 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L, 0L,\
    \ 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpmhgx63lf.d(89): Error: found `unittest` when expecting `)`

    /tmp/tmpmhgx63lf.d(97): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmhgx63lf.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163125
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements decremented by\
    \ 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l)\n    {\n        ret[i] = e - 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i, e; l)\n    {\n\
    \        ret[i] = e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ decremented by 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e -\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements decremented by 1.\n            \n*/\nlong[] decr_list(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i, e; l)\n    {\n\
    \        ret[i] = e - 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\n\
    unittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([]) == []);\n\
    \    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp9p4nnmen.d(91): Error: expression expected, not `unittest`

    /tmp/tmp9p4nnmen.d(92): Error: found `{` when expecting `;` following statement

    /tmp/tmp9p4nnmen.d(99): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9p4nnmen.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163124
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\nunittest\n{\n    alias candidate = incr_list;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([3L, 2L, 1L]) == [4L,\
    \ 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L,\
    \ 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163125
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list2(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n\
    \    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list3(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list4(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i, e; l)\n    {\n\
    \        ret[i] = e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list5(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list6(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n\
    \    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list7(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l)\n    {\n        ret\nunittest\n{\n    alias candidate =\
    \ incr_list;\n\n    assert(candidate([]) == []);\n    assert(candidate([3L, 2L,\
    \ 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L, 0L,\
    \ 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpd573vbg7.d(91): Error: found `unittest` when expecting `;` following
    statement

    /tmp/tmpd573vbg7.d(99): Error: found `End of File` when expecting `}` following
    compound statement

    /tmp/tmpd573vbg7.d(99): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpd573vbg7.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163124
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ r = new long[l.length];\n    foreach (i, e; l)\n        r[i] = e + 1;\n    return\
    \ r;\n}\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[]\
    \ incr_list(long[] l) \n{\n    long[] r = new long[l.length];\n    foreach (i,\
    \ e; l)\n        r[i] = e + 1;\n    return r;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ r = new long[l.length];\n    foreach (i, e; l)\n        r[i] = e + 1;\n    return\
    \ r;\n}\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[]\
    \ incr_list(long[] l) \n{\n    long[] r = new long[l.length];\n    foreach (i,\
    \ e; l)\n        r[i] = e + 1;\n    return r;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ r = new long[l.length];\n    foreach (i, e; l)\n        r[i] = e + 1;\n    return\
    \ r;\n}\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[]\
    \ incr_list(long[] l) \n{\n    long[] r = new long[l.length];\n    foreach (i,\
    \ e; l)\n        r[i] = e + 1;\n    return r;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ r = new long[l.length];\n    foreach (i, e; l)\n        r[i] = e + 1;\n    return\
    \ r;\n}\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[]\
    \ incr_list(long[] l) \n\nunittest\n{\n    alias candidate = incr_list;\n\n  \
    \  assert(candidate([]) == []);\n    assert(candidate([3L, 2L, 1L]) == [4L, 3L,\
    \ 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L,\
    \ 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp91uwez5u.d(86): Error: semicolon expected following function declaration

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp91uwez5u.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163125
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_2(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n\
    \    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list_3(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list_4(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i, e; l)\n    {\n\
    \        ret[i] = e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list_5(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_6(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n\
    \    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list_7(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l)\nunittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp9yeh7l52.d(89): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9yeh7l52.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163124
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\nunittest\n{\n    alias candidate = incr_list;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([3L, 2L, 1L]) == [4L,\
    \ 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L,\
    \ 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163125
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_2(long[] l) \n{\n    return l.map!(a\
    \ => a + 1)();\n}\n/*\nReturn list with elements incremented by 1.\n         \
    \   \n*/\nlong[] incr_list_3(long[] l) \n{\n    return l.map!(a => a + 1)();\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list_4(long[]\
    \ l) \n{\n    return l.map!(a => a + 1)();\n}\n/*\nReturn list with elements incremented\
    \ by 1.\n            \n*/\nlong[] incr_list_5(long[] l) \n{\n    return l.map!(a\
    \ => a + 1)();\n}\n/*\nReturn list with elements incremented by 1.\n         \
    \   \n*/\nlong[] incr_list_6(long[] l) \n{\n    return l.map!(a => a + 1)();\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list_7(long[]\
    \ l) \n{\n    return l.map!(a => a + 1)();\n}\n/*\nReturn list with elements incremented\
    \ by 1.\n            \n*/\nlong[] incr_list_8(long[] l) \n{\n    return l.map!(a\
    \ => a + 1)();\n}\n/*\nReturn list with elements incremented by 1.\n         \
    \   \n*/\nlong[] incr_list_9(long[] l) \n{\n    return l.map!(a => a + 1)();\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list_10(long[]\
    \ l) \n{\n    return l.map!(a => a + 1)();\n}\n/*\nReturn list with elements incremented\
    \ by 1.\nunittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpb2ll8ct4.d(88): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpb2ll8ct4.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163125
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret;\n    foreach(i; l)\n    {\n        ret ~= i + 1;\n    }\n    return ret;\n\
    }\nunittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([]) ==\
    \ []);\n    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163125
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list2(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n\
    \    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list3(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list4(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i, e; l)\n    {\n\
    \        ret[i] = e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list5(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list6(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n\
    \    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list7(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l)\n    {\n        ret\nunittest\n{\n    alias candidate =\
    \ incr_list;\n\n    assert(candidate([]) == []);\n    assert(candidate([3L, 2L,\
    \ 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L, 0L,\
    \ 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpd573vbg7.d(91): Error: found `unittest` when expecting `;` following
    statement

    /tmp/tmpd573vbg7.d(99): Error: found `End of File` when expecting `}` following
    compound statement

    /tmp/tmpd573vbg7.d(99): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpd573vbg7.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163124
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements decremented by\
    \ 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l)\n    {\n        ret[i] = e - 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i, e; l)\n    {\n\
    \        ret[i] = e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ decremented by 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e -\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements decremented by 1.\n            \n*/\nlong[] decr_list(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i, e; l)\n    {\n\
    \        ret[i] = e - 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\n\
    unittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([]) == []);\n\
    \    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp9p4nnmen.d(91): Error: expression expected, not `unittest`

    /tmp/tmp9p4nnmen.d(92): Error: found `{` when expecting `;` following statement

    /tmp/tmp9p4nnmen.d(99): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9p4nnmen.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163124
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements decremented by\
    \ 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i,e; l)\n    {\n        ret[i] = e - 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i,e; l)\n    {\n \
    \       ret[i] = e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ decremented by 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e -\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i,e; l)\n    {\n        ret[i] = e + 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements decremented by 1.\n            \n*/\nlong[] decr_list(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i,e; l)\n    {\n \
    \       ret[i] = e - 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e +\n\
    unittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([]) == []);\n\
    \    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpeo8dnwjp.d(91): Error: expression expected, not `unittest`

    /tmp/tmpeo8dnwjp.d(92): Error: found `{` when expecting `;` following statement

    /tmp/tmpeo8dnwjp.d(99): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpeo8dnwjp.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163124
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret;\n    foreach(i; l)\n    {\n        ret ~= i + 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list_2(long[]\
    \ l) \n{\n    long[] ret;\n    foreach(i; l)\n    {\n        ret ~= i + 1;\n \
    \   }\n    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n \
    \           \n*/\nlong[] incr_list_3(long[] l) \n{\n    long[] ret;\n    foreach(i;\
    \ l)\n    {\n        ret ~= i + 1;\n    }\n    return ret;\n}\n/*\nReturn list\
    \ with elements incremented by 1.\n            \n*/\nlong[] incr_list_4(long[]\
    \ l) \n{\n    long[] ret;\n    foreach(i; l)\n    {\n        ret ~= i + 1;\n \
    \   }\n    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n \
    \           \n*/\nlong[] incr_list_5(long[] l) \n{\n    long[] ret;\n    foreach(i;\
    \ l)\n    {\n        ret ~= i + 1;\n    }\n    return ret;\n}\n/*\nReturn list\
    \ with elements incremented by 1.\n            \n*/\nlong[] incr_list_6(long[]\
    \ l) \n{\n    long[] ret;\n    foreach(i; l)\n    {\n        ret ~= i + 1;\n \
    \   }\n    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n \
    \           \n*/\nlong[] incr_list_7(long[] l) \n{\n    long[] ret;\n    foreach(i;\
    \ l)\n    {\n        ret ~= i + 1;\n    }\n    return ret;\n}\n/*\nReturn list\
    \ with elements incremented by 1.\n            \n*/\nlong[] incr_list_8(long[]\
    \ l) \n{\n    long[] ret;\n    foreach(i; l)\n    {\n       \nunittest\n{\n  \
    \  alias candidate = incr_list;\n\n    assert(candidate([]) == []);\n    assert(candidate([3L,\
    \ 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L,\
    \ 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpfbgd1080.d(104): Error: found `unittest` instead of statement

    /tmp/tmpfbgd1080.d(112): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfbgd1080.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163125
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\nunittest\n{\n    alias candidate = incr_list;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([3L, 2L, 1L]) == [4L,\
    \ 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L,\
    \ 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163125
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_2(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n\
    \    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list_3(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list_4(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i, e; l)\n    {\n\
    \        ret[i] = e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list_5(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_6(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n\
    \    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list_7(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l)\nunittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp9yeh7l52.d(89): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9yeh7l52.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163124
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list2(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e + 1;\n    }\n\
    \    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list3(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i,e; l)\n    {\n        ret[i] = e + 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list4(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i,e; l)\n    {\n \
    \       ret[i] = e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list5(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list6(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e + 1;\n    }\n\
    \    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list7(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i,e; l)\n    {\n        ret\nunittest\n{\n    alias candidate = incr_list;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([3L, 2L, 1L]) == [4L,\
    \ 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L,\
    \ 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpu9sjpyt5.d(91): Error: found `unittest` when expecting `;` following
    statement

    /tmp/tmpu9sjpyt5.d(99): Error: found `End of File` when expecting `}` following
    compound statement

    /tmp/tmpu9sjpyt5.d(99): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpu9sjpyt5.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163125
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements decremented by\
    \ 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l)\n    {\n        ret[i] = e - 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i, e; l)\n    {\n\
    \        ret[i] = e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ decremented by 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e -\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements decremented by 1.\n            \n*/\nlong[] decr_list(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i, e; l)\n    {\n\
    \        ret[i] = e - 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\n\
    unittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([]) == []);\n\
    \    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp9p4nnmen.d(91): Error: expression expected, not `unittest`

    /tmp/tmp9p4nnmen.d(92): Error: found `{` when expecting `;` following statement

    /tmp/tmp9p4nnmen.d(99): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9p4nnmen.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163124
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\nunittest\n{\n    alias candidate = incr_list;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([3L, 2L, 1L]) == [4L,\
    \ 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L,\
    \ 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163125
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ r = new long[l.length];\n    foreach (i, e; l)\n    {\n        r[i] = e + 1;\n\
    \    }\n    return r;\n}\n/*\nReturn list with elements decremented by 1.\n  \
    \          \n*/\nlong[] decr_list(long[] l) \n{\n    long[] r = new long[l.length];\n\
    \    foreach (i, e; l)\n    {\n        r[i] = e - 1;\n    }\n    return r;\n}\n\
    /*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list(long[]\
    \ l) \n{\n    long[] r = new long[l.length];\n    foreach (i, e; l)\n    {\n \
    \       r[i] = e + 1;\n    }\n    return r;\n}\n/*\nReturn list with elements\
    \ decremented by 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[]\
    \ r = new long[l.length];\n    foreach (i, e; l)\n    {\n        r[i] = e - 1;\n\
    \    }\n    return r;\n}\n/*\nReturn list with elements incremented by 1.\n  \
    \          \n*/\nlong[] incr_list(long[] l) \n{\n    long[] r = new long[l.length];\n\
    \    foreach (i, e; l)\n    {\n        r[i] = e + 1;\n    }\n    return r;\n}\n\
    /*\nReturn list with elements decremented by 1.\n            \n*/\nlong[] decr_list(long[]\
    \ l) \n{\n    long[] r = new long[l.length];\n    foreach (i, e; l)\n    {\n \
    \       r[i] = e - 1;\n    }\n    return r;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ r = new long[l.length];\n    foreach (i, e; l)\n    {\n        r[i] = e +\n\
    unittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([]) == []);\n\
    \    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpdnze9mpt.d(91): Error: expression expected, not `unittest`

    /tmp/tmpdnze9mpt.d(92): Error: found `{` when expecting `;` following statement

    /tmp/tmpdnze9mpt.d(99): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdnze9mpt.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163125
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ res = new long[l.length];\n    foreach (i, e; l) \n    {\n        res[i] = e\
    \ + 1;\n    }\n    return res;\n}\nunittest\n{\n    alias candidate = incr_list;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([3L, 2L, 1L]) == [4L,\
    \ 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L,\
    \ 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163125
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ res = new long[l.length];\n    foreach (i, e; l) \n    {\n        res[i] = e\
    \ + 1;\n    }\n    return res;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_2(long[] l) \n{\n    long[] res = new\
    \ long[l.length];\n    foreach (i, e; l) \n    {\n        res[i] = e + 1;\n  \
    \  }\n    return res;\n}\n/*\nReturn list with elements incremented by 1.\n  \
    \          \n*/\nlong[] incr_list_3(long[] l) \n{\n    long[] res = new long[l.length];\n\
    \    foreach (i, e; l) \n    {\n        res[i] = e + 1;\n    }\n    return res;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list_4(long[]\
    \ l) \n{\n    long[] res = new long[l.length];\n    foreach (i, e; l) \n    {\n\
    \        res[i] = e + 1;\n    }\n    return res;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list_5(long[] l) \n{\n    long[]\
    \ res = new long[l.length];\n    foreach (i, e; l) \n    {\n        res[i] = e\
    \ + 1;\n    }\n    return res;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_6(long[] l) \n{\n    long[] res = new\
    \ long[l.length];\n    foreach (i, e; l) \n    {\n        res[i] = e + 1;\n  \
    \  }\n    return res;\n}\n/*\nReturn list with elements incremented by 1.\n  \
    \          \n*/\nlong[] incr_list_7(long[] l) \n{\n    long[] res = new long[l.length];\n\
    \    foreach (\nunittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpyqtp_8b7.d(89): Error: basic type expected, not `unittest`

    /tmp/tmpyqtp_8b7.d(89): Error: no identifier for declarator `_error_`

    /tmp/tmpyqtp_8b7.d(89): Error: found `unittest` when expecting `;`

    /tmp/tmpyqtp_8b7.d(97): Error: found `void` when expecting `)`

    /tmp/tmpyqtp_8b7.d(97): Error: found `{` when expecting `;` following statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyqtp_8b7.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163124
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret;\n    foreach(i; l)\n    {\n        ret ~= i + 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list_2(long[]\
    \ l) \n{\n    long[] ret;\n    foreach(i; l)\n    {\n        ret ~= i + 1;\n \
    \   }\n    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n \
    \           \n*/\nlong[] incr_list_3(long[] l) \n{\n    long[] ret;\n    foreach(i;\
    \ l)\n    {\n        ret ~= i + 1;\n    }\n    return ret;\n}\n/*\nReturn list\
    \ with elements incremented by 1.\n            \n*/\nlong[] incr_list_4(long[]\
    \ l) \n{\n    long[] ret;\n    foreach(i; l)\n    {\n        ret ~= i + 1;\n \
    \   }\n    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n \
    \           \n*/\nlong[] incr_list_5(long[] l) \n{\n    long[] ret;\n    foreach(i;\
    \ l)\n    {\n        ret ~= i + 1;\n    }\n    return ret;\n}\n/*\nReturn list\
    \ with elements incremented by 1.\n            \n*/\nlong[] incr_list_6(long[]\
    \ l) \n{\n    long[] ret;\n    foreach(i; l)\n    {\n        ret ~= i + 1;\n \
    \   }\n    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n \
    \           \n*/\nlong[] incr_list_7(long[] l) \n{\n    long[] ret;\n    foreach(i;\
    \ l)\n    {\n        ret ~= i + 1;\n    }\n    return ret;\n}\n/*\nReturn list\
    \ with elements incremented by 1.\n            \n*/\nlong[] incr_list_8(long[]\
    \ l) \n{\n    long[] ret;\n    foreach(i; l)\n    {\n       \nunittest\n{\n  \
    \  alias candidate = incr_list;\n\n    assert(candidate([]) == []);\n    assert(candidate([3L,\
    \ 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L,\
    \ 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpfbgd1080.d(104): Error: found `unittest` instead of statement

    /tmp/tmpfbgd1080.d(112): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfbgd1080.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163125
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i,e; l)\n        ret[i] = e + 1;\n  \
    \  return ret;\n}\n/*\nReturn list with elements incremented by 1.\n         \
    \   \n*/\nlong[] incr_list_foreach(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(e; l)\n        ret ~= e + 1;\n    return ret;\n}\n/*\nReturn list\
    \ with elements incremented by 1.\n            \n*/\nlong[] incr_list_foreach_index(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach_index(i; l)\n    \
    \    ret[i] = l[i] + 1;\n    return ret;\n}\n/*\nReturn list with elements incremented\
    \ by 1.\n            \n*/\nlong[] incr_list_foreach_reverse(long[] l) \n{\n  \
    \  long[] ret = new long[l.length];\n    foreach_reverse(e; l)\n        ret ~=\
    \ e + 1;\n    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n\
    \            \n*/\nlong[] incr_list_foreach_reverse_index(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach_reverse_index(i; l)\n        ret[i] =\
    \ l[i] + 1;\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_foreach_reverse_index_array(long[] l)\
    \ \n{\n    long[] ret = new long[l.length];\n    foreach_reverse_index(i,e; l)\n\
    \        ret[i] = e + 1;\n    return ret;\n}\n/*\nReturn list with elements incremented\
    \ by 1.\n            \n*/\nlong[] incr_list_foreach_reverse_array(long[] l) \n\
    {\n    long[] ret = new long[l.length];\n    foreach_reverse(i,e; l)\n       \
    \ ret[\nunittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbknubu53.d(32): Error: found `;` when expecting `,`

    /tmp/tmpbknubu53.d(33): Error: found `ret` when expecting `;` following statement

    /tmp/tmpbknubu53.d(54): Error: found `;` when expecting `,`

    /tmp/tmpbknubu53.d(55): Error: found `ret` when expecting `;` following statement

    /tmp/tmpbknubu53.d(65): Error: found `;` when expecting `,`

    /tmp/tmpbknubu53.d(66): Error: found `ret` when expecting `;` following statement

    /tmp/tmpbknubu53.d(78): Error: expression expected, not `unittest`

    /tmp/tmpbknubu53.d(79): Error: found `{` when expecting `,`

    /tmp/tmpbknubu53.d(80): Error: expression expected, not `alias`

    /tmp/tmpbknubu53.d(80): Error: found `candidate` when expecting `,`

    /tmp/tmpbknubu53.d(80): Error: expression expected, not `=`

    /tmp/tmpbknubu53.d(80): Error: found `incr_list` when expecting `,`

    /tmp/tmpbknubu53.d(80): Error: expression expected, not `;`

    /tmp/tmpbknubu53.d(82): Error: found `assert` when expecting `,`

    /tmp/tmpbknubu53.d(82): Error: found `;` when expecting `,`

    /tmp/tmpbknubu53.d(83): Er'
  stdout: ''
  timestamp: 1660163125
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements decremented by\
    \ 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i,e; l)\n    {\n        ret[i] = e - 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i,e; l)\n    {\n \
    \       ret[i] = e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ decremented by 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e -\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i,e; l)\n    {\n        ret[i] = e + 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements decremented by 1.\n            \n*/\nlong[] decr_list(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i,e; l)\n    {\n \
    \       ret[i] = e - 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e +\n\
    unittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([]) == []);\n\
    \    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpeo8dnwjp.d(91): Error: expression expected, not `unittest`

    /tmp/tmpeo8dnwjp.d(92): Error: found `{` when expecting `;` following statement

    /tmp/tmpeo8dnwjp.d(99): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpeo8dnwjp.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163124
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l) {\n        ret[i] = e + 1;\n\
    \    }\n    return ret;\n}\n/*\nReturn list with elements decremented by 1.\n\
    \            \n*/\nlong[] decr_list(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l) {\n        ret[i] = e - 1;\n    }\n    return ret;\n}\n\
    /*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i, e; l) {\n     \
    \   ret[i] = e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ decremented by 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l) {\n        ret[i] = e - 1;\n\
    \    }\n    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n\
    \            \n*/\nlong[] incr_list(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l) {\n        ret[i] = e + 1;\n    }\n    return ret;\n}\n\
    /*\nReturn list with elements decremented by 1.\n            \n*/\nlong[] decr_list(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i, e; l) {\n     \
    \   ret[i] = e - 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l) {\n        ret[i] = e + 1;\n\
    \    }\n    return ret;\n}\n/*\nunittest\n{\n    alias candidate = incr_list;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([3L, 2L, 1L]) == [4L,\
    \ 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L,\
    \ 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp44v9eubt.d(87): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp44v9eubt.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163125
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ res = new long[l.length];\n    foreach (i, e; l)\n    {\n        res[i] = e\
    \ + 1;\n    }\n    return res;\n}\n/*\nReturn list with elements decremented by\
    \ 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[] res = new long[l.length];\n\
    \    foreach (i, e; l)\n    {\n        res[i] = e - 1;\n    }\n    return res;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list(long[]\
    \ l) \n{\n    long[] res = new long[l.length];\n    foreach (i, e; l)\n    {\n\
    \        res[i] = e + 1;\n    }\n    return res;\n}\n/*\nReturn list with elements\
    \ decremented by 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[]\
    \ res = new long[l.length];\n    foreach (i, e; l)\n    {\n        res[i] = e\
    \ - 1;\n    }\n    return res;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[] res = new long[l.length];\n\
    \    foreach (i, e; l)\n    {\n        res[i] = e + 1;\n    }\n    return res;\n\
    }\n/*\nReturn list with elements decremented by 1.\n            \n*/\nlong[] decr_list(long[]\
    \ l) \n{\n    long[] res = new long[l.length];\n    foreach (i, e; l)\n    {\n\
    \        res[i] = e - 1;\n    }\n    return res;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ res = new long[l.length];\n    foreach (i, e; l)\n    {\n        res[i] = e\
    \ +\nunittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmppk_w3_8n.d(91): Error: expression expected, not `unittest`

    /tmp/tmppk_w3_8n.d(92): Error: found `{` when expecting `;` following statement

    /tmp/tmppk_w3_8n.d(99): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmppk_w3_8n.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163124
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_2(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n\
    \    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list_3(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list_4(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i, e; l)\n    {\n\
    \        ret[i] = e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list_5(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_6(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n\
    \    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list_7(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l)\nunittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp9yeh7l52.d(89): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9yeh7l52.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163124
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_2(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e + 1;\n    }\n\
    \    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list_3(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i,e; l)\n    {\n        ret[i] = e + 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list_4(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i,e; l)\n    {\n \
    \       ret[i] = e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list_5(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_6(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e + 1;\n    }\n\
    \    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list_7(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i,e; l)\nunittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp9d2d9vks.d(89): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9d2d9vks.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163124
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_2(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e + 1;\n    }\n\
    \    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list_3(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i,e; l)\n    {\n        ret[i] = e + 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list_4(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i,e; l)\n    {\n \
    \       ret[i] = e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list_5(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_6(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e + 1;\n    }\n\
    \    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list_7(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i,e; l)\nunittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp9d2d9vks.d(89): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9d2d9vks.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163124
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l) \n    {\n        ret[i] = e\
    \ + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list2(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i, e; l) \n    {\n        ret[i] = e + 1;\n   \
    \ }\n    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n   \
    \         \n*/\nlong[] incr_list3(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l) \n    {\n        ret[i] = e + 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list4(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i, e; l) \n    {\n\
    \        ret[i] = e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list5(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l) \n    {\n        ret[i] = e\
    \ + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list6(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i, e; l) \n    {\n        ret[i] = e + 1;\n   \
    \ }\n    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n   \
    \         \n*/\nlong[] incr_list7(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l)\nunittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmprgelfv8z.d(89): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprgelfv8z.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163124
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ r = new long[l.length];\n    foreach (i, e; l)\n        r[i] = e + 1;\n    return\
    \ r;\n}\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[]\
    \ incr_list_2(long[] l) \n{\n    long[] r = new long[l.length];\n    foreach (i,\
    \ e; l)\n        r[i] = e + 1;\n    return r;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list_3(long[] l) \n{\n    long[]\
    \ r = new long[l.length];\n    foreach (i, e; l)\n        r[i] = e + 1;\n    return\
    \ r;\n}\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[]\
    \ incr_list_4(long[] l) \n{\n    long[] r = new long[l.length];\n    foreach (i,\
    \ e; l)\n        r[i] = e + 1;\n    return r;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list_5(long[] l) \n{\n    long[]\
    \ r = new long[l.length];\n    foreach (i, e; l)\n        r[i] = e + 1;\n    return\
    \ r;\n}\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[]\
    \ incr_list_6(long[] l) \n{\n    long[] r = new long[l.length];\n    foreach (i,\
    \ e; l)\n        r[i] = e + 1;\n    return r;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list_7(long[] l) \n{\n    long[]\
    \ r = new long[l.length];\n    foreach (i, e; l)\n        r[i] = e + 1;\n    return\
    \ r;\n}\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong\n\
    unittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([]) == []);\n\
    \    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpqrn5hwg_.d(85): Error: no identifier for declarator `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqrn5hwg_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163125
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l) \n    {\n        ret[i] = e\
    \ + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_2(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i, e; l) \n    {\n        ret[i] = e + 1;\n   \
    \ }\n    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n   \
    \         \n*/\nlong[] incr_list_3(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l) \n    {\n        ret[i] = e + 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list_4(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i, e; l) \n    {\n\
    \        ret[i] = e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list_5(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l) \n    {\n        ret[i] = e\
    \ + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_6(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i, e; l) \n    {\n        ret[i] = e + 1;\n   \
    \ }\n    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n   \
    \         \n*/\nlong[] incr_list_7(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(\nunittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpdk06tja3.d(89): Error: basic type expected, not `unittest`

    /tmp/tmpdk06tja3.d(89): Error: no identifier for declarator `_error_`

    /tmp/tmpdk06tja3.d(89): Error: found `unittest` when expecting `;`

    /tmp/tmpdk06tja3.d(97): Error: found `void` when expecting `)`

    /tmp/tmpdk06tja3.d(97): Error: found `{` when expecting `;` following statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdk06tja3.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163124
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i,e; l)\n        ret[i] = e + 1;\n  \
    \  return ret;\n}\nunittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163125
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements decremented by\
    \ 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l)\n    {\n        ret[i] = e - 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i, e; l)\n    {\n\
    \        ret[i] = e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ decremented by 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e -\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements decremented by 1.\n            \n*/\nlong[] decr_list(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i, e; l)\n    {\n\
    \        ret[i] = e - 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\n\
    unittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([]) == []);\n\
    \    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp9p4nnmen.d(91): Error: expression expected, not `unittest`

    /tmp/tmp9p4nnmen.d(92): Error: found `{` when expecting `;` following statement

    /tmp/tmp9p4nnmen.d(99): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9p4nnmen.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163124
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ r = new long[l.length];\n    foreach (i, e; l)\n    {\n        r[i] = e + 1;\n\
    \    }\n    return r;\n}\nunittest\n{\n    alias candidate = incr_list;\n\n  \
    \  assert(candidate([]) == []);\n    assert(candidate([3L, 2L, 1L]) == [4L, 3L,\
    \ 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L,\
    \ 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163125
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    for (int i = 0; i < l.length; i++) {\n      \
    \  ret[i] = l[i] + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ decremented by 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    for (int i = 0; i < l.length; i++) {\n      \
    \  ret[i] = l[i] - 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l, long[] ret)\
    \ \n{\n    for (int i = 0; i < l.length; i++) {\n        ret[i] = l[i] + 1;\n\
    \    }\n    return ret;\n}\n/*\nReturn list with elements decremented by 1.\n\
    \            \n*/\nlong[] decr_list(long[] l, long[] ret) \n{\n    for (int i\
    \ = 0; i < l.length; i++) {\n        ret[i] = l[i] - 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list(long[]\
    \ l, long[] ret, int start) \n{\n    for (int i = start; i < l.length; i++) {\n\
    \        ret[i] = l[i] + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ decremented by 1.\n            \n*/\nlong[] decr_list(long[] l, long[] ret,\
    \ int start) \n{\n    for (int i = start; i < l.length; i++) {\n        ret[i]\
    \ = l[i] - 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented\
    \ by 1.\n            \n*/\nlong[] incr_list(long[] l, long[] ret, int start, int\
    \ end) \n{\n    for (int i = start; i < end; i\nunittest\n{\n    alias candidate\
    \ = incr_list;\n\n    assert(candidate([]) == []);\n    assert(candidate([3L,\
    \ 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L,\
    \ 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmplwtwqvp_.d(78): Error: found `unittest` when expecting `)`

    /tmp/tmplwtwqvp_.d(86): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplwtwqvp_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163125
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ r = new long[l.length];\n    foreach (i, e; l) \n    {\n        r[i] = e + 1;\n\
    \    }\n    return r;\n}\nunittest\n{\n    alias candidate = incr_list;\n\n  \
    \  assert(candidate([]) == []);\n    assert(candidate([3L, 2L, 1L]) == [4L, 3L,\
    \ 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L,\
    \ 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163125
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\nunittest\n{\n    alias candidate = incr_list;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([3L, 2L, 1L]) == [4L,\
    \ 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L,\
    \ 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163125
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ res = new long[l.length];\n    foreach (i, e; l)\n    {\n        res[i] = e\
    \ + 1;\n    }\n    return res;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_2(long[] l) \n{\n    long[] res = new\
    \ long[l.length];\n    foreach (i, e; l)\n    {\n        res[i] = e + 1;\n   \
    \ }\n    return res;\n}\n/*\nReturn list with elements incremented by 1.\n   \
    \         \n*/\nlong[] incr_list_3(long[] l) \n{\n    long[] res = new long[l.length];\n\
    \    foreach (i, e; l)\n    {\n        res[i] = e + 1;\n    }\n    return res;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list_4(long[]\
    \ l) \n{\n    long[] res = new long[l.length];\n    foreach (i, e; l)\n    {\n\
    \        res[i] = e + 1;\n    }\n    return res;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list_5(long[] l) \n{\n    long[]\
    \ res = new long[l.length];\n    foreach (i, e; l)\n    {\n        res[i] = e\
    \ + 1;\n    }\n    return res;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_6(long[] l) \n{\n    long[] res = new\
    \ long[l.length];\n    foreach (i, e; l)\n    {\n        res[i] = e + 1;\n   \
    \ }\n    return res;\n}\n/*\nReturn list with elements incremented by 1.\n   \
    \         \n*/\nlong[] incr_list_7(long[] l) \n{\n    long[] res = new long[l.length];\n\
    \    foreach (i, e; l)\nunittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpo9qdjxrx.d(89): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpo9qdjxrx.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163124
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_foreach(long[] l) \n{\n    long[] ret\
    \ = new long[l.length];\n    foreach(e; l)\n    {\n        ret ~= e + 1;\n   \
    \ }\n    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n   \
    \         \n*/\nlong[] incr_list_foreach_index(long[] l) \n{\n    long[] ret =\
    \ new long[l.length];\n    foreach_index(i; l)\n    {\n        ret[i] = l[i] +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_foreach_reverse(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach_reverse(e; l)\n    {\n        ret ~=\
    \ e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented\
    \ by 1.\n            \n*/\nlong[] incr_list_foreach_reverse_index(long[] l) \n\
    {\n    long[] ret = new long[l.length];\n    foreach_reverse_index(i; l)\n   \
    \ {\n        ret[i] = l[i] + 1;\n    }\n    return ret;\n}\n/*\nReturn list with\
    \ elements incremented by 1.\n            \n*/\nlong[] incr_list_foreach_reverse_index_range(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach_reverse_index(i; l[0..$-1])\n\
    \    {\n        ret[i] = l[i] + 1;\n    }\n    return ret;\n}\n/*\nReturn list\
    \ with elements incremented by 1.\n            \n*/\nlong[] incr_list_fore\nunittest\n\
    {\n    alias candidate = incr_list;\n\n    assert(candidate([]) == []);\n    assert(candidate([3L,\
    \ 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L,\
    \ 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpatnsj1d3.d(36): Error: found `;` when expecting `,`

    /tmp/tmpatnsj1d3.d(37): Error: found `{` when expecting `;` following statement

    /tmp/tmpatnsj1d3.d(40): Error: declaration expected, not `return`

    /tmp/tmpatnsj1d3.d(41): Error: unrecognized declaration

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpatnsj1d3.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163125
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ res;\n    foreach(elem; l)\n    {\n        res ~= elem + 1;\n    }\n    return\
    \ res;\n}\n/*\nReturn list with elements incremented by 1.\n            \n*/\n\
    long[] incr_list2(long[] l) \n{\n    long[] res;\n    foreach(elem; l)\n    {\n\
    \        res ~= elem + 1;\n    }\n    return res;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list3(long[] l) \n{\n    long[]\
    \ res;\n    foreach(elem; l)\n    {\n        res ~= elem + 1;\n    }\n    return\
    \ res;\n}\n/*\nReturn list with elements incremented by 1.\n            \n*/\n\
    long[] incr_list4(long[] l) \n{\n    long[] res;\n    foreach(elem; l)\n    {\n\
    \        res ~= elem + 1;\n    }\n    return res;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list5(long[] l) \n{\n    long[]\
    \ res;\n    foreach(elem; l)\n    {\n        res ~= elem + 1;\n    }\n    return\
    \ res;\n}\n/*\nReturn list with elements incremented by 1.\n            \n*/\n\
    long[] incr_list6(long[] l) \n{\n    long[] res;\n    foreach(elem; l)\n    {\n\
    \        res ~= elem + 1;\n    }\n    return res;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list7(long[] l) \n{\n    long[]\
    \ res;\n    foreach(elem; l)\n    {\n        res ~= elem + 1;\n    }\n    return\
    \ res;\n}\n/*\nReturn list with elements incremented by 1.\n            \n*/\n\
    long[] incr_list8(long[] l) \n{\n    long[] res;\n    foreach(elem\nunittest\n\
    {\n    alias candidate = incr_list;\n\n    assert(candidate([]) == []);\n    assert(candidate([3L,\
    \ 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L,\
    \ 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpeihif__k.d(102): Error: no identifier for declarator `elem`

    /tmp/tmpeihif__k.d(102): Error: found `unittest` when expecting `;`

    /tmp/tmpeihif__k.d(110): Error: found `void` when expecting `)`

    /tmp/tmpeihif__k.d(110): Error: found `{` when expecting `;` following statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpeihif__k.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163125
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_2(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e + 1;\n    }\n\
    \    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list_3(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i,e; l)\n    {\n        ret[i] = e + 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list_4(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i,e; l)\n    {\n \
    \       ret[i] = e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list_5(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_6(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e + 1;\n    }\n\
    \    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list_7(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i,e; l)\nunittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp9d2d9vks.d(89): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9d2d9vks.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163124
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_2(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n\
    \    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list_3(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list_4(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i, e; l)\n    {\n\
    \        ret[i] = e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list_5(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_6(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n\
    \    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list_7(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l)\nunittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp9yeh7l52.d(89): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9yeh7l52.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163124
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_range(long[] l) \n{\n    long[] ret =\
    \ new long[l.length];\n    foreach(i, e; l[])\n    {\n        ret[i] = e + 1;\n\
    \    }\n    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n\
    \            \n*/\nlong[] incr_list_range_2(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i, e; l[0 .. l.length])\n    {\n        ret[i]\
    \ = e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented\
    \ by 1.\n            \n*/\nlong[] incr_list_range_3(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l[0 .. $])\n    {\n        ret[i]\
    \ = e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented\
    \ by 1.\n            \n*/\nlong[] incr_list_range_4(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l[$ - l.length .. $])\n    {\n\
    \        ret[i] = e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list_range_5(long[] l) \n{\n\
    \    long[] ret = new long[l.length];\n    foreach(i, e; l[$ - l.length .. $])\n\
    \    {\n        ret[i] = e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with\
    \ elements incremented by 1.\n            \n*/\nlong[] incr_\nunittest\n{\n  \
    \  alias candidate = incr_list;\n\n    assert(candidate([]) == []);\n    assert(candidate([3L,\
    \ 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L,\
    \ 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmptq0vwtti.d(86): Error: semicolon expected, not `unittest`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptq0vwtti.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163125
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list2(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n\
    \    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list3(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list4(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i, e; l)\n    {\n\
    \        ret[i] = e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list5(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list6(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n\
    \    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list7(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l)\n    {\n        ret\nunittest\n{\n    alias candidate =\
    \ incr_list;\n\n    assert(candidate([]) == []);\n    assert(candidate([3L, 2L,\
    \ 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L, 0L,\
    \ 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpd573vbg7.d(91): Error: found `unittest` when expecting `;` following
    statement

    /tmp/tmpd573vbg7.d(99): Error: found `End of File` when expecting `}` following
    compound statement

    /tmp/tmpd573vbg7.d(99): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpd573vbg7.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163124
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_2(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n\
    \    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list_3(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list_4(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i, e; l)\n    {\n\
    \        ret[i] = e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list_5(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_6(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n\
    \    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list_7(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l)\nunittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp9yeh7l52.d(89): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9yeh7l52.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163124
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ r = new long[l.length];\n    foreach (i, e; l)\n    {\n        r[i] = e + 1;\n\
    \    }\n    return r;\n}\nunittest\n{\n    alias candidate = incr_list;\n\n  \
    \  assert(candidate([]) == []);\n    assert(candidate([3L, 2L, 1L]) == [4L, 3L,\
    \ 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L,\
    \ 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163125
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ res = new long[l.length];\n    foreach (i, e; l)\n    {\n        res[i] = e\
    \ + 1;\n    }\n    return res;\n}\nunittest\n{\n    alias candidate = incr_list;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([3L, 2L, 1L]) == [4L,\
    \ 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L,\
    \ 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163125
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret;\n    foreach(i; l)\n    {\n        ret ~= i + 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list_range(long[]\
    \ l) \n{\n    long[] ret;\n    foreach(i; l)\n    {\n        ret ~= i + 1;\n \
    \   }\n    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n \
    \           \n*/\nlong[] incr_list_foreach(long[] l) \n{\n    long[] ret;\n  \
    \  foreach(i; l)\n    {\n        ret ~= i + 1;\n    }\n    return ret;\n}\n/*\n\
    Return list with elements incremented by 1.\n            \n*/\nlong[] incr_list_foreach_range(long[]\
    \ l) \n{\n    long[] ret;\n    foreach(i; l)\n    {\n        ret ~= i + 1;\n \
    \   }\n    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n \
    \           \n*/\nlong[] incr_list_foreach_index(long[] l) \n{\n    long[] ret;\n\
    \    foreach(i; l)\n    {\n        ret ~= i + 1;\n    }\n    return ret;\n}\n\
    /*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list_foreach_index_range(long[]\
    \ l) \n{\n    long[] ret;\n    foreach(i; l)\n    {\n        ret ~= i + 1;\n \
    \   }\n    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n \
    \           \n*/\nlong[] incr_list_foreach_index_range_ref(long[] l) \n{\n   \
    \ long[] ret;\n    foreach(i; l)\n    {\n        ret ~= i + 1;\n    }\n    return\
    \ ret;\n}\n/*\nReturn list with elements incremented by 1.\n            \n*/\n\
    long[] incr_list_foreach_index_range_ref_const\nunittest\n{\n    alias candidate\
    \ = incr_list;\n\n    assert(candidate([]) == []);\n    assert(candidate([3L,\
    \ 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L,\
    \ 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpr3jbly9f.d(99): Error: semicolon expected, not `unittest`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpr3jbly9f.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163125
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret;\n    foreach(i; l)\n        ret ~= i + 1;\n    return ret;\n}\n/*\nReturn\
    \ list with elements incremented by 1.\n            \n*/\nlong[] incr_list_2(long[]\
    \ l) \n{\n    long[] ret;\n    foreach(i; l)\n        ret ~= i + 1;\n    return\
    \ ret;\n}\n/*\nReturn list with elements incremented by 1.\n            \n*/\n\
    long[] incr_list_3(long[] l) \n{\n    long[] ret;\n    foreach(i; l)\n       \
    \ ret ~= i + 1;\n    return ret;\n}\n/*\nReturn list with elements incremented\
    \ by 1.\n            \n*/\nlong[] incr_list_4(long[] l) \n{\n    long[] ret;\n\
    \    foreach(i; l)\n        ret ~= i + 1;\n    return ret;\n}\n/*\nReturn list\
    \ with elements incremented by 1.\n            \n*/\nlong[] incr_list_5(long[]\
    \ l) \n{\n    long[] ret;\n    foreach(i; l)\n        ret ~= i + 1;\n    return\
    \ ret;\n}\n/*\nReturn list with elements incremented by 1.\n            \n*/\n\
    long[] incr_list_6(long[] l) \n{\n    long[] ret;\n    foreach(i; l)\n       \
    \ ret ~= i + 1;\n    return ret;\n}\n/*\nReturn list with elements incremented\
    \ by 1.\n            \n*/\nlong[] incr_list_7(long[] l) \n{\n    long[] ret;\n\
    \    foreach(i; l)\n        ret ~= i + 1;\n    return ret;\n}\n/*\nReturn list\
    \ with elements incremented by 1.\n            \n*/\nlong[] incr_list_8(long[]\
    \ l) \n{\n    long[] ret;\n    foreach(i; l)\n        ret ~= i + 1;\n    return\
    \ ret;\n}\n/*\nReturn list with elements incremented by 1.\n            \n*/\n\
    long[] incr_list_9(long[] l) \nunittest\n{\n    alias candidate = incr_list;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([3L, 2L, 1L]) == [4L,\
    \ 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L,\
    \ 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp867uqgov.d(96): Error: semicolon expected following function declaration

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp867uqgov.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163125
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n        ret[i] = e + 1;\n \
    \   return ret;\n}\n/*\nReturn list with elements incremented by 1.\n        \
    \    \n*/\nlong[] incr_list_range(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(e; l)\n        ret ~= e + 1;\n    return ret;\n}\n/*\nReturn list\
    \ with elements incremented by 1.\n            \n*/\nlong[] incr_list_index(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach_index(i; l)\n    \
    \    ret[i] = l[i] + 1;\n    return ret;\n}\n/*\nReturn list with elements incremented\
    \ by 1.\n            \n*/\nlong[] incr_list_index_range(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach_index(i; l)\n        ret ~= l[i] + 1;\n\
    \    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list_index_range_reverse(long[] l) \n{\n    long[] ret\
    \ = new long[l.length];\n    foreach_reverse(i; l)\n        ret ~= l[i] + 1;\n\
    \    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list_index_range_reverse_step(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach_reverse(i; l)\n        ret ~= l[i] +\
    \ 1;\n    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n  \
    \          \n*/\nlong[] incr_list_index_range_reverse_step_parallel(long[] l)\
    \ \n{\n    long[] ret = new long[l.length];\n    foreach_reverse(i; l)\n     \
    \   ret ~= l[i] + 1;\n\nunittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpnqi3mivi.d(32): Error: found `;` when expecting `,`

    /tmp/tmpnqi3mivi.d(33): Error: found `ret` when expecting `;` following statement

    /tmp/tmpnqi3mivi.d(43): Error: found `;` when expecting `,`

    /tmp/tmpnqi3mivi.d(44): Error: found `ret` when expecting `;` following statement

    /tmp/tmpnqi3mivi.d(44): Error: found `~=` instead of statement

    /tmp/tmpnqi3mivi.d(79): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnqi3mivi.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163125
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\nunittest\n{\n    alias candidate = incr_list;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([3L, 2L, 1L]) == [4L,\
    \ 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L,\
    \ 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163125
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n        ret[i] = e + 1;\n \
    \   return ret;\n}\n/*\nReturn list with elements decremented by 1.\n        \
    \    \n*/\nlong[] decr_list(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l)\n        ret[i] = e - 1;\n    return ret;\n}\n/*\nReturn\
    \ list with elements incremented by 1.\n            \n*/\nlong[] incr_list(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i, e; l)\n       \
    \ ret[i] = e + 1;\n    return ret;\n}\n/*\nReturn list with elements decremented\
    \ by 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i, e; l)\n        ret[i] = e - 1;\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i, e; l)\n       \
    \ ret[i] = e + 1;\n    return ret;\n}\n/*\nReturn list with elements decremented\
    \ by 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i, e; l)\n        ret[i] = e - 1;\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i, e; l)\n       \
    \ ret[i] = e + 1;\n    return ret;\n}\n/*\nReturn list with elements decremented\
    \ by 1.\n            \n*/\nlong[] decr_list(long[] l) \n\nunittest\n{\n    alias\
    \ candidate = incr_list;\n\n    assert(candidate([]) == []);\n    assert(candidate([3L,\
    \ 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L,\
    \ 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4rokqg72.d(86): Error: semicolon expected following function declaration

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4rokqg72.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163124
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\nunittest\n{\n    alias candidate = incr_list;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([3L, 2L, 1L]) == [4L,\
    \ 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L,\
    \ 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163125
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\nunittest\n{\n    alias candidate = incr_list;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([3L, 2L, 1L]) == [4L,\
    \ 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L,\
    \ 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163125
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements decremented by\
    \ 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l)\n    {\n        ret[i] = e - 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i, e; l)\n    {\n\
    \        ret[i] = e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ decremented by 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e -\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements decremented by 1.\n            \n*/\nlong[] decr_list(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i, e; l)\n    {\n\
    \        ret[i] = e - 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\n\
    unittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([]) == []);\n\
    \    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp9p4nnmen.d(91): Error: expression expected, not `unittest`

    /tmp/tmp9p4nnmen.d(92): Error: found `{` when expecting `;` following statement

    /tmp/tmp9p4nnmen.d(99): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9p4nnmen.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163124
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret;\n    ret.length = l.length;\n    foreach(i, e; l)\n        ret[i] = e +\
    \ 1;\n    return ret;\n}\n/*\nReturn list with elements decremented by 1.\n  \
    \          \n*/\nlong[] decr_list(long[] l) \n{\n    long[] ret;\n    ret.length\
    \ = l.length;\n    foreach(i, e; l)\n        ret[i] = e - 1;\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list(long[]\
    \ l) \n{\n    long[] ret;\n    ret.length = l.length;\n    foreach(i, e; l)\n\
    \        ret[i] = e + 1;\n    return ret;\n}\n/*\nReturn list with elements decremented\
    \ by 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[] ret;\n \
    \   ret.length = l.length;\n    foreach(i, e; l)\n        ret[i] = e - 1;\n  \
    \  return ret;\n}\n/*\nReturn list with elements incremented by 1.\n         \
    \   \n*/\nlong[] incr_list(long[] l) \n{\n    long[] ret;\n    ret.length = l.length;\n\
    \    foreach(i, e; l)\n        ret[i] = e + 1;\n    return ret;\n}\n/*\nReturn\
    \ list with elements decremented by 1.\n            \n*/\nlong[] decr_list(long[]\
    \ l) \n{\n    long[] ret;\n    ret.length = l.length;\n    foreach(i, e; l)\n\
    \        ret[i] = e - 1;\n    return ret;\n}\n/*\nReturn list with elements incremented\
    \ by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[] ret;\n \
    \   ret.length = l.length;\n    foreach(i, e; l)\n        ret[i] = e + 1;\n  \
    \  return ret;\n}\n/*\nReturn list with elements decremented\nunittest\n{\n  \
    \  alias candidate = incr_list;\n\n    assert(candidate([]) == []);\n    assert(candidate([3L,\
    \ 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L,\
    \ 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp5yhxoeig.d(87): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5yhxoeig.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163125
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\nunittest\n{\n    alias candidate = incr_list;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([3L, 2L, 1L]) == [4L,\
    \ 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L,\
    \ 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163125
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ result = new long[l.length];\n    foreach (i, e; l)\n    {\n        result[i]\
    \ = e + 1;\n    }\n    return result;\n}\n/*\nReturn list with elements incremented\
    \ by 1.\n            \n*/\nlong[] incr_list2(long[] l) \n{\n    long[] result\
    \ = new long[l.length];\n    foreach (i, e; l)\n    {\n        result[i] = e +\
    \ 1;\n    }\n    return result;\n}\n/*\nReturn list with elements incremented\
    \ by 1.\n            \n*/\nlong[] incr_list3(long[] l) \n{\n    long[] result\
    \ = new long[l.length];\n    foreach (i, e; l)\n    {\n        result[i] = e +\
    \ 1;\n    }\n    return result;\n}\n/*\nReturn list with elements incremented\
    \ by 1.\n            \n*/\nlong[] incr_list4(long[] l) \n{\n    long[] result\
    \ = new long[l.length];\n    foreach (i, e; l)\n    {\n        result[i] = e +\
    \ 1;\n    }\n    return result;\n}\n/*\nReturn list with elements incremented\
    \ by 1.\n            \n*/\nlong[] incr_list5(long[] l) \n{\n    long[] result\
    \ = new long[l.length];\n    foreach (i, e; l)\n    {\n        result[i] = e +\
    \ 1;\n    }\n    return result;\n}\n/*\nReturn list with elements incremented\
    \ by 1.\n            \n*/\nlong[] incr_list6(long[] l) \n{\n    long[] result\
    \ = new long[l.length];\n    foreach (i, e; l)\n    {\n        result[i] = e +\
    \ 1;\n    }\n    return result;\n}\n/*\nReturn list with elements incremented\
    \ by 1.\n            \n*/\nlong[] incr_list7(long[] l) \n{\n    long[] result\
    \ = new long[l.length];\n    foreach (i, e; l)\n    {\n        result\nunittest\n\
    {\n    alias candidate = incr_list;\n\n    assert(candidate([]) == []);\n    assert(candidate([3L,\
    \ 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L,\
    \ 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp97oij1tg.d(91): Error: found `unittest` when expecting `;` following
    statement

    /tmp/tmp97oij1tg.d(99): Error: found `End of File` when expecting `}` following
    compound statement

    /tmp/tmp97oij1tg.d(99): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp97oij1tg.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163125
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_range(long[] l) \n{\n    long[] ret =\
    \ new long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e + 1;\n \
    \   }\n    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n \
    \           \n*/\nlong[] incr_list_foreach(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e + 1;\n    }\n\
    \    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list_foreach_range(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e + 1;\n    }\n\
    \    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list_foreach_range_ref(long[] l) \n{\n    long[] ret =\
    \ new long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e + 1;\n \
    \   }\n    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n \
    \           \n*/\nlong[] incr_list_foreach_range_ref_const(long[] l) \n{\n   \
    \ long[] ret = new long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i]\
    \ = e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented\
    \ by 1.\n            \n*/\nlong[] incr_list_foreach_range_ref_const_immutable(long[]\
    \ l) \nunittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1ac8kbxb.d(86): Error: semicolon expected following function declaration

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1ac8kbxb.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163125
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, v; l)\n    {\n        ret[i] = v +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_2(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i, v; l)\n    {\n        ret[i] = v + 1;\n    }\n\
    \    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list_3(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, v; l)\n    {\n        ret[i] = v + 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list_4(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i, v; l)\n    {\n\
    \        ret[i] = v + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list_5(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, v; l)\n    {\n        ret[i] = v +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_6(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i, v; l)\n    {\n        ret[i] = v + 1;\n    }\n\
    \    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list_7(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, v; l)\nunittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpu5ls8zj1.d(89): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpu5ls8zj1.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163125
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ res = new long[l.length];\n    foreach (i, e; l) {\n        res[i] = e + 1;\n\
    \    }\n    return res;\n}\nunittest\n{\n    alias candidate = incr_list;\n\n\
    \    assert(candidate([]) == []);\n    assert(candidate([3L, 2L, 1L]) == [4L,\
    \ 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L,\
    \ 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163125
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret;\n    foreach(i; l)\n        ret ~= i + 1;\n    return ret;\n}\nunittest\n\
    {\n    alias candidate = incr_list;\n\n    assert(candidate([]) == []);\n    assert(candidate([3L,\
    \ 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L,\
    \ 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163125
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements decremented by\
    \ 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l)\n    {\n        ret[i] = e - 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i, e; l)\n    {\n\
    \        ret[i] = e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ decremented by 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e -\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements decremented by 1.\n            \n*/\nlong[] decr_list(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i, e; l)\n    {\n\
    \        ret[i] = e - 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\n\
    unittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([]) == []);\n\
    \    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp9p4nnmen.d(91): Error: expression expected, not `unittest`

    /tmp/tmp9p4nnmen.d(92): Error: found `{` when expecting `;` following statement

    /tmp/tmp9p4nnmen.d(99): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9p4nnmen.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163124
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements decremented by\
    \ 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l)\n    {\n        ret[i] = e - 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i, e; l)\n    {\n\
    \        ret[i] = e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ decremented by 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e -\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l)\n    {\n        ret[i] = e + 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements decremented by 1.\n            \n*/\nlong[] decr_list(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i, e; l)\n    {\n\
    \        ret[i] = e - 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\n\
    unittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([]) == []);\n\
    \    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp9p4nnmen.d(91): Error: expression expected, not `unittest`

    /tmp/tmp9p4nnmen.d(92): Error: found `{` when expecting `;` following statement

    /tmp/tmp9p4nnmen.d(99): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9p4nnmen.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163124
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\nunittest\n{\n    alias candidate = incr_list;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([3L, 2L, 1L]) == [4L,\
    \ 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L,\
    \ 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163125
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_2(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e + 1;\n    }\n\
    \    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list_3(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i,e; l)\n    {\n        ret[i] = e + 1;\n    }\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list_4(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i,e; l)\n    {\n \
    \       ret[i] = e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list_5(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented by\
    \ 1.\n            \n*/\nlong[] incr_list_6(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i,e; l)\n    {\n        ret[i] = e + 1;\n    }\n\
    \    return ret;\n}\n/*\nReturn list with elements incremented by 1.\n       \
    \     \n*/\nlong[] incr_list_7(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i,e; l)\nunittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L,\
    \ 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp9d2d9vks.d(89): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9d2d9vks.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163124
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret;\n    ret = new long[l.length];\n    foreach (i, v; l) \n    {\n       \
    \ ret[i] = v + 1;\n    }\n    return ret;\n}\nunittest\n{\n    alias candidate\
    \ = incr_list;\n\n    assert(candidate([]) == []);\n    assert(candidate([3L,\
    \ 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L,\
    \ 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163125
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret;\n    ret = new long[l.length];\n    foreach (i, e; l) \n    {\n       \
    \ ret[i] = e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements decremented\
    \ by 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[] ret;\n \
    \   ret = new long[l.length];\n    foreach (i, e; l) \n    {\n        ret[i] =\
    \ e - 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented\
    \ by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[] ret;\n \
    \   ret = new long[l.length];\n    foreach (i, e; l) \n    {\n        ret[i] =\
    \ e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements decremented\
    \ by 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[] ret;\n \
    \   ret = new long[l.length];\n    foreach (i, e; l) \n    {\n        ret[i] =\
    \ e - 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented\
    \ by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[] ret;\n \
    \   ret = new long[l.length];\n    foreach (i, e; l) \n    {\n        ret[i] =\
    \ e + 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements decremented\
    \ by 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[] ret;\n \
    \   ret = new long[l.length];\n    foreach (i, e; l) \n    {\n        ret[i] =\
    \ e - 1;\n    }\n    return ret;\n}\n/*\nReturn list with elements incremented\
    \ by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[] ret;\nunittest\n\
    {\n    alias candidate = incr_list;\n\n    assert(candidate([]) == []);\n    assert(candidate([3L,\
    \ 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L,\
    \ 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp60eqbnz0.d(94): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp60eqbnz0.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163125
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n        ret[i] = e + 1;\n \
    \   return ret;\n}\n/*\nReturn list with elements decremented by 1.\n        \
    \    \n*/\nlong[] decr_list(long[] l) \n{\n    long[] ret = new long[l.length];\n\
    \    foreach(i, e; l)\n        ret[i] = e - 1;\n    return ret;\n}\n/*\nReturn\
    \ list with elements incremented by 1.\n            \n*/\nlong[] incr_list(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i, e; l)\n       \
    \ ret[i] = e + 1;\n    return ret;\n}\n/*\nReturn list with elements decremented\
    \ by 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i, e; l)\n        ret[i] = e - 1;\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i, e; l)\n       \
    \ ret[i] = e + 1;\n    return ret;\n}\n/*\nReturn list with elements decremented\
    \ by 1.\n            \n*/\nlong[] decr_list(long[] l) \n{\n    long[] ret = new\
    \ long[l.length];\n    foreach(i, e; l)\n        ret[i] = e - 1;\n    return ret;\n\
    }\n/*\nReturn list with elements incremented by 1.\n            \n*/\nlong[] incr_list(long[]\
    \ l) \n{\n    long[] ret = new long[l.length];\n    foreach(i, e; l)\n       \
    \ ret[i] = e + 1;\n    return ret;\n}\n/*\nReturn list with elements decremented\
    \ by 1.\n            \n*/\nlong[] decr_list(long[] l) \n\nunittest\n{\n    alias\
    \ candidate = incr_list;\n\n    assert(candidate([]) == []);\n    assert(candidate([3L,\
    \ 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L,\
    \ 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4rokqg72.d(86): Error: semicolon expected following function declaration

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4rokqg72.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163124
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nReturn list with elements\
    \ incremented by 1.\n            \n*/\nlong[] incr_list(long[] l) \n{\n    long[]\
    \ ret = new long[l.length];\n    foreach(i, e; l)\n    {\n        ret[i] = e +\
    \ 1;\n    }\n    return ret;\n}\nunittest\n{\n    alias candidate = incr_list;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([3L, 2L, 1L]) == [4L,\
    \ 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L,\
    \ 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163125

name: HumanEval_78_hex_key
language: d
prompt: "import std.typecons;\nimport std.math;\n/*\nYou have been tasked to write\
  \ a function that receives \n    a hexadecimal number as a string and counts the\
  \ number of hexadecimal \n    digits that are primes (prime number, or a prime,\
  \ is a natural number \n    greater than 1 that is not a product of two smaller\
  \ natural numbers).\n    Hexadecimal digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A,\
  \ B, C, D, E, F.\n    Prime numbers are 2, 3, 5, 7, 11, 13, 17,...\n    So you have\
  \ to determine a number of the following digits: 2, 3, 5, 7, \n    B (=decimal 11),\
  \ D (=decimal 13).\n    Note: you may assume the input is always correct or empty\
  \ string, \n    and symbols A,B,C,D,E,F are always uppercase.\n    Examples:\n \
  \                       \n*/\nlong hex_key(string num) \n"
tests: "unittest\n{\n    alias candidate = hex_key;\n\n    assert(candidate(\"AB\"\
  ) == 1L);\n    assert(candidate(\"1077E\") == 2L);\n    assert(candidate(\"ABED1A33\"\
  ) == 4L);\n    assert(candidate(\"2020\") == 2L);\n    assert(candidate(\"123456789ABCDEF0\"\
  ) == 6L);\n    assert(candidate(\"112233445566778899AABBCCDDEEFF00\") == 12L);\n\
  }\nvoid main(){}"
completions: ["{\n    long result = 0;\n    foreach(char c; num)\n    {\n        if(c\
    \ == 'A' || c == 'B' || c == 'D' || c == '3' || c == '5' || c == '7')\n      \
    \  {\n            result++;\n        }\n    }\n    return result;\n}", "{\n  \
    \  long key = 0;\n    foreach(i, c; num)\n    {\n        if(c == 'A' || c == 'B'\
    \ || c == 'D' || c == 'E')\n            key++;\n        else if(c == '2' || c\
    \ == '3' || c == '5' || c == '7')\n            key++;\n    }\n    return key;\n\
    }", "{\n    long result = 0;\n    foreach(char c; num)\n    {\n        if(c ==\
    \ 'A' || c == 'B' || c == 'D' || c == '3' || c == '5' || c == '7')\n        {\n\
    \            result++;\n        }\n    }\n    return result;\n}", "{\n    long\
    \ result = 0;\n    foreach(immutable char c; num)\n    {\n        switch(c)\n\
    \        {\n            case '0':\n            case '1':\n            case '2':\n\
    \            case '3':\n            case '4':\n            case '5':\n       \
    \     case '6':\n            case '7':\n            case '8':\n            case\
    \ '9':\n                result += c - '0';\n                break;\n         \
    \   case 'A':\n            case 'B':\n            case 'C':\n            case\
    \ 'D':\n            case 'E':\n            case 'F':\n                result +=\
    \ c - 'A' + 10;\n                break;\n        }\n    }\n    return result;\n\
    }", "{\n    long result = 0;\n    foreach(i, c; num)\n    {\n        if(c == 'A'\
    \ || c == 'B' || c == 'D' || c == 'E')\n            result++;\n        else if(c\
    \ == '2' || c == '3' || c == '5' || c == '7')\n            result++;\n    }\n\
    \    return result;\n}", "{\n    long result = 0;\n    foreach(i, c; num)\n  \
    \  {\n        result += (c - '0') * pow(16, num.length - i - 1);\n    }\n    return\
    \ result;\n}", "{\n    long result = 0;\n    foreach(i, c; num)\n    {\n     \
    \   if(c == 'A' || c == 'B' || c == 'D' || c == 'E')\n            result += 1;\n\
    \    }\n    return result;\n}", "{\n    long result = 0;\n    foreach(i, c; num)\n\
    \    {\n        if(c == 'A' || c == 'B' || c == 'D' || c == 'E')\n           \
    \ result++;\n        else if(c == '2' || c == '3' || c == '5' || c == '7')\n \
    \           result++;\n    }\n    return result;\n}", "{\n    long result = 0;\n\
    \    foreach(i, c; num)\n    {\n        long n = 0;\n        switch(c)\n     \
    \   {\n            case '0':\n            case '1':\n            case '2':\n \
    \           case '3':\n            case '4':\n            case '5':\n        \
    \    case '6':\n            case '7':\n            case '8':\n            case\
    \ '9':\n                n = c - '0';\n                break;\n            case\
    \ 'A':\n                n = 10;\n                break;\n            case 'B':\n\
    \                n = 11;\n                break;\n            case 'C':\n    \
    \            n = 12;\n                break;\n            case 'D':\n        \
    \        n = 13;\n                break;\n            case 'E':\n            \
    \    n = 14;\n                break;\n            case 'F':\n                n\
    \ = 15;\n                break;\n        }\n        result += n * pow(16, num.length\
    \ - i - 1);\n    }\n    return result;\n}", "{\n    long result = 0;\n    foreach(i,\
    \ c; num)\n    {\n        result += pow(16, i) * (c >= 'A' ? c - 'A' + 10 : c\
    \ - '0');\n    }\n    return result;\n}", "{\n    long l = 0;\n    foreach(immutable\
    \ c; num)\n    {\n        l = l * 16 + (c >= 'A' ? c - 'A' + 10 : c - '0');\n\
    \    }\n    return l;\n}", "{\n    long result = 0;\n    foreach(immutable i,\
    \ immutable c; num)\n    {\n        if(c == 'A' || c == 'B' || c == 'D' || c ==\
    \ 'E')\n        {\n            result++;\n        }\n        else if(c == '2'\
    \ || c == '3' || c == '5' || c == '7')\n        {\n            result++;\n   \
    \     }\n    }\n    return result;\n}", "{\n    long result = 0;\n    foreach(char\
    \ c; num)\n    {\n        result += c;\n    }\n    return result;\n}", "{\n  \
    \  long res = 0;\n    foreach(char c; num)\n    {\n        res += (c == '2' ||\
    \ c == '3' || c == '5' || c == '7' || c == 'B' || c == 'D') ? 1 : 0;\n    }\n\
    \    return res;\n}", "{\n    long result = 0;\n    foreach(i, c; num)\n    {\n\
    \        switch(c)\n        {\n            case '0':\n            case '1':\n\
    \            case '2':\n            case '3':\n            case '4':\n       \
    \     case '5':\n            case '6':\n            case '7':\n            case\
    \ '8':\n            case '9':\n                result += c - '0';\n          \
    \      break;\n            case 'A':\n            case 'B':\n            case\
    \ 'C':\n            case 'D':\n            case 'E':\n            case 'F':\n\
    \                result += c - 'A' + 10;\n                break;\n        }\n\
    \        result *= 16;\n    }\n    return result;\n}", "{\n    long key = 0;\n\
    \    foreach(immutable c; num)\n    {\n        key += (c >= 'A' ? c - 'A' + 10\
    \ : c - '0') * pow(16, num.length - 1);\n        num = num[1 .. $];\n    }\n \
    \   return key;\n}", "{\n    long result = 0;\n    foreach(char c; num)\n    {\n\
    \        long n = 0;\n        if(c >= '0' && c <= '9')\n            n = c - '0';\n\
    \        else if(c >= 'A' && c <= 'F')\n            n = c - 'A' + 10;\n      \
    \  result = result * 16 + n;\n    }\n    return result;\n}", "{\n    long result\
    \ = 0;\n    foreach(immutable char c; num)\n    {\n        if(c >= 'A')\n    \
    \        result += c - 'A' + 10;\n        else\n            result += c - '0';\n\
    \    }\n    return result;\n}", "{\n    long result = 0;\n    foreach(char c;\
    \ num)\n    {\n        if(c == 'A' || c == 'B' || c == 'D' || c == '3' || c ==\
    \ '5' || c == '7')\n        {\n            result++;\n        }\n    }\n    return\
    \ result;\n}", "{\n    long result = 0;\n    foreach(char c; num)\n    {\n   \
    \     if(c == 'A' || c == 'B' || c == 'D' || c == '3' || c == '5' || c == '7')\n\
    \        {\n            result++;\n        }\n    }\n    return result;\n}", "{\n\
    \    long result = 0;\n    foreach(c;num)\n    {\n        if(c == 'A' || c ==\
    \ 'B' || c == 'D' || c == '3' || c == '5' || c == '7')\n        {\n          \
    \  result++;\n        }\n    }\n    return result;\n}", "{\n    long res = 0;\n\
    \    foreach(i, c; num)\n    {\n        if(c == 'A' || c == 'B' || c == 'D' ||\
    \ c == 'E')\n            res++;\n        else if(c == '2' || c == '3' || c ==\
    \ '5' || c == '7')\n            res++;\n    }\n    return res;\n}", "{\n    long\
    \ result = 0;\n    foreach(char c; num)\n    {\n        result += c;\n    }\n\
    \    return result;\n}", "{\n    long result = 0;\n    foreach(char c; num)\n\
    \    {\n        if(c == '0' || c == '1' || c == '2' || c == '3' || c == '4' ||\
    \ c == '5' || c == '6' || c == '7' || c == '8' || c == '9')\n        {\n     \
    \       result += c - '0';\n        }\n        else if(c == 'A' || c == 'B' ||\
    \ c == 'C' || c == 'D' || c == 'E' || c == 'F')\n        {\n            result\
    \ += c - 'A' + 10;\n        }\n    }\n    return result;\n}", "{\n    long result\
    \ = 0;\n    foreach(char c; num)\n    {\n        result += (c >= 'A') ? (c - 'A'\
    \ + 10) : (c - '0');\n    }\n    return result;\n}", "{\n    long result = 0;\n\
    \    foreach(char c; num)\n    {\n        if(c == 'A' || c == 'B' || c == 'D'\
    \ || c == 'E')\n            result++;\n    }\n    return result;\n}", "{\n   \
    \ long result = 0;\n    foreach(i, c; num)\n    {\n        result += (c - '0')\
    \ * pow(16, num.length - i - 1);\n    }\n    return result;\n}", "{\n    long\
    \ result = 0;\n    foreach(char c; num)\n    {\n        result += (c >= 'A') ?\
    \ c - 'A' + 10 : c - '0';\n    }\n    return result;\n}", "{\n    long result\
    \ = 0;\n    foreach(char c; num)\n    {\n        if(c == 'A' || c == 'B' || c\
    \ == 'D' || c == 'E')\n            result++;\n    }\n    return result;\n}", "{\n\
    \    long result = 0;\n    foreach(char c; num)\n    {\n        if(c == 'A' ||\
    \ c == 'B' || c == 'D' || c == '3' || c == '5' || c == '7')\n        {\n     \
    \       result++;\n        }\n    }\n    return result;\n}", "{\n    long result\
    \ = 0;\n    foreach(immutable char c; num)\n    {\n        result += (c >= 'A')\
    \ ? (c - 'A' + 10) : (c - '0');\n    }\n    return result;\n}", "{\n    long result\
    \ = 0;\n    foreach(i, c; num)\n    {\n        if(c == 'A' || c == 'B' || c ==\
    \ 'D' || c == 'E')\n            result++;\n        else if(c == '2' || c == '3'\
    \ || c == '5' || c == '7')\n            result++;\n    }\n    return result;\n\
    }", "{\n    long result = 0;\n    foreach(i, c; num)\n    {\n        result +=\
    \ (c - '0') * pow(16, num.length - i - 1);\n    }\n    return result;\n}", "{\n\
    \    long result = 0;\n    foreach(i, c; num)\n    {\n        result += (c - '0')\
    \ * pow(16, num.length - i - 1);\n    }\n    return result;\n}", "{\n    long\
    \ result = 0;\n    foreach(char c; num)\n    {\n        if(c == 'A' || c == 'B'\
    \ || c == 'D' || c == '3' || c == '5' || c == '7')\n        {\n            result++;\n\
    \        }\n    }\n    return result;\n}", "{\n    long result = 0;\n    foreach(char\
    \ c; num)\n    {\n        result += c;\n    }\n    return result;\n}", "{\n  \
    \  long result = 0;\n    foreach(char c; num)\n    {\n        switch(c)\n    \
    \    {\n            case '2':\n            case '3':\n            case '5':\n\
    \            case '7':\n            case 'B':\n            case 'D':\n       \
    \         result++;\n                break;\n            default:\n          \
    \      break;\n        }\n    }\n    return result;\n}", "{\n    long result =\
    \ 0;\n    foreach(char c; num)\n    {\n        result += c;\n    }\n    return\
    \ result;\n}", "{\n    long res = 0;\n    foreach(immutable c; num)\n    {\n \
    \       res += c;\n    }\n    return res;\n}", "{\n    long count = 0;\n    foreach(char\
    \ c; num)\n    {\n        if(c == '2' || c == '3' || c == '5' || c == '7' || c\
    \ == 'B' || c == 'D')\n            count++;\n    }\n    return count;\n}", "{\n\
    \    long result = 0;\n    foreach(char c; num)\n    {\n        switch(c)\n  \
    \      {\n            case '0':\n            case '1':\n            case '2':\n\
    \            case '3':\n            case '4':\n            case '5':\n       \
    \     case '6':\n            case '7':\n            case '8':\n            case\
    \ '9':\n                result += c - '0';\n                break;\n         \
    \   case 'A':\n            case 'B':\n            case 'C':\n            case\
    \ 'D':\n            case 'E':\n            case 'F':\n                result +=\
    \ c - 'A' + 10;\n                break;\n        }\n    }\n    return result;\n\
    }", "{\n    long result = 0;\n    foreach(char c; num)\n    {\n        if(c ==\
    \ 'A' || c == 'B' || c == 'D' || c == '3' || c == '5' || c == '7')\n        {\n\
    \            result++;\n        }\n    }\n    return result;\n}", "{\n    long\
    \ result = 0;\n    foreach(c; num)\n    {\n        if(c == 'A' || c == 'B' ||\
    \ c == 'D' || c == '3' || c == '5' || c == '7')\n        {\n            result++;\n\
    \        }\n    }\n    return result;\n}", "{\n    long result = 0;\n    foreach(i,\
    \ c; num)\n    {\n        result += (c - '0') * pow(16, num.length - i - 1);\n\
    \    }\n    return result;\n}", "{\n    long result = 0;\n    foreach(i, c; num)\n\
    \    {\n        if(c == 'A' || c == 'B' || c == 'D' || c == 'E')\n           \
    \ result++;\n        else if(c == '2' || c == '3' || c == '5' || c == '7')\n \
    \           result++;\n    }\n    return result;\n}", "{\n    long result = 0;\n\
    \    foreach(char c; num)\n    {\n        result += c;\n    }\n    return result;\n\
    }", "{\n    long result = 0;\n    foreach(char c; num)\n    {\n        if(c ==\
    \ 'A' || c == 'B' || c == 'D' || c == '3' || c == '5' || c == '7')\n        {\n\
    \            result++;\n        }\n    }\n    return result;\n}", "{\n    long\
    \ key = 0;\n    foreach(char c; num)\n    {\n        key += (c - '0') * pow(16,\
    \ num.length - 1);\n        num = num[1..$];\n    }\n    return key;\n}", "{\n\
    \    long result = 0;\n    foreach(char c; num)\n    {\n        if(c == 'A' ||\
    \ c == 'B' || c == 'D' || c == '3' || c == '5' || c == '7')\n        {\n     \
    \       result++;\n        }\n    }\n    return result;\n}", "{\n    long result\
    \ = 0;\n    foreach(i, c; num)\n    {\n        if(c == 'A' || c == 'B' || c ==\
    \ 'D' || c == 'E')\n            result++;\n        else if(c == '2' || c == '3'\
    \ || c == '5' || c == '7')\n            result++;\n    }\n    return result;\n\
    }", "{\n    long result = 0;\n    foreach(immutable c; num)\n    {\n        result\
    \ += (c == 'A' || c == 'B' || c == 'D' || c == 'E') ? 1 : 0;\n    }\n    return\
    \ result;\n}", "{\n    long res = 0;\n    foreach(i, c; num)\n    {\n        res\
    \ += (c - '0') * pow(16, i);\n    }\n    return res;\n}", "{\n    long count =\
    \ 0;\n    foreach(i; num)\n    {\n        switch(i)\n        {\n            case\
    \ '2':\n            case '3':\n            case '5':\n            case '7':\n\
    \            case 'B':\n            case 'D':\n                count++;\n    \
    \            break;\n        }\n    }\n    return count;\n}", "{\n    long result\
    \ = 0;\n    foreach(i, c; num)\n    {\n        if (c == 'A' || c == 'B' || c ==\
    \ 'D' || c == 'E')\n            result++;\n        else if (c == '2' || c == '3'\
    \ || c == '5' || c == '7')\n            result++;\n    }\n    return result;\n\
    }", "{\n    long result = 0;\n    foreach(ch; num)\n    {\n        result += ch;\n\
    \    }\n    return result;\n}", "{\n    long result = 0;\n    foreach(char c;\
    \ num)\n    {\n        if(c == 'A' || c == 'B' || c == 'D' || c == '3' || c ==\
    \ '5' || c == '7')\n        {\n            result++;\n        }\n    }\n    return\
    \ result;\n}", "{\n    long result = 0;\n    foreach(char c; num)\n    {\n   \
    \     if(c == 'A' || c == 'B' || c == 'D' || c == 'C' || c == 'E' || c == 'F')\n\
    \        {\n            result++;\n        }\n    }\n    return result;\n}", "{\n\
    \    long result = 0;\n    foreach(char c; num)\n    {\n        if(c == 'A' ||\
    \ c == 'B' || c == 'D' || c == '3' || c == '5' || c == '7')\n        {\n     \
    \       result++;\n        }\n    }\n    return result;\n}", "{\n    long result\
    \ = 0;\n    foreach(char c; num)\n    {\n        if(c == 'A' || c == 'B' || c\
    \ == 'D' || c == '3' || c == '5' || c == '7')\n        {\n            result++;\n\
    \        }\n    }\n    return result;\n}", "{\n    long count = 0;\n    foreach(c;\
    \ num)\n    {\n        if(c == '2' || c == '3' || c == '5' || c == '7' || c ==\
    \ 'B' || c == 'D')\n            count++;\n    }\n    return count;\n}", "{\n \
    \   long result = 0;\n    foreach(char c; num)\n    {\n        if(c == 'A' ||\
    \ c == 'B' || c == 'D' || c == '3' || c == '5' || c == '7')\n        {\n     \
    \       result++;\n        }\n    }\n    return result;\n}", "{\n    long result\
    \ = 0;\n    foreach(i,c;num)\n    {\n        if(c in ['A','B','C','D','E','F'])\n\
    \            result += 1 << i;\n    }\n    return result;\n}", "{\n    long result\
    \ = 0;\n    foreach(char c; num) \n    {\n        if(c >= '0' && c <= '9') \n\
    \        {\n            result += c - '0';\n        } \n        else if(c >= 'A'\
    \ && c <= 'F') \n        {\n            result += c - 'A' + 10;\n        }\n \
    \   }\n    return result;\n}", "{\n    long result = 0;\n    foreach(char c; num)\n\
    \    {\n        switch(c)\n        {\n            case '2':\n            case\
    \ '3':\n            case '5':\n            case '7':\n            case 'B':\n\
    \            case 'D':\n                result++;\n                break;\n  \
    \          default:\n                break;\n        }\n    }\n    return result;\n\
    }", "{\n    long count = 0;\n    foreach(i; num)\n    {\n        if(i == '2' ||\
    \ i == '3' || i == '5' || i == '7' || i == 'B' || i == 'D')\n        {\n     \
    \       count++;\n        }\n    }\n    return count;\n}", "{\n    long result\
    \ = 0;\n    foreach(i, c; num)\n    {\n        result += (c - '0') * pow(16, num.length\
    \ - i - 1);\n    }\n    return result;\n}", "{\n    long result = 0;\n    foreach(char\
    \ c; num)\n    {\n        result += (c >= 'A') ? (c - 'A' + 10) : (c - '0');\n\
    \    }\n    return result;\n}", "{\n    long result = 0;\n    foreach(immutable\
    \ char c; num)\n    {\n        if(c == 'A' || c == 'B' || c == 'D' || c == 'F')\n\
    \        {\n            result++;\n        }\n        else if(c == '2' || c ==\
    \ '3' || c == '5' || c == '7')\n        {\n            result++;\n        }\n\
    \    }\n    return result;\n}", "{\n    long result = 0;\n    foreach(char c;\
    \ num)\n    {\n        if(c == 'A' || c == 'B' || c == 'D' || c == '3' || c ==\
    \ '5' || c == '7')\n        {\n            result++;\n        }\n    }\n    return\
    \ result;\n}", "{\n    long count = 0;\n    foreach(char c; num)\n    {\n    \
    \    if(c == '2' || c == '3' || c == '5' || c == '7' || c == 'B' || c == 'D')\n\
    \            count++;\n    }\n    return count;\n}", "{\n    long result = 0;\n\
    \    foreach(i, c; num)\n    {\n        if(c == 'A' || c == 'B' || c == 'D' ||\
    \ c == 'E')\n            result++;\n        else if(c == '2' || c == '3' || c\
    \ == '5' || c == '7')\n            result++;\n    }\n    return result;\n}", "{\n\
    \    long result = 0;\n    foreach(char c; num)\n    {\n        if(c == 'A' ||\
    \ c == 'B' || c == 'D' || c == '3' || c == '5' || c == '7')\n        {\n     \
    \       result++;\n        }\n    }\n    return result;\n}", "{\n    long result\
    \ = 0;\n    foreach(c; num)\n    {\n        result += (long)c;\n    }\n    return\
    \ result;\n}", "{\n    long result = 0;\n    foreach(char c; num)\n    {\n   \
    \     if(c == 'A' || c == 'B' || c == 'D' || c == 'E')\n            result++;\n\
    \    }\n    return result;\n}", "{\n    long result = 0;\n    foreach(c; num)\n\
    \    {\n        result += (c == 'A' || c == 'B' || c == 'D' || c == 'F') ? 1 :\
    \ 0;\n    }\n    return result;\n}", "{\n    long count = 0;\n    foreach(i;num)\n\
    \    {\n        if(i == '2' || i == '3' || i == '5' || i == '7' || i == 'B' ||\
    \ i == 'D')\n        {\n            count++;\n        }\n    }\n    return count;\n\
    }", "{\n    long result = 0;\n    foreach(char c; num)\n    {\n        if(c ==\
    \ 'A' || c == 'B' || c == 'D' || c == '3' || c == '5' || c == '7')\n        {\n\
    \            result++;\n        }\n    }\n    return result;\n}", "{\n    long\
    \ count = 0;\n    foreach(char c; num)\n    {\n        if(c == '2' || c == '3'\
    \ || c == '5' || c == '7' || c == 'B' || c == 'D')\n            count++;\n   \
    \ }\n    return count;\n}", "{\n    long result = 0;\n    foreach(immutable c;\
    \ num)\n    {\n        if(c == 'A' || c == 'B' || c == 'D' || c == 'E')\n    \
    \        result++;\n        else if(c == '2' || c == '3' || c == '5' || c == '7')\n\
    \            result++;\n    }\n    return result;\n}", "{\n    long result = 0;\n\
    \    foreach(char c; num)\n    {\n        result += c;\n    }\n    return result;\n\
    }", "{\n    long key = 0;\n    foreach(c; num)\n    {\n        key = key * 16\
    \ + (c >= 'A' ? c - 'A' + 10 : c - '0');\n    }\n    return key;\n}", "{\n   \
    \ long result = 0;\n    foreach(i, c; num)\n    {\n        result += (c - '0')\
    \ * pow(16, num.length - i - 1);\n    }\n    return result;\n}", "{\n    long\
    \ result = 0;\n    foreach(char c; num)\n    {\n        if(c == 'A' || c == 'B'\
    \ || c == 'D' || c == '3' || c == '5' || c == '7')\n        {\n            result++;\n\
    \        }\n    }\n    return result;\n}", "{\n    long result = 0;\n    foreach(i,\
    \ c; num)\n    {\n        if(c == 'A' || c == 'B' || c == 'D' || c == 'E')\n \
    \           result++;\n        else if(c == '2' || c == '3' || c == '5' || c ==\
    \ '7')\n            result++;\n    }\n    return result;\n}", "{\n    long result\
    \ = 0;\n    foreach(char c; num)\n    {\n        if (c == 'A' || c == 'B' || c\
    \ == 'D' || c == '3' || c == '5' || c == '7')\n            result++;\n    }\n\
    \    return result;\n}", "{\n    long result = 0;\n    foreach(char c; num)\n\
    \    {\n        if(c == '2' || c == '3' || c == '5' || c == '7' || c == 'B' ||\
    \ c == 'D')\n            result++;\n    }\n    return result;\n}", "{\n    long\
    \ result = 0;\n    foreach(c; num)\n    {\n        switch(c)\n        {\n    \
    \        case '2':\n            case '3':\n            case '5':\n           \
    \ case '7':\n            case 'B':\n            case 'D':\n                result++;\n\
    \                break;\n        }\n    }\n    return result;\n}", "{\n    long\
    \ result = 0;\n    foreach(immutable c; num)\n    {\n        result += c;\n  \
    \  }\n    return result;\n}", "{\n    long key = 0;\n    foreach(char c; num)\n\
    \    {\n        if(c == 'A' || c == 'B' || c == 'D')\n            key += 1;\n\
    \    }\n    return key;\n}", "{\n    long result = 0;\n    foreach(char c; num)\n\
    \    {\n        switch(c)\n        {\n            case '0':\n            case\
    \ '1':\n            case '2':\n            case '3':\n            case '4':\n\
    \            case '5':\n            case '6':\n            case '7':\n       \
    \     case '8':\n            case '9':\n                result += c - '0';\n \
    \               break;\n            case 'A':\n            case 'B':\n       \
    \     case 'C':\n            case 'D':\n            case 'E':\n            case\
    \ 'F':\n                result += c - 'A' + 10;\n                break;\n    \
    \    }\n    }\n    return result;\n}", "{\n    long count = 0;\n    foreach(i;\
    \ num)\n    {\n        if(i == '2' || i == '3' || i == '5' || i == '7' || i ==\
    \ 'B' || i == 'D')\n        {\n            count++;\n        }\n    }\n    return\
    \ count;\n}", "{\n    long count = 0;\n    foreach(i; num)\n    {\n        if(i\
    \ == '2' || i == '3' || i == '5' || i == '7' || i == 'B' || i == 'D')\n      \
    \  {\n            count++;\n        }\n    }\n    return count;\n}", "{\n    long\
    \ result = 0;\n    foreach(char c; num)\n    {\n        if(c == 'A' || c == 'B'\
    \ || c == 'D' || c == '3' || c == '5' || c == '7')\n        {\n            result++;\n\
    \        }\n    }\n    return result;\n}", "{\n    long result = 0;\n    foreach(i,\
    \ c; num)\n    {\n        if(c == 'A' || c == 'B' || c == 'D' || c == 'E')\n \
    \           result++;\n        else if(c == '2' || c == '3' || c == '5' || c ==\
    \ '7')\n            result++;\n    }\n    return result;\n}", "{\n    long result\
    \ = 0;\n    foreach(immutable char c; num)\n    {\n        if(c >= '0' && c <=\
    \ '9')\n            result += c - '0';\n        else\n            result += c\
    \ - 'A' + 10;\n    }\n    return result;\n}", "{\n    long result = 0;\n    foreach(immutable\
    \ char c; num)\n    {\n        if(c == 'A' || c == 'B' || c == 'D' || c == 'C'\
    \ || c == 'E' || c == 'F')\n        {\n            result += 1;\n        }\n \
    \   }\n    return result;\n}", "{\n    long res = 0;\n    foreach(c; num)\n  \
    \  {\n        res += c;\n    }\n    return res;\n}", "{\n    long result = 0;\n\
    \    foreach(immutable c; num)\n    {\n        switch(c)\n        {\n        \
    \    case '0':\n            case '1':\n            case '2':\n            case\
    \ '3':\n            case '4':\n            case '5':\n            case '6':\n\
    \            case '7':\n            case '8':\n            case '9':\n       \
    \         result += c - '0';\n                break;\n            case 'A':\n\
    \            case 'B':\n            case 'C':\n            case 'D':\n       \
    \     case 'E':\n            case 'F':\n                result += c - 'A' + 10;\n\
    \                break;\n        }\n    }\n    return result;\n}", "{\n    long\
    \ result = 0;\n    foreach(c; num)\n    {\n        if (c == 'A' || c == 'B' ||\
    \ c == 'D' || c == '3' || c == '5' || c == '7')\n            result++;\n    }\n\
    \    return result;\n}", "{\n    long key = 0;\n    foreach(char c; num)\n   \
    \ {\n        key += c;\n    }\n    return key;\n}", "{\n    long result = 0;\n\
    \    foreach(immutable char c; num)\n    {\n        if(c >= '0' && c <= '9')\n\
    \            result += c - '0';\n        else if(c >= 'A' && c <= 'F')\n     \
    \       result += c - 'A' + 10;\n    }\n    return result;\n}", "{\n    long result\
    \ = 0;\n    foreach(i, c; num)\n    {\n        result += (c == 'A' || c == 'B'\
    \ || c == 'D' || c == 'E') ? 1 : 0;\n    }\n    return result;\n}", "{\n    long\
    \ count = 0;\n    foreach(i; num)\n    {\n        switch(i)\n        {\n     \
    \       case '2':\n            case '3':\n            case '5':\n            case\
    \ '7':\n            case 'B':\n            case 'D':\n                count++;\n\
    \                break;\n        }\n    }\n    return count;\n}", "{\n    long\
    \ result = 0;\n    foreach(immutable char c; num)\n    {\n        if(c >= 'A')\n\
    \            result += 1 << (c - 'A' + 10);\n        else\n            result\
    \ += 1 << (c - '0');\n    }\n    return result;\n}", "{\n    long result = 0;\n\
    \    foreach(char c; num)\n    {\n        if(c == 'A' || c == 'B' || c == 'D'\
    \ || c == 'E')\n            result++;\n    }\n    return result;\n}", "{\n   \
    \ long res = 0;\n    foreach(immutable c; num) \n    {\n        res += (c >= 'A')\
    \ ? (c - 'A' + 10) : (c - '0');\n    }\n    return res;\n}", "{\n    long result\
    \ = 0;\n    foreach(i, c; num)\n    {\n        result += (c - '0') * pow(16, num.length\
    \ - i - 1);\n    }\n    return result;\n}", "{\n    long result = 0;\n    foreach(immutable\
    \ c; num)\n    {\n        result += c;\n    }\n    return result;\n}", "{\n  \
    \  long result = 0;\n    foreach(char c; num)\n    {\n        if(c == 'A' || c\
    \ == 'B' || c == 'D' || c == '3' || c == '5' || c == '7')\n        {\n       \
    \     result++;\n        }\n    }\n    return result;\n}", "{\n    long result\
    \ = 0;\n    foreach(i, c; num)\n    {\n        long digit = 0;\n        if(c >=\
    \ '0' && c <= '9')\n            digit = c - '0';\n        else if(c >= 'A' &&\
    \ c <= 'F')\n            digit = c - 'A' + 10;\n        else\n            assert(0);\n\
    \        result = result * 16 + digit;\n    }\n    return result;\n}", "{\n  \
    \  long result = 0;\n    foreach(char c; num)\n    {\n        if(c == 'A' || c\
    \ == 'B' || c == 'D' || c == 'F')\n            result++;\n        else if(c ==\
    \ '2' || c == '3' || c == '5' || c == '7')\n            result++;\n    }\n   \
    \ return result;\n}", "{\n    long result = 0;\n    foreach(immutable char c;\
    \ num)\n    {\n        result += c;\n    }\n    return result;\n}", "{\n    long\
    \ result = 0;\n    foreach(immutable c; num)\n    {\n        result += (c >= 'A')\
    \ ? c - 'A' + 10 : c - '0';\n    }\n    return result;\n}", "{\n    long result\
    \ = 0;\n    foreach(c; num)\n    {\n        result += c;\n    }\n    return result;\n\
    }", "{\n    long result = 0;\n    foreach(char c; num)\n    {\n        if(c ==\
    \ 'A' || c == 'B' || c == 'D' || c == '3' || c == '5' || c == '7')\n        {\n\
    \            result++;\n        }\n    }\n    return result;\n}", "{\n    long\
    \ result = 0;\n    foreach(c; num)\n    {\n        result += c;\n    }\n    return\
    \ result;\n}", "{\n    long result = 0;\n    foreach(c; num)\n    {\n        result\
    \ += (c >= 'A') ? c - 'A' + 10 : c - '0';\n    }\n    return result;\n}", "{\n\
    \    long result = 0;\n    foreach(char c; num)\n    {\n        result += (c >=\
    \ '0' && c <= '9') ? c - '0' : c - 'A' + 10;\n    }\n    return result;\n}", "{\n\
    \    long result = 0;\n    foreach(char c; num)\n    {\n        if(c == 'A' ||\
    \ c == 'B' || c == 'D' || c == '3' || c == '5' || c == '7')\n        {\n     \
    \       result++;\n        }\n    }\n    return result;\n}", "{\n    long result\
    \ = 0;\n    foreach(char c; num)\n    {\n        switch(c)\n        {\n      \
    \      case '0':\n            case '1':\n            case '2':\n            case\
    \ '3':\n            case '4':\n            case '5':\n            case '6':\n\
    \            case '7':\n            case '8':\n            case '9':\n       \
    \         result += c - '0';\n                break;\n            case 'A':\n\
    \            case 'B':\n            case 'C':\n            case 'D':\n       \
    \     case 'E':\n            case 'F':\n                result += c - 'A' + 10;\n\
    \                break;\n        }\n    }\n    return result;\n}", "{\n    long\
    \ result = 0;\n    foreach(immutable c; num)\n    {\n        result += c;\n  \
    \  }\n    return result;\n}", "{\n    long result = 0;\n    foreach(char c; num)\n\
    \    {\n        result += (c == '2' || c == '3' || c == '5' || c == '7' || c ==\
    \ 'B' || c == 'D') ? 1 : 0;\n    }\n    return result;\n}", "{\n    long result\
    \ = 0;\n    foreach(char c; num)\n    {\n        if(c == 'A' || c == 'B' || c\
    \ == 'D' || c == 'F')\n            result++;\n        else if(c == '2' || c ==\
    \ '3' || c == '5' || c == '7')\n            result++;\n    }\n    return result;\n\
    }", "{\n    long result = 0;\n    foreach(char c; num)\n    {\n        if(c ==\
    \ 'A' || c == 'B' || c == 'D' || c == '3' || c == '5' || c == '7')\n        {\n\
    \            result++;\n        }\n    }\n    return result;\n}", "{\n    long\
    \ result = 0;\n    foreach(char c; num)\n    {\n        if(c == 'A' || c == 'B'\
    \ || c == 'D' || c == 'F')\n            result++;\n        else if(c == '2' ||\
    \ c == '3' || c == '5' || c == '7')\n            result++;\n    }\n    return\
    \ result;\n}", "{\n    long result = 0;\n    foreach(immutable char c; num)\n\
    \    {\n        if(c == 'A' || c == 'B' || c == 'D' || c == 'F')\n        {\n\
    \            result++;\n        }\n        else if(c == 'C' || c == 'E')\n   \
    \     {\n            continue;\n        }\n        else if(c == '2' || c == '3'\
    \ || c == '5' || c == '7')\n        {\n            result++;\n        }\n    }\n\
    \    return result;\n}", "{\n    long result = 0;\n    foreach(i, c; num)\n  \
    \  {\n        if (c == 'A' || c == 'B' || c == 'D' || c == 'F')\n            result\
    \ += 1;\n    }\n    return result;\n}", "{\n    import std.string;\n    import\
    \ std.conv;\n    import std.algorithm;\n    import std.range;\n    import std.array;\n\
    \    import std.math;\n    import std.typecons;\n    import std.stdio;\n    import\
    \ std.range;\n    import std.algorithm;\n    import std.array;\n    import std.math;\n\
    \    import std.typecons;\n    import std.math;\n    import std.typecons;\n  \
    \  import std.math;\n    import std.typecons;\n    import std.math;\n    import\
    \ std.typecons;\n    import std.math;\n    import std.typecons;\n    import std.math;\n\
    \    import std.typecons;\n    import std.math;\n    import std.typecons;\n  \
    \  import std.math;\n    import std.typecons;\n    import std.math;\n    import\
    \ std.typecons;\n    import std.math;\n    import std.typecons;\n    import std.math;\n\
    \    import std.typecons;\n    import std.math;\n    import std.typecons;\n  \
    \  import std.math;\n    import std.typecons;\n    import std.math;\n    import\
    \ std.typecons;\n    import std.math;\n    import std.typecons;\n    import std.math;\n\
    \    import std.typecons;\n    import std.math;\n    import std.typecons;\n  \
    \  import std.math;\n    import std.typecons;\n    import std.math;\n    import\
    \ std.typecons;\n    import std.math;\n    import std.typecons;\n    import std.math;\n\
    \    import std.typecons;\n    import std.math;\n    import std.typecons;\n  \
    \  import std.math;\n    import std.typecons;\n    import std.math;\n    import\
    \ std.typecons;\n    import std.math;\n    import std.typecons;\n    import std.math;\n\
    \    import std.typecons;\n    import std.math;\n    import std.typecons;\n  \
    \  import std.math;\n    import std.typecons;\n    import std.math;\n   ", "{\n\
    \    long count = 0;\n    foreach(c; num)\n    {\n        if(c == '2' || c ==\
    \ '3' || c == '5' || c == '7' || c == 'B' || c == 'D')\n            count++;\n\
    \    }\n    return count;\n}", "{\n    long result = 0;\n    foreach(char c; num)\n\
    \    {\n        switch(c)\n        {\n            case '0':\n            case\
    \ '1':\n            case '2':\n            case '3':\n            case '4':\n\
    \            case '5':\n            case '6':\n            case '7':\n       \
    \     case '8':\n            case '9':\n                result += c - '0';\n \
    \               break;\n            case 'A':\n            case 'B':\n       \
    \     case 'C':\n            case 'D':\n            case 'E':\n            case\
    \ 'F':\n                result += c - 'A' + 10;\n                break;\n    \
    \    }\n    }\n    return result;\n}", "{\n    long result = 0;\n    foreach(i,\
    \ c; num)\n    {\n        if(c == 'A' || c == 'B' || c == 'D' || c == 'E')\n \
    \           result++;\n        else if(c == '2' || c == '3' || c == '5' || c ==\
    \ '7')\n            result++;\n    }\n    return result;\n}", "{\n    long result\
    \ = 0;\n    foreach(immutable c; num)\n    {\n        switch(c)\n        {\n \
    \           case '2':\n            case '3':\n            case '5':\n        \
    \    case '7':\n            case 'B':\n            case 'D':\n               \
    \ result++;\n                break;\n        }\n    }\n    return result;\n}",
  "{\n    long result = 0;\n    foreach(char c; num)\n    {\n        result += (c\
    \ - '0') * pow(16, num.length - 1);\n        num = num[1..$];\n    }\n    return\
    \ result;\n}", "{\n    long key = 0;\n    foreach(immutable c; num)\n    {\n \
    \       if(c == 'A' || c == 'B' || c == 'D' || c == 'E')\n            key++;\n\
    \        else if(c == '2' || c == '3' || c == '5' || c == '7')\n            key++;\n\
    \    }\n    return key;\n}", "{\n    long result = 0;\n    foreach(char c; num)\n\
    \    {\n        if(c == 'A' || c == 'B' || c == 'D' || c == '3' || c == '5' ||\
    \ c == '7')\n        {\n            result++;\n        }\n    }\n    return result;\n\
    }", "{\n    long result = 0;\n    foreach(char c; num)\n    {\n        result\
    \ += c;\n    }\n    return result;\n}", "{\n    long result = 0;\n    foreach(char\
    \ c; num)\n    {\n        if(c == 'A' || c == 'B' || c == 'D' || c == 'F')\n \
    \           result++;\n        else if(c == '2' || c == '3' || c == '5' || c ==\
    \ '7')\n            result++;\n    }\n    return result;\n}", "{\n    long result\
    \ = 0;\n    foreach(immutable char c; num)\n    {\n        switch(c)\n       \
    \ {\n            case '0':\n            case '1':\n            case '2':\n   \
    \         case '3':\n            case '4':\n            case '5':\n          \
    \  case '6':\n            case '7':\n            case '8':\n            case '9':\n\
    \                result += c - '0';\n                break;\n            case\
    \ 'A':\n            case 'B':\n            case 'C':\n            case 'D':\n\
    \            case 'E':\n            case 'F':\n                result += c - 'A'\
    \ + 10;\n                break;\n        }\n    }\n    return result;\n}", "{\n\
    \    long result = 0;\n    foreach(char c; num)\n    {\n        if(c == 'A' ||\
    \ c == 'B' || c == 'D' || c == '3' || c == '5' || c == '7')\n        {\n     \
    \       result++;\n        }\n    }\n    return result;\n}", "{\n    long result\
    \ = 0;\n    foreach(i, c; num)\n    {\n        result += (c - '0') * pow(16, i);\n\
    \    }\n    return result;\n}", "{\n    long result = 0;\n    foreach(char c;\
    \ num)\n    {\n        if(c == '0' || c == '1' || c == '2' || c == '3' || c ==\
    \ '4' || c == '5' || c == '6' || c == '7' || c == '8' || c == '9')\n        {\n\
    \            result += c - '0';\n        }\n        else if(c == 'A' || c == 'B'\
    \ || c == 'C' || c == 'D' || c == 'E' || c == 'F')\n        {\n            result\
    \ += c - 'A' + 10;\n        }\n    }\n    return result;\n}", "{\n    long result\
    \ = 0;\n    foreach(immutable c; num)\n    {\n        result = result * 16 + c;\n\
    \    }\n    return result;\n}", "{\n    long result = 0;\n    foreach(immutable\
    \ char c; num)\n    {\n        result = result * 16 + (c >= 'A' ? c - 'A' + 10\
    \ : c - '0');\n    }\n    return result;\n}", "{\n    long result = 0;\n    foreach(immutable\
    \ char c; num)\n    {\n        if(c == 'A' || c == 'B' || c == 'D' || c == 'E')\n\
    \            result += 1;\n    }\n    return result;\n}", "{\n    long result\
    \ = 0;\n    foreach(i, c; num)\n    {\n        result += (c - '0') * pow(16, num.length\
    \ - i - 1);\n    }\n    return result;\n}", "{\n    long count = 0;\n    foreach(char\
    \ c; num)\n    {\n        if(c == '2' || c == '3' || c == '5' || c == '7' || c\
    \ == 'B' || c == 'D')\n            count++;\n    }\n    return count;\n}", "{\n\
    \    long result = 0;\n    foreach(i, c; num)\n    {\n        if(c == 'A' || c\
    \ == 'B' || c == 'D' || c == 'E')\n            result++;\n        else if(c ==\
    \ '2' || c == '3' || c == '5' || c == '7')\n            result++;\n    }\n   \
    \ return result;\n}", "{\n    long result = 0;\n    foreach(char c; num)\n   \
    \ {\n        result += c;\n    }\n    return result;\n}", "{\n    long result\
    \ = 0;\n    foreach(char c; num)\n    {\n        if(c == 'A' || c == 'B' || c\
    \ == 'D' || c == '3' || c == '5' || c == '7')\n        {\n            result++;\n\
    \        }\n    }\n    return result;\n}", "{\n    long result = 0;\n    long\
    \ count = 0;\n    foreach(char c; num)\n    {\n        if(c == '2' || c == '3'\
    \ || c == '5' || c == '7' || c == 'B' || c == 'D')\n        {\n            count++;\n\
    \        }\n    }\n    return count;\n}", "{\n    long result = 0;\n    foreach(c;\
    \ num)\n    {\n        if(c == '0' || c == '1' || c == '4' || c == '6' || c ==\
    \ '8' || c == '9' || c == 'A' || c == 'C' || c == 'E')\n            result++;\n\
    \    }\n    return result;\n}", "{\n    long result = 0;\n    foreach(char c;\
    \ num)\n    {\n        result += c;\n    }\n    return result;\n}", "{\n    long\
    \ result = 0;\n    foreach(i, c; num)\n    {\n        if(c == 'A' || c == 'B'\
    \ || c == 'D' || c == 'E')\n            result++;\n        else if(c == '2' ||\
    \ c == '3' || c == '5' || c == '7')\n            result++;\n    }\n    return\
    \ result;\n}", "{\n    long result = 0;\n    foreach(immutable c; num)\n    {\n\
    \        switch(c)\n        {\n            case '0':\n            case '1':\n\
    \            case '2':\n            case '3':\n            case '4':\n       \
    \     case '5':\n            case '6':\n            case '7':\n            case\
    \ '8':\n            case '9':\n                result += c - '0';\n          \
    \      break;\n            case 'A':\n            case 'B':\n            case\
    \ 'C':\n            case 'D':\n            case 'E':\n            case 'F':\n\
    \                result += c - 'A' + 10;\n                break;\n        }\n\
    \    }\n    return result;\n}", "{\n    long result = 0;\n    foreach(char c;\
    \ num)\n    {\n        if(c == 'A' || c == 'B' || c == 'D' || c == '3' || c ==\
    \ '5' || c == '7')\n        {\n            result++;\n        }\n    }\n    return\
    \ result;\n}", "{\n    long result = 0;\n    foreach(char c; num)\n    {\n   \
    \     result += (c >= 'A') ? c - 'A' + 10 : c - '0';\n    }\n    return result;\n\
    }", "{\n    long result = 0;\n    foreach(char c; num)\n    {\n        result\
    \ += c;\n    }\n    return result;\n}", "{\n    long result = 0;\n    foreach(i,\
    \ c; num)\n    {\n        result += c;\n    }\n    return result;\n}", "{\n  \
    \  long result = 0;\n    foreach(char c; num)\n    {\n        if(c == '0' || c\
    \ == '1' || c == '4' || c == '6' || c == '8' || c == '9')\n            continue;\n\
    \        if(c == '2' || c == '3' || c == '5' || c == '7' || c == 'B' || c == 'D')\n\
    \            result++;\n    }\n    return result;\n}", "{\n    long res = 0;\n\
    \    foreach(immutable c; num)\n    {\n        if (c == 'A' || c == 'B' || c ==\
    \ 'D' || c == 'E')\n            res++;\n        else if (c == '2' || c == '3'\
    \ || c == '5' || c == '7')\n            res++;\n    }\n    return res;\n}", "{\n\
    \    long count = 0;\n    foreach(c; num)\n    {\n        if (c == '2' || c ==\
    \ '3' || c == '5' || c == '7' || c == 'B' || c == 'D')\n            count++;\n\
    \    }\n    return count;\n}", "{\n    long result = 0;\n    foreach(char c; num)\n\
    \    {\n        if(c == 'A' || c == 'B' || c == 'D' || c == 'E')\n           \
    \ result++;\n    }\n    return result;\n}", "{\n    long res = 0;\n    foreach(immutable\
    \ c; num)\n    {\n        if(c in \"2357BD\")\n            res++;\n    }\n   \
    \ return res;\n}", "{\n    long result = 0;\n    foreach(immutable char c; num)\n\
    \    {\n        if(c >= '0' && c <= '9')\n            result += c - '0';\n   \
    \     else if(c >= 'A' && c <= 'F')\n            result += c - 'A' + 10;\n   \
    \ }\n    return result;\n}", "{\n    long result = 0;\n    foreach(char c; num)\n\
    \    {\n        if(c == '0' || c == '1' || c == '2' || c == '3' || c == '4' ||\
    \ c == '5' || c == '6' || c == '7' || c == '8' || c == '9')\n        {\n     \
    \       result += c - '0';\n        }\n        else if(c == 'A' || c == 'B' ||\
    \ c == 'C' || c == 'D' || c == 'E' || c == 'F')\n        {\n            result\
    \ += c - 'A' + 10;\n        }\n    }\n    return result;\n}", "{\n    long result\
    \ = 0;\n    foreach(char c; num)\n    {\n        result += (c >= 'A') ? c - 'A'\
    \ + 10 : c - '0';\n    }\n    return result;\n}", "{\n    long count = 0;\n  \
    \  foreach(i; num)\n    {\n        if(i == '2' || i == '3' || i == '5' || i ==\
    \ '7' || i == 'B' || i == 'D')\n        {\n            count++;\n        }\n \
    \   }\n    return count;\n}", "{\n    long result = 0;\n    foreach(immutable\
    \ c; num)\n    {\n        switch(c)\n        {\n            case '0':\n      \
    \      case '1':\n            case '2':\n            case '3':\n            case\
    \ '4':\n            case '5':\n            case '6':\n            case '7':\n\
    \            case '8':\n            case '9':\n                result += c - '0';\n\
    \                break;\n            case 'A':\n            case 'B':\n      \
    \      case 'C':\n            case 'D':\n            case 'E':\n            case\
    \ 'F':\n                result += c - 'A' + 10;\n                break;\n    \
    \    }\n    }\n    return result;\n}", "{\n    long result = 0;\n    foreach(char\
    \ c; num)\n    {\n        long digit = 0;\n        if(c >= '0' && c <= '9')\n\
    \            digit = c - '0';\n        else if(c >= 'A' && c <= 'F')\n       \
    \     digit = c - 'A' + 10;\n        else\n            assert(false);\n      \
    \  result = result * 16 + digit;\n    }\n    return result;\n}", "{\n    long\
    \ count = 0;\n    foreach(i; num)\n    {\n        if(i == '2' || i == '3' || i\
    \ == '5' || i == '7' || i == 'B' || i == 'D')\n        {\n            count++;\n\
    \        }\n    }\n    return count;\n}", "{\n    long result = 0;\n    foreach(char\
    \ c; num)\n    {\n        result += c;\n    }\n    return result;\n}", "{\n  \
    \  long key = 0;\n    foreach(c; num)\n    {\n        key += c;\n    }\n    return\
    \ key;\n}", "{\n    long result = 0;\n    foreach(char c; num)\n    {\n      \
    \  if(c == 'A' || c == 'B' || c == 'D' || c == 'F')\n            result++;\n \
    \       else if(c == '2' || c == '3' || c == '5' || c == '7')\n            result++;\n\
    \    }\n    return result;\n}", "{\n    long result = 0;\n    foreach(c; num)\n\
    \    {\n        if(c == 'A' || c == 'B' || c == 'D' || c == '3' || c == '5' ||\
    \ c == '7')\n        {\n            result++;\n        }\n    }\n    return result;\n\
    }", "{\n    long result = 0;\n    foreach(i, c; num)\n    {\n        if(c == 'A'\
    \ || c == 'B' || c == 'D' || c == 'E')\n            result++;\n        else if(c\
    \ == '2' || c == '3' || c == '5' || c == '7')\n            result++;\n    }\n\
    \    return result;\n}", "{\n    long result = 0;\n    foreach(immutable c; num)\n\
    \    {\n        result += c;\n    }\n    return result;\n}", "{\n    long result\
    \ = 0;\n    foreach(char c; num)\n    {\n        switch(c)\n        {\n      \
    \      case '2':\n            case '3':\n            case '5':\n            case\
    \ '7':\n            case 'B':\n            case 'D':\n                result++;\n\
    \                break;\n            default:\n                break;\n      \
    \  }\n    }\n    return result;\n}", "{\n    long count = 0;\n    foreach(char\
    \ c; num)\n    {\n        if(c == '2' || c == '3' || c == '5' || c == '7' || c\
    \ == 'B' || c == 'D')\n            count++;\n    }\n    return count;\n}", "{\n\
    \    long result = 0;\n    foreach(c; num)\n    {\n        if(c == 'A' || c ==\
    \ 'B' || c == 'D' || c == '3' || c == '5' || c == '7')\n        {\n          \
    \  result++;\n        }\n    }\n    return result;\n}", "{\n    long result =\
    \ 0;\n    foreach(i, c; num)\n    {\n        result += (c - '0') * pow(16, num.length\
    \ - i - 1);\n    }\n    return result;\n}", "{\n    long result = 0;\n    foreach(i,\
    \ c; num)\n    {\n        if(c >= '0' && c <= '9')\n            result += (c -\
    \ '0') * pow(16, num.length - i - 1);\n        else if(c >= 'A' && c <= 'F')\n\
    \            result += (c - 'A' + 10) * pow(16, num.length - i - 1);\n    }\n\
    \    return result;\n}", "{\n    long result = 0;\n    foreach(char c; num)\n\
    \    {\n        result += c;\n    }\n    return result;\n}", "{\n    long count\
    \ = 0;\n    foreach(char c; num)\n    {\n        if(c == '2' || c == '3' || c\
    \ == '5' || c == '7' || c == 'B' || c == 'D')\n            count++;\n    }\n \
    \   return count;\n}", "{\n    long result = 0;\n    foreach(immutable c; num)\n\
    \    {\n        if(c == 'A' || c == 'B' || c == 'D' || c == 'E')\n           \
    \ result += 1;\n    }\n    return result;\n}", "{\n    long res = 0;\n    foreach(char\
    \ c; num)\n    {\n        if(c == '2' || c == '3' || c == '5' || c == '7' || c\
    \ == 'B' || c == 'D')\n            res++;\n    }\n    return res;\n}", "{\n  \
    \  long result = 0;\n    foreach(i, c; num)\n    {\n        result += (c - '0')\
    \ * pow(16, num.length - i - 1);\n    }\n    return result;\n}", "{\n    long\
    \ count = 0;\n    foreach(char c; num)\n    {\n        if(c == '2' || c == '3'\
    \ || c == '5' || c == '7' || c == 'B' || c == 'D')\n            count++;\n   \
    \ }\n    return count;\n}", "{\n    long result = 0;\n    foreach(char c; num)\n\
    \    {\n        if(c == 'A' || c == 'B' || c == 'D' || c == '3' || c == '5' ||\
    \ c == '7')\n        {\n            result++;\n        }\n    }\n    return result;\n\
    }", "{\n    long result = 0;\n    foreach(char c; num)\n    {\n        result\
    \ += c;\n    }\n    return result;\n}", "{\n    long[] primes = [2, 3, 5, 7, 11,\
    \ 13];\n    long result = 0;\n    foreach(char c; num)\n    {\n        if(c >=\
    \ '0' && c <= '9')\n        {\n            if(primes.canFind(c - '0'))\n     \
    \           result++;\n        }\n        else if(c >= 'A' && c <= 'F')\n    \
    \    {\n            if(primes.canFind(c - 'A' + 10))\n                result++;\n\
    \        }\n    }\n    return result;\n}", "{\n    long result = 0;\n    foreach(char\
    \ c; num)\n    {\n        result += c;\n    }\n    return result;\n}", "{\n  \
    \  long result = 0;\n    foreach(c; num)\n    {\n        if(c == 'A' || c == 'B'\
    \ || c == 'D' || c == '3' || c == '5' || c == '7')\n        {\n            result++;\n\
    \        }\n    }\n    return result;\n}", "{\n    long result = 0;\n    foreach(i,\
    \ c; num)\n    {\n        result += (c - '0') * pow(16, num.length - i - 1);\n\
    \    }\n    return result;\n}", "{\n    long result = 0;\n    long[] primes =\
    \ [2, 3, 5, 7, 11, 13];\n    foreach(long i; primes)\n    {\n        result +=\
    \ count(num, to!string(i, 16).toUpper);\n    }\n    return result;\n}", "{\n \
    \   long result = 0;\n    foreach(i, c; num)\n    {\n        result += (c >= 'A'\
    \ ? c - 'A' + 10 : c - '0') * pow(16, num.length - i - 1);\n    }\n    return\
    \ result;\n}", "{\n    long result = 0;\n    foreach(immutable char c; num)\n\
    \    {\n        result += c;\n    }\n    return result;\n}", "{\n    long result\
    \ = 0;\n    foreach(i, c; num)\n    {\n        result += (c - '0') * pow(16, num.length\
    \ - i - 1);\n    }\n    return result;\n}", "{\n    long count = 0;\n    foreach(c;\
    \ num)\n    {\n        if(c == '2' || c == '3' || c == '5' || c == '7' || c ==\
    \ 'B' || c == 'D')\n            count++;\n    }\n    return count;\n}", "{\n \
    \   long result = 0;\n    foreach(i, c; num)\n    {\n        result += c;\n  \
    \  }\n    return result;\n}", "{\n    long result = 0;\n    foreach(i, c; num)\n\
    \    {\n        result += (c - '0') * pow(16, i);\n    }\n    return result;\n\
    }"]
stop_tokens:
- "\n\n"
- "\nvoid"
- "\nbool"
- "\nint"

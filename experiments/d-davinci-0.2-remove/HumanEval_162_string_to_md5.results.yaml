language: d
name: HumanEval_162_string_to_md5
results:
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result = Nullable!(string).init;\n    if (text.length ==\
    \ 0)\n    {\n        return result;\n    }\n    import std.digest.md;\n    import\
    \ std.conv;\n    import std.array;\n    import std.algorithm;\n    import std.range;\n\
    \    import std.format;\n    import std.string;\n    import std.typecons;\n  \
    \  import std.math;\n    auto digest = MD5(text);\n    auto digest_array = digest.array;\n\
    \    auto digest_array_length = digest_array.length;\n    auto digest_array_length_half\
    \ = digest_array_length / 2;\n    auto digest_array_length_half_rounded = round(digest_array_length_half);\n\
    \    auto digest_array_length_half_rounded_int = cast(int)digest_array_length_half_rounded;\n\
    \    auto digest_array_length_half_rounded_int_minus_one = digest_array_length_half_rounded_int\
    \ - 1;\n    auto digest_array_length_half_rounded_int_minus_one_plus_one = digest_array_length_half_rounded_int_minus_one\
    \ + 1;\n    auto digest_array_length_half_rounded_int_minus_one_plus_one_plus_one\
    \ = digest_array_length_half_rounded_int_minus_one_plus_one + 1;\n    auto digest_array_length_half_rounded_int_minus_one_plus_one_plus_one_plus_one\
    \ = digest_array_length_half_rounded_int_minus_one_plus_one_plus_one + 1;\n  \
    \  auto digest_array_length_half_rounded_int_minus_one_plus_one_plus_one_plus_one_plus_one\
    \ = digest_array_length_half_rounded_int_minus_one_plus_one_plus_one_plus_one\
    \ + 1;\n    auto digest_array_length_half_rounded_int_minus_one_plus_one_plus_one_plus_one_plus_one_plus_one\
    \ = digest_array_length_half_rounded_\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpkakhrbhb.d(38): Error: semicolon expected following auto declaration,
    not `unittest`

    /tmp/tmpkakhrbhb.d(38): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkakhrbhb.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164200
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return Nullable!(string)();\n    import std.digest.md;\n\
    \    import std.conv;\n    auto md5 = MD5(text);\n    return to!string(md5);\n\
    }\n/*\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpckuf5e2j.d(19): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpckuf5e2j.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164200
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return null;\n    import std.digest.md;\n  \
    \  return md.md5(text);\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmps0n4beci.d(15): Error: undefined identifier `md`

    /tmp/tmps0n4beci.d(13): Error: cannot implicitly convert expression `null` of
    type `typeof(null)` to `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmps0n4beci.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164201
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return null;\n    else\n    {\n        import\
    \ std.digest.md;\n        return to!string(md(text));\n    }\n}\nunittest\n{\n\
    \    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbz1j3l5_.d(17): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    /tmp/tmpbz1j3l5_.d(13): Error: cannot implicitly convert expression `null` of
    type `typeof(null)` to `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbz1j3l5_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164201
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return null;\n    else\n    {\n        auto\
    \ md5 = new MD5;\n        md5.put(text);\n        return md5.finish().toString();\n\
    \    }\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto\
    \ result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get\
    \ == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpfr8wrmbu.d(16): Error: undefined identifier `MD5`

    /tmp/tmpfr8wrmbu.d(13): Error: cannot implicitly convert expression `null` of
    type `typeof(null)` to `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfr8wrmbu.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164201
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return null;\n    else\n    {\n        import\
    \ std.digest.md;\n        return md.md5(text);\n    }\n}\n/*\nunittest\n{\n  \
    \  alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello\
    \ world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpkqwuyd89.d(20): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkqwuyd89.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164200
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result;\n    if (text.length == 0)\n    {\n        return\
    \ result;\n    }\n    else\n    {\n        import std.digest.md;\n        import\
    \ std.conv;\n        import std.array;\n        import std.algorithm;\n      \
    \  import std.range;\n        import std.format;\n        import std.string;\n\
    \        import std.typecons;\n        import std.math;\n        import std.traits;\n\
    \        import std.range;\n        import std.algorithm;\n        import std.array;\n\
    \        import std.conv;\n        import std.digest.md;\n        import std.format;\n\
    \        import std.math;\n        import std.string;\n        import std.traits;\n\
    \        import std.typecons;\n        import std.algorithm;\n        import std.array;\n\
    \        import std.conv;\n        import std.digest.md;\n        import std.format;\n\
    \        import std.math;\n        import std.string;\n        import std.traits;\n\
    \        import std.typecons;\n        import std.algorithm;\n        import std.array;\n\
    \        import std.conv;\n        import std.digest.md;\n        import std.format;\n\
    \        import std.math;\n        import std.string;\n        import std.traits;\n\
    \        import std.typecons;\n        import std.algorithm;\n        import std.array;\n\
    \        import std.conv;\n        import std.digest.md;\n        import std.format;\n\
    \        import std.math;\n        import std.string;\n        import std.traits;\n\
    \        import std.typecons;\n        import std.algorithm;\n        import std.array;\n\
    \        import std.conv;\n        import std.digest.md;\n        import std.format;\n\
    \        import std.math;\n        import std.string;\n        import std.traits;\n\
    \        import std.typecons;\n        import std.algorithm;\n        import std.array;\n\
    \        import std.conv;\n        import std.digest.md;\n        import std.format;\n\
    \        import std.math\nunittest\n{\n    alias candidate = string_to_md5;\n\n\
    {\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpps0uff4u.d(81): Error: `;` expected

    /tmp/tmpps0uff4u.d(106): Error: found `End of File` when expecting `}` following
    compound statement

    /tmp/tmpps0uff4u.d(106): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpps0uff4u.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164200
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result;\n    if (text.length == 0)\n    {\n        return\
    \ result;\n    }\n    else\n    {\n        import std.digest.md;\n        import\
    \ std.conv;\n        import std.string;\n        auto md5 = MD5(text);\n     \
    \   result = to!string(md5);\n        return result;\n    }\n}\nunittest\n{\n\
    \    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpuphh2zfd.d(22): Error: cannot implicitly convert expression `text`
    of type `string` to `uint[4]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpuphh2zfd.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164201
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return null;\n    import std.digest.md;\n  \
    \  return digest(MD5, text);\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpf00mqrim.d(15): Error: cannot pass type `MD5` as a function argument

    /tmp/tmpf00mqrim.d(13): Error: cannot implicitly convert expression `null` of
    type `typeof(null)` to `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpf00mqrim.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164201
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result;\n    if (text.length == 0)\n    {\n        return\
    \ result;\n    }\n    import std.digest.md;\n    import std.conv;\n    import\
    \ std.string;\n    import std.algorithm;\n    import std.array;\n    import std.range;\n\
    \    import std.typecons;\n    import std.math;\n    import std.format;\n    import\
    \ std.stdio;\n    import std.traits;\n    import std.typecons;\n    import std.math;\n\
    \    import std.algorithm;\n    import std.array;\n    import std.range;\n   \
    \ import std.typecons;\n    import std.math;\n    import std.format;\n    import\
    \ std.stdio;\n    import std.traits;\n    import std.typecons;\n    import std.math;\n\
    \    import std.algorithm;\n    import std.array;\n    import std.range;\n   \
    \ import std.typecons;\n    import std.math;\n    import std.format;\n    import\
    \ std.stdio;\n    import std.traits;\n    import std.typecons;\n    import std.math;\n\
    \    import std.algorithm;\n    import std.array;\n    import std.range;\n   \
    \ import std.typecons;\n    import std.math;\n    import std.format;\n    import\
    \ std.stdio;\n    import std.traits;\n    import std.typecons;\n    import std.math;\n\
    \    import std.algorithm;\n    import std.array;\n    import std.range;\n   \
    \ import std.typecons;\n    import std.math;\n    import std.format;\n    import\
    \ std.stdio;\n    import std.traits;\n    import std.typecons;\n    import std.math;\n\
    \    import std.algorithm;\n    import std.array;\n    import std.range;\n   \
    \ import std.typecons;\n    import std.math;\n    import std.format;\n    import\
    \ std.stdio;\n    import std.traits;\n    import std.typecons;\n    import std.math;\n\
    \    import std.\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n   \
    \     auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpgw4orerz.d(81): Error: identifier expected following `package`

    /tmp/tmpgw4orerz.d(81): Error: `;` expected

    /tmp/tmpgw4orerz.d(106): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgw4orerz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164200
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0) \n    {\n        return Nullable!(string)();\n    }\n\
    \    else \n    {\n        import std.digest.md;\n        return Nullable!(string)(md.md5(text));\n\
    \    }\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto\
    \ result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get\
    \ == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpxaypskrp.d(19): Error: undefined identifier `md`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxaypskrp.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164201
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return null;\n    auto hash = new MD5;\n   \
    \ hash.put(text);\n    return hash.finish().toString();\n}\nunittest\n{\n    alias\
    \ candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\"\
    );\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp_xfed1ev.d(14): Error: undefined identifier `MD5`

    /tmp/tmp_xfed1ev.d(13): Error: cannot implicitly convert expression `null` of
    type `typeof(null)` to `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_xfed1ev.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164201
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return Nullable!(string)();\n    else\n    {\n\
    \        auto md5 = new MD5;\n        md5.put(text);\n        return md5.finish().toString();\n\
    \    }\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto\
    \ result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get\
    \ == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpwnmogkbn.d(16): Error: undefined identifier `MD5`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwnmogkbn.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164201
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result;\n    if (text.length > 0)\n    {\n        import\
    \ std.digest.md;\n        import std.conv;\n        import std.string;\n     \
    \   import std.algorithm;\n        import std.array;\n        import std.range;\n\
    \        import std.typecons;\n        import std.math;\n        auto md5 = MD5(text);\n\
    \        auto md5_str = to!string(md5);\n        auto md5_str_arr = md5_str.array();\n\
    \        auto md5_str_arr_len = md5_str_arr.length;\n        auto md5_str_arr_len_half\
    \ = md5_str_arr_len / 2;\n        auto md5_str_arr_len_half_ceil = ceil(md5_str_arr_len_half);\n\
    \        auto md5_str_arr_len_half_ceil_int = to!int(md5_str_arr_len_half_ceil);\n\
    \        auto md5_str_arr_len_half_ceil_int_half = md5_str_arr_len_half_ceil_int\
    \ / 2;\n        auto md5_str_arr_len_half_ceil_int_half_floor = floor(md5_str_arr_len_half_ceil_int_half);\n\
    \        auto md5_str_arr_len_half_ceil_int_half_floor_int = to!int(md5_str_arr_len_half_ceil_int_half_floor);\n\
    \        auto md5_str_arr_len_half_ceil_int_half_floor_int_half = md5_str_arr_len_half_ceil_int_half_floor_int\
    \ / 2;\n        auto md5_str_arr_len_half_ceil_int_half_floor_int_half_floor =\
    \ floor(md5_str_arr_len_half_ceil_int_half_floor_int_half);\n        auto md5_str_arr_len_half_ceil_int_half_floor_int_half_floor_int\
    \ = to\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpct4_vesu.d(36): Error: semicolon expected following auto declaration,
    not `unittest`

    /tmp/tmpct4_vesu.d(36): Error: found `unittest` instead of statement

    /tmp/tmpct4_vesu.d(61): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpct4_vesu.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164200
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return Nullable!(string)();\n    import std.digest.md;\n\
    \    return Nullable!(string)(md5(text));\n}\n/*\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1oom2esl.d(17): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1oom2esl.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164200
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result;\n    if (text.length == 0) {\n        return result;\n\
    \    }\n    import std.digest.md;\n    import std.conv;\n    import std.string;\n\
    \    import std.array;\n    import std.algorithm;\n    import std.range;\n   \
    \ import std.format;\n    import std.stdio;\n    import std.math;\n    import\
    \ std.typecons;\n    import std.traits;\n    import std.range;\n    import std.algorithm;\n\
    \    import std.array;\n    import std.string;\n    import std.conv;\n    import\
    \ std.stdio;\n    import std.format;\n    import std.math;\n    import std.typecons;\n\
    \    import std.traits;\n    import std.range;\n    import std.algorithm;\n  \
    \  import std.array;\n    import std.string;\n    import std.conv;\n    import\
    \ std.stdio;\n    import std.format;\n    import std.math;\n    import std.typecons;\n\
    \    import std.traits;\n    import std.range;\n    import std.algorithm;\n  \
    \  import std.array;\n    import std.string;\n    import std.conv;\n    import\
    \ std.stdio;\n    import std.format;\n    import std.math;\n    import std.typecons;\n\
    \    import std.traits;\n    import std.range;\n    import std.algorithm;\n  \
    \  import std.array;\n    import std.string;\n    import std.conv;\n    import\
    \ std.stdio;\n    import std.format;\n    import std.math;\n    import std.typecons;\n\
    \    import std.traits;\n    import std.range;\n    import std.algorithm;\n  \
    \  import std.array;\n    import std.string;\n    import std.conv;\n    import\
    \ std.stdio;\n    import std.format;\n    import std.math;\n    import std.typecons;\n\
    \    import std.traits;\n    import std.range;\n    import std.algorithm;\n  \
    \  import std.array;\n    import std.\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpw9lmz_w1.d(81): Error: identifier expected following `package`

    /tmp/tmpw9lmz_w1.d(81): Error: `;` expected

    /tmp/tmpw9lmz_w1.d(106): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpw9lmz_w1.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164200
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return null;\n    return md5(text);\n}\nunittest\n\
    {\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpd4dizc5w.d(14): Error: undefined identifier `md5`

    /tmp/tmpd4dizc5w.d(13): Error: cannot implicitly convert expression `null` of
    type `typeof(null)` to `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpd4dizc5w.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164201
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return null;\n    import std.digest.md;\n  \
    \  return to!string(MD5(text));\n}\n/*\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpfei0ygif.d(17): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfei0ygif.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164200
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return Nullable!(string)();\n    import std.digest.md;\n\
    \    return Nullable!(string)(md.md5(text));\n}\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmphb4mp20m.d(15): Error: undefined identifier `md`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphb4mp20m.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164201
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return Nullable!(string)();\n    import std.digest.md;\n\
    \    import std.conv;\n    return to!(string)(MD5(text));\n}\n/*\nunittest\n{\n\
    \    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp6zenfgsv.d(18): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6zenfgsv.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164200
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return Nullable!(string)();\n    return Nullable!(string)(md5(text));\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpcc14gh0n.d(14): Error: undefined identifier `md5`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcc14gh0n.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164201
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) md5_hash = Nullable!(string).init;\n    if (text.length ==\
    \ 0)\n    {\n        return md5_hash;\n    }\n    else\n    {\n        md5_hash.set(md5(text));\n\
    \        return md5_hash;\n    }\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpvtbd33z_.d(19): Error: no property `set` for type `Nullable!string`,
    did you mean `std.typecons.Nullable!string.Nullable.get`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvtbd33z_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164201
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return Nullable!(string)();\n    import std.digest.md;\n\
    \    return Nullable!(string)(md.md5(text));\n}\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmphb4mp20m.d(15): Error: undefined identifier `md`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphb4mp20m.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164201
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result;\n    if (text.length > 0)\n    {\n        import\
    \ std.digest.md;\n        import std.conv;\n        import std.string;\n     \
    \   import std.array;\n        import std.algorithm;\n        import std.range;\n\
    \        import std.typecons;\n        import std.math;\n        auto hash = MD5(text);\n\
    \        auto hash_string = hash.to!string;\n        auto hash_string_length =\
    \ hash_string.length;\n        auto hash_string_length_half = hash_string_length\
    \ / 2;\n        auto hash_string_length_half_ceil = ceil(hash_string_length_half);\n\
    \        auto hash_string_length_half_floor = floor(hash_string_length_half);\n\
    \        auto hash_string_length_half_ceil_minus_one = hash_string_length_half_ceil\
    \ - 1;\n        auto hash_string_length_half_floor_minus_one = hash_string_length_half_floor\
    \ - 1;\n        auto hash_string_length_half_ceil_minus_two = hash_string_length_half_ceil\
    \ - 2;\n        auto hash_string_length_half_floor_minus_two = hash_string_length_half_floor\
    \ - 2;\n        auto hash_string_length_half_ceil_minus_three = hash_string_length_half_ceil\
    \ - 3;\n        auto hash_string_length_half_floor_minus_three = hash_string_length_half_floor\
    \ - 3;\n        auto hash_string_length_half_ceil_minus_four = hash_string_length_half_ceil\
    \ - 4;\n        auto hash_string_length_half_floor_minus_four = hash_string_length_half_floor\
    \ - 4;\n        auto hash_string_length_half_ceil_minus_five = hash_string_length_half_ceil\
    \ - 5;\n        auto hash_string_length_half_floor_minus_five = hash_string_length_half_floor\
    \ - 5;\n        auto hash_string_length_half_ceil_minus_six = hash_string\nunittest\n\
    {\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpoc0ggh0i.d(40): Error: semicolon expected following auto declaration,
    not `unittest`

    /tmp/tmpoc0ggh0i.d(40): Error: found `unittest` instead of statement

    /tmp/tmpoc0ggh0i.d(65): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpoc0ggh0i.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164200
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return null;\n    import std.digest.md;\n  \
    \  return to!string(md(text));\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp6phbswko.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    /tmp/tmp6phbswko.d(13): Error: cannot implicitly convert expression `null` of
    type `typeof(null)` to `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6phbswko.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164201
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result = Nullable!(string).init;\n    if (text.length > 0)\n\
    \    {\n        import std.digest.md;\n        import std.conv;\n        import\
    \ std.string;\n        import std.array;\n        import std.algorithm;\n    \
    \    import std.range;\n        import std.format;\n        import std.typecons;\n\
    \        import std.math;\n        import std.traits;\n        import std.meta;\n\
    \        import std.range;\n        import std.algorithm;\n        import std.array;\n\
    \        import std.conv;\n        import std.string;\n        import std.typecons;\n\
    \        import std.math;\n        import std.traits;\n        import std.meta;\n\
    \        import std.range;\n        import std.algorithm;\n        import std.array;\n\
    \        import std.conv;\n        import std.string;\n        import std.typecons;\n\
    \        import std.math;\n        import std.traits;\n        import std.meta;\n\
    \        import std.range;\n        import std.algorithm;\n        import std.array;\n\
    \        import std.conv;\n        import std.string;\n        import std.typecons;\n\
    \        import std.math;\n        import std.traits;\n        import std.meta;\n\
    \        import std.range;\n        import std.algorithm;\n        import std.array;\n\
    \        import std.conv;\n        import std.string;\n        import std.typecons;\n\
    \        import std.math;\n        import std.traits;\n        import std.meta;\n\
    \        import std.range;\n        import std.algorithm;\n        import std.array;\n\
    \        import std.conv;\n        import std.string;\n        import std.typecons;\n\
    \        import std.math;\n        import std.traits;\n        import std.meta;\n\
    \        import std.range;\n        import std.algorithm;\n        import std.array;\n\
    \        import std.conv;\n        import std.string;\n        import std.typecons;\n\
    \        import std.math;\n        import std.traits;\n        import std.meta;\n\
    unittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result =\
    \ candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmph4ys_hso.d(80): Error: found `unittest` instead of statement

    /tmp/tmph4ys_hso.d(105): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmph4ys_hso.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164200
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) ret;\n    if (text.length == 0)\n    {\n        return ret;\n\
    \    }\n    else\n    {\n        import std.digest.md;\n        import std.conv;\n\
    \        import std.array;\n        import std.algorithm;\n        import std.range;\n\
    \        import std.format;\n        import std.string;\n        import std.typecons;\n\
    \        import std.math;\n        import std.ascii;\n        import std.datetime;\n\
    \        import std.file;\n        import std.stdio;\n        import std.traits;\n\
    \        import std.typecons;\n        import std.uni;\n        import std.uri;\n\
    \        import std.variant;\n        import std.xml;\n        import std.zip;\n\
    \        import std.zlib;\n        import std.regex;\n        import std.range;\n\
    \        import std.algorithm;\n        import std.array;\n        import std.conv;\n\
    \        import std.datetime;\n        import std.format;\n        import std.math;\n\
    \        import std.range;\n        import std.regex;\n        import std.string;\n\
    \        import std.traits;\n        import std.typecons;\n        import std.uni;\n\
    \        import std.uri;\n        import std.variant;\n        import std.xml;\n\
    \        import std.zip;\n        import std.zlib;\n        import std.digest.md;\n\
    \        import std.digest.sha;\n        import std.digest.crc;\n        import\
    \ std.digest.adler;\n        import std.digest.hmac;\n        import std.digest.hmac;\n\
    \        import std.digest.crc;\n        import std.digest.adler;\n        import\
    \ std.digest.sha;\n        import std.digest.md;\n        import std.digest.sha;\n\
    \        import std.digest.crc;\n        import std.digest.adler;\n        import\
    \ std.digest.hmac;\n        import std.digest.hmac;\n        import std.digest.crc;\n\
    \nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpuhpf1arq.d(76): Error: found `unittest` instead of statement

    /tmp/tmpuhpf1arq.d(101): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpuhpf1arq.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164200
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0) \n    {\n        return Nullable!(string)();\n    }\n\
    \    else \n    {\n        return Nullable!(string)(md5(text));\n    }\n}\nunittest\n\
    {\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp8r01gry0.d(18): Error: undefined identifier `md5`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8r01gry0.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164201
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result = Nullable!(string).init;\n    if(text.length == 0)\n\
    \    {\n        return result;\n    }\n    import std.digest.md;\n    import std.conv;\n\
    \    auto hash = MD5(text);\n    result.set(to!string(hash));\n    return result;\n\
    }\n/*\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpwl_3_2pa.d(23): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwl_3_2pa.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164200
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return null;\n    import std.digest.md;\n  \
    \  return md.md5(text);\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmps0n4beci.d(15): Error: undefined identifier `md`

    /tmp/tmps0n4beci.d(13): Error: cannot implicitly convert expression `null` of
    type `typeof(null)` to `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmps0n4beci.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164201
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result;\n    if (text.length == 0)\n    {\n        return\
    \ result;\n    }\n    else\n    {\n        import std.digest.md;\n        import\
    \ std.conv;\n        import std.algorithm;\n        import std.array;\n      \
    \  import std.range;\n        import std.typecons;\n        import std.math;\n\
    \        import std.string;\n        import std.range;\n        import std.algorithm;\n\
    \        import std.array;\n        import std.typecons;\n        import std.math;\n\
    \        import std.string;\n        import std.range;\n        import std.algorithm;\n\
    \        import std.array;\n        import std.typecons;\n        import std.math;\n\
    \        import std.string;\n        import std.range;\n        import std.algorithm;\n\
    \        import std.array;\n        import std.typecons;\n        import std.math;\n\
    \        import std.string;\n        import std.range;\n        import std.algorithm;\n\
    \        import std.array;\n        import std.typecons;\n        import std.math;\n\
    \        import std.string;\n        import std.range;\n        import std.algorithm;\n\
    \        import std.array;\n        import std.typecons;\n        import std.math;\n\
    \        import std.string;\n        import std.range;\n        import std.algorithm;\n\
    \        import std.array;\n        import std.typecons;\n        import std.math;\n\
    \        import std.string;\n        import std.range;\n        import std.algorithm;\n\
    \        import std.array;\n        import std.typecons;\n        import std.math;\n\
    \        import std.string;\n        import std.range;\n        import std.algorithm;\n\
    \        import std.array;\n        import std.typecons;\n        import std.math;\n\
    \        import std.string;\n        import std.range;\n        import std.algorithm;\n\
    \        import std.array;\n        import std.typecons;\n        import std.math;\n\
    \        import std.string;\n        import std.range;\n        import std.algorithm;\n\
    \nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp5n39a474.d(84): Error: found `unittest` instead of statement

    /tmp/tmp5n39a474.d(109): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5n39a474.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164200
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  import std.digest.md;\n    import std.conv;\n    import std.algorithm;\n  \
    \  import std.range;\n    import std.array;\n    import std.string;\n    import\
    \ std.typecons;\n    import std.math;\n    if (text.empty)\n    {\n        return\
    \ Nullable!(string)();\n    }\n    else\n    {\n        auto md5 = MD5(text);\n\
    \        auto md5_string = format(\"%s\", md5);\n        return Nullable!(string)(md5_string);\n\
    \    }\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto\
    \ result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get\
    \ == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbrzusqcn.d(26): Error: cannot implicitly convert expression `text`
    of type `string` to `uint[4]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbrzusqcn.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164201
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return null;\n    import std.digest.md;\n  \
    \  auto md5 = new MD5;\n    md5.put(text);\n    return md5.finish().toHexString();\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpfkmlkrke.d(16): Error: function `std.digest.md.MD5.put(scope const(ubyte)[]
    data...)` is not callable using argument types `(string)`

    /tmp/tmpfkmlkrke.d(16):        cannot pass argument `text` of type `string` to
    parameter `scope const(ubyte)[] data...`

    /tmp/tmpfkmlkrke.d(13): Error: cannot implicitly convert expression `null` of
    type `typeof(null)` to `Nullable!string`

    /tmp/tmpfkmlkrke.d(17): Error: cannot implicitly convert expression `toHexString((*md5).finish())`
    of type `char[32]` to `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfkmlkrke.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164201
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  import std.digest.md;\n    import std.conv;\n    import std.string;\n    import\
    \ std.algorithm;\n    import std.range;\n    import std.array;\n    import std.typecons;\n\
    \    import std.math;\n    if (text.length == 0)\n    {\n        return Nullable!(string)();\n\
    \    }\n    else\n    {\n        return Nullable!(string)(to!string(md5(text)));\n\
    \    }\n}\n/*\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n      \
    \  auto result = candidate(\"Hello world\");\n        assert(!result.isNull &&\
    \ result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result\
    \ = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result\
    \ = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpdgs4w2f8.d(29): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdgs4w2f8.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164200
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return null;\n    import std.digest.md;\n  \
    \  return to!string(MD5(text));\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpn47umobu.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    /tmp/tmpn47umobu.d(13): Error: cannot implicitly convert expression `null` of
    type `typeof(null)` to `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpn47umobu.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164201
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return null;\n    import std.digest.md;\n  \
    \  return md.md5(text);\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmps0n4beci.d(15): Error: undefined identifier `md`

    /tmp/tmps0n4beci.d(13): Error: cannot implicitly convert expression `null` of
    type `typeof(null)` to `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmps0n4beci.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164201
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0) \n    {\n        return Nullable!(string)();\n    }\n\
    \    import std.digest.md;\n    import std.conv;\n    import std.array;\n    import\
    \ std.algorithm;\n    import std.range;\n    import std.format;\n    import std.string;\n\
    \    import std.math;\n    import std.typecons;\n    import std.traits;\n    import\
    \ std.conv;\n    import std.range;\n    import std.algorithm;\n    import std.array;\n\
    \    import std.digest.md;\n    import std.format;\n    import std.math;\n   \
    \ import std.string;\n    import std.traits;\n    import std.typecons;\n    import\
    \ std.math;\n    import std.typecons;\n    import std.math;\n    import std.typecons;\n\
    \    import std.math;\n    import std.typecons;\n    import std.math;\n    import\
    \ std.typecons;\n    import std.math;\n    import std.typecons;\n    import std.math;\n\
    \    import std.typecons;\n    import std.math;\n    import std.typecons;\n  \
    \  import std.math;\n    import std.typecons;\n    import std.math;\n    import\
    \ std.typecons;\n    import std.math;\n    import std.typecons;\n    import std.math;\n\
    \    import std.typecons;\n    import std.math;\n    import std.typecons;\n  \
    \  import std.math;\n    import std.typecons;\n    import std.math;\n    import\
    \ std.typecons;\n    import std.math;\n    import std.typecons;\n    import std.math;\n\
    \    import std.typecons;\n    import std.math;\n    import std.typecons;\n  \
    \  import std.math;\n    import std.typecons;\n    import std.math;\n    import\
    \ std.typecons;\n    import std.math;\n    import std.typecons;\n    import std.math;\n\
    \    import std.typecons;\n    import std.math;\n    import std.typecons;\n\n\
    unittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result =\
    \ candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpmc9jbrow.d(81): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmc9jbrow.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164200
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return Nullable!(string)();\n    import std.digest.md;\n\
    \    return Nullable!(string)(md.md5(text));\n}\n/*\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmplki6m_ak.d(17): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplki6m_ak.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164200
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  import std.digest.md;\n    import std.conv;\n    import std.string;\n    import\
    \ std.array;\n    import std.algorithm;\n    import std.range;\n    import std.typecons;\n\
    \    import std.math;\n    Nullable!(string) ret = Nullable!(string).init;\n \
    \   if (text.length > 0)\n    {\n        auto md5 = MD5(text);\n        ret.assign(md5.toString());\n\
    \    }\n    return ret;\n}\n/*\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp61xz85uo.d(28): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp61xz85uo.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164200
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result = Nullable!(string).init;\n    if (text.length ==\
    \ 0)\n    {\n        return result;\n    }\n    else\n    {\n        import std.digest.md;\n\
    \        import std.conv;\n        import std.algorithm;\n        import std.array;\n\
    \        import std.range;\n        import std.string;\n        import std.typecons;\n\
    \        import std.math;\n        import std.stdio;\n        import std.traits;\n\
    \        import std.typecons;\n        import std.algorithm;\n        import std.range;\n\
    \        import std.string;\n        import std.conv;\n        import std.algorithm;\n\
    \        import std.array;\n        import std.range;\n        import std.string;\n\
    \        import std.typecons;\n        import std.math;\n        import std.stdio;\n\
    \        import std.traits;\n        import std.typecons;\n        import std.algorithm;\n\
    \        import std.range;\n        import std.string;\n        import std.conv;\n\
    \        import std.algorithm;\n        import std.array;\n        import std.range;\n\
    \        import std.string;\n        import std.typecons;\n        import std.math;\n\
    \        import std.stdio;\n        import std.traits;\n        import std.typecons;\n\
    \        import std.algorithm;\n        import std.range;\n        import std.string;\n\
    \        import std.conv;\n        import std.algorithm;\n        import std.array;\n\
    \        import std.range;\n        import std.string;\n        import std.typecons;\n\
    \        import std.math;\n        import std.stdio;\n        import std.traits;\n\
    \        import std.typecons;\n        import std.algorithm;\n        import std.range;\n\
    \        import std.string;\n        import std.conv;\n        import std.algorithm;\n\
    \        import std.array;\n        import std.range;\n        import std.string;\n\
    \        import std.typecons;\n        import std.math;\n        import std.stdio;\n\
    \        import std.traits;\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpeu3vwk9h.d(81): Error: found `unittest` instead of statement

    /tmp/tmpeu3vwk9h.d(106): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpeu3vwk9h.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164200
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0) \n    {\n        return null;\n    }\n    auto md5 =\
    \ new MD5;\n    md5.put(text);\n    return md5.finish().toString();\n}\nunittest\n\
    {\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp__puxlq5.d(16): Error: undefined identifier `MD5`

    /tmp/tmp__puxlq5.d(14): Error: cannot implicitly convert expression `null` of
    type `typeof(null)` to `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp__puxlq5.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164201
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result;\n    if (text.length == 0) \n    {\n        return\
    \ result;\n    }\n    import std.digest.md;\n    import std.conv;\n    import\
    \ std.string;\n    import std.algorithm;\n    import std.array;\n    import std.range;\n\
    \    import std.typecons;\n    import std.math;\n    auto hash = MD5(text);\n\
    \    auto hash_string = hash.to!string;\n    result = hash_string;\n    return\
    \ result;\n}\n/*\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n   \
    \     auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp57lux6zq.d(30): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp57lux6zq.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164200
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result;\n    if (text.length > 0) \n    {\n        import\
    \ std.digest.md;\n        import std.conv;\n        import std.array;\n      \
    \  import std.algorithm;\n        import std.range;\n        import std.string;\n\
    \        import std.format;\n        import std.typecons;\n        import std.math;\n\
    \        auto md5 = MD5(text);\n        auto digest = md5.finish();\n        auto\
    \ hex_digest = digest.map!(to!string).map!(to!string).map!(to!string).map!(to!string).map!(to!string).map!(to!string).map!(to!string).map!(to!string).map!(to!string).map!(to!string).map!(to!string).map!(to!string).map!(to!string).map!(to!string).map!(to!string).map!(to!string).map!(to!string).map!(to!string).map!(to!string).map!(to!string).map!(to!string).map!(to!string).map!(to!string).map!(to!string).map!(to!string).map!(to!string).map!(to!string).map!(to!string).map!(to!string).map!(to!string).map!(to!string).map!(to!string).map!(to!string).map!(to!string).map!(to!string).map!(to!string).map!(to!string).map!(to!string).map!(to!string).map!(to!string).map!(to!string).map!(to!string).map!(to!string).map!(to!string).map!(to!string).map!(to!string).map!(to!string).map!(to!string).map!(to!string).map!(to!string).map!(to!string).map!(to!string).map!(to!string).map!(to!string).map!(to!string).map\n\
    unittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result =\
    \ candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpmk441n4a.d(27): Error: semicolon expected following auto declaration,
    not `unittest`

    /tmp/tmpmk441n4a.d(27): Error: found `unittest` instead of statement

    /tmp/tmpmk441n4a.d(52): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmk441n4a.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164200
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return null;\n    import std.digest.md;\n  \
    \  import std.conv;\n    return to!string(MD5(text));\n}\nunittest\n{\n    alias\
    \ candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\"\
    );\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpmnxvcfvl.d(16): Error: cannot implicitly convert expression `text`
    of type `string` to `uint[4]`

    /tmp/tmpmnxvcfvl.d(13): Error: cannot implicitly convert expression `null` of
    type `typeof(null)` to `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmnxvcfvl.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164201
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result;\n    if(text.length == 0)\n    {\n        return\
    \ result;\n    }\n    else\n    {\n        auto md5 = new MD5;\n        md5.put(text);\n\
    \        result = md5.finish().toString();\n        return result;\n    }\n}\n\
    /*\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpugs8gdfw.d(25): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpugs8gdfw.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164200
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return null;\n    auto hash = new MD5;\n   \
    \ hash.put(text);\n    return hash.finish().toString();\n}\nunittest\n{\n    alias\
    \ candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\"\
    );\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp_xfed1ev.d(14): Error: undefined identifier `MD5`

    /tmp/tmp_xfed1ev.d(13): Error: cannot implicitly convert expression `null` of
    type `typeof(null)` to `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_xfed1ev.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164201
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return Nullable!(string)();\n    import std.digest.md;\n\
    \    return Nullable!(string)(md.md5(text));\n}\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmphb4mp20m.d(15): Error: undefined identifier `md`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphb4mp20m.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164201
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return Nullable!(string)();\n    import std.digest.md;\n\
    \    return Nullable!(string)(md.md5(text));\n}\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmphb4mp20m.d(15): Error: undefined identifier `md`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphb4mp20m.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164201
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return Nullable!(string)();\nunittest\n{\n \
    \   alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpapi7mksz.d(14): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpapi7mksz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164200
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return Nullable!(string)();\n    return Nullable!(string)(md5(text));\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpcc14gh0n.d(14): Error: undefined identifier `md5`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcc14gh0n.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164201
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return Nullable!(string)();\n    import std.digest.md;\n\
    \    return Nullable!(string)(to!string(MD5(text)));\n}\nunittest\n{\n    alias\
    \ candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\"\
    );\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpla7ihluf.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpla7ihluf.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164201
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result;\n    if (text.length == 0)\n    {\n        return\
    \ result;\n    }\n    else\n    {\n        import std.digest.md;\n        import\
    \ std.conv;\n        result = to!string(MD5(text));\n        return result;\n\
    \    }\n}\n/*\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n      \
    \  auto result = candidate(\"Hello world\");\n        assert(!result.isNull &&\
    \ result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result\
    \ = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result\
    \ = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpj1se1miy.d(25): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpj1se1miy.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164200
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return Nullable!(string)();\n    import std.digest.md;\n\
    \    return Nullable!(string)(to!string(md5(text)));\n}\nunittest\n{\n    alias\
    \ candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\"\
    );\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpa6zpugzt.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpa6zpugzt.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164202
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return null;\n    else\n    {\n        import\
    \ std.digest.md;\n        return md.md5(text);\n    }\n}\nunittest\n{\n    alias\
    \ candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\"\
    );\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpu554om14.d(17): Error: undefined identifier `md`

    /tmp/tmpu554om14.d(13): Error: cannot implicitly convert expression `null` of
    type `typeof(null)` to `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpu554om14.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164202
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return Nullable!(string)();\n    import std.digest.md;\n\
    \    return Nullable!(string)(md5(text));\n}\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp33xe3592.d(15): Error: undefined identifier `md5`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp33xe3592.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164202
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return null;\n    import std.digest.md;\n  \
    \  return to!string(md5(text));\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpvyxf6gvw.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    /tmp/tmpvyxf6gvw.d(13): Error: cannot implicitly convert expression `null` of
    type `typeof(null)` to `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvyxf6gvw.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164202
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return Nullable!(string)();\n    import std.digest.md;\n\
    \    return md5(text);\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp8z6ug4bj.d(15): Error: undefined identifier `md5`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8z6ug4bj.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164202
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return Nullable!(string)();\n    import std.digest.md;\n\
    \    return Nullable!(string)(to!string(MD5(text)));\n}\nunittest\n{\n    alias\
    \ candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\"\
    );\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpla7ihluf.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpla7ihluf.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164201
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return null;\n    import std.digest.md;\n  \
    \  return md5(text);\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n\
    {\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpnv3_1y2k.d(15): Error: undefined identifier `md5`

    /tmp/tmpnv3_1y2k.d(13): Error: cannot implicitly convert expression `null` of
    type `typeof(null)` to `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnv3_1y2k.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164202
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0) \n    {\n        return Nullable!(string)();\n    }\n\
    \    import std.digest.md;\n    import std.conv;\n    auto md5 = MD5(text);\n\
    \    return to!string(md5);\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp3982fdrw.d(18): Error: cannot implicitly convert expression `text`
    of type `string` to `uint[4]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3982fdrw.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164202
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result;\n    if (text.length == 0)\n    {\n        return\
    \ result;\n    }\n    import std.digest.md;\n    import std.conv;\n    import\
    \ std.array;\n    import std.algorithm;\n    import std.range;\n    import std.format;\n\
    \    import std.string;\n    import std.typecons;\n    import std.math;\n    ubyte[]\
    \ md5_hash = MD5(text);\n    string md5_hash_str = to!string(md5_hash);\n    result\
    \ = md5_hash_str;\n    return result;\n}\n/*\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpxa68yp_e.d(31): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxa68yp_e.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164201
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return null;\n    import std.digest.md;\n  \
    \  return to!string(md5(text));\n}\n/*\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpy4c60z74.d(17): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpy4c60z74.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164201
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0) return null;\n    import std.digest.md;\n    return to!string(md5(text));\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp_xwhp9e9.d(14): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    /tmp/tmp_xwhp9e9.d(12): Error: cannot implicitly convert expression `null` of
    type `typeof(null)` to `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_xwhp9e9.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164202
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0) return Nullable!(string)();\n    import std.digest.md;\n\
    \    return Nullable!(string)(md.md5(text));\n}\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4w6jz41w.d(14): Error: undefined identifier `md`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4w6jz41w.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164202
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return null;\n    import std.digest.md;\n  \
    \  import std.conv;\n    return to!string(md5(text));\n}\nunittest\n{\n    alias\
    \ candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\"\
    );\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpnkyxt3og.d(16): Error: undefined identifier `md5`

    /tmp/tmpnkyxt3og.d(13): Error: cannot implicitly convert expression `null` of
    type `typeof(null)` to `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnkyxt3og.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164202
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return null;\n    import std.digest.md;\n  \
    \  import std.conv;\n    return to!string(MD5(text));\n}\n/*\nunittest\n{\n  \
    \  alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello\
    \ world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmphd45i005.d(18): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphd45i005.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164201
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return null;\n    return md5(text);\n}\nunittest\n\
    {\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpd4dizc5w.d(14): Error: undefined identifier `md5`

    /tmp/tmpd4dizc5w.d(13): Error: cannot implicitly convert expression `null` of
    type `typeof(null)` to `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpd4dizc5w.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164201
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return null;\n    import std.digest.md;\n  \
    \  return md.md5(text);\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmps0n4beci.d(15): Error: undefined identifier `md`

    /tmp/tmps0n4beci.d(13): Error: cannot implicitly convert expression `null` of
    type `typeof(null)` to `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmps0n4beci.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164201
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return null;\n    else\n    {\n        auto\
    \ md5 = new MD5;\n        md5.put(text);\n        return md5.finish().toString();\n\
    \    }\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto\
    \ result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get\
    \ == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpfr8wrmbu.d(16): Error: undefined identifier `MD5`

    /tmp/tmpfr8wrmbu.d(13): Error: cannot implicitly convert expression `null` of
    type `typeof(null)` to `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfr8wrmbu.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164201
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return null;\n    import std.digest.md;\n  \
    \  auto md5 = MD5(text);\n    return md5.toString();\n}\n/*\nunittest\n{\n   \
    \ alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello\
    \ world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpl_0zlhoe.d(18): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpl_0zlhoe.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164201
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result;\n    if (text.length == 0)\n    {\n        return\
    \ result;\n    }\n    else\n    {\n        import std.digest.md;\n        import\
    \ std.conv;\n        import std.string;\n        import std.array;\n        import\
    \ std.algorithm;\n        import std.range;\n        import std.typecons;\n  \
    \      import std.math;\n        import std.format;\n        import std.traits;\n\
    \        import std.meta;\n        import std.typecons;\n        import std.range;\n\
    \        import std.algorithm;\n        import std.array;\n        import std.string;\n\
    \        import std.conv;\n        import std.digest.md;\n        import std.format;\n\
    \        import std.math;\n        import std.meta;\n        import std.traits;\n\
    \        import std.typecons;\n        import std.range;\n        import std.algorithm;\n\
    \        import std.array;\n        import std.string;\n        import std.conv;\n\
    \        import std.digest.md;\n        import std.format;\n        import std.math;\n\
    \        import std.meta;\n        import std.traits;\n        import std.typecons;\n\
    \        import std.range;\n        import std.algorithm;\n        import std.array;\n\
    \        import std.string;\n        import std.conv;\n        import std.digest.md;\n\
    \        import std.format;\n        import std.math;\n        import std.meta;\n\
    \        import std.traits;\n        import std.typecons;\n        import std.range;\n\
    \        import std.algorithm;\n        import std.array;\n        import std.string;\n\
    \        import std.conv;\n        import std.digest.md;\n        import std.format;\n\
    \        import std.math;\n        import std.meta;\n        import std.traits;\n\
    \        import std.typecons;\n        import std.range;\n        import std.algorithm;\n\
    \        import std.array;\n        import std.string;\n        import std.conv;\n\
    \        import std.digest.md;\n        import std\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpvylpf0sg.d(82): Error: `;` expected

    /tmp/tmpvylpf0sg.d(107): Error: found `End of File` when expecting `}` following
    compound statement

    /tmp/tmpvylpf0sg.d(107): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvylpf0sg.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164201
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result;\n    if (text.length == 0)\n    {\n        return\
    \ result;\n    }\n    import std.digest.md;\n    import std.conv;\n    import\
    \ std.string;\n    import std.algorithm;\n    import std.array;\n    import std.range;\n\
    \    import std.typecons;\n    import std.math;\n    import std.format;\n    import\
    \ std.traits;\n    import std.stdio;\n    import std.conv;\n    import std.exception;\n\
    \    import std.range;\n    import std.algorithm;\n    import std.array;\n   \
    \ import std.string;\n    import std.typecons;\n    import std.math;\n    import\
    \ std.digest.md;\n    import std.digest.sha;\n    import std.digest.crc;\n   \
    \ import std.digest.adler;\n    import std.digest.hmac;\n    import std.digest.md;\n\
    \    import std.digest.sha;\n    import std.digest.crc;\n    import std.digest.adler;\n\
    \    import std.digest.hmac;\n    import std.digest.md;\n    import std.digest.sha;\n\
    \    import std.digest.crc;\n    import std.digest.adler;\n    import std.digest.hmac;\n\
    \    import std.digest.md;\n    import std.digest.sha;\n    import std.digest.crc;\n\
    \    import std.digest.adler;\n    import std.digest.hmac;\n    import std.digest.md;\n\
    \    import std.digest.sha;\n    import std.digest.crc;\n    import std.digest.adler;\n\
    \    import std.digest.hmac;\n    import std.digest.md;\n    import std.digest.sha;\n\
    \    import std.digest.crc;\n    import std.digest.adler;\n    import std.digest.hmac;\n\
    \    import std.digest.md;\n    import std.digest.\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpkboafwgy.d(68): Error: identifier expected following `package`

    /tmp/tmpkboafwgy.d(68): Error: `;` expected

    /tmp/tmpkboafwgy.d(93): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkboafwgy.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164201
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result;\n    if (text.length > 0)\n    {\n        import\
    \ std.digest.md;\n        import std.conv;\n        import std.array;\n      \
    \  import std.algorithm;\n        import std.range;\n        import std.format;\n\
    \        import std.string;\n        import std.typecons;\n        import std.math;\n\
    \        import std.stdio;\n        import std.traits;\n        import std.typecons;\n\
    \        import std.math;\n        import std.stdio;\n        import std.traits;\n\
    \        import std.typecons;\n        import std.math;\n        import std.stdio;\n\
    \        import std.traits;\n        import std.typecons;\n        import std.math;\n\
    \        import std.stdio;\n        import std.traits;\n        import std.typecons;\n\
    \        import std.math;\n        import std.stdio;\n        import std.traits;\n\
    \        import std.typecons;\n        import std.math;\n        import std.stdio;\n\
    \        import std.traits;\n        import std.typecons;\n        import std.math;\n\
    \        import std.stdio;\n        import std.traits;\n        import std.typecons;\n\
    \        import std.math;\n        import std.stdio;\n        import std.traits;\n\
    \        import std.typecons;\n        import std.math;\n        import std.stdio;\n\
    \        import std.traits;\n        import std.typecons;\n        import std.math;\n\
    \        import std.stdio;\n        import std.traits;\n        import std.typecons;\n\
    \        import std.math;\n        import std.stdio;\n        import std.traits;\n\
    \        import std.typecons;\n        import std.math;\n        import std.stdio;\n\
    \        import std.traits;\n        import std.typecons;\n        import std.math;\n\
    \        import std.stdio;\n        import std.traits;\n        import std.typecons;\n\
    \        import std.math;\n        import std.stdio;\n        import std.traits;\n\
    unittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result =\
    \ candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpip53snnj.d(78): Error: found `unittest` instead of statement

    /tmp/tmpip53snnj.d(103): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpip53snnj.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164201
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return Nullable!(string)();\n    import std.digest.md;\n\
    \    return Nullable!(string)(md.md5(text));\n}\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmphb4mp20m.d(15): Error: undefined identifier `md`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphb4mp20m.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164201
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result;\n    if (text.length == 0)\n    {\n        return\
    \ result;\n    }\n    import std.digest.md;\n    import std.conv;\n    auto md5\
    \ = MD5(text);\n    result = to!string(md5);\n    return result;\n}\n/*\nunittest\n\
    {\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp372i2u3q.d(23): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp372i2u3q.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164201
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return null;\n    import std.digest.md;\n  \
    \  return to!string(md5(text));\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpvyxf6gvw.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    /tmp/tmpvyxf6gvw.d(13): Error: cannot implicitly convert expression `null` of
    type `typeof(null)` to `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvyxf6gvw.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164202
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result;\n    if(text.length == 0)\n    {\n        return\
    \ result;\n    }\n    else\n    {\n        result = md5(text);\n        return\
    \ result;\n    }\n}\n/*\nunittest\n{\n    alias candidate = string_to_md5;\n\n\
    {\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpgxo7mz8b.d(23): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgxo7mz8b.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164201
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result;\n    if (text.length == 0)\n    {\n        return\
    \ result;\n    }\n    else\n    {\n        import std.digest.md;\n        import\
    \ std.conv;\n        import std.string;\n        import std.array;\n        import\
    \ std.algorithm;\n        import std.range;\n        import std.format;\n    \
    \    import std.typecons;\n        import std.math;\n        import std.stdio;\n\
    \        import std.traits;\n        import std.typecons;\n        import std.math;\n\
    \        import std.stdio;\n        import std.traits;\n        import std.typecons;\n\
    \        import std.math;\n        import std.stdio;\n        import std.traits;\n\
    \        import std.typecons;\n        import std.math;\n        import std.stdio;\n\
    \        import std.traits;\n        import std.typecons;\n        import std.math;\n\
    \        import std.stdio;\n        import std.traits;\n        import std.typecons;\n\
    \        import std.math;\n        import std.stdio;\n        import std.traits;\n\
    \        import std.typecons;\n        import std.math;\n        import std.stdio;\n\
    \        import std.traits;\n        import std.typecons;\n        import std.math;\n\
    \        import std.stdio;\n        import std.traits;\n        import std.typecons;\n\
    \        import std.math;\n        import std.stdio;\n        import std.traits;\n\
    \        import std.typecons;\n        import std.math;\n        import std.stdio;\n\
    \        import std.traits;\n        import std.typecons;\n        import std.math;\n\
    \        import std.stdio;\n        import std.traits;\n        import std.typecons;\n\
    \        import std.math;\n        import std.stdio;\n        import std.traits;\n\
    \        import std.typecons;\n        import std.math;\n        import std.stdio;\n\
    \        import std.traits;\n        import std.typecons;\n        import std.math;\n\
    \       \nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto\
    \ result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get\
    \ == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp0i506iwh.d(81): Error: found `unittest` instead of statement

    /tmp/tmp0i506iwh.d(106): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0i506iwh.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164201
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return null;\n    import std.digest.md;\n  \
    \  return md5(text);\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n\
    {\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpnv3_1y2k.d(15): Error: undefined identifier `md5`

    /tmp/tmpnv3_1y2k.d(13): Error: cannot implicitly convert expression `null` of
    type `typeof(null)` to `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnv3_1y2k.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164202
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return Nullable!(string)();\n    import std.digest.md;\n\
    \    return Nullable!(string)(md5(text));\n}\n/*\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1oom2esl.d(17): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1oom2esl.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164200
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result;\n    if (text.length == 0) \n    {\n        return\
    \ result;\n    }\n    else \n    {\n        import std.digest.md;\n        import\
    \ std.conv;\n        import std.string;\n        import std.algorithm;\n     \
    \   import std.array;\n        import std.range;\n        import std.typecons;\n\
    \        import std.math;\n        auto digest = MD5(text);\n        auto digest_array\
    \ = digest.array;\n        auto digest_string = digest_array.map!(a => format(\"\
    %02x\", a)).array.join(\"\");\n        result = digest_string;\n        return\
    \ result;\n    }\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n\
    \        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpmo45sjhx.d(27): Error: cannot implicitly convert expression `text`
    of type `string` to `uint[4]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmo45sjhx.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164202
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return null;\n    import std.digest.md;\n  \
    \  import std.conv;\n    return to!string(MD5(text));\n}\nunittest\n{\n    alias\
    \ candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\"\
    );\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpmnxvcfvl.d(16): Error: cannot implicitly convert expression `text`
    of type `string` to `uint[4]`

    /tmp/tmpmnxvcfvl.d(13): Error: cannot implicitly convert expression `null` of
    type `typeof(null)` to `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmnxvcfvl.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164201
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result = Nullable!(string).init;\n    if (text.length ==\
    \ 0)\n    {\n        return result;\n    }\n    import std.digest.md;\n    import\
    \ std.conv;\n    import std.string;\n    import std.array;\n    import std.algorithm;\n\
    \    import std.range;\n    import std.format;\n    import std.math;\n    import\
    \ std.typecons;\n    import std.traits;\n    import std.meta;\n    import std.conv;\n\
    \    import std.range;\n    import std.algorithm;\n    import std.array;\n   \
    \ import std.typecons;\n    import std.math;\n    import std.traits;\n    import\
    \ std.meta;\n    import std.conv;\n    import std.range;\n    import std.algorithm;\n\
    \    import std.array;\n    import std.typecons;\n    import std.math;\n    import\
    \ std.traits;\n    import std.meta;\n    import std.conv;\n    import std.range;\n\
    \    import std.algorithm;\n    import std.array;\n    import std.typecons;\n\
    \    import std.math;\n    import std.traits;\n    import std.meta;\n    import\
    \ std.conv;\n    import std.range;\n    import std.algorithm;\n    import std.array;\n\
    \    import std.typecons;\n    import std.math;\n    import std.traits;\n    import\
    \ std.meta;\n    import std.conv;\n    import std.range;\n    import std.algorithm;\n\
    \    import std.array;\n    import std.typecons;\n    import std.math;\n    import\
    \ std.traits;\n    import std.meta;\n    import std.conv;\n    import std.range;\n\
    \    import std.algorithm;\n    import std.array;\n    import std.typecons;\n\
    \    import std.math;\n    import std.traits;\n    import std.meta;\n    import\
    \ std.conv;\n    import std.range;\n    import std.algorithm;\n    import std.array;\n\
    \    import std.\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n   \
    \     auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpj3i10exg.d(81): Error: identifier expected following `package`

    /tmp/tmpj3i10exg.d(81): Error: `;` expected

    /tmp/tmpj3i10exg.d(106): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpj3i10exg.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164201
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return null;\n    auto hash = new MD5;\n   \
    \ hash.put(text.ptr, text.length);\n    return hash.finish().toString();\n}\n\
    /*\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpb1qgdu3o.d(18): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpb1qgdu3o.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164201
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  import std.digest.md;\n    Nullable!(string) result = Nullable!(string).init;\n\
    \    if (text.length == 0)\n    {\n        return result;\n    }\n    else\n \
    \   {\n        result.set(to!string(md.md5(text)));\n        return result;\n\
    \    }\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto\
    \ result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get\
    \ == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpw2kqixz0.d(20): Error: no property `set` for type `Nullable!string`,
    did you mean `std.typecons.Nullable!string.Nullable.get`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpw2kqixz0.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164202
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return Nullable!(string)();\n    import std.digest.md;\n\
    \    return Nullable!(string)(md.md5(text));\n}\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmphb4mp20m.d(15): Error: undefined identifier `md`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphb4mp20m.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164201
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return null;\n    import std.digest.md;\n  \
    \  return md.md5(text);\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmps0n4beci.d(15): Error: undefined identifier `md`

    /tmp/tmps0n4beci.d(13): Error: cannot implicitly convert expression `null` of
    type `typeof(null)` to `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmps0n4beci.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164201
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return null;\n    return to!(string)(md5(text));\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpo54q3i_3.d(14): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    /tmp/tmpo54q3i_3.d(13): Error: cannot implicitly convert expression `null` of
    type `typeof(null)` to `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpo54q3i_3.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164202
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return null;\n    return md5(text);\n}\nunittest\n\
    {\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpd4dizc5w.d(14): Error: undefined identifier `md5`

    /tmp/tmpd4dizc5w.d(13): Error: cannot implicitly convert expression `null` of
    type `typeof(null)` to `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpd4dizc5w.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164201
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return null;\n    auto hash = new MD5;\n   \
    \ hash.put(text);\n    return hash.finish().toString();\n}\nunittest\n{\n    alias\
    \ candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\"\
    );\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp_xfed1ev.d(14): Error: undefined identifier `MD5`

    /tmp/tmp_xfed1ev.d(13): Error: cannot implicitly convert expression `null` of
    type `typeof(null)` to `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_xfed1ev.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164201
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result;\n    if (text.length == 0)\n    {\n        return\
    \ result;\n    }\n    import std.digest.md;\n    import std.digest.md5;\n    import\
    \ std.conv;\n    import std.string;\n    import std.array;\n    import std.algorithm;\n\
    \    import std.range;\n    import std.typecons;\n    import std.math;\n    auto\
    \ md5_hash = MD5(text);\n    auto md5_hash_str = md5_hash.to!string;\n    result\
    \ = md5_hash_str;\n    return result;\n}\n/*\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp9xxyvv2e.d(31): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9xxyvv2e.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164201
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return Nullable!(string)();\n    import std.digest.md;\n\
    \    return Nullable!(string)(md5(text));\n}\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp33xe3592.d(15): Error: undefined identifier `md5`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp33xe3592.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164202
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result;\n    if (text.length == 0)\n    {\n        return\
    \ result;\n    }\n    import std.digest.md;\n    auto md5 = MD5(text);\n    result\
    \ = md5.toString;\n    return result;\n}\n/*\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbqj4t2oi.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbqj4t2oi.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164201
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result;\n    if (text.length == 0)\n    {\n        return\
    \ result;\n    }\n    import std.digest.md;\n    import std.conv;\n    import\
    \ std.string;\n    import std.array;\n    import std.algorithm;\n    import std.range;\n\
    \    import std.typecons;\n    import std.math;\n    auto hash = text.md5;\n \
    \   result = to!string(hash);\n    return result;\n}\n/*\nunittest\n{\n    alias\
    \ candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\"\
    );\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpcx1qo_xr.d(29): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcx1qo_xr.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164201
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) md5_hash = Nullable!(string).init;\n    if (text.length ==\
    \ 0)\n    {\n        return md5_hash;\n    }\n    else\n    {\n        md5_hash.assign(md5(text));\n\
    \        return md5_hash;\n    }\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpyzop6nbo.d(19): Error: no property `assign` for type `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyzop6nbo.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164203
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return null;\n    import std.digest.md;\n  \
    \  return to!string(md5(text));\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpvyxf6gvw.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    /tmp/tmpvyxf6gvw.d(13): Error: cannot implicitly convert expression `null` of
    type `typeof(null)` to `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvyxf6gvw.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164202
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return Nullable!(string)();\n    import std.digest.md;\n\
    \    import std.conv;\n    auto md5 = MD5(text);\n    return to!string(md5);\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpj6bpr7jj.d(16): Error: cannot implicitly convert expression `text`
    of type `string` to `uint[4]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpj6bpr7jj.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164203
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return null;\n    else\n    {\n        import\
    \ std.digest.md;\n        return md.md5(text);\n    }\n}\nunittest\n{\n    alias\
    \ candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\"\
    );\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpu554om14.d(17): Error: undefined identifier `md`

    /tmp/tmpu554om14.d(13): Error: cannot implicitly convert expression `null` of
    type `typeof(null)` to `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpu554om14.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164202
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0) \n    {\n        return Nullable!(string)();\n    }\n\
    \    import std.digest.md;\n    import std.conv;\n    import std.string;\n   \
    \ auto md5 = MD5(text);\n    return Nullable!(string)(to!string(md5));\n}\nunittest\n\
    {\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpmsov5wno.d(19): Error: cannot implicitly convert expression `text`
    of type `string` to `uint[4]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmsov5wno.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164203
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return null;\n    return md5(text);\n}\nunittest\n\
    {\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpd4dizc5w.d(14): Error: undefined identifier `md5`

    /tmp/tmpd4dizc5w.d(13): Error: cannot implicitly convert expression `null` of
    type `typeof(null)` to `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpd4dizc5w.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164201
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return null;\n    import std.digest.md;\n  \
    \  return md5(text);\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n\
    {\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpnv3_1y2k.d(15): Error: undefined identifier `md5`

    /tmp/tmpnv3_1y2k.d(13): Error: cannot implicitly convert expression `null` of
    type `typeof(null)` to `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnv3_1y2k.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164202
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  import std.digest.md;\n    import std.conv;\n    import std.algorithm;\n  \
    \  import std.array;\n    import std.range;\n    import std.format;\n    import\
    \ std.string;\n    import std.math;\n    import std.typecons;\n    import std.traits;\n\
    \    import std.meta;\n    import std.range;\n    import std.algorithm;\n    import\
    \ std.array;\n    import std.typecons;\n    import std.math;\n    import std.range;\n\
    \    import std.algorithm;\n    import std.array;\n    import std.typecons;\n\
    \    import std.math;\n    import std.range;\n    import std.algorithm;\n    import\
    \ std.array;\n    import std.typecons;\n    import std.math;\n    import std.range;\n\
    \    import std.algorithm;\n    import std.array;\n    import std.typecons;\n\
    \    import std.math;\n    import std.range;\n    import std.algorithm;\n    import\
    \ std.array;\n    import std.typecons;\n    import std.math;\n    import std.range;\n\
    \    import std.algorithm;\n    import std.array;\n    import std.typecons;\n\
    \    import std.math;\n    import std.range;\n    import std.algorithm;\n    import\
    \ std.array;\n    import std.typecons;\n    import std.math;\n    import std.range;\n\
    \    import std.algorithm;\n    import std.array;\n    import std.typecons;\n\
    \    import std.math;\n    import std.range;\n    import std.algorithm;\n    import\
    \ std.array;\n    import std.typecons;\n    import std.math;\n    import std.range;\n\
    \    import std.algorithm;\n    import std.array;\n    import std.typecons;\n\
    \    import std.math;\n    import std.range;\n    import std.algorithm;\n    import\
    \ std.array;\n    import std.typecons;\n    import std.math;\n    import std.range;\n\
    \    import std.algorithm;\n    import std.\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpxh4ny8ig.d(81): Error: identifier expected following `package`

    /tmp/tmpxh4ny8ig.d(81): Error: `;` expected

    /tmp/tmpxh4ny8ig.d(106): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxh4ny8ig.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164201
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result;\n    if (text.length == 0)\n    {\n        return\
    \ result;\n    }\n    else\n    {\n        import std.digest.md;\n        import\
    \ std.conv;\n        import std.array;\n        import std.algorithm;\n      \
    \  import std.range;\n        import std.string;\n        import std.format;\n\
    \        import std.traits;\n        import std.typecons;\n        import std.math;\n\
    \        import std.stdio;\n        import std.exception;\n        import std.range;\n\
    \        import std.algorithm;\n        import std.array;\n        import std.conv;\n\
    \        import std.digest.md;\n        import std.exception;\n        import\
    \ std.format;\n        import std.math;\n        import std.stdio;\n        import\
    \ std.string;\n        import std.traits;\n        import std.typecons;\n    \
    \    import std.uni;\n        import std.utf;\n        import std.algorithm;\n\
    \        import std.array;\n        import std.conv;\n        import std.digest.md;\n\
    \        import std.exception;\n        import std.format;\n        import std.math;\n\
    \        import std.stdio;\n        import std.string;\n        import std.traits;\n\
    \        import std.typecons;\n        import std.uni;\n        import std.utf;\n\
    \        import std.algorithm;\n        import std.array;\n        import std.conv;\n\
    \        import std.digest.md;\n        import std.exception;\n        import\
    \ std.format;\n        import std.math;\n        import std.stdio;\n        import\
    \ std.string;\n        import std.traits;\n        import std.typecons;\n    \
    \    import std.uni;\n        import std.utf;\n        import std.algorithm;\n\
    \        import std.array;\n        import std.conv;\n        import std.digest.md;\n\
    \        import std.exception;\n        import std.format;\n        import std.math;\n\
    \        import std.stdio;\n        import std.string;\n        import std.traits;\n\
    unittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result =\
    \ candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmprnc7w9ce.d(81): Error: found `unittest` instead of statement

    /tmp/tmprnc7w9ce.d(106): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprnc7w9ce.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164201
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return null;\n    import std.digest.md;\n  \
    \  return md.md5(text);\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmps0n4beci.d(15): Error: undefined identifier `md`

    /tmp/tmps0n4beci.d(13): Error: cannot implicitly convert expression `null` of
    type `typeof(null)` to `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmps0n4beci.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164201
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return Nullable!(string)();\n    import std.digest.md;\n\
    \    return Nullable!(string)(md5(text));\n}\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp33xe3592.d(15): Error: undefined identifier `md5`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp33xe3592.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164202
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return Nullable!(string)();\n    import std.digest.md;\n\
    \    return Nullable!(string)(md5(text));\n}\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp33xe3592.d(15): Error: undefined identifier `md5`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp33xe3592.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164202
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result = Nullable!(string).init;\n    if (text.length ==\
    \ 0)\n    {\n        return result;\n    }\n    import std.digest.md;\n    import\
    \ std.conv;\n    import std.algorithm;\n    import std.array;\n    import std.range;\n\
    \    import std.string;\n    import std.format;\n    import std.stdio;\n    import\
    \ std.math;\n    import std.typecons;\n    import std.traits;\n    import std.range;\n\
    \    import std.algorithm;\n    import std.array;\n    import std.range;\n   \
    \ import std.string;\n    import std.format;\n    import std.stdio;\n    import\
    \ std.math;\n    import std.typecons;\n    import std.traits;\n    import std.range;\n\
    \    import std.algorithm;\n    import std.array;\n    import std.range;\n   \
    \ import std.string;\n    import std.format;\n    import std.stdio;\n    import\
    \ std.math;\n    import std.typecons;\n    import std.traits;\n    import std.range;\n\
    \    import std.algorithm;\n    import std.array;\n    import std.range;\n   \
    \ import std.string;\n    import std.format;\n    import std.stdio;\n    import\
    \ std.math;\n    import std.typecons;\n    import std.traits;\n    import std.range;\n\
    \    import std.algorithm;\n    import std.array;\n    import std.range;\n   \
    \ import std.string;\n    import std.format;\n    import std.stdio;\n    import\
    \ std.math;\n    import std.typecons;\n    import std.traits;\n    import std.range;\n\
    \    import std.algorithm;\n    import std.array;\n    import std.range;\n   \
    \ import std.string;\n    import std.format;\n    import std.stdio;\n    import\
    \ std.math;\n    import std.typecons;\n    import std.traits;\n    import std.range;\n\
    \    import std.algorithm;\n   \nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpm380wuzj.d(81): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpm380wuzj.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164201
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return null;\n    return md5(text);\n}\nunittest\n\
    {\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpd4dizc5w.d(14): Error: undefined identifier `md5`

    /tmp/tmpd4dizc5w.d(13): Error: cannot implicitly convert expression `null` of
    type `typeof(null)` to `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpd4dizc5w.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164201
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return Nullable!(string)();\n    import std.digest.md;\n\
    \    return Nullable!(string)(md.md5(text));\n}\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmphb4mp20m.d(15): Error: undefined identifier `md`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphb4mp20m.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164201
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return null;\n    import std.digest.md;\n  \
    \  return to!string(md(text));\n}\n/*\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4dayt119.d(17): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4dayt119.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164202
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return Nullable!(string)();\n    import std.digest.md;\n\
    \    return Nullable!(string)(MD5(text));\n}\n/*\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1mr3jyyp.d(17): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1mr3jyyp.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164202
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result = Nullable!(string).init;\n    if (text.length ==\
    \ 0) \n    {\n        return result;\n    }\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpo5y2shf9.d(17): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpo5y2shf9.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164202
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return Nullable!(string)();\n    import std.digest.md;\n\
    \    import std.conv;\n    auto md5 = MD5(text);\n    return to!string(md5);\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpj6bpr7jj.d(16): Error: cannot implicitly convert expression `text`
    of type `string` to `uint[4]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpj6bpr7jj.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164203
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return Nullable!(string)();\n    import std.digest.md;\n\
    \    return Nullable!(string)(md.md5(text));\n}\n/*\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmplki6m_ak.d(17): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplki6m_ak.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164200
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return Nullable!(string)();\n    import std.digest.md;\n\
    \    return Nullable!(string)(md.md5(text));\n}\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmphb4mp20m.d(15): Error: undefined identifier `md`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphb4mp20m.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164201
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result;\n    if (text.length == 0)\n    {\n        return\
    \ result;\n    }\n    auto md5 = new MD5;\n    md5.put(text);\n    result = md5.get();\n\
    \    return result;\n}\n/*\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpvo9e1uhs.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvo9e1uhs.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164202
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return Nullable!(string)();\n    import std.digest.md;\n\
    \    return Nullable!(string)(md5(text));\n}\n/*\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1oom2esl.d(17): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1oom2esl.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164200
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result;\n    if (text.length > 0)\n    {\n        import\
    \ std.digest.md;\n        import std.conv;\n        import std.array;\n      \
    \  import std.algorithm;\n        import std.range;\n        import std.format;\n\
    \        import std.string;\n        import std.math;\n        import std.typecons;\n\
    \        import std.traits;\n        import std.meta;\n        import std.range;\n\
    \        import std.algorithm;\n        import std.array;\n        import std.conv;\n\
    \        import std.string;\n        import std.typecons;\n        import std.math;\n\
    \        import std.traits;\n        import std.meta;\n        import std.range;\n\
    \        import std.algorithm;\n        import std.array;\n        import std.conv;\n\
    \        import std.string;\n        import std.typecons;\n        import std.math;\n\
    \        import std.traits;\n        import std.meta;\n        import std.range;\n\
    \        import std.algorithm;\n        import std.array;\n        import std.conv;\n\
    \        import std.string;\n        import std.typecons;\n        import std.math;\n\
    \        import std.traits;\n        import std.meta;\n        import std.range;\n\
    \        import std.algorithm;\n        import std.array;\n        import std.conv;\n\
    \        import std.string;\n        import std.typecons;\n        import std.math;\n\
    \        import std.traits;\n        import std.meta;\n        import std.range;\n\
    \        import std.algorithm;\n        import std.array;\n        import std.conv;\n\
    \        import std.string;\n        import std.typecons;\n        import std.math;\n\
    \        import std.traits;\n        import std.meta;\n        import std.range;\n\
    \        import std.algorithm;\n        import std.array;\n        import std.conv;\n\
    \        import std.string;\n        import std.typecons;\n        import std.math;\n\
    \        import std.traits;\n        import std.meta;\n        import std.range;\n\
    \nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpmkakg25f.d(82): Error: found `unittest` instead of statement

    /tmp/tmpmkakg25f.d(107): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmkakg25f.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164202
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return Nullable!(string)();\n    import std.digest.md;\n\
    \    return Nullable!(string)(to!string(MD5(text)));\n}\nunittest\n{\n    alias\
    \ candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\"\
    );\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpla7ihluf.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpla7ihluf.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164201
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result = Nullable!(string).init;\n    if (text.length ==\
    \ 0)\n    {\n        return result;\n    }\n    else\n    {\n        import std.digest.md;\n\
    \        import std.conv;\n        import std.array;\n        import std.algorithm;\n\
    \        import std.range;\n        import std.string;\n        import std.format;\n\
    \        auto md5 = MD5(text);\n        auto md5_array = md5.array;\n        auto\
    \ md5_string = md5_array.map!(a => format(\"%02x\", a)).join(\"\");\n        result.assign(md5_string);\n\
    \        return result;\n    }\n}\n/*\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp71hus41f.d(33): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp71hus41f.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164202
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result;\n    if (text.length == 0) \n    {\n        return\
    \ result;\n    }\n    auto hash = new MD5;\n    hash.put(text);\n    result =\
    \ hash.finish().toString();\n    return result;\n}\n/*\nunittest\n{\n    alias\
    \ candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\"\
    );\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpa726pva2.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpa726pva2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164202
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0) \n    {\n        return Nullable!(string)();\n    }\n\
    \    auto hash = new MD5;\n    hash.put(text);\n    return Nullable!(string)(hash.finish().toHexString());\n\
    }\n/*\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4ap_o4gx.d(20): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4ap_o4gx.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164202
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return Nullable!(string)();\n    import std.digest.md;\n\
    \    return Nullable!(string)(md5(text));\n}\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp33xe3592.d(15): Error: undefined identifier `md5`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp33xe3592.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164202
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result;\n    if (text.length == 0) \n    {\n        return\
    \ result;\n    }\n    import std.digest.md;\n    result = md.md5(text);\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n       \
    \ auto result = candidate(\"Hello world\");\n        assert(!result.isNull &&\
    \ result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result\
    \ = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result\
    \ = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpnn_5yz45.d(18): Error: undefined identifier `md`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnn_5yz45.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164203
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return null;\n    return md5(text);\n}\nunittest\n\
    {\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpd4dizc5w.d(14): Error: undefined identifier `md5`

    /tmp/tmpd4dizc5w.d(13): Error: cannot implicitly convert expression `null` of
    type `typeof(null)` to `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpd4dizc5w.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164201
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return null;\n    auto hash = new MD5;\n   \
    \ hash.put(text);\n    return hash.finish().toString();\n}\nunittest\n{\n    alias\
    \ candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\"\
    );\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp_xfed1ev.d(14): Error: undefined identifier `MD5`

    /tmp/tmp_xfed1ev.d(13): Error: cannot implicitly convert expression `null` of
    type `typeof(null)` to `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_xfed1ev.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164201
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return null;\n    import std.digest.md;\n  \
    \  return to!string(MD5(text));\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpn47umobu.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    /tmp/tmpn47umobu.d(13): Error: cannot implicitly convert expression `null` of
    type `typeof(null)` to `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpn47umobu.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164201
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return Nullable!(string)();\n    import std.digest.md;\n\
    \    return Nullable!(string)(md.md5(text));\n}\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmphb4mp20m.d(15): Error: undefined identifier `md`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphb4mp20m.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164201
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result = Nullable!(string).init;\n    if (text.length ==\
    \ 0)\n    {\n        return result;\n    }\n    import std.digest.md;\n    import\
    \ std.conv;\n    import std.array;\n    import std.algorithm;\n    import std.range;\n\
    \    import std.string;\n    import std.format;\n    import std.math;\n    import\
    \ std.typecons;\n    import std.traits;\n    import std.meta;\n    import std.stdio;\n\
    \    import std.exception;\n    import std.range;\n    import std.algorithm;\n\
    \    import std.array;\n    import std.conv;\n    import std.digest.md;\n    import\
    \ std.format;\n    import std.math;\n    import std.meta;\n    import std.stdio;\n\
    \    import std.string;\n    import std.traits;\n    import std.typecons;\n  \
    \  import std.math;\n    import std.typecons;\n    import std.math;\n    import\
    \ std.typecons;\n    import std.math;\n    import std.typecons;\n    import std.math;\n\
    \    import std.typecons;\n    import std.math;\n    import std.typecons;\n  \
    \  import std.math;\n    import std.typecons;\n    import std.math;\n    import\
    \ std.typecons;\n    import std.math;\n    import std.typecons;\n    import std.math;\n\
    \    import std.typecons;\n    import std.math;\n    import std.typecons;\n  \
    \  import std.math;\n    import std.typecons;\n    import std.math;\n    import\
    \ std.typecons;\n    import std.math;\n    import std.typecons;\n    import std.math;\n\
    \    import std.typecons;\n    import std.math;\n    import std.typecons;\n  \
    \  import std.math;\n    import std.typecons;\n    import std.math;\n    import\
    \ std.typecons;\n    import std.math;\n    import std.typecons;\n    import std.math;\n\
    \    import std\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n    \
    \    auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpny70p1av.d(80): Error: `;` expected

    /tmp/tmpny70p1av.d(105): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpny70p1av.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164202
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0) \n    {\n        return Nullable!(string)();\n    }\n\
    \    import std.digest.md;\n    import std.conv;\n    auto md5 = MD5(text);\n\
    \    return to!string(md5);\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp3982fdrw.d(18): Error: cannot implicitly convert expression `text`
    of type `string` to `uint[4]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3982fdrw.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164202
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return Nullable!(string)();\n    import std.digest.md;\n\
    \    return Nullable!(string)(md.md5(text));\n}\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmphb4mp20m.d(15): Error: undefined identifier `md`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphb4mp20m.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164201
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return null;\n    import std.digest.md;\n  \
    \  return md5(text);\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n\
    {\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpnv3_1y2k.d(15): Error: undefined identifier `md5`

    /tmp/tmpnv3_1y2k.d(13): Error: cannot implicitly convert expression `null` of
    type `typeof(null)` to `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnv3_1y2k.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164202
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return null;\n    import std.digest.md;\n  \
    \  return to!string(md5(text));\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpvyxf6gvw.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    /tmp/tmpvyxf6gvw.d(13): Error: cannot implicitly convert expression `null` of
    type `typeof(null)` to `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvyxf6gvw.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164202
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return null;\n    import std.digest.md;\n  \
    \  return md.md5(text);\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmps0n4beci.d(15): Error: undefined identifier `md`

    /tmp/tmps0n4beci.d(13): Error: cannot implicitly convert expression `null` of
    type `typeof(null)` to `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmps0n4beci.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164201
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return Nullable!(string)();\n    import std.digest.md;\n\
    \    return Nullable!(string)(md.md5(text));\n}\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmphb4mp20m.d(15): Error: undefined identifier `md`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphb4mp20m.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164201
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return Nullable!(string)();\n    auto hash =\
    \ new MD5;\n    hash.put(text);\n    return Nullable!(string)(hash.finish().toString());\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpssb0_g8x.d(14): Error: undefined identifier `MD5`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpssb0_g8x.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164203
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result;\n    if (text.length == 0) \n    {\n        return\
    \ result;\n    }\n    else \n    {\n        import std.digest.md;\n        import\
    \ std.conv;\n        import std.array;\n        import std.algorithm;\n      \
    \  import std.range;\n        import std.format;\n        import std.string;\n\
    \        import std.typecons;\n        import std.math;\n        import std.traits;\n\
    \        import std.stdio;\n        import std.range;\n        import std.algorithm;\n\
    \        import std.array;\n        import std.conv;\n        import std.string;\n\
    \        import std.typecons;\n        import std.math;\n        import std.traits;\n\
    \        import std.stdio;\n        import std.range;\n        import std.algorithm;\n\
    \        import std.array;\n        import std.conv;\n        import std.string;\n\
    \        import std.typecons;\n        import std.math;\n        import std.traits;\n\
    \        import std.stdio;\n        import std.range;\n        import std.algorithm;\n\
    \        import std.array;\n        import std.conv;\n        import std.string;\n\
    \        import std.typecons;\n        import std.math;\n        import std.traits;\n\
    \        import std.stdio;\n        import std.range;\n        import std.algorithm;\n\
    \        import std.array;\n        import std.conv;\n        import std.string;\n\
    \        import std.typecons;\n        import std.math;\n        import std.traits;\n\
    \        import std.stdio;\n        import std.range;\n        import std.algorithm;\n\
    \        import std.array;\n        import std.conv;\n        import std.string;\n\
    \        import std.typecons;\n        import std.math;\n        import std.traits;\n\
    \        import std.stdio;\n        import std.range;\n        import std.algorithm;\n\
    \        import std.array;\n        import std.conv;\n        import std.string;\n\
    \        import std.typecons;\n        import std.math;\n\nunittest\n{\n    alias\
    \ candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\"\
    );\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp5g7zo2_d.d(83): Error: found `unittest` instead of statement

    /tmp/tmp5g7zo2_d.d(108): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5g7zo2_d.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164202
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result = Nullable!(string).init;\n    if (text.length ==\
    \ 0) \n    {\n        return result;\n    }\n    import std.digest.md;\n    import\
    \ std.conv;\n    import std.string;\n    auto hash = MD5(text);\n    string hash_str\
    \ = \"\";\n    foreach (i, byte; hash) \n    {\n        hash_str ~= format(\"\
    %02x\", byte);\n    }\n    result.assign(hash_str);\n    return result;\n}\nunittest\n\
    {\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp3xkg1e91.d(22): Error: no identifier for declarator `byte`

    /tmp/tmp3xkg1e91.d(24): Error: found `)` when expecting `.` following byte

    /tmp/tmp3xkg1e91.d(24): Error: found `;` when expecting identifier following `byte`.

    /tmp/tmp3xkg1e91.d(25): Error: found `}` when expecting `,`

    /tmp/tmp3xkg1e91.d(26): Error: found `;` when expecting `,`

    /tmp/tmp3xkg1e91.d(27): Error: expression expected, not `return`

    /tmp/tmp3xkg1e91.d(27): Error: found `result` when expecting `,`

    /tmp/tmp3xkg1e91.d(27): Error: expression expected, not `;`

    /tmp/tmp3xkg1e91.d(28): Error: found `}` when expecting `,`

    /tmp/tmp3xkg1e91.d(29): Error: expression expected, not `unittest`

    /tmp/tmp3xkg1e91.d(30): Error: found `{` when expecting `,`

    /tmp/tmp3xkg1e91.d(31): Error: expression expected, not `alias`

    /tmp/tmp3xkg1e91.d(31): Error: found `candidate` when expecting `,`

    /tmp/tmp3xkg1e91.d(31): Error: expression expected, not `=`

    /tmp/tmp3xkg1e91.d(31): Error: found `string_to_md5` when expecting `,`

    /tmp/tmp3xkg1e91.d(31): Error: expre'
  stdout: ''
  timestamp: 1660164202
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return null;\n    else\n    {\n        import\
    \ std.digest.md;\n        return to!string(md(text));\n    }\n}\nunittest\n{\n\
    \    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbz1j3l5_.d(17): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    /tmp/tmpbz1j3l5_.d(13): Error: cannot implicitly convert expression `null` of
    type `typeof(null)` to `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbz1j3l5_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164201
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result = Nullable!(string).init;\n    if (text.length ==\
    \ 0)\n    {\n        return result;\n    }\n    import std.digest.md;\n    import\
    \ std.conv;\n    auto md5 = MD5(text);\n    result.assign(md5.toHexString);\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n\
    {\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4f8_bwae.d(19): Error: cannot implicitly convert expression `text`
    of type `string` to `uint[4]`

    /tmp/tmp4f8_bwae.d(20): Error: no property `assign` for type `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4f8_bwae.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164203
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return Nullable!(string)();\n    import std.digest.md;\n\
    \    return md.md5(text);\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpu7oz_qp5.d(15): Error: undefined identifier `md`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpu7oz_qp5.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164203
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return null;\n    import std.digest.md;\n  \
    \  return to!string(md5(text));\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpvyxf6gvw.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    /tmp/tmpvyxf6gvw.d(13): Error: cannot implicitly convert expression `null` of
    type `typeof(null)` to `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvyxf6gvw.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164202
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result;\n    if (text.length == 0)\n    {\n        return\
    \ result;\n    }\n    import std.digest.md;\n    import std.conv;\n    import\
    \ std.array;\n    import std.algorithm;\n    import std.range;\n    import std.string;\n\
    \    import std.datetime;\n    import std.typecons;\n    import std.math;\n  \
    \  import std.format;\n    import std.stdio;\n    import std.conv;\n    import\
    \ std.array;\n    import std.algorithm;\n    import std.range;\n    import std.string;\n\
    \    import std.datetime;\n    import std.typecons;\n    import std.math;\n  \
    \  import std.format;\n    import std.stdio;\n    import std.conv;\n    import\
    \ std.array;\n    import std.algorithm;\n    import std.range;\n    import std.string;\n\
    \    import std.datetime;\n    import std.typecons;\n    import std.math;\n  \
    \  import std.format;\n    import std.stdio;\n    import std.conv;\n    import\
    \ std.array;\n    import std.algorithm;\n    import std.range;\n    import std.string;\n\
    \    import std.datetime;\n    import std.typecons;\n    import std.math;\n  \
    \  import std.format;\n    import std.stdio;\n    import std.conv;\n    import\
    \ std.array;\n    import std.algorithm;\n    import std.range;\n    import std.string;\n\
    \    import std.datetime;\n    import std.typecons;\n    import std.math;\n  \
    \  import std.format;\n    import std.stdio;\n    import std.conv;\n    import\
    \ std.array;\n    import std.algorithm;\n    import std.range;\n    import std.string;\n\
    \    import std.datetime;\n    import std.typecons;\n    import std.math;\n  \
    \  import std.format;\n    import std.stdio;\n    import std.conv;\n    import\
    \ std.array;\n    import std.algorithm;\n    import\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpil5v7u5n.d(82): Error: identifier expected following `import`

    /tmp/tmpil5v7u5n.d(82): Error: `;` expected

    /tmp/tmpil5v7u5n.d(107): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpil5v7u5n.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164202
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return Nullable!(string)();\n    import std.digest.md;\n\
    \    import std.conv;\n    return to!(string)(MD5(text));\n}\nunittest\n{\n  \
    \  alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello\
    \ world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpxf9q4igr.d(16): Error: cannot implicitly convert expression `text`
    of type `string` to `uint[4]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxf9q4igr.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164203
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result = null;\n    if (text.length > 0)\n    {\n       \
    \ import std.digest.md;\n        import std.conv;\n        import std.array;\n\
    \        import std.algorithm;\n        import std.range;\n        import std.format;\n\
    \        import std.string;\n        import std.typecons;\n        import std.math;\n\
    \        import std.traits;\n        import std.stdio;\n        import std.conv;\n\
    \        import std.range;\n        import std.algorithm;\n        import std.array;\n\
    \        import std.string;\n        import std.typecons;\n        import std.math;\n\
    \        import std.traits;\n        import std.stdio;\n        import std.conv;\n\
    \        import std.range;\n        import std.algorithm;\n        import std.array;\n\
    \        import std.string;\n        import std.typecons;\n        import std.math;\n\
    \        import std.traits;\n        import std.stdio;\n        import std.conv;\n\
    \        import std.range;\n        import std.algorithm;\n        import std.array;\n\
    \        import std.string;\n        import std.typecons;\n        import std.math;\n\
    \        import std.traits;\n        import std.stdio;\n        import std.conv;\n\
    \        import std.range;\n        import std.algorithm;\n        import std.array;\n\
    \        import std.string;\n        import std.typecons;\n        import std.math;\n\
    \        import std.traits;\n        import std.stdio;\n        import std.conv;\n\
    \        import std.range;\n        import std.algorithm;\n        import std.array;\n\
    \        import std.string;\n        import std.typecons;\n        import std.math;\n\
    \        import std.traits;\n        import std.stdio;\n        import std.conv;\n\
    \        import std.range;\n        import std.algorithm;\n        import std.array;\n\
    \        import std.string;\n        import std.typecons;\n        import std.math;\n\
    \        import std.traits;\n        import std.stdio\nunittest\n{\n    alias\
    \ candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\"\
    );\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4_vhzpxg.d(80): Error: `;` expected

    /tmp/tmp4_vhzpxg.d(105): Error: found `End of File` when expecting `}` following
    compound statement

    /tmp/tmp4_vhzpxg.d(105): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4_vhzpxg.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164202
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result;\n    if (text.length == 0)\n    {\n        return\
    \ result;\n    }\n    else\n    {\n        import std.digest.md;\n        result\
    \ = to!string(md5(text));\n        return result;\n    }\n}\nunittest\n{\n   \
    \ alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello\
    \ world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpqe0c_x5h.d(20): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqe0c_x5h.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164203
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return Nullable!(string)();\n    import std.digest.md;\n\
    \    return Nullable!(string)(md.md5(text));\n}\n/*\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmplki6m_ak.d(17): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplki6m_ak.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164200
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return null;\n    import std.digest.md;\n  \
    \  return to!string(md5(text));\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpvyxf6gvw.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    /tmp/tmpvyxf6gvw.d(13): Error: cannot implicitly convert expression `null` of
    type `typeof(null)` to `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvyxf6gvw.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164202
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return Nullable!(string)();\n    return md5(text);\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmppjui4nf6.d(14): Error: undefined identifier `md5`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmppjui4nf6.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164203
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return null;\n    import std.digest.md;\n  \
    \  auto md5 = MD5(text);\n    return md5.toString;\n}\nunittest\n{\n    alias\
    \ candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\"\
    );\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpexl9q7y2.d(15): Error: cannot implicitly convert expression `text`
    of type `string` to `uint[4]`

    /tmp/tmpexl9q7y2.d(13): Error: cannot implicitly convert expression `null` of
    type `typeof(null)` to `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpexl9q7y2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164203
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result;\n    if (text.length == 0)\n    {\n        return\
    \ result;\n    }\n    result = new Nullable!(string)(md5(text));\n    return result;\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpduw9xky4.d(17): Error: undefined identifier `md5`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpduw9xky4.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164203
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return Nullable!(string)();\n    import std.digest.md;\n\
    \    return Nullable!(string)(md5(text));\n}\n/*\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1oom2esl.d(17): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1oom2esl.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164200
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return Nullable!(string)();\n    import std.digest.md;\n\
    \    return Nullable!(string)(md.md5(text));\n}\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmphb4mp20m.d(15): Error: undefined identifier `md`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphb4mp20m.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164201
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result;\n    if (text.length == 0)\n    {\n        return\
    \ result;\n    }\n    else\n    {\n        import std.digest.md;\n        result\
    \ = md5(text);\n        return result;\n    }\n}\n/*\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpgxq3s6oz.d(24): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgxq3s6oz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164202
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return null;\n    import std.digest.md;\n  \
    \  auto hash = MD5(text);\n    return hash.toHexString();\n}\nunittest\n{\n  \
    \  alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello\
    \ world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1j0i1bkx.d(15): Error: cannot implicitly convert expression `text`
    of type `string` to `uint[4]`

    /tmp/tmp1j0i1bkx.d(13): Error: cannot implicitly convert expression `null` of
    type `typeof(null)` to `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1j0i1bkx.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164203
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result;\n    if (text.length == 0)\n    {\n        return\
    \ null;\n    }\n    import std.digest.md;\n    import std.conv;\n    import std.array;\n\
    \    import std.algorithm;\n    import std.range;\n    import std.string;\n  \
    \  import std.format;\n    import std.typecons;\n    import std.math;\n    import\
    \ std.datetime;\n    import std.stdio;\n    import std.traits;\n    import std.uni;\n\
    \    import std.typecons;\n    import std.math;\n    import std.datetime;\n  \
    \  import std.stdio;\n    import std.traits;\n    import std.uni;\n    import\
    \ std.typecons;\n    import std.math;\n    import std.datetime;\n    import std.stdio;\n\
    \    import std.traits;\n    import std.uni;\n    import std.typecons;\n    import\
    \ std.math;\n    import std.datetime;\n    import std.stdio;\n    import std.traits;\n\
    \    import std.uni;\n    import std.typecons;\n    import std.math;\n    import\
    \ std.datetime;\n    import std.stdio;\n    import std.traits;\n    import std.uni;\n\
    \    import std.typecons;\n    import std.math;\n    import std.datetime;\n  \
    \  import std.stdio;\n    import std.traits;\n    import std.uni;\n    import\
    \ std.typecons;\n    import std.math;\n    import std.datetime;\n    import std.stdio;\n\
    \    import std.traits;\n    import std.uni;\n    import std.typecons;\n    import\
    \ std.math;\n    import std.datetime;\n    import std.stdio;\n    import std.traits;\n\
    \    import std.uni;\n    import std.typecons;\n    import std.math;\n    import\
    \ std.datetime;\n    import std.stdio;\n    import std.traits;\n    import std.uni;\n\
    \    import std.typecons;\n    import std\nunittest\n{\n    alias candidate =\
    \ string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n   \
    \     assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpd19hkcmk.d(80): Error: `;` expected

    /tmp/tmpd19hkcmk.d(105): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpd19hkcmk.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164202
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result = Nullable!(string).init;\n    if (text.length ==\
    \ 0)\n    {\n        return result;\n    }\n    else\n    {\n        import std.digest.md;\n\
    \        import std.conv;\n        import std.array;\n        import std.algorithm;\n\
    \        import std.range;\n        import std.string;\n        import std.format;\n\
    \        import std.math;\n        import std.typecons;\n        import std.traits;\n\
    \        import std.range;\n        import std.algorithm;\n        import std.array;\n\
    \        import std.conv;\n        import std.digest.md;\n        import std.format;\n\
    \        import std.math;\n        import std.string;\n        import std.traits;\n\
    \        import std.typecons;\n        import std.uni;\n        import std.utf;\n\
    \        import std.algorithm;\n        import std.array;\n        import std.conv;\n\
    \        import std.digest.md;\n        import std.format;\n        import std.math;\n\
    \        import std.string;\n        import std.traits;\n        import std.typecons;\n\
    \        import std.uni;\n        import std.utf;\n        import std.algorithm;\n\
    \        import std.array;\n        import std.conv;\n        import std.digest.md;\n\
    \        import std.format;\n        import std.math;\n        import std.string;\n\
    \        import std.traits;\n        import std.typecons;\n        import std.uni;\n\
    \        import std.utf;\n        import std.algorithm;\n        import std.array;\n\
    \        import std.conv;\n        import std.digest.md;\n        import std.format;\n\
    \        import std.math;\n        import std.string;\n        import std.traits;\n\
    \        import std.typecons;\n        import std.uni;\n        import std.utf;\n\
    \        import std.algorithm;\n        import std.array;\n        import std.conv;\n\
    \        import std.digest.md;\n        import std.format;\n        import std.math;\n\
    \        import std\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n\
    \        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpl0a3usd1.d(81): Error: `;` expected

    /tmp/tmpl0a3usd1.d(106): Error: found `End of File` when expecting `}` following
    compound statement

    /tmp/tmpl0a3usd1.d(106): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpl0a3usd1.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164202
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return null;\n    import std.digest.md;\n  \
    \  return to!string(MD5(text));\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpn47umobu.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    /tmp/tmpn47umobu.d(13): Error: cannot implicitly convert expression `null` of
    type `typeof(null)` to `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpn47umobu.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164201
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return null;\n    else\n    {\n        auto\
    \ md5 = new MD5;\n        md5.put(text);\n        return md5.finish().toString();\n\
    \    }\n}\n/*\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n      \
    \  auto result = candidate(\"Hello world\");\n        assert(!result.isNull &&\
    \ result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result\
    \ = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result\
    \ = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4hzc1yx_.d(21): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4hzc1yx_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164202
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return null;\n    import std.digest.md;\n  \
    \  return md5(text);\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n\
    {\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpnv3_1y2k.d(15): Error: undefined identifier `md5`

    /tmp/tmpnv3_1y2k.d(13): Error: cannot implicitly convert expression `null` of
    type `typeof(null)` to `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnv3_1y2k.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164202
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return null;\n    import std.digest.md;\n  \
    \  return md5(text);\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n\
    {\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpnv3_1y2k.d(15): Error: undefined identifier `md5`

    /tmp/tmpnv3_1y2k.d(13): Error: cannot implicitly convert expression `null` of
    type `typeof(null)` to `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnv3_1y2k.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164202
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return Nullable!(string)();\n    import std.digest.md;\n\
    \    return Nullable!(string)(md.md5(text));\n}\n/*\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmplki6m_ak.d(17): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplki6m_ak.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164200
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return null;\n    return md5(text);\n}\nunittest\n\
    {\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpd4dizc5w.d(14): Error: undefined identifier `md5`

    /tmp/tmpd4dizc5w.d(13): Error: cannot implicitly convert expression `null` of
    type `typeof(null)` to `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpd4dizc5w.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164201
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return null;\n    import std.digest.md;\n  \
    \  return text.md5;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n\
    {\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpwya0nhv0.d(15): Error: no property `md5` for type `string`

    /tmp/tmpwya0nhv0.d(13): Error: cannot implicitly convert expression `null` of
    type `typeof(null)` to `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwya0nhv0.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164204
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result = Nullable!(string).init;\n    if (text.length ==\
    \ 0)\n    {\n        return result;\n    }\n    import std.digest.md;\n    auto\
    \ digest = MD5(text);\n    result.assign(digest.toHexString());\n    return result;\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp62_mjqnz.d(18): Error: cannot implicitly convert expression `text`
    of type `string` to `uint[4]`

    /tmp/tmp62_mjqnz.d(19): Error: no property `assign` for type `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp62_mjqnz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164204
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return Nullable!(string)();\n    return Nullable!(string)(md5(text));\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpcc14gh0n.d(14): Error: undefined identifier `md5`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcc14gh0n.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164201
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return Nullable!(string)();\n    import std.digest.md;\n\
    \    return Nullable!(string)(md.md5(text));\n}\n/*\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmplki6m_ak.d(17): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplki6m_ak.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164200
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result;\n    if (text.length > 0) \n    {\n        import\
    \ std.digest.md;\n        import std.conv;\n        result = to!string(md.md5(text));\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpscmk2cmp.d(17): Error: undefined identifier `md`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpscmk2cmp.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164204
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) ret;\n    if (text.length == 0)\n    {\n        return ret;\n\
    \    }\n    import std.digest.md;\n    import std.conv;\n    import std.string;\n\
    \    auto md5 = MD5(text);\n    ret = to!string(md5);\n    return ret;\n}\nunittest\n\
    {\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpkw214wa1.d(20): Error: cannot implicitly convert expression `text`
    of type `string` to `uint[4]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkw214wa1.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164204
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return null;\n    auto md5 = new MD5;\n    md5.put(text.ptr,\
    \ text.length);\n    return md5.finish().toString();\n}\nunittest\n{\n    alias\
    \ candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\"\
    );\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmps51pyfe_.d(14): Error: undefined identifier `MD5`

    /tmp/tmps51pyfe_.d(13): Error: cannot implicitly convert expression `null` of
    type `typeof(null)` to `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmps51pyfe_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164204
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  import std.digest.md;\n    import std.conv;\n    import std.format;\n    import\
    \ std.array;\n    import std.algorithm;\n    import std.range;\n    import std.string;\n\
    \    import std.stdio;\n    import std.typecons;\n    import std.math;\n    if\
    \ (text.length == 0)\n    {\n        return null;\n    }\n    else\n    {\n  \
    \      auto hash = MD5(text);\n        return format(\"%(%02x)\", hash);\n   \
    \ }\n}\n/*\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto\
    \ result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get\
    \ == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp7wi3ofq8.d(32): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7wi3ofq8.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164203
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return Nullable!(string)();\n    import std.digest.md;\n\
    \    return Nullable!(string)(md.md5(text));\n}\n/*\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmplki6m_ak.d(17): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplki6m_ak.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164200
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0) return Nullable!(string)();\n    import std.digest.md;\n\
    \    return Nullable!(string)(md.md5(text));\n}\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4w6jz41w.d(14): Error: undefined identifier `md`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4w6jz41w.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164202
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return null;\n    import std.digest.md;\n  \
    \  return to!string(md5(text));\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpvyxf6gvw.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    /tmp/tmpvyxf6gvw.d(13): Error: cannot implicitly convert expression `null` of
    type `typeof(null)` to `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvyxf6gvw.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164202
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0) \n    {\n        return Nullable!(string)();\n    }\n\
    \    else \n    {\n        import std.digest.md;\n        import std.conv;\n \
    \       return Nullable!(string)(to!string(MD5(text)));\n    }\n}\nunittest\n\
    {\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpf70y1ges.d(20): Error: cannot implicitly convert expression `text`
    of type `string` to `uint[4]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpf70y1ges.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164204
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return null;\n    else\n    {\n        import\
    \ std.digest.md;\n        return md.md5(text);\n    }\n}\n/*\nunittest\n{\n  \
    \  alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello\
    \ world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpkqwuyd89.d(20): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkqwuyd89.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164200
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return null;\n    import std.digest.md;\n  \
    \  return to!string(md5(text));\n}\n/*\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpy4c60z74.d(17): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpy4c60z74.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164201
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return null;\n    import std.digest.md;\n  \
    \  return to!string(md5(text));\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpvyxf6gvw.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    /tmp/tmpvyxf6gvw.d(13): Error: cannot implicitly convert expression `null` of
    type `typeof(null)` to `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvyxf6gvw.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164202
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  import std.digest.md;\n    import std.conv;\n    if (text.length == 0)\n  \
    \      return null;\n    return to!string(md5(text));\n}\nunittest\n{\n    alias\
    \ candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\"\
    );\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpw_50jsad.d(16): Error: undefined identifier `md5`

    /tmp/tmpw_50jsad.d(15): Error: cannot implicitly convert expression `null` of
    type `typeof(null)` to `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpw_50jsad.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164204
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result;\n    if (text.length == 0)\n    {\n        return\
    \ result;\n    }\n    import std.digest.md;\n    import std.conv;\n    import\
    \ std.algorithm;\n    import std.array;\n    import std.range;\n    import std.string;\n\
    \    import std.typecons;\n    import std.math;\n    auto md5 = MD5(text);\n \
    \   auto md5_bytes = md5.finish().bytes;\n    auto md5_hex = md5_bytes.map!(to!string).join(\"\
    \");\n    result = md5_hex;\n    return result;\n}\n/*\nunittest\n{\n    alias\
    \ candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\"\
    );\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp6imu9s6u.d(31): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6imu9s6u.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164203
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return null;\n    else\n    {\n        auto\
    \ md5 = new MD5;\n        md5.put(text);\n        return md5.finish().toString();\n\
    \    }\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto\
    \ result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get\
    \ == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpfr8wrmbu.d(16): Error: undefined identifier `MD5`

    /tmp/tmpfr8wrmbu.d(13): Error: cannot implicitly convert expression `null` of
    type `typeof(null)` to `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfr8wrmbu.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164201
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result;\n    if (text.length == 0)\n    {\n        return\
    \ result;\n    }\n    else\n    {\n        result = md5(text);\n        return\
    \ result;\n    }\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n\
    \        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpc7xfox41.d(19): Error: undefined identifier `md5`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpc7xfox41.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164204
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return null;\n    return md5(text);\n}\nunittest\n\
    {\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpd4dizc5w.d(14): Error: undefined identifier `md5`

    /tmp/tmpd4dizc5w.d(13): Error: cannot implicitly convert expression `null` of
    type `typeof(null)` to `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpd4dizc5w.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164201
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result;\n    if (text.length == 0)\n    {\n        return\
    \ result;\n    }\n    else\n    {\n        result = md5(text);\n        return\
    \ result;\n    }\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n\
    \        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpc7xfox41.d(19): Error: undefined identifier `md5`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpc7xfox41.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164204
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result;\n    if (text.length == 0)\n    {\n        return\
    \ result;\n    }\n    else\n    {\n        import std.digest.md;\n        import\
    \ std.conv;\n        return to!(string)(md5(text));\n    }\n}\nunittest\n{\n \
    \   alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp5vmuryko.d(21): Error: undefined identifier `md5`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5vmuryko.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164204
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return Nullable!(string)();\n    import std.digest.md;\n\
    \    return Nullable!(string)(md.md5(text));\n}\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmphb4mp20m.d(15): Error: undefined identifier `md`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphb4mp20m.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164201
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return null;\n    import std.digest.md;\n  \
    \  return md.md5(text);\n}\n/*\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp52jrq80m.d(17): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp52jrq80m.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164203
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return Nullable!(string)();\n    import std.digest.md;\n\
    \    import std.conv;\n    return to!(string)(MD5(text));\n}\nunittest\n{\n  \
    \  alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello\
    \ world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpxf9q4igr.d(16): Error: cannot implicitly convert expression `text`
    of type `string` to `uint[4]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxf9q4igr.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164203
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return null;\n    return text.md5;\n}\nunittest\n\
    {\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpyknau4uq.d(14): Error: no property `md5` for type `string`

    /tmp/tmpyknau4uq.d(13): Error: cannot implicitly convert expression `null` of
    type `typeof(null)` to `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyknau4uq.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164204
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return Nullable!(string)();\n    import std.digest.md;\n\
    \    import std.conv;\n    return to!(string)(MD5(text));\n}\nunittest\n{\n  \
    \  alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello\
    \ world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpxf9q4igr.d(16): Error: cannot implicitly convert expression `text`
    of type `string` to `uint[4]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxf9q4igr.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164203
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return Nullable!(string)();\n    import std.digest.md;\n\
    \    return Nullable!(string)(md5(text));\n}\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp33xe3592.d(15): Error: undefined identifier `md5`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp33xe3592.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164202
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return Nullable!(string)();\n    import std.digest.md;\n\
    \    return Nullable!(string)(MD5(text));\n}\n/*\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1mr3jyyp.d(17): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1mr3jyyp.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164202
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result;\n    if (text.length == 0)\n    {\n        return\
    \ result;\n    }\n    else\n    {\n        import std.digest.md;\n        import\
    \ std.conv;\n        import std.string;\n        import std.algorithm;\n     \
    \   import std.array;\n        import std.range;\n        import std.typecons;\n\
    \        import std.math;\n        import std.range;\n        import std.algorithm;\n\
    \        import std.array;\n        import std.range;\n        import std.typecons;\n\
    \        import std.math;\n        import std.range;\n        import std.algorithm;\n\
    \        import std.array;\n        import std.range;\n        import std.typecons;\n\
    \        import std.math;\n        import std.range;\n        import std.algorithm;\n\
    \        import std.array;\n        import std.range;\n        import std.typecons;\n\
    \        import std.math;\n        import std.range;\n        import std.algorithm;\n\
    \        import std.array;\n        import std.range;\n        import std.typecons;\n\
    \        import std.math;\n        import std.range;\n        import std.algorithm;\n\
    \        import std.array;\n        import std.range;\n        import std.typecons;\n\
    \        import std.math;\n        import std.range;\n        import std.algorithm;\n\
    \        import std.array;\n        import std.range;\n        import std.typecons;\n\
    \        import std.math;\n        import std.range;\n        import std.algorithm;\n\
    \        import std.array;\n        import std.range;\n        import std.typecons;\n\
    \        import std.math;\n        import std.range;\n        import std.algorithm;\n\
    \        import std.array;\n        import std.range;\n        import std.typecons;\n\
    \        import std.math;\n        import std.range;\n        import std.algorithm;\n\
    \        import std.array;\n        import std.range;\n        import std.typecons;\n\
    \        import std.math;\n        import std.range;\n        import std.algorithm;\n\
    \nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp9v09cys8.d(84): Error: found `unittest` instead of statement

    /tmp/tmp9v09cys8.d(109): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9v09cys8.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164203
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result = Nullable!(string).init;\n    if (text.length ==\
    \ 0)\n    {\n        return result;\n    }\n    import std.digest.md;\n    import\
    \ std.conv;\n    import std.string;\n    auto digest = MD5(text);\n    result.assign(to!string(digest));\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n\
    {\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpnb3xhd0o.d(20): Error: cannot implicitly convert expression `text`
    of type `string` to `uint[4]`

    /tmp/tmpnb3xhd0o.d(21): Error: no property `assign` for type `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnb3xhd0o.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164204
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return null;\n    return md5(text);\n}\nunittest\n\
    {\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpd4dizc5w.d(14): Error: undefined identifier `md5`

    /tmp/tmpd4dizc5w.d(13): Error: cannot implicitly convert expression `null` of
    type `typeof(null)` to `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpd4dizc5w.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164201
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result = Nullable!(string).init;\n    if (text.length ==\
    \ 0)\n    {\n        return result;\n    }\n    import std.digest.md;\n    import\
    \ std.conv;\n    import std.array;\n    import std.algorithm;\n    import std.range;\n\
    \    import std.string;\n    import std.typecons;\n    import std.math;\n    import\
    \ std.stdio;\n    import std.format;\n    import std.traits;\n    import std.typecons;\n\
    \    import std.math;\n    import std.stdio;\n    import std.format;\n    import\
    \ std.traits;\n    import std.typecons;\n    import std.math;\n    import std.stdio;\n\
    \    import std.format;\n    import std.traits;\n    import std.typecons;\n  \
    \  import std.math;\n    import std.stdio;\n    import std.format;\n    import\
    \ std.traits;\n    import std.typecons;\n    import std.math;\n    import std.stdio;\n\
    \    import std.format;\n    import std.traits;\n    import std.typecons;\n  \
    \  import std.math;\n    import std.stdio;\n    import std.format;\n    import\
    \ std.traits;\n    import std.typecons;\n    import std.math;\n    import std.stdio;\n\
    \    import std.format;\n    import std.traits;\n    import std.typecons;\n  \
    \  import std.math;\n    import std.stdio;\n    import std.format;\n    import\
    \ std.traits;\n    import std.typecons;\n    import std.math;\n    import std.stdio;\n\
    \    import std.format;\n    import std.traits;\n    import std.typecons;\n  \
    \  import std.math;\n    import std.stdio;\n    import std.format;\n    import\
    \ std.traits;\n    import std.typecons;\n    import std.math;\n    import std.stdio;\n\
    \    import std.format;\n    import std.traits;\n    import std.typecons\nunittest\n\
    {\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp6nslx87x.d(79): Error: `;` expected

    /tmp/tmp6nslx87x.d(104): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6nslx87x.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164203
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result;\n    if (text.length == 0)\n    {\n        return\
    \ result;\n    }\n    import std.digest.md;\n    import std.conv;\n    import\
    \ std.string;\n    import std.algorithm;\n    import std.array;\n    import std.range;\n\
    \    import std.typecons;\n    import std.math;\n    import std.stdio;\n    import\
    \ std.file;\n    import std.format;\n    import std.exception;\n    import std.traits;\n\
    \    import std.datetime;\n    import std.typecons;\n    import std.math;\n  \
    \  import std.range;\n    import std.algorithm;\n    import std.array;\n    import\
    \ std.conv;\n    import std.string;\n    import std.typecons;\n    import std.math;\n\
    \    import std.range;\n    import std.algorithm;\n    import std.array;\n   \
    \ import std.conv;\n    import std.string;\n    import std.typecons;\n    import\
    \ std.math;\n    import std.range;\n    import std.algorithm;\n    import std.array;\n\
    \    import std.conv;\n    import std.string;\n    import std.typecons;\n    import\
    \ std.math;\n    import std.range;\n    import std.algorithm;\n    import std.array;\n\
    \    import std.conv;\n    import std.string;\n    import std.typecons;\n    import\
    \ std.math;\n    import std.range;\n    import std.algorithm;\n    import std.array;\n\
    \    import std.conv;\n    import std.string;\n    import std.typecons;\n    import\
    \ std.math;\n    import std.range;\n    import std.algorithm;\n    import std.array;\n\
    \    import std.conv;\n    import std.string;\n    import std.typecons;\n    import\
    \ std.math;\n    import std.range;\n    import std.algorithm;\n    import std.array;\n\
    \    import std.conv;\n    import std.string;\n    import std.typecons;\n    import\
    \ std.math;\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto\
    \ result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get\
    \ == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp9wkosfc4.d(82): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9wkosfc4.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164203
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result;\n    if (text.length == 0) \n    {\n        return\
    \ result;\n    }\n    auto md5 = new MD5;\n    md5.put(text);\n    result = md5.finish().toString;\n\
    \    return result;\n}\n/*\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpyyqr4pwn.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyyqr4pwn.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164203
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return Nullable!(string)();\n    import std.digest.md;\n\
    \    return Nullable!(string)(md5(text));\n}\n/*\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1oom2esl.d(17): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1oom2esl.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164200
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result;\n    if (text.length == 0)\n    {\n        return\
    \ result;\n    }\n    import std.digest.md;\n    import std.conv;\n    import\
    \ std.string;\n    import std.array;\n    import std.algorithm;\n    import std.range;\n\
    \    import std.typecons;\n    import std.math;\n    import std.stdio;\n    import\
    \ std.format;\n    import std.traits;\n    import std.range;\n    import std.algorithm;\n\
    \    import std.array;\n    import std.conv;\n    import std.string;\n    import\
    \ std.typecons;\n    import std.math;\n    import std.stdio;\n    import std.format;\n\
    \    import std.traits;\n    import std.range;\n    import std.algorithm;\n  \
    \  import std.array;\n    import std.conv;\n    import std.string;\n    import\
    \ std.typecons;\n    import std.math;\n    import std.stdio;\n    import std.format;\n\
    \    import std.traits;\n    import std.range;\n    import std.algorithm;\n  \
    \  import std.array;\n    import std.conv;\n    import std.string;\n    import\
    \ std.typecons;\n    import std.math;\n    import std.stdio;\n    import std.format;\n\
    \    import std.traits;\n    import std.range;\n    import std.algorithm;\n  \
    \  import std.array;\n    import std.conv;\n    import std.string;\n    import\
    \ std.typecons;\n    import std.math;\n    import std.stdio;\n    import std.format;\n\
    \    import std.traits;\n    import std.range;\n    import std.algorithm;\n  \
    \  import std.array;\n    import std.conv;\n    import std.string;\n    import\
    \ std.typecons;\n    import std.math;\n    import std.stdio;\n    import std.format;\n\
    \    import std.traits;\n    import std.range;\n    import std.algorithm;\n  \
    \  import std.array;\n    import\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpi2lwaiwd.d(82): Error: identifier expected following `import`

    /tmp/tmpi2lwaiwd.d(82): Error: `;` expected

    /tmp/tmpi2lwaiwd.d(107): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpi2lwaiwd.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164203

language: d
name: HumanEval_162_string_to_md5
results:
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result = Nullable!(string).init;\n    if (text.length ==\
    \ 0)\n    {\n        return result;\n    }\n    import std.digest.md;\n    import\
    \ std.conv;\n    import std.array;\n    import std.algorithm;\n    import std.range;\n\
    \    import std.format;\n    import std.string;\n    import std.typecons;\n  \
    \  import std.math;\n    auto digest = MD5(text);\n    auto digest_array = digest.array;\n\
    \    auto digest_array_length = digest_array.length;\n    auto digest_array_length_half\
    \ = digest_array_length / 2;\n    auto digest_array_length_half_rounded = round(digest_array_length_half);\n\
    \    auto digest_array_length_half_rounded_int = cast(int)digest_array_length_half_rounded;\n\
    \    auto digest_array_length_half_rounded_int_minus_one = digest_array_length_half_rounded_int\
    \ - 1;\n    auto digest_array_length_half_rounded_int_minus_one_plus_one = digest_array_length_half_rounded_int_minus_one\
    \ + 1;\n    auto digest_array_length_half_rounded_int_minus_one_plus_one_plus_one\
    \ = digest_array_length_half_rounded_int_minus_one_plus_one + 1;\n    auto digest_array_length_half_rounded_int_minus_one_plus_one_plus_one_plus_one\
    \ = digest_array_length_half_rounded_int_minus_one_plus_one_plus_one + 1;\n  \
    \  auto digest_array_length_half_rounded_int_minus_one_plus_one_plus_one_plus_one_plus_one\
    \ = digest_array_length_half_rounded_int_minus_one_plus_one_plus_one_plus_one\
    \ + 1;\n    auto digest_array_length_half_rounded_int_minus_one_plus_one_plus_one_plus_one_plus_one_plus_one\
    \ = digest_array_length_half_rounded_\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpt_tz82zg.d(38): Error: semicolon expected following auto declaration,
    not \''unittest\''\n/tmp/tmpt_tz82zg.d(38): Error: found \''unittest\'' instead
    of statement\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpt_tz82zg.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return Nullable!(string)();\n    import std.digest.md;\n\
    \    import std.conv;\n    auto md5 = MD5(text);\n    return to!string(md5);\n\
    }\n/*\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpm3z83dde.d(19): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpm3z83dde.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return null;\n    import std.digest.md;\n  \
    \  return md.md5(text);\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg5n6ck3n.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return null;\n    else\n    {\n        import\
    \ std.digest.md;\n        return to!string(md(text));\n    }\n}\nunittest\n{\n\
    \    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpf7vgf3i8.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return null;\n    else\n    {\n        auto\
    \ md5 = new MD5;\n        md5.put(text);\n        return md5.finish().toString();\n\
    \    }\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto\
    \ result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get\
    \ == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp121m3i33.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return null;\n    else\n    {\n        import\
    \ std.digest.md;\n        return md.md5(text);\n    }\n}\n/*\nunittest\n{\n  \
    \  alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello\
    \ world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmplojvdfax.d(20): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmplojvdfax.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result;\n    if (text.length == 0)\n    {\n        return\
    \ result;\n    }\n    else\n    {\n        import std.digest.md;\n        import\
    \ std.conv;\n        import std.array;\n        import std.algorithm;\n      \
    \  import std.range;\n        import std.format;\n        import std.string;\n\
    \        import std.typecons;\n        import std.math;\n        import std.traits;\n\
    \        import std.range;\n        import std.algorithm;\n        import std.array;\n\
    \        import std.conv;\n        import std.digest.md;\n        import std.format;\n\
    \        import std.math;\n        import std.string;\n        import std.traits;\n\
    \        import std.typecons;\n        import std.algorithm;\n        import std.array;\n\
    \        import std.conv;\n        import std.digest.md;\n        import std.format;\n\
    \        import std.math;\n        import std.string;\n        import std.traits;\n\
    \        import std.typecons;\n        import std.algorithm;\n        import std.array;\n\
    \        import std.conv;\n        import std.digest.md;\n        import std.format;\n\
    \        import std.math;\n        import std.string;\n        import std.traits;\n\
    \        import std.typecons;\n        import std.algorithm;\n        import std.array;\n\
    \        import std.conv;\n        import std.digest.md;\n        import std.format;\n\
    \        import std.math;\n        import std.string;\n        import std.traits;\n\
    \        import std.typecons;\n        import std.algorithm;\n        import std.array;\n\
    \        import std.conv;\n        import std.digest.md;\n        import std.format;\n\
    \        import std.math;\n        import std.string;\n        import std.traits;\n\
    \        import std.typecons;\n        import std.algorithm;\n        import std.array;\n\
    \        import std.conv;\n        import std.digest.md;\n        import std.format;\n\
    \        import std.math\nunittest\n{\n    alias candidate = string_to_md5;\n\n\
    {\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpazmohz_z.d(81): Error: \'';\'' expected\n/tmp/tmpazmohz_z.d(106):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\n/tmp/tmpazmohz_z.d(106):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpazmohz_z.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result;\n    if (text.length == 0)\n    {\n        return\
    \ result;\n    }\n    else\n    {\n        import std.digest.md;\n        import\
    \ std.conv;\n        import std.string;\n        auto md5 = MD5(text);\n     \
    \   result = to!string(md5);\n        return result;\n    }\n}\nunittest\n{\n\
    \    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp65z5iic8.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return null;\n    import std.digest.md;\n  \
    \  return digest(MD5, text);\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0y3vhnrg.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result;\n    if (text.length == 0)\n    {\n        return\
    \ result;\n    }\n    import std.digest.md;\n    import std.conv;\n    import\
    \ std.string;\n    import std.algorithm;\n    import std.array;\n    import std.range;\n\
    \    import std.typecons;\n    import std.math;\n    import std.format;\n    import\
    \ std.stdio;\n    import std.traits;\n    import std.typecons;\n    import std.math;\n\
    \    import std.algorithm;\n    import std.array;\n    import std.range;\n   \
    \ import std.typecons;\n    import std.math;\n    import std.format;\n    import\
    \ std.stdio;\n    import std.traits;\n    import std.typecons;\n    import std.math;\n\
    \    import std.algorithm;\n    import std.array;\n    import std.range;\n   \
    \ import std.typecons;\n    import std.math;\n    import std.format;\n    import\
    \ std.stdio;\n    import std.traits;\n    import std.typecons;\n    import std.math;\n\
    \    import std.algorithm;\n    import std.array;\n    import std.range;\n   \
    \ import std.typecons;\n    import std.math;\n    import std.format;\n    import\
    \ std.stdio;\n    import std.traits;\n    import std.typecons;\n    import std.math;\n\
    \    import std.algorithm;\n    import std.array;\n    import std.range;\n   \
    \ import std.typecons;\n    import std.math;\n    import std.format;\n    import\
    \ std.stdio;\n    import std.traits;\n    import std.typecons;\n    import std.math;\n\
    \    import std.algorithm;\n    import std.array;\n    import std.range;\n   \
    \ import std.typecons;\n    import std.math;\n    import std.format;\n    import\
    \ std.stdio;\n    import std.traits;\n    import std.typecons;\n    import std.math;\n\
    \    import std.\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n   \
    \     auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmprnuqsyyz.d(81): Error: identifier expected following package\n/tmp/tmprnuqsyyz.d(81):
    Error: \'';\'' expected\n/tmp/tmprnuqsyyz.d(106): Error: found \''EOF\'' when
    expecting \''}\'' following compound statement\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmprnuqsyyz.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0) \n    {\n        return Nullable!(string)();\n    }\n\
    \    else \n    {\n        import std.digest.md;\n        return Nullable!(string)(md.md5(text));\n\
    \    }\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto\
    \ result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get\
    \ == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsgg37y7f.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return null;\n    auto hash = new MD5;\n   \
    \ hash.put(text);\n    return hash.finish().toString();\n}\nunittest\n{\n    alias\
    \ candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\"\
    );\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpp03iiqvs.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return Nullable!(string)();\n    else\n    {\n\
    \        auto md5 = new MD5;\n        md5.put(text);\n        return md5.finish().toString();\n\
    \    }\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto\
    \ result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get\
    \ == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp13pul8ss.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result;\n    if (text.length > 0)\n    {\n        import\
    \ std.digest.md;\n        import std.conv;\n        import std.string;\n     \
    \   import std.algorithm;\n        import std.array;\n        import std.range;\n\
    \        import std.typecons;\n        import std.math;\n        auto md5 = MD5(text);\n\
    \        auto md5_str = to!string(md5);\n        auto md5_str_arr = md5_str.array();\n\
    \        auto md5_str_arr_len = md5_str_arr.length;\n        auto md5_str_arr_len_half\
    \ = md5_str_arr_len / 2;\n        auto md5_str_arr_len_half_ceil = ceil(md5_str_arr_len_half);\n\
    \        auto md5_str_arr_len_half_ceil_int = to!int(md5_str_arr_len_half_ceil);\n\
    \        auto md5_str_arr_len_half_ceil_int_half = md5_str_arr_len_half_ceil_int\
    \ / 2;\n        auto md5_str_arr_len_half_ceil_int_half_floor = floor(md5_str_arr_len_half_ceil_int_half);\n\
    \        auto md5_str_arr_len_half_ceil_int_half_floor_int = to!int(md5_str_arr_len_half_ceil_int_half_floor);\n\
    \        auto md5_str_arr_len_half_ceil_int_half_floor_int_half = md5_str_arr_len_half_ceil_int_half_floor_int\
    \ / 2;\n        auto md5_str_arr_len_half_ceil_int_half_floor_int_half_floor =\
    \ floor(md5_str_arr_len_half_ceil_int_half_floor_int_half);\n        auto md5_str_arr_len_half_ceil_int_half_floor_int_half_floor_int\
    \ = to\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpvj9juhec.d(36): Error: semicolon expected following auto declaration,
    not \''unittest\''\n/tmp/tmpvj9juhec.d(36): Error: found \''unittest\'' instead
    of statement\n/tmp/tmpvj9juhec.d(61): Error: found \''EOF\'' when expecting \''}\''
    following compound statement\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvj9juhec.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return Nullable!(string)();\n    import std.digest.md;\n\
    \    return Nullable!(string)(md5(text));\n}\n/*\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmps95iymvj.d(17): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmps95iymvj.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result;\n    if (text.length == 0) {\n        return result;\n\
    \    }\n    import std.digest.md;\n    import std.conv;\n    import std.string;\n\
    \    import std.array;\n    import std.algorithm;\n    import std.range;\n   \
    \ import std.format;\n    import std.stdio;\n    import std.math;\n    import\
    \ std.typecons;\n    import std.traits;\n    import std.range;\n    import std.algorithm;\n\
    \    import std.array;\n    import std.string;\n    import std.conv;\n    import\
    \ std.stdio;\n    import std.format;\n    import std.math;\n    import std.typecons;\n\
    \    import std.traits;\n    import std.range;\n    import std.algorithm;\n  \
    \  import std.array;\n    import std.string;\n    import std.conv;\n    import\
    \ std.stdio;\n    import std.format;\n    import std.math;\n    import std.typecons;\n\
    \    import std.traits;\n    import std.range;\n    import std.algorithm;\n  \
    \  import std.array;\n    import std.string;\n    import std.conv;\n    import\
    \ std.stdio;\n    import std.format;\n    import std.math;\n    import std.typecons;\n\
    \    import std.traits;\n    import std.range;\n    import std.algorithm;\n  \
    \  import std.array;\n    import std.string;\n    import std.conv;\n    import\
    \ std.stdio;\n    import std.format;\n    import std.math;\n    import std.typecons;\n\
    \    import std.traits;\n    import std.range;\n    import std.algorithm;\n  \
    \  import std.array;\n    import std.string;\n    import std.conv;\n    import\
    \ std.stdio;\n    import std.format;\n    import std.math;\n    import std.typecons;\n\
    \    import std.traits;\n    import std.range;\n    import std.algorithm;\n  \
    \  import std.array;\n    import std.\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpq9_5q5eg.d(81): Error: identifier expected following package\n/tmp/tmpq9_5q5eg.d(81):
    Error: \'';\'' expected\n/tmp/tmpq9_5q5eg.d(106): Error: found \''EOF\'' when
    expecting \''}\'' following compound statement\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpq9_5q5eg.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return null;\n    return md5(text);\n}\nunittest\n\
    {\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_q0c2e2l.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return null;\n    import std.digest.md;\n  \
    \  return to!string(MD5(text));\n}\n/*\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpq5b_fvvn.d(17): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpq5b_fvvn.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return Nullable!(string)();\n    import std.digest.md;\n\
    \    return Nullable!(string)(md.md5(text));\n}\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_pkafq2h.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return Nullable!(string)();\n    import std.digest.md;\n\
    \    import std.conv;\n    return to!(string)(MD5(text));\n}\n/*\nunittest\n{\n\
    \    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpiyg93q8e.d(18): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpiyg93q8e.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return Nullable!(string)();\n    return Nullable!(string)(md5(text));\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3bzqkm5_.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) md5_hash = Nullable!(string).init;\n    if (text.length ==\
    \ 0)\n    {\n        return md5_hash;\n    }\n    else\n    {\n        md5_hash.set(md5(text));\n\
    \        return md5_hash;\n    }\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7e_8h29w.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return Nullable!(string)();\n    import std.digest.md;\n\
    \    return Nullable!(string)(md.md5(text));\n}\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_pkafq2h.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result;\n    if (text.length > 0)\n    {\n        import\
    \ std.digest.md;\n        import std.conv;\n        import std.string;\n     \
    \   import std.array;\n        import std.algorithm;\n        import std.range;\n\
    \        import std.typecons;\n        import std.math;\n        auto hash = MD5(text);\n\
    \        auto hash_string = hash.to!string;\n        auto hash_string_length =\
    \ hash_string.length;\n        auto hash_string_length_half = hash_string_length\
    \ / 2;\n        auto hash_string_length_half_ceil = ceil(hash_string_length_half);\n\
    \        auto hash_string_length_half_floor = floor(hash_string_length_half);\n\
    \        auto hash_string_length_half_ceil_minus_one = hash_string_length_half_ceil\
    \ - 1;\n        auto hash_string_length_half_floor_minus_one = hash_string_length_half_floor\
    \ - 1;\n        auto hash_string_length_half_ceil_minus_two = hash_string_length_half_ceil\
    \ - 2;\n        auto hash_string_length_half_floor_minus_two = hash_string_length_half_floor\
    \ - 2;\n        auto hash_string_length_half_ceil_minus_three = hash_string_length_half_ceil\
    \ - 3;\n        auto hash_string_length_half_floor_minus_three = hash_string_length_half_floor\
    \ - 3;\n        auto hash_string_length_half_ceil_minus_four = hash_string_length_half_ceil\
    \ - 4;\n        auto hash_string_length_half_floor_minus_four = hash_string_length_half_floor\
    \ - 4;\n        auto hash_string_length_half_ceil_minus_five = hash_string_length_half_ceil\
    \ - 5;\n        auto hash_string_length_half_floor_minus_five = hash_string_length_half_floor\
    \ - 5;\n        auto hash_string_length_half_ceil_minus_six = hash_string\nunittest\n\
    {\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpxajsp257.d(40): Error: semicolon expected following auto declaration,
    not \''unittest\''\n/tmp/tmpxajsp257.d(40): Error: found \''unittest\'' instead
    of statement\n/tmp/tmpxajsp257.d(65): Error: found \''EOF\'' when expecting \''}\''
    following compound statement\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxajsp257.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return null;\n    import std.digest.md;\n  \
    \  return to!string(md(text));\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp60f00kt_.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result = Nullable!(string).init;\n    if (text.length > 0)\n\
    \    {\n        import std.digest.md;\n        import std.conv;\n        import\
    \ std.string;\n        import std.array;\n        import std.algorithm;\n    \
    \    import std.range;\n        import std.format;\n        import std.typecons;\n\
    \        import std.math;\n        import std.traits;\n        import std.meta;\n\
    \        import std.range;\n        import std.algorithm;\n        import std.array;\n\
    \        import std.conv;\n        import std.string;\n        import std.typecons;\n\
    \        import std.math;\n        import std.traits;\n        import std.meta;\n\
    \        import std.range;\n        import std.algorithm;\n        import std.array;\n\
    \        import std.conv;\n        import std.string;\n        import std.typecons;\n\
    \        import std.math;\n        import std.traits;\n        import std.meta;\n\
    \        import std.range;\n        import std.algorithm;\n        import std.array;\n\
    \        import std.conv;\n        import std.string;\n        import std.typecons;\n\
    \        import std.math;\n        import std.traits;\n        import std.meta;\n\
    \        import std.range;\n        import std.algorithm;\n        import std.array;\n\
    \        import std.conv;\n        import std.string;\n        import std.typecons;\n\
    \        import std.math;\n        import std.traits;\n        import std.meta;\n\
    \        import std.range;\n        import std.algorithm;\n        import std.array;\n\
    \        import std.conv;\n        import std.string;\n        import std.typecons;\n\
    \        import std.math;\n        import std.traits;\n        import std.meta;\n\
    \        import std.range;\n        import std.algorithm;\n        import std.array;\n\
    \        import std.conv;\n        import std.string;\n        import std.typecons;\n\
    \        import std.math;\n        import std.traits;\n        import std.meta;\n\
    unittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result =\
    \ candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpbo308v_0.d(80): Error: found \''unittest\'' instead of statement\n/tmp/tmpbo308v_0.d(105):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbo308v_0.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) ret;\n    if (text.length == 0)\n    {\n        return ret;\n\
    \    }\n    else\n    {\n        import std.digest.md;\n        import std.conv;\n\
    \        import std.array;\n        import std.algorithm;\n        import std.range;\n\
    \        import std.format;\n        import std.string;\n        import std.typecons;\n\
    \        import std.math;\n        import std.ascii;\n        import std.datetime;\n\
    \        import std.file;\n        import std.stdio;\n        import std.traits;\n\
    \        import std.typecons;\n        import std.uni;\n        import std.uri;\n\
    \        import std.variant;\n        import std.xml;\n        import std.zip;\n\
    \        import std.zlib;\n        import std.regex;\n        import std.range;\n\
    \        import std.algorithm;\n        import std.array;\n        import std.conv;\n\
    \        import std.datetime;\n        import std.format;\n        import std.math;\n\
    \        import std.range;\n        import std.regex;\n        import std.string;\n\
    \        import std.traits;\n        import std.typecons;\n        import std.uni;\n\
    \        import std.uri;\n        import std.variant;\n        import std.xml;\n\
    \        import std.zip;\n        import std.zlib;\n        import std.digest.md;\n\
    \        import std.digest.sha;\n        import std.digest.crc;\n        import\
    \ std.digest.adler;\n        import std.digest.hmac;\n        import std.digest.hmac;\n\
    \        import std.digest.crc;\n        import std.digest.adler;\n        import\
    \ std.digest.sha;\n        import std.digest.md;\n        import std.digest.sha;\n\
    \        import std.digest.crc;\n        import std.digest.adler;\n        import\
    \ std.digest.hmac;\n        import std.digest.hmac;\n        import std.digest.crc;\n\
    \nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpptmt74wn.d(76): Error: found \''unittest\'' instead of statement\n/tmp/tmpptmt74wn.d(101):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpptmt74wn.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0) \n    {\n        return Nullable!(string)();\n    }\n\
    \    else \n    {\n        return Nullable!(string)(md5(text));\n    }\n}\nunittest\n\
    {\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcpub22yf.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result = Nullable!(string).init;\n    if(text.length == 0)\n\
    \    {\n        return result;\n    }\n    import std.digest.md;\n    import std.conv;\n\
    \    auto hash = MD5(text);\n    result.set(to!string(hash));\n    return result;\n\
    }\n/*\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp3uua66hh.d(23): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmp3uua66hh.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return null;\n    import std.digest.md;\n  \
    \  return md.md5(text);\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg5n6ck3n.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result;\n    if (text.length == 0)\n    {\n        return\
    \ result;\n    }\n    else\n    {\n        import std.digest.md;\n        import\
    \ std.conv;\n        import std.algorithm;\n        import std.array;\n      \
    \  import std.range;\n        import std.typecons;\n        import std.math;\n\
    \        import std.string;\n        import std.range;\n        import std.algorithm;\n\
    \        import std.array;\n        import std.typecons;\n        import std.math;\n\
    \        import std.string;\n        import std.range;\n        import std.algorithm;\n\
    \        import std.array;\n        import std.typecons;\n        import std.math;\n\
    \        import std.string;\n        import std.range;\n        import std.algorithm;\n\
    \        import std.array;\n        import std.typecons;\n        import std.math;\n\
    \        import std.string;\n        import std.range;\n        import std.algorithm;\n\
    \        import std.array;\n        import std.typecons;\n        import std.math;\n\
    \        import std.string;\n        import std.range;\n        import std.algorithm;\n\
    \        import std.array;\n        import std.typecons;\n        import std.math;\n\
    \        import std.string;\n        import std.range;\n        import std.algorithm;\n\
    \        import std.array;\n        import std.typecons;\n        import std.math;\n\
    \        import std.string;\n        import std.range;\n        import std.algorithm;\n\
    \        import std.array;\n        import std.typecons;\n        import std.math;\n\
    \        import std.string;\n        import std.range;\n        import std.algorithm;\n\
    \        import std.array;\n        import std.typecons;\n        import std.math;\n\
    \        import std.string;\n        import std.range;\n        import std.algorithm;\n\
    \        import std.array;\n        import std.typecons;\n        import std.math;\n\
    \        import std.string;\n        import std.range;\n        import std.algorithm;\n\
    \nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp7s3w4r4y.d(84): Error: found \''unittest\'' instead of statement\n/tmp/tmp7s3w4r4y.d(109):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7s3w4r4y.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  import std.digest.md;\n    import std.conv;\n    import std.algorithm;\n  \
    \  import std.range;\n    import std.array;\n    import std.string;\n    import\
    \ std.typecons;\n    import std.math;\n    if (text.empty)\n    {\n        return\
    \ Nullable!(string)();\n    }\n    else\n    {\n        auto md5 = MD5(text);\n\
    \        auto md5_string = format(\"%s\", md5);\n        return Nullable!(string)(md5_string);\n\
    \    }\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto\
    \ result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get\
    \ == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpi1aqb_07.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return null;\n    import std.digest.md;\n  \
    \  auto md5 = new MD5;\n    md5.put(text);\n    return md5.finish().toHexString();\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpn7g8cyat.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  import std.digest.md;\n    import std.conv;\n    import std.string;\n    import\
    \ std.algorithm;\n    import std.range;\n    import std.array;\n    import std.typecons;\n\
    \    import std.math;\n    if (text.length == 0)\n    {\n        return Nullable!(string)();\n\
    \    }\n    else\n    {\n        return Nullable!(string)(to!string(md5(text)));\n\
    \    }\n}\n/*\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n      \
    \  auto result = candidate(\"Hello world\");\n        assert(!result.isNull &&\
    \ result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result\
    \ = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result\
    \ = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpkqmnd5tj.d(29): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpkqmnd5tj.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return null;\n    import std.digest.md;\n  \
    \  return to!string(MD5(text));\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnvry0lmt.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return null;\n    import std.digest.md;\n  \
    \  return md.md5(text);\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg5n6ck3n.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0) \n    {\n        return Nullable!(string)();\n    }\n\
    \    import std.digest.md;\n    import std.conv;\n    import std.array;\n    import\
    \ std.algorithm;\n    import std.range;\n    import std.format;\n    import std.string;\n\
    \    import std.math;\n    import std.typecons;\n    import std.traits;\n    import\
    \ std.conv;\n    import std.range;\n    import std.algorithm;\n    import std.array;\n\
    \    import std.digest.md;\n    import std.format;\n    import std.math;\n   \
    \ import std.string;\n    import std.traits;\n    import std.typecons;\n    import\
    \ std.math;\n    import std.typecons;\n    import std.math;\n    import std.typecons;\n\
    \    import std.math;\n    import std.typecons;\n    import std.math;\n    import\
    \ std.typecons;\n    import std.math;\n    import std.typecons;\n    import std.math;\n\
    \    import std.typecons;\n    import std.math;\n    import std.typecons;\n  \
    \  import std.math;\n    import std.typecons;\n    import std.math;\n    import\
    \ std.typecons;\n    import std.math;\n    import std.typecons;\n    import std.math;\n\
    \    import std.typecons;\n    import std.math;\n    import std.typecons;\n  \
    \  import std.math;\n    import std.typecons;\n    import std.math;\n    import\
    \ std.typecons;\n    import std.math;\n    import std.typecons;\n    import std.math;\n\
    \    import std.typecons;\n    import std.math;\n    import std.typecons;\n  \
    \  import std.math;\n    import std.typecons;\n    import std.math;\n    import\
    \ std.typecons;\n    import std.math;\n    import std.typecons;\n    import std.math;\n\
    \    import std.typecons;\n    import std.math;\n    import std.typecons;\n\n\
    unittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result =\
    \ candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp6f338z7q.d(81): Error: found \''unittest\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6f338z7q.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return Nullable!(string)();\n    import std.digest.md;\n\
    \    return Nullable!(string)(md.md5(text));\n}\n/*\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp0gsn1n1l.d(17): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmp0gsn1n1l.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  import std.digest.md;\n    import std.conv;\n    import std.string;\n    import\
    \ std.array;\n    import std.algorithm;\n    import std.range;\n    import std.typecons;\n\
    \    import std.math;\n    Nullable!(string) ret = Nullable!(string).init;\n \
    \   if (text.length > 0)\n    {\n        auto md5 = MD5(text);\n        ret.assign(md5.toString());\n\
    \    }\n    return ret;\n}\n/*\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpeqg4qy8y.d(28): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpeqg4qy8y.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result = Nullable!(string).init;\n    if (text.length ==\
    \ 0)\n    {\n        return result;\n    }\n    else\n    {\n        import std.digest.md;\n\
    \        import std.conv;\n        import std.algorithm;\n        import std.array;\n\
    \        import std.range;\n        import std.string;\n        import std.typecons;\n\
    \        import std.math;\n        import std.stdio;\n        import std.traits;\n\
    \        import std.typecons;\n        import std.algorithm;\n        import std.range;\n\
    \        import std.string;\n        import std.conv;\n        import std.algorithm;\n\
    \        import std.array;\n        import std.range;\n        import std.string;\n\
    \        import std.typecons;\n        import std.math;\n        import std.stdio;\n\
    \        import std.traits;\n        import std.typecons;\n        import std.algorithm;\n\
    \        import std.range;\n        import std.string;\n        import std.conv;\n\
    \        import std.algorithm;\n        import std.array;\n        import std.range;\n\
    \        import std.string;\n        import std.typecons;\n        import std.math;\n\
    \        import std.stdio;\n        import std.traits;\n        import std.typecons;\n\
    \        import std.algorithm;\n        import std.range;\n        import std.string;\n\
    \        import std.conv;\n        import std.algorithm;\n        import std.array;\n\
    \        import std.range;\n        import std.string;\n        import std.typecons;\n\
    \        import std.math;\n        import std.stdio;\n        import std.traits;\n\
    \        import std.typecons;\n        import std.algorithm;\n        import std.range;\n\
    \        import std.string;\n        import std.conv;\n        import std.algorithm;\n\
    \        import std.array;\n        import std.range;\n        import std.string;\n\
    \        import std.typecons;\n        import std.math;\n        import std.stdio;\n\
    \        import std.traits;\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmprvjjixma.d(81): Error: found \''unittest\'' instead of statement\n/tmp/tmprvjjixma.d(106):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprvjjixma.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0) \n    {\n        return null;\n    }\n    auto md5 =\
    \ new MD5;\n    md5.put(text);\n    return md5.finish().toString();\n}\nunittest\n\
    {\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmj5w2ctt.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result;\n    if (text.length == 0) \n    {\n        return\
    \ result;\n    }\n    import std.digest.md;\n    import std.conv;\n    import\
    \ std.string;\n    import std.algorithm;\n    import std.array;\n    import std.range;\n\
    \    import std.typecons;\n    import std.math;\n    auto hash = MD5(text);\n\
    \    auto hash_string = hash.to!string;\n    result = hash_string;\n    return\
    \ result;\n}\n/*\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n   \
    \     auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpfs8arf9q.d(30): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpfs8arf9q.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result;\n    if (text.length > 0) \n    {\n        import\
    \ std.digest.md;\n        import std.conv;\n        import std.array;\n      \
    \  import std.algorithm;\n        import std.range;\n        import std.string;\n\
    \        import std.format;\n        import std.typecons;\n        import std.math;\n\
    \        auto md5 = MD5(text);\n        auto digest = md5.finish();\n        auto\
    \ hex_digest = digest.map!(to!string).map!(to!string).map!(to!string).map!(to!string).map!(to!string).map!(to!string).map!(to!string).map!(to!string).map!(to!string).map!(to!string).map!(to!string).map!(to!string).map!(to!string).map!(to!string).map!(to!string).map!(to!string).map!(to!string).map!(to!string).map!(to!string).map!(to!string).map!(to!string).map!(to!string).map!(to!string).map!(to!string).map!(to!string).map!(to!string).map!(to!string).map!(to!string).map!(to!string).map!(to!string).map!(to!string).map!(to!string).map!(to!string).map!(to!string).map!(to!string).map!(to!string).map!(to!string).map!(to!string).map!(to!string).map!(to!string).map!(to!string).map!(to!string).map!(to!string).map!(to!string).map!(to!string).map!(to!string).map!(to!string).map!(to!string).map!(to!string).map!(to!string).map!(to!string).map!(to!string).map!(to!string).map!(to!string).map!(to!string).map\n\
    unittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result =\
    \ candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpxv4t7lr4.d(27): Error: semicolon expected following auto declaration,
    not \''unittest\''\n/tmp/tmpxv4t7lr4.d(27): Error: found \''unittest\'' instead
    of statement\n/tmp/tmpxv4t7lr4.d(52): Error: found \''EOF\'' when expecting \''}\''
    following compound statement\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxv4t7lr4.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return null;\n    import std.digest.md;\n  \
    \  import std.conv;\n    return to!string(MD5(text));\n}\nunittest\n{\n    alias\
    \ candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\"\
    );\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpc3rnllli.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result;\n    if(text.length == 0)\n    {\n        return\
    \ result;\n    }\n    else\n    {\n        auto md5 = new MD5;\n        md5.put(text);\n\
    \        result = md5.finish().toString();\n        return result;\n    }\n}\n\
    /*\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpszyta9c9.d(25): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpszyta9c9.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return null;\n    auto hash = new MD5;\n   \
    \ hash.put(text);\n    return hash.finish().toString();\n}\nunittest\n{\n    alias\
    \ candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\"\
    );\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpp03iiqvs.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return Nullable!(string)();\n    import std.digest.md;\n\
    \    return Nullable!(string)(md.md5(text));\n}\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_pkafq2h.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return Nullable!(string)();\n    import std.digest.md;\n\
    \    return Nullable!(string)(md.md5(text));\n}\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_pkafq2h.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return Nullable!(string)();\nunittest\n{\n \
    \   alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpajr95o53.d(14): Error: found \''unittest\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpajr95o53.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return Nullable!(string)();\n    return Nullable!(string)(md5(text));\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3bzqkm5_.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return Nullable!(string)();\n    import std.digest.md;\n\
    \    return Nullable!(string)(to!string(MD5(text)));\n}\nunittest\n{\n    alias\
    \ candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\"\
    );\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6jwpscuk.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result;\n    if (text.length == 0)\n    {\n        return\
    \ result;\n    }\n    else\n    {\n        import std.digest.md;\n        import\
    \ std.conv;\n        result = to!string(MD5(text));\n        return result;\n\
    \    }\n}\n/*\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n      \
    \  auto result = candidate(\"Hello world\");\n        assert(!result.isNull &&\
    \ result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result\
    \ = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result\
    \ = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpxsuki_qk.d(25): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpxsuki_qk.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return Nullable!(string)();\n    import std.digest.md;\n\
    \    return Nullable!(string)(to!string(md5(text)));\n}\nunittest\n{\n    alias\
    \ candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\"\
    );\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyd0kdbxd.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return null;\n    else\n    {\n        import\
    \ std.digest.md;\n        return md.md5(text);\n    }\n}\nunittest\n{\n    alias\
    \ candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\"\
    );\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpboots7gs.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return Nullable!(string)();\n    import std.digest.md;\n\
    \    return Nullable!(string)(md5(text));\n}\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpowwg0jgo.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return null;\n    import std.digest.md;\n  \
    \  return to!string(md5(text));\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmps88qu2qp.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return Nullable!(string)();\n    import std.digest.md;\n\
    \    return md5(text);\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3vay6qih.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return Nullable!(string)();\n    import std.digest.md;\n\
    \    return Nullable!(string)(to!string(MD5(text)));\n}\nunittest\n{\n    alias\
    \ candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\"\
    );\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6jwpscuk.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return null;\n    import std.digest.md;\n  \
    \  return md5(text);\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n\
    {\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4wrvgas4.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0) \n    {\n        return Nullable!(string)();\n    }\n\
    \    import std.digest.md;\n    import std.conv;\n    auto md5 = MD5(text);\n\
    \    return to!string(md5);\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpocsec2iy.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result;\n    if (text.length == 0)\n    {\n        return\
    \ result;\n    }\n    import std.digest.md;\n    import std.conv;\n    import\
    \ std.array;\n    import std.algorithm;\n    import std.range;\n    import std.format;\n\
    \    import std.string;\n    import std.typecons;\n    import std.math;\n    ubyte[]\
    \ md5_hash = MD5(text);\n    string md5_hash_str = to!string(md5_hash);\n    result\
    \ = md5_hash_str;\n    return result;\n}\n/*\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpvb9mn_7h.d(31): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpvb9mn_7h.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return null;\n    import std.digest.md;\n  \
    \  return to!string(md5(text));\n}\n/*\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp28n4tghs.d(17): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmp28n4tghs.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0) return null;\n    import std.digest.md;\n    return to!string(md5(text));\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmppxzad3at.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0) return Nullable!(string)();\n    import std.digest.md;\n\
    \    return Nullable!(string)(md.md5(text));\n}\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpr8id3l0c.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return null;\n    import std.digest.md;\n  \
    \  import std.conv;\n    return to!string(md5(text));\n}\nunittest\n{\n    alias\
    \ candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\"\
    );\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnd1kb6a3.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return null;\n    import std.digest.md;\n  \
    \  import std.conv;\n    return to!string(MD5(text));\n}\n/*\nunittest\n{\n  \
    \  alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello\
    \ world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpc51ybj_j.d(18): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpc51ybj_j.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return null;\n    return md5(text);\n}\nunittest\n\
    {\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_q0c2e2l.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return null;\n    import std.digest.md;\n  \
    \  return md.md5(text);\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg5n6ck3n.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return null;\n    else\n    {\n        auto\
    \ md5 = new MD5;\n        md5.put(text);\n        return md5.finish().toString();\n\
    \    }\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto\
    \ result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get\
    \ == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp121m3i33.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return null;\n    import std.digest.md;\n  \
    \  auto md5 = MD5(text);\n    return md5.toString();\n}\n/*\nunittest\n{\n   \
    \ alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello\
    \ world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpximchzg_.d(18): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpximchzg_.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result;\n    if (text.length == 0)\n    {\n        return\
    \ result;\n    }\n    else\n    {\n        import std.digest.md;\n        import\
    \ std.conv;\n        import std.string;\n        import std.array;\n        import\
    \ std.algorithm;\n        import std.range;\n        import std.typecons;\n  \
    \      import std.math;\n        import std.format;\n        import std.traits;\n\
    \        import std.meta;\n        import std.typecons;\n        import std.range;\n\
    \        import std.algorithm;\n        import std.array;\n        import std.string;\n\
    \        import std.conv;\n        import std.digest.md;\n        import std.format;\n\
    \        import std.math;\n        import std.meta;\n        import std.traits;\n\
    \        import std.typecons;\n        import std.range;\n        import std.algorithm;\n\
    \        import std.array;\n        import std.string;\n        import std.conv;\n\
    \        import std.digest.md;\n        import std.format;\n        import std.math;\n\
    \        import std.meta;\n        import std.traits;\n        import std.typecons;\n\
    \        import std.range;\n        import std.algorithm;\n        import std.array;\n\
    \        import std.string;\n        import std.conv;\n        import std.digest.md;\n\
    \        import std.format;\n        import std.math;\n        import std.meta;\n\
    \        import std.traits;\n        import std.typecons;\n        import std.range;\n\
    \        import std.algorithm;\n        import std.array;\n        import std.string;\n\
    \        import std.conv;\n        import std.digest.md;\n        import std.format;\n\
    \        import std.math;\n        import std.meta;\n        import std.traits;\n\
    \        import std.typecons;\n        import std.range;\n        import std.algorithm;\n\
    \        import std.array;\n        import std.string;\n        import std.conv;\n\
    \        import std.digest.md;\n        import std\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp2_bfy3oo.d(82): Error: \'';\'' expected\n/tmp/tmp2_bfy3oo.d(107):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\n/tmp/tmp2_bfy3oo.d(107):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2_bfy3oo.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result;\n    if (text.length == 0)\n    {\n        return\
    \ result;\n    }\n    import std.digest.md;\n    import std.conv;\n    import\
    \ std.string;\n    import std.algorithm;\n    import std.array;\n    import std.range;\n\
    \    import std.typecons;\n    import std.math;\n    import std.format;\n    import\
    \ std.traits;\n    import std.stdio;\n    import std.conv;\n    import std.exception;\n\
    \    import std.range;\n    import std.algorithm;\n    import std.array;\n   \
    \ import std.string;\n    import std.typecons;\n    import std.math;\n    import\
    \ std.digest.md;\n    import std.digest.sha;\n    import std.digest.crc;\n   \
    \ import std.digest.adler;\n    import std.digest.hmac;\n    import std.digest.md;\n\
    \    import std.digest.sha;\n    import std.digest.crc;\n    import std.digest.adler;\n\
    \    import std.digest.hmac;\n    import std.digest.md;\n    import std.digest.sha;\n\
    \    import std.digest.crc;\n    import std.digest.adler;\n    import std.digest.hmac;\n\
    \    import std.digest.md;\n    import std.digest.sha;\n    import std.digest.crc;\n\
    \    import std.digest.adler;\n    import std.digest.hmac;\n    import std.digest.md;\n\
    \    import std.digest.sha;\n    import std.digest.crc;\n    import std.digest.adler;\n\
    \    import std.digest.hmac;\n    import std.digest.md;\n    import std.digest.sha;\n\
    \    import std.digest.crc;\n    import std.digest.adler;\n    import std.digest.hmac;\n\
    \    import std.digest.md;\n    import std.digest.\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmphwfn24if.d(68): Error: identifier expected following package\n/tmp/tmphwfn24if.d(68):
    Error: \'';\'' expected\n/tmp/tmphwfn24if.d(93): Error: found \''EOF\'' when expecting
    \''}\'' following compound statement\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmphwfn24if.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result;\n    if (text.length > 0)\n    {\n        import\
    \ std.digest.md;\n        import std.conv;\n        import std.array;\n      \
    \  import std.algorithm;\n        import std.range;\n        import std.format;\n\
    \        import std.string;\n        import std.typecons;\n        import std.math;\n\
    \        import std.stdio;\n        import std.traits;\n        import std.typecons;\n\
    \        import std.math;\n        import std.stdio;\n        import std.traits;\n\
    \        import std.typecons;\n        import std.math;\n        import std.stdio;\n\
    \        import std.traits;\n        import std.typecons;\n        import std.math;\n\
    \        import std.stdio;\n        import std.traits;\n        import std.typecons;\n\
    \        import std.math;\n        import std.stdio;\n        import std.traits;\n\
    \        import std.typecons;\n        import std.math;\n        import std.stdio;\n\
    \        import std.traits;\n        import std.typecons;\n        import std.math;\n\
    \        import std.stdio;\n        import std.traits;\n        import std.typecons;\n\
    \        import std.math;\n        import std.stdio;\n        import std.traits;\n\
    \        import std.typecons;\n        import std.math;\n        import std.stdio;\n\
    \        import std.traits;\n        import std.typecons;\n        import std.math;\n\
    \        import std.stdio;\n        import std.traits;\n        import std.typecons;\n\
    \        import std.math;\n        import std.stdio;\n        import std.traits;\n\
    \        import std.typecons;\n        import std.math;\n        import std.stdio;\n\
    \        import std.traits;\n        import std.typecons;\n        import std.math;\n\
    \        import std.stdio;\n        import std.traits;\n        import std.typecons;\n\
    \        import std.math;\n        import std.stdio;\n        import std.traits;\n\
    unittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result =\
    \ candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpxru_dn45.d(78): Error: found \''unittest\'' instead of statement\n/tmp/tmpxru_dn45.d(103):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxru_dn45.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return Nullable!(string)();\n    import std.digest.md;\n\
    \    return Nullable!(string)(md.md5(text));\n}\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_pkafq2h.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result;\n    if (text.length == 0)\n    {\n        return\
    \ result;\n    }\n    import std.digest.md;\n    import std.conv;\n    auto md5\
    \ = MD5(text);\n    result = to!string(md5);\n    return result;\n}\n/*\nunittest\n\
    {\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpmt4b0_9z.d(23): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpmt4b0_9z.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return null;\n    import std.digest.md;\n  \
    \  return to!string(md5(text));\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmps88qu2qp.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result;\n    if(text.length == 0)\n    {\n        return\
    \ result;\n    }\n    else\n    {\n        result = md5(text);\n        return\
    \ result;\n    }\n}\n/*\nunittest\n{\n    alias candidate = string_to_md5;\n\n\
    {\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpvyyaveqx.d(23): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpvyyaveqx.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result;\n    if (text.length == 0)\n    {\n        return\
    \ result;\n    }\n    else\n    {\n        import std.digest.md;\n        import\
    \ std.conv;\n        import std.string;\n        import std.array;\n        import\
    \ std.algorithm;\n        import std.range;\n        import std.format;\n    \
    \    import std.typecons;\n        import std.math;\n        import std.stdio;\n\
    \        import std.traits;\n        import std.typecons;\n        import std.math;\n\
    \        import std.stdio;\n        import std.traits;\n        import std.typecons;\n\
    \        import std.math;\n        import std.stdio;\n        import std.traits;\n\
    \        import std.typecons;\n        import std.math;\n        import std.stdio;\n\
    \        import std.traits;\n        import std.typecons;\n        import std.math;\n\
    \        import std.stdio;\n        import std.traits;\n        import std.typecons;\n\
    \        import std.math;\n        import std.stdio;\n        import std.traits;\n\
    \        import std.typecons;\n        import std.math;\n        import std.stdio;\n\
    \        import std.traits;\n        import std.typecons;\n        import std.math;\n\
    \        import std.stdio;\n        import std.traits;\n        import std.typecons;\n\
    \        import std.math;\n        import std.stdio;\n        import std.traits;\n\
    \        import std.typecons;\n        import std.math;\n        import std.stdio;\n\
    \        import std.traits;\n        import std.typecons;\n        import std.math;\n\
    \        import std.stdio;\n        import std.traits;\n        import std.typecons;\n\
    \        import std.math;\n        import std.stdio;\n        import std.traits;\n\
    \        import std.typecons;\n        import std.math;\n        import std.stdio;\n\
    \        import std.traits;\n        import std.typecons;\n        import std.math;\n\
    \       \nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto\
    \ result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get\
    \ == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmphc625x31.d(81): Error: found \''unittest\'' instead of statement\n/tmp/tmphc625x31.d(106):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphc625x31.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return null;\n    import std.digest.md;\n  \
    \  return md5(text);\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n\
    {\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4wrvgas4.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return Nullable!(string)();\n    import std.digest.md;\n\
    \    return Nullable!(string)(md5(text));\n}\n/*\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmps95iymvj.d(17): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmps95iymvj.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result;\n    if (text.length == 0) \n    {\n        return\
    \ result;\n    }\n    else \n    {\n        import std.digest.md;\n        import\
    \ std.conv;\n        import std.string;\n        import std.algorithm;\n     \
    \   import std.array;\n        import std.range;\n        import std.typecons;\n\
    \        import std.math;\n        auto digest = MD5(text);\n        auto digest_array\
    \ = digest.array;\n        auto digest_string = digest_array.map!(a => format(\"\
    %02x\", a)).array.join(\"\");\n        result = digest_string;\n        return\
    \ result;\n    }\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n\
    \        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpr8lh1qce.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return null;\n    import std.digest.md;\n  \
    \  import std.conv;\n    return to!string(MD5(text));\n}\nunittest\n{\n    alias\
    \ candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\"\
    );\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpc3rnllli.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result = Nullable!(string).init;\n    if (text.length ==\
    \ 0)\n    {\n        return result;\n    }\n    import std.digest.md;\n    import\
    \ std.conv;\n    import std.string;\n    import std.array;\n    import std.algorithm;\n\
    \    import std.range;\n    import std.format;\n    import std.math;\n    import\
    \ std.typecons;\n    import std.traits;\n    import std.meta;\n    import std.conv;\n\
    \    import std.range;\n    import std.algorithm;\n    import std.array;\n   \
    \ import std.typecons;\n    import std.math;\n    import std.traits;\n    import\
    \ std.meta;\n    import std.conv;\n    import std.range;\n    import std.algorithm;\n\
    \    import std.array;\n    import std.typecons;\n    import std.math;\n    import\
    \ std.traits;\n    import std.meta;\n    import std.conv;\n    import std.range;\n\
    \    import std.algorithm;\n    import std.array;\n    import std.typecons;\n\
    \    import std.math;\n    import std.traits;\n    import std.meta;\n    import\
    \ std.conv;\n    import std.range;\n    import std.algorithm;\n    import std.array;\n\
    \    import std.typecons;\n    import std.math;\n    import std.traits;\n    import\
    \ std.meta;\n    import std.conv;\n    import std.range;\n    import std.algorithm;\n\
    \    import std.array;\n    import std.typecons;\n    import std.math;\n    import\
    \ std.traits;\n    import std.meta;\n    import std.conv;\n    import std.range;\n\
    \    import std.algorithm;\n    import std.array;\n    import std.typecons;\n\
    \    import std.math;\n    import std.traits;\n    import std.meta;\n    import\
    \ std.conv;\n    import std.range;\n    import std.algorithm;\n    import std.array;\n\
    \    import std.\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n   \
    \     auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpz9ambp3p.d(81): Error: identifier expected following package\n/tmp/tmpz9ambp3p.d(81):
    Error: \'';\'' expected\n/tmp/tmpz9ambp3p.d(106): Error: found \''EOF\'' when
    expecting \''}\'' following compound statement\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpz9ambp3p.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return null;\n    auto hash = new MD5;\n   \
    \ hash.put(text.ptr, text.length);\n    return hash.finish().toString();\n}\n\
    /*\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpkowhe0zz.d(18): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpkowhe0zz.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  import std.digest.md;\n    Nullable!(string) result = Nullable!(string).init;\n\
    \    if (text.length == 0)\n    {\n        return result;\n    }\n    else\n \
    \   {\n        result.set(to!string(md.md5(text)));\n        return result;\n\
    \    }\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto\
    \ result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get\
    \ == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpaaou6h_p.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return Nullable!(string)();\n    import std.digest.md;\n\
    \    return Nullable!(string)(md.md5(text));\n}\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_pkafq2h.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return null;\n    import std.digest.md;\n  \
    \  return md.md5(text);\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg5n6ck3n.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return null;\n    return to!(string)(md5(text));\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7xcs03wk.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return null;\n    return md5(text);\n}\nunittest\n\
    {\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_q0c2e2l.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return null;\n    auto hash = new MD5;\n   \
    \ hash.put(text);\n    return hash.finish().toString();\n}\nunittest\n{\n    alias\
    \ candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\"\
    );\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpp03iiqvs.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result;\n    if (text.length == 0)\n    {\n        return\
    \ result;\n    }\n    import std.digest.md;\n    import std.digest.md5;\n    import\
    \ std.conv;\n    import std.string;\n    import std.array;\n    import std.algorithm;\n\
    \    import std.range;\n    import std.typecons;\n    import std.math;\n    auto\
    \ md5_hash = MD5(text);\n    auto md5_hash_str = md5_hash.to!string;\n    result\
    \ = md5_hash_str;\n    return result;\n}\n/*\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpib49txau.d(31): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpib49txau.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return Nullable!(string)();\n    import std.digest.md;\n\
    \    return Nullable!(string)(md5(text));\n}\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpowwg0jgo.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result;\n    if (text.length == 0)\n    {\n        return\
    \ result;\n    }\n    import std.digest.md;\n    auto md5 = MD5(text);\n    result\
    \ = md5.toString;\n    return result;\n}\n/*\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp6c3cdpv7.d(22): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmp6c3cdpv7.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result;\n    if (text.length == 0)\n    {\n        return\
    \ result;\n    }\n    import std.digest.md;\n    import std.conv;\n    import\
    \ std.string;\n    import std.array;\n    import std.algorithm;\n    import std.range;\n\
    \    import std.typecons;\n    import std.math;\n    auto hash = text.md5;\n \
    \   result = to!string(hash);\n    return result;\n}\n/*\nunittest\n{\n    alias\
    \ candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\"\
    );\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmphzkytt14.d(29): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmphzkytt14.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) md5_hash = Nullable!(string).init;\n    if (text.length ==\
    \ 0)\n    {\n        return md5_hash;\n    }\n    else\n    {\n        md5_hash.assign(md5(text));\n\
    \        return md5_hash;\n    }\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpn1uekmvu.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return null;\n    import std.digest.md;\n  \
    \  return to!string(md5(text));\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmps88qu2qp.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return Nullable!(string)();\n    import std.digest.md;\n\
    \    import std.conv;\n    auto md5 = MD5(text);\n    return to!string(md5);\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6wsvdp2b.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return null;\n    else\n    {\n        import\
    \ std.digest.md;\n        return md.md5(text);\n    }\n}\nunittest\n{\n    alias\
    \ candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\"\
    );\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpboots7gs.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0) \n    {\n        return Nullable!(string)();\n    }\n\
    \    import std.digest.md;\n    import std.conv;\n    import std.string;\n   \
    \ auto md5 = MD5(text);\n    return Nullable!(string)(to!string(md5));\n}\nunittest\n\
    {\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp12_40rnj.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return null;\n    return md5(text);\n}\nunittest\n\
    {\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_q0c2e2l.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return null;\n    import std.digest.md;\n  \
    \  return md5(text);\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n\
    {\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4wrvgas4.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  import std.digest.md;\n    import std.conv;\n    import std.algorithm;\n  \
    \  import std.array;\n    import std.range;\n    import std.format;\n    import\
    \ std.string;\n    import std.math;\n    import std.typecons;\n    import std.traits;\n\
    \    import std.meta;\n    import std.range;\n    import std.algorithm;\n    import\
    \ std.array;\n    import std.typecons;\n    import std.math;\n    import std.range;\n\
    \    import std.algorithm;\n    import std.array;\n    import std.typecons;\n\
    \    import std.math;\n    import std.range;\n    import std.algorithm;\n    import\
    \ std.array;\n    import std.typecons;\n    import std.math;\n    import std.range;\n\
    \    import std.algorithm;\n    import std.array;\n    import std.typecons;\n\
    \    import std.math;\n    import std.range;\n    import std.algorithm;\n    import\
    \ std.array;\n    import std.typecons;\n    import std.math;\n    import std.range;\n\
    \    import std.algorithm;\n    import std.array;\n    import std.typecons;\n\
    \    import std.math;\n    import std.range;\n    import std.algorithm;\n    import\
    \ std.array;\n    import std.typecons;\n    import std.math;\n    import std.range;\n\
    \    import std.algorithm;\n    import std.array;\n    import std.typecons;\n\
    \    import std.math;\n    import std.range;\n    import std.algorithm;\n    import\
    \ std.array;\n    import std.typecons;\n    import std.math;\n    import std.range;\n\
    \    import std.algorithm;\n    import std.array;\n    import std.typecons;\n\
    \    import std.math;\n    import std.range;\n    import std.algorithm;\n    import\
    \ std.array;\n    import std.typecons;\n    import std.math;\n    import std.range;\n\
    \    import std.algorithm;\n    import std.\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpw7d9v0j7.d(81): Error: identifier expected following package\n/tmp/tmpw7d9v0j7.d(81):
    Error: \'';\'' expected\n/tmp/tmpw7d9v0j7.d(106): Error: found \''EOF\'' when
    expecting \''}\'' following compound statement\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpw7d9v0j7.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result;\n    if (text.length == 0)\n    {\n        return\
    \ result;\n    }\n    else\n    {\n        import std.digest.md;\n        import\
    \ std.conv;\n        import std.array;\n        import std.algorithm;\n      \
    \  import std.range;\n        import std.string;\n        import std.format;\n\
    \        import std.traits;\n        import std.typecons;\n        import std.math;\n\
    \        import std.stdio;\n        import std.exception;\n        import std.range;\n\
    \        import std.algorithm;\n        import std.array;\n        import std.conv;\n\
    \        import std.digest.md;\n        import std.exception;\n        import\
    \ std.format;\n        import std.math;\n        import std.stdio;\n        import\
    \ std.string;\n        import std.traits;\n        import std.typecons;\n    \
    \    import std.uni;\n        import std.utf;\n        import std.algorithm;\n\
    \        import std.array;\n        import std.conv;\n        import std.digest.md;\n\
    \        import std.exception;\n        import std.format;\n        import std.math;\n\
    \        import std.stdio;\n        import std.string;\n        import std.traits;\n\
    \        import std.typecons;\n        import std.uni;\n        import std.utf;\n\
    \        import std.algorithm;\n        import std.array;\n        import std.conv;\n\
    \        import std.digest.md;\n        import std.exception;\n        import\
    \ std.format;\n        import std.math;\n        import std.stdio;\n        import\
    \ std.string;\n        import std.traits;\n        import std.typecons;\n    \
    \    import std.uni;\n        import std.utf;\n        import std.algorithm;\n\
    \        import std.array;\n        import std.conv;\n        import std.digest.md;\n\
    \        import std.exception;\n        import std.format;\n        import std.math;\n\
    \        import std.stdio;\n        import std.string;\n        import std.traits;\n\
    unittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result =\
    \ candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpht95wdsd.d(81): Error: found \''unittest\'' instead of statement\n/tmp/tmpht95wdsd.d(106):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpht95wdsd.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return null;\n    import std.digest.md;\n  \
    \  return md.md5(text);\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg5n6ck3n.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return Nullable!(string)();\n    import std.digest.md;\n\
    \    return Nullable!(string)(md5(text));\n}\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpowwg0jgo.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return Nullable!(string)();\n    import std.digest.md;\n\
    \    return Nullable!(string)(md5(text));\n}\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpowwg0jgo.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result = Nullable!(string).init;\n    if (text.length ==\
    \ 0)\n    {\n        return result;\n    }\n    import std.digest.md;\n    import\
    \ std.conv;\n    import std.algorithm;\n    import std.array;\n    import std.range;\n\
    \    import std.string;\n    import std.format;\n    import std.stdio;\n    import\
    \ std.math;\n    import std.typecons;\n    import std.traits;\n    import std.range;\n\
    \    import std.algorithm;\n    import std.array;\n    import std.range;\n   \
    \ import std.string;\n    import std.format;\n    import std.stdio;\n    import\
    \ std.math;\n    import std.typecons;\n    import std.traits;\n    import std.range;\n\
    \    import std.algorithm;\n    import std.array;\n    import std.range;\n   \
    \ import std.string;\n    import std.format;\n    import std.stdio;\n    import\
    \ std.math;\n    import std.typecons;\n    import std.traits;\n    import std.range;\n\
    \    import std.algorithm;\n    import std.array;\n    import std.range;\n   \
    \ import std.string;\n    import std.format;\n    import std.stdio;\n    import\
    \ std.math;\n    import std.typecons;\n    import std.traits;\n    import std.range;\n\
    \    import std.algorithm;\n    import std.array;\n    import std.range;\n   \
    \ import std.string;\n    import std.format;\n    import std.stdio;\n    import\
    \ std.math;\n    import std.typecons;\n    import std.traits;\n    import std.range;\n\
    \    import std.algorithm;\n    import std.array;\n    import std.range;\n   \
    \ import std.string;\n    import std.format;\n    import std.stdio;\n    import\
    \ std.math;\n    import std.typecons;\n    import std.traits;\n    import std.range;\n\
    \    import std.algorithm;\n   \nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmphg9_z9qo.d(81): Error: found \''unittest\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphg9_z9qo.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return null;\n    return md5(text);\n}\nunittest\n\
    {\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_q0c2e2l.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return Nullable!(string)();\n    import std.digest.md;\n\
    \    return Nullable!(string)(md.md5(text));\n}\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_pkafq2h.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return null;\n    import std.digest.md;\n  \
    \  return to!string(md(text));\n}\n/*\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpq6h3qeap.d(17): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpq6h3qeap.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return Nullable!(string)();\n    import std.digest.md;\n\
    \    return Nullable!(string)(MD5(text));\n}\n/*\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpv69mkfvm.d(17): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpv69mkfvm.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result = Nullable!(string).init;\n    if (text.length ==\
    \ 0) \n    {\n        return result;\n    }\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpygpiu_q3.d(17): Error: found \''unittest\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpygpiu_q3.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return Nullable!(string)();\n    import std.digest.md;\n\
    \    import std.conv;\n    auto md5 = MD5(text);\n    return to!string(md5);\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6wsvdp2b.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return Nullable!(string)();\n    import std.digest.md;\n\
    \    return Nullable!(string)(md.md5(text));\n}\n/*\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp0gsn1n1l.d(17): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmp0gsn1n1l.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return Nullable!(string)();\n    import std.digest.md;\n\
    \    return Nullable!(string)(md.md5(text));\n}\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_pkafq2h.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result;\n    if (text.length == 0)\n    {\n        return\
    \ result;\n    }\n    auto md5 = new MD5;\n    md5.put(text);\n    result = md5.get();\n\
    \    return result;\n}\n/*\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmphogpb6g7.d(22): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmphogpb6g7.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return Nullable!(string)();\n    import std.digest.md;\n\
    \    return Nullable!(string)(md5(text));\n}\n/*\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmps95iymvj.d(17): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmps95iymvj.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result;\n    if (text.length > 0)\n    {\n        import\
    \ std.digest.md;\n        import std.conv;\n        import std.array;\n      \
    \  import std.algorithm;\n        import std.range;\n        import std.format;\n\
    \        import std.string;\n        import std.math;\n        import std.typecons;\n\
    \        import std.traits;\n        import std.meta;\n        import std.range;\n\
    \        import std.algorithm;\n        import std.array;\n        import std.conv;\n\
    \        import std.string;\n        import std.typecons;\n        import std.math;\n\
    \        import std.traits;\n        import std.meta;\n        import std.range;\n\
    \        import std.algorithm;\n        import std.array;\n        import std.conv;\n\
    \        import std.string;\n        import std.typecons;\n        import std.math;\n\
    \        import std.traits;\n        import std.meta;\n        import std.range;\n\
    \        import std.algorithm;\n        import std.array;\n        import std.conv;\n\
    \        import std.string;\n        import std.typecons;\n        import std.math;\n\
    \        import std.traits;\n        import std.meta;\n        import std.range;\n\
    \        import std.algorithm;\n        import std.array;\n        import std.conv;\n\
    \        import std.string;\n        import std.typecons;\n        import std.math;\n\
    \        import std.traits;\n        import std.meta;\n        import std.range;\n\
    \        import std.algorithm;\n        import std.array;\n        import std.conv;\n\
    \        import std.string;\n        import std.typecons;\n        import std.math;\n\
    \        import std.traits;\n        import std.meta;\n        import std.range;\n\
    \        import std.algorithm;\n        import std.array;\n        import std.conv;\n\
    \        import std.string;\n        import std.typecons;\n        import std.math;\n\
    \        import std.traits;\n        import std.meta;\n        import std.range;\n\
    \nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmppl2nqj6h.d(82): Error: found \''unittest\'' instead of statement\n/tmp/tmppl2nqj6h.d(107):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmppl2nqj6h.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return Nullable!(string)();\n    import std.digest.md;\n\
    \    return Nullable!(string)(to!string(MD5(text)));\n}\nunittest\n{\n    alias\
    \ candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\"\
    );\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6jwpscuk.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result = Nullable!(string).init;\n    if (text.length ==\
    \ 0)\n    {\n        return result;\n    }\n    else\n    {\n        import std.digest.md;\n\
    \        import std.conv;\n        import std.array;\n        import std.algorithm;\n\
    \        import std.range;\n        import std.string;\n        import std.format;\n\
    \        auto md5 = MD5(text);\n        auto md5_array = md5.array;\n        auto\
    \ md5_string = md5_array.map!(a => format(\"%02x\", a)).join(\"\");\n        result.assign(md5_string);\n\
    \        return result;\n    }\n}\n/*\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp34lp76sv.d(33): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmp34lp76sv.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result;\n    if (text.length == 0) \n    {\n        return\
    \ result;\n    }\n    auto hash = new MD5;\n    hash.put(text);\n    result =\
    \ hash.finish().toString();\n    return result;\n}\n/*\nunittest\n{\n    alias\
    \ candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\"\
    );\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpod95st0t.d(22): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpod95st0t.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0) \n    {\n        return Nullable!(string)();\n    }\n\
    \    auto hash = new MD5;\n    hash.put(text);\n    return Nullable!(string)(hash.finish().toHexString());\n\
    }\n/*\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpykbe6szr.d(20): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpykbe6szr.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return Nullable!(string)();\n    import std.digest.md;\n\
    \    return Nullable!(string)(md5(text));\n}\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpowwg0jgo.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result;\n    if (text.length == 0) \n    {\n        return\
    \ result;\n    }\n    import std.digest.md;\n    result = md.md5(text);\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n       \
    \ auto result = candidate(\"Hello world\");\n        assert(!result.isNull &&\
    \ result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result\
    \ = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result\
    \ = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp967njqgj.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return null;\n    return md5(text);\n}\nunittest\n\
    {\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_q0c2e2l.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return null;\n    auto hash = new MD5;\n   \
    \ hash.put(text);\n    return hash.finish().toString();\n}\nunittest\n{\n    alias\
    \ candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\"\
    );\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpp03iiqvs.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return null;\n    import std.digest.md;\n  \
    \  return to!string(MD5(text));\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnvry0lmt.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return Nullable!(string)();\n    import std.digest.md;\n\
    \    return Nullable!(string)(md.md5(text));\n}\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_pkafq2h.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result = Nullable!(string).init;\n    if (text.length ==\
    \ 0)\n    {\n        return result;\n    }\n    import std.digest.md;\n    import\
    \ std.conv;\n    import std.array;\n    import std.algorithm;\n    import std.range;\n\
    \    import std.string;\n    import std.format;\n    import std.math;\n    import\
    \ std.typecons;\n    import std.traits;\n    import std.meta;\n    import std.stdio;\n\
    \    import std.exception;\n    import std.range;\n    import std.algorithm;\n\
    \    import std.array;\n    import std.conv;\n    import std.digest.md;\n    import\
    \ std.format;\n    import std.math;\n    import std.meta;\n    import std.stdio;\n\
    \    import std.string;\n    import std.traits;\n    import std.typecons;\n  \
    \  import std.math;\n    import std.typecons;\n    import std.math;\n    import\
    \ std.typecons;\n    import std.math;\n    import std.typecons;\n    import std.math;\n\
    \    import std.typecons;\n    import std.math;\n    import std.typecons;\n  \
    \  import std.math;\n    import std.typecons;\n    import std.math;\n    import\
    \ std.typecons;\n    import std.math;\n    import std.typecons;\n    import std.math;\n\
    \    import std.typecons;\n    import std.math;\n    import std.typecons;\n  \
    \  import std.math;\n    import std.typecons;\n    import std.math;\n    import\
    \ std.typecons;\n    import std.math;\n    import std.typecons;\n    import std.math;\n\
    \    import std.typecons;\n    import std.math;\n    import std.typecons;\n  \
    \  import std.math;\n    import std.typecons;\n    import std.math;\n    import\
    \ std.typecons;\n    import std.math;\n    import std.typecons;\n    import std.math;\n\
    \    import std\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n    \
    \    auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmplkdn196v.d(80): Error: \'';\'' expected\n/tmp/tmplkdn196v.d(105):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplkdn196v.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0) \n    {\n        return Nullable!(string)();\n    }\n\
    \    import std.digest.md;\n    import std.conv;\n    auto md5 = MD5(text);\n\
    \    return to!string(md5);\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpocsec2iy.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return Nullable!(string)();\n    import std.digest.md;\n\
    \    return Nullable!(string)(md.md5(text));\n}\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_pkafq2h.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return null;\n    import std.digest.md;\n  \
    \  return md5(text);\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n\
    {\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4wrvgas4.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return null;\n    import std.digest.md;\n  \
    \  return to!string(md5(text));\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmps88qu2qp.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return null;\n    import std.digest.md;\n  \
    \  return md.md5(text);\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg5n6ck3n.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return Nullable!(string)();\n    import std.digest.md;\n\
    \    return Nullable!(string)(md.md5(text));\n}\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_pkafq2h.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return Nullable!(string)();\n    auto hash =\
    \ new MD5;\n    hash.put(text);\n    return Nullable!(string)(hash.finish().toString());\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmps64cmo3y.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result;\n    if (text.length == 0) \n    {\n        return\
    \ result;\n    }\n    else \n    {\n        import std.digest.md;\n        import\
    \ std.conv;\n        import std.array;\n        import std.algorithm;\n      \
    \  import std.range;\n        import std.format;\n        import std.string;\n\
    \        import std.typecons;\n        import std.math;\n        import std.traits;\n\
    \        import std.stdio;\n        import std.range;\n        import std.algorithm;\n\
    \        import std.array;\n        import std.conv;\n        import std.string;\n\
    \        import std.typecons;\n        import std.math;\n        import std.traits;\n\
    \        import std.stdio;\n        import std.range;\n        import std.algorithm;\n\
    \        import std.array;\n        import std.conv;\n        import std.string;\n\
    \        import std.typecons;\n        import std.math;\n        import std.traits;\n\
    \        import std.stdio;\n        import std.range;\n        import std.algorithm;\n\
    \        import std.array;\n        import std.conv;\n        import std.string;\n\
    \        import std.typecons;\n        import std.math;\n        import std.traits;\n\
    \        import std.stdio;\n        import std.range;\n        import std.algorithm;\n\
    \        import std.array;\n        import std.conv;\n        import std.string;\n\
    \        import std.typecons;\n        import std.math;\n        import std.traits;\n\
    \        import std.stdio;\n        import std.range;\n        import std.algorithm;\n\
    \        import std.array;\n        import std.conv;\n        import std.string;\n\
    \        import std.typecons;\n        import std.math;\n        import std.traits;\n\
    \        import std.stdio;\n        import std.range;\n        import std.algorithm;\n\
    \        import std.array;\n        import std.conv;\n        import std.string;\n\
    \        import std.typecons;\n        import std.math;\n\nunittest\n{\n    alias\
    \ candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\"\
    );\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp21uzg5y_.d(83): Error: found \''unittest\'' instead of statement\n/tmp/tmp21uzg5y_.d(108):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp21uzg5y_.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result = Nullable!(string).init;\n    if (text.length ==\
    \ 0) \n    {\n        return result;\n    }\n    import std.digest.md;\n    import\
    \ std.conv;\n    import std.string;\n    auto hash = MD5(text);\n    string hash_str\
    \ = \"\";\n    foreach (i, byte; hash) \n    {\n        hash_str ~= format(\"\
    %02x\", byte);\n    }\n    result.assign(hash_str);\n    return result;\n}\nunittest\n\
    {\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp7ga28hk5.d(22): Error: no identifier for declarator byte\n/tmp/tmp7ga28hk5.d(24):
    Error: found \'')\'' when expecting \''.\'' following byte\n/tmp/tmp7ga28hk5.d(24):
    Error: found \'';\'' when expecting identifier following \''byte.\''\n/tmp/tmp7ga28hk5.d(25):
    Error: found \''}\'' when expecting \'',\''\n/tmp/tmp7ga28hk5.d(26): Error: found
    \'';\'' when expecting \'',\''\n/tmp/tmp7ga28hk5.d(27): Error: expression expected,
    not \''return\''\n/tmp/tmp7ga28hk5.d(27): Error: found \''result\'' when expecting
    \'',\''\n/tmp/tmp7ga28hk5.d(27): Error: expression expected, not \'';\''\n/tmp/tmp7ga28hk5.d(28):
    Error: found \''}\'' when expecting \'',\''\n/tmp/tmp7ga28hk5.d(29): Error: expression
    expected, not \''unittest\''\n/tmp/tmp7ga28hk5.d(30): Error: found \''{\'' when
    expecting \'',\''\n/tmp/tmp7ga28hk5.d(31): Error: expression expected, not \''alias\''\n/tmp/tmp7ga28hk5.d(31):
    Error: found \''candidate\'' when expecting \'',\''\n/tmp/tmp7ga28hk5.d(31): Error:
    expression expected, not \''=\''\n/tmp/tmp7ga28hk5.d(31): Error: found \''string_to_md5\''
    when expecting \'',\''\n/tmp/tmp7ga28hk5.d(31): Error: expression expected, not
    \'';\''\n/tmp/tmp7ga28hk5.d(33): Error: found \''{\'' when expecting \'',\''\n/tmp/tmp7ga28hk5.d(34):
    Error: expression expected, not \''auto\''\n/tmp/tmp7ga28hk5.d(34): Error: found
    \''result\'' when expecting \'',\''\n/tmp/tmp7ga28hk5.d(34): Error: expression
    expected, not \''=\''\n/tmp/tmp7ga28hk5.d(34): Error: found \''candidate\'' when
    expecting \'',\''\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7ga28hk5.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return null;\n    else\n    {\n        import\
    \ std.digest.md;\n        return to!string(md(text));\n    }\n}\nunittest\n{\n\
    \    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpf7vgf3i8.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result = Nullable!(string).init;\n    if (text.length ==\
    \ 0)\n    {\n        return result;\n    }\n    import std.digest.md;\n    import\
    \ std.conv;\n    auto md5 = MD5(text);\n    result.assign(md5.toHexString);\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n\
    {\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpncrqtv_t.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return Nullable!(string)();\n    import std.digest.md;\n\
    \    return md.md5(text);\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpi59m4woe.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return null;\n    import std.digest.md;\n  \
    \  return to!string(md5(text));\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmps88qu2qp.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result;\n    if (text.length == 0)\n    {\n        return\
    \ result;\n    }\n    import std.digest.md;\n    import std.conv;\n    import\
    \ std.array;\n    import std.algorithm;\n    import std.range;\n    import std.string;\n\
    \    import std.datetime;\n    import std.typecons;\n    import std.math;\n  \
    \  import std.format;\n    import std.stdio;\n    import std.conv;\n    import\
    \ std.array;\n    import std.algorithm;\n    import std.range;\n    import std.string;\n\
    \    import std.datetime;\n    import std.typecons;\n    import std.math;\n  \
    \  import std.format;\n    import std.stdio;\n    import std.conv;\n    import\
    \ std.array;\n    import std.algorithm;\n    import std.range;\n    import std.string;\n\
    \    import std.datetime;\n    import std.typecons;\n    import std.math;\n  \
    \  import std.format;\n    import std.stdio;\n    import std.conv;\n    import\
    \ std.array;\n    import std.algorithm;\n    import std.range;\n    import std.string;\n\
    \    import std.datetime;\n    import std.typecons;\n    import std.math;\n  \
    \  import std.format;\n    import std.stdio;\n    import std.conv;\n    import\
    \ std.array;\n    import std.algorithm;\n    import std.range;\n    import std.string;\n\
    \    import std.datetime;\n    import std.typecons;\n    import std.math;\n  \
    \  import std.format;\n    import std.stdio;\n    import std.conv;\n    import\
    \ std.array;\n    import std.algorithm;\n    import std.range;\n    import std.string;\n\
    \    import std.datetime;\n    import std.typecons;\n    import std.math;\n  \
    \  import std.format;\n    import std.stdio;\n    import std.conv;\n    import\
    \ std.array;\n    import std.algorithm;\n    import\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpnj7augdv.d(82): Error: Identifier expected following import\n/tmp/tmpnj7augdv.d(82):
    Error: \'';\'' expected\n/tmp/tmpnj7augdv.d(107): Error: found \''EOF\'' when
    expecting \''}\'' following compound statement\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpnj7augdv.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return Nullable!(string)();\n    import std.digest.md;\n\
    \    import std.conv;\n    return to!(string)(MD5(text));\n}\nunittest\n{\n  \
    \  alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello\
    \ world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqxsfw_5k.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result = null;\n    if (text.length > 0)\n    {\n       \
    \ import std.digest.md;\n        import std.conv;\n        import std.array;\n\
    \        import std.algorithm;\n        import std.range;\n        import std.format;\n\
    \        import std.string;\n        import std.typecons;\n        import std.math;\n\
    \        import std.traits;\n        import std.stdio;\n        import std.conv;\n\
    \        import std.range;\n        import std.algorithm;\n        import std.array;\n\
    \        import std.string;\n        import std.typecons;\n        import std.math;\n\
    \        import std.traits;\n        import std.stdio;\n        import std.conv;\n\
    \        import std.range;\n        import std.algorithm;\n        import std.array;\n\
    \        import std.string;\n        import std.typecons;\n        import std.math;\n\
    \        import std.traits;\n        import std.stdio;\n        import std.conv;\n\
    \        import std.range;\n        import std.algorithm;\n        import std.array;\n\
    \        import std.string;\n        import std.typecons;\n        import std.math;\n\
    \        import std.traits;\n        import std.stdio;\n        import std.conv;\n\
    \        import std.range;\n        import std.algorithm;\n        import std.array;\n\
    \        import std.string;\n        import std.typecons;\n        import std.math;\n\
    \        import std.traits;\n        import std.stdio;\n        import std.conv;\n\
    \        import std.range;\n        import std.algorithm;\n        import std.array;\n\
    \        import std.string;\n        import std.typecons;\n        import std.math;\n\
    \        import std.traits;\n        import std.stdio;\n        import std.conv;\n\
    \        import std.range;\n        import std.algorithm;\n        import std.array;\n\
    \        import std.string;\n        import std.typecons;\n        import std.math;\n\
    \        import std.traits;\n        import std.stdio\nunittest\n{\n    alias\
    \ candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\"\
    );\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmptl2uch7b.d(80): Error: \'';\'' expected\n/tmp/tmptl2uch7b.d(105):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\n/tmp/tmptl2uch7b.d(105):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptl2uch7b.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result;\n    if (text.length == 0)\n    {\n        return\
    \ result;\n    }\n    else\n    {\n        import std.digest.md;\n        result\
    \ = to!string(md5(text));\n        return result;\n    }\n}\nunittest\n{\n   \
    \ alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello\
    \ world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpa5u7b06c.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return Nullable!(string)();\n    import std.digest.md;\n\
    \    return Nullable!(string)(md.md5(text));\n}\n/*\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp0gsn1n1l.d(17): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmp0gsn1n1l.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return null;\n    import std.digest.md;\n  \
    \  return to!string(md5(text));\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmps88qu2qp.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return Nullable!(string)();\n    return md5(text);\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp544spre8.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return null;\n    import std.digest.md;\n  \
    \  auto md5 = MD5(text);\n    return md5.toString;\n}\nunittest\n{\n    alias\
    \ candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\"\
    );\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwvple4b2.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result;\n    if (text.length == 0)\n    {\n        return\
    \ result;\n    }\n    result = new Nullable!(string)(md5(text));\n    return result;\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_lpvyd_j.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return Nullable!(string)();\n    import std.digest.md;\n\
    \    return Nullable!(string)(md5(text));\n}\n/*\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmps95iymvj.d(17): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmps95iymvj.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return Nullable!(string)();\n    import std.digest.md;\n\
    \    return Nullable!(string)(md.md5(text));\n}\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_pkafq2h.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result;\n    if (text.length == 0)\n    {\n        return\
    \ result;\n    }\n    else\n    {\n        import std.digest.md;\n        result\
    \ = md5(text);\n        return result;\n    }\n}\n/*\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpavgebu_d.d(24): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpavgebu_d.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return null;\n    import std.digest.md;\n  \
    \  auto hash = MD5(text);\n    return hash.toHexString();\n}\nunittest\n{\n  \
    \  alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello\
    \ world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvfpnyx0q.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result;\n    if (text.length == 0)\n    {\n        return\
    \ null;\n    }\n    import std.digest.md;\n    import std.conv;\n    import std.array;\n\
    \    import std.algorithm;\n    import std.range;\n    import std.string;\n  \
    \  import std.format;\n    import std.typecons;\n    import std.math;\n    import\
    \ std.datetime;\n    import std.stdio;\n    import std.traits;\n    import std.uni;\n\
    \    import std.typecons;\n    import std.math;\n    import std.datetime;\n  \
    \  import std.stdio;\n    import std.traits;\n    import std.uni;\n    import\
    \ std.typecons;\n    import std.math;\n    import std.datetime;\n    import std.stdio;\n\
    \    import std.traits;\n    import std.uni;\n    import std.typecons;\n    import\
    \ std.math;\n    import std.datetime;\n    import std.stdio;\n    import std.traits;\n\
    \    import std.uni;\n    import std.typecons;\n    import std.math;\n    import\
    \ std.datetime;\n    import std.stdio;\n    import std.traits;\n    import std.uni;\n\
    \    import std.typecons;\n    import std.math;\n    import std.datetime;\n  \
    \  import std.stdio;\n    import std.traits;\n    import std.uni;\n    import\
    \ std.typecons;\n    import std.math;\n    import std.datetime;\n    import std.stdio;\n\
    \    import std.traits;\n    import std.uni;\n    import std.typecons;\n    import\
    \ std.math;\n    import std.datetime;\n    import std.stdio;\n    import std.traits;\n\
    \    import std.uni;\n    import std.typecons;\n    import std.math;\n    import\
    \ std.datetime;\n    import std.stdio;\n    import std.traits;\n    import std.uni;\n\
    \    import std.typecons;\n    import std\nunittest\n{\n    alias candidate =\
    \ string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n   \
    \     assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpyl4e9jf3.d(80): Error: \'';\'' expected\n/tmp/tmpyl4e9jf3.d(105):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyl4e9jf3.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result = Nullable!(string).init;\n    if (text.length ==\
    \ 0)\n    {\n        return result;\n    }\n    else\n    {\n        import std.digest.md;\n\
    \        import std.conv;\n        import std.array;\n        import std.algorithm;\n\
    \        import std.range;\n        import std.string;\n        import std.format;\n\
    \        import std.math;\n        import std.typecons;\n        import std.traits;\n\
    \        import std.range;\n        import std.algorithm;\n        import std.array;\n\
    \        import std.conv;\n        import std.digest.md;\n        import std.format;\n\
    \        import std.math;\n        import std.string;\n        import std.traits;\n\
    \        import std.typecons;\n        import std.uni;\n        import std.utf;\n\
    \        import std.algorithm;\n        import std.array;\n        import std.conv;\n\
    \        import std.digest.md;\n        import std.format;\n        import std.math;\n\
    \        import std.string;\n        import std.traits;\n        import std.typecons;\n\
    \        import std.uni;\n        import std.utf;\n        import std.algorithm;\n\
    \        import std.array;\n        import std.conv;\n        import std.digest.md;\n\
    \        import std.format;\n        import std.math;\n        import std.string;\n\
    \        import std.traits;\n        import std.typecons;\n        import std.uni;\n\
    \        import std.utf;\n        import std.algorithm;\n        import std.array;\n\
    \        import std.conv;\n        import std.digest.md;\n        import std.format;\n\
    \        import std.math;\n        import std.string;\n        import std.traits;\n\
    \        import std.typecons;\n        import std.uni;\n        import std.utf;\n\
    \        import std.algorithm;\n        import std.array;\n        import std.conv;\n\
    \        import std.digest.md;\n        import std.format;\n        import std.math;\n\
    \        import std\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n\
    \        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp8wm4tvk7.d(81): Error: \'';\'' expected\n/tmp/tmp8wm4tvk7.d(106):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\n/tmp/tmp8wm4tvk7.d(106):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8wm4tvk7.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return null;\n    import std.digest.md;\n  \
    \  return to!string(MD5(text));\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnvry0lmt.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return null;\n    else\n    {\n        auto\
    \ md5 = new MD5;\n        md5.put(text);\n        return md5.finish().toString();\n\
    \    }\n}\n/*\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n      \
    \  auto result = candidate(\"Hello world\");\n        assert(!result.isNull &&\
    \ result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result\
    \ = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result\
    \ = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpvh04ssio.d(21): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpvh04ssio.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return null;\n    import std.digest.md;\n  \
    \  return md5(text);\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n\
    {\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4wrvgas4.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return null;\n    import std.digest.md;\n  \
    \  return md5(text);\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n\
    {\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4wrvgas4.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return Nullable!(string)();\n    import std.digest.md;\n\
    \    return Nullable!(string)(md.md5(text));\n}\n/*\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp0gsn1n1l.d(17): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmp0gsn1n1l.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return null;\n    return md5(text);\n}\nunittest\n\
    {\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_q0c2e2l.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return null;\n    import std.digest.md;\n  \
    \  return text.md5;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n\
    {\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1y6y8abv.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result = Nullable!(string).init;\n    if (text.length ==\
    \ 0)\n    {\n        return result;\n    }\n    import std.digest.md;\n    auto\
    \ digest = MD5(text);\n    result.assign(digest.toHexString());\n    return result;\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpv0aho39a.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return Nullable!(string)();\n    return Nullable!(string)(md5(text));\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3bzqkm5_.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return Nullable!(string)();\n    import std.digest.md;\n\
    \    return Nullable!(string)(md.md5(text));\n}\n/*\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp0gsn1n1l.d(17): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmp0gsn1n1l.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result;\n    if (text.length > 0) \n    {\n        import\
    \ std.digest.md;\n        import std.conv;\n        result = to!string(md.md5(text));\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmppz_c7ybe.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) ret;\n    if (text.length == 0)\n    {\n        return ret;\n\
    \    }\n    import std.digest.md;\n    import std.conv;\n    import std.string;\n\
    \    auto md5 = MD5(text);\n    ret = to!string(md5);\n    return ret;\n}\nunittest\n\
    {\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2zanjj1r.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return null;\n    auto md5 = new MD5;\n    md5.put(text.ptr,\
    \ text.length);\n    return md5.finish().toString();\n}\nunittest\n{\n    alias\
    \ candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\"\
    );\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9jigyll6.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  import std.digest.md;\n    import std.conv;\n    import std.format;\n    import\
    \ std.array;\n    import std.algorithm;\n    import std.range;\n    import std.string;\n\
    \    import std.stdio;\n    import std.typecons;\n    import std.math;\n    if\
    \ (text.length == 0)\n    {\n        return null;\n    }\n    else\n    {\n  \
    \      auto hash = MD5(text);\n        return format(\"%(%02x)\", hash);\n   \
    \ }\n}\n/*\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto\
    \ result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get\
    \ == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpj0qs9lte.d(32): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpj0qs9lte.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return Nullable!(string)();\n    import std.digest.md;\n\
    \    return Nullable!(string)(md.md5(text));\n}\n/*\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp0gsn1n1l.d(17): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmp0gsn1n1l.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0) return Nullable!(string)();\n    import std.digest.md;\n\
    \    return Nullable!(string)(md.md5(text));\n}\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpr8id3l0c.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return null;\n    import std.digest.md;\n  \
    \  return to!string(md5(text));\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmps88qu2qp.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0) \n    {\n        return Nullable!(string)();\n    }\n\
    \    else \n    {\n        import std.digest.md;\n        import std.conv;\n \
    \       return Nullable!(string)(to!string(MD5(text)));\n    }\n}\nunittest\n\
    {\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbk5m7uf3.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return null;\n    else\n    {\n        import\
    \ std.digest.md;\n        return md.md5(text);\n    }\n}\n/*\nunittest\n{\n  \
    \  alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello\
    \ world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmplojvdfax.d(20): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmplojvdfax.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return null;\n    import std.digest.md;\n  \
    \  return to!string(md5(text));\n}\n/*\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp28n4tghs.d(17): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmp28n4tghs.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return null;\n    import std.digest.md;\n  \
    \  return to!string(md5(text));\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmps88qu2qp.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  import std.digest.md;\n    import std.conv;\n    if (text.length == 0)\n  \
    \      return null;\n    return to!string(md5(text));\n}\nunittest\n{\n    alias\
    \ candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\"\
    );\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7wdg90ra.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result;\n    if (text.length == 0)\n    {\n        return\
    \ result;\n    }\n    import std.digest.md;\n    import std.conv;\n    import\
    \ std.algorithm;\n    import std.array;\n    import std.range;\n    import std.string;\n\
    \    import std.typecons;\n    import std.math;\n    auto md5 = MD5(text);\n \
    \   auto md5_bytes = md5.finish().bytes;\n    auto md5_hex = md5_bytes.map!(to!string).join(\"\
    \");\n    result = md5_hex;\n    return result;\n}\n/*\nunittest\n{\n    alias\
    \ candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\"\
    );\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp62dqmxzj.d(31): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmp62dqmxzj.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return null;\n    else\n    {\n        auto\
    \ md5 = new MD5;\n        md5.put(text);\n        return md5.finish().toString();\n\
    \    }\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto\
    \ result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get\
    \ == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp121m3i33.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result;\n    if (text.length == 0)\n    {\n        return\
    \ result;\n    }\n    else\n    {\n        result = md5(text);\n        return\
    \ result;\n    }\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n\
    \        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsklv82z1.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return null;\n    return md5(text);\n}\nunittest\n\
    {\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_q0c2e2l.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result;\n    if (text.length == 0)\n    {\n        return\
    \ result;\n    }\n    else\n    {\n        result = md5(text);\n        return\
    \ result;\n    }\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n\
    \        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsklv82z1.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result;\n    if (text.length == 0)\n    {\n        return\
    \ result;\n    }\n    else\n    {\n        import std.digest.md;\n        import\
    \ std.conv;\n        return to!(string)(md5(text));\n    }\n}\nunittest\n{\n \
    \   alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0hsw5570.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return Nullable!(string)();\n    import std.digest.md;\n\
    \    return Nullable!(string)(md.md5(text));\n}\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_pkafq2h.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return null;\n    import std.digest.md;\n  \
    \  return md.md5(text);\n}\n/*\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpeecd85do.d(17): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpeecd85do.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return Nullable!(string)();\n    import std.digest.md;\n\
    \    import std.conv;\n    return to!(string)(MD5(text));\n}\nunittest\n{\n  \
    \  alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello\
    \ world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqxsfw_5k.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return null;\n    return text.md5;\n}\nunittest\n\
    {\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpzaho69wz.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return Nullable!(string)();\n    import std.digest.md;\n\
    \    import std.conv;\n    return to!(string)(MD5(text));\n}\nunittest\n{\n  \
    \  alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello\
    \ world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqxsfw_5k.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return Nullable!(string)();\n    import std.digest.md;\n\
    \    return Nullable!(string)(md5(text));\n}\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpowwg0jgo.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return Nullable!(string)();\n    import std.digest.md;\n\
    \    return Nullable!(string)(MD5(text));\n}\n/*\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpv69mkfvm.d(17): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpv69mkfvm.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result;\n    if (text.length == 0)\n    {\n        return\
    \ result;\n    }\n    else\n    {\n        import std.digest.md;\n        import\
    \ std.conv;\n        import std.string;\n        import std.algorithm;\n     \
    \   import std.array;\n        import std.range;\n        import std.typecons;\n\
    \        import std.math;\n        import std.range;\n        import std.algorithm;\n\
    \        import std.array;\n        import std.range;\n        import std.typecons;\n\
    \        import std.math;\n        import std.range;\n        import std.algorithm;\n\
    \        import std.array;\n        import std.range;\n        import std.typecons;\n\
    \        import std.math;\n        import std.range;\n        import std.algorithm;\n\
    \        import std.array;\n        import std.range;\n        import std.typecons;\n\
    \        import std.math;\n        import std.range;\n        import std.algorithm;\n\
    \        import std.array;\n        import std.range;\n        import std.typecons;\n\
    \        import std.math;\n        import std.range;\n        import std.algorithm;\n\
    \        import std.array;\n        import std.range;\n        import std.typecons;\n\
    \        import std.math;\n        import std.range;\n        import std.algorithm;\n\
    \        import std.array;\n        import std.range;\n        import std.typecons;\n\
    \        import std.math;\n        import std.range;\n        import std.algorithm;\n\
    \        import std.array;\n        import std.range;\n        import std.typecons;\n\
    \        import std.math;\n        import std.range;\n        import std.algorithm;\n\
    \        import std.array;\n        import std.range;\n        import std.typecons;\n\
    \        import std.math;\n        import std.range;\n        import std.algorithm;\n\
    \        import std.array;\n        import std.range;\n        import std.typecons;\n\
    \        import std.math;\n        import std.range;\n        import std.algorithm;\n\
    \nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp6t9thin_.d(84): Error: found \''unittest\'' instead of statement\n/tmp/tmp6t9thin_.d(109):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6t9thin_.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result = Nullable!(string).init;\n    if (text.length ==\
    \ 0)\n    {\n        return result;\n    }\n    import std.digest.md;\n    import\
    \ std.conv;\n    import std.string;\n    auto digest = MD5(text);\n    result.assign(to!string(digest));\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n\
    {\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpt80g3cet.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return null;\n    return md5(text);\n}\nunittest\n\
    {\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_q0c2e2l.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result = Nullable!(string).init;\n    if (text.length ==\
    \ 0)\n    {\n        return result;\n    }\n    import std.digest.md;\n    import\
    \ std.conv;\n    import std.array;\n    import std.algorithm;\n    import std.range;\n\
    \    import std.string;\n    import std.typecons;\n    import std.math;\n    import\
    \ std.stdio;\n    import std.format;\n    import std.traits;\n    import std.typecons;\n\
    \    import std.math;\n    import std.stdio;\n    import std.format;\n    import\
    \ std.traits;\n    import std.typecons;\n    import std.math;\n    import std.stdio;\n\
    \    import std.format;\n    import std.traits;\n    import std.typecons;\n  \
    \  import std.math;\n    import std.stdio;\n    import std.format;\n    import\
    \ std.traits;\n    import std.typecons;\n    import std.math;\n    import std.stdio;\n\
    \    import std.format;\n    import std.traits;\n    import std.typecons;\n  \
    \  import std.math;\n    import std.stdio;\n    import std.format;\n    import\
    \ std.traits;\n    import std.typecons;\n    import std.math;\n    import std.stdio;\n\
    \    import std.format;\n    import std.traits;\n    import std.typecons;\n  \
    \  import std.math;\n    import std.stdio;\n    import std.format;\n    import\
    \ std.traits;\n    import std.typecons;\n    import std.math;\n    import std.stdio;\n\
    \    import std.format;\n    import std.traits;\n    import std.typecons;\n  \
    \  import std.math;\n    import std.stdio;\n    import std.format;\n    import\
    \ std.traits;\n    import std.typecons;\n    import std.math;\n    import std.stdio;\n\
    \    import std.format;\n    import std.traits;\n    import std.typecons\nunittest\n\
    {\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmprf7_geek.d(79): Error: \'';\'' expected\n/tmp/tmprf7_geek.d(104):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprf7_geek.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result;\n    if (text.length == 0)\n    {\n        return\
    \ result;\n    }\n    import std.digest.md;\n    import std.conv;\n    import\
    \ std.string;\n    import std.algorithm;\n    import std.array;\n    import std.range;\n\
    \    import std.typecons;\n    import std.math;\n    import std.stdio;\n    import\
    \ std.file;\n    import std.format;\n    import std.exception;\n    import std.traits;\n\
    \    import std.datetime;\n    import std.typecons;\n    import std.math;\n  \
    \  import std.range;\n    import std.algorithm;\n    import std.array;\n    import\
    \ std.conv;\n    import std.string;\n    import std.typecons;\n    import std.math;\n\
    \    import std.range;\n    import std.algorithm;\n    import std.array;\n   \
    \ import std.conv;\n    import std.string;\n    import std.typecons;\n    import\
    \ std.math;\n    import std.range;\n    import std.algorithm;\n    import std.array;\n\
    \    import std.conv;\n    import std.string;\n    import std.typecons;\n    import\
    \ std.math;\n    import std.range;\n    import std.algorithm;\n    import std.array;\n\
    \    import std.conv;\n    import std.string;\n    import std.typecons;\n    import\
    \ std.math;\n    import std.range;\n    import std.algorithm;\n    import std.array;\n\
    \    import std.conv;\n    import std.string;\n    import std.typecons;\n    import\
    \ std.math;\n    import std.range;\n    import std.algorithm;\n    import std.array;\n\
    \    import std.conv;\n    import std.string;\n    import std.typecons;\n    import\
    \ std.math;\n    import std.range;\n    import std.algorithm;\n    import std.array;\n\
    \    import std.conv;\n    import std.string;\n    import std.typecons;\n    import\
    \ std.math;\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto\
    \ result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get\
    \ == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp23n0xgb6.d(82): Error: found \''unittest\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp23n0xgb6.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result;\n    if (text.length == 0) \n    {\n        return\
    \ result;\n    }\n    auto md5 = new MD5;\n    md5.put(text);\n    result = md5.finish().toString;\n\
    \    return result;\n}\n/*\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp6xwtoxv5.d(22): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmp6xwtoxv5.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  if (text.length == 0)\n        return Nullable!(string)();\n    import std.digest.md;\n\
    \    return Nullable!(string)(md5(text));\n}\n/*\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmps95iymvj.d(17): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmps95iymvj.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result;\n    if (text.length == 0)\n    {\n        return\
    \ result;\n    }\n    import std.digest.md;\n    import std.conv;\n    import\
    \ std.string;\n    import std.array;\n    import std.algorithm;\n    import std.range;\n\
    \    import std.typecons;\n    import std.math;\n    import std.stdio;\n    import\
    \ std.format;\n    import std.traits;\n    import std.range;\n    import std.algorithm;\n\
    \    import std.array;\n    import std.conv;\n    import std.string;\n    import\
    \ std.typecons;\n    import std.math;\n    import std.stdio;\n    import std.format;\n\
    \    import std.traits;\n    import std.range;\n    import std.algorithm;\n  \
    \  import std.array;\n    import std.conv;\n    import std.string;\n    import\
    \ std.typecons;\n    import std.math;\n    import std.stdio;\n    import std.format;\n\
    \    import std.traits;\n    import std.range;\n    import std.algorithm;\n  \
    \  import std.array;\n    import std.conv;\n    import std.string;\n    import\
    \ std.typecons;\n    import std.math;\n    import std.stdio;\n    import std.format;\n\
    \    import std.traits;\n    import std.range;\n    import std.algorithm;\n  \
    \  import std.array;\n    import std.conv;\n    import std.string;\n    import\
    \ std.typecons;\n    import std.math;\n    import std.stdio;\n    import std.format;\n\
    \    import std.traits;\n    import std.range;\n    import std.algorithm;\n  \
    \  import std.array;\n    import std.conv;\n    import std.string;\n    import\
    \ std.typecons;\n    import std.math;\n    import std.stdio;\n    import std.format;\n\
    \    import std.traits;\n    import std.range;\n    import std.algorithm;\n  \
    \  import std.array;\n    import\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpfyaedbln.d(82): Error: Identifier expected following import\n/tmp/tmpfyaedbln.d(82):
    Error: \'';\'' expected\n/tmp/tmpfyaedbln.d(107): Error: found \''EOF\'' when
    expecting \''}\'' following compound statement\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpfyaedbln.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014711

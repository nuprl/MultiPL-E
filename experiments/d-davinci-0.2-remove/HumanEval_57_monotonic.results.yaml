language: d
name: HumanEval_57_monotonic
results:
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    if (l.length < 2) return true;\n    bool increasing = l[1] > l[0];\n\
    \    for (int i = 1; i < l.length; i++)\n    {\n        if (increasing && l[i]\
    \ < l[i-1]) return false;\n        if (!increasing && l[i] > l[i-1]) return false;\n\
    \    }\n    return true;\n}\nunittest\n{\n    alias candidate = monotonic;\n\n\
    \    assert(candidate([1L, 2L, 4L, 10L]) == true);\n    assert(candidate([1L,\
    \ 2L, 4L, 20L]) == true);\n    assert(candidate([1L, 20L, 4L, 10L]) == false);\n\
    \    assert(candidate([4L, 1L, 0L, -10L]) == true);\n    assert(candidate([4L,\
    \ 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n\
    \    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L,\
    \ 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg4xt3z0_.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    if (l.length < 2)\n        return true;\n    bool increasing = l[1]\
    \ > l[0];\n    foreach (i, v; l[1..$])\n    {\n        if (increasing && v < l[i-1])\n\
    \            return false;\n        if (!increasing && v > l[i-1])\n         \
    \   return false;\n    }\n    return true;\n}\nunittest\n{\n    alias candidate\
    \ = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n    assert(candidate([1L,\
    \ 2L, 4L, 20L]) == true);\n    assert(candidate([1L, 20L, 4L, 10L]) == false);\n\
    \    assert(candidate([4L, 1L, 0L, -10L]) == true);\n    assert(candidate([4L,\
    \ 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n\
    \    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L,\
    \ 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpy8ntbatl.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    bool increasing = true;\n    bool decreasing = true;\n    for (int\
    \ i = 1; i < l.length; i++) {\n        if (l[i] < l[i - 1]) {\n            increasing\
    \ = false;\n        }\n        if (l[i] > l[i - 1]) {\n            decreasing\
    \ = false;\n        }\n    }\n    return increasing || decreasing;\n}\nunittest\n\
    {\n    alias candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L])\
    \ == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgf4lvfxm.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    bool increasing = true;\n    bool decreasing = true;\n    foreach(i,e;l)\n\
    \    {\n        if(i>0)\n        {\n            increasing &= l[i]>=l[i-1];\n\
    \            decreasing &= l[i]<=l[i-1];\n        }\n    }\n    return increasing\
    \ || decreasing;\n}\n/*\nReturn True is list elements are monotonically increasing\
    \ or decreasing.\n                \n*/\nunittest\n{\n    alias candidate = monotonic;\n\
    \n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n    assert(candidate([1L,\
    \ 2L, 4L, 20L]) == true);\n    assert(candidate([1L, 20L, 4L, 10L]) == false);\n\
    \    assert(candidate([4L, 1L, 0L, -10L]) == true);\n    assert(candidate([4L,\
    \ 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n\
    \    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L,\
    \ 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpi5ra4s70.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    bool increasing = true;\n    bool decreasing = true;\n    for (int\
    \ i = 1; i < l.length; i++)\n    {\n        if (l[i] < l[i - 1])\n           \
    \ increasing = false;\n        if (l[i] > l[i - 1])\n            decreasing =\
    \ false;\n    }\n    return increasing || decreasing;\n}\nunittest\n{\n    alias\
    \ candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n\
    \    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvleztx1n.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    if (l.length < 2) return true;\n    bool increasing = l[1] > l[0];\n\
    \    for (int i = 2; i < l.length; i++)\n    {\n        if (increasing)\n    \
    \    {\n            if (l[i] < l[i-1]) return false;\n        }\n        else\n\
    \        {\n            if (l[i] > l[i-1]) return false;\n        }\n    }\n \
    \   return true;\n}\nunittest\n{\n    alias candidate = monotonic;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L]) == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L]) == false);\n    assert(candidate([4L,\
    \ 1L, 0L, -10L]) == true);\n    assert(candidate([4L, 1L, 1L, 0L]) == true);\n\
    \    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnjjll8mp.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    bool increasing = true;\n    bool decreasing = true;\n    for (int\
    \ i = 1; i < l.length; i++)\n    {\n        if (l[i] < l[i - 1])\n           \
    \ increasing = false;\n        if (l[i] > l[i - 1])\n            decreasing =\
    \ false;\n    }\n    return increasing || decreasing;\n}\n/*\nReturn True if list\
    \ elements are monotonically increasing.\n*/\nunittest\n{\n    alias candidate\
    \ = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n    assert(candidate([1L,\
    \ 2L, 4L, 20L]) == true);\n    assert(candidate([1L, 20L, 4L, 10L]) == false);\n\
    \    assert(candidate([4L, 1L, 0L, -10L]) == true);\n    assert(candidate([4L,\
    \ 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n\
    \    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L,\
    \ 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxch3xhf6.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    if (l.length < 2) return true;\n    bool increasing = l[1] > l[0];\n\
    \    for (int i = 1; i < l.length; i++)\n    {\n        if (increasing && l[i]\
    \ < l[i-1]) return false;\n        if (!increasing && l[i] > l[i-1]) return false;\n\
    \    }\n    return true;\n}\nunittest\n{\n    alias candidate = monotonic;\n\n\
    \    assert(candidate([1L, 2L, 4L, 10L]) == true);\n    assert(candidate([1L,\
    \ 2L, 4L, 20L]) == true);\n    assert(candidate([1L, 20L, 4L, 10L]) == false);\n\
    \    assert(candidate([4L, 1L, 0L, -10L]) == true);\n    assert(candidate([4L,\
    \ 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n\
    \    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L,\
    \ 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg4xt3z0_.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    bool increasing = true;\n    bool decreasing = true;\n    foreach(i,\
    \ j; l)\n    {\n        if(i > j)\n        {\n            increasing = false;\n\
    \        }\n        if(i < j)\n        {\n            decreasing = false;\n  \
    \      }\n    }\n    return increasing || decreasing;\n}\nunittest\n{\n    alias\
    \ candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n\
    \    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp29draz82.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    if (l.length < 2)\n        return true;\n    bool increasing = l[1]\
    \ > l[0];\n    for (int i = 2; i < l.length; i++)\n    {\n        if (increasing)\n\
    \        {\n            if (l[i] < l[i - 1])\n                return false;\n\
    \        }\n        else\n        {\n            if (l[i] > l[i - 1])\n      \
    \          return false;\n        }\n    }\n    return true;\n}\nunittest\n{\n\
    \    alias candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) ==\
    \ true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfurqqdnm.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    if (l.length < 2) \n    {\n        return true;\n    }\n    bool\
    \ increasing = l[1] > l[0];\n    foreach (i, v; l[1..$]) \n    {\n        if (increasing\
    \ && v < l[i - 1]) \n        {\n            return false;\n        }\n       \
    \ if (!increasing && v > l[i - 1]) \n        {\n            return false;\n  \
    \      }\n    }\n    return true;\n}\n/*\nReturn True if list elements are monotonically\
    \ increasing.\n*/\nunittest\n{\n    alias candidate = monotonic;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L]) == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L]) == false);\n    assert(candidate([4L,\
    \ 1L, 0L, -10L]) == true);\n    assert(candidate([4L, 1L, 1L, 0L]) == true);\n\
    \    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyq76sphh.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    bool increasing = true;\n    bool decreasing = true;\n    for (int\
    \ i = 1; i < l.length; i++)\n    {\n        if (l[i] < l[i - 1])\n           \
    \ increasing = false;\n        if (l[i] > l[i - 1])\n            decreasing =\
    \ false;\n    }\n    return increasing || decreasing;\n}\n/*\nReturn True if list\
    \ is sorted in ascending order.\n                \n*/\nunittest\n{\n    alias\
    \ candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n\
    \    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9vywddwy.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    if (l.length < 2) return true;\n    bool increasing = l[1] > l[0];\n\
    \    foreach (i, v; l[1..$])\n    {\n        if (v < l[i-1])\n        {\n    \
    \        if (increasing) return false;\n        }\n        else if (v > l[i-1])\n\
    \        {\n            if (!increasing) return false;\n        }\n    }\n   \
    \ return true;\n}\n/*\nReturn True is list elements are monotonically increasing\
    \ or decreasing.\n                \n*/\nunittest\n{\n    alias candidate = monotonic;\n\
    \n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n    assert(candidate([1L,\
    \ 2L, 4L, 20L]) == true);\n    assert(candidate([1L, 20L, 4L, 10L]) == false);\n\
    \    assert(candidate([4L, 1L, 0L, -10L]) == true);\n    assert(candidate([4L,\
    \ 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n\
    \    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L,\
    \ 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp63bjt6zx.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    bool increasing = true;\n    bool decreasing = true;\n    for (int\
    \ i = 1; i < l.length; i++)\n    {\n        if (l[i] < l[i - 1])\n           \
    \ increasing = false;\n        if (l[i] > l[i - 1])\n            decreasing =\
    \ false;\n    }\n    return increasing || decreasing;\n}\nunittest\n{\n    alias\
    \ candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n\
    \    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvleztx1n.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    bool increasing = true;\n    bool decreasing = true;\n    foreach(i,\
    \ j; l)\n    {\n        if(i > j)\n        {\n            increasing = false;\n\
    \        }\n        if(i < j)\n        {\n            decreasing = false;\n  \
    \      }\n    }\n    return increasing || decreasing;\n}\nunittest\n{\n    alias\
    \ candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n\
    \    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp29draz82.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    bool increasing = true;\n    bool decreasing = true;\n    for (size_t\
    \ i = 1; i < l.length; i++) \n    {\n        if (l[i] < l[i - 1]) \n        {\n\
    \            increasing = false;\n        }\n        if (l[i] > l[i - 1]) \n \
    \       {\n            decreasing = false;\n        }\n    }\n    return increasing\
    \ || decreasing;\n}\n/*\nReturn True if list is sorted.\n                \n*/\n\
    unittest\n{\n    alias candidate = monotonic;\n\n    assert(candidate([1L, 2L,\
    \ 4L, 10L]) == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n   \
    \ assert(candidate([1L, 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L,\
    \ 0L, -10L]) == true);\n    assert(candidate([4L, 1L, 1L, 0L]) == true);\n   \
    \ assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqjynr2eb.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    bool increasing = true;\n    bool decreasing = true;\n    for (int\
    \ i = 1; i < l.length; i++)\n    {\n        if (l[i] < l[i - 1])\n           \
    \ increasing = false;\n        if (l[i] > l[i - 1])\n            decreasing =\
    \ false;\n    }\n    return increasing || decreasing;\n}\nunittest\n{\n    alias\
    \ candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n\
    \    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvleztx1n.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    bool increasing = true;\n    bool decreasing = true;\n    for (int\
    \ i = 1; i < l.length; i++)\n    {\n        if (l[i] < l[i - 1])\n           \
    \ increasing = false;\n        if (l[i] > l[i - 1])\n            decreasing =\
    \ false;\n    }\n    return increasing || decreasing;\n}\nunittest\n{\n    alias\
    \ candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n\
    \    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvleztx1n.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    bool increasing = true;\n    bool decreasing = true;\n    for (int\
    \ i = 1; i < l.length; i++) {\n        if (l[i] < l[i - 1]) {\n            increasing\
    \ = false;\n        }\n        if (l[i] > l[i - 1]) {\n            decreasing\
    \ = false;\n        }\n    }\n    return increasing || decreasing;\n}\n/*\nReturn\
    \ True if list is sorted.\n*/\nunittest\n{\n    alias candidate = monotonic;\n\
    \n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n    assert(candidate([1L,\
    \ 2L, 4L, 20L]) == true);\n    assert(candidate([1L, 20L, 4L, 10L]) == false);\n\
    \    assert(candidate([4L, 1L, 0L, -10L]) == true);\n    assert(candidate([4L,\
    \ 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n\
    \    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L,\
    \ 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbbx3jfch.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    if (l.length < 2)\n        return true;\n    bool increasing = l[1]\
    \ > l[0];\n    foreach (i, e; l[1..$])\n    {\n        if (increasing && e < l[i-1])\n\
    \            return false;\n        if (!increasing && e > l[i-1])\n         \
    \   return false;\n    }\n    return true;\n}\nunittest\n{\n    alias candidate\
    \ = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n    assert(candidate([1L,\
    \ 2L, 4L, 20L]) == true);\n    assert(candidate([1L, 20L, 4L, 10L]) == false);\n\
    \    assert(candidate([4L, 1L, 0L, -10L]) == true);\n    assert(candidate([4L,\
    \ 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n\
    \    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L,\
    \ 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxizbcqk5.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    if (l.length < 2)\n        return true;\n    bool increasing = l[1]\
    \ > l[0];\n    for (int i = 1; i < l.length; i++)\n    {\n        if (increasing\
    \ && l[i] < l[i - 1])\n            return false;\n        if (!increasing && l[i]\
    \ > l[i - 1])\n            return false;\n    }\n    return true;\n}\n/*\nReturn\
    \ True if list is sorted in ascending order.\n                \n*/\nunittest\n\
    {\n    alias candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L])\
    \ == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_151npgt.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    if (l.length == 0)\n        return true;\n    bool increasing =\
    \ true;\n    bool decreasing = true;\n    for (int i = 1; i < l.length; i++)\n\
    \    {\n        if (l[i] < l[i - 1])\n            increasing = false;\n      \
    \  if (l[i] > l[i - 1])\n            decreasing = false;\n    }\n    return increasing\
    \ || decreasing;\n}\n/*\nReturn True if list is sorted in ascending order.\n \
    \               \n*/\nunittest\n{\n    alias candidate = monotonic;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L]) == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L]) == false);\n    assert(candidate([4L,\
    \ 1L, 0L, -10L]) == true);\n    assert(candidate([4L, 1L, 1L, 0L]) == true);\n\
    \    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnz9ecwdq.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    bool increasing = true;\n    bool decreasing = true;\n    foreach(i,\
    \ e; l)\n    {\n        if(i > 0)\n        {\n            if(e < l[i-1])\n   \
    \         {\n                increasing = false;\n            }\n            if(e\
    \ > l[i-1])\n            {\n                decreasing = false;\n            }\n\
    \        }\n    }\n    return increasing || decreasing;\n}\nunittest\n{\n    alias\
    \ candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n\
    \    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgaep82ay.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    bool increasing = true;\n    bool decreasing = true;\n    for (int\
    \ i = 1; i < l.length; i++)\n    {\n        if (l[i] < l[i - 1])\n           \
    \ increasing = false;\n        if (l[i] > l[i - 1])\n            decreasing =\
    \ false;\n    }\n    return increasing || decreasing;\n}\nunittest\n{\n    alias\
    \ candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n\
    \    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvleztx1n.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    bool increasing = true;\n    bool decreasing = true;\n    for (int\
    \ i = 1; i < l.length; i++) {\n        if (l[i] < l[i - 1]) {\n            increasing\
    \ = false;\n        }\n        if (l[i] > l[i - 1]) {\n            decreasing\
    \ = false;\n        }\n    }\n    return increasing || decreasing;\n}\n/*\nReturn\
    \ True if list elements are monotonically increasing.\n*/\nunittest\n{\n    alias\
    \ candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n\
    \    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpx03ptnc5.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    if (l.length < 2)\n    {\n        return true;\n    }\n    bool\
    \ increasing = l[0] < l[1];\n    foreach (i, e; l)\n    {\n        if (i > 0)\n\
    \        {\n            if (increasing)\n            {\n                if (e\
    \ < l[i - 1])\n                {\n                    return false;\n        \
    \        }\n            }\n            else\n            {\n                if\
    \ (e > l[i - 1])\n                {\n                    return false;\n     \
    \           }\n            }\n        }\n    }\n    return true;\n}\nunittest\n\
    {\n    alias candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L])\
    \ == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpb_ly1e5_.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    if (l.length < 2)\n        return true;\n    bool increasing = l[1]\
    \ > l[0];\n    for (int i = 2; i < l.length; i++)\n    {\n        if (increasing\
    \ && l[i] < l[i - 1])\n            return false;\n        if (!increasing && l[i]\
    \ > l[i - 1])\n            return false;\n    }\n    return true;\n}\nunittest\n\
    {\n    alias candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L])\
    \ == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplc1hl9i5.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    if (l.length < 2)\n        return true;\n    bool increasing = l[1]\
    \ > l[0];\n    foreach (i, e; l[1..$])\n    {\n        if (increasing && e < l[i-1])\n\
    \            return false;\n        if (!increasing && e > l[i-1])\n         \
    \   return false;\n    }\n    return true;\n}\nunittest\n{\n    alias candidate\
    \ = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n    assert(candidate([1L,\
    \ 2L, 4L, 20L]) == true);\n    assert(candidate([1L, 20L, 4L, 10L]) == false);\n\
    \    assert(candidate([4L, 1L, 0L, -10L]) == true);\n    assert(candidate([4L,\
    \ 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n\
    \    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L,\
    \ 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxizbcqk5.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    if (l.length < 2) \n    {\n        return true;\n    }\n    bool\
    \ increasing = l[1] > l[0];\n    foreach (i, e; l[1..$]) \n    {\n        if (increasing\
    \ && e < l[i - 1]) \n        {\n            return false;\n        }\n       \
    \ if (!increasing && e > l[i - 1]) \n        {\n            return false;\n  \
    \      }\n    }\n    return true;\n}\n/*\nReturn True is list elements are monotonically\
    \ increasing or decreasing.\n                \n*/\nunittest\n{\n    alias candidate\
    \ = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n    assert(candidate([1L,\
    \ 2L, 4L, 20L]) == true);\n    assert(candidate([1L, 20L, 4L, 10L]) == false);\n\
    \    assert(candidate([4L, 1L, 0L, -10L]) == true);\n    assert(candidate([4L,\
    \ 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n\
    \    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L,\
    \ 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmfzq1q51.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    bool increasing = true;\n    bool decreasing = true;\n    foreach(i,e;\
    \ l)\n    {\n        if(i > 0)\n        {\n            if(e < l[i-1])\n      \
    \      {\n                increasing = false;\n            }\n            if(e\
    \ > l[i-1])\n            {\n                decreasing = false;\n            }\n\
    \        }\n    }\n    return increasing || decreasing;\n}\n/*\nReturn True if\
    \ list elements are monotonically increasing.\n*/\nunittest\n{\n    alias candidate\
    \ = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n    assert(candidate([1L,\
    \ 2L, 4L, 20L]) == true);\n    assert(candidate([1L, 20L, 4L, 10L]) == false);\n\
    \    assert(candidate([4L, 1L, 0L, -10L]) == true);\n    assert(candidate([4L,\
    \ 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n\
    \    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L,\
    \ 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpashwgbhu.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    if (l.length == 0)\n        return true;\n    bool increasing =\
    \ true;\n    bool decreasing = true;\n    for (int i = 1; i < l.length; i++)\n\
    \    {\n        if (l[i] < l[i - 1])\n            increasing = false;\n      \
    \  if (l[i] > l[i - 1])\n            decreasing = false;\n    }\n    return increasing\
    \ || decreasing;\n}\nunittest\n{\n    alias candidate = monotonic;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L]) == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L]) == false);\n    assert(candidate([4L,\
    \ 1L, 0L, -10L]) == true);\n    assert(candidate([4L, 1L, 1L, 0L]) == true);\n\
    \    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpm9yzne8e.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    if (l.length < 2) \n    {\n        return true;\n    }\n    bool\
    \ increasing = l[1] > l[0];\n    foreach (i, e; l[1..$]) \n    {\n        if (increasing\
    \ && e < l[i - 1]) \n        {\n            return false;\n        }\n       \
    \ if (!increasing && e > l[i - 1]) \n        {\n            return false;\n  \
    \      }\n    }\n    return true;\n}\nunittest\n{\n    alias candidate = monotonic;\n\
    \n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n    assert(candidate([1L,\
    \ 2L, 4L, 20L]) == true);\n    assert(candidate([1L, 20L, 4L, 10L]) == false);\n\
    \    assert(candidate([4L, 1L, 0L, -10L]) == true);\n    assert(candidate([4L,\
    \ 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n\
    \    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L,\
    \ 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1_skxsx5.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    bool increasing = true;\n    bool decreasing = true;\n    for (int\
    \ i = 1; i < l.length; i++)\n    {\n        if (l[i] < l[i - 1])\n           \
    \ increasing = false;\n        if (l[i] > l[i - 1])\n            decreasing =\
    \ false;\n    }\n    return increasing || decreasing;\n}\n/*\nReturn True if list\
    \ elements are monotonically increasing.\n*/\nunittest\n{\n    alias candidate\
    \ = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n    assert(candidate([1L,\
    \ 2L, 4L, 20L]) == true);\n    assert(candidate([1L, 20L, 4L, 10L]) == false);\n\
    \    assert(candidate([4L, 1L, 0L, -10L]) == true);\n    assert(candidate([4L,\
    \ 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n\
    \    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L,\
    \ 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxch3xhf6.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    if (l.length == 0) return true;\n    bool increasing = l[0] < l[1];\n\
    \    for (int i = 1; i < l.length; i++)\n    {\n        if (increasing && l[i-1]\
    \ > l[i]) return false;\n        if (!increasing && l[i-1] < l[i]) return false;\n\
    \    }\n    return true;\n}\nunittest\n{\n    alias candidate = monotonic;\n\n\
    \    assert(candidate([1L, 2L, 4L, 10L]) == true);\n    assert(candidate([1L,\
    \ 2L, 4L, 20L]) == true);\n    assert(candidate([1L, 20L, 4L, 10L]) == false);\n\
    \    assert(candidate([4L, 1L, 0L, -10L]) == true);\n    assert(candidate([4L,\
    \ 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n\
    \    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L,\
    \ 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2mdn_dim.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    if (l.length < 2) \n    {\n        return true;\n    }\n    bool\
    \ increasing = l[1] > l[0];\n    for (int i = 1; i < l.length; i++) \n    {\n\
    \        if (increasing) \n        {\n            if (l[i] < l[i - 1]) \n    \
    \        {\n                return false;\n            }\n        } \n       \
    \ else \n        {\n            if (l[i] > l[i - 1]) \n            {\n       \
    \         return false;\n            }\n        }\n    }\n    return true;\n}\n\
    /*\nReturn True if list elements are monotonically increasing.\n*/\nunittest\n\
    {\n    alias candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L])\
    \ == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_qgw79k6.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    bool increasing = true;\n    bool decreasing = true;\n    foreach(i,j;\
    \ zip(l[0..$-1],l[1..$]))\n    {\n        increasing &= (i < j);\n        decreasing\
    \ &= (i > j);\n    }\n    return increasing || decreasing;\n}\nunittest\n{\n \
    \   alias candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) ==\
    \ true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprqpgide1.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    if (l.length < 2) \n        return true;\n    bool increasing =\
    \ l[1] > l[0];\n    foreach (i, e; l[1..$]) \n    {\n        if (e > l[i]) \n\
    \        {\n            if (!increasing) \n                return false;\n   \
    \     } \n        else if (e < l[i]) \n        {\n            if (increasing)\
    \ \n                return false;\n        } \n        else \n            return\
    \ false;\n    }\n    return true;\n}\nunittest\n{\n    alias candidate = monotonic;\n\
    \n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n    assert(candidate([1L,\
    \ 2L, 4L, 20L]) == true);\n    assert(candidate([1L, 20L, 4L, 10L]) == false);\n\
    \    assert(candidate([4L, 1L, 0L, -10L]) == true);\n    assert(candidate([4L,\
    \ 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n\
    \    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L,\
    \ 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpw4_r4hl6.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    bool increasing = true;\n    bool decreasing = true;\n    for (int\
    \ i = 1; i < l.length; i++) {\n        if (l[i] < l[i - 1]) {\n            increasing\
    \ = false;\n        }\n        if (l[i] > l[i - 1]) {\n            decreasing\
    \ = false;\n        }\n    }\n    return increasing || decreasing;\n}\n/*\nReturn\
    \ True if list elements are monotonically increasing.\n*/\nunittest\n{\n    alias\
    \ candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n\
    \    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpx03ptnc5.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    bool increasing = true;\n    bool decreasing = true;\n    foreach(i,\
    \ j; l)\n    {\n        if(i > j)\n        {\n            increasing = false;\n\
    \        }\n        if(i < j)\n        {\n            decreasing = false;\n  \
    \      }\n    }\n    return increasing || decreasing;\n}\n/*\nReturn True if list\
    \ elements are monotonically increasing.\n*/\nunittest\n{\n    alias candidate\
    \ = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n    assert(candidate([1L,\
    \ 2L, 4L, 20L]) == true);\n    assert(candidate([1L, 20L, 4L, 10L]) == false);\n\
    \    assert(candidate([4L, 1L, 0L, -10L]) == true);\n    assert(candidate([4L,\
    \ 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n\
    \    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L,\
    \ 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1_lsivwo.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    bool increasing = true;\n    bool decreasing = true;\n    for (int\
    \ i = 1; i < l.length; i++)\n    {\n        if (l[i] < l[i - 1])\n           \
    \ increasing = false;\n        if (l[i] > l[i - 1])\n            decreasing =\
    \ false;\n    }\n    return increasing || decreasing;\n}\n/*\nReturn True if list\
    \ elements are monotonically increasing.\n*/\nunittest\n{\n    alias candidate\
    \ = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n    assert(candidate([1L,\
    \ 2L, 4L, 20L]) == true);\n    assert(candidate([1L, 20L, 4L, 10L]) == false);\n\
    \    assert(candidate([4L, 1L, 0L, -10L]) == true);\n    assert(candidate([4L,\
    \ 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n\
    \    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L,\
    \ 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxch3xhf6.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    bool increasing = true;\n    bool decreasing = true;\n    foreach(i,\
    \ j; l)\n    {\n        if(j < i)\n        {\n            increasing = false;\n\
    \        }\n        if(j > i)\n        {\n            decreasing = false;\n  \
    \      }\n    }\n    return increasing || decreasing;\n}\nunittest\n{\n    alias\
    \ candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n\
    \    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfifnl2za.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    bool increasing = true;\n    bool decreasing = true;\n    for (int\
    \ i = 1; i < l.length; i++) {\n        if (l[i] < l[i - 1])\n            increasing\
    \ = false;\n        if (l[i] > l[i - 1])\n            decreasing = false;\n  \
    \  }\n    return increasing || decreasing;\n}\nunittest\n{\n    alias candidate\
    \ = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n    assert(candidate([1L,\
    \ 2L, 4L, 20L]) == true);\n    assert(candidate([1L, 20L, 4L, 10L]) == false);\n\
    \    assert(candidate([4L, 1L, 0L, -10L]) == true);\n    assert(candidate([4L,\
    \ 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n\
    \    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L,\
    \ 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1xx3nxkd.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    bool increasing = true;\n    bool decreasing = true;\n    foreach(i,j;\
    \ zip(l[0..$-1],l[1..$]))\n    {\n        increasing &= i < j;\n        decreasing\
    \ &= i > j;\n    }\n    return increasing || decreasing;\n}\nunittest\n{\n   \
    \ alias candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n\
    \    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpj81alm3k.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    bool increasing = true;\n    bool decreasing = true;\n    foreach(i,j;\
    \ zip(l[0..$-1],l[1..$]))\n    {\n        increasing &= i < j;\n        decreasing\
    \ &= i > j;\n    }\n    return increasing || decreasing;\n}\nunittest\n{\n   \
    \ alias candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n\
    \    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpj81alm3k.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    if (l.length < 2)\n        return true;\n    bool increasing = l[1]\
    \ > l[0];\n    for (int i = 2; i < l.length; i++)\n    {\n        if (increasing)\n\
    \        {\n            if (l[i] < l[i - 1])\n                return false;\n\
    \        }\n        else\n        {\n            if (l[i] > l[i - 1])\n      \
    \          return false;\n        }\n    }\n    return true;\n}\nunittest\n{\n\
    \    alias candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) ==\
    \ true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfurqqdnm.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    bool increasing = true;\n    bool decreasing = true;\n    for (int\
    \ i = 1; i < l.length; i++) {\n        if (l[i] < l[i - 1]) {\n            increasing\
    \ = false;\n        }\n        if (l[i] > l[i - 1]) {\n            decreasing\
    \ = false;\n        }\n    }\n    return increasing || decreasing;\n}\n/*\nReturn\
    \ True if list is sorted in ascending order.\n*/\nunittest\n{\n    alias candidate\
    \ = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n    assert(candidate([1L,\
    \ 2L, 4L, 20L]) == true);\n    assert(candidate([1L, 20L, 4L, 10L]) == false);\n\
    \    assert(candidate([4L, 1L, 0L, -10L]) == true);\n    assert(candidate([4L,\
    \ 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n\
    \    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L,\
    \ 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdkjj9xkt.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    bool increasing = true;\n    bool decreasing = true;\n    for (size_t\
    \ i = 1; i < l.length; i++)\n    {\n        if (l[i] < l[i - 1])\n           \
    \ increasing = false;\n        if (l[i] > l[i - 1])\n            decreasing =\
    \ false;\n    }\n    return increasing || decreasing;\n}\nunittest\n{\n    alias\
    \ candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n\
    \    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbh5iiqs2.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    if (l.length < 2)\n        return true;\n    bool increasing = l[1]\
    \ > l[0];\n    for (int i = 2; i < l.length; i++)\n    {\n        if (increasing\
    \ && l[i] < l[i - 1])\n            return false;\n        if (!increasing && l[i]\
    \ > l[i - 1])\n            return false;\n    }\n    return true;\n}\n/*\nReturn\
    \ True if list is sorted.\n                \n*/\nunittest\n{\n    alias candidate\
    \ = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n    assert(candidate([1L,\
    \ 2L, 4L, 20L]) == true);\n    assert(candidate([1L, 20L, 4L, 10L]) == false);\n\
    \    assert(candidate([4L, 1L, 0L, -10L]) == true);\n    assert(candidate([4L,\
    \ 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n\
    \    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L,\
    \ 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqtm64jkf.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    return l.length < 2 || l[0] < l[1] ? l.all!(a => a < a.next) : l.all!(a\
    \ => a > a.next);\n}\nunittest\n{\n    alias candidate = monotonic;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L]) == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L]) == false);\n    assert(candidate([4L,\
    \ 1L, 0L, -10L]) == true);\n    assert(candidate([4L, 1L, 1L, 0L]) == true);\n\
    \    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmps9r4hyol.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    bool increasing = true;\n    bool decreasing = true;\n    for (int\
    \ i = 1; i < l.length; i++)\n    {\n        if (l[i] < l[i - 1])\n           \
    \ increasing = false;\n        if (l[i] > l[i - 1])\n            decreasing =\
    \ false;\n    }\n    return increasing || decreasing;\n}\nunittest\n{\n    alias\
    \ candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n\
    \    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvleztx1n.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    bool increasing = true;\n    bool decreasing = true;\n    for (int\
    \ i = 1; i < l.length; i++) {\n        if (l[i] < l[i - 1]) {\n            increasing\
    \ = false;\n        }\n        if (l[i] > l[i - 1]) {\n            decreasing\
    \ = false;\n        }\n    }\n    return increasing || decreasing;\n}\nunittest\n\
    {\n    alias candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L])\
    \ == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgf4lvfxm.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    bool increasing = true;\n    bool decreasing = true;\n    for (int\
    \ i = 1; i < l.length; i++) {\n        if (l[i] < l[i - 1]) {\n            increasing\
    \ = false;\n        }\n        if (l[i] > l[i - 1]) {\n            decreasing\
    \ = false;\n        }\n    }\n    return increasing || decreasing;\n}\n/*\nReturn\
    \ True if list is sorted in ascending order.\n*/\nunittest\n{\n    alias candidate\
    \ = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n    assert(candidate([1L,\
    \ 2L, 4L, 20L]) == true);\n    assert(candidate([1L, 20L, 4L, 10L]) == false);\n\
    \    assert(candidate([4L, 1L, 0L, -10L]) == true);\n    assert(candidate([4L,\
    \ 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n\
    \    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L,\
    \ 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdkjj9xkt.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    bool increasing = true;\n    bool decreasing = true;\n    for (int\
    \ i = 1; i < l.length; i++)\n    {\n        if (l[i] < l[i - 1])\n           \
    \ increasing = false;\n        if (l[i] > l[i - 1])\n            decreasing =\
    \ false;\n    }\n    return increasing || decreasing;\n}\nunittest\n{\n    alias\
    \ candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n\
    \    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvleztx1n.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    if (l.length < 2)\n        return true;\n    bool increasing = l[1]\
    \ > l[0];\n    for (int i = 1; i < l.length; i++)\n    {\n        if (increasing\
    \ && l[i] < l[i - 1])\n            return false;\n        if (!increasing && l[i]\
    \ > l[i - 1])\n            return false;\n    }\n    return true;\n}\nunittest\n\
    {\n    alias candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L])\
    \ == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp581jwubw.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    bool increasing = true;\n    bool decreasing = true;\n    for (int\
    \ i = 1; i < l.length; i++)\n    {\n        if (l[i] < l[i - 1])\n           \
    \ increasing = false;\n        if (l[i] > l[i - 1])\n            decreasing =\
    \ false;\n    }\n    return increasing || decreasing;\n}\n/*\nReturn True if list\
    \ elements are monotonically increasing.\n*/\nunittest\n{\n    alias candidate\
    \ = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n    assert(candidate([1L,\
    \ 2L, 4L, 20L]) == true);\n    assert(candidate([1L, 20L, 4L, 10L]) == false);\n\
    \    assert(candidate([4L, 1L, 0L, -10L]) == true);\n    assert(candidate([4L,\
    \ 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n\
    \    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L,\
    \ 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxch3xhf6.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    bool increasing = true;\n    bool decreasing = true;\n    foreach(i,\
    \ j; zip(l[0..$-1], l[1..$]))\n    {\n        increasing &= i < j;\n        decreasing\
    \ &= i > j;\n    }\n    return increasing || decreasing;\n}\nunittest\n{\n   \
    \ alias candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n\
    \    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbmd5fjn9.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    bool increasing = true;\n    bool decreasing = true;\n    foreach(i,\
    \ j; l)\n    {\n        if(i > j)\n        {\n            increasing = false;\n\
    \        }\n        if(i < j)\n        {\n            decreasing = false;\n  \
    \      }\n    }\n    return increasing || decreasing;\n}\nunittest\n{\n    alias\
    \ candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n\
    \    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp29draz82.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    if (l.length < 2)\n        return true;\n    bool increasing = l[1]\
    \ > l[0];\n    foreach (i, e; l[1..$])\n    {\n        if (increasing && e < l[i-1])\n\
    \            return false;\n        if (!increasing && e > l[i-1])\n         \
    \   return false;\n    }\n    return true;\n}\nunittest\n{\n    alias candidate\
    \ = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n    assert(candidate([1L,\
    \ 2L, 4L, 20L]) == true);\n    assert(candidate([1L, 20L, 4L, 10L]) == false);\n\
    \    assert(candidate([4L, 1L, 0L, -10L]) == true);\n    assert(candidate([4L,\
    \ 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n\
    \    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L,\
    \ 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxizbcqk5.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    if (l.length < 2) return true;\n    bool increasing = l[1] > l[0];\n\
    \    for (int i = 1; i < l.length; i++) \n    {\n        if (increasing) \n  \
    \      {\n            if (l[i] < l[i - 1]) return false;\n        } \n       \
    \ else \n        {\n            if (l[i] > l[i - 1]) return false;\n        }\n\
    \    }\n    return true;\n}\nunittest\n{\n    alias candidate = monotonic;\n\n\
    \    assert(candidate([1L, 2L, 4L, 10L]) == true);\n    assert(candidate([1L,\
    \ 2L, 4L, 20L]) == true);\n    assert(candidate([1L, 20L, 4L, 10L]) == false);\n\
    \    assert(candidate([4L, 1L, 0L, -10L]) == true);\n    assert(candidate([4L,\
    \ 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n\
    \    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L,\
    \ 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyuf15f__.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    bool increasing = true;\n    bool decreasing = true;\n    foreach(i,e;\
    \ l)\n    {\n        if(i>0)\n        {\n            increasing &= (e >= l[i-1]);\n\
    \            decreasing &= (e <= l[i-1]);\n        }\n    }\n    return increasing\
    \ || decreasing;\n}\nunittest\n{\n    alias candidate = monotonic;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L]) == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L]) == false);\n    assert(candidate([4L,\
    \ 1L, 0L, -10L]) == true);\n    assert(candidate([4L, 1L, 1L, 0L]) == true);\n\
    \    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpi3fhn3ob.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    bool increasing = true;\n    bool decreasing = true;\n    foreach(i,\
    \ v; l)\n    {\n        if(i > 0)\n        {\n            if(v < l[i-1])\n   \
    \         {\n                increasing = false;\n            }\n            if(v\
    \ > l[i-1])\n            {\n                decreasing = false;\n            }\n\
    \        }\n    }\n    return increasing || decreasing;\n}\nunittest\n{\n    alias\
    \ candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n\
    \    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgsfezap_.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    bool increasing = true;\n    bool decreasing = true;\n    for (int\
    \ i = 1; i < l.length; i++)\n    {\n        if (l[i] < l[i - 1])\n           \
    \ increasing = false;\n        if (l[i] > l[i - 1])\n            decreasing =\
    \ false;\n    }\n    return increasing || decreasing;\n}\nunittest\n{\n    alias\
    \ candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n\
    \    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvleztx1n.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    if (l.length < 2)\n        return true;\n    bool increasing = l[1]\
    \ > l[0];\n    for (int i = 1; i < l.length; i++)\n    {\n        if (increasing\
    \ && l[i] < l[i - 1])\n            return false;\n        if (!increasing && l[i]\
    \ > l[i - 1])\n            return false;\n    }\n    return true;\n}\nunittest\n\
    {\n    alias candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L])\
    \ == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp581jwubw.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    bool increasing = true;\n    bool decreasing = true;\n    for (int\
    \ i = 1; i < l.length; i++)\n    {\n        if (l[i] < l[i - 1])\n           \
    \ increasing = false;\n        if (l[i] > l[i - 1])\n            decreasing =\
    \ false;\n    }\n    return increasing || decreasing;\n}\nunittest\n{\n    alias\
    \ candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n\
    \    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvleztx1n.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    bool increasing = true;\n    bool decreasing = true;\n    for (size_t\
    \ i = 1; i < l.length; i++)\n    {\n        if (l[i] < l[i - 1])\n           \
    \ increasing = false;\n        if (l[i] > l[i - 1])\n            decreasing =\
    \ false;\n    }\n    return increasing || decreasing;\n}\n/*\nReturn True if list\
    \ elements are monotonically increasing.\n*/\nunittest\n{\n    alias candidate\
    \ = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n    assert(candidate([1L,\
    \ 2L, 4L, 20L]) == true);\n    assert(candidate([1L, 20L, 4L, 10L]) == false);\n\
    \    assert(candidate([4L, 1L, 0L, -10L]) == true);\n    assert(candidate([4L,\
    \ 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n\
    \    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L,\
    \ 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4wdclru7.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    if (l.length < 2) \n        return true;\n    bool increasing =\
    \ l[1] > l[0];\n    for (int i = 2; i < l.length; i++) \n    {\n        if (increasing\
    \ && l[i] < l[i - 1]) \n            return false;\n        if (!increasing &&\
    \ l[i] > l[i - 1]) \n            return false;\n    }\n    return true;\n}\nunittest\n\
    {\n    alias candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L])\
    \ == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpe7ipxei7.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    bool increasing = true;\n    bool decreasing = true;\n    for (int\
    \ i = 1; i < l.length; i++) {\n        if (l[i] < l[i - 1]) {\n            increasing\
    \ = false;\n        }\n        if (l[i] > l[i - 1]) {\n            decreasing\
    \ = false;\n        }\n    }\n    return increasing || decreasing;\n}\nunittest\n\
    {\n    alias candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L])\
    \ == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgf4lvfxm.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    bool increasing = true;\n    bool decreasing = true;\n    foreach(i,j;\
    \ zip(l[0..$-1],l[1..$]))\n    {\n        increasing &= (i<j);\n        decreasing\
    \ &= (i>j);\n    }\n    return increasing || decreasing;\n}\nunittest\n{\n   \
    \ alias candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n\
    \    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpuscx3hpy.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    bool increasing = true;\n    bool decreasing = true;\n    for (int\
    \ i = 1; i < l.length; i++)\n    {\n        if (l[i] < l[i - 1])\n           \
    \ increasing = false;\n        if (l[i] > l[i - 1])\n            decreasing =\
    \ false;\n    }\n    return increasing || decreasing;\n}\nunittest\n{\n    alias\
    \ candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n\
    \    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvleztx1n.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    if (l.length < 2)\n        return true;\n    bool increasing = l[1]\
    \ > l[0];\n    for (int i = 1; i < l.length - 1; i++)\n    {\n        if (increasing)\n\
    \        {\n            if (l[i + 1] < l[i])\n                return false;\n\
    \        }\n        else\n        {\n            if (l[i + 1] > l[i])\n      \
    \          return false;\n        }\n    }\n    return true;\n}\nunittest\n{\n\
    \    alias candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) ==\
    \ true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4hqaiby4.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    if (l.length < 2)\n        return true;\n    bool increasing = l[1]\
    \ > l[0];\n    foreach (i, e; l[1..$])\n    {\n        if (e > l[i])\n       \
    \ {\n            if (!increasing)\n                return false;\n        }\n\
    \        else if (e < l[i])\n        {\n            if (increasing)\n        \
    \        return false;\n        }\n    }\n    return true;\n}\nunittest\n{\n \
    \   alias candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) ==\
    \ true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpt71lj9yy.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    if (l.length < 2) \n        return true;\n    bool increasing =\
    \ l[1] > l[0];\n    foreach (i, e; l[1..$]) \n    {\n        if (increasing &&\
    \ e < l[i - 1]) \n            return false;\n        if (!increasing && e > l[i\
    \ - 1]) \n            return false;\n    }\n    return true;\n}\nunittest\n{\n\
    \    alias candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) ==\
    \ true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpc0s1ple6.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    if (l.length < 2) return true;\n    bool increasing = l[1] > l[0];\n\
    \    foreach (i, e; l[1..$])\n    {\n        if (e > l[i])\n        {\n      \
    \      if (!increasing) return false;\n        }\n        else if (e < l[i])\n\
    \        {\n            if (increasing) return false;\n        }\n    }\n    return\
    \ true;\n}\nunittest\n{\n    alias candidate = monotonic;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L]) == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L]) == false);\n    assert(candidate([4L,\
    \ 1L, 0L, -10L]) == true);\n    assert(candidate([4L, 1L, 1L, 0L]) == true);\n\
    \    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpu774jt7m.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    if (l.length < 2) \n    {\n        return true;\n    }\n    bool\
    \ increasing = l[1] > l[0];\n    foreach (i, e; l[1..$]) \n    {\n        if (increasing)\
    \ \n        {\n            if (e < l[i - 1]) \n            {\n               \
    \ return false;\n            }\n        } \n        else \n        {\n       \
    \     if (e > l[i - 1]) \n            {\n                return false;\n     \
    \       }\n        }\n    }\n    return true;\n}\n/*\nReturn True if list elements\
    \ are monotonically increasing.\n                \n*/\nunittest\n{\n    alias\
    \ candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n\
    \    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9fjg28vv.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    bool increasing = true;\n    bool decreasing = true;\n    for (int\
    \ i = 1; i < l.length; i++)\n    {\n        if (l[i] < l[i - 1])\n           \
    \ increasing = false;\n        if (l[i] > l[i - 1])\n            decreasing =\
    \ false;\n    }\n    return increasing || decreasing;\n}\n/*\nReturn True if list\
    \ elements are monotonically increasing.\n*/\nunittest\n{\n    alias candidate\
    \ = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n    assert(candidate([1L,\
    \ 2L, 4L, 20L]) == true);\n    assert(candidate([1L, 20L, 4L, 10L]) == false);\n\
    \    assert(candidate([4L, 1L, 0L, -10L]) == true);\n    assert(candidate([4L,\
    \ 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n\
    \    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L,\
    \ 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxch3xhf6.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    bool increasing = true;\n    bool decreasing = true;\n    for (int\
    \ i = 1; i < l.length; i++) {\n        if (l[i] < l[i - 1]) {\n            increasing\
    \ = false;\n        }\n        if (l[i] > l[i - 1]) {\n            decreasing\
    \ = false;\n        }\n    }\n    return increasing || decreasing;\n}\nunittest\n\
    {\n    alias candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L])\
    \ == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgf4lvfxm.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    bool increasing = true;\n    bool decreasing = true;\n    foreach(i,\
    \ j; l)\n    {\n        if(i > j)\n        {\n            increasing = false;\n\
    \        }\n        if(i < j)\n        {\n            decreasing = false;\n  \
    \      }\n    }\n    return increasing || decreasing;\n}\nunittest\n{\n    alias\
    \ candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n\
    \    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp29draz82.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    bool increasing = true;\n    bool decreasing = true;\n    for (int\
    \ i = 1; i < l.length; i++)\n    {\n        if (l[i] < l[i - 1])\n           \
    \ increasing = false;\n        if (l[i] > l[i - 1])\n            decreasing =\
    \ false;\n    }\n    return increasing || decreasing;\n}\nunittest\n{\n    alias\
    \ candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n\
    \    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvleztx1n.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    if (l.length < 2) \n        return true;\n    bool increasing =\
    \ l[1] > l[0];\n    foreach (i, e; l[1..$]) \n    {\n        if (e == l[i]) \n\
    \            continue;\n        if (increasing && e < l[i]) \n            return\
    \ false;\n        if (!increasing && e > l[i]) \n            return false;\n \
    \   }\n    return true;\n}\nunittest\n{\n    alias candidate = monotonic;\n\n\
    \    assert(candidate([1L, 2L, 4L, 10L]) == true);\n    assert(candidate([1L,\
    \ 2L, 4L, 20L]) == true);\n    assert(candidate([1L, 20L, 4L, 10L]) == false);\n\
    \    assert(candidate([4L, 1L, 0L, -10L]) == true);\n    assert(candidate([4L,\
    \ 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n\
    \    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L,\
    \ 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkuzad32u.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    bool increasing = true;\n    bool decreasing = true;\n    foreach(i,\
    \ v; l)\n    {\n        if(i > 0)\n        {\n            if(v < l[i-1])\n   \
    \         {\n                increasing = false;\n            }\n            if(v\
    \ > l[i-1])\n            {\n                decreasing = false;\n            }\n\
    \        }\n    }\n    return increasing || decreasing;\n}\n/*\nReturn True if\
    \ list elements are monotonically increasing.\n*/\nunittest\n{\n    alias candidate\
    \ = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n    assert(candidate([1L,\
    \ 2L, 4L, 20L]) == true);\n    assert(candidate([1L, 20L, 4L, 10L]) == false);\n\
    \    assert(candidate([4L, 1L, 0L, -10L]) == true);\n    assert(candidate([4L,\
    \ 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n\
    \    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L,\
    \ 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpirza6tnq.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    if (l.length < 2)\n        return true;\n    bool increasing = l[1]\
    \ > l[0];\n    for (int i = 2; i < l.length; i++)\n    {\n        if (increasing\
    \ && l[i] < l[i - 1])\n            return false;\n        if (!increasing && l[i]\
    \ > l[i - 1])\n            return false;\n    }\n    return true;\n}\nunittest\n\
    {\n    alias candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L])\
    \ == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplc1hl9i5.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    if (l.length < 2)\n        return true;\n    bool increasing = l[1]\
    \ > l[0];\n    for (int i = 1; i < l.length; i++)\n    {\n        if (increasing)\n\
    \        {\n            if (l[i] < l[i - 1])\n                return false;\n\
    \        }\n        else\n        {\n            if (l[i] > l[i - 1])\n      \
    \          return false;\n        }\n    }\n    return true;\n}\n/*\nReturn True\
    \ if list elements are monotonically increasing.\n*/\nunittest\n{\n    alias candidate\
    \ = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n    assert(candidate([1L,\
    \ 2L, 4L, 20L]) == true);\n    assert(candidate([1L, 20L, 4L, 10L]) == false);\n\
    \    assert(candidate([4L, 1L, 0L, -10L]) == true);\n    assert(candidate([4L,\
    \ 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n\
    \    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L,\
    \ 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpzs87s1zw.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    if (l.length < 2) return true;\n    bool increasing = l[1] > l[0];\n\
    \    for (int i = 2; i < l.length; i++)\n    {\n        if (increasing)\n    \
    \    {\n            if (l[i] < l[i-1]) return false;\n        }\n        else\n\
    \        {\n            if (l[i] > l[i-1]) return false;\n        }\n    }\n \
    \   return true;\n}\nunittest\n{\n    alias candidate = monotonic;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L]) == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L]) == false);\n    assert(candidate([4L,\
    \ 1L, 0L, -10L]) == true);\n    assert(candidate([4L, 1L, 1L, 0L]) == true);\n\
    \    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnjjll8mp.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    bool increasing = true;\n    bool decreasing = true;\n    foreach(i,j;\
    \ zip(l[0..$-1],l[1..$]))\n    {\n        increasing &= i<j;\n        decreasing\
    \ &= i>j;\n    }\n    return increasing || decreasing;\n}\nunittest\n{\n    alias\
    \ candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n\
    \    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0qnjbzl8.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    bool increasing = true;\n    bool decreasing = true;\n    for (int\
    \ i = 1; i < l.length; i++) {\n        if (l[i] < l[i - 1]) {\n            increasing\
    \ = false;\n        }\n        if (l[i] > l[i - 1]) {\n            decreasing\
    \ = false;\n        }\n    }\n    return increasing || decreasing;\n}\nunittest\n\
    {\n    alias candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L])\
    \ == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgf4lvfxm.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    bool increasing = true;\n    bool decreasing = true;\n    for (int\
    \ i = 1; i < l.length; i++)\n    {\n        if (l[i] < l[i - 1])\n           \
    \ increasing = false;\n        if (l[i] > l[i - 1])\n            decreasing =\
    \ false;\n    }\n    return increasing || decreasing;\n}\nunittest\n{\n    alias\
    \ candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n\
    \    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvleztx1n.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    if (l.length == 0)\n        return true;\n    bool increasing =\
    \ l[0] < l[1];\n    for (int i = 1; i < l.length - 1; i++)\n    {\n        if\
    \ (increasing)\n        {\n            if (l[i] > l[i + 1])\n                return\
    \ false;\n        }\n        else\n        {\n            if (l[i] < l[i + 1])\n\
    \                return false;\n        }\n    }\n    return true;\n}\nunittest\n\
    {\n    alias candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L])\
    \ == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpy3j_s108.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    bool increasing = true;\n    bool decreasing = true;\n    for (int\
    \ i = 1; i < l.length; i++)\n    {\n        if (l[i] < l[i - 1])\n           \
    \ increasing = false;\n        if (l[i] > l[i - 1])\n            decreasing =\
    \ false;\n    }\n    return increasing || decreasing;\n}\n/*\nReturn True if list\
    \ elements are monotonically increasing.\n                \n*/\nunittest\n{\n\
    \    alias candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) ==\
    \ true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcizzd53q.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    if (l.length < 2)\n        return true;\n    bool increasing = l[1]\
    \ > l[0];\n    for (int i = 1; i < l.length - 1; i++)\n    {\n        if (increasing\
    \ && l[i + 1] < l[i])\n            return false;\n        if (!increasing && l[i\
    \ + 1] > l[i])\n            return false;\n    }\n    return true;\n}\n/*\nReturn\
    \ True if list is sorted in ascending order.\n*/\nunittest\n{\n    alias candidate\
    \ = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n    assert(candidate([1L,\
    \ 2L, 4L, 20L]) == true);\n    assert(candidate([1L, 20L, 4L, 10L]) == false);\n\
    \    assert(candidate([4L, 1L, 0L, -10L]) == true);\n    assert(candidate([4L,\
    \ 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n\
    \    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L,\
    \ 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpp2k89q_n.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    bool increasing = true;\n    bool decreasing = true;\n    foreach(i,j;\
    \ zip(l[1..$],l[0..$-1]))\n    {\n        increasing &= i > j;\n        decreasing\
    \ &= i < j;\n    }\n    return increasing || decreasing;\n}\nunittest\n{\n   \
    \ alias candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n\
    \    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpe4ivkt1p.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    bool increasing = true;\n    bool decreasing = true;\n    for (int\
    \ i = 1; i < l.length; i++)\n    {\n        if (l[i] < l[i - 1])\n           \
    \ increasing = false;\n        if (l[i] > l[i - 1])\n            decreasing =\
    \ false;\n    }\n    return increasing || decreasing;\n}\n/*\nReturn True if list\
    \ elements are monotonically increasing.\n*/\nunittest\n{\n    alias candidate\
    \ = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n    assert(candidate([1L,\
    \ 2L, 4L, 20L]) == true);\n    assert(candidate([1L, 20L, 4L, 10L]) == false);\n\
    \    assert(candidate([4L, 1L, 0L, -10L]) == true);\n    assert(candidate([4L,\
    \ 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n\
    \    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L,\
    \ 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxch3xhf6.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    bool increasing = true;\n    bool decreasing = true;\n    for (int\
    \ i = 1; i < l.length; i++)\n    {\n        if (l[i] < l[i - 1])\n           \
    \ increasing = false;\n        if (l[i] > l[i - 1])\n            decreasing =\
    \ false;\n    }\n    return increasing || decreasing;\n}\n/*\nReturn True if list\
    \ elements are monotonically increasing.\n*/\nunittest\n{\n    alias candidate\
    \ = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n    assert(candidate([1L,\
    \ 2L, 4L, 20L]) == true);\n    assert(candidate([1L, 20L, 4L, 10L]) == false);\n\
    \    assert(candidate([4L, 1L, 0L, -10L]) == true);\n    assert(candidate([4L,\
    \ 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n\
    \    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L,\
    \ 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxch3xhf6.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    if (l.length < 2)\n    {\n        return true;\n    }\n    bool\
    \ increasing = l[0] < l[1];\n    for (int i = 1; i < l.length - 1; i++)\n    {\n\
    \        if (increasing && l[i] > l[i + 1])\n        {\n            return false;\n\
    \        }\n        if (!increasing && l[i] < l[i + 1])\n        {\n         \
    \   return false;\n        }\n    }\n    return true;\n}\nunittest\n{\n    alias\
    \ candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n\
    \    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpatdqs39q.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    bool increasing = true;\n    bool decreasing = true;\n    for (int\
    \ i = 1; i < l.length; i++)\n    {\n        if (l[i] < l[i - 1])\n           \
    \ increasing = false;\n        if (l[i] > l[i - 1])\n            decreasing =\
    \ false;\n    }\n    return increasing || decreasing;\n}\n/*\nReturn True if list\
    \ elements are monotonically increasing.\n*/\nunittest\n{\n    alias candidate\
    \ = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n    assert(candidate([1L,\
    \ 2L, 4L, 20L]) == true);\n    assert(candidate([1L, 20L, 4L, 10L]) == false);\n\
    \    assert(candidate([4L, 1L, 0L, -10L]) == true);\n    assert(candidate([4L,\
    \ 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n\
    \    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L,\
    \ 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxch3xhf6.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    bool increasing = true;\n    bool decreasing = true;\n    for (int\
    \ i = 1; i < l.length; i++)\n    {\n        if (l[i] < l[i - 1])\n           \
    \ increasing = false;\n        if (l[i] > l[i - 1])\n            decreasing =\
    \ false;\n    }\n    return increasing || decreasing;\n}\n/*\nReturn True if list\
    \ is sorted in ascending order.\n*/\nunittest\n{\n    alias candidate = monotonic;\n\
    \n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n    assert(candidate([1L,\
    \ 2L, 4L, 20L]) == true);\n    assert(candidate([1L, 20L, 4L, 10L]) == false);\n\
    \    assert(candidate([4L, 1L, 0L, -10L]) == true);\n    assert(candidate([4L,\
    \ 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n\
    \    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L,\
    \ 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_o3mxm0p.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    bool increasing = true;\n    bool decreasing = true;\n    for (int\
    \ i = 1; i < l.length; i++)\n    {\n        if (l[i] < l[i - 1])\n           \
    \ increasing = false;\n        if (l[i] > l[i - 1])\n            decreasing =\
    \ false;\n    }\n    return increasing || decreasing;\n}\nunittest\n{\n    alias\
    \ candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n\
    \    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvleztx1n.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    if (l.length < 2) \n    {\n        return true;\n    }\n    bool\
    \ increasing = l[1] > l[0];\n    foreach (i, e; l[1..$]) \n    {\n        if (increasing\
    \ && e < l[i - 1]) \n        {\n            return false;\n        }\n       \
    \ if (!increasing && e > l[i - 1]) \n        {\n            return false;\n  \
    \      }\n    }\n    return true;\n}\n/*\nReturn True if list elements are monotonically\
    \ increasing.\n                \n*/\nunittest\n{\n    alias candidate = monotonic;\n\
    \n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n    assert(candidate([1L,\
    \ 2L, 4L, 20L]) == true);\n    assert(candidate([1L, 20L, 4L, 10L]) == false);\n\
    \    assert(candidate([4L, 1L, 0L, -10L]) == true);\n    assert(candidate([4L,\
    \ 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n\
    \    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L,\
    \ 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5nljsn_p.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    if (l.length < 2) return true;\n    bool increasing = l[1] > l[0];\n\
    \    for (int i = 1; i < l.length; i++)\n    {\n        if (increasing)\n    \
    \    {\n            if (l[i] < l[i-1]) return false;\n        }\n        else\n\
    \        {\n            if (l[i] > l[i-1]) return false;\n        }\n    }\n \
    \   return true;\n}\nunittest\n{\n    alias candidate = monotonic;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L]) == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L]) == false);\n    assert(candidate([4L,\
    \ 1L, 0L, -10L]) == true);\n    assert(candidate([4L, 1L, 1L, 0L]) == true);\n\
    \    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpaxlx1_ed.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    bool increasing = true;\n    bool decreasing = true;\n    foreach(i,\
    \ j; l)\n    {\n        if(i > j)\n        {\n            increasing = false;\n\
    \        }\n        if(i < j)\n        {\n            decreasing = false;\n  \
    \      }\n    }\n    return increasing || decreasing;\n}\nunittest\n{\n    alias\
    \ candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n\
    \    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp29draz82.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    if (l.length < 2) return true;\n    bool increasing = l[1] > l[0];\n\
    \    for (int i = 2; i < l.length; i++)\n    {\n        if (increasing && l[i]\
    \ < l[i-1]) return false;\n        if (!increasing && l[i] > l[i-1]) return false;\n\
    \    }\n    return true;\n}\n/*\nReturn True if list is sorted.\n            \
    \    \n*/\nunittest\n{\n    alias candidate = monotonic;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L]) == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L]) == false);\n    assert(candidate([4L,\
    \ 1L, 0L, -10L]) == true);\n    assert(candidate([4L, 1L, 1L, 0L]) == true);\n\
    \    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgeenigfj.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    bool increasing = true;\n    bool decreasing = true;\n    for (int\
    \ i = 1; i < l.length; i++) {\n        if (l[i] < l[i - 1]) {\n            increasing\
    \ = false;\n        }\n        if (l[i] > l[i - 1]) {\n            decreasing\
    \ = false;\n        }\n    }\n    return increasing || decreasing;\n}\nunittest\n\
    {\n    alias candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L])\
    \ == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgf4lvfxm.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    if (l.length < 2)\n        return true;\n    bool increasing = l[1]\
    \ > l[0];\n    foreach (i, e; l[1..$])\n    {\n        if (increasing && e < l[i-1])\n\
    \            return false;\n        if (!increasing && e > l[i-1])\n         \
    \   return false;\n    }\n    return true;\n}\nunittest\n{\n    alias candidate\
    \ = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n    assert(candidate([1L,\
    \ 2L, 4L, 20L]) == true);\n    assert(candidate([1L, 20L, 4L, 10L]) == false);\n\
    \    assert(candidate([4L, 1L, 0L, -10L]) == true);\n    assert(candidate([4L,\
    \ 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n\
    \    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L,\
    \ 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxizbcqk5.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    bool increasing = true;\n    bool decreasing = true;\n    foreach(i,j;\
    \ zip(l[0..$-1],l[1..$]))\n    {\n        increasing &= (i < j);\n        decreasing\
    \ &= (i > j);\n    }\n    return increasing || decreasing;\n}\n/*\nReturn True\
    \ is list elements are monotonically increasing or decreasing.\n             \
    \   \n*/\nunittest\n{\n    alias candidate = monotonic;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L]) == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L]) == false);\n    assert(candidate([4L,\
    \ 1L, 0L, -10L]) == true);\n    assert(candidate([4L, 1L, 1L, 0L]) == true);\n\
    \    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphk6w27dw.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    bool increasing = true;\n    bool decreasing = true;\n    foreach(i,j;\
    \ zip(l[0..$-1],l[1..$]))\n    {\n        increasing &= i < j;\n        decreasing\
    \ &= i > j;\n    }\n    return increasing || decreasing;\n}\nunittest\n{\n   \
    \ alias candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n\
    \    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpj81alm3k.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    bool increasing = true;\n    bool decreasing = true;\n    for (int\
    \ i = 1; i < l.length; i++)\n    {\n        if (l[i] < l[i - 1])\n           \
    \ increasing = false;\n        if (l[i] > l[i - 1])\n            decreasing =\
    \ false;\n    }\n    return increasing || decreasing;\n}\n/*\nReturn True if list\
    \ elements are monotonically increasing.\n                \n*/\nunittest\n{\n\
    \    alias candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) ==\
    \ true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcizzd53q.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    bool increasing = true;\n    bool decreasing = true;\n    for (int\
    \ i = 1; i < l.length; i++)\n    {\n        if (l[i] < l[i - 1])\n           \
    \ increasing = false;\n        if (l[i] > l[i - 1])\n            decreasing =\
    \ false;\n    }\n    return increasing || decreasing;\n}\n/*\nReturn True if list\
    \ elements are monotonically increasing.\n                \n*/\nunittest\n{\n\
    \    alias candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) ==\
    \ true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcizzd53q.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    bool increasing = true;\n    bool decreasing = true;\n    foreach(i,x;l)\n\
    \    {\n        if(i>0)\n        {\n            if(l[i]<l[i-1])\n            {\n\
    \                increasing = false;\n            }\n            if(l[i]>l[i-1])\n\
    \            {\n                decreasing = false;\n            }\n        }\n\
    \    }\n    return increasing || decreasing;\n}\nunittest\n{\n    alias candidate\
    \ = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n    assert(candidate([1L,\
    \ 2L, 4L, 20L]) == true);\n    assert(candidate([1L, 20L, 4L, 10L]) == false);\n\
    \    assert(candidate([4L, 1L, 0L, -10L]) == true);\n    assert(candidate([4L,\
    \ 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n\
    \    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L,\
    \ 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpntv7feba.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    bool increasing = true;\n    bool decreasing = true;\n    foreach(i,\
    \ j; zip(l[0..$-1], l[1..$]))\n    {\n        increasing &= i < j;\n        decreasing\
    \ &= i > j;\n    }\n    return increasing || decreasing;\n}\n/*\nReturn True if\
    \ list elements are monotonically increasing.\n*/\nunittest\n{\n    alias candidate\
    \ = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n    assert(candidate([1L,\
    \ 2L, 4L, 20L]) == true);\n    assert(candidate([1L, 20L, 4L, 10L]) == false);\n\
    \    assert(candidate([4L, 1L, 0L, -10L]) == true);\n    assert(candidate([4L,\
    \ 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n\
    \    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L,\
    \ 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptwg3tid5.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    bool increasing = true;\n    bool decreasing = true;\n    for (int\
    \ i = 1; i < l.length; i++)\n    {\n        if (l[i] < l[i - 1])\n           \
    \ increasing = false;\n        if (l[i] > l[i - 1])\n            decreasing =\
    \ false;\n    }\n    return increasing || decreasing;\n}\nunittest\n{\n    alias\
    \ candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n\
    \    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvleztx1n.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    bool increasing = true;\n    bool decreasing = true;\n    for (size_t\
    \ i = 1; i < l.length; i++) \n    {\n        if (l[i-1] > l[i]) \n        {\n\
    \            increasing = false;\n        }\n        if (l[i-1] < l[i]) \n   \
    \     {\n            decreasing = false;\n        }\n    }\n    return increasing\
    \ || decreasing;\n}\n/*\nReturn True if list is sorted in ascending order.\n*/\n\
    unittest\n{\n    alias candidate = monotonic;\n\n    assert(candidate([1L, 2L,\
    \ 4L, 10L]) == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n   \
    \ assert(candidate([1L, 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L,\
    \ 0L, -10L]) == true);\n    assert(candidate([4L, 1L, 1L, 0L]) == true);\n   \
    \ assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqj6p61sc.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    bool increasing = true;\n    bool decreasing = true;\n    for (int\
    \ i = 1; i < l.length; i++)\n    {\n        if (l[i] < l[i - 1])\n           \
    \ increasing = false;\n        if (l[i] > l[i - 1])\n            decreasing =\
    \ false;\n    }\n    return increasing || decreasing;\n}\nunittest\n{\n    alias\
    \ candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n\
    \    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvleztx1n.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    bool increasing = true;\n    bool decreasing = true;\n    for (int\
    \ i = 1; i < l.length; i++)\n    {\n        if (l[i] < l[i - 1])\n           \
    \ increasing = false;\n        if (l[i] > l[i - 1])\n            decreasing =\
    \ false;\n    }\n    return increasing || decreasing;\n}\n/*\nReturn True if list\
    \ elements are monotonically increasing.\n*/\nunittest\n{\n    alias candidate\
    \ = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n    assert(candidate([1L,\
    \ 2L, 4L, 20L]) == true);\n    assert(candidate([1L, 20L, 4L, 10L]) == false);\n\
    \    assert(candidate([4L, 1L, 0L, -10L]) == true);\n    assert(candidate([4L,\
    \ 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n\
    \    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L,\
    \ 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxch3xhf6.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    bool increasing = true;\n    bool decreasing = true;\n    for (int\
    \ i = 1; i < l.length; i++) {\n        if (l[i] < l[i - 1]) {\n            increasing\
    \ = false;\n        }\n        if (l[i] > l[i - 1]) {\n            decreasing\
    \ = false;\n        }\n    }\n    return increasing || decreasing;\n}\nunittest\n\
    {\n    alias candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L])\
    \ == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgf4lvfxm.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    bool increasing = true;\n    bool decreasing = true;\n    foreach(i,j;\
    \ zip(l[0..$-1],l[1..$]))\n    {\n        increasing &= i<j;\n        decreasing\
    \ &= i>j;\n    }\n    return increasing || decreasing;\n}\nunittest\n{\n    alias\
    \ candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n\
    \    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0qnjbzl8.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    bool increasing = true;\n    bool decreasing = true;\n    for (int\
    \ i = 1; i < l.length; i++) {\n        if (l[i] < l[i - 1]) {\n            increasing\
    \ = false;\n        }\n        if (l[i] > l[i - 1]) {\n            decreasing\
    \ = false;\n        }\n    }\n    return increasing || decreasing;\n}\nunittest\n\
    {\n    alias candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L])\
    \ == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgf4lvfxm.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    bool increasing = true;\n    bool decreasing = true;\n    for (int\
    \ i = 1; i < l.length; i++)\n    {\n        if (l[i] < l[i - 1])\n           \
    \ increasing = false;\n        if (l[i] > l[i - 1])\n            decreasing =\
    \ false;\n    }\n    return increasing || decreasing;\n}\nunittest\n{\n    alias\
    \ candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n\
    \    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvleztx1n.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    if (l.length < 2)\n        return true;\n    bool increasing = l[1]\
    \ > l[0];\n    for (int i = 1; i < l.length - 1; i++)\n    {\n        if (increasing\
    \ && l[i + 1] < l[i])\n            return false;\n        if (!increasing && l[i\
    \ + 1] > l[i])\n            return false;\n    }\n    return true;\n}\nunittest\n\
    {\n    alias candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L])\
    \ == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp29r1du1o.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    if (l.length < 2)\n        return true;\n    bool increasing = l[1]\
    \ > l[0];\n    for (int i = 2; i < l.length; i++)\n    {\n        if (increasing)\n\
    \        {\n            if (l[i] < l[i - 1])\n                return false;\n\
    \        }\n        else\n        {\n            if (l[i] > l[i - 1])\n      \
    \          return false;\n        }\n    }\n    return true;\n}\nunittest\n{\n\
    \    alias candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) ==\
    \ true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfurqqdnm.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    if (l.length < 2)\n        return true;\n    bool increasing = l[1]\
    \ > l[0];\n    for (int i = 1; i < l.length; i++)\n    {\n        if (increasing)\n\
    \        {\n            if (l[i] < l[i - 1])\n                return false;\n\
    \        }\n        else\n        {\n            if (l[i] > l[i - 1])\n      \
    \          return false;\n        }\n    }\n    return true;\n}\nunittest\n{\n\
    \    alias candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) ==\
    \ true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpn9lb9pbn.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    bool increasing = true;\n    bool decreasing = true;\n    for (int\
    \ i = 1; i < l.length; i++)\n    {\n        if (l[i] < l[i - 1])\n           \
    \ increasing = false;\n        if (l[i] > l[i - 1])\n            decreasing =\
    \ false;\n    }\n    return increasing || decreasing;\n}\n/*\nReturn True if list\
    \ elements are monotonically increasing.\n*/\nunittest\n{\n    alias candidate\
    \ = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n    assert(candidate([1L,\
    \ 2L, 4L, 20L]) == true);\n    assert(candidate([1L, 20L, 4L, 10L]) == false);\n\
    \    assert(candidate([4L, 1L, 0L, -10L]) == true);\n    assert(candidate([4L,\
    \ 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n\
    \    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L,\
    \ 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxch3xhf6.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    bool increasing = true;\n    bool decreasing = true;\n    for (int\
    \ i = 1; i < l.length; i++)\n    {\n        if (l[i] < l[i - 1])\n           \
    \ increasing = false;\n        if (l[i] > l[i - 1])\n            decreasing =\
    \ false;\n    }\n    return increasing || decreasing;\n}\n/*\nReturn True if list\
    \ elements are monotonically increasing.\n*/\nunittest\n{\n    alias candidate\
    \ = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n    assert(candidate([1L,\
    \ 2L, 4L, 20L]) == true);\n    assert(candidate([1L, 20L, 4L, 10L]) == false);\n\
    \    assert(candidate([4L, 1L, 0L, -10L]) == true);\n    assert(candidate([4L,\
    \ 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n\
    \    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L,\
    \ 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxch3xhf6.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    if (l.length < 2)\n        return true;\n    bool increasing = l[1]\
    \ > l[0];\n    for (int i = 1; i < l.length; i++)\n    {\n        if (increasing)\n\
    \        {\n            if (l[i] < l[i - 1])\n                return false;\n\
    \        }\n        else\n        {\n            if (l[i] > l[i - 1])\n      \
    \          return false;\n        }\n    }\n    return true;\n}\n/*\nReturn True\
    \ if list elements are monotonically increasing or decreasing.\n             \
    \   \n*/\nunittest\n{\n    alias candidate = monotonic;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L]) == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L]) == false);\n    assert(candidate([4L,\
    \ 1L, 0L, -10L]) == true);\n    assert(candidate([4L, 1L, 1L, 0L]) == true);\n\
    \    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3zh9aae0.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    if (l.length < 2) return true;\n    bool increasing = l[1] > l[0];\n\
    \    foreach (i, e; l[1..$])\n    {\n        if (e > l[i])\n        {\n      \
    \      if (!increasing) return false;\n        }\n        else if (e < l[i])\n\
    \        {\n            if (increasing) return false;\n        }\n    }\n    return\
    \ true;\n}\nunittest\n{\n    alias candidate = monotonic;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L]) == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L]) == false);\n    assert(candidate([4L,\
    \ 1L, 0L, -10L]) == true);\n    assert(candidate([4L, 1L, 1L, 0L]) == true);\n\
    \    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpu774jt7m.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    bool increasing = true;\n    bool decreasing = true;\n    foreach(i,\
    \ j; l)\n    {\n        if(i > j)\n        {\n            increasing = false;\n\
    \        }\n        if(i < j)\n        {\n            decreasing = false;\n  \
    \      }\n    }\n    return increasing || decreasing;\n}\nunittest\n{\n    alias\
    \ candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n\
    \    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp29draz82.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    if (l.length < 2) \n        return true;\n    bool increasing =\
    \ l[1] > l[0];\n    for (int i = 2; i < l.length; i++) \n    {\n        if (increasing)\
    \ \n        {\n            if (l[i] < l[i - 1]) \n                return false;\n\
    \        } \n        else \n        {\n            if (l[i] > l[i - 1]) \n   \
    \             return false;\n        }\n    }\n    return true;\n}\nunittest\n\
    {\n    alias candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L])\
    \ == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4dcg8qee.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    if (l.length < 2)\n        return true;\n    bool increasing = l[1]\
    \ > l[0];\n    for (int i = 2; i < l.length; i++)\n    {\n        if (increasing\
    \ && l[i] < l[i - 1])\n            return false;\n        if (!increasing && l[i]\
    \ > l[i - 1])\n            return false;\n    }\n    return true;\n}\nunittest\n\
    {\n    alias candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L])\
    \ == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplc1hl9i5.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    if (l.length < 2) return true;\n    bool increasing = l[1] > l[0];\n\
    \    for (int i = 1; i < l.length; i++)\n    {\n        if (increasing)\n    \
    \    {\n            if (l[i] < l[i-1]) return false;\n        }\n        else\n\
    \        {\n            if (l[i] > l[i-1]) return false;\n        }\n    }\n \
    \   return true;\n}\nunittest\n{\n    alias candidate = monotonic;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L]) == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L]) == false);\n    assert(candidate([4L,\
    \ 1L, 0L, -10L]) == true);\n    assert(candidate([4L, 1L, 1L, 0L]) == true);\n\
    \    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpaxlx1_ed.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    bool increasing = true;\n    bool decreasing = true;\n    foreach(i,e;\
    \ l)\n    {\n        if(i>0)\n        {\n            if(e>l[i-1])\n          \
    \      decreasing = false;\n            if(e<l[i-1])\n                increasing\
    \ = false;\n        }\n    }\n    return increasing || decreasing;\n}\n/*\nReturn\
    \ True is list elements are monotonically increasing or decreasing.\n        \
    \        \n*/\nunittest\n{\n    alias candidate = monotonic;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L]) == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L]) == false);\n    assert(candidate([4L,\
    \ 1L, 0L, -10L]) == true);\n    assert(candidate([4L, 1L, 1L, 0L]) == true);\n\
    \    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmph59gxbfx.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    bool increasing = true;\n    bool decreasing = true;\n    foreach(i,e;\
    \ l)\n    {\n        if(i > 0)\n        {\n            if(e < l[i-1])\n      \
    \      {\n                increasing = false;\n            }\n            if(e\
    \ > l[i-1])\n            {\n                decreasing = false;\n            }\n\
    \        }\n    }\n    return increasing || decreasing;\n}\n/*\nReturn True is\
    \ list elements are monotonically increasing or decreasing.\n                \n\
    */\nunittest\n{\n    alias candidate = monotonic;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L]) == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L]) == false);\n    assert(candidate([4L,\
    \ 1L, 0L, -10L]) == true);\n    assert(candidate([4L, 1L, 1L, 0L]) == true);\n\
    \    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp15cv6b9r.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    bool increasing = true;\n    bool decreasing = true;\n    for (int\
    \ i = 1; i < l.length; i++)\n    {\n        if (l[i] < l[i - 1])\n           \
    \ increasing = false;\n        if (l[i] > l[i - 1])\n            decreasing =\
    \ false;\n    }\n    return increasing || decreasing;\n}\nunittest\n{\n    alias\
    \ candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n\
    \    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvleztx1n.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    bool increasing = true;\n    bool decreasing = true;\n    foreach(i,\
    \ j; l)\n    {\n        if(i > j)\n        {\n            increasing = false;\n\
    \        }\n        if(i < j)\n        {\n            decreasing = false;\n  \
    \      }\n    }\n    return increasing || decreasing;\n}\nunittest\n{\n    alias\
    \ candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n\
    \    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp29draz82.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    if (l.length < 2)\n        return true;\n    if (l[0] < l[1])\n\
    \    {\n        for (int i = 1; i < l.length - 1; i++)\n        {\n          \
    \  if (l[i] > l[i + 1])\n                return false;\n        }\n    }\n   \
    \ else\n    {\n        for (int i = 1; i < l.length - 1; i++)\n        {\n   \
    \         if (l[i] < l[i + 1])\n                return false;\n        }\n   \
    \ }\n    return true;\n}\nunittest\n{\n    alias candidate = monotonic;\n\n  \
    \  assert(candidate([1L, 2L, 4L, 10L]) == true);\n    assert(candidate([1L, 2L,\
    \ 4L, 20L]) == true);\n    assert(candidate([1L, 20L, 4L, 10L]) == false);\n \
    \   assert(candidate([4L, 1L, 0L, -10L]) == true);\n    assert(candidate([4L,\
    \ 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n\
    \    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L,\
    \ 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6ecsiz2u.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    if (l.length < 2)\n        return true;\n    bool increasing = l[1]\
    \ > l[0];\n    for (int i = 1; i < l.length; i++)\n    {\n        if (increasing\
    \ && l[i] < l[i - 1])\n            return false;\n        if (!increasing && l[i]\
    \ > l[i - 1])\n            return false;\n    }\n    return true;\n}\n/*\nReturn\
    \ True if list elements are monotonically increasing.\n                \n*/\n\
    unittest\n{\n    alias candidate = monotonic;\n\n    assert(candidate([1L, 2L,\
    \ 4L, 10L]) == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n   \
    \ assert(candidate([1L, 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L,\
    \ 0L, -10L]) == true);\n    assert(candidate([4L, 1L, 1L, 0L]) == true);\n   \
    \ assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprgbzfcds.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    long[] l2 = l.dup;\n    l2.sort;\n    return l == l2 || l == l2.reverse;\n\
    }\nunittest\n{\n    alias candidate = monotonic;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L]) == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L]) == false);\n    assert(candidate([4L,\
    \ 1L, 0L, -10L]) == true);\n    assert(candidate([4L, 1L, 1L, 0L]) == true);\n\
    \    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyebnr1bz.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    bool increasing = true;\n    bool decreasing = true;\n    foreach(i,\
    \ j; zip(l[0..$-1], l[1..$]))\n    {\n        increasing &= i < j;\n        decreasing\
    \ &= i > j;\n    }\n    return increasing || decreasing;\n}\nunittest\n{\n   \
    \ alias candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n\
    \    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbmd5fjn9.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    if (l.length < 2) return true;\n    bool increasing = l[1] > l[0];\n\
    \    for (int i = 2; i < l.length; i++)\n    {\n        if (increasing)\n    \
    \    {\n            if (l[i] < l[i-1]) return false;\n        }\n        else\n\
    \        {\n            if (l[i] > l[i-1]) return false;\n        }\n    }\n \
    \   return true;\n}\nunittest\n{\n    alias candidate = monotonic;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L]) == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L]) == false);\n    assert(candidate([4L,\
    \ 1L, 0L, -10L]) == true);\n    assert(candidate([4L, 1L, 1L, 0L]) == true);\n\
    \    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnjjll8mp.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    bool increasing = true;\n    bool decreasing = true;\n    for (int\
    \ i = 1; i < l.length; i++)\n    {\n        if (l[i] < l[i - 1])\n           \
    \ increasing = false;\n        if (l[i] > l[i - 1])\n            decreasing =\
    \ false;\n    }\n    return increasing || decreasing;\n}\n/*\nReturn True if all\
    \ elements of the list are unique.\n*/\nunittest\n{\n    alias candidate = monotonic;\n\
    \n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n    assert(candidate([1L,\
    \ 2L, 4L, 20L]) == true);\n    assert(candidate([1L, 20L, 4L, 10L]) == false);\n\
    \    assert(candidate([4L, 1L, 0L, -10L]) == true);\n    assert(candidate([4L,\
    \ 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n\
    \    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L,\
    \ 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplhnvgiki.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    bool increasing = true;\n    bool decreasing = true;\n    for (int\
    \ i = 1; i < l.length; i++)\n    {\n        if (l[i] < l[i - 1])\n           \
    \ increasing = false;\n        if (l[i] > l[i - 1])\n            decreasing =\
    \ false;\n    }\n    return increasing || decreasing;\n}\nunittest\n{\n    alias\
    \ candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n\
    \    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvleztx1n.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    bool increasing = true;\n    bool decreasing = true;\n    for (int\
    \ i = 1; i < l.length; i++)\n    {\n        if (l[i] < l[i - 1])\n           \
    \ increasing = false;\n        if (l[i] > l[i - 1])\n            decreasing =\
    \ false;\n    }\n    return increasing || decreasing;\n}\n/*\nReturn True if list\
    \ elements are monotonically increasing.\n*/\nunittest\n{\n    alias candidate\
    \ = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n    assert(candidate([1L,\
    \ 2L, 4L, 20L]) == true);\n    assert(candidate([1L, 20L, 4L, 10L]) == false);\n\
    \    assert(candidate([4L, 1L, 0L, -10L]) == true);\n    assert(candidate([4L,\
    \ 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n\
    \    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L,\
    \ 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxch3xhf6.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    if (l.length == 0) return true;\n    bool increasing = true;\n \
    \   foreach (i, v; l) {\n        if (i > 0) {\n            if (increasing) {\n\
    \                if (v < l[i-1]) {\n                    increasing = false;\n\
    \                }\n            } else {\n                if (v > l[i-1]) {\n\
    \                    return false;\n                }\n            }\n       \
    \ }\n    }\n    return true;\n}\nunittest\n{\n    alias candidate = monotonic;\n\
    \n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n    assert(candidate([1L,\
    \ 2L, 4L, 20L]) == true);\n    assert(candidate([1L, 20L, 4L, 10L]) == false);\n\
    \    assert(candidate([4L, 1L, 0L, -10L]) == true);\n    assert(candidate([4L,\
    \ 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n\
    \    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L,\
    \ 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnmhr_968.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    if (l.length < 2)\n        return true;\n    bool increasing = l[1]\
    \ > l[0];\n    for (int i = 1; i < l.length; i++)\n    {\n        if (increasing)\n\
    \        {\n            if (l[i] < l[i - 1])\n                return false;\n\
    \        }\n        else\n        {\n            if (l[i] > l[i - 1])\n      \
    \          return false;\n        }\n    }\n    return true;\n}\n/*\nReturn True\
    \ if list elements are monotonically increasing.\n                \n*/\nunittest\n\
    {\n    alias candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L])\
    \ == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1cwna6x7.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    if (l.length < 2) return true;\n    bool increasing = l[1] > l[0];\n\
    \    for (int i = 1; i < l.length; i++)\n    {\n        if (l[i] > l[i-1] != increasing)\
    \ return false;\n    }\n    return true;\n}\nunittest\n{\n    alias candidate\
    \ = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n    assert(candidate([1L,\
    \ 2L, 4L, 20L]) == true);\n    assert(candidate([1L, 20L, 4L, 10L]) == false);\n\
    \    assert(candidate([4L, 1L, 0L, -10L]) == true);\n    assert(candidate([4L,\
    \ 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n\
    \    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L,\
    \ 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmplq5d6eqq.d(13): Error: found \''!=\'' when expecting \'')\''\n/tmp/tmplq5d6eqq.d(13):
    Error: found \'')\'' when expecting \'';\'' following statement\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmplq5d6eqq.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    bool increasing = true;\n    bool decreasing = true;\n    foreach(i,e;\
    \ l)\n    {\n        if(i != 0)\n        {\n            increasing &= e > l[i-1];\n\
    \            decreasing &= e < l[i-1];\n        }\n    }\n    return increasing\
    \ || decreasing;\n}\nunittest\n{\n    alias candidate = monotonic;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L]) == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L]) == false);\n    assert(candidate([4L,\
    \ 1L, 0L, -10L]) == true);\n    assert(candidate([4L, 1L, 1L, 0L]) == true);\n\
    \    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpifin3ws3.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    bool increasing = true;\n    bool decreasing = true;\n    foreach(i,\
    \ j; l)\n    {\n        if(j < i)\n        {\n            increasing = false;\n\
    \        }\n        if(j > i)\n        {\n            decreasing = false;\n  \
    \      }\n    }\n    return increasing || decreasing;\n}\nunittest\n{\n    alias\
    \ candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n\
    \    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfifnl2za.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    return l.length < 2 || l[0] == l[1] || l[0] < l[1] == all!((a, b)\
    \ => a <= b)(l);\n}\nunittest\n{\n    alias candidate = monotonic;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L]) == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L]) == false);\n    assert(candidate([4L,\
    \ 1L, 0L, -10L]) == true);\n    assert(candidate([4L, 1L, 1L, 0L]) == true);\n\
    \    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp8dya68dc.d(9): Error: found \''==\'' when expecting \'';\''
    following return statement\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8dya68dc.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    bool increasing = true;\n    bool decreasing = true;\n    foreach(i,\
    \ j; l)\n    {\n        if(i > j)\n        {\n            increasing = false;\n\
    \        }\n        if(i < j)\n        {\n            decreasing = false;\n  \
    \      }\n    }\n    return increasing || decreasing;\n}\nunittest\n{\n    alias\
    \ candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n\
    \    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp29draz82.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    bool increasing = true;\n    bool decreasing = true;\n    for (int\
    \ i = 1; i < l.length; i++) {\n        if (l[i] < l[i - 1]) {\n            increasing\
    \ = false;\n        }\n        if (l[i] > l[i - 1]) {\n            decreasing\
    \ = false;\n        }\n    }\n    return increasing || decreasing;\n}\n/*\nReturn\
    \ True if list is sorted in ascending order.\n                \n*/\nunittest\n\
    {\n    alias candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L])\
    \ == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpt9_j0dow.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    if (l.length < 2) return true;\n    bool increasing = l[1] > l[0];\n\
    \    for (int i = 1; i < l.length; i++)\n    {\n        if (increasing)\n    \
    \    {\n            if (l[i] < l[i-1]) return false;\n        }\n        else\n\
    \        {\n            if (l[i] > l[i-1]) return false;\n        }\n    }\n \
    \   return true;\n}\nunittest\n{\n    alias candidate = monotonic;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L]) == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L]) == false);\n    assert(candidate([4L,\
    \ 1L, 0L, -10L]) == true);\n    assert(candidate([4L, 1L, 1L, 0L]) == true);\n\
    \    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpaxlx1_ed.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    if (l.length < 2) return true;\n    bool increasing = l[1] > l[0];\n\
    \    for (int i = 2; i < l.length; i++)\n    {\n        if (increasing && l[i]\
    \ < l[i-1]) return false;\n        if (!increasing && l[i] > l[i-1]) return false;\n\
    \    }\n    return true;\n}\nunittest\n{\n    alias candidate = monotonic;\n\n\
    \    assert(candidate([1L, 2L, 4L, 10L]) == true);\n    assert(candidate([1L,\
    \ 2L, 4L, 20L]) == true);\n    assert(candidate([1L, 20L, 4L, 10L]) == false);\n\
    \    assert(candidate([4L, 1L, 0L, -10L]) == true);\n    assert(candidate([4L,\
    \ 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n\
    \    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L,\
    \ 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphyp7caec.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    bool increasing = true;\n    bool decreasing = true;\n    for (int\
    \ i = 1; i < l.length; i++) {\n        if (l[i] < l[i - 1]) {\n            increasing\
    \ = false;\n        }\n        if (l[i] > l[i - 1]) {\n            decreasing\
    \ = false;\n        }\n    }\n    return increasing || decreasing;\n}\nunittest\n\
    {\n    alias candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L])\
    \ == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgf4lvfxm.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    bool increasing = true;\n    bool decreasing = true;\n    for (int\
    \ i = 1; i < l.length; i++)\n    {\n        if (l[i] < l[i - 1])\n           \
    \ increasing = false;\n        if (l[i] > l[i - 1])\n            decreasing =\
    \ false;\n    }\n    return increasing || decreasing;\n}\nunittest\n{\n    alias\
    \ candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n\
    \    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvleztx1n.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    bool increasing = true;\n    bool decreasing = true;\n    for (int\
    \ i = 1; i < l.length; i++)\n    {\n        if (l[i] < l[i - 1])\n           \
    \ increasing = false;\n        if (l[i] > l[i - 1])\n            decreasing =\
    \ false;\n    }\n    return increasing || decreasing;\n}\nunittest\n{\n    alias\
    \ candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n\
    \    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvleztx1n.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    bool increasing = true;\n    bool decreasing = true;\n    for (int\
    \ i = 1; i < l.length; i++)\n    {\n        if (l[i] < l[i - 1])\n           \
    \ increasing = false;\n        if (l[i] > l[i - 1])\n            decreasing =\
    \ false;\n    }\n    return increasing || decreasing;\n}\nunittest\n{\n    alias\
    \ candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n\
    \    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvleztx1n.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    if (l.length < 2)\n        return true;\n    bool increasing = l[1]\
    \ > l[0];\n    for (int i = 1; i < l.length; i++)\n    {\n        if (increasing\
    \ && l[i] < l[i - 1])\n            return false;\n        if (!increasing && l[i]\
    \ > l[i - 1])\n            return false;\n    }\n    return true;\n}\n/*\nReturn\
    \ True if list is sorted.\n*/\nunittest\n{\n    alias candidate = monotonic;\n\
    \n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n    assert(candidate([1L,\
    \ 2L, 4L, 20L]) == true);\n    assert(candidate([1L, 20L, 4L, 10L]) == false);\n\
    \    assert(candidate([4L, 1L, 0L, -10L]) == true);\n    assert(candidate([4L,\
    \ 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n\
    \    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L,\
    \ 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7j7yizae.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    if (l.length == 0)\n    {\n        return true;\n    }\n    else\
    \ if (l.length == 1)\n    {\n        return true;\n    }\n    else\n    {\n  \
    \      long[] diffs = l[1..$].map!(a => a - l[$-1]);\n        return diffs.all!(a\
    \ => a == diffs[0]);\n    }\n}\nunittest\n{\n    alias candidate = monotonic;\n\
    \n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n    assert(candidate([1L,\
    \ 2L, 4L, 20L]) == true);\n    assert(candidate([1L, 20L, 4L, 10L]) == false);\n\
    \    assert(candidate([4L, 1L, 0L, -10L]) == true);\n    assert(candidate([4L,\
    \ 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n\
    \    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L,\
    \ 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp90t_1h4v.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    if (l.length < 2)\n        return true;\n    bool increasing = l[1]\
    \ > l[0];\n    for (int i = 2; i < l.length; i++)\n    {\n        if (increasing\
    \ && l[i] < l[i - 1])\n            return false;\n        if (!increasing && l[i]\
    \ > l[i - 1])\n            return false;\n    }\n    return true;\n}\nunittest\n\
    {\n    alias candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L])\
    \ == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplc1hl9i5.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    bool increasing = true;\n    bool decreasing = true;\n    foreach(i,j;\
    \ zip(l[0..$-1],l[1..$]))\n    {\n        increasing &= i < j;\n        decreasing\
    \ &= i > j;\n    }\n    return increasing || decreasing;\n}\nunittest\n{\n   \
    \ alias candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n\
    \    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpj81alm3k.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    if (l.length < 2)\n        return true;\n    bool increasing = l[1]\
    \ > l[0];\n    for (int i = 1; i < l.length; i++)\n    {\n        if (increasing\
    \ && l[i] < l[i - 1])\n            return false;\n        if (!increasing && l[i]\
    \ > l[i - 1])\n            return false;\n    }\n    return true;\n}\nunittest\n\
    {\n    alias candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L])\
    \ == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp581jwubw.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    if (l.length < 2)\n        return true;\n    bool increasing = l[1]\
    \ > l[0];\n    for (int i = 1; i < l.length; i++)\n    {\n        if (increasing)\n\
    \        {\n            if (l[i] < l[i - 1])\n                return false;\n\
    \        }\n        else\n        {\n            if (l[i] > l[i - 1])\n      \
    \          return false;\n        }\n    }\n    return true;\n}\nunittest\n{\n\
    \    alias candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) ==\
    \ true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpn9lb9pbn.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    if (l.length < 2) return true;\n    bool increasing = l[1] > l[0];\n\
    \    for (int i = 1; i < l.length; i++)\n    {\n        if (increasing)\n    \
    \    {\n            if (l[i] < l[i-1]) return false;\n        }\n        else\n\
    \        {\n            if (l[i] > l[i-1]) return false;\n        }\n    }\n \
    \   return true;\n}\nunittest\n{\n    alias candidate = monotonic;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L]) == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L]) == false);\n    assert(candidate([4L,\
    \ 1L, 0L, -10L]) == true);\n    assert(candidate([4L, 1L, 1L, 0L]) == true);\n\
    \    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpaxlx1_ed.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    bool increasing = true;\n    bool decreasing = true;\n    for (int\
    \ i = 1; i < l.length; i++) {\n        if (l[i] < l[i - 1]) {\n            increasing\
    \ = false;\n        }\n        if (l[i] > l[i - 1]) {\n            decreasing\
    \ = false;\n        }\n    }\n    return increasing || decreasing;\n}\n/*\nReturn\
    \ True if list elements are monotonically increasing.\n*/\nunittest\n{\n    alias\
    \ candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n\
    \    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpx03ptnc5.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    if (l.length < 2) return true;\n    bool increasing = l[1] > l[0];\n\
    \    for (int i = 2; i < l.length; i++)\n    {\n        if (increasing)\n    \
    \    {\n            if (l[i] < l[i-1]) return false;\n        }\n        else\n\
    \        {\n            if (l[i] > l[i-1]) return false;\n        }\n    }\n \
    \   return true;\n}\nunittest\n{\n    alias candidate = monotonic;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L]) == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L]) == false);\n    assert(candidate([4L,\
    \ 1L, 0L, -10L]) == true);\n    assert(candidate([4L, 1L, 1L, 0L]) == true);\n\
    \    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnjjll8mp.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    if (l.length < 2) return true;\n    bool increasing = l[1] > l[0];\n\
    \    for (int i = 1; i < l.length; i++)\n    {\n        if (increasing && l[i]\
    \ < l[i-1]) return false;\n        if (!increasing && l[i] > l[i-1]) return false;\n\
    \    }\n    return true;\n}\nunittest\n{\n    alias candidate = monotonic;\n\n\
    \    assert(candidate([1L, 2L, 4L, 10L]) == true);\n    assert(candidate([1L,\
    \ 2L, 4L, 20L]) == true);\n    assert(candidate([1L, 20L, 4L, 10L]) == false);\n\
    \    assert(candidate([4L, 1L, 0L, -10L]) == true);\n    assert(candidate([4L,\
    \ 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n\
    \    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L,\
    \ 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg4xt3z0_.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    bool increasing = true;\n    bool decreasing = true;\n    for (int\
    \ i = 1; i < l.length; i++) {\n        if (l[i] < l[i - 1])\n            increasing\
    \ = false;\n        if (l[i] > l[i - 1])\n            decreasing = false;\n  \
    \  }\n    return increasing || decreasing;\n}\n/*\nReturn True if list is sorted\
    \ in ascending order.\n*/\nunittest\n{\n    alias candidate = monotonic;\n\n \
    \   assert(candidate([1L, 2L, 4L, 10L]) == true);\n    assert(candidate([1L, 2L,\
    \ 4L, 20L]) == true);\n    assert(candidate([1L, 20L, 4L, 10L]) == false);\n \
    \   assert(candidate([4L, 1L, 0L, -10L]) == true);\n    assert(candidate([4L,\
    \ 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n\
    \    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L,\
    \ 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp272ceutz.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    if (l.length < 2) return true;\n    bool increasing = l[1] > l[0];\n\
    \    for (int i = 1; i < l.length; i++) \n    {\n        if (increasing) \n  \
    \      {\n            if (l[i] < l[i - 1]) return false;\n        } \n       \
    \ else \n        {\n            if (l[i] > l[i - 1]) return false;\n        }\n\
    \    }\n    return true;\n}\n/*\nReturn True if list elements are monotonically\
    \ increasing.\n                \n*/\nunittest\n{\n    alias candidate = monotonic;\n\
    \n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n    assert(candidate([1L,\
    \ 2L, 4L, 20L]) == true);\n    assert(candidate([1L, 20L, 4L, 10L]) == false);\n\
    \    assert(candidate([4L, 1L, 0L, -10L]) == true);\n    assert(candidate([4L,\
    \ 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n\
    \    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L,\
    \ 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmpipvhtn.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    if (l.length < 2) return true;\n    bool increasing = l[1] > l[0];\n\
    \    for (int i = 1; i < l.length; i++)\n    {\n        if (increasing)\n    \
    \    {\n            if (l[i] < l[i-1]) return false;\n        }\n        else\n\
    \        {\n            if (l[i] > l[i-1]) return false;\n        }\n    }\n \
    \   return true;\n}\nunittest\n{\n    alias candidate = monotonic;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L]) == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L]) == false);\n    assert(candidate([4L,\
    \ 1L, 0L, -10L]) == true);\n    assert(candidate([4L, 1L, 1L, 0L]) == true);\n\
    \    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpaxlx1_ed.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    if (l.length < 2) return true;\n    bool increasing = l[1] > l[0];\n\
    \    foreach (i, v; l[1..$])\n    {\n        if (increasing && v < l[i-1]) return\
    \ false;\n        if (!increasing && v > l[i-1]) return false;\n    }\n    return\
    \ true;\n}\nunittest\n{\n    alias candidate = monotonic;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L]) == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L]) == false);\n    assert(candidate([4L,\
    \ 1L, 0L, -10L]) == true);\n    assert(candidate([4L, 1L, 1L, 0L]) == true);\n\
    \    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpd4ffuuwc.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    bool increasing = true;\n    bool decreasing = true;\n    for (int\
    \ i = 1; i < l.length; i++)\n    {\n        if (l[i] < l[i - 1])\n           \
    \ increasing = false;\n        if (l[i] > l[i - 1])\n            decreasing =\
    \ false;\n    }\n    return increasing || decreasing;\n}\n/*\nReturn True if list\
    \ elements are monotonically increasing.\n                \n*/\nunittest\n{\n\
    \    alias candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) ==\
    \ true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcizzd53q.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    if (l.length < 2) \n        return true;\n    bool increasing =\
    \ l[1] > l[0];\n    foreach (i, v; l[1..$]) \n    {\n        if (increasing) \n\
    \        {\n            if (v < l[i - 1]) \n                return false;\n  \
    \      } \n        else \n        {\n            if (v > l[i - 1]) \n        \
    \        return false;\n        }\n    }\n    return true;\n}\nunittest\n{\n \
    \   alias candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) ==\
    \ true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpy6f3tlnr.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    if (l.length < 2) \n        return true;\n    bool increasing =\
    \ l[1] > l[0];\n    foreach (i, e; l[1..$]) \n    {\n        if (increasing &&\
    \ e < l[i-1]) \n            return false;\n        if (!increasing && e > l[i-1])\
    \ \n            return false;\n    }\n    return true;\n}\n/*\nReturn True if\
    \ list elements are monotonically increasing.\n                \n*/\nunittest\n\
    {\n    alias candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L])\
    \ == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvsy3wnsm.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    if (l.length < 2)\n        return true;\n    bool increasing = l[1]\
    \ > l[0];\n    for (int i = 1; i < l.length - 1; i++)\n    {\n        if (increasing\
    \ && l[i + 1] < l[i])\n            return false;\n        if (!increasing && l[i\
    \ + 1] > l[i])\n            return false;\n    }\n    return true;\n}\nunittest\n\
    {\n    alias candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L])\
    \ == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp29r1du1o.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    bool increasing = true;\n    bool decreasing = true;\n    for (int\
    \ i = 1; i < l.length; i++)\n    {\n        if (l[i] < l[i - 1])\n           \
    \ increasing = false;\n        if (l[i] > l[i - 1])\n            decreasing =\
    \ false;\n    }\n    return increasing || decreasing;\n}\nunittest\n{\n    alias\
    \ candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n\
    \    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvleztx1n.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    bool increasing = true;\n    bool decreasing = true;\n    if (l.length\
    \ < 2)\n        return true;\n    for (int i = 1; i < l.length; i++)\n    {\n\
    \        if (l[i] < l[i - 1])\n            increasing = false;\n        if (l[i]\
    \ > l[i - 1])\n            decreasing = false;\n    }\n    return increasing ||\
    \ decreasing;\n}\nunittest\n{\n    alias candidate = monotonic;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L]) == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L]) == false);\n    assert(candidate([4L,\
    \ 1L, 0L, -10L]) == true);\n    assert(candidate([4L, 1L, 1L, 0L]) == true);\n\
    \    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpj66mtg1p.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    if (l.length < 2) return true;\n    bool increasing = l[1] > l[0];\n\
    \    foreach (i, e; l[1..$])\n    {\n        if (e > l[i])\n        {\n      \
    \      if (!increasing) return false;\n        }\n        else if (e < l[i])\n\
    \        {\n            if (increasing) return false;\n        }\n    }\n    return\
    \ true;\n}\nunittest\n{\n    alias candidate = monotonic;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L]) == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L]) == false);\n    assert(candidate([4L,\
    \ 1L, 0L, -10L]) == true);\n    assert(candidate([4L, 1L, 1L, 0L]) == true);\n\
    \    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpu774jt7m.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    if (l.length < 2) return true;\n    bool increasing = l[1] > l[0];\n\
    \    for (int i = 1; i < l.length; i++)\n    {\n        if (increasing)\n    \
    \    {\n            if (l[i] < l[i-1]) return false;\n        }\n        else\n\
    \        {\n            if (l[i] > l[i-1]) return false;\n        }\n    }\n \
    \   return true;\n}\nunittest\n{\n    alias candidate = monotonic;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L]) == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L]) == false);\n    assert(candidate([4L,\
    \ 1L, 0L, -10L]) == true);\n    assert(candidate([4L, 1L, 1L, 0L]) == true);\n\
    \    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpaxlx1_ed.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    if (l.length < 2) return true;\n    bool increasing = l[1] > l[0];\n\
    \    for (int i = 1; i < l.length; i++) \n    {\n        if (increasing) \n  \
    \      {\n            if (l[i] < l[i - 1]) return false;\n        } \n       \
    \ else \n        {\n            if (l[i] > l[i - 1]) return false;\n        }\n\
    \    }\n    return true;\n}\nunittest\n{\n    alias candidate = monotonic;\n\n\
    \    assert(candidate([1L, 2L, 4L, 10L]) == true);\n    assert(candidate([1L,\
    \ 2L, 4L, 20L]) == true);\n    assert(candidate([1L, 20L, 4L, 10L]) == false);\n\
    \    assert(candidate([4L, 1L, 0L, -10L]) == true);\n    assert(candidate([4L,\
    \ 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n\
    \    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L,\
    \ 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyuf15f__.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    if (l.length < 2) \n    {\n        return true;\n    }\n    bool\
    \ increasing = l[1] > l[0];\n    for (int i = 1; i < l.length; i++) \n    {\n\
    \        if (increasing) \n        {\n            if (l[i] < l[i - 1]) \n    \
    \        {\n                return false;\n            }\n        } \n       \
    \ else \n        {\n            if (l[i] > l[i - 1]) \n            {\n       \
    \         return false;\n            }\n        }\n    }\n    return true;\n}\n\
    /*\nReturn True if list elements are monotonically increasing.\n             \
    \   \n*/\nunittest\n{\n    alias candidate = monotonic;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L]) == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L]) == false);\n    assert(candidate([4L,\
    \ 1L, 0L, -10L]) == true);\n    assert(candidate([4L, 1L, 1L, 0L]) == true);\n\
    \    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpin_knaq4.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    if (l.length < 2)\n        return true;\n    bool increasing = l[1]\
    \ > l[0];\n    for (int i = 2; i < l.length; i++)\n    {\n        if (increasing\
    \ && l[i] < l[i - 1])\n            return false;\n        if (!increasing && l[i]\
    \ > l[i - 1])\n            return false;\n    }\n    return true;\n}\n/*\nReturn\
    \ True if list is sorted in ascending order.\n*/\nunittest\n{\n    alias candidate\
    \ = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n    assert(candidate([1L,\
    \ 2L, 4L, 20L]) == true);\n    assert(candidate([1L, 20L, 4L, 10L]) == false);\n\
    \    assert(candidate([4L, 1L, 0L, -10L]) == true);\n    assert(candidate([4L,\
    \ 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n\
    \    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L,\
    \ 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8wnclmcf.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    bool increasing = true;\n    bool decreasing = true;\n    for (int\
    \ i = 1; i < l.length; i++)\n    {\n        if (l[i] < l[i - 1])\n           \
    \ increasing = false;\n        if (l[i] > l[i - 1])\n            decreasing =\
    \ false;\n    }\n    return increasing || decreasing;\n}\nunittest\n{\n    alias\
    \ candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n\
    \    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvleztx1n.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    if (l.length < 2)\n        return true;\n    bool increasing = l[1]\
    \ > l[0];\n    for (int i = 2; i < l.length; i++)\n    {\n        if (increasing\
    \ && l[i] < l[i - 1])\n            return false;\n        if (!increasing && l[i]\
    \ > l[i - 1])\n            return false;\n    }\n    return true;\n}\n/*\nReturn\
    \ True if list is sorted in ascending order.\n*/\nunittest\n{\n    alias candidate\
    \ = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n    assert(candidate([1L,\
    \ 2L, 4L, 20L]) == true);\n    assert(candidate([1L, 20L, 4L, 10L]) == false);\n\
    \    assert(candidate([4L, 1L, 0L, -10L]) == true);\n    assert(candidate([4L,\
    \ 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n\
    \    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L,\
    \ 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8wnclmcf.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    bool increasing = true;\n    bool decreasing = true;\n    for (int\
    \ i = 1; i < l.length; i++)\n    {\n        if (l[i] < l[i - 1])\n           \
    \ increasing = false;\n        if (l[i] > l[i - 1])\n            decreasing =\
    \ false;\n    }\n    return increasing || decreasing;\n}\n/*\nReturn True if list\
    \ elements are monotonically increasing.\n*/\nunittest\n{\n    alias candidate\
    \ = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n    assert(candidate([1L,\
    \ 2L, 4L, 20L]) == true);\n    assert(candidate([1L, 20L, 4L, 10L]) == false);\n\
    \    assert(candidate([4L, 1L, 0L, -10L]) == true);\n    assert(candidate([4L,\
    \ 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n\
    \    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L,\
    \ 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxch3xhf6.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    if (l.length < 2) return true;\n    bool increasing = l[1] > l[0];\n\
    \    for (int i = 2; i < l.length; i++)\n    {\n        if (increasing)\n    \
    \    {\n            if (l[i] < l[i-1]) return false;\n        }\n        else\n\
    \        {\n            if (l[i] > l[i-1]) return false;\n        }\n    }\n \
    \   return true;\n}\nunittest\n{\n    alias candidate = monotonic;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L]) == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L]) == false);\n    assert(candidate([4L,\
    \ 1L, 0L, -10L]) == true);\n    assert(candidate([4L, 1L, 1L, 0L]) == true);\n\
    \    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnjjll8mp.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    if (l.length < 2)\n        return true;\n    bool increasing = true;\n\
    \    bool decreasing = true;\n    for (long i = 1; i < l.length; i++)\n    {\n\
    \        if (l[i] < l[i - 1])\n            increasing = false;\n        if (l[i]\
    \ > l[i - 1])\n            decreasing = false;\n    }\n    return increasing ||\
    \ decreasing;\n}\n/*\nReturn True if list elements are monotonically increasing.\n\
    */\nunittest\n{\n    alias candidate = monotonic;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L]) == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L]) == false);\n    assert(candidate([4L,\
    \ 1L, 0L, -10L]) == true);\n    assert(candidate([4L, 1L, 1L, 0L]) == true);\n\
    \    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpucw06uij.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    bool increasing = true;\n    bool decreasing = true;\n    foreach(i,j;\
    \ zip(l[0..$-1],l[1..$]))\n    {\n        increasing &= i < j;\n        decreasing\
    \ &= i > j;\n    }\n    return increasing || decreasing;\n}\nunittest\n{\n   \
    \ alias candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n\
    \    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpj81alm3k.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    bool increasing = true;\n    bool decreasing = true;\n    foreach(i,j;\
    \ zip(l[0..$-1],l[1..$]))\n    {\n        increasing &= i < j;\n        decreasing\
    \ &= i > j;\n    }\n    return increasing || decreasing;\n}\nunittest\n{\n   \
    \ alias candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n\
    \    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpj81alm3k.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    if (l.length < 2) return true;\n    bool increasing = l[1] > l[0];\n\
    \    for (int i = 1; i < l.length; i++)\n    {\n        if (increasing)\n    \
    \    {\n            if (l[i] < l[i-1]) return false;\n        }\n        else\n\
    \        {\n            if (l[i] > l[i-1]) return false;\n        }\n    }\n \
    \   return true;\n}\nunittest\n{\n    alias candidate = monotonic;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L]) == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L]) == false);\n    assert(candidate([4L,\
    \ 1L, 0L, -10L]) == true);\n    assert(candidate([4L, 1L, 1L, 0L]) == true);\n\
    \    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpaxlx1_ed.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    if (l.length < 2) return true;\n    bool increasing = l[1] > l[0];\n\
    \    for (int i = 1; i < l.length; i++)\n    {\n        if (increasing)\n    \
    \    {\n            if (l[i] < l[i-1]) return false;\n        }\n        else\n\
    \        {\n            if (l[i] > l[i-1]) return false;\n        }\n    }\n \
    \   return true;\n}\nunittest\n{\n    alias candidate = monotonic;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L]) == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L]) == false);\n    assert(candidate([4L,\
    \ 1L, 0L, -10L]) == true);\n    assert(candidate([4L, 1L, 1L, 0L]) == true);\n\
    \    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpaxlx1_ed.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    if (l.length < 2) return true;\n    bool increasing = l[1] > l[0];\n\
    \    for (int i = 2; i < l.length; i++)\n    {\n        if (increasing && l[i]\
    \ < l[i-1]) return false;\n        if (!increasing && l[i] > l[i-1]) return false;\n\
    \    }\n    return true;\n}\nunittest\n{\n    alias candidate = monotonic;\n\n\
    \    assert(candidate([1L, 2L, 4L, 10L]) == true);\n    assert(candidate([1L,\
    \ 2L, 4L, 20L]) == true);\n    assert(candidate([1L, 20L, 4L, 10L]) == false);\n\
    \    assert(candidate([4L, 1L, 0L, -10L]) == true);\n    assert(candidate([4L,\
    \ 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n\
    \    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L,\
    \ 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphyp7caec.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    bool increasing = true;\n    bool decreasing = true;\n    for (int\
    \ i = 1; i < l.length; i++)\n    {\n        if (l[i] < l[i - 1])\n           \
    \ increasing = false;\n        if (l[i] > l[i - 1])\n            decreasing =\
    \ false;\n    }\n    return increasing || decreasing;\n}\nunittest\n{\n    alias\
    \ candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n\
    \    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvleztx1n.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    if (l.length < 2) return true;\n    bool increasing = l[1] > l[0];\n\
    \    for (int i = 1; i < l.length; i++)\n    {\n        if (increasing && l[i]\
    \ < l[i-1]) return false;\n        if (!increasing && l[i] > l[i-1]) return false;\n\
    \    }\n    return true;\n}\nunittest\n{\n    alias candidate = monotonic;\n\n\
    \    assert(candidate([1L, 2L, 4L, 10L]) == true);\n    assert(candidate([1L,\
    \ 2L, 4L, 20L]) == true);\n    assert(candidate([1L, 20L, 4L, 10L]) == false);\n\
    \    assert(candidate([4L, 1L, 0L, -10L]) == true);\n    assert(candidate([4L,\
    \ 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n\
    \    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L,\
    \ 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg4xt3z0_.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    if (l.length < 2) return true;\n    bool increasing = l[1] > l[0];\n\
    \    for (int i = 1; i < l.length; i++)\n    {\n        if (increasing && l[i]\
    \ < l[i-1]) return false;\n        if (!increasing && l[i] > l[i-1]) return false;\n\
    \    }\n    return true;\n}\n/*\nReturn True if list elements are monotonically\
    \ increasing.\n                \n*/\nunittest\n{\n    alias candidate = monotonic;\n\
    \n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n    assert(candidate([1L,\
    \ 2L, 4L, 20L]) == true);\n    assert(candidate([1L, 20L, 4L, 10L]) == false);\n\
    \    assert(candidate([4L, 1L, 0L, -10L]) == true);\n    assert(candidate([4L,\
    \ 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n\
    \    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L,\
    \ 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7200ypj6.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    bool increasing = true;\n    bool decreasing = true;\n    for (int\
    \ i = 1; i < l.length; i++)\n    {\n        if (l[i] < l[i - 1])\n           \
    \ increasing = false;\n        if (l[i] > l[i - 1])\n            decreasing =\
    \ false;\n    }\n    return increasing || decreasing;\n}\nunittest\n{\n    alias\
    \ candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n\
    \    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvleztx1n.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    bool increasing = true;\n    bool decreasing = true;\n    for (int\
    \ i = 1; i < l.length; i++)\n    {\n        if (l[i] < l[i - 1])\n           \
    \ increasing = false;\n        if (l[i] > l[i - 1])\n            decreasing =\
    \ false;\n    }\n    return increasing || decreasing;\n}\n/*\nReturn True if list\
    \ elements are monotonically increasing.\n*/\nunittest\n{\n    alias candidate\
    \ = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n    assert(candidate([1L,\
    \ 2L, 4L, 20L]) == true);\n    assert(candidate([1L, 20L, 4L, 10L]) == false);\n\
    \    assert(candidate([4L, 1L, 0L, -10L]) == true);\n    assert(candidate([4L,\
    \ 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n\
    \    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L,\
    \ 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxch3xhf6.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    if (l.length < 2) \n        return true;\n    bool increasing =\
    \ l[1] > l[0];\n    for (int i = 1; i < l.length; i++) \n    {\n        if (increasing\
    \ && l[i] < l[i - 1]) \n            return false;\n        if (!increasing &&\
    \ l[i] > l[i - 1]) \n            return false;\n    }\n    return true;\n}\n/*\n\
    Return True if list is sorted in ascending order.\n*/\nunittest\n{\n    alias\
    \ candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n\
    \    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwkcj8bip.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    bool increasing = true;\n    bool decreasing = true;\n    for (int\
    \ i = 1; i < l.length; i++) {\n        if (l[i] < l[i - 1]) {\n            increasing\
    \ = false;\n        }\n        if (l[i] > l[i - 1]) {\n            decreasing\
    \ = false;\n        }\n    }\n    return increasing || decreasing;\n}\n/*\nReturn\
    \ True if list elements are monotonically increasing.\n*/\nunittest\n{\n    alias\
    \ candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n\
    \    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpx03ptnc5.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    if (l.length < 2) return true;\n    bool increasing = l[1] > l[0];\n\
    \    for (int i = 2; i < l.length; i++)\n    {\n        if (increasing && l[i]\
    \ < l[i-1]) return false;\n        if (!increasing && l[i] > l[i-1]) return false;\n\
    \    }\n    return true;\n}\n/*\nReturn True if list is monotonically increasing.\n\
    */\nunittest\n{\n    alias candidate = monotonic;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L]) == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L]) == false);\n    assert(candidate([4L,\
    \ 1L, 0L, -10L]) == true);\n    assert(candidate([4L, 1L, 1L, 0L]) == true);\n\
    \    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphh_70p1i.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    bool increasing = true;\n    bool decreasing = true;\n    foreach(i,j;\
    \ zip(l[0..$-1],l[1..$]))\n    {\n        increasing &= i < j;\n        decreasing\
    \ &= i > j;\n    }\n    return increasing || decreasing;\n}\n/*\nReturn True is\
    \ list elements are monotonically increasing or decreasing.\n                \n\
    */\nunittest\n{\n    alias candidate = monotonic;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L]) == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L]) == false);\n    assert(candidate([4L,\
    \ 1L, 0L, -10L]) == true);\n    assert(candidate([4L, 1L, 1L, 0L]) == true);\n\
    \    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpexlkls84.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    bool increasing = true;\n    bool decreasing = true;\n    for (int\
    \ i = 1; i < l.length; i++)\n    {\n        if (l[i] < l[i - 1])\n           \
    \ increasing = false;\n        if (l[i] > l[i - 1])\n            decreasing =\
    \ false;\n    }\n    return increasing || decreasing;\n}\n/*\nReturn True if list\
    \ elements are monotonically increasing.\n*/\nunittest\n{\n    alias candidate\
    \ = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n    assert(candidate([1L,\
    \ 2L, 4L, 20L]) == true);\n    assert(candidate([1L, 20L, 4L, 10L]) == false);\n\
    \    assert(candidate([4L, 1L, 0L, -10L]) == true);\n    assert(candidate([4L,\
    \ 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n\
    \    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L,\
    \ 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxch3xhf6.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    if (l.length < 2) \n    {\n        return true;\n    }\n    bool\
    \ increasing = l[1] > l[0];\n    foreach (i, e; l[1..$]) \n    {\n        if (increasing\
    \ && e < l[i - 1]) \n        {\n            return false;\n        }\n       \
    \ if (!increasing && e > l[i - 1]) \n        {\n            return false;\n  \
    \      }\n    }\n    return true;\n}\n/*\nReturn True if list elements are monotonically\
    \ increasing.\n                \n*/\nunittest\n{\n    alias candidate = monotonic;\n\
    \n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n    assert(candidate([1L,\
    \ 2L, 4L, 20L]) == true);\n    assert(candidate([1L, 20L, 4L, 10L]) == false);\n\
    \    assert(candidate([4L, 1L, 0L, -10L]) == true);\n    assert(candidate([4L,\
    \ 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n\
    \    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L,\
    \ 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5nljsn_p.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    bool increasing = true;\n    bool decreasing = true;\n    for (int\
    \ i = 1; i < l.length; i++)\n    {\n        if (l[i] < l[i - 1])\n           \
    \ increasing = false;\n        if (l[i] > l[i - 1])\n            decreasing =\
    \ false;\n    }\n    return increasing || decreasing;\n}\n/*\nReturn True if list\
    \ elements are monotonically increasing.\n*/\nunittest\n{\n    alias candidate\
    \ = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n    assert(candidate([1L,\
    \ 2L, 4L, 20L]) == true);\n    assert(candidate([1L, 20L, 4L, 10L]) == false);\n\
    \    assert(candidate([4L, 1L, 0L, -10L]) == true);\n    assert(candidate([4L,\
    \ 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n\
    \    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L,\
    \ 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxch3xhf6.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015141

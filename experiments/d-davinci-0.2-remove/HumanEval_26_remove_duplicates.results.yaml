language: d
name: HumanEval_26_remove_duplicates
results:
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    long[] result = new long[];\n    foreach(n; numbers)\n    {\n     \
    \   if(n in result)\n            continue;\n        result ~= n;\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = remove_duplicates;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([1L,\
    \ 2L, 3L, 2L, 4L, 3L, 5L]) == [1L, 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmf725em7.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    long[] result;\n    foreach(n; numbers)\n    {\n        if(n in result)\n\
    \            continue;\n        result ~= n;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = remove_duplicates;\n\n    assert(candidate([]) == []);\n\
    \    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([1L,\
    \ 2L, 3L, 2L, 4L, 3L, 5L]) == [1L, 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxd5n8cdb.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    auto result = new long[];\n    foreach(n; numbers)\n    {\n       \
    \ if(count(numbers, n) == 1)\n        {\n            result ~= n;\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_duplicates;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([1L, 2L, 3L, 4L]) ==\
    \ [1L, 2L, 3L, 4L]);\n    assert(candidate([1L, 2L, 3L, 2L, 4L, 3L, 5L]) == [1L,\
    \ 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdimqpsn6.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    long[] result = new long[];\n    foreach(n; numbers)\n    {\n     \
    \   if(n in result)\n            continue;\n        result ~= n;\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = remove_duplicates;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([1L,\
    \ 2L, 3L, 2L, 4L, 3L, 5L]) == [1L, 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmf725em7.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    long[] result = new long[];\n    foreach(n; numbers)\n    {\n     \
    \   if(n in result)\n            continue;\n        else\n            result ~=\
    \ n;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_duplicates;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([1L, 2L, 3L, 4L]) ==\
    \ [1L, 2L, 3L, 4L]);\n    assert(candidate([1L, 2L, 3L, 2L, 4L, 3L, 5L]) == [1L,\
    \ 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvycc1pwa.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    long[] result = new long[];\n    foreach(n; numbers)\n    {\n     \
    \   if(count(numbers, n) == 1)\n        {\n            result ~= n;\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_duplicates;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([1L, 2L, 3L, 4L]) ==\
    \ [1L, 2L, 3L, 4L]);\n    assert(candidate([1L, 2L, 3L, 2L, 4L, 3L, 5L]) == [1L,\
    \ 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpme1kgla1.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    auto result = new long[];\n    auto seen = new bool[];\n    foreach(n;\
    \ numbers) \n    {\n        if(seen[n]) \n        {\n            continue;\n \
    \       }\n        seen[n] = true;\n        result ~= n;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_duplicates;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([1L,\
    \ 2L, 3L, 2L, 4L, 3L, 5L]) == [1L, 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpepkt2vqu.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    long[] result;\n    foreach(n; numbers)\n    {\n        if(count(numbers,\
    \ n) == 1)\n        {\n            result ~= n;\n        }\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = remove_duplicates;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([1L,\
    \ 2L, 3L, 2L, 4L, 3L, 5L]) == [1L, 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpw4vnold_.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    long[] result;\n    foreach(n; numbers) \n    {\n        if(n in result)\
    \ \n        {\n            result -= n;\n        }\n        else \n        {\n\
    \            result ~= n;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = remove_duplicates;\n\n    assert(candidate([]) == []);\n\
    \    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([1L,\
    \ 2L, 3L, 2L, 4L, 3L, 5L]) == [1L, 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpzi2gsbo6.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    long[] result;\n    foreach(n; numbers)\n    {\n        if(n in result)\n\
    \            continue;\n        result ~= n;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = remove_duplicates;\n\n    assert(candidate([]) == []);\n\
    \    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([1L,\
    \ 2L, 3L, 2L, 4L, 3L, 5L]) == [1L, 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxd5n8cdb.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    long[] result;\n    foreach(n; numbers)\n    {\n        if(n in result)\n\
    \            continue;\n        else\n            result ~= n;\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = remove_duplicates;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([1L,\
    \ 2L, 3L, 2L, 4L, 3L, 5L]) == [1L, 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1s0lbh4d.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    long[] result;\n    foreach(n; numbers)\n    {\n        if(count(numbers,\
    \ n) == 1)\n        {\n            result ~= n;\n        }\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = remove_duplicates;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([1L,\
    \ 2L, 3L, 2L, 4L, 3L, 5L]) == [1L, 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpw4vnold_.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    long[] result;\n    foreach(n; numbers)\n    {\n        if(n in result)\n\
    \            continue;\n        else\n            result ~= n;\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = remove_duplicates;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([1L,\
    \ 2L, 3L, 2L, 4L, 3L, 5L]) == [1L, 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1s0lbh4d.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    auto result = new long[];\n    foreach(n; numbers)\n    {\n       \
    \ if(count(numbers, n) == 1)\n        {\n            result ~= n;\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_duplicates;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([1L, 2L, 3L, 4L]) ==\
    \ [1L, 2L, 3L, 4L]);\n    assert(candidate([1L, 2L, 3L, 2L, 4L, 3L, 5L]) == [1L,\
    \ 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdimqpsn6.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    long[] result = new long[0];\n    foreach(num; numbers)\n    {\n  \
    \      if(count(numbers, num) == 1)\n        {\n            result ~= num;\n \
    \       }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_duplicates;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([1L, 2L, 3L, 4L]) ==\
    \ [1L, 2L, 3L, 4L]);\n    assert(candidate([1L, 2L, 3L, 2L, 4L, 3L, 5L]) == [1L,\
    \ 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpi2h1hqr4.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    auto result = new long[];\n    foreach(n; numbers)\n    {\n       \
    \ if(numbers.count(n) == 1)\n        {\n            result ~= n;\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_duplicates;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([1L, 2L, 3L, 4L]) ==\
    \ [1L, 2L, 3L, 4L]);\n    assert(candidate([1L, 2L, 3L, 2L, 4L, 3L, 5L]) == [1L,\
    \ 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1nzjwp9f.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    long[] result;\n    foreach(n; numbers)\n    {\n        if(!result.canFind(n))\n\
    \            result ~= n;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = remove_duplicates;\n\n    assert(candidate([]) == []);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([1L, 2L, 3L, 2L, 4L,\
    \ 3L, 5L]) == [1L, 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbv9inpzk.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    long[] result;\n    foreach(n; numbers)\n    {\n        if(n in result)\n\
    \            continue;\n        result ~= n;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = remove_duplicates;\n\n    assert(candidate([]) == []);\n\
    \    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([1L,\
    \ 2L, 3L, 2L, 4L, 3L, 5L]) == [1L, 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxd5n8cdb.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    long[] result = new long[0];\n    foreach(n; numbers)\n    {\n    \
    \    if(count(numbers, n) == 1)\n        {\n            result ~= n;\n       \
    \ }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_duplicates;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([1L, 2L, 3L, 4L]) ==\
    \ [1L, 2L, 3L, 4L]);\n    assert(candidate([1L, 2L, 3L, 2L, 4L, 3L, 5L]) == [1L,\
    \ 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqsyodzkl.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    long[] result;\n    foreach(num; numbers)\n    {\n        if(!result.canFind(num))\n\
    \        {\n            result ~= num;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_duplicates;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([1L,\
    \ 2L, 3L, 2L, 4L, 3L, 5L]) == [1L, 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxffkh32c.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    return numbers.dup.sort.array.uniq;\n}\nunittest\n{\n    alias candidate\
    \ = remove_duplicates;\n\n    assert(candidate([]) == []);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([1L, 2L, 3L, 2L, 4L,\
    \ 3L, 5L]) == [1L, 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpzhcbwdlg.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    auto set = new Set!long();\n    foreach(n; numbers)\n    {\n      \
    \  set.insert(n);\n    }\n    return set.array;\n}\nunittest\n{\n    alias candidate\
    \ = remove_duplicates;\n\n    assert(candidate([]) == []);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([1L, 2L, 3L, 2L, 4L,\
    \ 3L, 5L]) == [1L, 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7t_je9nd.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    long[] result;\n    foreach(n; numbers)\n    {\n        if(n in result)\n\
    \            continue;\n        result ~= n;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = remove_duplicates;\n\n    assert(candidate([]) == []);\n\
    \    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([1L,\
    \ 2L, 3L, 2L, 4L, 3L, 5L]) == [1L, 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxd5n8cdb.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    long[] result;\n    long[] unique_numbers;\n    unique_numbers = numbers.dup;\n\
    \    unique_numbers.sort;\n    unique_numbers.uniq;\n    foreach(i; 0 .. unique_numbers.length)\n\
    \    {\n        result ~= unique_numbers[i];\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = remove_duplicates;\n\n    assert(candidate([]) == []);\n\
    \    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([1L,\
    \ 2L, 3L, 2L, 4L, 3L, 5L]) == [1L, 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpojngiao1.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    auto result = new long[];\n    foreach(n; numbers)\n    {\n       \
    \ if(count(numbers, n) == 1)\n        {\n            result ~= n;\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_duplicates;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([1L, 2L, 3L, 4L]) ==\
    \ [1L, 2L, 3L, 4L]);\n    assert(candidate([1L, 2L, 3L, 2L, 4L, 3L, 5L]) == [1L,\
    \ 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdimqpsn6.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    long[] result;\n    foreach(n; numbers)\n    {\n        if(n in result)\n\
    \            continue;\n        result ~= n;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = remove_duplicates;\n\n    assert(candidate([]) == []);\n\
    \    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([1L,\
    \ 2L, 3L, 2L, 4L, 3L, 5L]) == [1L, 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxd5n8cdb.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    auto result = new long[];\n    auto seen = new bool[];\n    foreach(n;\
    \ numbers)\n    {\n        if(!seen[n])\n        {\n            seen[n] = true;\n\
    \            result ~= n;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = remove_duplicates;\n\n    assert(candidate([]) == []);\n\
    \    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([1L,\
    \ 2L, 3L, 2L, 4L, 3L, 5L]) == [1L, 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp84wcjpfl.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    auto result = new long[];\n    foreach(n; numbers)\n    {\n       \
    \ if(!result.canFind(n))\n            result ~= n;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_duplicates;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([1L,\
    \ 2L, 3L, 2L, 4L, 3L, 5L]) == [1L, 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpga9rmsaf.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    long[] result;\n    foreach(n; numbers)\n    {\n        if(n in result)\n\
    \            continue;\n        result ~= n;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = remove_duplicates;\n\n    assert(candidate([]) == []);\n\
    \    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([1L,\
    \ 2L, 3L, 2L, 4L, 3L, 5L]) == [1L, 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxd5n8cdb.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    auto result = new long[];\n    auto seen = new bool[];\n    foreach(n;\
    \ numbers)\n    {\n        if(seen[n])\n            continue;\n        seen[n]\
    \ = true;\n        result ~= n;\n    }\n    return result;\n}\nunittest\n{\n \
    \   alias candidate = remove_duplicates;\n\n    assert(candidate([]) == []);\n\
    \    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([1L,\
    \ 2L, 3L, 2L, 4L, 3L, 5L]) == [1L, 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6dcuvfh2.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    auto result = new long[];\n    foreach(n; numbers)\n    {\n       \
    \ if(count(numbers, n) == 1)\n        {\n            result ~= n;\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_duplicates;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([1L, 2L, 3L, 4L]) ==\
    \ [1L, 2L, 3L, 4L]);\n    assert(candidate([1L, 2L, 3L, 2L, 4L, 3L, 5L]) == [1L,\
    \ 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdimqpsn6.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    long[] result;\n    foreach(n; numbers)\n    {\n        if(n in result)\n\
    \            continue;\n        result ~= n;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = remove_duplicates;\n\n    assert(candidate([]) == []);\n\
    \    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([1L,\
    \ 2L, 3L, 2L, 4L, 3L, 5L]) == [1L, 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxd5n8cdb.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    long[] result;\n    foreach(n; numbers)\n    {\n        if(!result.canFind(n))\n\
    \            result ~= n;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = remove_duplicates;\n\n    assert(candidate([]) == []);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([1L, 2L, 3L, 2L, 4L,\
    \ 3L, 5L]) == [1L, 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbv9inpzk.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    long[] result = new long[];\n    foreach(n; numbers)\n    {\n     \
    \   if(!result.canFind(n))\n        {\n            result ~= n;\n        }\n \
    \   }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_duplicates;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([1L, 2L, 3L, 4L]) ==\
    \ [1L, 2L, 3L, 4L]);\n    assert(candidate([1L, 2L, 3L, 2L, 4L, 3L, 5L]) == [1L,\
    \ 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpp48kum24.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    long[] result;\n    foreach(n; numbers)\n    {\n        if(n in result)\n\
    \            continue;\n        else\n            result ~= n;\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = remove_duplicates;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([1L,\
    \ 2L, 3L, 2L, 4L, 3L, 5L]) == [1L, 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1s0lbh4d.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    auto result = new long[];\n    foreach(n; numbers)\n    {\n       \
    \ if(count(numbers, n) == 1)\n        {\n            result ~= n;\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_duplicates;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([1L, 2L, 3L, 4L]) ==\
    \ [1L, 2L, 3L, 4L]);\n    assert(candidate([1L, 2L, 3L, 2L, 4L, 3L, 5L]) == [1L,\
    \ 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdimqpsn6.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    long[] result = new long[];\n    foreach(n; numbers)\n    {\n     \
    \   if(count(numbers, n) == 1)\n        {\n            result ~= n;\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_duplicates;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([1L, 2L, 3L, 4L]) ==\
    \ [1L, 2L, 3L, 4L]);\n    assert(candidate([1L, 2L, 3L, 2L, 4L, 3L, 5L]) == [1L,\
    \ 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpme1kgla1.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    auto result = new long[];\n    foreach(n; numbers)\n    {\n       \
    \ if(!result.count(n))\n            result ~= n;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_duplicates;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([1L,\
    \ 2L, 3L, 2L, 4L, 3L, 5L]) == [1L, 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpw2ex3fr9.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    auto result = new long[];\n    foreach(n; numbers)\n    {\n       \
    \ if(count(numbers, n) == 1)\n        {\n            result ~= n;\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_duplicates;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([1L, 2L, 3L, 4L]) ==\
    \ [1L, 2L, 3L, 4L]);\n    assert(candidate([1L, 2L, 3L, 2L, 4L, 3L, 5L]) == [1L,\
    \ 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdimqpsn6.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    long[] result;\n    foreach(n; numbers)\n    {\n        if(n in result)\n\
    \            continue;\n        result ~= n;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = remove_duplicates;\n\n    assert(candidate([]) == []);\n\
    \    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([1L,\
    \ 2L, 3L, 2L, 4L, 3L, 5L]) == [1L, 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxd5n8cdb.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    long[] result = new long[];\n    foreach(n; numbers)\n    {\n     \
    \   if(n in result)\n            continue;\n        result ~= n;\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = remove_duplicates;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([1L,\
    \ 2L, 3L, 2L, 4L, 3L, 5L]) == [1L, 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmf725em7.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    long[] result = new long[];\n    foreach(n; numbers)\n    {\n     \
    \   if(n in result)\n            continue;\n        else\n            result ~=\
    \ n;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_duplicates;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([1L, 2L, 3L, 4L]) ==\
    \ [1L, 2L, 3L, 4L]);\n    assert(candidate([1L, 2L, 3L, 2L, 4L, 3L, 5L]) == [1L,\
    \ 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvycc1pwa.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    auto result = new long[];\n    foreach(n; numbers)\n    {\n       \
    \ if(!result.count(n))\n            result ~= n;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_duplicates;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([1L,\
    \ 2L, 3L, 2L, 4L, 3L, 5L]) == [1L, 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpw2ex3fr9.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    long[] result;\n    foreach(n; numbers)\n    {\n        if(n in result)\n\
    \            continue;\n        else\n            result ~= n;\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = remove_duplicates;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([1L,\
    \ 2L, 3L, 2L, 4L, 3L, 5L]) == [1L, 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1s0lbh4d.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    long[] result;\n    foreach(n; numbers)\n    {\n        if(n in result)\n\
    \            continue;\n        result ~= n;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = remove_duplicates;\n\n    assert(candidate([]) == []);\n\
    \    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([1L,\
    \ 2L, 3L, 2L, 4L, 3L, 5L]) == [1L, 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxd5n8cdb.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    long[] result = [];\n    foreach(n; numbers)\n    {\n        if(n in\
    \ result)\n            continue;\n        result ~= n;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_duplicates;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([1L,\
    \ 2L, 3L, 2L, 4L, 3L, 5L]) == [1L, 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4vg2v6ax.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    auto result = new long[];\n    foreach(n; numbers)\n    {\n       \
    \ if(!result.canFind(n))\n            result ~= n;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_duplicates;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([1L,\
    \ 2L, 3L, 2L, 4L, 3L, 5L]) == [1L, 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpga9rmsaf.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    long[] result;\n    foreach(i; numbers)\n    {\n        if(i in result)\n\
    \            continue;\n        result ~= i;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = remove_duplicates;\n\n    assert(candidate([]) == []);\n\
    \    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([1L,\
    \ 2L, 3L, 2L, 4L, 3L, 5L]) == [1L, 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6qtjjg6g.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    long[] result;\n    foreach(n; numbers)\n    {\n        if(n in result)\n\
    \            continue;\n        result ~= n;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = remove_duplicates;\n\n    assert(candidate([]) == []);\n\
    \    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([1L,\
    \ 2L, 3L, 2L, 4L, 3L, 5L]) == [1L, 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxd5n8cdb.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    long[] result;\n    foreach(n; numbers)\n    {\n        if(n in result)\n\
    \            continue;\n        result ~= n;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = remove_duplicates;\n\n    assert(candidate([]) == []);\n\
    \    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([1L,\
    \ 2L, 3L, 2L, 4L, 3L, 5L]) == [1L, 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxd5n8cdb.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    long[] result;\n    foreach(n; numbers)\n    {\n        if(n in result)\n\
    \            continue;\n        else\n            result ~= n;\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = remove_duplicates;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([1L,\
    \ 2L, 3L, 2L, 4L, 3L, 5L]) == [1L, 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1s0lbh4d.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    long[] result;\n    foreach(n; numbers)\n    {\n        if(n in result)\n\
    \            continue;\n        result ~= n;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = remove_duplicates;\n\n    assert(candidate([]) == []);\n\
    \    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([1L,\
    \ 2L, 3L, 2L, 4L, 3L, 5L]) == [1L, 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxd5n8cdb.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    long[] result = [];\n    foreach(n; numbers)\n    {\n        if(!result.canFind(n))\n\
    \        {\n            result ~= n;\n        }\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = remove_duplicates;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([1L,\
    \ 2L, 3L, 2L, 4L, 3L, 5L]) == [1L, 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnrupnous.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    auto result = new long[];\n    foreach(n; numbers)\n    {\n       \
    \ if(!result.canFind(n))\n            result ~= n;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_duplicates;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([1L,\
    \ 2L, 3L, 2L, 4L, 3L, 5L]) == [1L, 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpga9rmsaf.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    long[] result;\n    foreach(n; numbers)\n    {\n        if(n in result)\n\
    \            continue;\n        result ~= n;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = remove_duplicates;\n\n    assert(candidate([]) == []);\n\
    \    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([1L,\
    \ 2L, 3L, 2L, 4L, 3L, 5L]) == [1L, 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxd5n8cdb.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    long[] result;\n    foreach(n; numbers)\n    {\n        if(result.count(n)\
    \ == 0)\n        {\n            result ~= n;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_duplicates;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([1L,\
    \ 2L, 3L, 2L, 4L, 3L, 5L]) == [1L, 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnpt7m_gl.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    long[] result = new long[0];\n    foreach(n; numbers)\n    {\n    \
    \    if(numbers.count(n) == 1)\n        {\n            result ~= n;\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_duplicates;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([1L, 2L, 3L, 4L]) ==\
    \ [1L, 2L, 3L, 4L]);\n    assert(candidate([1L, 2L, 3L, 2L, 4L, 3L, 5L]) == [1L,\
    \ 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpulm7n9s0.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    long[] result;\n    foreach(n; numbers)\n    {\n        if(n in result)\n\
    \            continue;\n        result ~= n;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = remove_duplicates;\n\n    assert(candidate([]) == []);\n\
    \    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([1L,\
    \ 2L, 3L, 2L, 4L, 3L, 5L]) == [1L, 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxd5n8cdb.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    auto result = new long[];\n    foreach(n; numbers)\n    {\n       \
    \ if(count(numbers, n) == 1)\n        {\n            result ~= n;\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_duplicates;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([1L, 2L, 3L, 4L]) ==\
    \ [1L, 2L, 3L, 4L]);\n    assert(candidate([1L, 2L, 3L, 2L, 4L, 3L, 5L]) == [1L,\
    \ 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdimqpsn6.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    long[] result;\n    foreach(n; numbers)\n    {\n        if(!result.canFind(n))\n\
    \            result ~= n;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = remove_duplicates;\n\n    assert(candidate([]) == []);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([1L, 2L, 3L, 2L, 4L,\
    \ 3L, 5L]) == [1L, 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbv9inpzk.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    auto result = new long[];\n    auto seen = new bool[];\n    foreach(n;\
    \ numbers) \n    {\n        if(seen[n]) \n        {\n            continue;\n \
    \       }\n        seen[n] = true;\n        result ~= n;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_duplicates;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([1L,\
    \ 2L, 3L, 2L, 4L, 3L, 5L]) == [1L, 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpepkt2vqu.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    auto result = new long[];\n    foreach(n; numbers)\n    {\n       \
    \ if(!result.canFind(n))\n            result ~= n;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_duplicates;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([1L,\
    \ 2L, 3L, 2L, 4L, 3L, 5L]) == [1L, 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpga9rmsaf.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    long[] result = new long[];\n    foreach(n; numbers)\n    {\n     \
    \   if(n in result)\n            continue;\n        result ~= n;\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = remove_duplicates;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([1L,\
    \ 2L, 3L, 2L, 4L, 3L, 5L]) == [1L, 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmf725em7.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    long[] result = [];\n    foreach(n; numbers) \n    {\n        if(!result.canFind(n))\
    \ \n        {\n            result ~= n;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_duplicates;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([1L,\
    \ 2L, 3L, 2L, 4L, 3L, 5L]) == [1L, 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvi04pxqr.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    long[] result;\n    foreach(n; numbers)\n    {\n        if(!result.canFind(n))\n\
    \            result ~= n;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = remove_duplicates;\n\n    assert(candidate([]) == []);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([1L, 2L, 3L, 2L, 4L,\
    \ 3L, 5L]) == [1L, 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbv9inpzk.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    auto numbers_set = numbers.dup.sort().uniq;\n    return numbers_set;\n\
    }\nunittest\n{\n    alias candidate = remove_duplicates;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([1L,\
    \ 2L, 3L, 2L, 4L, 3L, 5L]) == [1L, 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7h8x6x84.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    long[] result = new long[0];\n    foreach(n; numbers)\n    {\n    \
    \    if(n in result)\n            continue;\n        else\n            result\
    \ ~= n;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_duplicates;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([1L, 2L, 3L, 4L]) ==\
    \ [1L, 2L, 3L, 4L]);\n    assert(candidate([1L, 2L, 3L, 2L, 4L, 3L, 5L]) == [1L,\
    \ 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpklr7i5os.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    auto unique = new long[];\n    foreach(n; numbers)\n    {\n       \
    \ if(!unique.canFind(n))\n        {\n            unique ~= n;\n        }\n   \
    \ }\n    return unique;\n}\nunittest\n{\n    alias candidate = remove_duplicates;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([1L, 2L, 3L, 4L]) ==\
    \ [1L, 2L, 3L, 4L]);\n    assert(candidate([1L, 2L, 3L, 2L, 4L, 3L, 5L]) == [1L,\
    \ 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpng8qkrxr.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    auto result = new long[];\n    foreach(n; numbers)\n    {\n       \
    \ if(result.count(n) == 0)\n        {\n            result ~= n;\n        }\n \
    \   }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_duplicates;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([1L, 2L, 3L, 4L]) ==\
    \ [1L, 2L, 3L, 4L]);\n    assert(candidate([1L, 2L, 3L, 2L, 4L, 3L, 5L]) == [1L,\
    \ 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnfaa3rtn.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    auto result = new long[];\n    foreach(n; numbers)\n    {\n       \
    \ if(!result.canFind(n))\n            result ~= n;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_duplicates;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([1L,\
    \ 2L, 3L, 2L, 4L, 3L, 5L]) == [1L, 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpga9rmsaf.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    long[] result = new long[0];\n    foreach(n; numbers)\n    {\n    \
    \    if (n in result)\n            continue;\n        result ~= n;\n    }\n  \
    \  return result;\n}\nunittest\n{\n    alias candidate = remove_duplicates;\n\n\
    \    assert(candidate([]) == []);\n    assert(candidate([1L, 2L, 3L, 4L]) == [1L,\
    \ 2L, 3L, 4L]);\n    assert(candidate([1L, 2L, 3L, 2L, 4L, 3L, 5L]) == [1L, 4L,\
    \ 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpa6v9r0om.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    long[] result = new long[];\n    foreach(n; numbers)\n    {\n     \
    \   if(count(numbers, n) == 1)\n        {\n            result ~= n;\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_duplicates;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([1L, 2L, 3L, 4L]) ==\
    \ [1L, 2L, 3L, 4L]);\n    assert(candidate([1L, 2L, 3L, 2L, 4L, 3L, 5L]) == [1L,\
    \ 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpme1kgla1.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    auto result = new long[];\n    auto seen = new bool[];\n    foreach(n;\
    \ numbers)\n    {\n        if(!seen[n])\n        {\n            seen[n] = true;\n\
    \            result ~= n;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = remove_duplicates;\n\n    assert(candidate([]) == []);\n\
    \    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([1L,\
    \ 2L, 3L, 2L, 4L, 3L, 5L]) == [1L, 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp84wcjpfl.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    long[] result;\n    foreach(n; numbers)\n    {\n        if(!result.canFind(n))\n\
    \            result ~= n;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = remove_duplicates;\n\n    assert(candidate([]) == []);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([1L, 2L, 3L, 2L, 4L,\
    \ 3L, 5L]) == [1L, 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbv9inpzk.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    long[] result;\n    foreach(n; numbers)\n    {\n        if(n in result)\n\
    \            continue;\n        result ~= n;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = remove_duplicates;\n\n    assert(candidate([]) == []);\n\
    \    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([1L,\
    \ 2L, 3L, 2L, 4L, 3L, 5L]) == [1L, 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxd5n8cdb.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    long[] result;\n    foreach(n; numbers)\n    {\n        if(n in result)\n\
    \            continue;\n        else\n            result ~= n;\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = remove_duplicates;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([1L,\
    \ 2L, 3L, 2L, 4L, 3L, 5L]) == [1L, 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1s0lbh4d.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    long[] result = new long[];\n    foreach(n; numbers)\n    {\n     \
    \   if(n in result)\n            continue;\n        result ~= n;\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = remove_duplicates;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([1L,\
    \ 2L, 3L, 2L, 4L, 3L, 5L]) == [1L, 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmf725em7.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    long[] result;\n    foreach(n; numbers)\n    {\n        if(n in result)\n\
    \            continue;\n        result ~= n;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = remove_duplicates;\n\n    assert(candidate([]) == []);\n\
    \    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([1L,\
    \ 2L, 3L, 2L, 4L, 3L, 5L]) == [1L, 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxd5n8cdb.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    auto result = new long[];\n    foreach(n; numbers)\n    {\n       \
    \ if(result.count(n) == 0)\n        {\n            result ~= n;\n        }\n \
    \   }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_duplicates;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([1L, 2L, 3L, 4L]) ==\
    \ [1L, 2L, 3L, 4L]);\n    assert(candidate([1L, 2L, 3L, 2L, 4L, 3L, 5L]) == [1L,\
    \ 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnfaa3rtn.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    long[] result;\n    foreach(n; numbers)\n    {\n        if(n in result)\n\
    \            continue;\n        result ~= n;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = remove_duplicates;\n\n    assert(candidate([]) == []);\n\
    \    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([1L,\
    \ 2L, 3L, 2L, 4L, 3L, 5L]) == [1L, 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxd5n8cdb.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    long[] result;\n    foreach(n; numbers)\n    {\n        if(!result.canFind(n))\n\
    \            result ~= n;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = remove_duplicates;\n\n    assert(candidate([]) == []);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([1L, 2L, 3L, 2L, 4L,\
    \ 3L, 5L]) == [1L, 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbv9inpzk.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    long[] result = [];\n    foreach(n; numbers)\n    {\n        if(n in\
    \ result)\n            continue;\n        result ~= n;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_duplicates;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([1L,\
    \ 2L, 3L, 2L, 4L, 3L, 5L]) == [1L, 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4vg2v6ax.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    long[] result;\n    foreach(n; numbers)\n    {\n        if(n in result)\n\
    \            continue;\n        result ~= n;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = remove_duplicates;\n\n    assert(candidate([]) == []);\n\
    \    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([1L,\
    \ 2L, 3L, 2L, 4L, 3L, 5L]) == [1L, 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxd5n8cdb.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    long[] result = new long[0];\n    foreach(n; numbers)\n    {\n    \
    \    if(!result.canFind(n))\n        {\n            result ~= n;\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_duplicates;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([1L, 2L, 3L, 4L]) ==\
    \ [1L, 2L, 3L, 4L]);\n    assert(candidate([1L, 2L, 3L, 2L, 4L, 3L, 5L]) == [1L,\
    \ 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyonb5o1g.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    long[] result;\n    foreach(n; numbers)\n    {\n        if(n in result)\n\
    \            continue;\n        result ~= n;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = remove_duplicates;\n\n    assert(candidate([]) == []);\n\
    \    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([1L,\
    \ 2L, 3L, 2L, 4L, 3L, 5L]) == [1L, 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxd5n8cdb.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    long[] result;\n    foreach(n; numbers)\n    {\n        if(n in result)\n\
    \            continue;\n        result ~= n;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = remove_duplicates;\n\n    assert(candidate([]) == []);\n\
    \    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([1L,\
    \ 2L, 3L, 2L, 4L, 3L, 5L]) == [1L, 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxd5n8cdb.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    //long[] result;\n    //long[] temp;\n    //long[] temp2;\n    //long[]\
    \ temp3;\n    //long[] temp4;\n    //long[] temp5;\n    //long[] temp6;\n    //long[]\
    \ temp7;\n    //long[] temp8;\n    //long[] temp9;\n    //long[] temp10;\n   \
    \ //long[] temp11;\n    //long[] temp12;\n    //long[] temp13;\n    //long[] temp14;\n\
    \    //long[] temp15;\n    //long[] temp16;\n    //long[] temp17;\n    //long[]\
    \ temp18;\n    //long[] temp19;\n    //long[] temp20;\n    //long[] temp21;\n\
    \    //long[] temp22;\n    //long[] temp23;\n    //long[] temp24;\n    //long[]\
    \ temp25;\n    //long[] temp26;\n    //long[] temp27;\n    //long[] temp28;\n\
    \    //long[] temp29;\n    //long[] temp30;\n    //long[] temp31;\n    //long[]\
    \ temp32;\n    //long[] temp33;\n    //long[] temp34;\n    //long[] temp35;\n\
    \    //long[] temp36;\n    //long[] temp37;\n    //long[] temp38;\n    //long[]\
    \ temp39;\n    //long[] temp40;\n    //long[] temp41;\n    //long[] temp42;\n\
    \    //long[] temp43;\n    //long[] temp44;\n    //long[] temp45;\n    //long[]\
    \ temp46;\n    //long[] temp47;\n    //long[] temp48;\n    //long[] temp49;\n\
    \    //long[] temp50;\n    //long[] temp51;\n    //long[] temp52;\n    //long[]\
    \ temp53;\n    //long[] temp54;\n    //long[] temp55;\n    //long[] temp56;\n\
    \    //long[] temp57;\n    //long[] temp58;\n    //long[] temp59;\n    //long[]\
    \ temp60;\n    //long[] temp61;\n    //long[] temp62;\n    //long[] temp63;\n\
    unittest\n{\n    alias candidate = remove_duplicates;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([1L,\
    \ 2L, 3L, 2L, 4L, 3L, 5L]) == [1L, 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpdj39tmng.d(74): Error: found \''unittest\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdj39tmng.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    auto result = new long[];\n    foreach(n; numbers)\n    {\n       \
    \ if(!result.canFind(n))\n            result ~= n;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_duplicates;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([1L,\
    \ 2L, 3L, 2L, 4L, 3L, 5L]) == [1L, 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpga9rmsaf.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    long[] result;\n    foreach(n; numbers) \n    {\n        if (n in result)\
    \ \n        {\n            result -= n;\n        }\n        else \n        {\n\
    \            result ~= n;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = remove_duplicates;\n\n    assert(candidate([]) == []);\n\
    \    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([1L,\
    \ 2L, 3L, 2L, 4L, 3L, 5L]) == [1L, 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqme35vzg.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    long[] result;\n    foreach(n; numbers)\n    {\n        if(result.count(n)\
    \ == 0)\n        {\n            result ~= n;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_duplicates;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([1L,\
    \ 2L, 3L, 2L, 4L, 3L, 5L]) == [1L, 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnpt7m_gl.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    long[] result;\n    foreach(n; numbers)\n    {\n        if(n in result)\n\
    \            continue;\n        result ~= n;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = remove_duplicates;\n\n    assert(candidate([]) == []);\n\
    \    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([1L,\
    \ 2L, 3L, 2L, 4L, 3L, 5L]) == [1L, 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxd5n8cdb.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    long[] result;\n    foreach(n; numbers)\n    {\n        if(n in result)\n\
    \            continue;\n        else\n            result ~= n;\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = remove_duplicates;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([1L,\
    \ 2L, 3L, 2L, 4L, 3L, 5L]) == [1L, 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1s0lbh4d.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    long[] result = new long[0];\n    foreach(n; numbers)\n    {\n    \
    \    if(numbers.count(n) == 1)\n        {\n            result ~= n;\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_duplicates;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([1L, 2L, 3L, 4L]) ==\
    \ [1L, 2L, 3L, 4L]);\n    assert(candidate([1L, 2L, 3L, 2L, 4L, 3L, 5L]) == [1L,\
    \ 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpulm7n9s0.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    long[] result = new long[0];\n    foreach(n; numbers)\n    {\n    \
    \    if(n in result)\n            continue;\n        result ~= n;\n    }\n   \
    \ return result;\n}\nunittest\n{\n    alias candidate = remove_duplicates;\n\n\
    \    assert(candidate([]) == []);\n    assert(candidate([1L, 2L, 3L, 4L]) == [1L,\
    \ 2L, 3L, 4L]);\n    assert(candidate([1L, 2L, 3L, 2L, 4L, 3L, 5L]) == [1L, 4L,\
    \ 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1yv9ltn2.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    auto result = new long[];\n    foreach(n; numbers)\n    {\n       \
    \ if(count(numbers, n) == 1)\n        {\n            result ~= n;\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_duplicates;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([1L, 2L, 3L, 4L]) ==\
    \ [1L, 2L, 3L, 4L]);\n    assert(candidate([1L, 2L, 3L, 2L, 4L, 3L, 5L]) == [1L,\
    \ 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdimqpsn6.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    auto result = new long[];\n    auto seen = new bool[];\n    foreach(n;\
    \ numbers)\n    {\n        if(!seen[n])\n        {\n            seen[n] = true;\n\
    \            result ~= n;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = remove_duplicates;\n\n    assert(candidate([]) == []);\n\
    \    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([1L,\
    \ 2L, 3L, 2L, 4L, 3L, 5L]) == [1L, 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp84wcjpfl.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    auto result = new long[];\n    auto seen = new bool[];\n    foreach(n;\
    \ numbers) \n    {\n        if (seen[n]) \n        {\n            continue;\n\
    \        }\n        seen[n] = true;\n        result ~= n;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_duplicates;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([1L,\
    \ 2L, 3L, 2L, 4L, 3L, 5L]) == [1L, 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplj2qnkk_.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    long[] result = new long[];\n    foreach(n; numbers)\n    {\n     \
    \   if(n in result)\n            continue;\n        result ~= n;\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = remove_duplicates;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([1L,\
    \ 2L, 3L, 2L, 4L, 3L, 5L]) == [1L, 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmf725em7.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    auto result = new long[];\n    foreach(n; numbers)\n    {\n       \
    \ if(count(numbers, n) == 1)\n        {\n            result ~= n;\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_duplicates;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([1L, 2L, 3L, 4L]) ==\
    \ [1L, 2L, 3L, 4L]);\n    assert(candidate([1L, 2L, 3L, 2L, 4L, 3L, 5L]) == [1L,\
    \ 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdimqpsn6.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    long[] result;\n    foreach(n; numbers)\n    {\n        if(n in result)\n\
    \            continue;\n        result ~= n;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = remove_duplicates;\n\n    assert(candidate([]) == []);\n\
    \    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([1L,\
    \ 2L, 3L, 2L, 4L, 3L, 5L]) == [1L, 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxd5n8cdb.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    long[] result = new long[];\n    foreach(n; numbers)\n    {\n     \
    \   if(n in result)\n            continue;\n        result ~= n;\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = remove_duplicates;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([1L,\
    \ 2L, 3L, 2L, 4L, 3L, 5L]) == [1L, 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmf725em7.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    auto result = new long[];\n    auto seen = new bool[];\n    foreach(n;\
    \ numbers)\n    {\n        if(!seen[n])\n        {\n            seen[n] = true;\n\
    \            result ~= n;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = remove_duplicates;\n\n    assert(candidate([]) == []);\n\
    \    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([1L,\
    \ 2L, 3L, 2L, 4L, 3L, 5L]) == [1L, 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp84wcjpfl.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    auto result = new long[];\n    foreach(n; numbers)\n    {\n       \
    \ if(result.count(n) == 0)\n        {\n            result ~= n;\n        }\n \
    \   }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_duplicates;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([1L, 2L, 3L, 4L]) ==\
    \ [1L, 2L, 3L, 4L]);\n    assert(candidate([1L, 2L, 3L, 2L, 4L, 3L, 5L]) == [1L,\
    \ 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnfaa3rtn.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    long[] result = new long[];\n    foreach(n; numbers)\n    {\n     \
    \   if(n in result)\n            continue;\n        result ~= n;\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = remove_duplicates;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([1L,\
    \ 2L, 3L, 2L, 4L, 3L, 5L]) == [1L, 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmf725em7.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    long[] result = new long[0];\n    foreach(n; numbers)\n    {\n    \
    \    if(count(numbers, n) == 1)\n        {\n            result ~= n;\n       \
    \ }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_duplicates;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([1L, 2L, 3L, 4L]) ==\
    \ [1L, 2L, 3L, 4L]);\n    assert(candidate([1L, 2L, 3L, 2L, 4L, 3L, 5L]) == [1L,\
    \ 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqsyodzkl.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    long[] result = [];\n    foreach(n; numbers) \n    {\n        if(n\
    \ in result) \n        {\n            result -= n;\n        }\n        else \n\
    \        {\n            result ~= n;\n        }\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = remove_duplicates;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([1L,\
    \ 2L, 3L, 2L, 4L, 3L, 5L]) == [1L, 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9p69u045.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    long[] result = [];\n    foreach(n; numbers)\n    {\n        if(!result.canFind(n))\n\
    \        {\n            result ~= n;\n        }\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = remove_duplicates;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([1L,\
    \ 2L, 3L, 2L, 4L, 3L, 5L]) == [1L, 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnrupnous.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    auto result = new long[];\n    foreach(n; numbers)\n    {\n       \
    \ if(numbers.count(n) == 1)\n        {\n            result ~= n;\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_duplicates;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([1L, 2L, 3L, 4L]) ==\
    \ [1L, 2L, 3L, 4L]);\n    assert(candidate([1L, 2L, 3L, 2L, 4L, 3L, 5L]) == [1L,\
    \ 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1nzjwp9f.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    long[] result = new long[0];\n    foreach(n; numbers)\n    {\n    \
    \    if(n in result)\n            continue;\n        result ~= n;\n    }\n   \
    \ return result;\n}\nunittest\n{\n    alias candidate = remove_duplicates;\n\n\
    \    assert(candidate([]) == []);\n    assert(candidate([1L, 2L, 3L, 4L]) == [1L,\
    \ 2L, 3L, 4L]);\n    assert(candidate([1L, 2L, 3L, 2L, 4L, 3L, 5L]) == [1L, 4L,\
    \ 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1yv9ltn2.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    long[] result = new long[];\n    foreach(n; numbers)\n    {\n     \
    \   if(n in result)\n            continue;\n        result ~= n;\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = remove_duplicates;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([1L,\
    \ 2L, 3L, 2L, 4L, 3L, 5L]) == [1L, 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmf725em7.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    long[] result = new long[];\n    foreach(n; numbers)\n    {\n     \
    \   if(numbers.count(n) == 1)\n        {\n            result ~= n;\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_duplicates;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([1L, 2L, 3L, 4L]) ==\
    \ [1L, 2L, 3L, 4L]);\n    assert(candidate([1L, 2L, 3L, 2L, 4L, 3L, 5L]) == [1L,\
    \ 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_ebhuypt.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    long[] result;\n    foreach(n; numbers)\n    {\n        if(n in result)\n\
    \            continue;\n        result ~= n;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = remove_duplicates;\n\n    assert(candidate([]) == []);\n\
    \    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([1L,\
    \ 2L, 3L, 2L, 4L, 3L, 5L]) == [1L, 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxd5n8cdb.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    auto result = new long[];\n    foreach(n; numbers)\n    {\n       \
    \ if(count(numbers, n) == 1)\n        {\n            result ~= n;\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_duplicates;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([1L, 2L, 3L, 4L]) ==\
    \ [1L, 2L, 3L, 4L]);\n    assert(candidate([1L, 2L, 3L, 2L, 4L, 3L, 5L]) == [1L,\
    \ 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdimqpsn6.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    long[] result;\n    foreach(n; numbers) \n    {\n        if(n in result)\
    \ \n        {\n            result -= n;\n        } \n        else \n        {\n\
    \            result ~= n;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = remove_duplicates;\n\n    assert(candidate([]) == []);\n\
    \    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([1L,\
    \ 2L, 3L, 2L, 4L, 3L, 5L]) == [1L, 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpe6p5l7i1.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    auto result = new long[];\n    foreach(n; numbers)\n    {\n       \
    \ if(count(numbers, n) == 1)\n        {\n            result ~= n;\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_duplicates;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([1L, 2L, 3L, 4L]) ==\
    \ [1L, 2L, 3L, 4L]);\n    assert(candidate([1L, 2L, 3L, 2L, 4L, 3L, 5L]) == [1L,\
    \ 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdimqpsn6.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    auto result = new long[];\n    foreach(n; numbers)\n    {\n       \
    \ if(result.count(n) == 0)\n        {\n            result ~= n;\n        }\n \
    \   }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_duplicates;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([1L, 2L, 3L, 4L]) ==\
    \ [1L, 2L, 3L, 4L]);\n    assert(candidate([1L, 2L, 3L, 2L, 4L, 3L, 5L]) == [1L,\
    \ 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnfaa3rtn.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    long[] result;\n    foreach(n; numbers)\n    {\n        if(n in result)\n\
    \            continue;\n        result ~= n;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = remove_duplicates;\n\n    assert(candidate([]) == []);\n\
    \    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([1L,\
    \ 2L, 3L, 2L, 4L, 3L, 5L]) == [1L, 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxd5n8cdb.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    auto result = new long[];\n    foreach(n; numbers)\n    {\n       \
    \ if(count(numbers, n) == 1)\n        {\n            result ~= n;\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_duplicates;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([1L, 2L, 3L, 4L]) ==\
    \ [1L, 2L, 3L, 4L]);\n    assert(candidate([1L, 2L, 3L, 2L, 4L, 3L, 5L]) == [1L,\
    \ 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdimqpsn6.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    auto result = new long[];\n    foreach(n; numbers)\n    {\n       \
    \ if(count(numbers, n) == 1)\n        {\n            result ~= n;\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_duplicates;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([1L, 2L, 3L, 4L]) ==\
    \ [1L, 2L, 3L, 4L]);\n    assert(candidate([1L, 2L, 3L, 2L, 4L, 3L, 5L]) == [1L,\
    \ 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdimqpsn6.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    auto result = new long[];\n    foreach(n; numbers)\n    {\n       \
    \ if(!result.canFind(n))\n            result ~= n;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_duplicates;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([1L,\
    \ 2L, 3L, 2L, 4L, 3L, 5L]) == [1L, 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpga9rmsaf.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    long[] result;\n    foreach(n; numbers)\n    {\n        if(!result.canFind(n))\n\
    \            result ~= n;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = remove_duplicates;\n\n    assert(candidate([]) == []);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([1L, 2L, 3L, 2L, 4L,\
    \ 3L, 5L]) == [1L, 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbv9inpzk.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    long[] result = [];\n    foreach(n; numbers)\n    {\n        if(!result.canFind(n))\n\
    \        {\n            result ~= n;\n        }\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = remove_duplicates;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([1L,\
    \ 2L, 3L, 2L, 4L, 3L, 5L]) == [1L, 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnrupnous.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    long[] result = new long[];\n    foreach(n; numbers)\n    {\n     \
    \   if(!result.canFind(n))\n        {\n            result ~= n;\n        }\n \
    \   }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_duplicates;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([1L, 2L, 3L, 4L]) ==\
    \ [1L, 2L, 3L, 4L]);\n    assert(candidate([1L, 2L, 3L, 2L, 4L, 3L, 5L]) == [1L,\
    \ 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpp48kum24.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    long[] result;\n    foreach(n; numbers)\n    {\n        if(n in result)\n\
    \            continue;\n        result ~= n;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = remove_duplicates;\n\n    assert(candidate([]) == []);\n\
    \    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([1L,\
    \ 2L, 3L, 2L, 4L, 3L, 5L]) == [1L, 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxd5n8cdb.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    long[] result;\n    foreach(n; numbers)\n    {\n        if(!result.canFind(n))\n\
    \            result ~= n;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = remove_duplicates;\n\n    assert(candidate([]) == []);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([1L, 2L, 3L, 2L, 4L,\
    \ 3L, 5L]) == [1L, 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbv9inpzk.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    long[] result = new long[];\n    foreach(n; numbers)\n    {\n     \
    \   if(n in result)\n            continue;\n        result ~= n;\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = remove_duplicates;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([1L,\
    \ 2L, 3L, 2L, 4L, 3L, 5L]) == [1L, 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmf725em7.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    long[] result;\n    foreach(n; numbers)\n    {\n        if(count(numbers,\
    \ n) == 1)\n        {\n            result ~= n;\n        }\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = remove_duplicates;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([1L,\
    \ 2L, 3L, 2L, 4L, 3L, 5L]) == [1L, 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpw4vnold_.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    long[] result;\n    foreach(n; numbers)\n    {\n        if(!result.canFind(n))\n\
    \        {\n            result ~= n;\n        }\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = remove_duplicates;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([1L,\
    \ 2L, 3L, 2L, 4L, 3L, 5L]) == [1L, 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4c3rb2c8.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    auto result = new long[];\n    auto seen = new bool[];\n    foreach(n;\
    \ numbers)\n    {\n        if (seen[n])\n            continue;\n        seen[n]\
    \ = true;\n        result ~= n;\n    }\n    return result;\n}\nunittest\n{\n \
    \   alias candidate = remove_duplicates;\n\n    assert(candidate([]) == []);\n\
    \    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([1L,\
    \ 2L, 3L, 2L, 4L, 3L, 5L]) == [1L, 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplv5mh5vw.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    auto result = new long[];\n    foreach(n; numbers)\n    {\n       \
    \ if(!result.canFind(n))\n            result ~= n;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_duplicates;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([1L,\
    \ 2L, 3L, 2L, 4L, 3L, 5L]) == [1L, 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpga9rmsaf.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    long[] result;\n    foreach(n; numbers)\n    {\n        if(!result.canFind(n))\n\
    \        {\n            result ~= n;\n        }\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = remove_duplicates;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([1L,\
    \ 2L, 3L, 2L, 4L, 3L, 5L]) == [1L, 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4c3rb2c8.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    long[] result;\n    foreach(n; numbers)\n    {\n        if(!result.canFind(n))\n\
    \        {\n            result ~= n;\n        }\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = remove_duplicates;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([1L,\
    \ 2L, 3L, 2L, 4L, 3L, 5L]) == [1L, 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4c3rb2c8.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    auto result = new long[];\n    foreach(n; numbers)\n    {\n       \
    \ if(count(numbers, n) == 1)\n        {\n            result ~= n;\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_duplicates;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([1L, 2L, 3L, 4L]) ==\
    \ [1L, 2L, 3L, 4L]);\n    assert(candidate([1L, 2L, 3L, 2L, 4L, 3L, 5L]) == [1L,\
    \ 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdimqpsn6.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    long[] result;\n    foreach(n; numbers)\n    {\n        if(n in result)\n\
    \            continue;\n        result ~= n;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = remove_duplicates;\n\n    assert(candidate([]) == []);\n\
    \    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([1L,\
    \ 2L, 3L, 2L, 4L, 3L, 5L]) == [1L, 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxd5n8cdb.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    auto result = new long[];\n    foreach(n; numbers)\n    {\n       \
    \ if(count(numbers, n) == 1)\n        {\n            result ~= n;\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_duplicates;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([1L, 2L, 3L, 4L]) ==\
    \ [1L, 2L, 3L, 4L]);\n    assert(candidate([1L, 2L, 3L, 2L, 4L, 3L, 5L]) == [1L,\
    \ 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdimqpsn6.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    long[] result;\n    foreach(n; numbers)\n    {\n        if(n in result)\n\
    \            continue;\n        result ~= n;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = remove_duplicates;\n\n    assert(candidate([]) == []);\n\
    \    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([1L,\
    \ 2L, 3L, 2L, 4L, 3L, 5L]) == [1L, 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxd5n8cdb.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    long[] result;\n    foreach(n; numbers)\n    {\n        if(n in result)\n\
    \            continue;\n        else\n            result ~= n;\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = remove_duplicates;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([1L,\
    \ 2L, 3L, 2L, 4L, 3L, 5L]) == [1L, 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1s0lbh4d.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    long[] result;\n    foreach(n; numbers)\n    {\n        if(n in result)\n\
    \            continue;\n        else\n            result ~= n;\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = remove_duplicates;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([1L,\
    \ 2L, 3L, 2L, 4L, 3L, 5L]) == [1L, 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1s0lbh4d.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    long[] result = new long[];\n    foreach(n; numbers)\n    {\n     \
    \   if(count(numbers, n) == 1)\n        {\n            result ~= n;\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_duplicates;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([1L, 2L, 3L, 4L]) ==\
    \ [1L, 2L, 3L, 4L]);\n    assert(candidate([1L, 2L, 3L, 2L, 4L, 3L, 5L]) == [1L,\
    \ 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpme1kgla1.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    long[] result = [];\n    foreach(n; numbers)\n    {\n        if(!result.canFind(n))\n\
    \        {\n            result ~= n;\n        }\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = remove_duplicates;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([1L,\
    \ 2L, 3L, 2L, 4L, 3L, 5L]) == [1L, 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnrupnous.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    auto result = new long[];\n    foreach(n; numbers)\n    {\n       \
    \ if(count(numbers, n) == 1)\n        {\n            result ~= n;\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_duplicates;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([1L, 2L, 3L, 4L]) ==\
    \ [1L, 2L, 3L, 4L]);\n    assert(candidate([1L, 2L, 3L, 2L, 4L, 3L, 5L]) == [1L,\
    \ 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdimqpsn6.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    long[] result;\n    foreach(i; numbers)\n    {\n        if(!result.canFind(i))\n\
    \        {\n            result ~= i;\n        }\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = remove_duplicates;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([1L,\
    \ 2L, 3L, 2L, 4L, 3L, 5L]) == [1L, 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2yfvpxf2.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    auto result = new long[];\n    foreach(n; numbers)\n    {\n       \
    \ if(count(numbers, n) == 1)\n        {\n            result ~= n;\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_duplicates;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([1L, 2L, 3L, 4L]) ==\
    \ [1L, 2L, 3L, 4L]);\n    assert(candidate([1L, 2L, 3L, 2L, 4L, 3L, 5L]) == [1L,\
    \ 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdimqpsn6.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    auto result = new long[];\n    foreach(n; numbers)\n    {\n       \
    \ if(!result.count(n))\n            result ~= n;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_duplicates;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([1L,\
    \ 2L, 3L, 2L, 4L, 3L, 5L]) == [1L, 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpw2ex3fr9.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    long[] result;\n    foreach(n; numbers)\n    {\n        if(n in result)\n\
    \            continue;\n        result ~= n;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = remove_duplicates;\n\n    assert(candidate([]) == []);\n\
    \    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([1L,\
    \ 2L, 3L, 2L, 4L, 3L, 5L]) == [1L, 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxd5n8cdb.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    long[] result = new long[];\n    foreach(n; numbers)\n    {\n     \
    \   if(numbers.count(n) == 1)\n        {\n            result ~= n;\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_duplicates;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([1L, 2L, 3L, 4L]) ==\
    \ [1L, 2L, 3L, 4L]);\n    assert(candidate([1L, 2L, 3L, 2L, 4L, 3L, 5L]) == [1L,\
    \ 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_ebhuypt.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    auto result = new long[];\n    foreach(n; numbers)\n    {\n       \
    \ if(result.count(n) == 0)\n        {\n            result ~= n;\n        }\n \
    \   }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_duplicates;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([1L, 2L, 3L, 4L]) ==\
    \ [1L, 2L, 3L, 4L]);\n    assert(candidate([1L, 2L, 3L, 2L, 4L, 3L, 5L]) == [1L,\
    \ 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnfaa3rtn.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    long[] result = [];\n    foreach(n; numbers)\n    {\n        if(count(numbers,\
    \ n) == 1)\n        {\n            result ~= n;\n        }\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = remove_duplicates;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([1L,\
    \ 2L, 3L, 2L, 4L, 3L, 5L]) == [1L, 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdds6yu9m.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    long[] result = new long[];\n    foreach(n; numbers)\n    {\n     \
    \   if(n in result)\n            continue;\n        result ~= n;\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = remove_duplicates;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([1L,\
    \ 2L, 3L, 2L, 4L, 3L, 5L]) == [1L, 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmf725em7.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    long[] result;\n    foreach(n; numbers)\n    {\n        if(n in result)\n\
    \            continue;\n        result ~= n;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = remove_duplicates;\n\n    assert(candidate([]) == []);\n\
    \    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([1L,\
    \ 2L, 3L, 2L, 4L, 3L, 5L]) == [1L, 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxd5n8cdb.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    long[] result = [];\n    foreach(n; numbers)\n    {\n        if(n in\
    \ result)\n            continue;\n        result ~= n;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_duplicates;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([1L,\
    \ 2L, 3L, 2L, 4L, 3L, 5L]) == [1L, 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4vg2v6ax.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    auto result = new long[];\n    foreach(n; numbers)\n    {\n       \
    \ if(!result.count(n))\n            result ~= n;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_duplicates;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([1L,\
    \ 2L, 3L, 2L, 4L, 3L, 5L]) == [1L, 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpw2ex3fr9.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    long[] result;\n    foreach(n; numbers)\n    {\n        if(n in result)\n\
    \            continue;\n        result ~= n;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = remove_duplicates;\n\n    assert(candidate([]) == []);\n\
    \    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([1L,\
    \ 2L, 3L, 2L, 4L, 3L, 5L]) == [1L, 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxd5n8cdb.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    long[] result;\n    foreach(n; numbers)\n    {\n        if(!result.canFind(n))\n\
    \        {\n            result ~= n;\n        }\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = remove_duplicates;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([1L,\
    \ 2L, 3L, 2L, 4L, 3L, 5L]) == [1L, 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4c3rb2c8.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    long[] result;\n    foreach(n; numbers)\n    {\n        if(n in result)\n\
    \            continue;\n        result ~= n;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = remove_duplicates;\n\n    assert(candidate([]) == []);\n\
    \    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([1L,\
    \ 2L, 3L, 2L, 4L, 3L, 5L]) == [1L, 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxd5n8cdb.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    long[] result;\n    foreach(n; numbers)\n    {\n        if(!result.canFind(n))\n\
    \        {\n            result ~= n;\n        }\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = remove_duplicates;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([1L,\
    \ 2L, 3L, 2L, 4L, 3L, 5L]) == [1L, 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4c3rb2c8.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    long[] result = new long[0];\n    foreach(i; numbers)\n    {\n    \
    \    if(!result.canFind(i))\n        {\n            result ~= i;\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_duplicates;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([1L, 2L, 3L, 4L]) ==\
    \ [1L, 2L, 3L, 4L]);\n    assert(candidate([1L, 2L, 3L, 2L, 4L, 3L, 5L]) == [1L,\
    \ 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpopz6q5_w.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    long[] result;\n    foreach(n; numbers)\n    {\n        if(n in result)\n\
    \            continue;\n        result ~= n;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = remove_duplicates;\n\n    assert(candidate([]) == []);\n\
    \    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([1L,\
    \ 2L, 3L, 2L, 4L, 3L, 5L]) == [1L, 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxd5n8cdb.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    long[] result = new long[];\n    foreach(n; numbers)\n    {\n     \
    \   if(n in result)\n            continue;\n        result ~= n;\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = remove_duplicates;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([1L,\
    \ 2L, 3L, 2L, 4L, 3L, 5L]) == [1L, 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmf725em7.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    auto result = new long[];\n    auto seen = new bool[];\n    foreach(num;\
    \ numbers)\n    {\n        if(!seen[num])\n        {\n            seen[num] =\
    \ true;\n            result ~= num;\n        }\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = remove_duplicates;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([1L,\
    \ 2L, 3L, 2L, 4L, 3L, 5L]) == [1L, 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpw3nwz5ds.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    auto result = new long[];\n    foreach(n; numbers)\n    {\n       \
    \ if(!result.count(n))\n            result ~= n;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_duplicates;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([1L,\
    \ 2L, 3L, 2L, 4L, 3L, 5L]) == [1L, 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpw2ex3fr9.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    long[] result;\n    foreach(n; numbers)\n    {\n        if(count(numbers,\
    \ n) == 1)\n        {\n            result ~= n;\n        }\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = remove_duplicates;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([1L,\
    \ 2L, 3L, 2L, 4L, 3L, 5L]) == [1L, 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpw4vnold_.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    long[] result = new long[0];\n    foreach(n; numbers)\n    {\n    \
    \    if(numbers.count(n) == 1)\n        {\n            result ~= n;\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_duplicates;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([1L, 2L, 3L, 4L]) ==\
    \ [1L, 2L, 3L, 4L]);\n    assert(candidate([1L, 2L, 3L, 2L, 4L, 3L, 5L]) == [1L,\
    \ 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpulm7n9s0.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    long[] result = new long[0];\n    foreach(n; numbers)\n    {\n    \
    \    if(n in result)\n            continue;\n        result ~= n;\n    }\n   \
    \ return result;\n}\nunittest\n{\n    alias candidate = remove_duplicates;\n\n\
    \    assert(candidate([]) == []);\n    assert(candidate([1L, 2L, 3L, 4L]) == [1L,\
    \ 2L, 3L, 4L]);\n    assert(candidate([1L, 2L, 3L, 2L, 4L, 3L, 5L]) == [1L, 4L,\
    \ 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1yv9ltn2.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    auto result = new long[];\n    foreach(n; numbers)\n    {\n       \
    \ if(!result.canFind(n))\n            result ~= n;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_duplicates;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([1L,\
    \ 2L, 3L, 2L, 4L, 3L, 5L]) == [1L, 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpga9rmsaf.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    long[] result;\n    foreach(n; numbers)\n    {\n        if(n in result)\n\
    \            continue;\n        else\n            result ~= n;\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = remove_duplicates;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([1L,\
    \ 2L, 3L, 2L, 4L, 3L, 5L]) == [1L, 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1s0lbh4d.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    long[] result = new long[];\n    foreach(n; numbers)\n    {\n     \
    \   if(n in result)\n            continue;\n        result ~= n;\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = remove_duplicates;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([1L,\
    \ 2L, 3L, 2L, 4L, 3L, 5L]) == [1L, 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmf725em7.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    long[] result;\n    foreach(n; numbers)\n    {\n        if(n in result)\n\
    \            continue;\n        else\n            result ~= n;\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = remove_duplicates;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([1L,\
    \ 2L, 3L, 2L, 4L, 3L, 5L]) == [1L, 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1s0lbh4d.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    long[] result;\n    foreach(n; numbers)\n    {\n        if(!result.canFind(n))\n\
    \            result ~= n;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = remove_duplicates;\n\n    assert(candidate([]) == []);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([1L, 2L, 3L, 2L, 4L,\
    \ 3L, 5L]) == [1L, 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbv9inpzk.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    //long[] result;\n    //long[] temp;\n    //long[] temp2;\n    //long[]\
    \ temp3;\n    //long[] temp4;\n    //long[] temp5;\n    //long[] temp6;\n    //long[]\
    \ temp7;\n    //long[] temp8;\n    //long[] temp9;\n    //long[] temp10;\n   \
    \ //long[] temp11;\n    //long[] temp12;\n    //long[] temp13;\n    //long[] temp14;\n\
    \    //long[] temp15;\n    //long[] temp16;\n    //long[] temp17;\n    //long[]\
    \ temp18;\n    //long[] temp19;\n    //long[] temp20;\n    //long[] temp21;\n\
    \    //long[] temp22;\n    //long[] temp23;\n    //long[] temp24;\n    //long[]\
    \ temp25;\n    //long[] temp26;\n    //long[] temp27;\n    //long[] temp28;\n\
    \    //long[] temp29;\n    //long[] temp30;\n    //long[] temp31;\n    //long[]\
    \ temp32;\n    //long[] temp33;\n    //long[] temp34;\n    //long[] temp35;\n\
    \    //long[] temp36;\n    //long[] temp37;\n    //long[] temp38;\n    //long[]\
    \ temp39;\n    //long[] temp40;\n    //long[] temp41;\n    //long[] temp42;\n\
    \    //long[] temp43;\n    //long[] temp44;\n    //long[] temp45;\n    //long[]\
    \ temp46;\n    //long[] temp47;\n    //long[] temp48;\n    //long[] temp49;\n\
    \    //long[] temp50;\n    //long[] temp51;\n    //long[] temp52;\n    //long[]\
    \ temp53;\n    //long[] temp54;\n    //long[] temp55;\n    //long[] temp56;\n\
    \    //long[] temp57;\n    //long[] temp58;\n    //long[] temp59;\n    //long[]\
    \ temp60;\n    //long[] temp61;\n    //long[] temp62;\n    //long[] temp63;\n\
    unittest\n{\n    alias candidate = remove_duplicates;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([1L,\
    \ 2L, 3L, 2L, 4L, 3L, 5L]) == [1L, 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpdj39tmng.d(74): Error: found \''unittest\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdj39tmng.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    long[] result;\n    foreach(n; numbers)\n    {\n        if(n in result)\n\
    \            continue;\n        result ~= n;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = remove_duplicates;\n\n    assert(candidate([]) == []);\n\
    \    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([1L,\
    \ 2L, 3L, 2L, 4L, 3L, 5L]) == [1L, 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxd5n8cdb.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    return numbers.dup.sort().unique;\n}\nunittest\n{\n    alias candidate\
    \ = remove_duplicates;\n\n    assert(candidate([]) == []);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([1L, 2L, 3L, 2L, 4L,\
    \ 3L, 5L]) == [1L, 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5h0sjkn3.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    auto result = new long[];\n    foreach(num; numbers)\n    {\n     \
    \   if(count(numbers, num) == 1)\n        {\n            result ~= num;\n    \
    \    }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_duplicates;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([1L, 2L, 3L, 4L]) ==\
    \ [1L, 2L, 3L, 4L]);\n    assert(candidate([1L, 2L, 3L, 2L, 4L, 3L, 5L]) == [1L,\
    \ 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplwil8yt5.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    auto result = new long[];\n    foreach(n; numbers)\n    {\n       \
    \ if(numbers.count(n) == 1)\n        {\n            result ~= n;\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_duplicates;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([1L, 2L, 3L, 4L]) ==\
    \ [1L, 2L, 3L, 4L]);\n    assert(candidate([1L, 2L, 3L, 2L, 4L, 3L, 5L]) == [1L,\
    \ 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1nzjwp9f.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    long[] result;\n    foreach(n; numbers)\n    {\n        if(numbers.count(n)\
    \ == 1)\n        {\n            result ~= n;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_duplicates;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([1L,\
    \ 2L, 3L, 2L, 4L, 3L, 5L]) == [1L, 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfx6g2_4w.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    long[] result;\n    foreach(n; numbers)\n    {\n        if(n in result)\n\
    \            continue;\n        result ~= n;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = remove_duplicates;\n\n    assert(candidate([]) == []);\n\
    \    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([1L,\
    \ 2L, 3L, 2L, 4L, 3L, 5L]) == [1L, 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxd5n8cdb.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    long[] result;\n    foreach(n; numbers)\n    {\n        if(count(numbers,\
    \ n) == 1)\n        {\n            result ~= n;\n        }\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = remove_duplicates;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([1L,\
    \ 2L, 3L, 2L, 4L, 3L, 5L]) == [1L, 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpw4vnold_.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    auto result = new long[];\n    foreach(n; numbers)\n    {\n       \
    \ if(!result.canFind(n))\n            result ~= n;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_duplicates;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([1L,\
    \ 2L, 3L, 2L, 4L, 3L, 5L]) == [1L, 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpga9rmsaf.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    long[] result = new long[0];\n    foreach(n; numbers)\n    {\n    \
    \    if(n in result)\n            continue;\n        result ~= n;\n    }\n   \
    \ return result;\n}\nunittest\n{\n    alias candidate = remove_duplicates;\n\n\
    \    assert(candidate([]) == []);\n    assert(candidate([1L, 2L, 3L, 4L]) == [1L,\
    \ 2L, 3L, 4L]);\n    assert(candidate([1L, 2L, 3L, 2L, 4L, 3L, 5L]) == [1L, 4L,\
    \ 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1yv9ltn2.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    auto result = new long[];\n    foreach(n; numbers)\n    {\n       \
    \ if(count(numbers, n) == 1)\n        {\n            result ~= n;\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_duplicates;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([1L, 2L, 3L, 4L]) ==\
    \ [1L, 2L, 3L, 4L]);\n    assert(candidate([1L, 2L, 3L, 2L, 4L, 3L, 5L]) == [1L,\
    \ 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdimqpsn6.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    auto result = new long[];\n    foreach(n; numbers)\n    {\n       \
    \ if(!result.count(n))\n            result ~= n;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_duplicates;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([1L,\
    \ 2L, 3L, 2L, 4L, 3L, 5L]) == [1L, 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpw2ex3fr9.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    long[] result;\n    foreach(n; numbers)\n    {\n        if(n in result)\n\
    \            continue;\n        result ~= n;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = remove_duplicates;\n\n    assert(candidate([]) == []);\n\
    \    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([1L,\
    \ 2L, 3L, 2L, 4L, 3L, 5L]) == [1L, 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxd5n8cdb.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    auto result = new long[];\n    foreach(n; numbers)\n    {\n       \
    \ if(!result.canFind(n))\n            result ~= n;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_duplicates;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([1L,\
    \ 2L, 3L, 2L, 4L, 3L, 5L]) == [1L, 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpga9rmsaf.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    long[] result;\n    foreach(n; numbers)\n    {\n        if(n in result)\n\
    \            continue;\n        result ~= n;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = remove_duplicates;\n\n    assert(candidate([]) == []);\n\
    \    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([1L,\
    \ 2L, 3L, 2L, 4L, 3L, 5L]) == [1L, 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxd5n8cdb.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    auto result = new long[];\n    foreach(n; numbers)\n    {\n       \
    \ if(!result.canFind(n))\n            result ~= n;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_duplicates;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([1L,\
    \ 2L, 3L, 2L, 4L, 3L, 5L]) == [1L, 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpga9rmsaf.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    long[] result = [];\n    foreach(n; numbers)\n    {\n        if(n in\
    \ result)\n            continue;\n        result ~= n;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_duplicates;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([1L,\
    \ 2L, 3L, 2L, 4L, 3L, 5L]) == [1L, 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4vg2v6ax.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    long[] result;\n    foreach(n; numbers)\n    {\n        if(n in result)\n\
    \            continue;\n        result ~= n;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = remove_duplicates;\n\n    assert(candidate([]) == []);\n\
    \    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([1L,\
    \ 2L, 3L, 2L, 4L, 3L, 5L]) == [1L, 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxd5n8cdb.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    auto result = new long[];\n    foreach(i; numbers)\n    {\n       \
    \ if(count(numbers, i) == 1)\n        {\n            result ~= i;\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_duplicates;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([1L, 2L, 3L, 4L]) ==\
    \ [1L, 2L, 3L, 4L]);\n    assert(candidate([1L, 2L, 3L, 2L, 4L, 3L, 5L]) == [1L,\
    \ 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpb88q_36i.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    long[] result = new long[0];\n    long[] temp = new long[0];\n    foreach(n;\
    \ numbers)\n    {\n        if(n in temp)\n        {\n            continue;\n \
    \       }\n        else\n        {\n            temp ~= n;\n            result\
    \ ~= n;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = remove_duplicates;\n\n    assert(candidate([]) == []);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([1L, 2L, 3L, 2L, 4L,\
    \ 3L, 5L]) == [1L, 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpeef0a1k9.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    auto result = numbers.dup;\n    result.sort;\n    result.erase(result.unique);\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = remove_duplicates;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([1L, 2L, 3L, 4L]) ==\
    \ [1L, 2L, 3L, 4L]);\n    assert(candidate([1L, 2L, 3L, 2L, 4L, 3L, 5L]) == [1L,\
    \ 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_2zqz91w.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    auto result = new long[];\n    foreach(n; numbers)\n    {\n       \
    \ if(!result.count(n))\n            result ~= n;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_duplicates;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([1L,\
    \ 2L, 3L, 2L, 4L, 3L, 5L]) == [1L, 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpw2ex3fr9.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    auto result = new long[];\n    foreach(n; numbers)\n    {\n       \
    \ if(!result.canFind(n))\n            result ~= n;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_duplicates;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([1L,\
    \ 2L, 3L, 2L, 4L, 3L, 5L]) == [1L, 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpga9rmsaf.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    long[] result = new long[];\n    foreach(n; numbers)\n    {\n     \
    \   if(n in result)\n            continue;\n        result ~= n;\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = remove_duplicates;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([1L,\
    \ 2L, 3L, 2L, 4L, 3L, 5L]) == [1L, 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmf725em7.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    long[] result;\n    foreach(n; numbers)\n    {\n        if(numbers.count(n)\
    \ == 1)\n        {\n            result ~= n;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_duplicates;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([1L,\
    \ 2L, 3L, 2L, 4L, 3L, 5L]) == [1L, 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfx6g2_4w.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    auto result = new long[];\n    foreach(n; numbers)\n    {\n       \
    \ if(!result.canFind(n))\n            result ~= n;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_duplicates;\n\n    assert(candidate([])\
    \ == []);\n    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([1L,\
    \ 2L, 3L, 2L, 4L, 3L, 5L]) == [1L, 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpga9rmsaf.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    auto result = new long[];\n    foreach(i; numbers)\n    {\n       \
    \ if(!result.canFind(i))\n        {\n            result ~= i;\n        }\n   \
    \ }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_duplicates;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([1L, 2L, 3L, 4L]) ==\
    \ [1L, 2L, 3L, 4L]);\n    assert(candidate([1L, 2L, 3L, 2L, 4L, 3L, 5L]) == [1L,\
    \ 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjs7f1mr0.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    auto result = new long[];\n    foreach(n; numbers) \n    {\n      \
    \  if(!result.canFind(n)) \n        {\n            result ~= n;\n        }\n \
    \   }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_duplicates;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([1L, 2L, 3L, 4L]) ==\
    \ [1L, 2L, 3L, 4L]);\n    assert(candidate([1L, 2L, 3L, 2L, 4L, 3L, 5L]) == [1L,\
    \ 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpaxyujedu.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    long[] result;\n    foreach(n; numbers)\n    {\n        if(n in result)\n\
    \            continue;\n        result ~= n;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = remove_duplicates;\n\n    assert(candidate([]) == []);\n\
    \    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([1L,\
    \ 2L, 3L, 2L, 4L, 3L, 5L]) == [1L, 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxd5n8cdb.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    auto result = new long[];\n    auto seen = new bool[];\n    foreach(n;\
    \ numbers)\n    {\n        if(seen[n])\n            continue;\n        seen[n]\
    \ = true;\n        result ~= n;\n    }\n    return result;\n}\nunittest\n{\n \
    \   alias candidate = remove_duplicates;\n\n    assert(candidate([]) == []);\n\
    \    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([1L,\
    \ 2L, 3L, 2L, 4L, 3L, 5L]) == [1L, 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6dcuvfh2.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n From a list of integers,\
    \ remove all elements that occur more than once.\n    Keep order of elements left\
    \ the same as in the input.\n        \n*/\nlong[] remove_duplicates(long[] numbers)\
    \ \n{\n    long[] result = new long[0];\n    foreach(n; numbers)\n    {\n    \
    \    if(n in result)\n            continue;\n        else\n            result\
    \ ~= n;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_duplicates;\n\
    \n    assert(candidate([]) == []);\n    assert(candidate([1L, 2L, 3L, 4L]) ==\
    \ [1L, 2L, 3L, 4L]);\n    assert(candidate([1L, 2L, 3L, 2L, 4L, 3L, 5L]) == [1L,\
    \ 4L, 5L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpklr7i5os.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979302
